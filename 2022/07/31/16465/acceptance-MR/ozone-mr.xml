<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 5.0.1 (Python 3.6.9 on linux)" generated="20220731 01:27:05.958" rpa="false" schemaversion="3">
<suite id="s1" name="ozone-mr">
<suite id="s1-s1" name="hadoop27">
<suite id="s1-s1-s1" name="hadoopfs-o3fs" source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot">
<test id="s1-s1-s1-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220731 01:07:27.486" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220731 01:07:27.486" endtime="20220731 01:07:27.486"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220731 01:07:27.487" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220731 01:07:27.487" endtime="20220731 01:07:27.487"/>
</kw>
<status status="PASS" starttime="20220731 01:07:27.485" endtime="20220731 01:07:27.487"/>
</kw>
<msg timestamp="20220731 01:07:27.487" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220731 01:07:27.485" endtime="20220731 01:07:27.487"/>
</kw>
<status status="PASS" starttime="20220731 01:07:27.484" endtime="20220731 01:07:27.488"/>
</kw>
<msg timestamp="20220731 01:07:27.488" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20220731 01:07:27.484" endtime="20220731 01:07:27.488"/>
</kw>
<msg timestamp="20220731 01:07:27.488" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20220731 01:07:27.482" endtime="20220731 01:07:27.488"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220731 01:07:27.488" level="INFO">${random} = 51594</msg>
<status status="PASS" starttime="20220731 01:07:27.488" endtime="20220731 01:07:27.488"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220731 01:07:27.495" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-51594 2&gt;&amp;1'.</msg>
<msg timestamp="20220731 01:07:30.757" level="INFO">${rc} = 0</msg>
<msg timestamp="20220731 01:07:30.757" level="INFO">${output} = 2022-07-31 01:07:29 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2022-07-31 01:07:29 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2022-07-31 ...</msg>
<status status="PASS" starttime="20220731 01:07:27.490" endtime="20220731 01:07:30.757"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220731 01:07:30.759" level="INFO">2022-07-31 01:07:29 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2022-07-31 01:07:29 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2022-07-31 01:07:29 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2022-07-31 01:07:29 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20220731 01:07:30.758" endtime="20220731 01:07:30.759"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220731 01:07:30.759" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220731 01:07:30.759" endtime="20220731 01:07:30.759"/>
</kw>
<status status="PASS" starttime="20220731 01:07:27.489" endtime="20220731 01:07:30.760"/>
</kw>
<msg timestamp="20220731 01:07:30.760" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220731 01:07:27.489" endtime="20220731 01:07:30.760"/>
</kw>
<msg timestamp="20220731 01:07:30.760" level="INFO">${result} = 2022-07-31 01:07:29 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2022-07-31 01:07:29 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2022-07-31 ...</msg>
<status status="PASS" starttime="20220731 01:07:27.489" endtime="20220731 01:07:30.760"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>multiple SLF4J bindings</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220731 01:07:30.760" endtime="20220731 01:07:30.760"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -ls ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220731 01:07:30.764" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20220731 01:07:33.174" level="INFO">${rc} = 0</msg>
<msg timestamp="20220731 01:07:33.174" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2022-07-31 01:07 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2022-07-31 01:07 o3fs://bucket1.volume1.om/ozone-51594
dr...</msg>
<status status="PASS" starttime="20220731 01:07:30.762" endtime="20220731 01:07:33.174"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220731 01:07:33.175" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2022-07-31 01:07 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2022-07-31 01:07 o3fs://bucket1.volume1.om/ozone-51594
drwxrwxrwx   - hadoop hadoop          0 2022-07-31 01:07 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20220731 01:07:33.174" endtime="20220731 01:07:33.175"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220731 01:07:33.176" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220731 01:07:33.175" endtime="20220731 01:07:33.176"/>
</kw>
<status status="PASS" starttime="20220731 01:07:30.761" endtime="20220731 01:07:33.176"/>
</kw>
<msg timestamp="20220731 01:07:33.176" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220731 01:07:30.761" endtime="20220731 01:07:33.176"/>
</kw>
<msg timestamp="20220731 01:07:33.176" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2022-07-31 01:07 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2022-07-31 01:07 o3fs://bucket1.volume1.om/ozone-51594
dr...</msg>
<status status="PASS" starttime="20220731 01:07:30.761" endtime="20220731 01:07:33.176"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220731 01:07:33.176" endtime="20220731 01:07:33.177"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -cat ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220731 01:07:33.181" level="INFO">Running command 'hdfs dfs -cat o3fs://bucket1.volume1.om//ozone-51594 2&gt;&amp;1'.</msg>
<msg timestamp="20220731 01:07:36.259" level="INFO">${rc} = 0</msg>
<msg timestamp="20220731 01:07:36.259" level="INFO">${output} = 2022-07-31 01:07:34 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2022-07-31 01:07:34 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2022-07-31 ...</msg>
<status status="PASS" starttime="20220731 01:07:33.178" endtime="20220731 01:07:36.259"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220731 01:07:36.260" level="INFO">2022-07-31 01:07:34 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2022-07-31 01:07:34 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2022-07-31 01:07:34 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
This product includes software developed by The Apache Software
Foundation (http://www.apache.org/).

The binary distribution of this product bundles binaries of
org.iq80.leveldb:leveldb-api (https://github.com/dain/leveldb), which has the
following notices:
* Copyright 2011 Dain Sundstrom &lt;dain@iq80.com&gt;
* Copyright 2011 FuseSource Corp. http://fusesource.com

The binary distribution of this product bundles binaries of
org.fusesource.hawtjni:hawtjni-runtime (https://github.com/fusesource/hawtjni),
which has the following notices:
* This product includes software developed by FuseSource Corp.
  http://fusesource.com
* This product includes software developed at
  Progress Software Corporation and/or its  subsidiaries or affiliates.
* This product includes software developed by IBM Corporation and others.

The binary distribution of this product bundles binaries of
Gson 2.2.4,
which has the following notices:

                            The Netty Project
                            =================

Please visit the Netty web site for more information:

  * http://netty.io/

Copyright 2014 The Netty Project

The Netty Project licenses this file to you under the Apache License,
version 2.0 (the "License"); you may not use this file except in compliance
with the License. You may obtain a copy of the License at:

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
License for the specific language governing permissions and limitations
under the License.

Also, please refer to each LICENSE.&lt;component&gt;.txt file, which is located in
the 'license' directory of the distribution file, for the license terms of the
components that this product depends on.

-------------------------------------------------------------------------------
This product contains the extensions to Java Collections Framework which has
been derived from the works by JSR-166 EG, Doug Lea, and Jason T. Greene:

  * LICENSE:
    * license/LICENSE.jsr166y.txt (Public Domain)
  * HOMEPAGE:
    * http://gee.cs.oswego.edu/cgi-bin/viewcvs.cgi/jsr166/
    * http://viewvc.jboss.org/cgi-bin/viewvc.cgi/jbosscache/experimental/jsr166/

This product contains a modified version of Robert Harder's Public Domain
Base64 Encoder and Decoder, which can be obtained at:

  * LICENSE:
    * license/LICENSE.base64.txt (Public Domain)
  * HOMEPAGE:
    * http://iharder.sourceforge.net/current/java/base64/

This product contains a modified portion of 'Webbit', an event based
WebSocket and HTTP server, which can be obtained at:

  * LICENSE:
    * license/LICENSE.webbit.txt (BSD License)
  * HOMEPAGE:
    * https://github.com/joewalnes/webbit

This product contains a modified portion of 'SLF4J', a simple logging
facade for Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.slf4j.txt (MIT License)
  * HOMEPAGE:
    * http://www.slf4j.org/

This product contains a modified portion of 'ArrayDeque', written by Josh
Bloch of Google, Inc:

  * LICENSE:
    * license/LICENSE.deque.txt (Public Domain)

This product contains a modified portion of 'Apache Harmony', an open source
Java SE, which can be obtained at:

  * LICENSE:
    * license/LICENSE.harmony.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://archive.apache.org/dist/harmony/

This product contains a modified version of Roland Kuhn's ASL2
AbstractNodeQueue, which is based on Dmitriy Vyukov's non-intrusive MPSC queue.
It can be obtained at:

  * LICENSE:
    * license/LICENSE.abstractnodequeue.txt (Public Domain)
  * HOMEPAGE:
    * https://github.com/akka/akka/blob/wip-2.2.3-for-scala-2.11/akka-actor/src/main/java/akka/dispatch/AbstractNodeQueue.java

This product contains a modified portion of 'jbzip2', a Java bzip2 compression
and decompression library written by Matthew J. Francis. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jbzip2.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jbzip2/

This product contains a modified portion of 'libdivsufsort', a C API library to construct
the suffix array and the Burrows-Wheeler transformed string for any input string of
a constant-size alphabet written by Yuta Mori. It can be obtained at:

  * LICENSE:
    * license/LICENSE.libdivsufsort.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/libdivsufsort/

This product contains a modified portion of Nitsan Wakart's 'JCTools', Java Concurrency Tools for the JVM,
 which can be obtained at:

  * LICENSE:
    * license/LICENSE.jctools.txt (ASL2 License)
  * HOMEPAGE:
    * https://github.com/JCTools/JCTools

This product optionally depends on 'JZlib', a re-implementation of zlib in
pure Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jzlib.txt (BSD style License)
  * HOMEPAGE:
    * http://www.jcraft.com/jzlib/

This product optionally depends on 'Compress-LZF', a Java library for encoding and
decoding data in LZF format, written by Tatu Saloranta. It can be obtained at:

  * LICENSE:
    * license/LICENSE.compress-lzf.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/ning/compress

This product optionally depends on 'lz4', a LZ4 Java compression
and decompression library written by Adrien Grand. It can be obtained at:

  * LICENSE:
    * license/LICENSE.lz4.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jpountz/lz4-java

This product optionally depends on 'lzma-java', a LZMA Java compression
and decompression library, which can be obtained at:

  * LICENSE:
    * license/LICENSE.lzma-java.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jponge/lzma-java

This product contains a modified portion of 'jfastlz', a Java port of FastLZ compression
and decompression library written by William Kinney. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jfastlz.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jfastlz/

This product contains a modified portion of and optionally depends on 'Protocol Buffers', Google's data
interchange format, which can be obtained at:

  * LICENSE:
    * license/LICENSE.protobuf.txt (New BSD License)
  * HOMEPAGE:
    * http://code.google.com/p/protobuf/

This product optionally depends on 'Bouncy Castle Crypto APIs' to generate
a temporary self-signed X.509 certificate when the JVM does not provide the
equivalent functionality.  It can be obtained at:

  * LICENSE:
    * license/LICENSE.bouncycastle.txt (MIT License)
  * HOMEPAGE:
    * http://www.bouncycastle.org/

This product optionally depends on 'Snappy', a compression library produced
by Google Inc, which can be obtained at:

  * LICENSE:
    * license/LICENSE.snappy.txt (New BSD License)
  * HOMEPAGE:
    * http://code.google.com/p/snappy/

This product optionally depends on 'JBoss Marshalling', an alternative Java
serialization API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jboss-marshalling.txt (GNU LGPL 2.1)
  * HOMEPAGE:
    * http://www.jboss.org/jbossmarshalling

This product optionally depends on 'Caliper', Google's micro-
benchmarking framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.caliper.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://code.google.com/p/caliper/

This product optionally depends on 'Apache Commons Logging', a logging
framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-logging.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://commons.apache.org/logging/

This product optionally depends on 'Apache Log4J', a logging framework, which
can be obtained at:

  * LICENSE:
    * license/LICENSE.log4j.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://logging.apache.org/log4j/

This product optionally depends on 'Aalto XML', an ultra-high performance
non-blocking XML processor, which can be obtained at:

  * LICENSE:
    * license/LICENSE.aalto-xml.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://wiki.fasterxml.com/AaltoHome

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Twitter. It can be obtained at:

  * LICENSE:
    * license/LICENSE.hpack.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/twitter/hpack

This product contains a modified portion of 'Apache Commons Lang', a Java library
provides utilities for the java.lang API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-lang.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://commons.apache.org/proper/commons-lang/

The binary distribution of this product bundles binaries of
Commons Codec 1.4,
which has the following notices:
 * src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.javacontains test data from http://aspell.net/test/orig/batch0.tab.Copyright (C) 2002 Kevin Atkinson (kevina@gnu.org)
  ===============================================================================
  The content of package org.apache.commons.codec.language.bm has been translated
  from the original php source code available at http://stevemorse.org/phoneticinfo.htm
  with permission from the original authors.
  Original source copyright:Copyright (c) 2008 Alexander Beider &amp; Stephen P. Morse.

The binary distribution of this product bundles binaries of
Commons Lang 2.6,
which has the following notices:
 * This product includes software from the Spring Framework,under the Apache License 2.0 (see: StringUtils.containsWhitespace())

The binary distribution of this product bundles binaries of
Apache Log4j 1.2.17,
which has the following notices:
 * ResolverUtil.java
    Copyright 2005-2006 Tim Fennell
  Dumbster SMTP test server
    Copyright 2004 Jason Paul Kitchen
  TypeUtil.java
    Copyright 2002-2012 Ramnivas Laddad, Juergen Hoeller, Chris Beams

The binary distribution of this product bundles binaries of
Jetty 6.1.26,
which has the following notices:
 * ==============================================================
    Jetty Web Container
    Copyright 1995-2016 Mort Bay Consulting Pty Ltd.
   ==============================================================

   The Jetty Web Container is Copyright Mort Bay Consulting Pty Ltd
   unless otherwise noted.

   Jetty is dual licensed under both

     * The Apache 2.0 License
       http://www.apache.org/licenses/LICENSE-2.0.html

         and

     * The Eclipse Public 1.0 License
       http://www.eclipse.org/legal/epl-v10.html

   Jetty may be distributed under either license.

   ------
   Eclipse

   The following artifacts are EPL.
    * org.eclipse.jetty.orbit:org.eclipse.jdt.core

   The following artifacts are EPL and ASL2.
    * org.eclipse.jetty.orbit:javax.security.auth.message


   The following artifacts are EPL and CDDL 1.0.
    * org.eclipse.jetty.orbit:javax.mail.glassfish


   ------
   Oracle

   The following artifacts are CDDL + GPLv2 with classpath exception.
   https://glassfish.dev.java.net/nonav/public/CDDL+GPL.html

    * javax.servlet:javax.servlet-api
    * javax.annotation:javax.annotation-api
    * javax.transaction:javax.transaction-api
    * javax.websocket:javax.websocket-api

   ------
   Oracle OpenJDK

   If ALPN is used to negotiate HTTP/2 connections, then the following
   artifacts may be included in the distribution or downloaded when ALPN
   module is selected.

    * java.sun.security.ssl

   These artifacts replace/modify OpenJDK classes.  The modififications
   are hosted at github and both modified and original are under GPL v2 with
   classpath exceptions.
   http://openjdk.java.net/legal/gplv2+ce.html


   ------
   OW2

   The following artifacts are licensed by the OW2 Foundation according to the
   terms of http://asm.ow2.org/license.html

   org.ow2.asm:asm-commons
   org.ow2.asm:asm


   ------
   Apache

   The following artifacts are ASL2 licensed.

   org.apache.taglibs:taglibs-standard-spec
   org.apache.taglibs:taglibs-standard-impl


   ------
   MortBay

   The following artifacts are ASL2 licensed.  Based on selected classes from
   following Apache Tomcat jars, all ASL2 licensed.

   org.mortbay.jasper:apache-jsp
     org.apache.tomcat:tomcat-jasper
     org.apache.tomcat:tomcat-juli
     org.apache.tomcat:tomcat-jsp-api
     org.apache.tomcat:tomcat-el-api
     org.apache.tomcat:tomcat-jasper-el
     org.apache.tomcat:tomcat-api
     org.apache.tomcat:tomcat-util-scan
     org.apache.tomcat:tomcat-util

   org.mortbay.jasper:apache-el
     org.apache.tomcat:tomcat-jasper-el
     org.apache.tomcat:tomcat-el-api


   ------
   Mortbay

   The following artifacts are CDDL + GPLv2 with classpath exception.

   https://glassfish.dev.java.net/nonav/public/CDDL+GPL.html

   org.eclipse.jetty.toolchain:jetty-schemas

   ------
   Assorted

   The UnixCrypt.java code implements the one way cryptography used by
   Unix systems for simple password protection.  Copyright 1996 Aki Yoshida,
   modified April 2001  by Iris Van den Broeke, Daniel Deville.
   Permission to use, copy, modify and distribute UnixCrypt
   for non-commercial or commercial purposes and without fee is
   granted provided that the copyright notice appears in all copies./

The binary distribution of this product bundles binaries of
Snappy for Java 1.0.4.1,
which has the following notices:
 * This product includes software developed by Google
    Snappy: http://code.google.com/p/snappy/ (New BSD License)

   This product includes software developed by Apache
    PureJavaCrc32C from apache-hadoop-common http://hadoop.apache.org/
    (Apache 2.0 license)

   This library containd statically linked libstdc++. This inclusion is allowed by
   "GCC RUntime Library Exception"
   http://gcc.gnu.org/onlinedocs/libstdc++/manual/license.html

   == Contributors ==
     * Tatu Saloranta
       * Providing benchmark suite
     * Alec Wysoker
       * Performance and memory usage improvement

The binary distribution of this product bundles binaries of
Xerces2 Java Parser 2.9.1,
which has the following notices:
 * =========================================================================
   ==  NOTICE file corresponding to section 4(d) of the Apache License,   ==
   ==  Version 2.0, in this case for the Apache Xerces Java distribution. ==
   =========================================================================

   Apache Xerces Java
   Copyright 1999-2007 The Apache Software Foundation

   This product includes software developed at
   The Apache Software Foundation (http://www.apache.org/).

   Portions of this software were originally based on the following:
     - software copyright (c) 1999, IBM Corporation., http://www.ibm.com.
     - software copyright (c) 1999, Sun Microsystems., http://www.sun.com.
     - voluntary contributions made by Paul Eng on behalf of the
       Apache Software Foundation that were originally developed at iClick, Inc.,
       software copyright (c) 1999.</msg>
<status status="PASS" starttime="20220731 01:07:36.259" endtime="20220731 01:07:36.260"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220731 01:07:36.261" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220731 01:07:36.260" endtime="20220731 01:07:36.261"/>
</kw>
<status status="PASS" starttime="20220731 01:07:33.178" endtime="20220731 01:07:36.261"/>
</kw>
<msg timestamp="20220731 01:07:36.261" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220731 01:07:33.178" endtime="20220731 01:07:36.261"/>
</kw>
<msg timestamp="20220731 01:07:36.262" level="INFO">${result} = 2022-07-31 01:07:34 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2022-07-31 01:07:34 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2022-07-31 ...</msg>
<status status="PASS" starttime="20220731 01:07:33.177" endtime="20220731 01:07:36.262"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>This product includes software developed</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220731 01:07:36.263" endtime="20220731 01:07:36.263"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220731 01:07:27.481" endtime="20220731 01:07:36.263"/>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" starttime="20220731 01:07:27.435" endtime="20220731 01:07:36.264"/>
</suite>
<suite id="s1-s1-s2" name="mapreduce-o3fs" source="/opt/ozone/smoketest/mapreduce.robot">
<test id="s1-s1-s2-t1" name="Execute PI calculation">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220731 01:07:41.036" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20220731 01:07:41.042" level="INFO">${rc} = 0</msg>
<msg timestamp="20220731 01:07:41.042" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20220731 01:07:41.033" endtime="20220731 01:07:41.042"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220731 01:07:41.043" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20220731 01:07:41.043" endtime="20220731 01:07:41.043"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220731 01:07:41.044" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220731 01:07:41.043" endtime="20220731 01:07:41.044"/>
</kw>
<status status="PASS" starttime="20220731 01:07:41.032" endtime="20220731 01:07:41.044"/>
</kw>
<msg timestamp="20220731 01:07:41.044" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220731 01:07:41.032" endtime="20220731 01:07:41.044"/>
</kw>
<msg timestamp="20220731 01:07:41.044" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20220731 01:07:41.032" endtime="20220731 01:07:41.044"/>
</kw>
<msg timestamp="20220731 01:07:41.045" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20220731 01:07:41.031" endtime="20220731 01:07:41.045"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220731 01:07:41.049" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220731 01:07:41.048" endtime="20220731 01:07:41.049"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220731 01:07:41.049" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220731 01:07:41.049" endtime="20220731 01:07:41.049"/>
</kw>
<status status="PASS" starttime="20220731 01:07:41.048" endtime="20220731 01:07:41.049"/>
</kw>
<msg timestamp="20220731 01:07:41.049" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220731 01:07:41.047" endtime="20220731 01:07:41.049"/>
</kw>
<status status="PASS" starttime="20220731 01:07:41.047" endtime="20220731 01:07:41.050"/>
</kw>
<msg timestamp="20220731 01:07:41.050" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20220731 01:07:41.046" endtime="20220731 01:07:41.050"/>
</kw>
<msg timestamp="20220731 01:07:41.050" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20220731 01:07:41.045" endtime="20220731 01:07:41.050"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220731 01:07:41.054" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20220731 01:08:16.474" level="INFO">${rc} = 0</msg>
<msg timestamp="20220731 01:08:16.474" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2022-07-31 01:07:42 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2022-07-31 01:07:42 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" starttime="20220731 01:07:41.051" endtime="20220731 01:08:16.474"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220731 01:08:16.475" level="INFO">Number of Maps  = 3
Samples per Map = 3
2022-07-31 01:07:42 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2022-07-31 01:07:42 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2022-07-31 01:07:42 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2022-07-31 01:07:43 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2022-07-31 01:07:44 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.18.0.4:8032
2022-07-31 01:07:44 INFO  FileInputFormat:283 - Total input paths to process : 3
2022-07-31 01:07:44 INFO  JobSubmitter:198 - number of splits:3
2022-07-31 01:07:45 INFO  JobSubmitter:287 - Submitting tokens for job: job_1659229563479_0001
2022-07-31 01:07:45 INFO  YarnClientImpl:273 - Submitted application application_1659229563479_0001
2022-07-31 01:07:45 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1659229563479_0001/
2022-07-31 01:07:45 INFO  Job:1339 - Running job: job_1659229563479_0001
2022-07-31 01:07:54 INFO  Job:1360 - Job job_1659229563479_0001 running in uber mode : false
2022-07-31 01:07:54 INFO  Job:1367 -  map 0% reduce 0%
2022-07-31 01:08:00 INFO  Job:1367 -  map 33% reduce 0%
2022-07-31 01:08:05 INFO  Job:1367 -  map 67% reduce 0%
2022-07-31 01:08:10 INFO  Job:1367 -  map 100% reduce 0%
2022-07-31 01:08:14 INFO  Job:1367 -  map 100% reduce 100%
2022-07-31 01:08:15 INFO  Job:1378 - Job job_1659229563479_0001 completed successfully
2022-07-31 01:08:15 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=479857
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=807
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=15
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=37860
		Total time spent by all reduces in occupied slots (ms)=14716
		Total time spent by all map tasks (ms)=9465
		Total time spent by all reduce tasks (ms)=3679
		Total vcore-milliseconds taken by all map tasks=9465
		Total vcore-milliseconds taken by all reduce tasks=3679
		Total megabyte-milliseconds taken by all map tasks=38768640
		Total megabyte-milliseconds taken by all reduce tasks=15069184
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=453
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=636
		CPU time spent (ms)=6530
		Physical memory (bytes) snapshot=1580658688
		Virtual memory (bytes) snapshot=15840931840
		Total committed heap usage (bytes)=1407188992
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 31.631 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" starttime="20220731 01:08:16.475" endtime="20220731 01:08:16.476"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220731 01:08:16.476" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220731 01:08:16.476" endtime="20220731 01:08:16.476"/>
</kw>
<status status="PASS" starttime="20220731 01:07:41.051" endtime="20220731 01:08:16.476"/>
</kw>
<msg timestamp="20220731 01:08:16.477" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220731 01:07:41.051" endtime="20220731 01:08:16.477"/>
</kw>
<msg timestamp="20220731 01:08:16.477" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2022-07-31 01:07:42 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2022-07-31 01:07:42 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" starttime="20220731 01:07:41.050" endtime="20220731 01:08:16.477"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220731 01:08:16.477" endtime="20220731 01:08:16.478"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>multiple SLF4J bindings</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220731 01:08:16.478" endtime="20220731 01:08:16.478"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20220731 01:07:41.031" endtime="20220731 01:08:16.478"/>
</test>
<test id="s1-s1-s2-t2" name="Execute WordCount">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220731 01:08:16.484" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20220731 01:08:16.489" level="INFO">${rc} = 0</msg>
<msg timestamp="20220731 01:08:16.489" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20220731 01:08:16.482" endtime="20220731 01:08:16.489"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220731 01:08:16.490" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20220731 01:08:16.490" endtime="20220731 01:08:16.491"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220731 01:08:16.491" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220731 01:08:16.491" endtime="20220731 01:08:16.491"/>
</kw>
<status status="PASS" starttime="20220731 01:08:16.481" endtime="20220731 01:08:16.492"/>
</kw>
<msg timestamp="20220731 01:08:16.492" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220731 01:08:16.481" endtime="20220731 01:08:16.492"/>
</kw>
<msg timestamp="20220731 01:08:16.492" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20220731 01:08:16.480" endtime="20220731 01:08:16.492"/>
</kw>
<msg timestamp="20220731 01:08:16.492" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20220731 01:08:16.480" endtime="20220731 01:08:16.492"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220731 01:08:16.493" level="INFO">${random} = XYVkjxKT</msg>
<status status="PASS" starttime="20220731 01:08:16.492" endtime="20220731 01:08:16.493"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220731 01:08:16.496" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220731 01:08:16.495" endtime="20220731 01:08:16.496"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220731 01:08:16.496" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220731 01:08:16.496" endtime="20220731 01:08:16.496"/>
</kw>
<status status="PASS" starttime="20220731 01:08:16.495" endtime="20220731 01:08:16.497"/>
</kw>
<msg timestamp="20220731 01:08:16.497" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220731 01:08:16.495" endtime="20220731 01:08:16.497"/>
</kw>
<status status="PASS" starttime="20220731 01:08:16.494" endtime="20220731 01:08:16.497"/>
</kw>
<msg timestamp="20220731 01:08:16.497" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20220731 01:08:16.493" endtime="20220731 01:08:16.497"/>
</kw>
<msg timestamp="20220731 01:08:16.497" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20220731 01:08:16.493" endtime="20220731 01:08:16.497"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220731 01:08:16.500" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220731 01:08:16.500" endtime="20220731 01:08:16.500"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220731 01:08:16.501" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220731 01:08:16.500" endtime="20220731 01:08:16.501"/>
</kw>
<status status="PASS" starttime="20220731 01:08:16.500" endtime="20220731 01:08:16.501"/>
</kw>
<msg timestamp="20220731 01:08:16.501" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220731 01:08:16.499" endtime="20220731 01:08:16.501"/>
</kw>
<status status="PASS" starttime="20220731 01:08:16.499" endtime="20220731 01:08:16.502"/>
</kw>
<msg timestamp="20220731 01:08:16.502" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" starttime="20220731 01:08:16.498" endtime="20220731 01:08:16.502"/>
</kw>
<msg timestamp="20220731 01:08:16.502" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" starttime="20220731 01:08:16.498" endtime="20220731 01:08:16.502"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${result}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220731 01:08:16.505" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220731 01:08:16.505" endtime="20220731 01:08:16.505"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220731 01:08:16.506" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220731 01:08:16.505" endtime="20220731 01:08:16.506"/>
</kw>
<status status="PASS" starttime="20220731 01:08:16.504" endtime="20220731 01:08:16.506"/>
</kw>
<msg timestamp="20220731 01:08:16.506" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220731 01:08:16.504" endtime="20220731 01:08:16.506"/>
</kw>
<status status="PASS" starttime="20220731 01:08:16.503" endtime="20220731 01:08:16.506"/>
</kw>
<msg timestamp="20220731 01:08:16.506" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-XYVkjxKT.txt</msg>
<status status="PASS" starttime="20220731 01:08:16.503" endtime="20220731 01:08:16.506"/>
</kw>
<msg timestamp="20220731 01:08:16.507" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-XYVkjxKT.txt</msg>
<status status="PASS" starttime="20220731 01:08:16.502" endtime="20220731 01:08:16.507"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220731 01:08:16.517" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-XYVkjxKT.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220731 01:08:51.501" level="INFO">${rc} = 0</msg>
<msg timestamp="20220731 01:08:51.501" level="INFO">${output} = 2022-07-31 01:08:18 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.18.0.4:8032
2022-07-31 01:08:18 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" starttime="20220731 01:08:16.508" endtime="20220731 01:08:51.501"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220731 01:08:51.502" level="INFO">2022-07-31 01:08:18 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.18.0.4:8032
2022-07-31 01:08:18 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2022-07-31 01:08:18 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2022-07-31 01:08:18 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2022-07-31 01:08:18 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2022-07-31 01:08:19 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-07-31 01:08:20 INFO  FileInputFormat:283 - Total input paths to process : 3
2022-07-31 01:08:20 INFO  JobSubmitter:198 - number of splits:3
2022-07-31 01:08:20 INFO  JobSubmitter:287 - Submitting tokens for job: job_1659229563479_0002
2022-07-31 01:08:20 INFO  YarnClientImpl:273 - Submitted application application_1659229563479_0002
2022-07-31 01:08:20 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1659229563479_0002/
2022-07-31 01:08:20 INFO  Job:1339 - Running job: job_1659229563479_0002
2022-07-31 01:08:28 INFO  Job:1360 - Job job_1659229563479_0002 running in uber mode : false
2022-07-31 01:08:28 INFO  Job:1367 -  map 0% reduce 0%
2022-07-31 01:08:34 INFO  Job:1367 -  map 33% reduce 0%
2022-07-31 01:08:39 INFO  Job:1367 -  map 67% reduce 0%
2022-07-31 01:08:45 INFO  Job:1367 -  map 100% reduce 0%
2022-07-31 01:08:50 INFO  Job:1367 -  map 100% reduce 100%
2022-07-31 01:08:51 INFO  Job:1378 - Job job_1659229563479_0002 completed successfully
2022-07-31 01:08:51 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=32289
		FILE: Number of bytes written=543031
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39996
		O3FS: Number of bytes written=22443
		O3FS: Number of read operations=12
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=39640
		Total time spent by all reduces in occupied slots (ms)=17936
		Total time spent by all map tasks (ms)=9910
		Total time spent by all reduce tasks (ms)=4484
		Total vcore-milliseconds taken by all map tasks=9910
		Total vcore-milliseconds taken by all reduce tasks=4484
		Total megabyte-milliseconds taken by all map tasks=40591360
		Total megabyte-milliseconds taken by all reduce tasks=18366464
	Map-Reduce Framework
		Map input records=1064
		Map output records=4522
		Map output bytes=55364
		Map output materialized bytes=32301
		Input split bytes=303
		Combine input records=4522
		Combine output records=1810
		Reduce input groups=1546
		Reduce shuffle bytes=32301
		Reduce input records=1810
		Reduce output records=1546
		Spilled Records=3620
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=577
		CPU time spent (ms)=7560
		Physical memory (bytes) snapshot=1553059840
		Virtual memory (bytes) snapshot=15842271232
		Total committed heap usage (bytes)=1476395008
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39693
	File Output Format Counters 
		Bytes Written=22443</msg>
<status status="PASS" starttime="20220731 01:08:51.501" endtime="20220731 01:08:51.502"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220731 01:08:51.503" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220731 01:08:51.502" endtime="20220731 01:08:51.503"/>
</kw>
<status status="PASS" starttime="20220731 01:08:16.507" endtime="20220731 01:08:51.503"/>
</kw>
<msg timestamp="20220731 01:08:51.503" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220731 01:08:16.507" endtime="20220731 01:08:51.503"/>
</kw>
<msg timestamp="20220731 01:08:51.504" level="INFO">${output} = 2022-07-31 01:08:18 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.18.0.4:8032
2022-07-31 01:08:18 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" starttime="20220731 01:08:16.507" endtime="20220731 01:08:51.504"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>map tasks=3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220731 01:08:51.504" endtime="20220731 01:08:51.505"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220731 01:08:51.505" endtime="20220731 01:08:51.505"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20220731 01:08:16.479" endtime="20220731 01:08:51.505"/>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" starttime="20220731 01:07:40.986" endtime="20220731 01:08:51.506"/>
</suite>
<suite id="s1-s1-s3" name="hadoopfs-ofs" source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot">
<test id="s1-s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220731 01:08:56.393" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20220731 01:08:56.393" endtime="20220731 01:08:56.393"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220731 01:08:56.394" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20220731 01:08:56.393" endtime="20220731 01:08:56.394"/>
</kw>
<status status="PASS" starttime="20220731 01:08:56.392" endtime="20220731 01:08:56.394"/>
</kw>
<msg timestamp="20220731 01:08:56.394" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20220731 01:08:56.392" endtime="20220731 01:08:56.394"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20220731 01:08:56.395" endtime="20220731 01:08:56.395"/>
</kw>
<msg timestamp="20220731 01:08:56.395" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20220731 01:08:56.394" endtime="20220731 01:08:56.395"/>
</kw>
<status status="PASS" starttime="20220731 01:08:56.391" endtime="20220731 01:08:56.395"/>
</kw>
<msg timestamp="20220731 01:08:56.395" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20220731 01:08:56.391" endtime="20220731 01:08:56.395"/>
</kw>
<msg timestamp="20220731 01:08:56.396" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20220731 01:08:56.390" endtime="20220731 01:08:56.396"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220731 01:08:56.396" level="INFO">${random} = 42736</msg>
<status status="PASS" starttime="20220731 01:08:56.396" endtime="20220731 01:08:56.396"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220731 01:08:56.401" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-42736 2&gt;&amp;1'.</msg>
<msg timestamp="20220731 01:08:59.761" level="INFO">${rc} = 0</msg>
<msg timestamp="20220731 01:08:59.761" level="INFO">${output} = 2022-07-31 01:08:58 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2022-07-31 01:08:58 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2022-07-31 ...</msg>
<status status="PASS" starttime="20220731 01:08:56.397" endtime="20220731 01:08:59.761"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220731 01:08:59.762" level="INFO">2022-07-31 01:08:58 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2022-07-31 01:08:58 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2022-07-31 01:08:58 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2022-07-31 01:08:58 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20220731 01:08:59.762" endtime="20220731 01:08:59.763"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220731 01:08:59.763" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220731 01:08:59.763" endtime="20220731 01:08:59.763"/>
</kw>
<status status="PASS" starttime="20220731 01:08:56.397" endtime="20220731 01:08:59.763"/>
</kw>
<msg timestamp="20220731 01:08:59.764" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220731 01:08:56.397" endtime="20220731 01:08:59.764"/>
</kw>
<msg timestamp="20220731 01:08:59.764" level="INFO">${result} = 2022-07-31 01:08:58 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2022-07-31 01:08:58 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2022-07-31 ...</msg>
<status status="PASS" starttime="20220731 01:08:56.396" endtime="20220731 01:08:59.764"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>multiple SLF4J bindings</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220731 01:08:59.764" endtime="20220731 01:08:59.764"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -ls ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220731 01:08:59.768" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20220731 01:09:02.013" level="INFO">${rc} = 0</msg>
<msg timestamp="20220731 01:09:02.013" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2022-07-31 01:07 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2022-07-31 01:08 ofs://om/volume1/bucket1/ozone-42736
-rw-...</msg>
<status status="PASS" starttime="20220731 01:08:59.766" endtime="20220731 01:09:02.013"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220731 01:09:02.014" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2022-07-31 01:07 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2022-07-31 01:08 ofs://om/volume1/bucket1/ozone-42736
-rw-rw-rw-   3 hadoop hadoop      14978 2022-07-31 01:07 ofs://om/volume1/bucket1/ozone-51594
drwxrwxrwx   - hadoop hadoop          0 2022-07-31 01:07 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2022-07-31 01:08 ofs://om/volume1/bucket1/wordcount-XYVkjxKT.txt</msg>
<status status="PASS" starttime="20220731 01:09:02.014" endtime="20220731 01:09:02.015"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220731 01:09:02.015" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220731 01:09:02.015" endtime="20220731 01:09:02.015"/>
</kw>
<status status="PASS" starttime="20220731 01:08:59.765" endtime="20220731 01:09:02.016"/>
</kw>
<msg timestamp="20220731 01:09:02.016" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220731 01:08:59.765" endtime="20220731 01:09:02.016"/>
</kw>
<msg timestamp="20220731 01:09:02.016" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2022-07-31 01:07 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2022-07-31 01:08 ofs://om/volume1/bucket1/ozone-42736
-rw-...</msg>
<status status="PASS" starttime="20220731 01:08:59.764" endtime="20220731 01:09:02.016"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220731 01:09:02.016" endtime="20220731 01:09:02.017"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -cat ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220731 01:09:02.020" level="INFO">Running command 'hdfs dfs -cat ofs://om/volume1/bucket1/ozone-42736 2&gt;&amp;1'.</msg>
<msg timestamp="20220731 01:09:05.284" level="INFO">${rc} = 0</msg>
<msg timestamp="20220731 01:09:05.284" level="INFO">${output} = 2022-07-31 01:09:03 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2022-07-31 01:09:03 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2022-07-31 ...</msg>
<status status="PASS" starttime="20220731 01:09:02.018" endtime="20220731 01:09:05.284"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220731 01:09:05.286" level="INFO">2022-07-31 01:09:03 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2022-07-31 01:09:03 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2022-07-31 01:09:03 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
This product includes software developed by The Apache Software
Foundation (http://www.apache.org/).

The binary distribution of this product bundles binaries of
org.iq80.leveldb:leveldb-api (https://github.com/dain/leveldb), which has the
following notices:
* Copyright 2011 Dain Sundstrom &lt;dain@iq80.com&gt;
* Copyright 2011 FuseSource Corp. http://fusesource.com

The binary distribution of this product bundles binaries of
org.fusesource.hawtjni:hawtjni-runtime (https://github.com/fusesource/hawtjni),
which has the following notices:
* This product includes software developed by FuseSource Corp.
  http://fusesource.com
* This product includes software developed at
  Progress Software Corporation and/or its  subsidiaries or affiliates.
* This product includes software developed by IBM Corporation and others.

The binary distribution of this product bundles binaries of
Gson 2.2.4,
which has the following notices:

                            The Netty Project
                            =================

Please visit the Netty web site for more information:

  * http://netty.io/

Copyright 2014 The Netty Project

The Netty Project licenses this file to you under the Apache License,
version 2.0 (the "License"); you may not use this file except in compliance
with the License. You may obtain a copy of the License at:

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
License for the specific language governing permissions and limitations
under the License.

Also, please refer to each LICENSE.&lt;component&gt;.txt file, which is located in
the 'license' directory of the distribution file, for the license terms of the
components that this product depends on.

-------------------------------------------------------------------------------
This product contains the extensions to Java Collections Framework which has
been derived from the works by JSR-166 EG, Doug Lea, and Jason T. Greene:

  * LICENSE:
    * license/LICENSE.jsr166y.txt (Public Domain)
  * HOMEPAGE:
    * http://gee.cs.oswego.edu/cgi-bin/viewcvs.cgi/jsr166/
    * http://viewvc.jboss.org/cgi-bin/viewvc.cgi/jbosscache/experimental/jsr166/

This product contains a modified version of Robert Harder's Public Domain
Base64 Encoder and Decoder, which can be obtained at:

  * LICENSE:
    * license/LICENSE.base64.txt (Public Domain)
  * HOMEPAGE:
    * http://iharder.sourceforge.net/current/java/base64/

This product contains a modified portion of 'Webbit', an event based
WebSocket and HTTP server, which can be obtained at:

  * LICENSE:
    * license/LICENSE.webbit.txt (BSD License)
  * HOMEPAGE:
    * https://github.com/joewalnes/webbit

This product contains a modified portion of 'SLF4J', a simple logging
facade for Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.slf4j.txt (MIT License)
  * HOMEPAGE:
    * http://www.slf4j.org/

This product contains a modified portion of 'ArrayDeque', written by Josh
Bloch of Google, Inc:

  * LICENSE:
    * license/LICENSE.deque.txt (Public Domain)

This product contains a modified portion of 'Apache Harmony', an open source
Java SE, which can be obtained at:

  * LICENSE:
    * license/LICENSE.harmony.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://archive.apache.org/dist/harmony/

This product contains a modified version of Roland Kuhn's ASL2
AbstractNodeQueue, which is based on Dmitriy Vyukov's non-intrusive MPSC queue.
It can be obtained at:

  * LICENSE:
    * license/LICENSE.abstractnodequeue.txt (Public Domain)
  * HOMEPAGE:
    * https://github.com/akka/akka/blob/wip-2.2.3-for-scala-2.11/akka-actor/src/main/java/akka/dispatch/AbstractNodeQueue.java

This product contains a modified portion of 'jbzip2', a Java bzip2 compression
and decompression library written by Matthew J. Francis. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jbzip2.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jbzip2/

This product contains a modified portion of 'libdivsufsort', a C API library to construct
the suffix array and the Burrows-Wheeler transformed string for any input string of
a constant-size alphabet written by Yuta Mori. It can be obtained at:

  * LICENSE:
    * license/LICENSE.libdivsufsort.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/libdivsufsort/

This product contains a modified portion of Nitsan Wakart's 'JCTools', Java Concurrency Tools for the JVM,
 which can be obtained at:

  * LICENSE:
    * license/LICENSE.jctools.txt (ASL2 License)
  * HOMEPAGE:
    * https://github.com/JCTools/JCTools

This product optionally depends on 'JZlib', a re-implementation of zlib in
pure Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jzlib.txt (BSD style License)
  * HOMEPAGE:
    * http://www.jcraft.com/jzlib/

This product optionally depends on 'Compress-LZF', a Java library for encoding and
decoding data in LZF format, written by Tatu Saloranta. It can be obtained at:

  * LICENSE:
    * license/LICENSE.compress-lzf.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/ning/compress

This product optionally depends on 'lz4', a LZ4 Java compression
and decompression library written by Adrien Grand. It can be obtained at:

  * LICENSE:
    * license/LICENSE.lz4.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jpountz/lz4-java

This product optionally depends on 'lzma-java', a LZMA Java compression
and decompression library, which can be obtained at:

  * LICENSE:
    * license/LICENSE.lzma-java.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jponge/lzma-java

This product contains a modified portion of 'jfastlz', a Java port of FastLZ compression
and decompression library written by William Kinney. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jfastlz.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jfastlz/

This product contains a modified portion of and optionally depends on 'Protocol Buffers', Google's data
interchange format, which can be obtained at:

  * LICENSE:
    * license/LICENSE.protobuf.txt (New BSD License)
  * HOMEPAGE:
    * http://code.google.com/p/protobuf/

This product optionally depends on 'Bouncy Castle Crypto APIs' to generate
a temporary self-signed X.509 certificate when the JVM does not provide the
equivalent functionality.  It can be obtained at:

  * LICENSE:
    * license/LICENSE.bouncycastle.txt (MIT License)
  * HOMEPAGE:
    * http://www.bouncycastle.org/

This product optionally depends on 'Snappy', a compression library produced
by Google Inc, which can be obtained at:

  * LICENSE:
    * license/LICENSE.snappy.txt (New BSD License)
  * HOMEPAGE:
    * http://code.google.com/p/snappy/

This product optionally depends on 'JBoss Marshalling', an alternative Java
serialization API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jboss-marshalling.txt (GNU LGPL 2.1)
  * HOMEPAGE:
    * http://www.jboss.org/jbossmarshalling

This product optionally depends on 'Caliper', Google's micro-
benchmarking framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.caliper.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://code.google.com/p/caliper/

This product optionally depends on 'Apache Commons Logging', a logging
framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-logging.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://commons.apache.org/logging/

This product optionally depends on 'Apache Log4J', a logging framework, which
can be obtained at:

  * LICENSE:
    * license/LICENSE.log4j.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://logging.apache.org/log4j/

This product optionally depends on 'Aalto XML', an ultra-high performance
non-blocking XML processor, which can be obtained at:

  * LICENSE:
    * license/LICENSE.aalto-xml.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://wiki.fasterxml.com/AaltoHome

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Twitter. It can be obtained at:

  * LICENSE:
    * license/LICENSE.hpack.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/twitter/hpack

This product contains a modified portion of 'Apache Commons Lang', a Java library
provides utilities for the java.lang API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-lang.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://commons.apache.org/proper/commons-lang/

The binary distribution of this product bundles binaries of
Commons Codec 1.4,
which has the following notices:
 * src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.javacontains test data from http://aspell.net/test/orig/batch0.tab.Copyright (C) 2002 Kevin Atkinson (kevina@gnu.org)
  ===============================================================================
  The content of package org.apache.commons.codec.language.bm has been translated
  from the original php source code available at http://stevemorse.org/phoneticinfo.htm
  with permission from the original authors.
  Original source copyright:Copyright (c) 2008 Alexander Beider &amp; Stephen P. Morse.

The binary distribution of this product bundles binaries of
Commons Lang 2.6,
which has the following notices:
 * This product includes software from the Spring Framework,under the Apache License 2.0 (see: StringUtils.containsWhitespace())

The binary distribution of this product bundles binaries of
Apache Log4j 1.2.17,
which has the following notices:
 * ResolverUtil.java
    Copyright 2005-2006 Tim Fennell
  Dumbster SMTP test server
    Copyright 2004 Jason Paul Kitchen
  TypeUtil.java
    Copyright 2002-2012 Ramnivas Laddad, Juergen Hoeller, Chris Beams

The binary distribution of this product bundles binaries of
Jetty 6.1.26,
which has the following notices:
 * ==============================================================
    Jetty Web Container
    Copyright 1995-2016 Mort Bay Consulting Pty Ltd.
   ==============================================================

   The Jetty Web Container is Copyright Mort Bay Consulting Pty Ltd
   unless otherwise noted.

   Jetty is dual licensed under both

     * The Apache 2.0 License
       http://www.apache.org/licenses/LICENSE-2.0.html

         and

     * The Eclipse Public 1.0 License
       http://www.eclipse.org/legal/epl-v10.html

   Jetty may be distributed under either license.

   ------
   Eclipse

   The following artifacts are EPL.
    * org.eclipse.jetty.orbit:org.eclipse.jdt.core

   The following artifacts are EPL and ASL2.
    * org.eclipse.jetty.orbit:javax.security.auth.message


   The following artifacts are EPL and CDDL 1.0.
    * org.eclipse.jetty.orbit:javax.mail.glassfish


   ------
   Oracle

   The following artifacts are CDDL + GPLv2 with classpath exception.
   https://glassfish.dev.java.net/nonav/public/CDDL+GPL.html

    * javax.servlet:javax.servlet-api
    * javax.annotation:javax.annotation-api
    * javax.transaction:javax.transaction-api
    * javax.websocket:javax.websocket-api

   ------
   Oracle OpenJDK

   If ALPN is used to negotiate HTTP/2 connections, then the following
   artifacts may be included in the distribution or downloaded when ALPN
   module is selected.

    * java.sun.security.ssl

   These artifacts replace/modify OpenJDK classes.  The modififications
   are hosted at github and both modified and original are under GPL v2 with
   classpath exceptions.
   http://openjdk.java.net/legal/gplv2+ce.html


   ------
   OW2

   The following artifacts are licensed by the OW2 Foundation according to the
   terms of http://asm.ow2.org/license.html

   org.ow2.asm:asm-commons
   org.ow2.asm:asm


   ------
   Apache

   The following artifacts are ASL2 licensed.

   org.apache.taglibs:taglibs-standard-spec
   org.apache.taglibs:taglibs-standard-impl


   ------
   MortBay

   The following artifacts are ASL2 licensed.  Based on selected classes from
   following Apache Tomcat jars, all ASL2 licensed.

   org.mortbay.jasper:apache-jsp
     org.apache.tomcat:tomcat-jasper
     org.apache.tomcat:tomcat-juli
     org.apache.tomcat:tomcat-jsp-api
     org.apache.tomcat:tomcat-el-api
     org.apache.tomcat:tomcat-jasper-el
     org.apache.tomcat:tomcat-api
     org.apache.tomcat:tomcat-util-scan
     org.apache.tomcat:tomcat-util

   org.mortbay.jasper:apache-el
     org.apache.tomcat:tomcat-jasper-el
     org.apache.tomcat:tomcat-el-api


   ------
   Mortbay

   The following artifacts are CDDL + GPLv2 with classpath exception.

   https://glassfish.dev.java.net/nonav/public/CDDL+GPL.html

   org.eclipse.jetty.toolchain:jetty-schemas

   ------
   Assorted

   The UnixCrypt.java code implements the one way cryptography used by
   Unix systems for simple password protection.  Copyright 1996 Aki Yoshida,
   modified April 2001  by Iris Van den Broeke, Daniel Deville.
   Permission to use, copy, modify and distribute UnixCrypt
   for non-commercial or commercial purposes and without fee is
   granted provided that the copyright notice appears in all copies./

The binary distribution of this product bundles binaries of
Snappy for Java 1.0.4.1,
which has the following notices:
 * This product includes software developed by Google
    Snappy: http://code.google.com/p/snappy/ (New BSD License)

   This product includes software developed by Apache
    PureJavaCrc32C from apache-hadoop-common http://hadoop.apache.org/
    (Apache 2.0 license)

   This library containd statically linked libstdc++. This inclusion is allowed by
   "GCC RUntime Library Exception"
   http://gcc.gnu.org/onlinedocs/libstdc++/manual/license.html

   == Contributors ==
     * Tatu Saloranta
       * Providing benchmark suite
     * Alec Wysoker
       * Performance and memory usage improvement

The binary distribution of this product bundles binaries of
Xerces2 Java Parser 2.9.1,
which has the following notices:
 * =========================================================================
   ==  NOTICE file corresponding to section 4(d) of the Apache License,   ==
   ==  Version 2.0, in this case for the Apache Xerces Java distribution. ==
   =========================================================================

   Apache Xerces Java
   Copyright 1999-2007 The Apache Software Foundation

   This product includes software developed at
   The Apache Software Foundation (http://www.apache.org/).

   Portions of this software were originally based on the following:
     - software copyright (c) 1999, IBM Corporation., http://www.ibm.com.
     - software copyright (c) 1999, Sun Microsystems., http://www.sun.com.
     - voluntary contributions made by Paul Eng on behalf of the
       Apache Software Foundation that were originally developed at iClick, Inc.,
       software copyright (c) 1999.</msg>
<status status="PASS" starttime="20220731 01:09:05.285" endtime="20220731 01:09:05.286"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220731 01:09:05.286" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220731 01:09:05.286" endtime="20220731 01:09:05.287"/>
</kw>
<status status="PASS" starttime="20220731 01:09:02.018" endtime="20220731 01:09:05.287"/>
</kw>
<msg timestamp="20220731 01:09:05.287" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220731 01:09:02.017" endtime="20220731 01:09:05.287"/>
</kw>
<msg timestamp="20220731 01:09:05.288" level="INFO">${result} = 2022-07-31 01:09:03 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2022-07-31 01:09:03 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2022-07-31 ...</msg>
<status status="PASS" starttime="20220731 01:09:02.017" endtime="20220731 01:09:05.288"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>This product includes software developed</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220731 01:09:05.288" endtime="20220731 01:09:05.288"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220731 01:08:56.389" endtime="20220731 01:09:05.289"/>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" starttime="20220731 01:08:56.343" endtime="20220731 01:09:05.290"/>
</suite>
<suite id="s1-s1-s4" name="mapreduce-ofs" source="/opt/ozone/smoketest/mapreduce.robot">
<test id="s1-s1-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220731 01:09:10.249" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20220731 01:09:10.256" level="INFO">${rc} = 0</msg>
<msg timestamp="20220731 01:09:10.256" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20220731 01:09:10.246" endtime="20220731 01:09:10.256"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220731 01:09:10.257" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20220731 01:09:10.256" endtime="20220731 01:09:10.257"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220731 01:09:10.257" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220731 01:09:10.257" endtime="20220731 01:09:10.257"/>
</kw>
<status status="PASS" starttime="20220731 01:09:10.245" endtime="20220731 01:09:10.258"/>
</kw>
<msg timestamp="20220731 01:09:10.258" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220731 01:09:10.245" endtime="20220731 01:09:10.258"/>
</kw>
<msg timestamp="20220731 01:09:10.258" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20220731 01:09:10.245" endtime="20220731 01:09:10.258"/>
</kw>
<msg timestamp="20220731 01:09:10.258" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20220731 01:09:10.244" endtime="20220731 01:09:10.258"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220731 01:09:10.262" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20220731 01:09:10.262" endtime="20220731 01:09:10.262"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220731 01:09:10.263" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20220731 01:09:10.262" endtime="20220731 01:09:10.263"/>
</kw>
<status status="PASS" starttime="20220731 01:09:10.261" endtime="20220731 01:09:10.263"/>
</kw>
<msg timestamp="20220731 01:09:10.263" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20220731 01:09:10.261" endtime="20220731 01:09:10.263"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20220731 01:09:10.264" endtime="20220731 01:09:10.264"/>
</kw>
<msg timestamp="20220731 01:09:10.264" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20220731 01:09:10.263" endtime="20220731 01:09:10.264"/>
</kw>
<status status="PASS" starttime="20220731 01:09:10.260" endtime="20220731 01:09:10.264"/>
</kw>
<msg timestamp="20220731 01:09:10.265" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20220731 01:09:10.260" endtime="20220731 01:09:10.265"/>
</kw>
<msg timestamp="20220731 01:09:10.265" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20220731 01:09:10.258" endtime="20220731 01:09:10.265"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220731 01:09:10.268" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20220731 01:09:45.606" level="INFO">${rc} = 0</msg>
<msg timestamp="20220731 01:09:45.606" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2022-07-31 01:09:12 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2022-07-31 01:09:12 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" starttime="20220731 01:09:10.266" endtime="20220731 01:09:45.606"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220731 01:09:45.607" level="INFO">Number of Maps  = 3
Samples per Map = 3
2022-07-31 01:09:12 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2022-07-31 01:09:12 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2022-07-31 01:09:12 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2022-07-31 01:09:12 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2022-07-31 01:09:14 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.18.0.4:8032
2022-07-31 01:09:14 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2022-07-31 01:09:14 INFO  FileInputFormat:283 - Total input paths to process : 3
2022-07-31 01:09:14 INFO  JobSubmitter:198 - number of splits:3
2022-07-31 01:09:15 INFO  JobSubmitter:287 - Submitting tokens for job: job_1659229563479_0003
2022-07-31 01:09:15 INFO  YarnClientImpl:273 - Submitted application application_1659229563479_0003
2022-07-31 01:09:15 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1659229563479_0003/
2022-07-31 01:09:15 INFO  Job:1339 - Running job: job_1659229563479_0003
2022-07-31 01:09:23 INFO  Job:1360 - Job job_1659229563479_0003 running in uber mode : false
2022-07-31 01:09:23 INFO  Job:1367 -  map 0% reduce 0%
2022-07-31 01:09:29 INFO  Job:1367 -  map 33% reduce 0%
2022-07-31 01:09:34 INFO  Job:1367 -  map 67% reduce 0%
2022-07-31 01:09:39 INFO  Job:1367 -  map 100% reduce 0%
2022-07-31 01:09:43 INFO  Job:1367 -  map 100% reduce 100%
2022-07-31 01:09:45 INFO  Job:1378 - Job job_1659229563479_0003 completed successfully
2022-07-31 01:09:45 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=479645
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=15
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=37604
		Total time spent by all reduces in occupied slots (ms)=14012
		Total time spent by all map tasks (ms)=9401
		Total time spent by all reduce tasks (ms)=3503
		Total vcore-milliseconds taken by all map tasks=9401
		Total vcore-milliseconds taken by all reduce tasks=3503
		Total megabyte-milliseconds taken by all map tasks=38506496
		Total megabyte-milliseconds taken by all reduce tasks=14348288
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=549
		CPU time spent (ms)=6650
		Physical memory (bytes) snapshot=1543086080
		Virtual memory (bytes) snapshot=15817924608
		Total committed heap usage (bytes)=1469579264
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 31.118 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" starttime="20220731 01:09:45.606" endtime="20220731 01:09:45.607"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220731 01:09:45.608" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220731 01:09:45.607" endtime="20220731 01:09:45.608"/>
</kw>
<status status="PASS" starttime="20220731 01:09:10.266" endtime="20220731 01:09:45.608"/>
</kw>
<msg timestamp="20220731 01:09:45.608" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220731 01:09:10.265" endtime="20220731 01:09:45.608"/>
</kw>
<msg timestamp="20220731 01:09:45.609" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2022-07-31 01:09:12 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2022-07-31 01:09:12 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" starttime="20220731 01:09:10.265" endtime="20220731 01:09:45.609"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220731 01:09:45.609" endtime="20220731 01:09:45.609"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>multiple SLF4J bindings</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220731 01:09:45.609" endtime="20220731 01:09:45.609"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20220731 01:09:10.243" endtime="20220731 01:09:45.610"/>
</test>
<test id="s1-s1-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220731 01:09:45.614" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20220731 01:09:45.619" level="INFO">${rc} = 0</msg>
<msg timestamp="20220731 01:09:45.619" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20220731 01:09:45.612" endtime="20220731 01:09:45.619"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220731 01:09:45.620" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20220731 01:09:45.619" endtime="20220731 01:09:45.620"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220731 01:09:45.621" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220731 01:09:45.620" endtime="20220731 01:09:45.621"/>
</kw>
<status status="PASS" starttime="20220731 01:09:45.612" endtime="20220731 01:09:45.621"/>
</kw>
<msg timestamp="20220731 01:09:45.621" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220731 01:09:45.612" endtime="20220731 01:09:45.621"/>
</kw>
<msg timestamp="20220731 01:09:45.621" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20220731 01:09:45.611" endtime="20220731 01:09:45.621"/>
</kw>
<msg timestamp="20220731 01:09:45.622" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20220731 01:09:45.611" endtime="20220731 01:09:45.622"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220731 01:09:45.622" level="INFO">${random} = Ld7GOT4C</msg>
<status status="PASS" starttime="20220731 01:09:45.622" endtime="20220731 01:09:45.622"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220731 01:09:45.625" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20220731 01:09:45.625" endtime="20220731 01:09:45.625"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220731 01:09:45.626" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20220731 01:09:45.625" endtime="20220731 01:09:45.626"/>
</kw>
<status status="PASS" starttime="20220731 01:09:45.625" endtime="20220731 01:09:45.626"/>
</kw>
<msg timestamp="20220731 01:09:45.626" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20220731 01:09:45.624" endtime="20220731 01:09:45.626"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20220731 01:09:45.627" endtime="20220731 01:09:45.627"/>
</kw>
<msg timestamp="20220731 01:09:45.627" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20220731 01:09:45.626" endtime="20220731 01:09:45.627"/>
</kw>
<status status="PASS" starttime="20220731 01:09:45.624" endtime="20220731 01:09:45.628"/>
</kw>
<msg timestamp="20220731 01:09:45.628" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20220731 01:09:45.623" endtime="20220731 01:09:45.628"/>
</kw>
<msg timestamp="20220731 01:09:45.628" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20220731 01:09:45.622" endtime="20220731 01:09:45.628"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220731 01:09:45.631" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20220731 01:09:45.631" endtime="20220731 01:09:45.631"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220731 01:09:45.631" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20220731 01:09:45.631" endtime="20220731 01:09:45.631"/>
</kw>
<status status="PASS" starttime="20220731 01:09:45.630" endtime="20220731 01:09:45.632"/>
</kw>
<msg timestamp="20220731 01:09:45.632" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20220731 01:09:45.630" endtime="20220731 01:09:45.632"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220731 01:09:45.633" level="INFO">${first} = i</msg>
<status status="PASS" starttime="20220731 01:09:45.633" endtime="20220731 01:09:45.633"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220731 01:09:45.634" level="INFO">${result} = /input/</msg>
<status status="PASS" starttime="20220731 01:09:45.633" endtime="20220731 01:09:45.634"/>
</kw>
<status status="PASS" starttime="20220731 01:09:45.632" endtime="20220731 01:09:45.634"/>
</kw>
<msg timestamp="20220731 01:09:45.634" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" starttime="20220731 01:09:45.632" endtime="20220731 01:09:45.634"/>
</kw>
<status status="PASS" starttime="20220731 01:09:45.629" endtime="20220731 01:09:45.634"/>
</kw>
<msg timestamp="20220731 01:09:45.634" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" starttime="20220731 01:09:45.629" endtime="20220731 01:09:45.634"/>
</kw>
<msg timestamp="20220731 01:09:45.635" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" starttime="20220731 01:09:45.628" endtime="20220731 01:09:45.635"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${result}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220731 01:09:45.638" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20220731 01:09:45.637" endtime="20220731 01:09:45.638"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220731 01:09:45.638" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20220731 01:09:45.638" endtime="20220731 01:09:45.638"/>
</kw>
<status status="PASS" starttime="20220731 01:09:45.637" endtime="20220731 01:09:45.638"/>
</kw>
<msg timestamp="20220731 01:09:45.638" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20220731 01:09:45.636" endtime="20220731 01:09:45.639"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220731 01:09:45.640" level="INFO">${first} = w</msg>
<status status="PASS" starttime="20220731 01:09:45.640" endtime="20220731 01:09:45.640"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220731 01:09:45.640" level="INFO">${result} = /wordcount-Ld7GOT4C.txt</msg>
<status status="PASS" starttime="20220731 01:09:45.640" endtime="20220731 01:09:45.640"/>
</kw>
<status status="PASS" starttime="20220731 01:09:45.639" endtime="20220731 01:09:45.641"/>
</kw>
<msg timestamp="20220731 01:09:45.641" level="INFO">${path_with_leading} = /wordcount-Ld7GOT4C.txt</msg>
<status status="PASS" starttime="20220731 01:09:45.639" endtime="20220731 01:09:45.641"/>
</kw>
<status status="PASS" starttime="20220731 01:09:45.636" endtime="20220731 01:09:45.641"/>
</kw>
<msg timestamp="20220731 01:09:45.641" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-Ld7GOT4C.txt</msg>
<status status="PASS" starttime="20220731 01:09:45.635" endtime="20220731 01:09:45.641"/>
</kw>
<msg timestamp="20220731 01:09:45.641" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-Ld7GOT4C.txt</msg>
<status status="PASS" starttime="20220731 01:09:45.635" endtime="20220731 01:09:45.641"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220731 01:09:45.644" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-Ld7GOT4C.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220731 01:10:22.471" level="INFO">${rc} = 0</msg>
<msg timestamp="20220731 01:10:22.471" level="INFO">${output} = 2022-07-31 01:09:47 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.18.0.4:8032
2022-07-31 01:09:47 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" starttime="20220731 01:09:45.643" endtime="20220731 01:10:22.471"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220731 01:10:22.473" level="INFO">2022-07-31 01:09:47 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.18.0.4:8032
2022-07-31 01:09:47 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2022-07-31 01:09:47 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2022-07-31 01:09:47 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2022-07-31 01:09:47 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2022-07-31 01:09:48 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-07-31 01:09:49 INFO  FileInputFormat:283 - Total input paths to process : 3
2022-07-31 01:09:49 INFO  JobSubmitter:198 - number of splits:3
2022-07-31 01:09:49 INFO  JobSubmitter:287 - Submitting tokens for job: job_1659229563479_0004
2022-07-31 01:09:49 INFO  YarnClientImpl:273 - Submitted application application_1659229563479_0004
2022-07-31 01:09:49 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1659229563479_0004/
2022-07-31 01:09:49 INFO  Job:1339 - Running job: job_1659229563479_0004
2022-07-31 01:09:57 INFO  Job:1360 - Job job_1659229563479_0004 running in uber mode : false
2022-07-31 01:09:57 INFO  Job:1367 -  map 0% reduce 0%
2022-07-31 01:10:03 INFO  Job:1367 -  map 33% reduce 0%
2022-07-31 01:10:10 INFO  Job:1367 -  map 67% reduce 0%
2022-07-31 01:10:15 INFO  Job:1367 -  map 100% reduce 0%
2022-07-31 01:10:21 INFO  Job:1367 -  map 100% reduce 100%
2022-07-31 01:10:22 INFO  Job:1378 - Job job_1659229563479_0004 completed successfully
2022-07-31 01:10:22 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=32289
		FILE: Number of bytes written=542947
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39993
		OFS: Number of bytes written=22443
		OFS: Number of read operations=12
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=47924
		Total time spent by all reduces in occupied slots (ms)=18524
		Total time spent by all map tasks (ms)=11981
		Total time spent by all reduce tasks (ms)=4631
		Total vcore-milliseconds taken by all map tasks=11981
		Total vcore-milliseconds taken by all reduce tasks=4631
		Total megabyte-milliseconds taken by all map tasks=49074176
		Total megabyte-milliseconds taken by all reduce tasks=18968576
	Map-Reduce Framework
		Map input records=1064
		Map output records=4522
		Map output bytes=55364
		Map output materialized bytes=32301
		Input split bytes=300
		Combine input records=4522
		Combine output records=1810
		Reduce input groups=1546
		Reduce shuffle bytes=32301
		Reduce input records=1810
		Reduce output records=1546
		Spilled Records=3620
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=743
		CPU time spent (ms)=9420
		Physical memory (bytes) snapshot=1519771648
		Virtual memory (bytes) snapshot=15824465920
		Total committed heap usage (bytes)=1361051648
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39693
	File Output Format Counters 
		Bytes Written=22443</msg>
<status status="PASS" starttime="20220731 01:10:22.472" endtime="20220731 01:10:22.473"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220731 01:10:22.473" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220731 01:10:22.473" endtime="20220731 01:10:22.473"/>
</kw>
<status status="PASS" starttime="20220731 01:09:45.642" endtime="20220731 01:10:22.474"/>
</kw>
<msg timestamp="20220731 01:10:22.474" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220731 01:09:45.642" endtime="20220731 01:10:22.474"/>
</kw>
<msg timestamp="20220731 01:10:22.474" level="INFO">${output} = 2022-07-31 01:09:47 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.18.0.4:8032
2022-07-31 01:09:47 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" starttime="20220731 01:09:45.641" endtime="20220731 01:10:22.474"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>map tasks=3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220731 01:10:22.474" endtime="20220731 01:10:22.475"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220731 01:10:22.475" endtime="20220731 01:10:22.475"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20220731 01:09:45.610" endtime="20220731 01:10:22.475"/>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" starttime="20220731 01:09:10.196" endtime="20220731 01:10:22.476"/>
</suite>
<suite id="s1-s1-s5" name="Createmrenv" source="/opt/hadoop/smoketest/createmrenv.robot">
<test id="s1-s1-s5-t1" name="Create test volume, bucket and key" line="38">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220731 01:06:47.741" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20220731 01:06:50.706" level="INFO">${rc} = 255</msg>
<msg timestamp="20220731 01:06:50.706" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20220731 01:06:47.737" endtime="20220731 01:06:50.706"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220731 01:06:50.708" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20220731 01:06:50.707" endtime="20220731 01:06:50.708"/>
</kw>
<msg timestamp="20220731 01:06:50.709" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20220731 01:06:47.736" endtime="20220731 01:06:50.709"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create volume">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220731 01:06:50.720" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20220731 01:06:53.060" level="INFO">${rc} = 0</msg>
<msg timestamp="20220731 01:06:53.060" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220731 01:06:50.718" endtime="20220731 01:06:53.060"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220731 01:06:53.061" level="INFO"/>
<status status="PASS" starttime="20220731 01:06:53.061" endtime="20220731 01:06:53.062"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220731 01:06:53.062" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220731 01:06:53.062" endtime="20220731 01:06:53.062"/>
</kw>
<status status="PASS" starttime="20220731 01:06:50.718" endtime="20220731 01:06:53.062"/>
</kw>
<msg timestamp="20220731 01:06:53.063" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220731 01:06:50.718" endtime="20220731 01:06:53.064"/>
</kw>
<msg timestamp="20220731 01:06:53.064" level="INFO">${result} = </msg>
<status status="PASS" starttime="20220731 01:06:50.717" endtime="20220731 01:06:53.064"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220731 01:06:53.064" endtime="20220731 01:06:53.065"/>
</kw>
<status status="PASS" starttime="20220731 01:06:50.717" endtime="20220731 01:06:53.065"/>
</kw>
<status status="PASS" starttime="20220731 01:06:50.716" endtime="20220731 01:06:53.065"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume}/${bucket} --layout FILE_SYSTEM_OPTIMIZED</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220731 01:06:53.073" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 --layout FILE_SYSTEM_OPTIMIZED 2&gt;&amp;1'.</msg>
<msg timestamp="20220731 01:06:55.656" level="INFO">${rc} = 0</msg>
<msg timestamp="20220731 01:06:55.656" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220731 01:06:53.070" endtime="20220731 01:06:55.656"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220731 01:06:55.657" level="INFO"/>
<status status="PASS" starttime="20220731 01:06:55.656" endtime="20220731 01:06:55.657"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220731 01:06:55.658" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220731 01:06:55.657" endtime="20220731 01:06:55.658"/>
</kw>
<status status="PASS" starttime="20220731 01:06:53.068" endtime="20220731 01:06:55.658"/>
</kw>
<msg timestamp="20220731 01:06:55.658" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220731 01:06:53.067" endtime="20220731 01:06:55.659"/>
</kw>
<status status="PASS" starttime="20220731 01:06:53.067" endtime="20220731 01:06:55.659"/>
</kw>
<status status="PASS" starttime="20220731 01:06:53.067" endtime="20220731 01:06:55.659"/>
</kw>
<status status="PASS" starttime="20220731 01:06:53.066" endtime="20220731 01:06:55.659"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220731 01:06:55.659" endtime="20220731 01:06:55.661"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220731 01:06:55.665" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20220731 01:06:58.242" level="INFO">${rc} = 0</msg>
<msg timestamp="20220731 01:06:58.242" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-07-31T01:06...</msg>
<status status="PASS" starttime="20220731 01:06:55.663" endtime="20220731 01:06:58.243"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220731 01:06:58.244" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-07-31T01:06:55.612Z",
  "modificationTime" : "2022-07-31T01:06:55.612Z",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "FILE_SYSTEM_OPTIMIZED",
  "owner" : "hadoop",
  "link" : false
}</msg>
<status status="PASS" starttime="20220731 01:06:58.243" endtime="20220731 01:06:58.244"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220731 01:06:58.245" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220731 01:06:58.244" endtime="20220731 01:06:58.245"/>
</kw>
<status status="PASS" starttime="20220731 01:06:55.662" endtime="20220731 01:06:58.245"/>
</kw>
<msg timestamp="20220731 01:06:58.245" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220731 01:06:55.662" endtime="20220731 01:06:58.245"/>
</kw>
<msg timestamp="20220731 01:06:58.246" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-07-31T01:06...</msg>
<status status="PASS" starttime="20220731 01:06:55.662" endtime="20220731 01:06:58.246"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220731 01:06:58.246" endtime="20220731 01:06:58.246"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220731 01:06:58.250" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220731 01:06:58.250" endtime="20220731 01:06:58.250"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220731 01:06:58.251" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220731 01:06:58.250" endtime="20220731 01:06:58.251"/>
</kw>
<status status="PASS" starttime="20220731 01:06:58.249" endtime="20220731 01:06:58.251"/>
</kw>
<msg timestamp="20220731 01:06:58.251" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220731 01:06:58.248" endtime="20220731 01:06:58.251"/>
</kw>
<status status="PASS" starttime="20220731 01:06:58.247" endtime="20220731 01:06:58.251"/>
</kw>
<msg timestamp="20220731 01:06:58.251" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" starttime="20220731 01:06:58.247" endtime="20220731 01:06:58.251"/>
</kw>
<msg timestamp="20220731 01:06:58.252" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" starttime="20220731 01:06:58.246" endtime="20220731 01:06:58.252"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220731 01:06:58.255" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20220731 01:07:00.625" level="INFO">${rc} = 0</msg>
<msg timestamp="20220731 01:07:00.625" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220731 01:06:58.253" endtime="20220731 01:07:00.625"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220731 01:07:00.626" level="INFO"/>
<status status="PASS" starttime="20220731 01:07:00.626" endtime="20220731 01:07:00.627"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220731 01:07:00.627" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220731 01:07:00.627" endtime="20220731 01:07:00.627"/>
</kw>
<status status="PASS" starttime="20220731 01:06:58.252" endtime="20220731 01:07:00.628"/>
</kw>
<msg timestamp="20220731 01:07:00.628" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220731 01:06:58.252" endtime="20220731 01:07:00.628"/>
</kw>
<status status="PASS" starttime="20220731 01:06:58.252" endtime="20220731 01:07:00.628"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220731 01:07:00.631" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220731 01:07:06.223" level="INFO">${rc} = 0</msg>
<msg timestamp="20220731 01:07:06.223" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220731 01:07:00.629" endtime="20220731 01:07:06.223"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220731 01:07:06.225" level="INFO"/>
<status status="PASS" starttime="20220731 01:07:06.224" endtime="20220731 01:07:06.225"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220731 01:07:06.225" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220731 01:07:06.225" endtime="20220731 01:07:06.226"/>
</kw>
<status status="PASS" starttime="20220731 01:07:00.629" endtime="20220731 01:07:06.226"/>
</kw>
<msg timestamp="20220731 01:07:06.226" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220731 01:07:00.629" endtime="20220731 01:07:06.226"/>
</kw>
<status status="PASS" starttime="20220731 01:07:00.628" endtime="20220731 01:07:06.227"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220731 01:07:06.230" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220731 01:07:11.108" level="INFO">${rc} = 0</msg>
<msg timestamp="20220731 01:07:11.108" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220731 01:07:06.228" endtime="20220731 01:07:11.108"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220731 01:07:11.109" level="INFO"/>
<status status="PASS" starttime="20220731 01:07:11.108" endtime="20220731 01:07:11.109"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220731 01:07:11.110" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220731 01:07:11.109" endtime="20220731 01:07:11.110"/>
</kw>
<status status="PASS" starttime="20220731 01:07:06.228" endtime="20220731 01:07:11.110"/>
</kw>
<msg timestamp="20220731 01:07:11.110" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220731 01:07:06.227" endtime="20220731 01:07:11.111"/>
</kw>
<status status="PASS" starttime="20220731 01:07:06.227" endtime="20220731 01:07:11.111"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220731 01:07:11.114" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20220731 01:07:17.172" level="INFO">${rc} = 0</msg>
<msg timestamp="20220731 01:07:17.172" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220731 01:07:11.112" endtime="20220731 01:07:17.172"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220731 01:07:17.173" level="INFO"/>
<status status="PASS" starttime="20220731 01:07:17.173" endtime="20220731 01:07:17.173"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220731 01:07:17.174" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220731 01:07:17.174" endtime="20220731 01:07:17.174"/>
</kw>
<status status="PASS" starttime="20220731 01:07:11.112" endtime="20220731 01:07:17.174"/>
</kw>
<msg timestamp="20220731 01:07:17.174" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220731 01:07:11.111" endtime="20220731 01:07:17.175"/>
</kw>
<status status="PASS" starttime="20220731 01:07:11.111" endtime="20220731 01:07:17.175"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220731 01:06:47.735" endtime="20220731 01:07:17.175"/>
</test>
<test id="s1-s1-s5-t2" name="Create user dir for hadoop" line="51">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220731 01:07:17.181" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220731 01:07:17.180" endtime="20220731 01:07:17.181"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220731 01:07:17.181" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220731 01:07:17.181" endtime="20220731 01:07:17.181"/>
</kw>
<status status="PASS" starttime="20220731 01:07:17.180" endtime="20220731 01:07:17.182"/>
</kw>
<msg timestamp="20220731 01:07:17.182" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220731 01:07:17.179" endtime="20220731 01:07:17.182"/>
</kw>
<status status="PASS" starttime="20220731 01:07:17.178" endtime="20220731 01:07:17.182"/>
</kw>
<msg timestamp="20220731 01:07:17.182" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20220731 01:07:17.178" endtime="20220731 01:07:17.182"/>
</kw>
<msg timestamp="20220731 01:07:17.182" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20220731 01:07:17.177" endtime="20220731 01:07:17.182"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220731 01:07:17.187" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20220731 01:07:19.748" level="INFO">${rc} = 0</msg>
<msg timestamp="20220731 01:07:19.748" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220731 01:07:17.185" endtime="20220731 01:07:19.748"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220731 01:07:19.750" level="INFO"/>
<status status="PASS" starttime="20220731 01:07:19.749" endtime="20220731 01:07:19.750"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220731 01:07:19.750" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220731 01:07:19.750" endtime="20220731 01:07:19.750"/>
</kw>
<status status="PASS" starttime="20220731 01:07:17.184" endtime="20220731 01:07:19.751"/>
</kw>
<msg timestamp="20220731 01:07:19.751" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220731 01:07:17.184" endtime="20220731 01:07:19.751"/>
</kw>
<status status="PASS" starttime="20220731 01:07:17.182" endtime="20220731 01:07:19.751"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220731 01:07:19.755" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20220731 01:07:22.226" level="INFO">${rc} = 0</msg>
<msg timestamp="20220731 01:07:22.226" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220731 01:07:19.753" endtime="20220731 01:07:22.226"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220731 01:07:22.228" level="INFO"/>
<status status="PASS" starttime="20220731 01:07:22.227" endtime="20220731 01:07:22.228"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220731 01:07:22.228" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220731 01:07:22.228" endtime="20220731 01:07:22.228"/>
</kw>
<status status="PASS" starttime="20220731 01:07:19.753" endtime="20220731 01:07:22.229"/>
</kw>
<msg timestamp="20220731 01:07:22.229" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220731 01:07:19.752" endtime="20220731 01:07:22.229"/>
</kw>
<status status="PASS" starttime="20220731 01:07:19.752" endtime="20220731 01:07:22.229"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220731 01:07:17.176" endtime="20220731 01:07:22.230"/>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" starttime="20220731 01:06:47.674" endtime="20220731 01:07:22.231"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="195133"/>
</suite>
<suite id="s1-s2" name="hadoop31">
<suite id="s1-s2-s1" name="hadoopfs-o3fs" source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot">
<test id="s1-s2-s1-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220731 01:12:24.013" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220731 01:12:24.013" endtime="20220731 01:12:24.013"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220731 01:12:24.014" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220731 01:12:24.013" endtime="20220731 01:12:24.014"/>
</kw>
<status status="PASS" starttime="20220731 01:12:24.012" endtime="20220731 01:12:24.014"/>
</kw>
<msg timestamp="20220731 01:12:24.014" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220731 01:12:24.012" endtime="20220731 01:12:24.014"/>
</kw>
<status status="PASS" starttime="20220731 01:12:24.011" endtime="20220731 01:12:24.014"/>
</kw>
<msg timestamp="20220731 01:12:24.014" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20220731 01:12:24.011" endtime="20220731 01:12:24.014"/>
</kw>
<msg timestamp="20220731 01:12:24.015" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20220731 01:12:24.010" endtime="20220731 01:12:24.015"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220731 01:12:24.015" level="INFO">${random} = 12967</msg>
<status status="PASS" starttime="20220731 01:12:24.015" endtime="20220731 01:12:24.015"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220731 01:12:24.024" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-12967 2&gt;&amp;1'.</msg>
<msg timestamp="20220731 01:12:27.324" level="INFO">${rc} = 0</msg>
<msg timestamp="20220731 01:12:27.324" level="INFO">${output} = 2022-07-31 01:12:24 INFO  Configuration:3318 - Removed undeclared tags:
2022-07-31 01:12:25 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org....</msg>
<status status="PASS" starttime="20220731 01:12:24.016" endtime="20220731 01:12:27.324"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220731 01:12:27.325" level="INFO">2022-07-31 01:12:24 INFO  Configuration:3318 - Removed undeclared tags:
2022-07-31 01:12:25 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2022-07-31 01:12:25 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2022-07-31 01:12:25 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2022-07-31 01:12:25 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2022-07-31 01:12:25 INFO  Configuration:3318 - Removed undeclared tags:
2022-07-31 01:12:26 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20220731 01:12:27.324" endtime="20220731 01:12:27.325"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220731 01:12:27.326" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220731 01:12:27.325" endtime="20220731 01:12:27.326"/>
</kw>
<status status="PASS" starttime="20220731 01:12:24.016" endtime="20220731 01:12:27.326"/>
</kw>
<msg timestamp="20220731 01:12:27.326" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220731 01:12:24.016" endtime="20220731 01:12:27.326"/>
</kw>
<msg timestamp="20220731 01:12:27.326" level="INFO">${result} = 2022-07-31 01:12:24 INFO  Configuration:3318 - Removed undeclared tags:
2022-07-31 01:12:25 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org....</msg>
<status status="PASS" starttime="20220731 01:12:24.015" endtime="20220731 01:12:27.327"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>multiple SLF4J bindings</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220731 01:12:27.327" endtime="20220731 01:12:27.327"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -ls ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220731 01:12:27.330" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20220731 01:12:29.159" level="INFO">${rc} = 0</msg>
<msg timestamp="20220731 01:12:29.159" level="INFO">${output} = 2022-07-31 01:12:28 INFO  Configuration:3318 - Removed undeclared tags:
Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2022-07-31 01:12 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop had...</msg>
<status status="PASS" starttime="20220731 01:12:27.328" endtime="20220731 01:12:29.159"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220731 01:12:29.160" level="INFO">2022-07-31 01:12:28 INFO  Configuration:3318 - Removed undeclared tags:
Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2022-07-31 01:12 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21867 2022-07-31 01:12 o3fs://bucket1.volume1.om/ozone-12967
drwxrwxrwx   - hadoop hadoop          0 2022-07-31 01:12 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20220731 01:12:29.160" endtime="20220731 01:12:29.160"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220731 01:12:29.161" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220731 01:12:29.161" endtime="20220731 01:12:29.161"/>
</kw>
<status status="PASS" starttime="20220731 01:12:27.328" endtime="20220731 01:12:29.161"/>
</kw>
<msg timestamp="20220731 01:12:29.161" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220731 01:12:27.328" endtime="20220731 01:12:29.161"/>
</kw>
<msg timestamp="20220731 01:12:29.162" level="INFO">${result} = 2022-07-31 01:12:28 INFO  Configuration:3318 - Removed undeclared tags:
Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2022-07-31 01:12 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop had...</msg>
<status status="PASS" starttime="20220731 01:12:27.327" endtime="20220731 01:12:29.162"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220731 01:12:29.162" endtime="20220731 01:12:29.162"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -cat ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220731 01:12:29.165" level="INFO">Running command 'hdfs dfs -cat o3fs://bucket1.volume1.om//ozone-12967 2&gt;&amp;1'.</msg>
<msg timestamp="20220731 01:12:32.496" level="INFO">${rc} = 0</msg>
<msg timestamp="20220731 01:12:32.496" level="INFO">${output} = 2022-07-31 01:12:30 INFO  Configuration:3318 - Removed undeclared tags:
2022-07-31 01:12:31 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org....</msg>
<status status="PASS" starttime="20220731 01:12:29.164" endtime="20220731 01:12:32.496"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220731 01:12:32.497" level="INFO">2022-07-31 01:12:30 INFO  Configuration:3318 - Removed undeclared tags:
2022-07-31 01:12:31 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2022-07-31 01:12:31 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2022-07-31 01:12:31 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2022-07-31 01:12:31 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
This product includes software developed by The Apache Software
Foundation (http://www.apache.org/).

The binary distribution of this product bundles binaries of
org.iq80.leveldb:leveldb-api (https://github.com/dain/leveldb), which has the
following notices:
* Copyright 2011 Dain Sundstrom &lt;dain@iq80.com&gt;
* Copyright 2011 FuseSource Corp. http://fusesource.com

The binary distribution of this product bundles binaries of
AWS SDK for Java - Bundle 1.11.271,
AWS Java SDK for AWS KMS 1.11.271,
AWS Java SDK for Amazon S3 1.11.271,
AWS Java SDK for AWS STS 1.11.271,
JMES Path Query library 1.0,
which has the following notices:
 * This software includes third party software subject to the following
 copyrights: - XML parsing and utility functions from JetS3t - Copyright
 2006-2009 James Murty. - JSON parsing and utility functions from JSON.org -
 Copyright 2002 JSON.org. - PKCS#1 PEM encoded private key parsing and utility
 functions from oauth.googlecode.com - Copyright 1998-2010 AOL Inc.

The binary distribution of this product bundles binaries of
Gson 2.2.4,
which has the following notices:

                            The Netty Project
                            =================

Please visit the Netty web site for more information:

  * http://netty.io/

Copyright 2014 The Netty Project

The Netty Project licenses this file to you under the Apache License,
version 2.0 (the "License"); you may not use this file except in compliance
with the License. You may obtain a copy of the License at:

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
License for the specific language governing permissions and limitations
under the License.

Also, please refer to each LICENSE.&lt;component&gt;.txt file, which is located in
the 'license' directory of the distribution file, for the license terms of the
components that this product depends on.

-------------------------------------------------------------------------------
This product contains the extensions to Java Collections Framework which has
been derived from the works by JSR-166 EG, Doug Lea, and Jason T. Greene:

  * LICENSE:
    * license/LICENSE.jsr166y.txt (Public Domain)
  * HOMEPAGE:
    * http://gee.cs.oswego.edu/cgi-bin/viewcvs.cgi/jsr166/
    * http://viewvc.jboss.org/cgi-bin/viewvc.cgi/jbosscache/experimental/jsr166/

This product contains a modified version of Robert Harder's Public Domain
Base64 Encoder and Decoder, which can be obtained at:

  * LICENSE:
    * license/LICENSE.base64.txt (Public Domain)
  * HOMEPAGE:
    * http://iharder.sourceforge.net/current/java/base64/

This product contains a modified portion of 'Webbit', an event based
WebSocket and HTTP server, which can be obtained at:

  * LICENSE:
    * license/LICENSE.webbit.txt (BSD License)
  * HOMEPAGE:
    * https://github.com/joewalnes/webbit

This product contains a modified portion of 'SLF4J', a simple logging
facade for Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.slf4j.txt (MIT License)
  * HOMEPAGE:
    * http://www.slf4j.org/

This product contains a modified portion of 'ArrayDeque', written by Josh
Bloch of Google, Inc:

  * LICENSE:
    * license/LICENSE.deque.txt (Public Domain)

This product contains a modified portion of 'Apache Harmony', an open source
Java SE, which can be obtained at:

  * LICENSE:
    * license/LICENSE.harmony.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://archive.apache.org/dist/harmony/

This product contains a modified version of Roland Kuhn's ASL2
AbstractNodeQueue, which is based on Dmitriy Vyukov's non-intrusive MPSC queue.
It can be obtained at:

  * LICENSE:
    * license/LICENSE.abstractnodequeue.txt (Public Domain)
  * HOMEPAGE:
    * https://github.com/akka/akka/blob/wip-2.2.3-for-scala-2.11/akka-actor/src/main/java/akka/dispatch/AbstractNodeQueue.java

This product contains a modified portion of 'jbzip2', a Java bzip2 compression
and decompression library written by Matthew J. Francis. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jbzip2.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jbzip2/

This product contains a modified portion of 'libdivsufsort', a C API library to construct
the suffix array and the Burrows-Wheeler transformed string for any input string of
a constant-size alphabet written by Yuta Mori. It can be obtained at:

  * LICENSE:
    * license/LICENSE.libdivsufsort.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/libdivsufsort/

This product contains a modified portion of Nitsan Wakart's 'JCTools', Java Concurrency Tools for the JVM,
 which can be obtained at:

  * LICENSE:
    * license/LICENSE.jctools.txt (ASL2 License)
  * HOMEPAGE:
    * https://github.com/JCTools/JCTools

This product optionally depends on 'JZlib', a re-implementation of zlib in
pure Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jzlib.txt (BSD style License)
  * HOMEPAGE:
    * http://www.jcraft.com/jzlib/

This product optionally depends on 'Compress-LZF', a Java library for encoding and
decoding data in LZF format, written by Tatu Saloranta. It can be obtained at:

  * LICENSE:
    * license/LICENSE.compress-lzf.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/ning/compress

This product optionally depends on 'lz4', a LZ4 Java compression
and decompression library written by Adrien Grand. It can be obtained at:

  * LICENSE:
    * license/LICENSE.lz4.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jpountz/lz4-java

This product optionally depends on 'lzma-java', a LZMA Java compression
and decompression library, which can be obtained at:

  * LICENSE:
    * license/LICENSE.lzma-java.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jponge/lzma-java

This product contains a modified portion of 'jfastlz', a Java port of FastLZ compression
and decompression library written by William Kinney. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jfastlz.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jfastlz/

This product contains a modified portion of and optionally depends on 'Protocol Buffers', Google's data
interchange format, which can be obtained at:

  * LICENSE:
    * license/LICENSE.protobuf.txt (New BSD License)
  * HOMEPAGE:
    * http://code.google.com/p/protobuf/

This product optionally depends on 'Bouncy Castle Crypto APIs' to generate
a temporary self-signed X.509 certificate when the JVM does not provide the
equivalent functionality.  It can be obtained at:

  * LICENSE:
    * license/LICENSE.bouncycastle.txt (MIT License)
  * HOMEPAGE:
    * http://www.bouncycastle.org/

This product optionally depends on 'Snappy', a compression library produced
by Google Inc, which can be obtained at:

  * LICENSE:
    * license/LICENSE.snappy.txt (New BSD License)
  * HOMEPAGE:
    * http://code.google.com/p/snappy/

This product optionally depends on 'JBoss Marshalling', an alternative Java
serialization API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jboss-marshalling.txt (GNU LGPL 2.1)
  * HOMEPAGE:
    * http://www.jboss.org/jbossmarshalling

This product optionally depends on 'Caliper', Google's micro-
benchmarking framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.caliper.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://code.google.com/p/caliper/

This product optionally depends on 'Apache Commons Logging', a logging
framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-logging.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://commons.apache.org/logging/

This product optionally depends on 'Apache Log4J', a logging framework, which
can be obtained at:

  * LICENSE:
    * license/LICENSE.log4j.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://logging.apache.org/log4j/

This product optionally depends on 'Aalto XML', an ultra-high performance
non-blocking XML processor, which can be obtained at:

  * LICENSE:
    * license/LICENSE.aalto-xml.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://wiki.fasterxml.com/AaltoHome

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Twitter. It can be obtained at:

  * LICENSE:
    * license/LICENSE.hpack.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/twitter/hpack

This product contains a modified portion of 'Apache Commons Lang', a Java library
provides utilities for the java.lang API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-lang.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://commons.apache.org/proper/commons-lang/

This product contains a modified portion of 'JDOM 1.1', which can be obtained at:

  * LICENSE:
    * https://github.com/hunterhacker/jdom/blob/jdom-1.1/core/LICENSE.txt
  * HOMEPAGE:
    * http://www.jdom.org/

The binary distribution of this product bundles binaries of
Commons Codec 1.4,
which has the following notices:
 * src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.javacontains test data from http://aspell.net/test/orig/batch0.tab.Copyright (C) 2002 Kevin Atkinson (kevina@gnu.org)
  ===============================================================================
  The content of package org.apache.commons.codec.language.bm has been translated
  from the original php source code available at http://stevemorse.org/phoneticinfo.htm
  with permission from the original authors.
  Original source copyright:Copyright (c) 2008 Alexander Beider &amp; Stephen P. Morse.

The binary distribution of this product bundles binaries of
Commons Lang 2.6,
which has the following notices:
 * This product includes software from the Spring Framework,under the Apache License 2.0 (see: StringUtils.containsWhitespace())

The binary distribution of this product bundles binaries of
Apache Log4j 1.2.17,
which has the following notices:
 * ResolverUtil.java
    Copyright 2005-2006 Tim Fennell
  Dumbster SMTP test server
    Copyright 2004 Jason Paul Kitchen
  TypeUtil.java
    Copyright 2002-2012 Ramnivas Laddad, Juergen Hoeller, Chris Beams

The binary distribution of this product bundles binaries of
"Java Concurrency in Practice" book annotations 1.0,
which has the following notices:
 * Copyright (c) 2005 Brian Goetz and Tim Peierls Released under the Creative
  Commons Attribution License (http://creativecommons.org/licenses/by/2.5)
  Official home: http://www.jcip.net Any republication or derived work
  distributed in source code form must include this copyright and license
  notice.

The binary distribution of this product bundles binaries of
Jetty :: Http Utility 9.3.19.,
Jetty :: IO Utility 9.3.19.,
Jetty :: Security 9.3.19.,
Jetty :: Server Core 9.3.19.,
Jetty :: Servlet Handling 9.3.19.,
Jetty :: Utilities 9.3.19.,
Jetty :: Utilities :: Ajax,
Jetty :: Webapp Application Support 9.3.19.,
Jetty :: XML utilities 9.3.19.,
which has the following notices:
 * ==============================================================
    Jetty Web Container
    Copyright 1995-2016 Mort Bay Consulting Pty Ltd.
   ==============================================================

   The Jetty Web Container is Copyright Mort Bay Consulting Pty Ltd
   unless otherwise noted.

   Jetty is dual licensed under both

     * The Apache 2.0 License
       http://www.apache.org/licenses/LICENSE-2.0.html

         and

     * The Eclipse Public 1.0 License
       http://www.eclipse.org/legal/epl-v10.html

   Jetty may be distributed under either license.

   ------
   Eclipse

   The following artifacts are EPL.
    * org.eclipse.jetty.orbit:org.eclipse.jdt.core

   The following artifacts are EPL and ASL2.
    * org.eclipse.jetty.orbit:javax.security.auth.message


   The following artifacts are EPL and CDDL 1.0.
    * org.eclipse.jetty.orbit:javax.mail.glassfish


   ------
   Oracle

   The following artifacts are CDDL + GPLv2 with classpath exception.
   https://glassfish.dev.java.net/nonav/public/CDDL+GPL.html

    * javax.servlet:javax.servlet-api
    * javax.annotation:javax.annotation-api
    * javax.transaction:javax.transaction-api
    * javax.websocket:javax.websocket-api

   ------
   Oracle OpenJDK

   If ALPN is used to negotiate HTTP/2 connections, then the following
   artifacts may be included in the distribution or downloaded when ALPN
   module is selected.

    * java.sun.security.ssl

   These artifacts replace/modify OpenJDK classes.  The modififications
   are hosted at github and both modified and original are under GPL v2 with
   classpath exceptions.
   http://openjdk.java.net/legal/gplv2+ce.html


   ------
   OW2

   The following artifacts are licensed by the OW2 Foundation according to the
   terms of http://asm.ow2.org/license.html

   org.ow2.asm:asm-commons
   org.ow2.asm:asm


   ------
   Apache

   The following artifacts are ASL2 licensed.

   org.apache.taglibs:taglibs-standard-spec
   org.apache.taglibs:taglibs-standard-impl


   ------
   MortBay

   The following artifacts are ASL2 licensed.  Based on selected classes from
   following Apache Tomcat jars, all ASL2 licensed.

   org.mortbay.jasper:apache-jsp
     org.apache.tomcat:tomcat-jasper
     org.apache.tomcat:tomcat-juli
     org.apache.tomcat:tomcat-jsp-api
     org.apache.tomcat:tomcat-el-api
     org.apache.tomcat:tomcat-jasper-el
     org.apache.tomcat:tomcat-api
     org.apache.tomcat:tomcat-util-scan
     org.apache.tomcat:tomcat-util

   org.mortbay.jasper:apache-el
     org.apache.tomcat:tomcat-jasper-el
     org.apache.tomcat:tomcat-el-api


   ------
   Mortbay

   The following artifacts are CDDL + GPLv2 with classpath exception.

   https://glassfish.dev.java.net/nonav/public/CDDL+GPL.html

   org.eclipse.jetty.toolchain:jetty-schemas

   ------
   Assorted

   The UnixCrypt.java code implements the one way cryptography used by
   Unix systems for simple password protection.  Copyright 1996 Aki Yoshida,
   modified April 2001  by Iris Van den Broeke, Daniel Deville.
   Permission to use, copy, modify and distribute UnixCrypt
   for non-commercial or commercial purposes and without fee is
   granted provided that the copyright notice appears in all copies./

The binary distribution of this product bundles binaries of
Snappy for Java 1.0.4.1,
which has the following notices:
 * This product includes software developed by Google
    Snappy: http://code.google.com/p/snappy/ (New BSD License)

   This product includes software developed by Apache
    PureJavaCrc32C from apache-hadoop-common http://hadoop.apache.org/
    (Apache 2.0 license)

   This library containd statically linked libstdc++. This inclusion is allowed by
   "GCC RUntime Library Exception"
   http://gcc.gnu.org/onlinedocs/libstdc++/manual/license.html

   == Contributors ==
     * Tatu Saloranta
       * Providing benchmark suite
     * Alec Wysoker
       * Performance and memory usage improvement

The binary distribution of this product bundles binaries of
Xerces2 Java Parser 2.9.1,
which has the following notices:
 * =========================================================================
   ==  NOTICE file corresponding to section 4(d) of the Apache License,   ==
   ==  Version 2.0, in this case for the Apache Xerces Java distribution. ==
   =========================================================================

   Apache Xerces Java
   Copyright 1999-2007 The Apache Software Foundation

   This product includes software developed at
   The Apache Software Foundation (http://www.apache.org/).

   Portions of this software were originally based on the following:
     - software copyright (c) 1999, IBM Corporation., http://www.ibm.com.
     - software copyright (c) 1999, Sun Microsystems., http://www.sun.com.
     - voluntary contributions made by Paul Eng on behalf of the
       Apache Software Foundation that were originally developed at iClick, Inc.,
       software copyright (c) 1999.

The binary distribution of this product bundles binaries of
Logback Classic Module 1.1.2,
Logback Core Module 1.1.2,
which has the following notices:
 * Logback: the reliable, generic, fast and flexible logging framework.
   Copyright (C) 1999-2012, QOS.ch. All rights reserved.

The binary distribution of this product bundles binaries of
Apache HBase - Annotations 1.2.6,
Apache HBase - Client 1.2.6,
Apache HBase - Common 1.2.6,
Apache HBase - Hadoop Compatibility 1.2.6,
Apache HBase - Hadoop Two Compatibility 1.2.6,
Apache HBase - Prefix Tree 1.2.6,
Apache HBase - Procedure 1.2.6,
Apache HBase - Protocol 1.2.6,
Apache HBase - Server 1.2.6,
which has the following notices:
 * Apache HBase
   Copyright 2007-2015 The Apache Software Foundation

   This product includes software developed at
   The Apache Software Foundation (http://www.apache.org/).

   --
   This product incorporates portions of the 'Hadoop' project

   Copyright 2007-2009 The Apache Software Foundation

   Licensed under the Apache License v2.0
   --
   Our Orca logo we got here: http://www.vectorfree.com/jumping-orca
   It is licensed Creative Commons Attribution 3.0.
   See https://creativecommons.org/licenses/by/3.0/us/
   We changed the logo by stripping the colored background, inverting
   it and then rotating it some.

   Later we found that vectorfree.com image is not properly licensed.
   The original is owned by vectorportal.com. The original was
   relicensed so we could use it as Creative Commons Attribution 3.0.
   The license is bundled with the download available here:
   http://www.vectorportal.com/subcategory/205/KILLER-WHALE-FREE-VECTOR.eps/ifile/9136/detailtest.asp
   --
   This product includes portions of the Bootstrap project v3.0.0

   Copyright 2013 Twitter, Inc.

   Licensed under the Apache License v2.0

   This product uses the Glyphicons Halflings icon set.

   http://glyphicons.com/

   Copyright Jan Kovařík

   Licensed under the Apache License v2.0 as a part of the Bootstrap project.

   --
   This product includes portions of the Guava project v14, specifically
   'hbase-common/src/main/java/org/apache/hadoop/hbase/io/LimitInputStream.java'

   Copyright (C) 2007 The Guava Authors

   Licensed under the Apache License, Version 2.0

The binary distribution of this product bundles binaries of
Phoenix Core 4.7.0,
which has the following notices:
   Apache Phoenix
   Copyright 2013-2016 The Apache Software Foundation

   This product includes software developed by The Apache Software
   Foundation (http://www.apache.org/).

   This also includes:

   The phoenix-spark module has been adapted from the phoenix-spark library
   distributed under the terms of the Apache 2 license. Original source copyright:
   Copyright 2014 Simply Measured, Inc.
   Copyright 2015 Interset Software Inc.

   The file bin/daemon.py is based on the file of the same name in python-daemon 2.0.5
   (https://pypi.python.org/pypi/python-daemon/). Original source copyright:
   # Copyright © 2008–2015 Ben Finney &lt;ben+python@benfinney.id.au&gt;
   # Copyright © 2007–2008 Robert Niederreiter, Jens Klein
   # Copyright © 2004–2005 Chad J. Schroeder
   # Copyright © 2003 Clark Evans
   # Copyright © 2002 Noah Spurrier
   # Copyright © 2001 Jürgen Hermann

The binary distribution of this product bundles binaries of
Plexus Cipher: encryption/decryption Component 1.4,
which has the following notices:
 * The code in this component contains a class - Base64 taken from http://juliusdavies.ca/svn/not-yet-commons-ssl/tags/commons-ssl-0.3.10/src/java/org/apache/commons/ssl/Base64.java
   which is Apache license: http://www.apache.org/licenses/LICENSE-2.0

   The PBE key processing routine PBECipher.createCipher() is adopted from http://juliusdavies.ca/svn/not-yet-commons-ssl/tags/commons-ssl-0.3.10/src/java/org/apache/commons/ssl/OpenSSL.java
    which is also Apache APL-2.0 license: http://www.apache.org/licenses/LICENSE-2.0

The binary distribution of this product bundles binaries of
software.amazon.ion:ion-java 1.0.1,
which has the following notices:
 * Amazon Ion Java Copyright 2007-2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.

The binary distribution of this product bundles binaries of
joda-time:joda-time:2.9.9
which has the following notices:
 * =============================================================================
   = NOTICE file corresponding to section 4d of the Apache License Version 2.0 =
   =============================================================================
   This product includes software developed by
   Joda.org (http://www.joda.org/).

The binary distribution of this product bundles binaries of
Ehcache 3.3.1,
which has the following notices:
 * Ehcache V3 Copyright 2014-2016 Terracotta, Inc.

The binary distribution of this product bundles binaries of
snakeyaml (https://bitbucket.org/asomov/snakeyaml),
which has the following notices:
 * Copyright (c) 2008, http://www.snakeyaml.org

The binary distribution of this product bundles binaries of
swagger-annotations (https://github.com/swagger-api/swagger-core),
which has the following notices:
 * Copyright 2016 SmartBear Software

The binary distribution of this product bundles binaries of
metrics-core 3.2.4
which has the following notices:
 * Copyright 2010-2013 Coda Hale and Yammer, Inc.

   This product includes software developed by Coda Hale and Yammer, Inc.

   This product includes code derived from the JSR-166 project (ThreadLocalRandom, Striped64,
   LongAdder), which was released with the following comments:

   Written by Doug Lea with assistance from members of JCP JSR-166
   Expert Group and released to the public domain, as explained at
   http://creativecommons.org/publicdomain/zero/1.0/</msg>
<status status="PASS" starttime="20220731 01:12:32.497" endtime="20220731 01:12:32.498"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220731 01:12:32.498" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220731 01:12:32.498" endtime="20220731 01:12:32.499"/>
</kw>
<status status="PASS" starttime="20220731 01:12:29.163" endtime="20220731 01:12:32.499"/>
</kw>
<msg timestamp="20220731 01:12:32.499" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220731 01:12:29.163" endtime="20220731 01:12:32.499"/>
</kw>
<msg timestamp="20220731 01:12:32.500" level="INFO">${result} = 2022-07-31 01:12:30 INFO  Configuration:3318 - Removed undeclared tags:
2022-07-31 01:12:31 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org....</msg>
<status status="PASS" starttime="20220731 01:12:29.162" endtime="20220731 01:12:32.500"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>This product includes software developed</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220731 01:12:32.501" endtime="20220731 01:12:32.501"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220731 01:12:24.009" endtime="20220731 01:12:32.501"/>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" starttime="20220731 01:12:23.963" endtime="20220731 01:12:32.502"/>
</suite>
<suite id="s1-s2-s2" name="mapreduce-o3fs" source="/opt/ozone/smoketest/mapreduce.robot">
<test id="s1-s2-s2-t1" name="Execute PI calculation">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220731 01:12:37.347" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20220731 01:12:37.353" level="INFO">${rc} = 0</msg>
<msg timestamp="20220731 01:12:37.353" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20220731 01:12:37.344" endtime="20220731 01:12:37.353"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220731 01:12:37.354" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20220731 01:12:37.354" endtime="20220731 01:12:37.354"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220731 01:12:37.355" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220731 01:12:37.354" endtime="20220731 01:12:37.355"/>
</kw>
<status status="PASS" starttime="20220731 01:12:37.343" endtime="20220731 01:12:37.355"/>
</kw>
<msg timestamp="20220731 01:12:37.355" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220731 01:12:37.343" endtime="20220731 01:12:37.355"/>
</kw>
<msg timestamp="20220731 01:12:37.355" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20220731 01:12:37.342" endtime="20220731 01:12:37.355"/>
</kw>
<msg timestamp="20220731 01:12:37.356" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20220731 01:12:37.342" endtime="20220731 01:12:37.356"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220731 01:12:37.360" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220731 01:12:37.359" endtime="20220731 01:12:37.360"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220731 01:12:37.360" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220731 01:12:37.360" endtime="20220731 01:12:37.360"/>
</kw>
<status status="PASS" starttime="20220731 01:12:37.359" endtime="20220731 01:12:37.360"/>
</kw>
<msg timestamp="20220731 01:12:37.360" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220731 01:12:37.358" endtime="20220731 01:12:37.360"/>
</kw>
<status status="PASS" starttime="20220731 01:12:37.358" endtime="20220731 01:12:37.361"/>
</kw>
<msg timestamp="20220731 01:12:37.361" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20220731 01:12:37.357" endtime="20220731 01:12:37.361"/>
</kw>
<msg timestamp="20220731 01:12:37.361" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20220731 01:12:37.356" endtime="20220731 01:12:37.361"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220731 01:12:37.364" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20220731 01:13:16.412" level="INFO">${rc} = 0</msg>
<msg timestamp="20220731 01:13:16.412" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2022-07-31 01:12:38 INFO  Configuration:3318 - Removed undeclared tags:
2022-07-31 01:12:39 INFO  FluentPropertyBeanIntrospector:147 - Error when creating Prope...</msg>
<status status="PASS" starttime="20220731 01:12:37.363" endtime="20220731 01:13:16.412"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220731 01:13:16.413" level="INFO">Number of Maps  = 3
Samples per Map = 3
2022-07-31 01:12:38 INFO  Configuration:3318 - Removed undeclared tags:
2022-07-31 01:12:39 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2022-07-31 01:12:39 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2022-07-31 01:12:39 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2022-07-31 01:12:39 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2022-07-31 01:12:39 INFO  Configuration:3318 - Removed undeclared tags:
2022-07-31 01:12:39 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2022-07-31 01:12:40 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.19.0.8:8032
2022-07-31 01:12:41 INFO  Configuration:3318 - Removed undeclared tags:
2022-07-31 01:12:41 INFO  Configuration:3318 - Removed undeclared tags:
2022-07-31 01:12:41 INFO  FileInputFormat:292 - Total input files to process : 3
2022-07-31 01:12:41 INFO  JobSubmitter:202 - number of splits:3
2022-07-31 01:12:41 INFO  JobSubmitter:298 - Submitting tokens for job: job_1659229871406_0001
2022-07-31 01:12:41 INFO  JobSubmitter:299 - Executing with tokens: []
2022-07-31 01:12:41 INFO  Configuration:3318 - Removed undeclared tags:
2022-07-31 01:12:42 INFO  Configuration:3318 - Removed undeclared tags:
2022-07-31 01:12:42 INFO  Configuration:2752 - resource-types.xml not found
2022-07-31 01:12:42 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2022-07-31 01:12:42 INFO  YarnClientImpl:324 - Submitted application application_1659229871406_0001
2022-07-31 01:12:42 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1659229871406_0001/
2022-07-31 01:12:42 INFO  Job:1619 - Running job: job_1659229871406_0001
2022-07-31 01:12:52 INFO  Job:1640 - Job job_1659229871406_0001 running in uber mode : false
2022-07-31 01:12:52 INFO  Job:1647 -  map 0% reduce 0%
2022-07-31 01:12:59 INFO  Job:1647 -  map 33% reduce 0%
2022-07-31 01:13:05 INFO  Job:1647 -  map 67% reduce 0%
2022-07-31 01:13:09 INFO  Job:1647 -  map 100% reduce 0%
2022-07-31 01:13:15 INFO  Job:1647 -  map 100% reduce 100%
2022-07-31 01:13:15 INFO  Job:1658 - Job job_1659229871406_0001 completed successfully
2022-07-31 01:13:15 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=867649
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=17
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=40112
		Total time spent by all reduces in occupied slots (ms)=17164
		Total time spent by all map tasks (ms)=10028
		Total time spent by all reduce tasks (ms)=4291
		Total vcore-milliseconds taken by all map tasks=10028
		Total vcore-milliseconds taken by all reduce tasks=4291
		Total megabyte-milliseconds taken by all map tasks=41074688
		Total megabyte-milliseconds taken by all reduce tasks=17575936
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=579
		CPU time spent (ms)=6870
		Physical memory (bytes) snapshot=1626099712
		Virtual memory (bytes) snapshot=15840845824
		Total committed heap usage (bytes)=1488453632
		Peak Map Physical memory (bytes)=416931840
		Peak Map Virtual memory (bytes)=3959119872
		Peak Reduce Physical memory (bytes)=388370432
		Peak Reduce Virtual memory (bytes)=3974410240
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 34.949 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" starttime="20220731 01:13:16.413" endtime="20220731 01:13:16.413"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220731 01:13:16.414" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220731 01:13:16.414" endtime="20220731 01:13:16.414"/>
</kw>
<status status="PASS" starttime="20220731 01:12:37.362" endtime="20220731 01:13:16.414"/>
</kw>
<msg timestamp="20220731 01:13:16.414" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220731 01:12:37.362" endtime="20220731 01:13:16.415"/>
</kw>
<msg timestamp="20220731 01:13:16.415" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2022-07-31 01:12:38 INFO  Configuration:3318 - Removed undeclared tags:
2022-07-31 01:12:39 INFO  FluentPropertyBeanIntrospector:147 - Error when creating Prope...</msg>
<status status="PASS" starttime="20220731 01:12:37.361" endtime="20220731 01:13:16.415"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220731 01:13:16.415" endtime="20220731 01:13:16.415"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>multiple SLF4J bindings</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220731 01:13:16.416" endtime="20220731 01:13:16.416"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20220731 01:12:37.341" endtime="20220731 01:13:16.416"/>
</test>
<test id="s1-s2-s2-t2" name="Execute WordCount">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220731 01:13:16.421" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20220731 01:13:16.426" level="INFO">${rc} = 0</msg>
<msg timestamp="20220731 01:13:16.426" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20220731 01:13:16.419" endtime="20220731 01:13:16.426"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220731 01:13:16.428" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20220731 01:13:16.427" endtime="20220731 01:13:16.428"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220731 01:13:16.428" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220731 01:13:16.428" endtime="20220731 01:13:16.428"/>
</kw>
<status status="PASS" starttime="20220731 01:13:16.419" endtime="20220731 01:13:16.428"/>
</kw>
<msg timestamp="20220731 01:13:16.428" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220731 01:13:16.418" endtime="20220731 01:13:16.429"/>
</kw>
<msg timestamp="20220731 01:13:16.429" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20220731 01:13:16.418" endtime="20220731 01:13:16.429"/>
</kw>
<msg timestamp="20220731 01:13:16.429" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20220731 01:13:16.418" endtime="20220731 01:13:16.429"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220731 01:13:16.429" level="INFO">${random} = 5lIR0WE7</msg>
<status status="PASS" starttime="20220731 01:13:16.429" endtime="20220731 01:13:16.429"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220731 01:13:16.433" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220731 01:13:16.432" endtime="20220731 01:13:16.433"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220731 01:13:16.433" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220731 01:13:16.433" endtime="20220731 01:13:16.433"/>
</kw>
<status status="PASS" starttime="20220731 01:13:16.432" endtime="20220731 01:13:16.434"/>
</kw>
<msg timestamp="20220731 01:13:16.434" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220731 01:13:16.431" endtime="20220731 01:13:16.434"/>
</kw>
<status status="PASS" starttime="20220731 01:13:16.431" endtime="20220731 01:13:16.434"/>
</kw>
<msg timestamp="20220731 01:13:16.434" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20220731 01:13:16.430" endtime="20220731 01:13:16.434"/>
</kw>
<msg timestamp="20220731 01:13:16.434" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20220731 01:13:16.430" endtime="20220731 01:13:16.434"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220731 01:13:16.437" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220731 01:13:16.437" endtime="20220731 01:13:16.437"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220731 01:13:16.438" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220731 01:13:16.437" endtime="20220731 01:13:16.438"/>
</kw>
<status status="PASS" starttime="20220731 01:13:16.436" endtime="20220731 01:13:16.438"/>
</kw>
<msg timestamp="20220731 01:13:16.438" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220731 01:13:16.436" endtime="20220731 01:13:16.438"/>
</kw>
<status status="PASS" starttime="20220731 01:13:16.435" endtime="20220731 01:13:16.438"/>
</kw>
<msg timestamp="20220731 01:13:16.438" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" starttime="20220731 01:13:16.435" endtime="20220731 01:13:16.438"/>
</kw>
<msg timestamp="20220731 01:13:16.438" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" starttime="20220731 01:13:16.434" endtime="20220731 01:13:16.439"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${result}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220731 01:13:16.441" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220731 01:13:16.441" endtime="20220731 01:13:16.441"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220731 01:13:16.442" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220731 01:13:16.441" endtime="20220731 01:13:16.442"/>
</kw>
<status status="PASS" starttime="20220731 01:13:16.441" endtime="20220731 01:13:16.442"/>
</kw>
<msg timestamp="20220731 01:13:16.442" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220731 01:13:16.440" endtime="20220731 01:13:16.442"/>
</kw>
<status status="PASS" starttime="20220731 01:13:16.440" endtime="20220731 01:13:16.443"/>
</kw>
<msg timestamp="20220731 01:13:16.443" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-5lIR0WE7.txt</msg>
<status status="PASS" starttime="20220731 01:13:16.439" endtime="20220731 01:13:16.443"/>
</kw>
<msg timestamp="20220731 01:13:16.443" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-5lIR0WE7.txt</msg>
<status status="PASS" starttime="20220731 01:13:16.439" endtime="20220731 01:13:16.443"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220731 01:13:16.446" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-5lIR0WE7.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220731 01:13:54.950" level="INFO">${rc} = 0</msg>
<msg timestamp="20220731 01:13:54.950" level="INFO">${output} = 2022-07-31 01:13:17 INFO  Configuration:3318 - Removed undeclared tags:
2022-07-31 01:13:18 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.19.0.8:8032
2022-07-31 01:13:18 INFO  Configurat...</msg>
<status status="PASS" starttime="20220731 01:13:16.444" endtime="20220731 01:13:54.950"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220731 01:13:54.951" level="INFO">2022-07-31 01:13:17 INFO  Configuration:3318 - Removed undeclared tags:
2022-07-31 01:13:18 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.19.0.8:8032
2022-07-31 01:13:18 INFO  Configuration:3318 - Removed undeclared tags:
2022-07-31 01:13:18 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2022-07-31 01:13:18 INFO  Configuration:3318 - Removed undeclared tags:
2022-07-31 01:13:18 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2022-07-31 01:13:18 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2022-07-31 01:13:18 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2022-07-31 01:13:18 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2022-07-31 01:13:18 INFO  Configuration:3318 - Removed undeclared tags:
2022-07-31 01:13:19 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-07-31 01:13:20 INFO  FileInputFormat:292 - Total input files to process : 3
2022-07-31 01:13:20 INFO  JobSubmitter:202 - number of splits:3
2022-07-31 01:13:20 INFO  JobSubmitter:298 - Submitting tokens for job: job_1659229871406_0002
2022-07-31 01:13:20 INFO  JobSubmitter:299 - Executing with tokens: []
2022-07-31 01:13:20 INFO  Configuration:3318 - Removed undeclared tags:
2022-07-31 01:13:20 INFO  Configuration:3318 - Removed undeclared tags:
2022-07-31 01:13:21 INFO  Configuration:2752 - resource-types.xml not found
2022-07-31 01:13:21 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2022-07-31 01:13:21 INFO  YarnClientImpl:324 - Submitted application application_1659229871406_0002
2022-07-31 01:13:21 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1659229871406_0002/
2022-07-31 01:13:21 INFO  Job:1619 - Running job: job_1659229871406_0002
2022-07-31 01:13:30 INFO  Job:1640 - Job job_1659229871406_0002 running in uber mode : false
2022-07-31 01:13:30 INFO  Job:1647 -  map 0% reduce 0%
2022-07-31 01:13:36 INFO  Job:1647 -  map 33% reduce 0%
2022-07-31 01:13:42 INFO  Job:1647 -  map 67% reduce 0%
2022-07-31 01:13:49 INFO  Job:1647 -  map 100% reduce 0%
2022-07-31 01:13:53 INFO  Job:1647 -  map 100% reduce 100%
2022-07-31 01:13:54 INFO  Job:1658 - Job job_1659229871406_0002 completed successfully
2022-07-31 01:13:54 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32289
		FILE: Number of bytes written=930719
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39996
		O3FS: Number of bytes written=22443
		O3FS: Number of read operations=14
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=44236
		Total time spent by all reduces in occupied slots (ms)=14876
		Total time spent by all map tasks (ms)=11059
		Total time spent by all reduce tasks (ms)=3719
		Total vcore-milliseconds taken by all map tasks=11059
		Total vcore-milliseconds taken by all reduce tasks=3719
		Total megabyte-milliseconds taken by all map tasks=45297664
		Total megabyte-milliseconds taken by all reduce tasks=15233024
	Map-Reduce Framework
		Map input records=1064
		Map output records=4522
		Map output bytes=55364
		Map output materialized bytes=32301
		Input split bytes=303
		Combine input records=4522
		Combine output records=1810
		Reduce input groups=1546
		Reduce shuffle bytes=32301
		Reduce input records=1810
		Reduce output records=1546
		Spilled Records=3620
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=573
		CPU time spent (ms)=7080
		Physical memory (bytes) snapshot=1574023168
		Virtual memory (bytes) snapshot=15825981440
		Total committed heap usage (bytes)=1483735040
		Peak Map Physical memory (bytes)=404619264
		Peak Map Virtual memory (bytes)=3952062464
		Peak Reduce Physical memory (bytes)=370765824
		Peak Reduce Virtual memory (bytes)=3973980160
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39693
	File Output Format Counters 
		Bytes Written=22443</msg>
<status status="PASS" starttime="20220731 01:13:54.950" endtime="20220731 01:13:54.951"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220731 01:13:54.952" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220731 01:13:54.951" endtime="20220731 01:13:54.952"/>
</kw>
<status status="PASS" starttime="20220731 01:13:16.444" endtime="20220731 01:13:54.952"/>
</kw>
<msg timestamp="20220731 01:13:54.952" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220731 01:13:16.444" endtime="20220731 01:13:54.952"/>
</kw>
<msg timestamp="20220731 01:13:54.953" level="INFO">${output} = 2022-07-31 01:13:17 INFO  Configuration:3318 - Removed undeclared tags:
2022-07-31 01:13:18 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.19.0.8:8032
2022-07-31 01:13:18 INFO  Configurat...</msg>
<status status="PASS" starttime="20220731 01:13:16.443" endtime="20220731 01:13:54.953"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>map tasks=3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220731 01:13:54.953" endtime="20220731 01:13:54.954"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220731 01:13:54.954" endtime="20220731 01:13:54.954"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20220731 01:13:16.417" endtime="20220731 01:13:54.954"/>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" starttime="20220731 01:12:37.296" endtime="20220731 01:13:54.955"/>
</suite>
<suite id="s1-s2-s3" name="hadoopfs-ofs" source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot">
<test id="s1-s2-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220731 01:13:59.873" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20220731 01:13:59.873" endtime="20220731 01:13:59.873"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220731 01:13:59.874" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20220731 01:13:59.873" endtime="20220731 01:13:59.874"/>
</kw>
<status status="PASS" starttime="20220731 01:13:59.872" endtime="20220731 01:13:59.874"/>
</kw>
<msg timestamp="20220731 01:13:59.874" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20220731 01:13:59.872" endtime="20220731 01:13:59.874"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20220731 01:13:59.874" endtime="20220731 01:13:59.875"/>
</kw>
<msg timestamp="20220731 01:13:59.875" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20220731 01:13:59.874" endtime="20220731 01:13:59.875"/>
</kw>
<status status="PASS" starttime="20220731 01:13:59.871" endtime="20220731 01:13:59.875"/>
</kw>
<msg timestamp="20220731 01:13:59.875" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20220731 01:13:59.871" endtime="20220731 01:13:59.875"/>
</kw>
<msg timestamp="20220731 01:13:59.875" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20220731 01:13:59.870" endtime="20220731 01:13:59.875"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220731 01:13:59.876" level="INFO">${random} = 90702</msg>
<status status="PASS" starttime="20220731 01:13:59.876" endtime="20220731 01:13:59.876"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220731 01:13:59.882" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-90702 2&gt;&amp;1'.</msg>
<msg timestamp="20220731 01:14:03.459" level="INFO">${rc} = 0</msg>
<msg timestamp="20220731 01:14:03.459" level="INFO">${output} = 2022-07-31 01:14:00 INFO  Configuration:3318 - Removed undeclared tags:
2022-07-31 01:14:01 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org....</msg>
<status status="PASS" starttime="20220731 01:13:59.877" endtime="20220731 01:14:03.459"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220731 01:14:03.460" level="INFO">2022-07-31 01:14:00 INFO  Configuration:3318 - Removed undeclared tags:
2022-07-31 01:14:01 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2022-07-31 01:14:01 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2022-07-31 01:14:02 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2022-07-31 01:14:02 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2022-07-31 01:14:02 INFO  Configuration:3318 - Removed undeclared tags:
2022-07-31 01:14:02 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20220731 01:14:03.459" endtime="20220731 01:14:03.460"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220731 01:14:03.460" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220731 01:14:03.460" endtime="20220731 01:14:03.460"/>
</kw>
<status status="PASS" starttime="20220731 01:13:59.877" endtime="20220731 01:14:03.461"/>
</kw>
<msg timestamp="20220731 01:14:03.461" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220731 01:13:59.876" endtime="20220731 01:14:03.461"/>
</kw>
<msg timestamp="20220731 01:14:03.461" level="INFO">${result} = 2022-07-31 01:14:00 INFO  Configuration:3318 - Removed undeclared tags:
2022-07-31 01:14:01 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org....</msg>
<status status="PASS" starttime="20220731 01:13:59.876" endtime="20220731 01:14:03.461"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>multiple SLF4J bindings</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220731 01:14:03.461" endtime="20220731 01:14:03.462"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -ls ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220731 01:14:03.465" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20220731 01:14:05.338" level="INFO">${rc} = 0</msg>
<msg timestamp="20220731 01:14:05.338" level="INFO">${output} = 2022-07-31 01:14:04 INFO  Configuration:3318 - Removed undeclared tags:
Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2022-07-31 01:12 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hado...</msg>
<status status="PASS" starttime="20220731 01:14:03.463" endtime="20220731 01:14:05.338"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220731 01:14:05.339" level="INFO">2022-07-31 01:14:04 INFO  Configuration:3318 - Removed undeclared tags:
Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2022-07-31 01:12 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21867 2022-07-31 01:12 ofs://om/volume1/bucket1/ozone-12967
-rw-rw-rw-   3 hadoop hadoop      21867 2022-07-31 01:14 ofs://om/volume1/bucket1/ozone-90702
drwxrwxrwx   - hadoop hadoop          0 2022-07-31 01:12 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2022-07-31 01:13 ofs://om/volume1/bucket1/wordcount-5lIR0WE7.txt</msg>
<status status="PASS" starttime="20220731 01:14:05.338" endtime="20220731 01:14:05.339"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220731 01:14:05.340" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220731 01:14:05.339" endtime="20220731 01:14:05.340"/>
</kw>
<status status="PASS" starttime="20220731 01:14:03.463" endtime="20220731 01:14:05.340"/>
</kw>
<msg timestamp="20220731 01:14:05.340" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220731 01:14:03.462" endtime="20220731 01:14:05.340"/>
</kw>
<msg timestamp="20220731 01:14:05.340" level="INFO">${result} = 2022-07-31 01:14:04 INFO  Configuration:3318 - Removed undeclared tags:
Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2022-07-31 01:12 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hado...</msg>
<status status="PASS" starttime="20220731 01:14:03.462" endtime="20220731 01:14:05.341"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220731 01:14:05.341" endtime="20220731 01:14:05.341"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -cat ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220731 01:14:05.344" level="INFO">Running command 'hdfs dfs -cat ofs://om/volume1/bucket1/ozone-90702 2&gt;&amp;1'.</msg>
<msg timestamp="20220731 01:14:08.478" level="INFO">${rc} = 0</msg>
<msg timestamp="20220731 01:14:08.478" level="INFO">${output} = 2022-07-31 01:14:06 INFO  Configuration:3318 - Removed undeclared tags:
2022-07-31 01:14:07 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org....</msg>
<status status="PASS" starttime="20220731 01:14:05.342" endtime="20220731 01:14:08.478"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220731 01:14:08.479" level="INFO">2022-07-31 01:14:06 INFO  Configuration:3318 - Removed undeclared tags:
2022-07-31 01:14:07 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2022-07-31 01:14:07 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2022-07-31 01:14:07 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2022-07-31 01:14:07 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
This product includes software developed by The Apache Software
Foundation (http://www.apache.org/).

The binary distribution of this product bundles binaries of
org.iq80.leveldb:leveldb-api (https://github.com/dain/leveldb), which has the
following notices:
* Copyright 2011 Dain Sundstrom &lt;dain@iq80.com&gt;
* Copyright 2011 FuseSource Corp. http://fusesource.com

The binary distribution of this product bundles binaries of
AWS SDK for Java - Bundle 1.11.271,
AWS Java SDK for AWS KMS 1.11.271,
AWS Java SDK for Amazon S3 1.11.271,
AWS Java SDK for AWS STS 1.11.271,
JMES Path Query library 1.0,
which has the following notices:
 * This software includes third party software subject to the following
 copyrights: - XML parsing and utility functions from JetS3t - Copyright
 2006-2009 James Murty. - JSON parsing and utility functions from JSON.org -
 Copyright 2002 JSON.org. - PKCS#1 PEM encoded private key parsing and utility
 functions from oauth.googlecode.com - Copyright 1998-2010 AOL Inc.

The binary distribution of this product bundles binaries of
Gson 2.2.4,
which has the following notices:

                            The Netty Project
                            =================

Please visit the Netty web site for more information:

  * http://netty.io/

Copyright 2014 The Netty Project

The Netty Project licenses this file to you under the Apache License,
version 2.0 (the "License"); you may not use this file except in compliance
with the License. You may obtain a copy of the License at:

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
License for the specific language governing permissions and limitations
under the License.

Also, please refer to each LICENSE.&lt;component&gt;.txt file, which is located in
the 'license' directory of the distribution file, for the license terms of the
components that this product depends on.

-------------------------------------------------------------------------------
This product contains the extensions to Java Collections Framework which has
been derived from the works by JSR-166 EG, Doug Lea, and Jason T. Greene:

  * LICENSE:
    * license/LICENSE.jsr166y.txt (Public Domain)
  * HOMEPAGE:
    * http://gee.cs.oswego.edu/cgi-bin/viewcvs.cgi/jsr166/
    * http://viewvc.jboss.org/cgi-bin/viewvc.cgi/jbosscache/experimental/jsr166/

This product contains a modified version of Robert Harder's Public Domain
Base64 Encoder and Decoder, which can be obtained at:

  * LICENSE:
    * license/LICENSE.base64.txt (Public Domain)
  * HOMEPAGE:
    * http://iharder.sourceforge.net/current/java/base64/

This product contains a modified portion of 'Webbit', an event based
WebSocket and HTTP server, which can be obtained at:

  * LICENSE:
    * license/LICENSE.webbit.txt (BSD License)
  * HOMEPAGE:
    * https://github.com/joewalnes/webbit

This product contains a modified portion of 'SLF4J', a simple logging
facade for Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.slf4j.txt (MIT License)
  * HOMEPAGE:
    * http://www.slf4j.org/

This product contains a modified portion of 'ArrayDeque', written by Josh
Bloch of Google, Inc:

  * LICENSE:
    * license/LICENSE.deque.txt (Public Domain)

This product contains a modified portion of 'Apache Harmony', an open source
Java SE, which can be obtained at:

  * LICENSE:
    * license/LICENSE.harmony.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://archive.apache.org/dist/harmony/

This product contains a modified version of Roland Kuhn's ASL2
AbstractNodeQueue, which is based on Dmitriy Vyukov's non-intrusive MPSC queue.
It can be obtained at:

  * LICENSE:
    * license/LICENSE.abstractnodequeue.txt (Public Domain)
  * HOMEPAGE:
    * https://github.com/akka/akka/blob/wip-2.2.3-for-scala-2.11/akka-actor/src/main/java/akka/dispatch/AbstractNodeQueue.java

This product contains a modified portion of 'jbzip2', a Java bzip2 compression
and decompression library written by Matthew J. Francis. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jbzip2.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jbzip2/

This product contains a modified portion of 'libdivsufsort', a C API library to construct
the suffix array and the Burrows-Wheeler transformed string for any input string of
a constant-size alphabet written by Yuta Mori. It can be obtained at:

  * LICENSE:
    * license/LICENSE.libdivsufsort.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/libdivsufsort/

This product contains a modified portion of Nitsan Wakart's 'JCTools', Java Concurrency Tools for the JVM,
 which can be obtained at:

  * LICENSE:
    * license/LICENSE.jctools.txt (ASL2 License)
  * HOMEPAGE:
    * https://github.com/JCTools/JCTools

This product optionally depends on 'JZlib', a re-implementation of zlib in
pure Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jzlib.txt (BSD style License)
  * HOMEPAGE:
    * http://www.jcraft.com/jzlib/

This product optionally depends on 'Compress-LZF', a Java library for encoding and
decoding data in LZF format, written by Tatu Saloranta. It can be obtained at:

  * LICENSE:
    * license/LICENSE.compress-lzf.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/ning/compress

This product optionally depends on 'lz4', a LZ4 Java compression
and decompression library written by Adrien Grand. It can be obtained at:

  * LICENSE:
    * license/LICENSE.lz4.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jpountz/lz4-java

This product optionally depends on 'lzma-java', a LZMA Java compression
and decompression library, which can be obtained at:

  * LICENSE:
    * license/LICENSE.lzma-java.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jponge/lzma-java

This product contains a modified portion of 'jfastlz', a Java port of FastLZ compression
and decompression library written by William Kinney. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jfastlz.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jfastlz/

This product contains a modified portion of and optionally depends on 'Protocol Buffers', Google's data
interchange format, which can be obtained at:

  * LICENSE:
    * license/LICENSE.protobuf.txt (New BSD License)
  * HOMEPAGE:
    * http://code.google.com/p/protobuf/

This product optionally depends on 'Bouncy Castle Crypto APIs' to generate
a temporary self-signed X.509 certificate when the JVM does not provide the
equivalent functionality.  It can be obtained at:

  * LICENSE:
    * license/LICENSE.bouncycastle.txt (MIT License)
  * HOMEPAGE:
    * http://www.bouncycastle.org/

This product optionally depends on 'Snappy', a compression library produced
by Google Inc, which can be obtained at:

  * LICENSE:
    * license/LICENSE.snappy.txt (New BSD License)
  * HOMEPAGE:
    * http://code.google.com/p/snappy/

This product optionally depends on 'JBoss Marshalling', an alternative Java
serialization API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jboss-marshalling.txt (GNU LGPL 2.1)
  * HOMEPAGE:
    * http://www.jboss.org/jbossmarshalling

This product optionally depends on 'Caliper', Google's micro-
benchmarking framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.caliper.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://code.google.com/p/caliper/

This product optionally depends on 'Apache Commons Logging', a logging
framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-logging.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://commons.apache.org/logging/

This product optionally depends on 'Apache Log4J', a logging framework, which
can be obtained at:

  * LICENSE:
    * license/LICENSE.log4j.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://logging.apache.org/log4j/

This product optionally depends on 'Aalto XML', an ultra-high performance
non-blocking XML processor, which can be obtained at:

  * LICENSE:
    * license/LICENSE.aalto-xml.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://wiki.fasterxml.com/AaltoHome

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Twitter. It can be obtained at:

  * LICENSE:
    * license/LICENSE.hpack.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/twitter/hpack

This product contains a modified portion of 'Apache Commons Lang', a Java library
provides utilities for the java.lang API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-lang.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://commons.apache.org/proper/commons-lang/

This product contains a modified portion of 'JDOM 1.1', which can be obtained at:

  * LICENSE:
    * https://github.com/hunterhacker/jdom/blob/jdom-1.1/core/LICENSE.txt
  * HOMEPAGE:
    * http://www.jdom.org/

The binary distribution of this product bundles binaries of
Commons Codec 1.4,
which has the following notices:
 * src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.javacontains test data from http://aspell.net/test/orig/batch0.tab.Copyright (C) 2002 Kevin Atkinson (kevina@gnu.org)
  ===============================================================================
  The content of package org.apache.commons.codec.language.bm has been translated
  from the original php source code available at http://stevemorse.org/phoneticinfo.htm
  with permission from the original authors.
  Original source copyright:Copyright (c) 2008 Alexander Beider &amp; Stephen P. Morse.

The binary distribution of this product bundles binaries of
Commons Lang 2.6,
which has the following notices:
 * This product includes software from the Spring Framework,under the Apache License 2.0 (see: StringUtils.containsWhitespace())

The binary distribution of this product bundles binaries of
Apache Log4j 1.2.17,
which has the following notices:
 * ResolverUtil.java
    Copyright 2005-2006 Tim Fennell
  Dumbster SMTP test server
    Copyright 2004 Jason Paul Kitchen
  TypeUtil.java
    Copyright 2002-2012 Ramnivas Laddad, Juergen Hoeller, Chris Beams

The binary distribution of this product bundles binaries of
"Java Concurrency in Practice" book annotations 1.0,
which has the following notices:
 * Copyright (c) 2005 Brian Goetz and Tim Peierls Released under the Creative
  Commons Attribution License (http://creativecommons.org/licenses/by/2.5)
  Official home: http://www.jcip.net Any republication or derived work
  distributed in source code form must include this copyright and license
  notice.

The binary distribution of this product bundles binaries of
Jetty :: Http Utility 9.3.19.,
Jetty :: IO Utility 9.3.19.,
Jetty :: Security 9.3.19.,
Jetty :: Server Core 9.3.19.,
Jetty :: Servlet Handling 9.3.19.,
Jetty :: Utilities 9.3.19.,
Jetty :: Utilities :: Ajax,
Jetty :: Webapp Application Support 9.3.19.,
Jetty :: XML utilities 9.3.19.,
which has the following notices:
 * ==============================================================
    Jetty Web Container
    Copyright 1995-2016 Mort Bay Consulting Pty Ltd.
   ==============================================================

   The Jetty Web Container is Copyright Mort Bay Consulting Pty Ltd
   unless otherwise noted.

   Jetty is dual licensed under both

     * The Apache 2.0 License
       http://www.apache.org/licenses/LICENSE-2.0.html

         and

     * The Eclipse Public 1.0 License
       http://www.eclipse.org/legal/epl-v10.html

   Jetty may be distributed under either license.

   ------
   Eclipse

   The following artifacts are EPL.
    * org.eclipse.jetty.orbit:org.eclipse.jdt.core

   The following artifacts are EPL and ASL2.
    * org.eclipse.jetty.orbit:javax.security.auth.message


   The following artifacts are EPL and CDDL 1.0.
    * org.eclipse.jetty.orbit:javax.mail.glassfish


   ------
   Oracle

   The following artifacts are CDDL + GPLv2 with classpath exception.
   https://glassfish.dev.java.net/nonav/public/CDDL+GPL.html

    * javax.servlet:javax.servlet-api
    * javax.annotation:javax.annotation-api
    * javax.transaction:javax.transaction-api
    * javax.websocket:javax.websocket-api

   ------
   Oracle OpenJDK

   If ALPN is used to negotiate HTTP/2 connections, then the following
   artifacts may be included in the distribution or downloaded when ALPN
   module is selected.

    * java.sun.security.ssl

   These artifacts replace/modify OpenJDK classes.  The modififications
   are hosted at github and both modified and original are under GPL v2 with
   classpath exceptions.
   http://openjdk.java.net/legal/gplv2+ce.html


   ------
   OW2

   The following artifacts are licensed by the OW2 Foundation according to the
   terms of http://asm.ow2.org/license.html

   org.ow2.asm:asm-commons
   org.ow2.asm:asm


   ------
   Apache

   The following artifacts are ASL2 licensed.

   org.apache.taglibs:taglibs-standard-spec
   org.apache.taglibs:taglibs-standard-impl


   ------
   MortBay

   The following artifacts are ASL2 licensed.  Based on selected classes from
   following Apache Tomcat jars, all ASL2 licensed.

   org.mortbay.jasper:apache-jsp
     org.apache.tomcat:tomcat-jasper
     org.apache.tomcat:tomcat-juli
     org.apache.tomcat:tomcat-jsp-api
     org.apache.tomcat:tomcat-el-api
     org.apache.tomcat:tomcat-jasper-el
     org.apache.tomcat:tomcat-api
     org.apache.tomcat:tomcat-util-scan
     org.apache.tomcat:tomcat-util

   org.mortbay.jasper:apache-el
     org.apache.tomcat:tomcat-jasper-el
     org.apache.tomcat:tomcat-el-api


   ------
   Mortbay

   The following artifacts are CDDL + GPLv2 with classpath exception.

   https://glassfish.dev.java.net/nonav/public/CDDL+GPL.html

   org.eclipse.jetty.toolchain:jetty-schemas

   ------
   Assorted

   The UnixCrypt.java code implements the one way cryptography used by
   Unix systems for simple password protection.  Copyright 1996 Aki Yoshida,
   modified April 2001  by Iris Van den Broeke, Daniel Deville.
   Permission to use, copy, modify and distribute UnixCrypt
   for non-commercial or commercial purposes and without fee is
   granted provided that the copyright notice appears in all copies./

The binary distribution of this product bundles binaries of
Snappy for Java 1.0.4.1,
which has the following notices:
 * This product includes software developed by Google
    Snappy: http://code.google.com/p/snappy/ (New BSD License)

   This product includes software developed by Apache
    PureJavaCrc32C from apache-hadoop-common http://hadoop.apache.org/
    (Apache 2.0 license)

   This library containd statically linked libstdc++. This inclusion is allowed by
   "GCC RUntime Library Exception"
   http://gcc.gnu.org/onlinedocs/libstdc++/manual/license.html

   == Contributors ==
     * Tatu Saloranta
       * Providing benchmark suite
     * Alec Wysoker
       * Performance and memory usage improvement

The binary distribution of this product bundles binaries of
Xerces2 Java Parser 2.9.1,
which has the following notices:
 * =========================================================================
   ==  NOTICE file corresponding to section 4(d) of the Apache License,   ==
   ==  Version 2.0, in this case for the Apache Xerces Java distribution. ==
   =========================================================================

   Apache Xerces Java
   Copyright 1999-2007 The Apache Software Foundation

   This product includes software developed at
   The Apache Software Foundation (http://www.apache.org/).

   Portions of this software were originally based on the following:
     - software copyright (c) 1999, IBM Corporation., http://www.ibm.com.
     - software copyright (c) 1999, Sun Microsystems., http://www.sun.com.
     - voluntary contributions made by Paul Eng on behalf of the
       Apache Software Foundation that were originally developed at iClick, Inc.,
       software copyright (c) 1999.

The binary distribution of this product bundles binaries of
Logback Classic Module 1.1.2,
Logback Core Module 1.1.2,
which has the following notices:
 * Logback: the reliable, generic, fast and flexible logging framework.
   Copyright (C) 1999-2012, QOS.ch. All rights reserved.

The binary distribution of this product bundles binaries of
Apache HBase - Annotations 1.2.6,
Apache HBase - Client 1.2.6,
Apache HBase - Common 1.2.6,
Apache HBase - Hadoop Compatibility 1.2.6,
Apache HBase - Hadoop Two Compatibility 1.2.6,
Apache HBase - Prefix Tree 1.2.6,
Apache HBase - Procedure 1.2.6,
Apache HBase - Protocol 1.2.6,
Apache HBase - Server 1.2.6,
which has the following notices:
 * Apache HBase
   Copyright 2007-2015 The Apache Software Foundation

   This product includes software developed at
   The Apache Software Foundation (http://www.apache.org/).

   --
   This product incorporates portions of the 'Hadoop' project

   Copyright 2007-2009 The Apache Software Foundation

   Licensed under the Apache License v2.0
   --
   Our Orca logo we got here: http://www.vectorfree.com/jumping-orca
   It is licensed Creative Commons Attribution 3.0.
   See https://creativecommons.org/licenses/by/3.0/us/
   We changed the logo by stripping the colored background, inverting
   it and then rotating it some.

   Later we found that vectorfree.com image is not properly licensed.
   The original is owned by vectorportal.com. The original was
   relicensed so we could use it as Creative Commons Attribution 3.0.
   The license is bundled with the download available here:
   http://www.vectorportal.com/subcategory/205/KILLER-WHALE-FREE-VECTOR.eps/ifile/9136/detailtest.asp
   --
   This product includes portions of the Bootstrap project v3.0.0

   Copyright 2013 Twitter, Inc.

   Licensed under the Apache License v2.0

   This product uses the Glyphicons Halflings icon set.

   http://glyphicons.com/

   Copyright Jan Kovařík

   Licensed under the Apache License v2.0 as a part of the Bootstrap project.

   --
   This product includes portions of the Guava project v14, specifically
   'hbase-common/src/main/java/org/apache/hadoop/hbase/io/LimitInputStream.java'

   Copyright (C) 2007 The Guava Authors

   Licensed under the Apache License, Version 2.0

The binary distribution of this product bundles binaries of
Phoenix Core 4.7.0,
which has the following notices:
   Apache Phoenix
   Copyright 2013-2016 The Apache Software Foundation

   This product includes software developed by The Apache Software
   Foundation (http://www.apache.org/).

   This also includes:

   The phoenix-spark module has been adapted from the phoenix-spark library
   distributed under the terms of the Apache 2 license. Original source copyright:
   Copyright 2014 Simply Measured, Inc.
   Copyright 2015 Interset Software Inc.

   The file bin/daemon.py is based on the file of the same name in python-daemon 2.0.5
   (https://pypi.python.org/pypi/python-daemon/). Original source copyright:
   # Copyright © 2008–2015 Ben Finney &lt;ben+python@benfinney.id.au&gt;
   # Copyright © 2007–2008 Robert Niederreiter, Jens Klein
   # Copyright © 2004–2005 Chad J. Schroeder
   # Copyright © 2003 Clark Evans
   # Copyright © 2002 Noah Spurrier
   # Copyright © 2001 Jürgen Hermann

The binary distribution of this product bundles binaries of
Plexus Cipher: encryption/decryption Component 1.4,
which has the following notices:
 * The code in this component contains a class - Base64 taken from http://juliusdavies.ca/svn/not-yet-commons-ssl/tags/commons-ssl-0.3.10/src/java/org/apache/commons/ssl/Base64.java
   which is Apache license: http://www.apache.org/licenses/LICENSE-2.0

   The PBE key processing routine PBECipher.createCipher() is adopted from http://juliusdavies.ca/svn/not-yet-commons-ssl/tags/commons-ssl-0.3.10/src/java/org/apache/commons/ssl/OpenSSL.java
    which is also Apache APL-2.0 license: http://www.apache.org/licenses/LICENSE-2.0

The binary distribution of this product bundles binaries of
software.amazon.ion:ion-java 1.0.1,
which has the following notices:
 * Amazon Ion Java Copyright 2007-2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.

The binary distribution of this product bundles binaries of
joda-time:joda-time:2.9.9
which has the following notices:
 * =============================================================================
   = NOTICE file corresponding to section 4d of the Apache License Version 2.0 =
   =============================================================================
   This product includes software developed by
   Joda.org (http://www.joda.org/).

The binary distribution of this product bundles binaries of
Ehcache 3.3.1,
which has the following notices:
 * Ehcache V3 Copyright 2014-2016 Terracotta, Inc.

The binary distribution of this product bundles binaries of
snakeyaml (https://bitbucket.org/asomov/snakeyaml),
which has the following notices:
 * Copyright (c) 2008, http://www.snakeyaml.org

The binary distribution of this product bundles binaries of
swagger-annotations (https://github.com/swagger-api/swagger-core),
which has the following notices:
 * Copyright 2016 SmartBear Software

The binary distribution of this product bundles binaries of
metrics-core 3.2.4
which has the following notices:
 * Copyright 2010-2013 Coda Hale and Yammer, Inc.

   This product includes software developed by Coda Hale and Yammer, Inc.

   This product includes code derived from the JSR-166 project (ThreadLocalRandom, Striped64,
   LongAdder), which was released with the following comments:

   Written by Doug Lea with assistance from members of JCP JSR-166
   Expert Group and released to the public domain, as explained at
   http://creativecommons.org/publicdomain/zero/1.0/</msg>
<status status="PASS" starttime="20220731 01:14:08.478" endtime="20220731 01:14:08.479"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220731 01:14:08.480" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220731 01:14:08.480" endtime="20220731 01:14:08.480"/>
</kw>
<status status="PASS" starttime="20220731 01:14:05.342" endtime="20220731 01:14:08.480"/>
</kw>
<msg timestamp="20220731 01:14:08.481" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220731 01:14:05.342" endtime="20220731 01:14:08.481"/>
</kw>
<msg timestamp="20220731 01:14:08.482" level="INFO">${result} = 2022-07-31 01:14:06 INFO  Configuration:3318 - Removed undeclared tags:
2022-07-31 01:14:07 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org....</msg>
<status status="PASS" starttime="20220731 01:14:05.341" endtime="20220731 01:14:08.482"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>This product includes software developed</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220731 01:14:08.482" endtime="20220731 01:14:08.483"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220731 01:13:59.869" endtime="20220731 01:14:08.483"/>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" starttime="20220731 01:13:59.822" endtime="20220731 01:14:08.484"/>
</suite>
<suite id="s1-s2-s4" name="mapreduce-ofs" source="/opt/ozone/smoketest/mapreduce.robot">
<test id="s1-s2-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220731 01:14:13.981" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20220731 01:14:13.988" level="INFO">${rc} = 0</msg>
<msg timestamp="20220731 01:14:13.988" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20220731 01:14:13.978" endtime="20220731 01:14:13.988"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220731 01:14:13.989" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20220731 01:14:13.988" endtime="20220731 01:14:13.989"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220731 01:14:13.989" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220731 01:14:13.989" endtime="20220731 01:14:13.989"/>
</kw>
<status status="PASS" starttime="20220731 01:14:13.978" endtime="20220731 01:14:13.989"/>
</kw>
<msg timestamp="20220731 01:14:13.989" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220731 01:14:13.977" endtime="20220731 01:14:13.989"/>
</kw>
<msg timestamp="20220731 01:14:13.990" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20220731 01:14:13.977" endtime="20220731 01:14:13.990"/>
</kw>
<msg timestamp="20220731 01:14:13.990" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20220731 01:14:13.977" endtime="20220731 01:14:13.990"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220731 01:14:13.994" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20220731 01:14:13.993" endtime="20220731 01:14:13.994"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220731 01:14:13.994" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20220731 01:14:13.994" endtime="20220731 01:14:13.994"/>
</kw>
<status status="PASS" starttime="20220731 01:14:13.993" endtime="20220731 01:14:13.994"/>
</kw>
<msg timestamp="20220731 01:14:13.994" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20220731 01:14:13.992" endtime="20220731 01:14:13.994"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20220731 01:14:13.995" endtime="20220731 01:14:13.995"/>
</kw>
<msg timestamp="20220731 01:14:13.995" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20220731 01:14:13.995" endtime="20220731 01:14:13.995"/>
</kw>
<status status="PASS" starttime="20220731 01:14:13.992" endtime="20220731 01:14:13.996"/>
</kw>
<msg timestamp="20220731 01:14:13.996" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20220731 01:14:13.991" endtime="20220731 01:14:13.996"/>
</kw>
<msg timestamp="20220731 01:14:13.996" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20220731 01:14:13.990" endtime="20220731 01:14:13.996"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220731 01:14:13.998" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20220731 01:14:51.647" level="INFO">${rc} = 0</msg>
<msg timestamp="20220731 01:14:51.647" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2022-07-31 01:14:14 INFO  Configuration:3318 - Removed undeclared tags:
2022-07-31 01:14:15 INFO  FluentPropertyBeanIntrospector:147 - Error when creating Prope...</msg>
<status status="PASS" starttime="20220731 01:14:13.997" endtime="20220731 01:14:51.647"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220731 01:14:51.648" level="INFO">Number of Maps  = 3
Samples per Map = 3
2022-07-31 01:14:14 INFO  Configuration:3318 - Removed undeclared tags:
2022-07-31 01:14:15 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2022-07-31 01:14:16 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2022-07-31 01:14:16 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2022-07-31 01:14:16 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2022-07-31 01:14:16 INFO  Configuration:3318 - Removed undeclared tags:
2022-07-31 01:14:16 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2022-07-31 01:14:17 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.19.0.8:8032
2022-07-31 01:14:17 INFO  Configuration:3318 - Removed undeclared tags:
2022-07-31 01:14:17 INFO  Configuration:3318 - Removed undeclared tags:
2022-07-31 01:14:17 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2022-07-31 01:14:17 INFO  FileInputFormat:292 - Total input files to process : 3
2022-07-31 01:14:18 INFO  JobSubmitter:202 - number of splits:3
2022-07-31 01:14:18 INFO  JobSubmitter:298 - Submitting tokens for job: job_1659229871406_0003
2022-07-31 01:14:18 INFO  JobSubmitter:299 - Executing with tokens: []
2022-07-31 01:14:18 INFO  Configuration:3318 - Removed undeclared tags:
2022-07-31 01:14:18 INFO  Configuration:3318 - Removed undeclared tags:
2022-07-31 01:14:18 INFO  Configuration:2752 - resource-types.xml not found
2022-07-31 01:14:18 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2022-07-31 01:14:18 INFO  YarnClientImpl:324 - Submitted application application_1659229871406_0003
2022-07-31 01:14:18 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1659229871406_0003/
2022-07-31 01:14:18 INFO  Job:1619 - Running job: job_1659229871406_0003
2022-07-31 01:14:26 INFO  Job:1640 - Job job_1659229871406_0003 running in uber mode : false
2022-07-31 01:14:26 INFO  Job:1647 -  map 0% reduce 0%
2022-07-31 01:14:33 INFO  Job:1647 -  map 33% reduce 0%
2022-07-31 01:14:38 INFO  Job:1647 -  map 67% reduce 0%
2022-07-31 01:14:44 INFO  Job:1647 -  map 100% reduce 0%
2022-07-31 01:14:49 INFO  Job:1647 -  map 100% reduce 100%
2022-07-31 01:14:51 INFO  Job:1658 - Job job_1659229871406_0003 completed successfully
2022-07-31 01:14:51 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=867437
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=17
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=47316
		Total time spent by all reduces in occupied slots (ms)=14588
		Total time spent by all map tasks (ms)=11829
		Total time spent by all reduce tasks (ms)=3647
		Total vcore-milliseconds taken by all map tasks=11829
		Total vcore-milliseconds taken by all reduce tasks=3647
		Total megabyte-milliseconds taken by all map tasks=48451584
		Total megabyte-milliseconds taken by all reduce tasks=14938112
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=680
		CPU time spent (ms)=8810
		Physical memory (bytes) snapshot=1577488384
		Virtual memory (bytes) snapshot=15842861056
		Total committed heap usage (bytes)=1472200704
		Peak Map Physical memory (bytes)=404914176
		Peak Map Virtual memory (bytes)=3960635392
		Peak Reduce Physical memory (bytes)=369778688
		Peak Reduce Virtual memory (bytes)=3971411968
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 33.746 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" starttime="20220731 01:14:51.647" endtime="20220731 01:14:51.648"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220731 01:14:51.649" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220731 01:14:51.648" endtime="20220731 01:14:51.649"/>
</kw>
<status status="PASS" starttime="20220731 01:14:13.997" endtime="20220731 01:14:51.649"/>
</kw>
<msg timestamp="20220731 01:14:51.649" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220731 01:14:13.996" endtime="20220731 01:14:51.649"/>
</kw>
<msg timestamp="20220731 01:14:51.649" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2022-07-31 01:14:14 INFO  Configuration:3318 - Removed undeclared tags:
2022-07-31 01:14:15 INFO  FluentPropertyBeanIntrospector:147 - Error when creating Prope...</msg>
<status status="PASS" starttime="20220731 01:14:13.996" endtime="20220731 01:14:51.650"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220731 01:14:51.650" endtime="20220731 01:14:51.650"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>multiple SLF4J bindings</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220731 01:14:51.650" endtime="20220731 01:14:51.650"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20220731 01:14:13.976" endtime="20220731 01:14:51.651"/>
</test>
<test id="s1-s2-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220731 01:14:51.656" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20220731 01:14:51.661" level="INFO">${rc} = 0</msg>
<msg timestamp="20220731 01:14:51.661" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20220731 01:14:51.653" endtime="20220731 01:14:51.661"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220731 01:14:51.662" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20220731 01:14:51.661" endtime="20220731 01:14:51.662"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220731 01:14:51.662" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220731 01:14:51.662" endtime="20220731 01:14:51.663"/>
</kw>
<status status="PASS" starttime="20220731 01:14:51.653" endtime="20220731 01:14:51.663"/>
</kw>
<msg timestamp="20220731 01:14:51.663" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220731 01:14:51.653" endtime="20220731 01:14:51.663"/>
</kw>
<msg timestamp="20220731 01:14:51.663" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20220731 01:14:51.652" endtime="20220731 01:14:51.663"/>
</kw>
<msg timestamp="20220731 01:14:51.663" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20220731 01:14:51.652" endtime="20220731 01:14:51.663"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220731 01:14:51.664" level="INFO">${random} = xEqRQHt3</msg>
<status status="PASS" starttime="20220731 01:14:51.663" endtime="20220731 01:14:51.664"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220731 01:14:51.667" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20220731 01:14:51.666" endtime="20220731 01:14:51.667"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220731 01:14:51.667" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20220731 01:14:51.667" endtime="20220731 01:14:51.667"/>
</kw>
<status status="PASS" starttime="20220731 01:14:51.666" endtime="20220731 01:14:51.667"/>
</kw>
<msg timestamp="20220731 01:14:51.667" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20220731 01:14:51.666" endtime="20220731 01:14:51.668"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20220731 01:14:51.668" endtime="20220731 01:14:51.668"/>
</kw>
<msg timestamp="20220731 01:14:51.668" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20220731 01:14:51.668" endtime="20220731 01:14:51.668"/>
</kw>
<status status="PASS" starttime="20220731 01:14:51.665" endtime="20220731 01:14:51.669"/>
</kw>
<msg timestamp="20220731 01:14:51.669" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20220731 01:14:51.664" endtime="20220731 01:14:51.669"/>
</kw>
<msg timestamp="20220731 01:14:51.669" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20220731 01:14:51.664" endtime="20220731 01:14:51.669"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220731 01:14:51.671" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20220731 01:14:51.671" endtime="20220731 01:14:51.671"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220731 01:14:51.672" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20220731 01:14:51.671" endtime="20220731 01:14:51.672"/>
</kw>
<status status="PASS" starttime="20220731 01:14:51.671" endtime="20220731 01:14:51.672"/>
</kw>
<msg timestamp="20220731 01:14:51.672" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20220731 01:14:51.670" endtime="20220731 01:14:51.672"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220731 01:14:51.673" level="INFO">${first} = i</msg>
<status status="PASS" starttime="20220731 01:14:51.673" endtime="20220731 01:14:51.673"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220731 01:14:51.674" level="INFO">${result} = /input/</msg>
<status status="PASS" starttime="20220731 01:14:51.673" endtime="20220731 01:14:51.674"/>
</kw>
<status status="PASS" starttime="20220731 01:14:51.673" endtime="20220731 01:14:51.674"/>
</kw>
<msg timestamp="20220731 01:14:51.674" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" starttime="20220731 01:14:51.672" endtime="20220731 01:14:51.674"/>
</kw>
<status status="PASS" starttime="20220731 01:14:51.670" endtime="20220731 01:14:51.674"/>
</kw>
<msg timestamp="20220731 01:14:51.674" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" starttime="20220731 01:14:51.669" endtime="20220731 01:14:51.674"/>
</kw>
<msg timestamp="20220731 01:14:51.675" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" starttime="20220731 01:14:51.669" endtime="20220731 01:14:51.675"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${result}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220731 01:14:51.677" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20220731 01:14:51.677" endtime="20220731 01:14:51.677"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220731 01:14:51.678" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20220731 01:14:51.678" endtime="20220731 01:14:51.678"/>
</kw>
<status status="PASS" starttime="20220731 01:14:51.677" endtime="20220731 01:14:51.678"/>
</kw>
<msg timestamp="20220731 01:14:51.678" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20220731 01:14:51.676" endtime="20220731 01:14:51.678"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220731 01:14:51.679" level="INFO">${first} = w</msg>
<status status="PASS" starttime="20220731 01:14:51.679" endtime="20220731 01:14:51.679"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220731 01:14:51.680" level="INFO">${result} = /wordcount-xEqRQHt3.txt</msg>
<status status="PASS" starttime="20220731 01:14:51.680" endtime="20220731 01:14:51.680"/>
</kw>
<status status="PASS" starttime="20220731 01:14:51.679" endtime="20220731 01:14:51.680"/>
</kw>
<msg timestamp="20220731 01:14:51.680" level="INFO">${path_with_leading} = /wordcount-xEqRQHt3.txt</msg>
<status status="PASS" starttime="20220731 01:14:51.678" endtime="20220731 01:14:51.680"/>
</kw>
<status status="PASS" starttime="20220731 01:14:51.676" endtime="20220731 01:14:51.680"/>
</kw>
<msg timestamp="20220731 01:14:51.680" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-xEqRQHt3.txt</msg>
<status status="PASS" starttime="20220731 01:14:51.675" endtime="20220731 01:14:51.680"/>
</kw>
<msg timestamp="20220731 01:14:51.681" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-xEqRQHt3.txt</msg>
<status status="PASS" starttime="20220731 01:14:51.675" endtime="20220731 01:14:51.681"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220731 01:14:51.685" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-xEqRQHt3.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220731 01:15:26.645" level="INFO">${rc} = 0</msg>
<msg timestamp="20220731 01:15:26.645" level="INFO">${output} = 2022-07-31 01:14:52 INFO  Configuration:3318 - Removed undeclared tags:
2022-07-31 01:14:53 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.19.0.8:8032
2022-07-31 01:14:53 INFO  Configurat...</msg>
<status status="PASS" starttime="20220731 01:14:51.682" endtime="20220731 01:15:26.645"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220731 01:15:26.646" level="INFO">2022-07-31 01:14:52 INFO  Configuration:3318 - Removed undeclared tags:
2022-07-31 01:14:53 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.19.0.8:8032
2022-07-31 01:14:53 INFO  Configuration:3318 - Removed undeclared tags:
2022-07-31 01:14:53 INFO  Configuration:3318 - Removed undeclared tags:
2022-07-31 01:14:53 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2022-07-31 01:14:54 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2022-07-31 01:14:54 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2022-07-31 01:14:54 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2022-07-31 01:14:54 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2022-07-31 01:14:54 INFO  Configuration:3318 - Removed undeclared tags:
2022-07-31 01:14:54 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-07-31 01:14:55 INFO  FileInputFormat:292 - Total input files to process : 3
2022-07-31 01:14:55 INFO  JobSubmitter:202 - number of splits:3
2022-07-31 01:14:56 INFO  JobSubmitter:298 - Submitting tokens for job: job_1659229871406_0004
2022-07-31 01:14:56 INFO  JobSubmitter:299 - Executing with tokens: []
2022-07-31 01:14:56 INFO  Configuration:3318 - Removed undeclared tags:
2022-07-31 01:14:56 INFO  Configuration:3318 - Removed undeclared tags:
2022-07-31 01:14:56 INFO  Configuration:2752 - resource-types.xml not found
2022-07-31 01:14:56 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2022-07-31 01:14:56 INFO  YarnClientImpl:324 - Submitted application application_1659229871406_0004
2022-07-31 01:14:56 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1659229871406_0004/
2022-07-31 01:14:56 INFO  Job:1619 - Running job: job_1659229871406_0004
2022-07-31 01:15:05 INFO  Job:1640 - Job job_1659229871406_0004 running in uber mode : false
2022-07-31 01:15:05 INFO  Job:1647 -  map 0% reduce 0%
2022-07-31 01:15:11 INFO  Job:1647 -  map 33% reduce 0%
2022-07-31 01:15:16 INFO  Job:1647 -  map 67% reduce 0%
2022-07-31 01:15:21 INFO  Job:1647 -  map 100% reduce 0%
2022-07-31 01:15:25 INFO  Job:1647 -  map 100% reduce 100%
2022-07-31 01:15:26 INFO  Job:1658 - Job job_1659229871406_0004 completed successfully
2022-07-31 01:15:26 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32289
		FILE: Number of bytes written=930635
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39993
		OFS: Number of bytes written=22443
		OFS: Number of read operations=14
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=39360
		Total time spent by all reduces in occupied slots (ms)=13796
		Total time spent by all map tasks (ms)=9840
		Total time spent by all reduce tasks (ms)=3449
		Total vcore-milliseconds taken by all map tasks=9840
		Total vcore-milliseconds taken by all reduce tasks=3449
		Total megabyte-milliseconds taken by all map tasks=40304640
		Total megabyte-milliseconds taken by all reduce tasks=14127104
	Map-Reduce Framework
		Map input records=1064
		Map output records=4522
		Map output bytes=55364
		Map output materialized bytes=32301
		Input split bytes=300
		Combine input records=4522
		Combine output records=1810
		Reduce input groups=1546
		Reduce shuffle bytes=32301
		Reduce input records=1810
		Reduce output records=1546
		Spilled Records=3620
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=621
		CPU time spent (ms)=6840
		Physical memory (bytes) snapshot=1571016704
		Virtual memory (bytes) snapshot=15833628672
		Total committed heap usage (bytes)=1464336384
		Peak Map Physical memory (bytes)=402567168
		Peak Map Virtual memory (bytes)=3955789824
		Peak Reduce Physical memory (bytes)=366051328
		Peak Reduce Virtual memory (bytes)=3975389184
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39693
	File Output Format Counters 
		Bytes Written=22443</msg>
<status status="PASS" starttime="20220731 01:15:26.646" endtime="20220731 01:15:26.647"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220731 01:15:26.647" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220731 01:15:26.647" endtime="20220731 01:15:26.647"/>
</kw>
<status status="PASS" starttime="20220731 01:14:51.681" endtime="20220731 01:15:26.647"/>
</kw>
<msg timestamp="20220731 01:15:26.648" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220731 01:14:51.681" endtime="20220731 01:15:26.648"/>
</kw>
<msg timestamp="20220731 01:15:26.648" level="INFO">${output} = 2022-07-31 01:14:52 INFO  Configuration:3318 - Removed undeclared tags:
2022-07-31 01:14:53 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.19.0.8:8032
2022-07-31 01:14:53 INFO  Configurat...</msg>
<status status="PASS" starttime="20220731 01:14:51.681" endtime="20220731 01:15:26.648"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>map tasks=3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220731 01:15:26.648" endtime="20220731 01:15:26.649"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220731 01:15:26.649" endtime="20220731 01:15:26.649"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20220731 01:14:51.651" endtime="20220731 01:15:26.649"/>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" starttime="20220731 01:14:13.936" endtime="20220731 01:15:26.651"/>
</suite>
<suite id="s1-s2-s5" name="Createmrenv" source="/opt/hadoop/smoketest/createmrenv.robot">
<test id="s1-s2-s5-t1" name="Create test volume, bucket and key" line="38">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220731 01:11:48.240" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20220731 01:11:50.972" level="INFO">${rc} = 255</msg>
<msg timestamp="20220731 01:11:50.972" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20220731 01:11:48.236" endtime="20220731 01:11:50.972"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220731 01:11:50.974" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20220731 01:11:50.973" endtime="20220731 01:11:50.974"/>
</kw>
<msg timestamp="20220731 01:11:50.974" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20220731 01:11:48.236" endtime="20220731 01:11:50.974"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create volume">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220731 01:11:50.980" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20220731 01:11:53.310" level="INFO">${rc} = 0</msg>
<msg timestamp="20220731 01:11:53.310" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220731 01:11:50.978" endtime="20220731 01:11:53.310"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220731 01:11:53.311" level="INFO"/>
<status status="PASS" starttime="20220731 01:11:53.310" endtime="20220731 01:11:53.311"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220731 01:11:53.312" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220731 01:11:53.311" endtime="20220731 01:11:53.312"/>
</kw>
<status status="PASS" starttime="20220731 01:11:50.976" endtime="20220731 01:11:53.312"/>
</kw>
<msg timestamp="20220731 01:11:53.312" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220731 01:11:50.976" endtime="20220731 01:11:53.313"/>
</kw>
<msg timestamp="20220731 01:11:53.314" level="INFO">${result} = </msg>
<status status="PASS" starttime="20220731 01:11:50.975" endtime="20220731 01:11:53.314"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220731 01:11:53.314" endtime="20220731 01:11:53.314"/>
</kw>
<status status="PASS" starttime="20220731 01:11:50.975" endtime="20220731 01:11:53.315"/>
</kw>
<status status="PASS" starttime="20220731 01:11:50.974" endtime="20220731 01:11:53.315"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume}/${bucket} --layout FILE_SYSTEM_OPTIMIZED</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220731 01:11:53.319" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 --layout FILE_SYSTEM_OPTIMIZED 2&gt;&amp;1'.</msg>
<msg timestamp="20220731 01:11:55.573" level="INFO">${rc} = 0</msg>
<msg timestamp="20220731 01:11:55.573" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220731 01:11:53.317" endtime="20220731 01:11:55.573"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220731 01:11:55.574" level="INFO"/>
<status status="PASS" starttime="20220731 01:11:55.574" endtime="20220731 01:11:55.575"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220731 01:11:55.575" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220731 01:11:55.575" endtime="20220731 01:11:55.575"/>
</kw>
<status status="PASS" starttime="20220731 01:11:53.316" endtime="20220731 01:11:55.575"/>
</kw>
<msg timestamp="20220731 01:11:55.576" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220731 01:11:53.316" endtime="20220731 01:11:55.576"/>
</kw>
<status status="PASS" starttime="20220731 01:11:53.316" endtime="20220731 01:11:55.576"/>
</kw>
<status status="PASS" starttime="20220731 01:11:53.315" endtime="20220731 01:11:55.576"/>
</kw>
<status status="PASS" starttime="20220731 01:11:53.315" endtime="20220731 01:11:55.576"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220731 01:11:55.576" endtime="20220731 01:11:55.577"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220731 01:11:55.580" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20220731 01:11:58.246" level="INFO">${rc} = 0</msg>
<msg timestamp="20220731 01:11:58.246" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-07-31T01:11...</msg>
<status status="PASS" starttime="20220731 01:11:55.578" endtime="20220731 01:11:58.247"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220731 01:11:58.248" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-07-31T01:11:55.539Z",
  "modificationTime" : "2022-07-31T01:11:55.539Z",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "FILE_SYSTEM_OPTIMIZED",
  "owner" : "hadoop",
  "link" : false
}</msg>
<status status="PASS" starttime="20220731 01:11:58.247" endtime="20220731 01:11:58.248"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220731 01:11:58.248" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220731 01:11:58.248" endtime="20220731 01:11:58.249"/>
</kw>
<status status="PASS" starttime="20220731 01:11:55.578" endtime="20220731 01:11:58.249"/>
</kw>
<msg timestamp="20220731 01:11:58.249" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220731 01:11:55.578" endtime="20220731 01:11:58.249"/>
</kw>
<msg timestamp="20220731 01:11:58.250" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-07-31T01:11...</msg>
<status status="PASS" starttime="20220731 01:11:55.577" endtime="20220731 01:11:58.250"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220731 01:11:58.250" endtime="20220731 01:11:58.250"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220731 01:11:58.254" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220731 01:11:58.254" endtime="20220731 01:11:58.254"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220731 01:11:58.255" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220731 01:11:58.254" endtime="20220731 01:11:58.255"/>
</kw>
<status status="PASS" starttime="20220731 01:11:58.253" endtime="20220731 01:11:58.255"/>
</kw>
<msg timestamp="20220731 01:11:58.255" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220731 01:11:58.252" endtime="20220731 01:11:58.255"/>
</kw>
<status status="PASS" starttime="20220731 01:11:58.252" endtime="20220731 01:11:58.255"/>
</kw>
<msg timestamp="20220731 01:11:58.255" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" starttime="20220731 01:11:58.251" endtime="20220731 01:11:58.256"/>
</kw>
<msg timestamp="20220731 01:11:58.256" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" starttime="20220731 01:11:58.250" endtime="20220731 01:11:58.256"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220731 01:11:58.259" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20220731 01:12:00.516" level="INFO">${rc} = 0</msg>
<msg timestamp="20220731 01:12:00.516" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220731 01:11:58.257" endtime="20220731 01:12:00.516"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220731 01:12:00.517" level="INFO"/>
<status status="PASS" starttime="20220731 01:12:00.516" endtime="20220731 01:12:00.517"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220731 01:12:00.518" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220731 01:12:00.517" endtime="20220731 01:12:00.518"/>
</kw>
<status status="PASS" starttime="20220731 01:11:58.256" endtime="20220731 01:12:00.518"/>
</kw>
<msg timestamp="20220731 01:12:00.518" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220731 01:11:58.256" endtime="20220731 01:12:00.519"/>
</kw>
<status status="PASS" starttime="20220731 01:11:58.256" endtime="20220731 01:12:00.519"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220731 01:12:00.523" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220731 01:12:05.551" level="INFO">${rc} = 0</msg>
<msg timestamp="20220731 01:12:05.551" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220731 01:12:00.520" endtime="20220731 01:12:05.551"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220731 01:12:05.552" level="INFO"/>
<status status="PASS" starttime="20220731 01:12:05.551" endtime="20220731 01:12:05.553"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220731 01:12:05.555" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220731 01:12:05.553" endtime="20220731 01:12:05.555"/>
</kw>
<status status="PASS" starttime="20220731 01:12:00.520" endtime="20220731 01:12:05.555"/>
</kw>
<msg timestamp="20220731 01:12:05.555" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220731 01:12:00.520" endtime="20220731 01:12:05.556"/>
</kw>
<status status="PASS" starttime="20220731 01:12:00.519" endtime="20220731 01:12:05.556"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220731 01:12:05.560" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220731 01:12:10.073" level="INFO">${rc} = 0</msg>
<msg timestamp="20220731 01:12:10.073" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220731 01:12:05.558" endtime="20220731 01:12:10.073"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220731 01:12:10.075" level="INFO"/>
<status status="PASS" starttime="20220731 01:12:10.074" endtime="20220731 01:12:10.075"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220731 01:12:10.075" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220731 01:12:10.075" endtime="20220731 01:12:10.075"/>
</kw>
<status status="PASS" starttime="20220731 01:12:05.557" endtime="20220731 01:12:10.076"/>
</kw>
<msg timestamp="20220731 01:12:10.076" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220731 01:12:05.557" endtime="20220731 01:12:10.076"/>
</kw>
<status status="PASS" starttime="20220731 01:12:05.556" endtime="20220731 01:12:10.076"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220731 01:12:10.080" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20220731 01:12:14.408" level="INFO">${rc} = 0</msg>
<msg timestamp="20220731 01:12:14.408" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220731 01:12:10.078" endtime="20220731 01:12:14.408"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220731 01:12:14.409" level="INFO"/>
<status status="PASS" starttime="20220731 01:12:14.409" endtime="20220731 01:12:14.409"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220731 01:12:14.410" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220731 01:12:14.409" endtime="20220731 01:12:14.410"/>
</kw>
<status status="PASS" starttime="20220731 01:12:10.077" endtime="20220731 01:12:14.410"/>
</kw>
<msg timestamp="20220731 01:12:14.410" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220731 01:12:10.077" endtime="20220731 01:12:14.411"/>
</kw>
<status status="PASS" starttime="20220731 01:12:10.076" endtime="20220731 01:12:14.411"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220731 01:11:48.235" endtime="20220731 01:12:14.411"/>
</test>
<test id="s1-s2-s5-t2" name="Create user dir for hadoop" line="51">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220731 01:12:14.416" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220731 01:12:14.416" endtime="20220731 01:12:14.416"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220731 01:12:14.417" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220731 01:12:14.416" endtime="20220731 01:12:14.417"/>
</kw>
<status status="PASS" starttime="20220731 01:12:14.415" endtime="20220731 01:12:14.417"/>
</kw>
<msg timestamp="20220731 01:12:14.417" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220731 01:12:14.415" endtime="20220731 01:12:14.417"/>
</kw>
<status status="PASS" starttime="20220731 01:12:14.414" endtime="20220731 01:12:14.417"/>
</kw>
<msg timestamp="20220731 01:12:14.417" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20220731 01:12:14.414" endtime="20220731 01:12:14.417"/>
</kw>
<msg timestamp="20220731 01:12:14.418" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20220731 01:12:14.413" endtime="20220731 01:12:14.418"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220731 01:12:14.421" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20220731 01:12:16.744" level="INFO">${rc} = 0</msg>
<msg timestamp="20220731 01:12:16.745" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220731 01:12:14.419" endtime="20220731 01:12:16.745"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220731 01:12:16.746" level="INFO"/>
<status status="PASS" starttime="20220731 01:12:16.745" endtime="20220731 01:12:16.746"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220731 01:12:16.747" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220731 01:12:16.746" endtime="20220731 01:12:16.747"/>
</kw>
<status status="PASS" starttime="20220731 01:12:14.418" endtime="20220731 01:12:16.747"/>
</kw>
<msg timestamp="20220731 01:12:16.747" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220731 01:12:14.418" endtime="20220731 01:12:16.747"/>
</kw>
<status status="PASS" starttime="20220731 01:12:14.418" endtime="20220731 01:12:16.748"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220731 01:12:16.752" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20220731 01:12:19.134" level="INFO">${rc} = 0</msg>
<msg timestamp="20220731 01:12:19.134" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220731 01:12:16.749" endtime="20220731 01:12:19.134"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220731 01:12:19.135" level="INFO"/>
<status status="PASS" starttime="20220731 01:12:19.135" endtime="20220731 01:12:19.135"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220731 01:12:19.136" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220731 01:12:19.136" endtime="20220731 01:12:19.136"/>
</kw>
<status status="PASS" starttime="20220731 01:12:16.749" endtime="20220731 01:12:19.137"/>
</kw>
<msg timestamp="20220731 01:12:19.137" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220731 01:12:16.749" endtime="20220731 01:12:19.137"/>
</kw>
<status status="PASS" starttime="20220731 01:12:16.748" endtime="20220731 01:12:19.137"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220731 01:12:14.412" endtime="20220731 01:12:19.138"/>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" starttime="20220731 01:11:48.180" endtime="20220731 01:12:19.139"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="198534"/>
</suite>
<suite id="s1-s3" name="hadoop32">
<suite id="s1-s3-s1" name="hadoopfs-o3fs" source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot">
<test id="s1-s3-s1-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220731 01:17:45.808" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220731 01:17:45.808" endtime="20220731 01:17:45.808"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220731 01:17:45.809" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220731 01:17:45.808" endtime="20220731 01:17:45.809"/>
</kw>
<status status="PASS" starttime="20220731 01:17:45.807" endtime="20220731 01:17:45.809"/>
</kw>
<msg timestamp="20220731 01:17:45.809" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220731 01:17:45.807" endtime="20220731 01:17:45.809"/>
</kw>
<status status="PASS" starttime="20220731 01:17:45.806" endtime="20220731 01:17:45.809"/>
</kw>
<msg timestamp="20220731 01:17:45.809" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20220731 01:17:45.806" endtime="20220731 01:17:45.809"/>
</kw>
<msg timestamp="20220731 01:17:45.809" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20220731 01:17:45.805" endtime="20220731 01:17:45.810"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220731 01:17:45.810" level="INFO">${random} = 24074</msg>
<status status="PASS" starttime="20220731 01:17:45.810" endtime="20220731 01:17:45.810"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220731 01:17:45.815" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-24074 2&gt;&amp;1'.</msg>
<msg timestamp="20220731 01:17:49.557" level="INFO">${rc} = 0</msg>
<msg timestamp="20220731 01:17:49.557" level="INFO">${output} = 2022-07-31 01:17:47 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2022-07-31 01:17:47 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2022...</msg>
<status status="PASS" starttime="20220731 01:17:45.811" endtime="20220731 01:17:49.557"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220731 01:17:49.558" level="INFO">2022-07-31 01:17:47 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2022-07-31 01:17:47 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2022-07-31 01:17:47 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2022-07-31 01:17:48 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20220731 01:17:49.557" endtime="20220731 01:17:49.558"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220731 01:17:49.558" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220731 01:17:49.558" endtime="20220731 01:17:49.559"/>
</kw>
<status status="PASS" starttime="20220731 01:17:45.811" endtime="20220731 01:17:49.559"/>
</kw>
<msg timestamp="20220731 01:17:49.559" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220731 01:17:45.811" endtime="20220731 01:17:49.559"/>
</kw>
<msg timestamp="20220731 01:17:49.559" level="INFO">${result} = 2022-07-31 01:17:47 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2022-07-31 01:17:47 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2022...</msg>
<status status="PASS" starttime="20220731 01:17:45.810" endtime="20220731 01:17:49.559"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>multiple SLF4J bindings</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220731 01:17:49.559" endtime="20220731 01:17:49.560"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -ls ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220731 01:17:49.563" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20220731 01:17:51.514" level="INFO">${rc} = 0</msg>
<msg timestamp="20220731 01:17:51.514" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2022-07-31 01:17 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2022-07-31 01:17 o3fs://bucket1.volume1.om/ozone-24074
dr...</msg>
<status status="PASS" starttime="20220731 01:17:49.561" endtime="20220731 01:17:51.514"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220731 01:17:51.515" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2022-07-31 01:17 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2022-07-31 01:17 o3fs://bucket1.volume1.om/ozone-24074
drwxrwxrwx   - hadoop hadoop          0 2022-07-31 01:17 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20220731 01:17:51.515" endtime="20220731 01:17:51.516"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220731 01:17:51.516" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220731 01:17:51.516" endtime="20220731 01:17:51.516"/>
</kw>
<status status="PASS" starttime="20220731 01:17:49.560" endtime="20220731 01:17:51.516"/>
</kw>
<msg timestamp="20220731 01:17:51.517" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220731 01:17:49.560" endtime="20220731 01:17:51.517"/>
</kw>
<msg timestamp="20220731 01:17:51.517" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2022-07-31 01:17 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2022-07-31 01:17 o3fs://bucket1.volume1.om/ozone-24074
dr...</msg>
<status status="PASS" starttime="20220731 01:17:49.560" endtime="20220731 01:17:51.517"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220731 01:17:51.517" endtime="20220731 01:17:51.517"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -cat ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220731 01:17:51.521" level="INFO">Running command 'hdfs dfs -cat o3fs://bucket1.volume1.om//ozone-24074 2&gt;&amp;1'.</msg>
<msg timestamp="20220731 01:17:54.690" level="INFO">${rc} = 0</msg>
<msg timestamp="20220731 01:17:54.690" level="INFO">${output} = 2022-07-31 01:17:53 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2022-07-31 01:17:53 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2022...</msg>
<status status="PASS" starttime="20220731 01:17:51.519" endtime="20220731 01:17:54.690"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220731 01:17:54.692" level="INFO">2022-07-31 01:17:53 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2022-07-31 01:17:53 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2022-07-31 01:17:53 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
This product includes software developed by The Apache Software
Foundation (http://www.apache.org/).

The binary distribution of this product bundles binaries of
org.iq80.leveldb:leveldb-api (https://github.com/dain/leveldb), which has the
following notices:
* Copyright 2011 Dain Sundstrom &lt;dain@iq80.com&gt;
* Copyright 2011 FuseSource Corp. http://fusesource.com

The binary distribution of this product bundles binaries of
AWS SDK for Java - Bundle 1.11.563 (https://github.com/aws/aws-sdk-java),
which has the following notices:

This software includes third party software subject to the following copyrights:
- XML parsing and utility functions from JetS3t - Copyright 2006-2009 James Murty.
- PKCS#1 PEM encoded private key parsing and utility functions from oauth.googlecode.com - Copyright 1998-2010 AOL Inc.

The binary distribution of this product bundles binaries of
Gson 2.2.4,
which has the following notices:

                            The Netty Project
                            =================

Please visit the Netty web site for more information:

  * http://netty.io/

Copyright 2014 The Netty Project

The Netty Project licenses this file to you under the Apache License,
version 2.0 (the "License"); you may not use this file except in compliance
with the License. You may obtain a copy of the License at:

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
License for the specific language governing permissions and limitations
under the License.

Also, please refer to each LICENSE.&lt;component&gt;.txt file, which is located in
the 'license' directory of the distribution file, for the license terms of the
components that this product depends on.

-------------------------------------------------------------------------------
This product contains the extensions to Java Collections Framework which has
been derived from the works by JSR-166 EG, Doug Lea, and Jason T. Greene:

  * LICENSE:
    * license/LICENSE.jsr166y.txt (Public Domain)
  * HOMEPAGE:
    * http://gee.cs.oswego.edu/cgi-bin/viewcvs.cgi/jsr166/
    * http://viewvc.jboss.org/cgi-bin/viewvc.cgi/jbosscache/experimental/jsr166/

This product contains a modified version of Robert Harder's Public Domain
Base64 Encoder and Decoder, which can be obtained at:

  * LICENSE:
    * license/LICENSE.base64.txt (Public Domain)
  * HOMEPAGE:
    * http://iharder.sourceforge.net/current/java/base64/

This product contains a modified portion of 'Webbit', an event based
WebSocket and HTTP server, which can be obtained at:

  * LICENSE:
    * license/LICENSE.webbit.txt (BSD License)
  * HOMEPAGE:
    * https://github.com/joewalnes/webbit

This product contains a modified portion of 'SLF4J', a simple logging
facade for Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.slf4j.txt (MIT License)
  * HOMEPAGE:
    * http://www.slf4j.org/

This product contains a modified portion of 'ArrayDeque', written by Josh
Bloch of Google, Inc:

  * LICENSE:
    * license/LICENSE.deque.txt (Public Domain)

This product contains a modified portion of 'Apache Harmony', an open source
Java SE, which can be obtained at:

  * LICENSE:
    * license/LICENSE.harmony.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://archive.apache.org/dist/harmony/

This product contains a modified version of Roland Kuhn's ASL2
AbstractNodeQueue, which is based on Dmitriy Vyukov's non-intrusive MPSC queue.
It can be obtained at:

  * LICENSE:
    * license/LICENSE.abstractnodequeue.txt (Public Domain)
  * HOMEPAGE:
    * https://github.com/akka/akka/blob/wip-2.2.3-for-scala-2.11/akka-actor/src/main/java/akka/dispatch/AbstractNodeQueue.java

This product contains a modified portion of 'jbzip2', a Java bzip2 compression
and decompression library written by Matthew J. Francis. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jbzip2.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jbzip2/

This product contains a modified portion of 'libdivsufsort', a C API library to construct
the suffix array and the Burrows-Wheeler transformed string for any input string of
a constant-size alphabet written by Yuta Mori. It can be obtained at:

  * LICENSE:
    * license/LICENSE.libdivsufsort.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/libdivsufsort/

This product contains a modified portion of Nitsan Wakart's 'JCTools', Java Concurrency Tools for the JVM,
 which can be obtained at:

  * LICENSE:
    * license/LICENSE.jctools.txt (ASL2 License)
  * HOMEPAGE:
    * https://github.com/JCTools/JCTools

This product optionally depends on 'JZlib', a re-implementation of zlib in
pure Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jzlib.txt (BSD style License)
  * HOMEPAGE:
    * http://www.jcraft.com/jzlib/

This product optionally depends on 'Compress-LZF', a Java library for encoding and
decoding data in LZF format, written by Tatu Saloranta. It can be obtained at:

  * LICENSE:
    * license/LICENSE.compress-lzf.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/ning/compress

This product optionally depends on 'lz4', a LZ4 Java compression
and decompression library written by Adrien Grand. It can be obtained at:

  * LICENSE:
    * license/LICENSE.lz4.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jpountz/lz4-java

This product optionally depends on 'lzma-java', a LZMA Java compression
and decompression library, which can be obtained at:

  * LICENSE:
    * license/LICENSE.lzma-java.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jponge/lzma-java

This product contains a modified portion of 'jfastlz', a Java port of FastLZ compression
and decompression library written by William Kinney. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jfastlz.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jfastlz/

This product contains a modified portion of and optionally depends on 'Protocol Buffers', Google's data
interchange format, which can be obtained at:

  * LICENSE:
    * license/LICENSE.protobuf.txt (New BSD License)
  * HOMEPAGE:
    * http://code.google.com/p/protobuf/

This product optionally depends on 'Bouncy Castle Crypto APIs' to generate
a temporary self-signed X.509 certificate when the JVM does not provide the
equivalent functionality.  It can be obtained at:

  * LICENSE:
    * license/LICENSE.bouncycastle.txt (MIT License)
  * HOMEPAGE:
    * http://www.bouncycastle.org/

This product optionally depends on 'Snappy', a compression library produced
by Google Inc, which can be obtained at:

  * LICENSE:
    * license/LICENSE.snappy.txt (New BSD License)
  * HOMEPAGE:
    * http://code.google.com/p/snappy/

This product contains a modified portion of UnsignedBytes LexicographicalComparator
from Guava v21 project by Google Inc, which can be obtained at:

  * LICENSE:
    * license/COPYING (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/google/guava

This product optionally depends on 'JBoss Marshalling', an alternative Java
serialization API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jboss-marshalling.txt (GNU LGPL 2.1)
  * HOMEPAGE:
    * http://www.jboss.org/jbossmarshalling

This product optionally depends on 'Caliper', Google's micro-
benchmarking framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.caliper.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://code.google.com/p/caliper/

This product optionally depends on 'Apache Commons Logging', a logging
framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-logging.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://commons.apache.org/logging/

This product optionally depends on 'Apache Log4J', a logging framework, which
can be obtained at:

  * LICENSE:
    * license/LICENSE.log4j.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://logging.apache.org/log4j/

This product optionally depends on 'Aalto XML', an ultra-high performance
non-blocking XML processor, which can be obtained at:

  * LICENSE:
    * license/LICENSE.aalto-xml.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://wiki.fasterxml.com/AaltoHome

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Twitter. It can be obtained at:

  * LICENSE:
    * license/LICENSE.hpack.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/twitter/hpack

This product contains a modified portion of 'Apache Commons Lang', a Java library
provides utilities for the java.lang API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-lang.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://commons.apache.org/proper/commons-lang/

This product contains a modified portion of 'JDOM 1.1', which can be obtained at:

  * LICENSE:
    * https://github.com/hunterhacker/jdom/blob/jdom-1.1/core/LICENSE.txt
  * HOMEPAGE:
    * http://www.jdom.org/

The binary distribution of this product bundles binaries of
Commons Codec 1.4,
which has the following notices:
 * src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.javacontains test data from http://aspell.net/test/orig/batch0.tab.Copyright (C) 2002 Kevin Atkinson (kevina@gnu.org)
  ===============================================================================
  The content of package org.apache.commons.codec.language.bm has been translated
  from the original php source code available at http://stevemorse.org/phoneticinfo.htm
  with permission from the original authors.
  Original source copyright:Copyright (c) 2008 Alexander Beider &amp; Stephen P. Morse.

The binary distribution of this product bundles binaries of
Commons Lang 2.6,
which has the following notices:
 * This product includes software from the Spring Framework,under the Apache License 2.0 (see: StringUtils.containsWhitespace())

The binary distribution of this product bundles binaries of
Apache Log4j 1.2.17,
which has the following notices:
 * ResolverUtil.java
    Copyright 2005-2006 Tim Fennell
  Dumbster SMTP test server
    Copyright 2004 Jason Paul Kitchen
  TypeUtil.java
    Copyright 2002-2012 Ramnivas Laddad, Juergen Hoeller, Chris Beams

The binary distribution of this product bundles binaries of
"Java Concurrency in Practice" book annotations 1.0,
which has the following notices:
 * Copyright (c) 2005 Brian Goetz and Tim Peierls Released under the Creative
  Commons Attribution License (http://creativecommons.org/licenses/by/2.5)
  Official home: http://www.jcip.net Any republication or derived work
  distributed in source code form must include this copyright and license
  notice.

The binary distribution of this product bundles binaries of
Jetty :: Http Utility 9.3.19.,
Jetty :: IO Utility 9.3.19.,
Jetty :: Security 9.3.19.,
Jetty :: Server Core 9.3.19.,
Jetty :: Servlet Handling 9.3.19.,
Jetty :: Utilities 9.3.19.,
Jetty :: Utilities :: Ajax,
Jetty :: Webapp Application Support 9.3.19.,
Jetty :: XML utilities 9.3.19.,
which has the following notices:
 * ==============================================================
    Jetty Web Container
    Copyright 1995-2016 Mort Bay Consulting Pty Ltd.
   ==============================================================

   The Jetty Web Container is Copyright Mort Bay Consulting Pty Ltd
   unless otherwise noted.

   Jetty is dual licensed under both

     * The Apache 2.0 License
       http://www.apache.org/licenses/LICENSE-2.0.html

         and

     * The Eclipse Public 1.0 License
       http://www.eclipse.org/legal/epl-v10.html

   Jetty may be distributed under either license.

   ------
   Eclipse

   The following artifacts are EPL.
    * org.eclipse.jetty.orbit:org.eclipse.jdt.core

   The following artifacts are EPL and ASL2.
    * org.eclipse.jetty.orbit:javax.security.auth.message


   The following artifacts are EPL and CDDL 1.0.
    * org.eclipse.jetty.orbit:javax.mail.glassfish


   ------
   Oracle

   The following artifacts are CDDL + GPLv2 with classpath exception.
   https://glassfish.dev.java.net/nonav/public/CDDL+GPL.html

    * javax.servlet:javax.servlet-api
    * javax.annotation:javax.annotation-api
    * javax.transaction:javax.transaction-api
    * javax.websocket:javax.websocket-api

   ------
   Oracle OpenJDK

   If ALPN is used to negotiate HTTP/2 connections, then the following
   artifacts may be included in the distribution or downloaded when ALPN
   module is selected.

    * java.sun.security.ssl

   These artifacts replace/modify OpenJDK classes.  The modififications
   are hosted at github and both modified and original are under GPL v2 with
   classpath exceptions.
   http://openjdk.java.net/legal/gplv2+ce.html


   ------
   OW2

   The following artifacts are licensed by the OW2 Foundation according to the
   terms of http://asm.ow2.org/license.html

   org.ow2.asm:asm-commons
   org.ow2.asm:asm


   ------
   Apache

   The following artifacts are ASL2 licensed.

   org.apache.taglibs:taglibs-standard-spec
   org.apache.taglibs:taglibs-standard-impl


   ------
   MortBay

   The following artifacts are ASL2 licensed.  Based on selected classes from
   following Apache Tomcat jars, all ASL2 licensed.

   org.mortbay.jasper:apache-jsp
     org.apache.tomcat:tomcat-jasper
     org.apache.tomcat:tomcat-juli
     org.apache.tomcat:tomcat-jsp-api
     org.apache.tomcat:tomcat-el-api
     org.apache.tomcat:tomcat-jasper-el
     org.apache.tomcat:tomcat-api
     org.apache.tomcat:tomcat-util-scan
     org.apache.tomcat:tomcat-util

   org.mortbay.jasper:apache-el
     org.apache.tomcat:tomcat-jasper-el
     org.apache.tomcat:tomcat-el-api


   ------
   Mortbay

   The following artifacts are CDDL + GPLv2 with classpath exception.

   https://glassfish.dev.java.net/nonav/public/CDDL+GPL.html

   org.eclipse.jetty.toolchain:jetty-schemas

   ------
   Assorted

   The UnixCrypt.java code implements the one way cryptography used by
   Unix systems for simple password protection.  Copyright 1996 Aki Yoshida,
   modified April 2001  by Iris Van den Broeke, Daniel Deville.
   Permission to use, copy, modify and distribute UnixCrypt
   for non-commercial or commercial purposes and without fee is
   granted provided that the copyright notice appears in all copies./

The binary distribution of this product bundles binaries of
Snappy for Java 1.0.4.1,
which has the following notices:
 * This product includes software developed by Google
    Snappy: http://code.google.com/p/snappy/ (New BSD License)

   This product includes software developed by Apache
    PureJavaCrc32C from apache-hadoop-common http://hadoop.apache.org/
    (Apache 2.0 license)

   This library containd statically linked libstdc++. This inclusion is allowed by
   "GCC RUntime Library Exception"
   http://gcc.gnu.org/onlinedocs/libstdc++/manual/license.html

   == Contributors ==
     * Tatu Saloranta
       * Providing benchmark suite
     * Alec Wysoker
       * Performance and memory usage improvement

The binary distribution of this product bundles binaries of
Xerces2 Java Parser 2.9.1,
which has the following notices:
 * =========================================================================
   ==  NOTICE file corresponding to section 4(d) of the Apache License,   ==
   ==  Version 2.0, in this case for the Apache Xerces Java distribution. ==
   =========================================================================

   Apache Xerces Java
   Copyright 1999-2007 The Apache Software Foundation

   This product includes software developed at
   The Apache Software Foundation (http://www.apache.org/).

   Portions of this software were originally based on the following:
     - software copyright (c) 1999, IBM Corporation., http://www.ibm.com.
     - software copyright (c) 1999, Sun Microsystems., http://www.sun.com.
     - voluntary contributions made by Paul Eng on behalf of the
       Apache Software Foundation that were originally developed at iClick, Inc.,
       software copyright (c) 1999.

The binary distribution of this product bundles binaries of
Logback Classic Module 1.1.2,
Logback Core Module 1.1.2,
which has the following notices:
 * Logback: the reliable, generic, fast and flexible logging framework.
   Copyright (C) 1999-2012, QOS.ch. All rights reserved.

The binary distribution of this product bundles binaries of
Apache HBase - Annotations 1.2.6,
Apache HBase - Client 1.2.6,
Apache HBase - Common 1.2.6,
Apache HBase - Hadoop Compatibility 1.2.6,
Apache HBase - Hadoop Two Compatibility 1.2.6,
Apache HBase - Prefix Tree 1.2.6,
Apache HBase - Procedure 1.2.6,
Apache HBase - Protocol 1.2.6,
Apache HBase - Server 1.2.6,
which has the following notices:
 * Apache HBase
   Copyright 2007-2015 The Apache Software Foundation

   This product includes software developed at
   The Apache Software Foundation (http://www.apache.org/).

   --
   This product incorporates portions of the 'Hadoop' project

   Copyright 2007-2009 The Apache Software Foundation

   Licensed under the Apache License v2.0
   --
   Our Orca logo we got here: http://www.vectorfree.com/jumping-orca
   It is licensed Creative Commons Attribution 3.0.
   See https://creativecommons.org/licenses/by/3.0/us/
   We changed the logo by stripping the colored background, inverting
   it and then rotating it some.

   Later we found that vectorfree.com image is not properly licensed.
   The original is owned by vectorportal.com. The original was
   relicensed so we could use it as Creative Commons Attribution 3.0.
   The license is bundled with the download available here:
   http://www.vectorportal.com/subcategory/205/KILLER-WHALE-FREE-VECTOR.eps/ifile/9136/detailtest.asp
   --
   This product includes portions of the Bootstrap project v3.0.0

   Copyright 2013 Twitter, Inc.

   Licensed under the Apache License v2.0

   This product uses the Glyphicons Halflings icon set.

   http://glyphicons.com/

   Copyright Jan Kovařík

   Licensed under the Apache License v2.0 as a part of the Bootstrap project.

   --
   This product includes portions of the Guava project v14, specifically
   'hbase-common/src/main/java/org/apache/hadoop/hbase/io/LimitInputStream.java'

   Copyright (C) 2007 The Guava Authors

   Licensed under the Apache License, Version 2.0

The binary distribution of this product bundles binaries of
Phoenix Core 4.7.0,
which has the following notices:
   Apache Phoenix
   Copyright 2013-2016 The Apache Software Foundation

   This product includes software developed by The Apache Software
   Foundation (http://www.apache.org/).

   This also includes:

   The phoenix-spark module has been adapted from the phoenix-spark library
   distributed under the terms of the Apache 2 license. Original source copyright:
   Copyright 2014 Simply Measured, Inc.
   Copyright 2015 Interset Software Inc.

   The file bin/daemon.py is based on the file of the same name in python-daemon 2.0.5
   (https://pypi.python.org/pypi/python-daemon/). Original source copyright:
   # Copyright © 2008–2015 Ben Finney &lt;ben+python@benfinney.id.au&gt;
   # Copyright © 2007–2008 Robert Niederreiter, Jens Klein
   # Copyright © 2004–2005 Chad J. Schroeder
   # Copyright © 2003 Clark Evans
   # Copyright © 2002 Noah Spurrier
   # Copyright © 2001 Jürgen Hermann

The binary distribution of this product bundles binaries of
Plexus Cipher: encryption/decryption Component 1.4,
which has the following notices:
 * The code in this component contains a class - Base64 taken from http://juliusdavies.ca/svn/not-yet-commons-ssl/tags/commons-ssl-0.3.10/src/java/org/apache/commons/ssl/Base64.java
   which is Apache license: http://www.apache.org/licenses/LICENSE-2.0

   The PBE key processing routine PBECipher.createCipher() is adopted from http://juliusdavies.ca/svn/not-yet-commons-ssl/tags/commons-ssl-0.3.10/src/java/org/apache/commons/ssl/OpenSSL.java
    which is also Apache APL-2.0 license: http://www.apache.org/licenses/LICENSE-2.0

The binary distribution of this product bundles binaries of
software.amazon.ion:ion-java 1.0.1,
which has the following notices:
 * Amazon Ion Java Copyright 2007-2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.

The binary distribution of this product bundles binaries of
joda-time:joda-time:2.9.9
which has the following notices:
 * =============================================================================
   = NOTICE file corresponding to section 4d of the Apache License Version 2.0 =
   =============================================================================
   This product includes software developed by
   Joda.org (http://www.joda.org/).

The binary distribution of this product bundles binaries of
Ehcache 3.3.1,
which has the following notices:
 * Ehcache V3 Copyright 2014-2016 Terracotta, Inc.

The binary distribution of this product bundles binaries of
snakeyaml (https://bitbucket.org/asomov/snakeyaml),
which has the following notices:
 * Copyright (c) 2008, http://www.snakeyaml.org

The binary distribution of this product bundles binaries of
swagger-annotations (https://github.com/swagger-api/swagger-core),
which has the following notices:
 * Copyright 2016 SmartBear Software

The binary distribution of this product bundles binaries of
metrics-core 3.2.4
which has the following notices:
 * Copyright 2010-2013 Coda Hale and Yammer, Inc.

   This product includes software developed by Coda Hale and Yammer, Inc.

   This product includes code derived from the JSR-166 project (ThreadLocalRandom, Striped64,
   LongAdder), which was released with the following comments:

   Written by Doug Lea with assistance from members of JCP JSR-166
   Expert Group and released to the public domain, as explained at
   http://creativecommons.org/publicdomain/zero/1.0/</msg>
<status status="PASS" starttime="20220731 01:17:54.691" endtime="20220731 01:17:54.692"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220731 01:17:54.693" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220731 01:17:54.693" endtime="20220731 01:17:54.693"/>
</kw>
<status status="PASS" starttime="20220731 01:17:51.519" endtime="20220731 01:17:54.694"/>
</kw>
<msg timestamp="20220731 01:17:54.694" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220731 01:17:51.518" endtime="20220731 01:17:54.694"/>
</kw>
<msg timestamp="20220731 01:17:54.695" level="INFO">${result} = 2022-07-31 01:17:53 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2022-07-31 01:17:53 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2022...</msg>
<status status="PASS" starttime="20220731 01:17:51.518" endtime="20220731 01:17:54.695"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>This product includes software developed</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220731 01:17:54.695" endtime="20220731 01:17:54.696"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220731 01:17:45.804" endtime="20220731 01:17:54.696"/>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" starttime="20220731 01:17:45.756" endtime="20220731 01:17:54.697"/>
</suite>
<suite id="s1-s3-s2" name="mapreduce-o3fs" source="/opt/ozone/smoketest/mapreduce.robot">
<test id="s1-s3-s2-t1" name="Execute PI calculation">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220731 01:17:59.531" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20220731 01:17:59.536" level="INFO">${rc} = 0</msg>
<msg timestamp="20220731 01:17:59.536" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20220731 01:17:59.528" endtime="20220731 01:17:59.536"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220731 01:17:59.537" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20220731 01:17:59.536" endtime="20220731 01:17:59.537"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220731 01:17:59.537" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220731 01:17:59.537" endtime="20220731 01:17:59.538"/>
</kw>
<status status="PASS" starttime="20220731 01:17:59.527" endtime="20220731 01:17:59.538"/>
</kw>
<msg timestamp="20220731 01:17:59.538" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220731 01:17:59.527" endtime="20220731 01:17:59.538"/>
</kw>
<msg timestamp="20220731 01:17:59.538" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20220731 01:17:59.527" endtime="20220731 01:17:59.539"/>
</kw>
<msg timestamp="20220731 01:17:59.539" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20220731 01:17:59.526" endtime="20220731 01:17:59.540"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220731 01:17:59.543" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220731 01:17:59.542" endtime="20220731 01:17:59.543"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220731 01:17:59.543" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220731 01:17:59.543" endtime="20220731 01:17:59.543"/>
</kw>
<status status="PASS" starttime="20220731 01:17:59.542" endtime="20220731 01:17:59.543"/>
</kw>
<msg timestamp="20220731 01:17:59.544" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220731 01:17:59.541" endtime="20220731 01:17:59.544"/>
</kw>
<status status="PASS" starttime="20220731 01:17:59.541" endtime="20220731 01:17:59.544"/>
</kw>
<msg timestamp="20220731 01:17:59.544" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20220731 01:17:59.540" endtime="20220731 01:17:59.544"/>
</kw>
<msg timestamp="20220731 01:17:59.544" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20220731 01:17:59.540" endtime="20220731 01:17:59.544"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220731 01:17:59.547" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20220731 01:18:37.706" level="INFO">${rc} = 0</msg>
<msg timestamp="20220731 01:18:37.706" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2022-07-31 01:18:01 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2022-07-31 01:18:01 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" starttime="20220731 01:17:59.545" endtime="20220731 01:18:37.706"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220731 01:18:37.707" level="INFO">Number of Maps  = 3
Samples per Map = 3
2022-07-31 01:18:01 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2022-07-31 01:18:01 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2022-07-31 01:18:01 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2022-07-31 01:18:01 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2022-07-31 01:18:03 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.20.0.4:8032
2022-07-31 01:18:03 INFO  FileInputFormat:292 - Total input files to process : 3
2022-07-31 01:18:03 INFO  JobSubmitter:202 - number of splits:3
2022-07-31 01:18:04 INFO  JobSubmitter:298 - Submitting tokens for job: job_1659230173773_0001
2022-07-31 01:18:04 INFO  JobSubmitter:299 - Executing with tokens: []
2022-07-31 01:18:04 INFO  Configuration:2795 - resource-types.xml not found
2022-07-31 01:18:04 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2022-07-31 01:18:04 INFO  YarnClientImpl:329 - Submitted application application_1659230173773_0001
2022-07-31 01:18:04 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1659230173773_0001/
2022-07-31 01:18:04 INFO  Job:1614 - Running job: job_1659230173773_0001
2022-07-31 01:18:13 INFO  Job:1635 - Job job_1659230173773_0001 running in uber mode : false
2022-07-31 01:18:13 INFO  Job:1642 -  map 0% reduce 0%
2022-07-31 01:18:20 INFO  Job:1642 -  map 33% reduce 0%
2022-07-31 01:18:26 INFO  Job:1642 -  map 67% reduce 0%
2022-07-31 01:18:32 INFO  Job:1642 -  map 100% reduce 0%
2022-07-31 01:18:36 INFO  Job:1642 -  map 100% reduce 100%
2022-07-31 01:18:37 INFO  Job:1653 - Job job_1659230173773_0001 completed successfully
2022-07-31 01:18:37 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=943033
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=17
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=39928
		Total time spent by all reduces in occupied slots (ms)=16192
		Total time spent by all map tasks (ms)=9982
		Total time spent by all reduce tasks (ms)=4048
		Total vcore-milliseconds taken by all map tasks=9982
		Total vcore-milliseconds taken by all reduce tasks=4048
		Total megabyte-milliseconds taken by all map tasks=40886272
		Total megabyte-milliseconds taken by all reduce tasks=16580608
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=582
		CPU time spent (ms)=7260
		Physical memory (bytes) snapshot=1588932608
		Virtual memory (bytes) snapshot=15844454400
		Total committed heap usage (bytes)=1463287808
		Peak Map Physical memory (bytes)=408866816
		Peak Map Virtual memory (bytes)=3957616640
		Peak Reduce Physical memory (bytes)=365256704
		Peak Reduce Virtual memory (bytes)=3978223616
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 34.142 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" starttime="20220731 01:18:37.706" endtime="20220731 01:18:37.707"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220731 01:18:37.708" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220731 01:18:37.707" endtime="20220731 01:18:37.708"/>
</kw>
<status status="PASS" starttime="20220731 01:17:59.545" endtime="20220731 01:18:37.708"/>
</kw>
<msg timestamp="20220731 01:18:37.708" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220731 01:17:59.545" endtime="20220731 01:18:37.708"/>
</kw>
<msg timestamp="20220731 01:18:37.709" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2022-07-31 01:18:01 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2022-07-31 01:18:01 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" starttime="20220731 01:17:59.544" endtime="20220731 01:18:37.709"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220731 01:18:37.709" endtime="20220731 01:18:37.709"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>multiple SLF4J bindings</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220731 01:18:37.710" endtime="20220731 01:18:37.710"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20220731 01:17:59.525" endtime="20220731 01:18:37.710"/>
</test>
<test id="s1-s3-s2-t2" name="Execute WordCount">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220731 01:18:37.715" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20220731 01:18:37.721" level="INFO">${rc} = 0</msg>
<msg timestamp="20220731 01:18:37.721" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20220731 01:18:37.713" endtime="20220731 01:18:37.721"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220731 01:18:37.722" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20220731 01:18:37.721" endtime="20220731 01:18:37.722"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220731 01:18:37.722" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220731 01:18:37.722" endtime="20220731 01:18:37.722"/>
</kw>
<status status="PASS" starttime="20220731 01:18:37.712" endtime="20220731 01:18:37.723"/>
</kw>
<msg timestamp="20220731 01:18:37.723" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220731 01:18:37.712" endtime="20220731 01:18:37.723"/>
</kw>
<msg timestamp="20220731 01:18:37.723" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20220731 01:18:37.712" endtime="20220731 01:18:37.723"/>
</kw>
<msg timestamp="20220731 01:18:37.723" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20220731 01:18:37.711" endtime="20220731 01:18:37.723"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220731 01:18:37.724" level="INFO">${random} = RoQUGx9R</msg>
<status status="PASS" starttime="20220731 01:18:37.723" endtime="20220731 01:18:37.724"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220731 01:18:37.727" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220731 01:18:37.726" endtime="20220731 01:18:37.727"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220731 01:18:37.727" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220731 01:18:37.727" endtime="20220731 01:18:37.727"/>
</kw>
<status status="PASS" starttime="20220731 01:18:37.726" endtime="20220731 01:18:37.727"/>
</kw>
<msg timestamp="20220731 01:18:37.728" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220731 01:18:37.725" endtime="20220731 01:18:37.728"/>
</kw>
<status status="PASS" starttime="20220731 01:18:37.725" endtime="20220731 01:18:37.728"/>
</kw>
<msg timestamp="20220731 01:18:37.728" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20220731 01:18:37.724" endtime="20220731 01:18:37.728"/>
</kw>
<msg timestamp="20220731 01:18:37.728" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20220731 01:18:37.724" endtime="20220731 01:18:37.728"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220731 01:18:37.731" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220731 01:18:37.731" endtime="20220731 01:18:37.731"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220731 01:18:37.732" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220731 01:18:37.731" endtime="20220731 01:18:37.732"/>
</kw>
<status status="PASS" starttime="20220731 01:18:37.730" endtime="20220731 01:18:37.732"/>
</kw>
<msg timestamp="20220731 01:18:37.732" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220731 01:18:37.730" endtime="20220731 01:18:37.732"/>
</kw>
<status status="PASS" starttime="20220731 01:18:37.729" endtime="20220731 01:18:37.732"/>
</kw>
<msg timestamp="20220731 01:18:37.732" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" starttime="20220731 01:18:37.729" endtime="20220731 01:18:37.732"/>
</kw>
<msg timestamp="20220731 01:18:37.732" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" starttime="20220731 01:18:37.728" endtime="20220731 01:18:37.733"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${result}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220731 01:18:37.735" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220731 01:18:37.735" endtime="20220731 01:18:37.735"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220731 01:18:37.736" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220731 01:18:37.736" endtime="20220731 01:18:37.736"/>
</kw>
<status status="PASS" starttime="20220731 01:18:37.735" endtime="20220731 01:18:37.736"/>
</kw>
<msg timestamp="20220731 01:18:37.736" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220731 01:18:37.734" endtime="20220731 01:18:37.736"/>
</kw>
<status status="PASS" starttime="20220731 01:18:37.734" endtime="20220731 01:18:37.737"/>
</kw>
<msg timestamp="20220731 01:18:37.737" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-RoQUGx9R.txt</msg>
<status status="PASS" starttime="20220731 01:18:37.733" endtime="20220731 01:18:37.737"/>
</kw>
<msg timestamp="20220731 01:18:37.737" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-RoQUGx9R.txt</msg>
<status status="PASS" starttime="20220731 01:18:37.733" endtime="20220731 01:18:37.737"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220731 01:18:37.740" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-RoQUGx9R.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220731 01:19:13.829" level="INFO">${rc} = 0</msg>
<msg timestamp="20220731 01:19:13.829" level="INFO">${output} = 2022-07-31 01:18:39 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.20.0.4:8032
2022-07-31 01:18:39 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" starttime="20220731 01:18:37.738" endtime="20220731 01:19:13.829"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220731 01:19:13.830" level="INFO">2022-07-31 01:18:39 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.20.0.4:8032
2022-07-31 01:18:39 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2022-07-31 01:18:40 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2022-07-31 01:18:40 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2022-07-31 01:18:40 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2022-07-31 01:18:40 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-07-31 01:18:41 INFO  FileInputFormat:292 - Total input files to process : 3
2022-07-31 01:18:41 INFO  JobSubmitter:202 - number of splits:3
2022-07-31 01:18:41 INFO  JobSubmitter:298 - Submitting tokens for job: job_1659230173773_0002
2022-07-31 01:18:41 INFO  JobSubmitter:299 - Executing with tokens: []
2022-07-31 01:18:41 INFO  Configuration:2795 - resource-types.xml not found
2022-07-31 01:18:41 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2022-07-31 01:18:41 INFO  YarnClientImpl:329 - Submitted application application_1659230173773_0002
2022-07-31 01:18:42 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1659230173773_0002/
2022-07-31 01:18:42 INFO  Job:1614 - Running job: job_1659230173773_0002
2022-07-31 01:18:50 INFO  Job:1635 - Job job_1659230173773_0002 running in uber mode : false
2022-07-31 01:18:50 INFO  Job:1642 -  map 0% reduce 0%
2022-07-31 01:18:57 INFO  Job:1642 -  map 33% reduce 0%
2022-07-31 01:19:02 INFO  Job:1642 -  map 67% reduce 0%
2022-07-31 01:19:08 INFO  Job:1642 -  map 100% reduce 0%
2022-07-31 01:19:13 INFO  Job:1642 -  map 100% reduce 100%
2022-07-31 01:19:13 INFO  Job:1653 - Job job_1659230173773_0002 completed successfully
2022-07-31 01:19:13 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32289
		FILE: Number of bytes written=1006119
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39996
		O3FS: Number of bytes written=22443
		O3FS: Number of read operations=14
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=43240
		Total time spent by all reduces in occupied slots (ms)=14748
		Total time spent by all map tasks (ms)=10810
		Total time spent by all reduce tasks (ms)=3687
		Total vcore-milliseconds taken by all map tasks=10810
		Total vcore-milliseconds taken by all reduce tasks=3687
		Total megabyte-milliseconds taken by all map tasks=44277760
		Total megabyte-milliseconds taken by all reduce tasks=15101952
	Map-Reduce Framework
		Map input records=1064
		Map output records=4522
		Map output bytes=55364
		Map output materialized bytes=32301
		Input split bytes=303
		Combine input records=4522
		Combine output records=1810
		Reduce input groups=1546
		Reduce shuffle bytes=32301
		Reduce input records=1810
		Reduce output records=1546
		Spilled Records=3620
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=621
		CPU time spent (ms)=7470
		Physical memory (bytes) snapshot=1548083200
		Virtual memory (bytes) snapshot=15814934528
		Total committed heap usage (bytes)=1468006400
		Peak Map Physical memory (bytes)=404013056
		Peak Map Virtual memory (bytes)=3952578560
		Peak Reduce Physical memory (bytes)=365047808
		Peak Reduce Virtual memory (bytes)=3976593408
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39693
	File Output Format Counters 
		Bytes Written=22443</msg>
<status status="PASS" starttime="20220731 01:19:13.829" endtime="20220731 01:19:13.830"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220731 01:19:13.831" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220731 01:19:13.831" endtime="20220731 01:19:13.832"/>
</kw>
<status status="PASS" starttime="20220731 01:18:37.738" endtime="20220731 01:19:13.832"/>
</kw>
<msg timestamp="20220731 01:19:13.832" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220731 01:18:37.738" endtime="20220731 01:19:13.832"/>
</kw>
<msg timestamp="20220731 01:19:13.832" level="INFO">${output} = 2022-07-31 01:18:39 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.20.0.4:8032
2022-07-31 01:18:39 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" starttime="20220731 01:18:37.737" endtime="20220731 01:19:13.832"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>map tasks=3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220731 01:19:13.832" endtime="20220731 01:19:13.833"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220731 01:19:13.833" endtime="20220731 01:19:13.833"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20220731 01:18:37.711" endtime="20220731 01:19:13.833"/>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" starttime="20220731 01:17:59.479" endtime="20220731 01:19:13.835"/>
</suite>
<suite id="s1-s3-s3" name="hadoopfs-ofs" source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot">
<test id="s1-s3-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220731 01:19:19.042" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20220731 01:19:19.042" endtime="20220731 01:19:19.042"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220731 01:19:19.042" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20220731 01:19:19.042" endtime="20220731 01:19:19.043"/>
</kw>
<status status="PASS" starttime="20220731 01:19:19.041" endtime="20220731 01:19:19.043"/>
</kw>
<msg timestamp="20220731 01:19:19.043" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20220731 01:19:19.041" endtime="20220731 01:19:19.043"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20220731 01:19:19.043" endtime="20220731 01:19:19.044"/>
</kw>
<msg timestamp="20220731 01:19:19.044" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20220731 01:19:19.043" endtime="20220731 01:19:19.044"/>
</kw>
<status status="PASS" starttime="20220731 01:19:19.040" endtime="20220731 01:19:19.044"/>
</kw>
<msg timestamp="20220731 01:19:19.044" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20220731 01:19:19.040" endtime="20220731 01:19:19.044"/>
</kw>
<msg timestamp="20220731 01:19:19.044" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20220731 01:19:19.039" endtime="20220731 01:19:19.044"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220731 01:19:19.045" level="INFO">${random} = 83828</msg>
<status status="PASS" starttime="20220731 01:19:19.044" endtime="20220731 01:19:19.045"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220731 01:19:19.050" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-83828 2&gt;&amp;1'.</msg>
<msg timestamp="20220731 01:19:22.469" level="INFO">${rc} = 0</msg>
<msg timestamp="20220731 01:19:22.469" level="INFO">${output} = 2022-07-31 01:19:20 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2022-07-31 01:19:20 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2022...</msg>
<status status="PASS" starttime="20220731 01:19:19.046" endtime="20220731 01:19:22.469"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220731 01:19:22.470" level="INFO">2022-07-31 01:19:20 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2022-07-31 01:19:20 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2022-07-31 01:19:20 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2022-07-31 01:19:21 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20220731 01:19:22.470" endtime="20220731 01:19:22.470"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220731 01:19:22.471" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220731 01:19:22.471" endtime="20220731 01:19:22.471"/>
</kw>
<status status="PASS" starttime="20220731 01:19:19.046" endtime="20220731 01:19:22.471"/>
</kw>
<msg timestamp="20220731 01:19:22.472" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220731 01:19:19.045" endtime="20220731 01:19:22.472"/>
</kw>
<msg timestamp="20220731 01:19:22.472" level="INFO">${result} = 2022-07-31 01:19:20 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2022-07-31 01:19:20 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2022...</msg>
<status status="PASS" starttime="20220731 01:19:19.045" endtime="20220731 01:19:22.472"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>multiple SLF4J bindings</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220731 01:19:22.472" endtime="20220731 01:19:22.472"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -ls ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220731 01:19:22.476" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20220731 01:19:24.216" level="INFO">${rc} = 0</msg>
<msg timestamp="20220731 01:19:24.216" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2022-07-31 01:17 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2022-07-31 01:17 ofs://om/volume1/bucket1/ozone-24074
-rw-...</msg>
<status status="PASS" starttime="20220731 01:19:22.474" endtime="20220731 01:19:24.216"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220731 01:19:24.217" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2022-07-31 01:17 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2022-07-31 01:17 ofs://om/volume1/bucket1/ozone-24074
-rw-rw-rw-   3 hadoop hadoop      21943 2022-07-31 01:19 ofs://om/volume1/bucket1/ozone-83828
drwxrwxrwx   - hadoop hadoop          0 2022-07-31 01:17 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2022-07-31 01:18 ofs://om/volume1/bucket1/wordcount-RoQUGx9R.txt</msg>
<status status="PASS" starttime="20220731 01:19:24.216" endtime="20220731 01:19:24.217"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220731 01:19:24.217" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220731 01:19:24.217" endtime="20220731 01:19:24.217"/>
</kw>
<status status="PASS" starttime="20220731 01:19:22.473" endtime="20220731 01:19:24.218"/>
</kw>
<msg timestamp="20220731 01:19:24.218" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220731 01:19:22.473" endtime="20220731 01:19:24.218"/>
</kw>
<msg timestamp="20220731 01:19:24.218" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2022-07-31 01:17 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2022-07-31 01:17 ofs://om/volume1/bucket1/ozone-24074
-rw-...</msg>
<status status="PASS" starttime="20220731 01:19:22.473" endtime="20220731 01:19:24.218"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220731 01:19:24.218" endtime="20220731 01:19:24.219"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -cat ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220731 01:19:24.222" level="INFO">Running command 'hdfs dfs -cat ofs://om/volume1/bucket1/ozone-83828 2&gt;&amp;1'.</msg>
<msg timestamp="20220731 01:19:27.414" level="INFO">${rc} = 0</msg>
<msg timestamp="20220731 01:19:27.414" level="INFO">${output} = 2022-07-31 01:19:26 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2022-07-31 01:19:26 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2022...</msg>
<status status="PASS" starttime="20220731 01:19:24.220" endtime="20220731 01:19:27.415"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220731 01:19:27.416" level="INFO">2022-07-31 01:19:26 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2022-07-31 01:19:26 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2022-07-31 01:19:26 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
This product includes software developed by The Apache Software
Foundation (http://www.apache.org/).

The binary distribution of this product bundles binaries of
org.iq80.leveldb:leveldb-api (https://github.com/dain/leveldb), which has the
following notices:
* Copyright 2011 Dain Sundstrom &lt;dain@iq80.com&gt;
* Copyright 2011 FuseSource Corp. http://fusesource.com

The binary distribution of this product bundles binaries of
AWS SDK for Java - Bundle 1.11.563 (https://github.com/aws/aws-sdk-java),
which has the following notices:

This software includes third party software subject to the following copyrights:
- XML parsing and utility functions from JetS3t - Copyright 2006-2009 James Murty.
- PKCS#1 PEM encoded private key parsing and utility functions from oauth.googlecode.com - Copyright 1998-2010 AOL Inc.

The binary distribution of this product bundles binaries of
Gson 2.2.4,
which has the following notices:

                            The Netty Project
                            =================

Please visit the Netty web site for more information:

  * http://netty.io/

Copyright 2014 The Netty Project

The Netty Project licenses this file to you under the Apache License,
version 2.0 (the "License"); you may not use this file except in compliance
with the License. You may obtain a copy of the License at:

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
License for the specific language governing permissions and limitations
under the License.

Also, please refer to each LICENSE.&lt;component&gt;.txt file, which is located in
the 'license' directory of the distribution file, for the license terms of the
components that this product depends on.

-------------------------------------------------------------------------------
This product contains the extensions to Java Collections Framework which has
been derived from the works by JSR-166 EG, Doug Lea, and Jason T. Greene:

  * LICENSE:
    * license/LICENSE.jsr166y.txt (Public Domain)
  * HOMEPAGE:
    * http://gee.cs.oswego.edu/cgi-bin/viewcvs.cgi/jsr166/
    * http://viewvc.jboss.org/cgi-bin/viewvc.cgi/jbosscache/experimental/jsr166/

This product contains a modified version of Robert Harder's Public Domain
Base64 Encoder and Decoder, which can be obtained at:

  * LICENSE:
    * license/LICENSE.base64.txt (Public Domain)
  * HOMEPAGE:
    * http://iharder.sourceforge.net/current/java/base64/

This product contains a modified portion of 'Webbit', an event based
WebSocket and HTTP server, which can be obtained at:

  * LICENSE:
    * license/LICENSE.webbit.txt (BSD License)
  * HOMEPAGE:
    * https://github.com/joewalnes/webbit

This product contains a modified portion of 'SLF4J', a simple logging
facade for Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.slf4j.txt (MIT License)
  * HOMEPAGE:
    * http://www.slf4j.org/

This product contains a modified portion of 'ArrayDeque', written by Josh
Bloch of Google, Inc:

  * LICENSE:
    * license/LICENSE.deque.txt (Public Domain)

This product contains a modified portion of 'Apache Harmony', an open source
Java SE, which can be obtained at:

  * LICENSE:
    * license/LICENSE.harmony.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://archive.apache.org/dist/harmony/

This product contains a modified version of Roland Kuhn's ASL2
AbstractNodeQueue, which is based on Dmitriy Vyukov's non-intrusive MPSC queue.
It can be obtained at:

  * LICENSE:
    * license/LICENSE.abstractnodequeue.txt (Public Domain)
  * HOMEPAGE:
    * https://github.com/akka/akka/blob/wip-2.2.3-for-scala-2.11/akka-actor/src/main/java/akka/dispatch/AbstractNodeQueue.java

This product contains a modified portion of 'jbzip2', a Java bzip2 compression
and decompression library written by Matthew J. Francis. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jbzip2.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jbzip2/

This product contains a modified portion of 'libdivsufsort', a C API library to construct
the suffix array and the Burrows-Wheeler transformed string for any input string of
a constant-size alphabet written by Yuta Mori. It can be obtained at:

  * LICENSE:
    * license/LICENSE.libdivsufsort.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/libdivsufsort/

This product contains a modified portion of Nitsan Wakart's 'JCTools', Java Concurrency Tools for the JVM,
 which can be obtained at:

  * LICENSE:
    * license/LICENSE.jctools.txt (ASL2 License)
  * HOMEPAGE:
    * https://github.com/JCTools/JCTools

This product optionally depends on 'JZlib', a re-implementation of zlib in
pure Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jzlib.txt (BSD style License)
  * HOMEPAGE:
    * http://www.jcraft.com/jzlib/

This product optionally depends on 'Compress-LZF', a Java library for encoding and
decoding data in LZF format, written by Tatu Saloranta. It can be obtained at:

  * LICENSE:
    * license/LICENSE.compress-lzf.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/ning/compress

This product optionally depends on 'lz4', a LZ4 Java compression
and decompression library written by Adrien Grand. It can be obtained at:

  * LICENSE:
    * license/LICENSE.lz4.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jpountz/lz4-java

This product optionally depends on 'lzma-java', a LZMA Java compression
and decompression library, which can be obtained at:

  * LICENSE:
    * license/LICENSE.lzma-java.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jponge/lzma-java

This product contains a modified portion of 'jfastlz', a Java port of FastLZ compression
and decompression library written by William Kinney. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jfastlz.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jfastlz/

This product contains a modified portion of and optionally depends on 'Protocol Buffers', Google's data
interchange format, which can be obtained at:

  * LICENSE:
    * license/LICENSE.protobuf.txt (New BSD License)
  * HOMEPAGE:
    * http://code.google.com/p/protobuf/

This product optionally depends on 'Bouncy Castle Crypto APIs' to generate
a temporary self-signed X.509 certificate when the JVM does not provide the
equivalent functionality.  It can be obtained at:

  * LICENSE:
    * license/LICENSE.bouncycastle.txt (MIT License)
  * HOMEPAGE:
    * http://www.bouncycastle.org/

This product optionally depends on 'Snappy', a compression library produced
by Google Inc, which can be obtained at:

  * LICENSE:
    * license/LICENSE.snappy.txt (New BSD License)
  * HOMEPAGE:
    * http://code.google.com/p/snappy/

This product contains a modified portion of UnsignedBytes LexicographicalComparator
from Guava v21 project by Google Inc, which can be obtained at:

  * LICENSE:
    * license/COPYING (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/google/guava

This product optionally depends on 'JBoss Marshalling', an alternative Java
serialization API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jboss-marshalling.txt (GNU LGPL 2.1)
  * HOMEPAGE:
    * http://www.jboss.org/jbossmarshalling

This product optionally depends on 'Caliper', Google's micro-
benchmarking framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.caliper.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://code.google.com/p/caliper/

This product optionally depends on 'Apache Commons Logging', a logging
framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-logging.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://commons.apache.org/logging/

This product optionally depends on 'Apache Log4J', a logging framework, which
can be obtained at:

  * LICENSE:
    * license/LICENSE.log4j.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://logging.apache.org/log4j/

This product optionally depends on 'Aalto XML', an ultra-high performance
non-blocking XML processor, which can be obtained at:

  * LICENSE:
    * license/LICENSE.aalto-xml.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://wiki.fasterxml.com/AaltoHome

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Twitter. It can be obtained at:

  * LICENSE:
    * license/LICENSE.hpack.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/twitter/hpack

This product contains a modified portion of 'Apache Commons Lang', a Java library
provides utilities for the java.lang API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-lang.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://commons.apache.org/proper/commons-lang/

This product contains a modified portion of 'JDOM 1.1', which can be obtained at:

  * LICENSE:
    * https://github.com/hunterhacker/jdom/blob/jdom-1.1/core/LICENSE.txt
  * HOMEPAGE:
    * http://www.jdom.org/

The binary distribution of this product bundles binaries of
Commons Codec 1.4,
which has the following notices:
 * src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.javacontains test data from http://aspell.net/test/orig/batch0.tab.Copyright (C) 2002 Kevin Atkinson (kevina@gnu.org)
  ===============================================================================
  The content of package org.apache.commons.codec.language.bm has been translated
  from the original php source code available at http://stevemorse.org/phoneticinfo.htm
  with permission from the original authors.
  Original source copyright:Copyright (c) 2008 Alexander Beider &amp; Stephen P. Morse.

The binary distribution of this product bundles binaries of
Commons Lang 2.6,
which has the following notices:
 * This product includes software from the Spring Framework,under the Apache License 2.0 (see: StringUtils.containsWhitespace())

The binary distribution of this product bundles binaries of
Apache Log4j 1.2.17,
which has the following notices:
 * ResolverUtil.java
    Copyright 2005-2006 Tim Fennell
  Dumbster SMTP test server
    Copyright 2004 Jason Paul Kitchen
  TypeUtil.java
    Copyright 2002-2012 Ramnivas Laddad, Juergen Hoeller, Chris Beams

The binary distribution of this product bundles binaries of
"Java Concurrency in Practice" book annotations 1.0,
which has the following notices:
 * Copyright (c) 2005 Brian Goetz and Tim Peierls Released under the Creative
  Commons Attribution License (http://creativecommons.org/licenses/by/2.5)
  Official home: http://www.jcip.net Any republication or derived work
  distributed in source code form must include this copyright and license
  notice.

The binary distribution of this product bundles binaries of
Jetty :: Http Utility 9.3.19.,
Jetty :: IO Utility 9.3.19.,
Jetty :: Security 9.3.19.,
Jetty :: Server Core 9.3.19.,
Jetty :: Servlet Handling 9.3.19.,
Jetty :: Utilities 9.3.19.,
Jetty :: Utilities :: Ajax,
Jetty :: Webapp Application Support 9.3.19.,
Jetty :: XML utilities 9.3.19.,
which has the following notices:
 * ==============================================================
    Jetty Web Container
    Copyright 1995-2016 Mort Bay Consulting Pty Ltd.
   ==============================================================

   The Jetty Web Container is Copyright Mort Bay Consulting Pty Ltd
   unless otherwise noted.

   Jetty is dual licensed under both

     * The Apache 2.0 License
       http://www.apache.org/licenses/LICENSE-2.0.html

         and

     * The Eclipse Public 1.0 License
       http://www.eclipse.org/legal/epl-v10.html

   Jetty may be distributed under either license.

   ------
   Eclipse

   The following artifacts are EPL.
    * org.eclipse.jetty.orbit:org.eclipse.jdt.core

   The following artifacts are EPL and ASL2.
    * org.eclipse.jetty.orbit:javax.security.auth.message


   The following artifacts are EPL and CDDL 1.0.
    * org.eclipse.jetty.orbit:javax.mail.glassfish


   ------
   Oracle

   The following artifacts are CDDL + GPLv2 with classpath exception.
   https://glassfish.dev.java.net/nonav/public/CDDL+GPL.html

    * javax.servlet:javax.servlet-api
    * javax.annotation:javax.annotation-api
    * javax.transaction:javax.transaction-api
    * javax.websocket:javax.websocket-api

   ------
   Oracle OpenJDK

   If ALPN is used to negotiate HTTP/2 connections, then the following
   artifacts may be included in the distribution or downloaded when ALPN
   module is selected.

    * java.sun.security.ssl

   These artifacts replace/modify OpenJDK classes.  The modififications
   are hosted at github and both modified and original are under GPL v2 with
   classpath exceptions.
   http://openjdk.java.net/legal/gplv2+ce.html


   ------
   OW2

   The following artifacts are licensed by the OW2 Foundation according to the
   terms of http://asm.ow2.org/license.html

   org.ow2.asm:asm-commons
   org.ow2.asm:asm


   ------
   Apache

   The following artifacts are ASL2 licensed.

   org.apache.taglibs:taglibs-standard-spec
   org.apache.taglibs:taglibs-standard-impl


   ------
   MortBay

   The following artifacts are ASL2 licensed.  Based on selected classes from
   following Apache Tomcat jars, all ASL2 licensed.

   org.mortbay.jasper:apache-jsp
     org.apache.tomcat:tomcat-jasper
     org.apache.tomcat:tomcat-juli
     org.apache.tomcat:tomcat-jsp-api
     org.apache.tomcat:tomcat-el-api
     org.apache.tomcat:tomcat-jasper-el
     org.apache.tomcat:tomcat-api
     org.apache.tomcat:tomcat-util-scan
     org.apache.tomcat:tomcat-util

   org.mortbay.jasper:apache-el
     org.apache.tomcat:tomcat-jasper-el
     org.apache.tomcat:tomcat-el-api


   ------
   Mortbay

   The following artifacts are CDDL + GPLv2 with classpath exception.

   https://glassfish.dev.java.net/nonav/public/CDDL+GPL.html

   org.eclipse.jetty.toolchain:jetty-schemas

   ------
   Assorted

   The UnixCrypt.java code implements the one way cryptography used by
   Unix systems for simple password protection.  Copyright 1996 Aki Yoshida,
   modified April 2001  by Iris Van den Broeke, Daniel Deville.
   Permission to use, copy, modify and distribute UnixCrypt
   for non-commercial or commercial purposes and without fee is
   granted provided that the copyright notice appears in all copies./

The binary distribution of this product bundles binaries of
Snappy for Java 1.0.4.1,
which has the following notices:
 * This product includes software developed by Google
    Snappy: http://code.google.com/p/snappy/ (New BSD License)

   This product includes software developed by Apache
    PureJavaCrc32C from apache-hadoop-common http://hadoop.apache.org/
    (Apache 2.0 license)

   This library containd statically linked libstdc++. This inclusion is allowed by
   "GCC RUntime Library Exception"
   http://gcc.gnu.org/onlinedocs/libstdc++/manual/license.html

   == Contributors ==
     * Tatu Saloranta
       * Providing benchmark suite
     * Alec Wysoker
       * Performance and memory usage improvement

The binary distribution of this product bundles binaries of
Xerces2 Java Parser 2.9.1,
which has the following notices:
 * =========================================================================
   ==  NOTICE file corresponding to section 4(d) of the Apache License,   ==
   ==  Version 2.0, in this case for the Apache Xerces Java distribution. ==
   =========================================================================

   Apache Xerces Java
   Copyright 1999-2007 The Apache Software Foundation

   This product includes software developed at
   The Apache Software Foundation (http://www.apache.org/).

   Portions of this software were originally based on the following:
     - software copyright (c) 1999, IBM Corporation., http://www.ibm.com.
     - software copyright (c) 1999, Sun Microsystems., http://www.sun.com.
     - voluntary contributions made by Paul Eng on behalf of the
       Apache Software Foundation that were originally developed at iClick, Inc.,
       software copyright (c) 1999.

The binary distribution of this product bundles binaries of
Logback Classic Module 1.1.2,
Logback Core Module 1.1.2,
which has the following notices:
 * Logback: the reliable, generic, fast and flexible logging framework.
   Copyright (C) 1999-2012, QOS.ch. All rights reserved.

The binary distribution of this product bundles binaries of
Apache HBase - Annotations 1.2.6,
Apache HBase - Client 1.2.6,
Apache HBase - Common 1.2.6,
Apache HBase - Hadoop Compatibility 1.2.6,
Apache HBase - Hadoop Two Compatibility 1.2.6,
Apache HBase - Prefix Tree 1.2.6,
Apache HBase - Procedure 1.2.6,
Apache HBase - Protocol 1.2.6,
Apache HBase - Server 1.2.6,
which has the following notices:
 * Apache HBase
   Copyright 2007-2015 The Apache Software Foundation

   This product includes software developed at
   The Apache Software Foundation (http://www.apache.org/).

   --
   This product incorporates portions of the 'Hadoop' project

   Copyright 2007-2009 The Apache Software Foundation

   Licensed under the Apache License v2.0
   --
   Our Orca logo we got here: http://www.vectorfree.com/jumping-orca
   It is licensed Creative Commons Attribution 3.0.
   See https://creativecommons.org/licenses/by/3.0/us/
   We changed the logo by stripping the colored background, inverting
   it and then rotating it some.

   Later we found that vectorfree.com image is not properly licensed.
   The original is owned by vectorportal.com. The original was
   relicensed so we could use it as Creative Commons Attribution 3.0.
   The license is bundled with the download available here:
   http://www.vectorportal.com/subcategory/205/KILLER-WHALE-FREE-VECTOR.eps/ifile/9136/detailtest.asp
   --
   This product includes portions of the Bootstrap project v3.0.0

   Copyright 2013 Twitter, Inc.

   Licensed under the Apache License v2.0

   This product uses the Glyphicons Halflings icon set.

   http://glyphicons.com/

   Copyright Jan Kovařík

   Licensed under the Apache License v2.0 as a part of the Bootstrap project.

   --
   This product includes portions of the Guava project v14, specifically
   'hbase-common/src/main/java/org/apache/hadoop/hbase/io/LimitInputStream.java'

   Copyright (C) 2007 The Guava Authors

   Licensed under the Apache License, Version 2.0

The binary distribution of this product bundles binaries of
Phoenix Core 4.7.0,
which has the following notices:
   Apache Phoenix
   Copyright 2013-2016 The Apache Software Foundation

   This product includes software developed by The Apache Software
   Foundation (http://www.apache.org/).

   This also includes:

   The phoenix-spark module has been adapted from the phoenix-spark library
   distributed under the terms of the Apache 2 license. Original source copyright:
   Copyright 2014 Simply Measured, Inc.
   Copyright 2015 Interset Software Inc.

   The file bin/daemon.py is based on the file of the same name in python-daemon 2.0.5
   (https://pypi.python.org/pypi/python-daemon/). Original source copyright:
   # Copyright © 2008–2015 Ben Finney &lt;ben+python@benfinney.id.au&gt;
   # Copyright © 2007–2008 Robert Niederreiter, Jens Klein
   # Copyright © 2004–2005 Chad J. Schroeder
   # Copyright © 2003 Clark Evans
   # Copyright © 2002 Noah Spurrier
   # Copyright © 2001 Jürgen Hermann

The binary distribution of this product bundles binaries of
Plexus Cipher: encryption/decryption Component 1.4,
which has the following notices:
 * The code in this component contains a class - Base64 taken from http://juliusdavies.ca/svn/not-yet-commons-ssl/tags/commons-ssl-0.3.10/src/java/org/apache/commons/ssl/Base64.java
   which is Apache license: http://www.apache.org/licenses/LICENSE-2.0

   The PBE key processing routine PBECipher.createCipher() is adopted from http://juliusdavies.ca/svn/not-yet-commons-ssl/tags/commons-ssl-0.3.10/src/java/org/apache/commons/ssl/OpenSSL.java
    which is also Apache APL-2.0 license: http://www.apache.org/licenses/LICENSE-2.0

The binary distribution of this product bundles binaries of
software.amazon.ion:ion-java 1.0.1,
which has the following notices:
 * Amazon Ion Java Copyright 2007-2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.

The binary distribution of this product bundles binaries of
joda-time:joda-time:2.9.9
which has the following notices:
 * =============================================================================
   = NOTICE file corresponding to section 4d of the Apache License Version 2.0 =
   =============================================================================
   This product includes software developed by
   Joda.org (http://www.joda.org/).

The binary distribution of this product bundles binaries of
Ehcache 3.3.1,
which has the following notices:
 * Ehcache V3 Copyright 2014-2016 Terracotta, Inc.

The binary distribution of this product bundles binaries of
snakeyaml (https://bitbucket.org/asomov/snakeyaml),
which has the following notices:
 * Copyright (c) 2008, http://www.snakeyaml.org

The binary distribution of this product bundles binaries of
swagger-annotations (https://github.com/swagger-api/swagger-core),
which has the following notices:
 * Copyright 2016 SmartBear Software

The binary distribution of this product bundles binaries of
metrics-core 3.2.4
which has the following notices:
 * Copyright 2010-2013 Coda Hale and Yammer, Inc.

   This product includes software developed by Coda Hale and Yammer, Inc.

   This product includes code derived from the JSR-166 project (ThreadLocalRandom, Striped64,
   LongAdder), which was released with the following comments:

   Written by Doug Lea with assistance from members of JCP JSR-166
   Expert Group and released to the public domain, as explained at
   http://creativecommons.org/publicdomain/zero/1.0/</msg>
<status status="PASS" starttime="20220731 01:19:27.415" endtime="20220731 01:19:27.416"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220731 01:19:27.417" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220731 01:19:27.416" endtime="20220731 01:19:27.417"/>
</kw>
<status status="PASS" starttime="20220731 01:19:24.220" endtime="20220731 01:19:27.417"/>
</kw>
<msg timestamp="20220731 01:19:27.417" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220731 01:19:24.219" endtime="20220731 01:19:27.417"/>
</kw>
<msg timestamp="20220731 01:19:27.418" level="INFO">${result} = 2022-07-31 01:19:26 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2022-07-31 01:19:26 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2022...</msg>
<status status="PASS" starttime="20220731 01:19:24.219" endtime="20220731 01:19:27.418"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>This product includes software developed</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220731 01:19:27.418" endtime="20220731 01:19:27.419"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220731 01:19:19.038" endtime="20220731 01:19:27.419"/>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" starttime="20220731 01:19:18.992" endtime="20220731 01:19:27.420"/>
</suite>
<suite id="s1-s3-s4" name="mapreduce-ofs" source="/opt/ozone/smoketest/mapreduce.robot">
<test id="s1-s3-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220731 01:19:32.283" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20220731 01:19:32.289" level="INFO">${rc} = 0</msg>
<msg timestamp="20220731 01:19:32.289" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20220731 01:19:32.280" endtime="20220731 01:19:32.289"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220731 01:19:32.290" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20220731 01:19:32.289" endtime="20220731 01:19:32.290"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220731 01:19:32.291" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220731 01:19:32.290" endtime="20220731 01:19:32.291"/>
</kw>
<status status="PASS" starttime="20220731 01:19:32.279" endtime="20220731 01:19:32.291"/>
</kw>
<msg timestamp="20220731 01:19:32.291" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220731 01:19:32.279" endtime="20220731 01:19:32.291"/>
</kw>
<msg timestamp="20220731 01:19:32.291" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20220731 01:19:32.278" endtime="20220731 01:19:32.292"/>
</kw>
<msg timestamp="20220731 01:19:32.293" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20220731 01:19:32.278" endtime="20220731 01:19:32.293"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220731 01:19:32.296" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20220731 01:19:32.295" endtime="20220731 01:19:32.296"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220731 01:19:32.296" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20220731 01:19:32.296" endtime="20220731 01:19:32.296"/>
</kw>
<status status="PASS" starttime="20220731 01:19:32.295" endtime="20220731 01:19:32.297"/>
</kw>
<msg timestamp="20220731 01:19:32.297" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20220731 01:19:32.295" endtime="20220731 01:19:32.297"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20220731 01:19:32.297" endtime="20220731 01:19:32.297"/>
</kw>
<msg timestamp="20220731 01:19:32.298" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20220731 01:19:32.297" endtime="20220731 01:19:32.298"/>
</kw>
<status status="PASS" starttime="20220731 01:19:32.294" endtime="20220731 01:19:32.298"/>
</kw>
<msg timestamp="20220731 01:19:32.298" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20220731 01:19:32.293" endtime="20220731 01:19:32.298"/>
</kw>
<msg timestamp="20220731 01:19:32.298" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20220731 01:19:32.293" endtime="20220731 01:19:32.298"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220731 01:19:32.301" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20220731 01:20:06.582" level="INFO">${rc} = 0</msg>
<msg timestamp="20220731 01:20:06.582" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2022-07-31 01:19:34 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2022-07-31 01:19:34 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" starttime="20220731 01:19:32.299" endtime="20220731 01:20:06.582"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220731 01:20:06.584" level="INFO">Number of Maps  = 3
Samples per Map = 3
2022-07-31 01:19:34 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2022-07-31 01:19:34 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2022-07-31 01:19:34 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2022-07-31 01:19:35 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2022-07-31 01:19:36 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.20.0.4:8032
2022-07-31 01:19:36 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2022-07-31 01:19:36 INFO  FileInputFormat:292 - Total input files to process : 3
2022-07-31 01:19:37 INFO  JobSubmitter:202 - number of splits:3
2022-07-31 01:19:37 INFO  JobSubmitter:298 - Submitting tokens for job: job_1659230173773_0003
2022-07-31 01:19:37 INFO  JobSubmitter:299 - Executing with tokens: []
2022-07-31 01:19:37 INFO  Configuration:2795 - resource-types.xml not found
2022-07-31 01:19:37 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2022-07-31 01:19:37 INFO  YarnClientImpl:329 - Submitted application application_1659230173773_0003
2022-07-31 01:19:37 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1659230173773_0003/
2022-07-31 01:19:37 INFO  Job:1614 - Running job: job_1659230173773_0003
2022-07-31 01:19:44 INFO  Job:1635 - Job job_1659230173773_0003 running in uber mode : false
2022-07-31 01:19:44 INFO  Job:1642 -  map 0% reduce 0%
2022-07-31 01:19:50 INFO  Job:1642 -  map 33% reduce 0%
2022-07-31 01:19:55 INFO  Job:1642 -  map 67% reduce 0%
2022-07-31 01:20:00 INFO  Job:1642 -  map 100% reduce 0%
2022-07-31 01:20:04 INFO  Job:1642 -  map 100% reduce 100%
2022-07-31 01:20:05 INFO  Job:1653 - Job job_1659230173773_0003 completed successfully
2022-07-31 01:20:06 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=942821
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=17
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=39884
		Total time spent by all reduces in occupied slots (ms)=15276
		Total time spent by all map tasks (ms)=9971
		Total time spent by all reduce tasks (ms)=3819
		Total vcore-milliseconds taken by all map tasks=9971
		Total vcore-milliseconds taken by all reduce tasks=3819
		Total megabyte-milliseconds taken by all map tasks=40841216
		Total megabyte-milliseconds taken by all reduce tasks=15642624
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=593
		CPU time spent (ms)=7450
		Physical memory (bytes) snapshot=1581867008
		Virtual memory (bytes) snapshot=15834710016
		Total committed heap usage (bytes)=1466433536
		Peak Map Physical memory (bytes)=406745088
		Peak Map Virtual memory (bytes)=3954651136
		Peak Reduce Physical memory (bytes)=370958336
		Peak Reduce Virtual memory (bytes)=3976921088
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 29.745 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" starttime="20220731 01:20:06.583" endtime="20220731 01:20:06.584"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220731 01:20:06.584" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220731 01:20:06.584" endtime="20220731 01:20:06.584"/>
</kw>
<status status="PASS" starttime="20220731 01:19:32.299" endtime="20220731 01:20:06.585"/>
</kw>
<msg timestamp="20220731 01:20:06.585" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220731 01:19:32.299" endtime="20220731 01:20:06.585"/>
</kw>
<msg timestamp="20220731 01:20:06.585" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2022-07-31 01:19:34 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2022-07-31 01:19:34 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" starttime="20220731 01:19:32.298" endtime="20220731 01:20:06.585"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220731 01:20:06.585" endtime="20220731 01:20:06.586"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>multiple SLF4J bindings</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220731 01:20:06.586" endtime="20220731 01:20:06.586"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20220731 01:19:32.277" endtime="20220731 01:20:06.586"/>
</test>
<test id="s1-s3-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220731 01:20:06.591" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20220731 01:20:06.597" level="INFO">${rc} = 0</msg>
<msg timestamp="20220731 01:20:06.598" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20220731 01:20:06.589" endtime="20220731 01:20:06.598"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220731 01:20:06.599" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20220731 01:20:06.598" endtime="20220731 01:20:06.599"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220731 01:20:06.599" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220731 01:20:06.599" endtime="20220731 01:20:06.599"/>
</kw>
<status status="PASS" starttime="20220731 01:20:06.589" endtime="20220731 01:20:06.600"/>
</kw>
<msg timestamp="20220731 01:20:06.600" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220731 01:20:06.589" endtime="20220731 01:20:06.600"/>
</kw>
<msg timestamp="20220731 01:20:06.600" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20220731 01:20:06.588" endtime="20220731 01:20:06.600"/>
</kw>
<msg timestamp="20220731 01:20:06.600" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20220731 01:20:06.588" endtime="20220731 01:20:06.600"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220731 01:20:06.601" level="INFO">${random} = s65sQkIc</msg>
<status status="PASS" starttime="20220731 01:20:06.601" endtime="20220731 01:20:06.601"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220731 01:20:06.605" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20220731 01:20:06.604" endtime="20220731 01:20:06.605"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220731 01:20:06.605" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20220731 01:20:06.605" endtime="20220731 01:20:06.605"/>
</kw>
<status status="PASS" starttime="20220731 01:20:06.604" endtime="20220731 01:20:06.605"/>
</kw>
<msg timestamp="20220731 01:20:06.606" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20220731 01:20:06.603" endtime="20220731 01:20:06.606"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20220731 01:20:06.606" endtime="20220731 01:20:06.606"/>
</kw>
<msg timestamp="20220731 01:20:06.606" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20220731 01:20:06.606" endtime="20220731 01:20:06.607"/>
</kw>
<status status="PASS" starttime="20220731 01:20:06.603" endtime="20220731 01:20:06.607"/>
</kw>
<msg timestamp="20220731 01:20:06.607" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20220731 01:20:06.602" endtime="20220731 01:20:06.607"/>
</kw>
<msg timestamp="20220731 01:20:06.607" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20220731 01:20:06.601" endtime="20220731 01:20:06.607"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220731 01:20:06.610" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20220731 01:20:06.610" endtime="20220731 01:20:06.610"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220731 01:20:06.611" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20220731 01:20:06.610" endtime="20220731 01:20:06.611"/>
</kw>
<status status="PASS" starttime="20220731 01:20:06.609" endtime="20220731 01:20:06.611"/>
</kw>
<msg timestamp="20220731 01:20:06.611" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20220731 01:20:06.609" endtime="20220731 01:20:06.611"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220731 01:20:06.612" level="INFO">${first} = i</msg>
<status status="PASS" starttime="20220731 01:20:06.612" endtime="20220731 01:20:06.613"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220731 01:20:06.613" level="INFO">${result} = /input/</msg>
<status status="PASS" starttime="20220731 01:20:06.613" endtime="20220731 01:20:06.613"/>
</kw>
<status status="PASS" starttime="20220731 01:20:06.612" endtime="20220731 01:20:06.613"/>
</kw>
<msg timestamp="20220731 01:20:06.614" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" starttime="20220731 01:20:06.611" endtime="20220731 01:20:06.614"/>
</kw>
<status status="PASS" starttime="20220731 01:20:06.608" endtime="20220731 01:20:06.614"/>
</kw>
<msg timestamp="20220731 01:20:06.614" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" starttime="20220731 01:20:06.608" endtime="20220731 01:20:06.614"/>
</kw>
<msg timestamp="20220731 01:20:06.614" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" starttime="20220731 01:20:06.607" endtime="20220731 01:20:06.614"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${result}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220731 01:20:06.617" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20220731 01:20:06.617" endtime="20220731 01:20:06.618"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220731 01:20:06.618" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20220731 01:20:06.618" endtime="20220731 01:20:06.618"/>
</kw>
<status status="PASS" starttime="20220731 01:20:06.616" endtime="20220731 01:20:06.618"/>
</kw>
<msg timestamp="20220731 01:20:06.618" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20220731 01:20:06.616" endtime="20220731 01:20:06.618"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220731 01:20:06.620" level="INFO">${first} = w</msg>
<status status="PASS" starttime="20220731 01:20:06.619" endtime="20220731 01:20:06.620"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220731 01:20:06.620" level="INFO">${result} = /wordcount-s65sQkIc.txt</msg>
<status status="PASS" starttime="20220731 01:20:06.620" endtime="20220731 01:20:06.620"/>
</kw>
<status status="PASS" starttime="20220731 01:20:06.619" endtime="20220731 01:20:06.620"/>
</kw>
<msg timestamp="20220731 01:20:06.620" level="INFO">${path_with_leading} = /wordcount-s65sQkIc.txt</msg>
<status status="PASS" starttime="20220731 01:20:06.618" endtime="20220731 01:20:06.620"/>
</kw>
<status status="PASS" starttime="20220731 01:20:06.615" endtime="20220731 01:20:06.621"/>
</kw>
<msg timestamp="20220731 01:20:06.621" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-s65sQkIc.txt</msg>
<status status="PASS" starttime="20220731 01:20:06.615" endtime="20220731 01:20:06.621"/>
</kw>
<msg timestamp="20220731 01:20:06.621" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-s65sQkIc.txt</msg>
<status status="PASS" starttime="20220731 01:20:06.614" endtime="20220731 01:20:06.621"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220731 01:20:06.626" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-s65sQkIc.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220731 01:20:42.479" level="INFO">${rc} = 0</msg>
<msg timestamp="20220731 01:20:42.479" level="INFO">${output} = 2022-07-31 01:20:08 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.20.0.4:8032
2022-07-31 01:20:08 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" starttime="20220731 01:20:06.622" endtime="20220731 01:20:42.479"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220731 01:20:42.481" level="INFO">2022-07-31 01:20:08 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.20.0.4:8032
2022-07-31 01:20:08 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2022-07-31 01:20:08 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2022-07-31 01:20:08 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2022-07-31 01:20:08 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2022-07-31 01:20:09 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-07-31 01:20:09 INFO  FileInputFormat:292 - Total input files to process : 3
2022-07-31 01:20:10 INFO  JobSubmitter:202 - number of splits:3
2022-07-31 01:20:10 INFO  JobSubmitter:298 - Submitting tokens for job: job_1659230173773_0004
2022-07-31 01:20:10 INFO  JobSubmitter:299 - Executing with tokens: []
2022-07-31 01:20:10 INFO  Configuration:2795 - resource-types.xml not found
2022-07-31 01:20:10 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2022-07-31 01:20:10 INFO  YarnClientImpl:329 - Submitted application application_1659230173773_0004
2022-07-31 01:20:10 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1659230173773_0004/
2022-07-31 01:20:10 INFO  Job:1614 - Running job: job_1659230173773_0004
2022-07-31 01:20:18 INFO  Job:1635 - Job job_1659230173773_0004 running in uber mode : false
2022-07-31 01:20:18 INFO  Job:1642 -  map 0% reduce 0%
2022-07-31 01:20:25 INFO  Job:1642 -  map 33% reduce 0%
2022-07-31 01:20:30 INFO  Job:1642 -  map 67% reduce 0%
2022-07-31 01:20:35 INFO  Job:1642 -  map 100% reduce 0%
2022-07-31 01:20:41 INFO  Job:1642 -  map 100% reduce 100%
2022-07-31 01:20:42 INFO  Job:1653 - Job job_1659230173773_0004 completed successfully
2022-07-31 01:20:42 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32289
		FILE: Number of bytes written=1006035
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39993
		OFS: Number of bytes written=22443
		OFS: Number of read operations=14
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=41160
		Total time spent by all reduces in occupied slots (ms)=15200
		Total time spent by all map tasks (ms)=10290
		Total time spent by all reduce tasks (ms)=3800
		Total vcore-milliseconds taken by all map tasks=10290
		Total vcore-milliseconds taken by all reduce tasks=3800
		Total megabyte-milliseconds taken by all map tasks=42147840
		Total megabyte-milliseconds taken by all reduce tasks=15564800
	Map-Reduce Framework
		Map input records=1064
		Map output records=4522
		Map output bytes=55364
		Map output materialized bytes=32301
		Input split bytes=300
		Combine input records=4522
		Combine output records=1810
		Reduce input groups=1546
		Reduce shuffle bytes=32301
		Reduce input records=1810
		Reduce output records=1546
		Spilled Records=3620
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=582
		CPU time spent (ms)=7880
		Physical memory (bytes) snapshot=1569181696
		Virtual memory (bytes) snapshot=15836188672
		Total committed heap usage (bytes)=1463287808
		Peak Map Physical memory (bytes)=404836352
		Peak Map Virtual memory (bytes)=3957952512
		Peak Reduce Physical memory (bytes)=366563328
		Peak Reduce Virtual memory (bytes)=3977228288
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39693
	File Output Format Counters 
		Bytes Written=22443</msg>
<status status="PASS" starttime="20220731 01:20:42.480" endtime="20220731 01:20:42.481"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220731 01:20:42.481" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220731 01:20:42.481" endtime="20220731 01:20:42.481"/>
</kw>
<status status="PASS" starttime="20220731 01:20:06.622" endtime="20220731 01:20:42.482"/>
</kw>
<msg timestamp="20220731 01:20:42.482" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220731 01:20:06.622" endtime="20220731 01:20:42.482"/>
</kw>
<msg timestamp="20220731 01:20:42.482" level="INFO">${output} = 2022-07-31 01:20:08 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.20.0.4:8032
2022-07-31 01:20:08 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" starttime="20220731 01:20:06.621" endtime="20220731 01:20:42.482"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>map tasks=3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220731 01:20:42.483" endtime="20220731 01:20:42.483"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220731 01:20:42.483" endtime="20220731 01:20:42.483"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20220731 01:20:06.587" endtime="20220731 01:20:42.484"/>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" starttime="20220731 01:19:32.230" endtime="20220731 01:20:42.485"/>
</suite>
<suite id="s1-s3-s5" name="Createmrenv" source="/opt/hadoop/smoketest/createmrenv.robot">
<test id="s1-s3-s5-t1" name="Create test volume, bucket and key" line="38">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220731 01:16:55.664" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20220731 01:17:01.765" level="INFO">${rc} = 255</msg>
<msg timestamp="20220731 01:17:01.765" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20220731 01:16:55.659" endtime="20220731 01:17:01.765"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220731 01:17:01.766" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20220731 01:17:01.766" endtime="20220731 01:17:01.767"/>
</kw>
<msg timestamp="20220731 01:17:01.767" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20220731 01:16:55.659" endtime="20220731 01:17:01.767"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create volume">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220731 01:17:01.771" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20220731 01:17:05.301" level="INFO">${rc} = 0</msg>
<msg timestamp="20220731 01:17:05.301" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220731 01:17:01.769" endtime="20220731 01:17:05.301"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220731 01:17:05.302" level="INFO"/>
<status status="PASS" starttime="20220731 01:17:05.302" endtime="20220731 01:17:05.303"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220731 01:17:05.303" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220731 01:17:05.303" endtime="20220731 01:17:05.303"/>
</kw>
<status status="PASS" starttime="20220731 01:17:01.769" endtime="20220731 01:17:05.303"/>
</kw>
<msg timestamp="20220731 01:17:05.304" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220731 01:17:01.768" endtime="20220731 01:17:05.305"/>
</kw>
<msg timestamp="20220731 01:17:05.305" level="INFO">${result} = </msg>
<status status="PASS" starttime="20220731 01:17:01.768" endtime="20220731 01:17:05.305"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220731 01:17:05.305" endtime="20220731 01:17:05.305"/>
</kw>
<status status="PASS" starttime="20220731 01:17:01.768" endtime="20220731 01:17:05.305"/>
</kw>
<status status="PASS" starttime="20220731 01:17:01.767" endtime="20220731 01:17:05.305"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume}/${bucket} --layout FILE_SYSTEM_OPTIMIZED</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220731 01:17:05.309" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 --layout FILE_SYSTEM_OPTIMIZED 2&gt;&amp;1'.</msg>
<msg timestamp="20220731 01:17:09.007" level="INFO">${rc} = 0</msg>
<msg timestamp="20220731 01:17:09.007" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220731 01:17:05.307" endtime="20220731 01:17:09.008"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220731 01:17:09.009" level="INFO"/>
<status status="PASS" starttime="20220731 01:17:09.008" endtime="20220731 01:17:09.009"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220731 01:17:09.009" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220731 01:17:09.009" endtime="20220731 01:17:09.009"/>
</kw>
<status status="PASS" starttime="20220731 01:17:05.307" endtime="20220731 01:17:09.010"/>
</kw>
<msg timestamp="20220731 01:17:09.010" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220731 01:17:05.307" endtime="20220731 01:17:09.010"/>
</kw>
<status status="PASS" starttime="20220731 01:17:05.306" endtime="20220731 01:17:09.010"/>
</kw>
<status status="PASS" starttime="20220731 01:17:05.306" endtime="20220731 01:17:09.011"/>
</kw>
<status status="PASS" starttime="20220731 01:17:05.306" endtime="20220731 01:17:09.011"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220731 01:17:09.011" endtime="20220731 01:17:09.011"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220731 01:17:09.015" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20220731 01:17:12.745" level="INFO">${rc} = 0</msg>
<msg timestamp="20220731 01:17:12.745" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-07-31T01:17...</msg>
<status status="PASS" starttime="20220731 01:17:09.013" endtime="20220731 01:17:12.745"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220731 01:17:12.747" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-07-31T01:17:08.729Z",
  "modificationTime" : "2022-07-31T01:17:08.729Z",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "FILE_SYSTEM_OPTIMIZED",
  "owner" : "hadoop",
  "link" : false
}</msg>
<status status="PASS" starttime="20220731 01:17:12.746" endtime="20220731 01:17:12.747"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220731 01:17:12.747" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220731 01:17:12.747" endtime="20220731 01:17:12.747"/>
</kw>
<status status="PASS" starttime="20220731 01:17:09.012" endtime="20220731 01:17:12.748"/>
</kw>
<msg timestamp="20220731 01:17:12.748" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220731 01:17:09.012" endtime="20220731 01:17:12.748"/>
</kw>
<msg timestamp="20220731 01:17:12.748" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-07-31T01:17...</msg>
<status status="PASS" starttime="20220731 01:17:09.011" endtime="20220731 01:17:12.748"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220731 01:17:12.748" endtime="20220731 01:17:12.749"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220731 01:17:12.753" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220731 01:17:12.752" endtime="20220731 01:17:12.753"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220731 01:17:12.753" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220731 01:17:12.753" endtime="20220731 01:17:12.753"/>
</kw>
<status status="PASS" starttime="20220731 01:17:12.752" endtime="20220731 01:17:12.754"/>
</kw>
<msg timestamp="20220731 01:17:12.754" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220731 01:17:12.751" endtime="20220731 01:17:12.754"/>
</kw>
<status status="PASS" starttime="20220731 01:17:12.750" endtime="20220731 01:17:12.754"/>
</kw>
<msg timestamp="20220731 01:17:12.754" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" starttime="20220731 01:17:12.750" endtime="20220731 01:17:12.754"/>
</kw>
<msg timestamp="20220731 01:17:12.754" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" starttime="20220731 01:17:12.749" endtime="20220731 01:17:12.754"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220731 01:17:12.758" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20220731 01:17:16.395" level="INFO">${rc} = 0</msg>
<msg timestamp="20220731 01:17:16.395" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220731 01:17:12.756" endtime="20220731 01:17:16.395"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220731 01:17:16.396" level="INFO"/>
<status status="PASS" starttime="20220731 01:17:16.395" endtime="20220731 01:17:16.396"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220731 01:17:16.397" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220731 01:17:16.396" endtime="20220731 01:17:16.397"/>
</kw>
<status status="PASS" starttime="20220731 01:17:12.755" endtime="20220731 01:17:16.397"/>
</kw>
<msg timestamp="20220731 01:17:16.397" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220731 01:17:12.755" endtime="20220731 01:17:16.398"/>
</kw>
<status status="PASS" starttime="20220731 01:17:12.755" endtime="20220731 01:17:16.398"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220731 01:17:16.402" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220731 01:17:23.047" level="INFO">${rc} = 0</msg>
<msg timestamp="20220731 01:17:23.047" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220731 01:17:16.399" endtime="20220731 01:17:23.047"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220731 01:17:23.048" level="INFO"/>
<status status="PASS" starttime="20220731 01:17:23.048" endtime="20220731 01:17:23.048"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220731 01:17:23.049" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220731 01:17:23.048" endtime="20220731 01:17:23.049"/>
</kw>
<status status="PASS" starttime="20220731 01:17:16.399" endtime="20220731 01:17:23.049"/>
</kw>
<msg timestamp="20220731 01:17:23.049" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220731 01:17:16.399" endtime="20220731 01:17:23.050"/>
</kw>
<status status="PASS" starttime="20220731 01:17:16.398" endtime="20220731 01:17:23.050"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220731 01:17:23.054" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220731 01:17:28.706" level="INFO">${rc} = 0</msg>
<msg timestamp="20220731 01:17:28.706" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220731 01:17:23.051" endtime="20220731 01:17:28.706"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220731 01:17:28.707" level="INFO"/>
<status status="PASS" starttime="20220731 01:17:28.706" endtime="20220731 01:17:28.707"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220731 01:17:28.707" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220731 01:17:28.707" endtime="20220731 01:17:28.708"/>
</kw>
<status status="PASS" starttime="20220731 01:17:23.051" endtime="20220731 01:17:28.708"/>
</kw>
<msg timestamp="20220731 01:17:28.708" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220731 01:17:23.051" endtime="20220731 01:17:28.708"/>
</kw>
<status status="PASS" starttime="20220731 01:17:23.050" endtime="20220731 01:17:28.708"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220731 01:17:28.712" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20220731 01:17:34.135" level="INFO">${rc} = 0</msg>
<msg timestamp="20220731 01:17:34.135" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220731 01:17:28.710" endtime="20220731 01:17:34.135"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220731 01:17:34.137" level="INFO"/>
<status status="PASS" starttime="20220731 01:17:34.136" endtime="20220731 01:17:34.137"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220731 01:17:34.138" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220731 01:17:34.137" endtime="20220731 01:17:34.138"/>
</kw>
<status status="PASS" starttime="20220731 01:17:28.709" endtime="20220731 01:17:34.138"/>
</kw>
<msg timestamp="20220731 01:17:34.138" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220731 01:17:28.709" endtime="20220731 01:17:34.138"/>
</kw>
<status status="PASS" starttime="20220731 01:17:28.709" endtime="20220731 01:17:34.139"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220731 01:16:55.657" endtime="20220731 01:17:34.139"/>
</test>
<test id="s1-s3-s5-t2" name="Create user dir for hadoop" line="51">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220731 01:17:34.144" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220731 01:17:34.144" endtime="20220731 01:17:34.144"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220731 01:17:34.145" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220731 01:17:34.144" endtime="20220731 01:17:34.145"/>
</kw>
<status status="PASS" starttime="20220731 01:17:34.143" endtime="20220731 01:17:34.145"/>
</kw>
<msg timestamp="20220731 01:17:34.145" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220731 01:17:34.142" endtime="20220731 01:17:34.145"/>
</kw>
<status status="PASS" starttime="20220731 01:17:34.141" endtime="20220731 01:17:34.146"/>
</kw>
<msg timestamp="20220731 01:17:34.146" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20220731 01:17:34.141" endtime="20220731 01:17:34.146"/>
</kw>
<msg timestamp="20220731 01:17:34.146" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20220731 01:17:34.140" endtime="20220731 01:17:34.146"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220731 01:17:34.149" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20220731 01:17:37.281" level="INFO">${rc} = 0</msg>
<msg timestamp="20220731 01:17:37.281" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220731 01:17:34.147" endtime="20220731 01:17:37.281"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220731 01:17:37.282" level="INFO"/>
<status status="PASS" starttime="20220731 01:17:37.281" endtime="20220731 01:17:37.282"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220731 01:17:37.283" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220731 01:17:37.283" endtime="20220731 01:17:37.283"/>
</kw>
<status status="PASS" starttime="20220731 01:17:34.147" endtime="20220731 01:17:37.284"/>
</kw>
<msg timestamp="20220731 01:17:37.284" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220731 01:17:34.146" endtime="20220731 01:17:37.284"/>
</kw>
<status status="PASS" starttime="20220731 01:17:34.146" endtime="20220731 01:17:37.284"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220731 01:17:37.288" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20220731 01:17:40.679" level="INFO">${rc} = 0</msg>
<msg timestamp="20220731 01:17:40.679" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220731 01:17:37.286" endtime="20220731 01:17:40.679"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220731 01:17:40.680" level="INFO"/>
<status status="PASS" starttime="20220731 01:17:40.680" endtime="20220731 01:17:40.680"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220731 01:17:40.681" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220731 01:17:40.681" endtime="20220731 01:17:40.681"/>
</kw>
<status status="PASS" starttime="20220731 01:17:37.285" endtime="20220731 01:17:40.682"/>
</kw>
<msg timestamp="20220731 01:17:40.682" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220731 01:17:37.285" endtime="20220731 01:17:40.682"/>
</kw>
<status status="PASS" starttime="20220731 01:17:37.284" endtime="20220731 01:17:40.682"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220731 01:17:34.140" endtime="20220731 01:17:40.682"/>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" starttime="20220731 01:16:55.607" endtime="20220731 01:17:40.684"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="207057"/>
</suite>
<suite id="s1-s4" name="hadoop33">
<suite id="s1-s4-s1" name="hadoopfs-o3fs" source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot">
<test id="s1-s4-s1-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220731 01:23:31.130" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220731 01:23:31.130" endtime="20220731 01:23:31.130"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220731 01:23:31.131" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220731 01:23:31.131" endtime="20220731 01:23:31.131"/>
</kw>
<status status="PASS" starttime="20220731 01:23:31.130" endtime="20220731 01:23:31.131"/>
</kw>
<msg timestamp="20220731 01:23:31.131" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220731 01:23:31.129" endtime="20220731 01:23:31.131"/>
</kw>
<status status="PASS" starttime="20220731 01:23:31.129" endtime="20220731 01:23:31.131"/>
</kw>
<msg timestamp="20220731 01:23:31.132" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20220731 01:23:31.128" endtime="20220731 01:23:31.132"/>
</kw>
<msg timestamp="20220731 01:23:31.132" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20220731 01:23:31.128" endtime="20220731 01:23:31.132"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220731 01:23:31.132" level="INFO">${random} = 32677</msg>
<status status="PASS" starttime="20220731 01:23:31.132" endtime="20220731 01:23:31.132"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220731 01:23:31.137" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-32677 2&gt;&amp;1'.</msg>
<msg timestamp="20220731 01:23:36.325" level="INFO">${rc} = 0</msg>
<msg timestamp="20220731 01:23:36.325" level="INFO">${output} = 2022-07-31 01:23:33 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2022-07-31 01:23:33 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2022...</msg>
<status status="PASS" starttime="20220731 01:23:31.133" endtime="20220731 01:23:36.325"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220731 01:23:36.328" level="INFO">2022-07-31 01:23:33 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2022-07-31 01:23:33 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2022-07-31 01:23:33 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2022-07-31 01:23:33 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20220731 01:23:36.326" endtime="20220731 01:23:36.328"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220731 01:23:36.330" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220731 01:23:36.329" endtime="20220731 01:23:36.330"/>
</kw>
<status status="PASS" starttime="20220731 01:23:31.133" endtime="20220731 01:23:36.331"/>
</kw>
<msg timestamp="20220731 01:23:36.331" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220731 01:23:31.133" endtime="20220731 01:23:36.331"/>
</kw>
<msg timestamp="20220731 01:23:36.332" level="INFO">${result} = 2022-07-31 01:23:33 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2022-07-31 01:23:33 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2022...</msg>
<status status="PASS" starttime="20220731 01:23:31.132" endtime="20220731 01:23:36.332"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>multiple SLF4J bindings</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220731 01:23:36.332" endtime="20220731 01:23:36.333"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -ls ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220731 01:23:36.341" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20220731 01:23:38.196" level="INFO">${rc} = 0</msg>
<msg timestamp="20220731 01:23:38.196" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2022-07-31 01:22 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop       1541 2022-07-31 01:23 o3fs://bucket1.volume1.om/ozone-32677
dr...</msg>
<status status="PASS" starttime="20220731 01:23:36.337" endtime="20220731 01:23:38.196"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220731 01:23:38.197" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2022-07-31 01:22 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop       1541 2022-07-31 01:23 o3fs://bucket1.volume1.om/ozone-32677
drwxrwxrwx   - hadoop hadoop          0 2022-07-31 01:23 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20220731 01:23:38.197" endtime="20220731 01:23:38.197"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220731 01:23:38.198" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220731 01:23:38.198" endtime="20220731 01:23:38.198"/>
</kw>
<status status="PASS" starttime="20220731 01:23:36.336" endtime="20220731 01:23:38.198"/>
</kw>
<msg timestamp="20220731 01:23:38.198" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220731 01:23:36.335" endtime="20220731 01:23:38.198"/>
</kw>
<msg timestamp="20220731 01:23:38.199" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2022-07-31 01:22 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop       1541 2022-07-31 01:23 o3fs://bucket1.volume1.om/ozone-32677
dr...</msg>
<status status="PASS" starttime="20220731 01:23:36.334" endtime="20220731 01:23:38.199"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220731 01:23:38.199" endtime="20220731 01:23:38.199"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -cat ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220731 01:23:38.202" level="INFO">Running command 'hdfs dfs -cat o3fs://bucket1.volume1.om//ozone-32677 2&gt;&amp;1'.</msg>
<msg timestamp="20220731 01:23:41.371" level="INFO">${rc} = 0</msg>
<msg timestamp="20220731 01:23:41.371" level="INFO">${output} = 2022-07-31 01:23:40 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2022-07-31 01:23:40 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2022...</msg>
<status status="PASS" starttime="20220731 01:23:38.200" endtime="20220731 01:23:41.371"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220731 01:23:41.372" level="INFO">2022-07-31 01:23:40 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2022-07-31 01:23:40 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2022-07-31 01:23:40 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
Apache Hadoop
Copyright 2006 and onwards The Apache Software Foundation.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).

Export Control Notice
---------------------

This distribution includes cryptographic software.  The country in
which you currently reside may have restrictions on the import,
possession, use, and/or re-export to another country, of
encryption software.  BEFORE using any encryption software, please
check your country's laws, regulations and policies concerning the
import, possession, or use, and re-export of encryption software, to
see if this is permitted.  See &lt;http://www.wassenaar.org/&gt; for more
information.

The U.S. Government Department of Commerce, Bureau of Industry and
Security (BIS), has classified this software as Export Commodity
Control Number (ECCN) 5D002.C.1, which includes information security
software using or performing cryptographic functions with asymmetric
algorithms.  The form and manner of this Apache Software Foundation
distribution makes it eligible for export under the License Exception
ENC Technology Software Unrestricted (TSU) exception (see the BIS
Export Administration Regulations, Section 740.13) for both object
code and source code.

The following provides more details on the included cryptographic software:

This software uses the SSL libraries from the Jetty project written
by mortbay.org.
Hadoop Yarn Server Web Proxy uses the BouncyCastle Java
cryptography APIs written by the Legion of the Bouncy Castle Inc.</msg>
<status status="PASS" starttime="20220731 01:23:41.371" endtime="20220731 01:23:41.372"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220731 01:23:41.372" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220731 01:23:41.372" endtime="20220731 01:23:41.372"/>
</kw>
<status status="PASS" starttime="20220731 01:23:38.200" endtime="20220731 01:23:41.373"/>
</kw>
<msg timestamp="20220731 01:23:41.373" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220731 01:23:38.200" endtime="20220731 01:23:41.373"/>
</kw>
<msg timestamp="20220731 01:23:41.373" level="INFO">${result} = 2022-07-31 01:23:40 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2022-07-31 01:23:40 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2022...</msg>
<status status="PASS" starttime="20220731 01:23:38.199" endtime="20220731 01:23:41.373"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>This product includes software developed</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220731 01:23:41.373" endtime="20220731 01:23:41.374"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220731 01:23:31.127" endtime="20220731 01:23:41.374"/>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" starttime="20220731 01:23:31.086" endtime="20220731 01:23:41.374"/>
</suite>
<suite id="s1-s4-s2" name="mapreduce-o3fs" source="/opt/ozone/smoketest/mapreduce.robot">
<test id="s1-s4-s2-t1" name="Execute PI calculation">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220731 01:23:46.409" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20220731 01:23:46.415" level="INFO">${rc} = 0</msg>
<msg timestamp="20220731 01:23:46.415" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20220731 01:23:46.405" endtime="20220731 01:23:46.415"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220731 01:23:46.416" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20220731 01:23:46.415" endtime="20220731 01:23:46.416"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220731 01:23:46.416" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220731 01:23:46.416" endtime="20220731 01:23:46.417"/>
</kw>
<status status="PASS" starttime="20220731 01:23:46.405" endtime="20220731 01:23:46.417"/>
</kw>
<msg timestamp="20220731 01:23:46.417" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220731 01:23:46.405" endtime="20220731 01:23:46.417"/>
</kw>
<msg timestamp="20220731 01:23:46.417" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20220731 01:23:46.404" endtime="20220731 01:23:46.418"/>
</kw>
<msg timestamp="20220731 01:23:46.418" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20220731 01:23:46.404" endtime="20220731 01:23:46.418"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220731 01:23:46.422" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220731 01:23:46.421" endtime="20220731 01:23:46.422"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220731 01:23:46.422" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220731 01:23:46.422" endtime="20220731 01:23:46.422"/>
</kw>
<status status="PASS" starttime="20220731 01:23:46.421" endtime="20220731 01:23:46.423"/>
</kw>
<msg timestamp="20220731 01:23:46.423" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220731 01:23:46.421" endtime="20220731 01:23:46.423"/>
</kw>
<status status="PASS" starttime="20220731 01:23:46.420" endtime="20220731 01:23:46.423"/>
</kw>
<msg timestamp="20220731 01:23:46.423" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20220731 01:23:46.419" endtime="20220731 01:23:46.423"/>
</kw>
<msg timestamp="20220731 01:23:46.423" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20220731 01:23:46.419" endtime="20220731 01:23:46.423"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220731 01:23:46.426" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20220731 01:24:30.058" level="INFO">${rc} = 0</msg>
<msg timestamp="20220731 01:24:30.058" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2022-07-31 01:23:48 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2022-07-31 01:23:48 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" starttime="20220731 01:23:46.425" endtime="20220731 01:24:30.059"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220731 01:24:30.060" level="INFO">Number of Maps  = 3
Samples per Map = 3
2022-07-31 01:23:48 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2022-07-31 01:23:48 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2022-07-31 01:23:48 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2022-07-31 01:23:48 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2022-07-31 01:23:50 INFO  DefaultNoHARMFailoverProxyProvider:64 - Connecting to ResourceManager at rm/172.21.0.4:8032
2022-07-31 01:23:50 INFO  FileInputFormat:300 - Total input files to process : 3
2022-07-31 01:23:50 INFO  JobSubmitter:202 - number of splits:3
2022-07-31 01:23:51 INFO  JobSubmitter:298 - Submitting tokens for job: job_1659230505152_0001
2022-07-31 01:23:51 INFO  JobSubmitter:299 - Executing with tokens: []
2022-07-31 01:23:51 INFO  Configuration:2824 - resource-types.xml not found
2022-07-31 01:23:51 INFO  ResourceUtils:476 - Unable to find 'resource-types.xml'.
2022-07-31 01:23:51 INFO  YarnClientImpl:338 - Submitted application application_1659230505152_0001
2022-07-31 01:23:51 INFO  Job:1575 - The url to track the job: http://rm:8088/proxy/application_1659230505152_0001/
2022-07-31 01:23:51 INFO  Job:1620 - Running job: job_1659230505152_0001
2022-07-31 01:24:03 INFO  Job:1641 - Job job_1659230505152_0001 running in uber mode : false
2022-07-31 01:24:03 INFO  Job:1648 -  map 0% reduce 0%
2022-07-31 01:24:10 INFO  Job:1648 -  map 33% reduce 0%
2022-07-31 01:24:15 INFO  Job:1648 -  map 67% reduce 0%
2022-07-31 01:24:21 INFO  Job:1648 -  map 100% reduce 0%
2022-07-31 01:24:28 INFO  Job:1648 -  map 100% reduce 100%
2022-07-31 01:24:29 INFO  Job:1659 - Job job_1659230505152_0001 completed successfully
2022-07-31 01:24:29 INFO  Job:1666 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1094993
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=17
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=43556
		Total time spent by all reduces in occupied slots (ms)=27304
		Total time spent by all map tasks (ms)=10889
		Total time spent by all reduce tasks (ms)=6826
		Total vcore-milliseconds taken by all map tasks=10889
		Total vcore-milliseconds taken by all reduce tasks=6826
		Total megabyte-milliseconds taken by all map tasks=44601344
		Total megabyte-milliseconds taken by all reduce tasks=27959296
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=616
		CPU time spent (ms)=7900
		Physical memory (bytes) snapshot=1683189760
		Virtual memory (bytes) snapshot=15826960384
		Total committed heap usage (bytes)=1520959488
		Peak Map Physical memory (bytes)=444735488
		Peak Map Virtual memory (bytes)=3957551104
		Peak Reduce Physical memory (bytes)=390696960
		Peak Reduce Virtual memory (bytes)=3980255232
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 39.468 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" starttime="20220731 01:24:30.059" endtime="20220731 01:24:30.060"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220731 01:24:30.060" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220731 01:24:30.060" endtime="20220731 01:24:30.061"/>
</kw>
<status status="PASS" starttime="20220731 01:23:46.424" endtime="20220731 01:24:30.061"/>
</kw>
<msg timestamp="20220731 01:24:30.061" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220731 01:23:46.424" endtime="20220731 01:24:30.061"/>
</kw>
<msg timestamp="20220731 01:24:30.061" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2022-07-31 01:23:48 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2022-07-31 01:23:48 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" starttime="20220731 01:23:46.423" endtime="20220731 01:24:30.061"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220731 01:24:30.062" endtime="20220731 01:24:30.062"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>multiple SLF4J bindings</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220731 01:24:30.062" endtime="20220731 01:24:30.062"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20220731 01:23:46.403" endtime="20220731 01:24:30.063"/>
</test>
<test id="s1-s4-s2-t2" name="Execute WordCount">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220731 01:24:30.068" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20220731 01:24:30.073" level="INFO">${rc} = 0</msg>
<msg timestamp="20220731 01:24:30.073" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20220731 01:24:30.066" endtime="20220731 01:24:30.074"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220731 01:24:30.074" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20220731 01:24:30.074" endtime="20220731 01:24:30.074"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220731 01:24:30.075" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220731 01:24:30.075" endtime="20220731 01:24:30.075"/>
</kw>
<status status="PASS" starttime="20220731 01:24:30.066" endtime="20220731 01:24:30.075"/>
</kw>
<msg timestamp="20220731 01:24:30.075" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220731 01:24:30.065" endtime="20220731 01:24:30.075"/>
</kw>
<msg timestamp="20220731 01:24:30.076" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20220731 01:24:30.065" endtime="20220731 01:24:30.076"/>
</kw>
<msg timestamp="20220731 01:24:30.076" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20220731 01:24:30.064" endtime="20220731 01:24:30.076"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220731 01:24:30.076" level="INFO">${random} = UWY9RS90</msg>
<status status="PASS" starttime="20220731 01:24:30.076" endtime="20220731 01:24:30.076"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220731 01:24:30.080" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220731 01:24:30.079" endtime="20220731 01:24:30.080"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220731 01:24:30.080" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220731 01:24:30.080" endtime="20220731 01:24:30.080"/>
</kw>
<status status="PASS" starttime="20220731 01:24:30.079" endtime="20220731 01:24:30.080"/>
</kw>
<msg timestamp="20220731 01:24:30.081" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220731 01:24:30.078" endtime="20220731 01:24:30.081"/>
</kw>
<status status="PASS" starttime="20220731 01:24:30.078" endtime="20220731 01:24:30.081"/>
</kw>
<msg timestamp="20220731 01:24:30.081" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20220731 01:24:30.077" endtime="20220731 01:24:30.081"/>
</kw>
<msg timestamp="20220731 01:24:30.081" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20220731 01:24:30.077" endtime="20220731 01:24:30.081"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220731 01:24:30.084" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220731 01:24:30.084" endtime="20220731 01:24:30.084"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220731 01:24:30.085" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220731 01:24:30.084" endtime="20220731 01:24:30.085"/>
</kw>
<status status="PASS" starttime="20220731 01:24:30.083" endtime="20220731 01:24:30.085"/>
</kw>
<msg timestamp="20220731 01:24:30.085" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220731 01:24:30.083" endtime="20220731 01:24:30.085"/>
</kw>
<status status="PASS" starttime="20220731 01:24:30.082" endtime="20220731 01:24:30.085"/>
</kw>
<msg timestamp="20220731 01:24:30.085" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" starttime="20220731 01:24:30.082" endtime="20220731 01:24:30.085"/>
</kw>
<msg timestamp="20220731 01:24:30.085" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" starttime="20220731 01:24:30.081" endtime="20220731 01:24:30.085"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${result}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220731 01:24:30.088" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220731 01:24:30.088" endtime="20220731 01:24:30.088"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220731 01:24:30.089" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220731 01:24:30.088" endtime="20220731 01:24:30.089"/>
</kw>
<status status="PASS" starttime="20220731 01:24:30.088" endtime="20220731 01:24:30.089"/>
</kw>
<msg timestamp="20220731 01:24:30.089" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220731 01:24:30.087" endtime="20220731 01:24:30.089"/>
</kw>
<status status="PASS" starttime="20220731 01:24:30.087" endtime="20220731 01:24:30.089"/>
</kw>
<msg timestamp="20220731 01:24:30.090" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-UWY9RS90.txt</msg>
<status status="PASS" starttime="20220731 01:24:30.086" endtime="20220731 01:24:30.090"/>
</kw>
<msg timestamp="20220731 01:24:30.090" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-UWY9RS90.txt</msg>
<status status="PASS" starttime="20220731 01:24:30.086" endtime="20220731 01:24:30.090"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220731 01:24:30.094" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-UWY9RS90.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220731 01:25:06.825" level="INFO">${rc} = 0</msg>
<msg timestamp="20220731 01:25:06.825" level="INFO">${output} = 2022-07-31 01:24:32 INFO  DefaultNoHARMFailoverProxyProvider:64 - Connecting to ResourceManager at rm/172.21.0.4:8032
2022-07-31 01:24:32 INFO  JobSubmissionFiles:156 - Permissions on staging director...</msg>
<status status="PASS" starttime="20220731 01:24:30.091" endtime="20220731 01:25:06.825"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220731 01:25:06.827" level="INFO">2022-07-31 01:24:32 INFO  DefaultNoHARMFailoverProxyProvider:64 - Connecting to ResourceManager at rm/172.21.0.4:8032
2022-07-31 01:24:32 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2022-07-31 01:24:32 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2022-07-31 01:24:32 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2022-07-31 01:24:32 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2022-07-31 01:24:33 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-07-31 01:24:33 INFO  FileInputFormat:300 - Total input files to process : 3
2022-07-31 01:24:34 INFO  JobSubmitter:202 - number of splits:3
2022-07-31 01:24:34 INFO  JobSubmitter:298 - Submitting tokens for job: job_1659230505152_0002
2022-07-31 01:24:34 INFO  JobSubmitter:299 - Executing with tokens: []
2022-07-31 01:24:34 INFO  Configuration:2824 - resource-types.xml not found
2022-07-31 01:24:34 INFO  ResourceUtils:476 - Unable to find 'resource-types.xml'.
2022-07-31 01:24:34 INFO  YarnClientImpl:338 - Submitted application application_1659230505152_0002
2022-07-31 01:24:34 INFO  Job:1575 - The url to track the job: http://rm:8088/proxy/application_1659230505152_0002/
2022-07-31 01:24:34 INFO  Job:1620 - Running job: job_1659230505152_0002
2022-07-31 01:24:43 INFO  Job:1641 - Job job_1659230505152_0002 running in uber mode : false
2022-07-31 01:24:43 INFO  Job:1648 -  map 0% reduce 0%
2022-07-31 01:24:50 INFO  Job:1648 -  map 33% reduce 0%
2022-07-31 01:24:56 INFO  Job:1648 -  map 67% reduce 0%
2022-07-31 01:25:01 INFO  Job:1648 -  map 100% reduce 0%
2022-07-31 01:25:06 INFO  Job:1648 -  map 100% reduce 100%
2022-07-31 01:25:06 INFO  Job:1659 - Job job_1659230505152_0002 completed successfully
2022-07-31 01:25:06 INFO  Job:1666 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32289
		FILE: Number of bytes written=1158063
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39996
		O3FS: Number of bytes written=22443
		O3FS: Number of read operations=14
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=45468
		Total time spent by all reduces in occupied slots (ms)=15240
		Total time spent by all map tasks (ms)=11367
		Total time spent by all reduce tasks (ms)=3810
		Total vcore-milliseconds taken by all map tasks=11367
		Total vcore-milliseconds taken by all reduce tasks=3810
		Total megabyte-milliseconds taken by all map tasks=46559232
		Total megabyte-milliseconds taken by all reduce tasks=15605760
	Map-Reduce Framework
		Map input records=1064
		Map output records=4522
		Map output bytes=55364
		Map output materialized bytes=32301
		Input split bytes=303
		Combine input records=4522
		Combine output records=1810
		Reduce input groups=1546
		Reduce shuffle bytes=32301
		Reduce input records=1810
		Reduce output records=1546
		Spilled Records=3620
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=565
		CPU time spent (ms)=7360
		Physical memory (bytes) snapshot=1641553920
		Virtual memory (bytes) snapshot=15812702208
		Total committed heap usage (bytes)=1497366528
		Peak Map Physical memory (bytes)=443572224
		Peak Map Virtual memory (bytes)=3953475584
		Peak Reduce Physical memory (bytes)=362913792
		Peak Reduce Virtual memory (bytes)=3968425984
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39693
	File Output Format Counters 
		Bytes Written=22443</msg>
<status status="PASS" starttime="20220731 01:25:06.826" endtime="20220731 01:25:06.827"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220731 01:25:06.828" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220731 01:25:06.827" endtime="20220731 01:25:06.828"/>
</kw>
<status status="PASS" starttime="20220731 01:24:30.091" endtime="20220731 01:25:06.828"/>
</kw>
<msg timestamp="20220731 01:25:06.828" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220731 01:24:30.091" endtime="20220731 01:25:06.828"/>
</kw>
<msg timestamp="20220731 01:25:06.829" level="INFO">${output} = 2022-07-31 01:24:32 INFO  DefaultNoHARMFailoverProxyProvider:64 - Connecting to ResourceManager at rm/172.21.0.4:8032
2022-07-31 01:24:32 INFO  JobSubmissionFiles:156 - Permissions on staging director...</msg>
<status status="PASS" starttime="20220731 01:24:30.090" endtime="20220731 01:25:06.829"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>map tasks=3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220731 01:25:06.829" endtime="20220731 01:25:06.829"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220731 01:25:06.829" endtime="20220731 01:25:06.829"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20220731 01:24:30.064" endtime="20220731 01:25:06.830"/>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" starttime="20220731 01:23:46.357" endtime="20220731 01:25:06.831"/>
</suite>
<suite id="s1-s4-s3" name="hadoopfs-ofs" source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot">
<test id="s1-s4-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220731 01:25:13.101" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20220731 01:25:13.100" endtime="20220731 01:25:13.101"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220731 01:25:13.102" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20220731 01:25:13.101" endtime="20220731 01:25:13.103"/>
</kw>
<status status="PASS" starttime="20220731 01:25:13.099" endtime="20220731 01:25:13.103"/>
</kw>
<msg timestamp="20220731 01:25:13.103" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20220731 01:25:13.097" endtime="20220731 01:25:13.103"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20220731 01:25:13.105" endtime="20220731 01:25:13.106"/>
</kw>
<msg timestamp="20220731 01:25:13.106" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20220731 01:25:13.104" endtime="20220731 01:25:13.106"/>
</kw>
<status status="PASS" starttime="20220731 01:25:13.096" endtime="20220731 01:25:13.107"/>
</kw>
<msg timestamp="20220731 01:25:13.107" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20220731 01:25:13.094" endtime="20220731 01:25:13.107"/>
</kw>
<msg timestamp="20220731 01:25:13.108" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20220731 01:25:13.092" endtime="20220731 01:25:13.108"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220731 01:25:13.109" level="INFO">${random} = 92053</msg>
<status status="PASS" starttime="20220731 01:25:13.108" endtime="20220731 01:25:13.109"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220731 01:25:13.121" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-92053 2&gt;&amp;1'.</msg>
<msg timestamp="20220731 01:25:19.255" level="INFO">${rc} = 0</msg>
<msg timestamp="20220731 01:25:19.255" level="INFO">${output} = 2022-07-31 01:25:16 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2022-07-31 01:25:17 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2022...</msg>
<status status="PASS" starttime="20220731 01:25:13.113" endtime="20220731 01:25:19.255"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220731 01:25:19.257" level="INFO">2022-07-31 01:25:16 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2022-07-31 01:25:17 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2022-07-31 01:25:17 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2022-07-31 01:25:17 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20220731 01:25:19.256" endtime="20220731 01:25:19.257"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220731 01:25:19.257" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220731 01:25:19.257" endtime="20220731 01:25:19.257"/>
</kw>
<status status="PASS" starttime="20220731 01:25:13.112" endtime="20220731 01:25:19.258"/>
</kw>
<msg timestamp="20220731 01:25:19.258" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220731 01:25:13.111" endtime="20220731 01:25:19.258"/>
</kw>
<msg timestamp="20220731 01:25:19.258" level="INFO">${result} = 2022-07-31 01:25:16 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2022-07-31 01:25:17 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2022...</msg>
<status status="PASS" starttime="20220731 01:25:13.110" endtime="20220731 01:25:19.258"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>multiple SLF4J bindings</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220731 01:25:19.258" endtime="20220731 01:25:19.258"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -ls ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220731 01:25:19.262" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20220731 01:25:21.195" level="INFO">${rc} = 0</msg>
<msg timestamp="20220731 01:25:21.195" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2022-07-31 01:22 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop       1541 2022-07-31 01:23 ofs://om/volume1/bucket1/ozone-32677
-rw-...</msg>
<status status="PASS" starttime="20220731 01:25:19.260" endtime="20220731 01:25:21.195"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220731 01:25:21.196" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2022-07-31 01:22 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop       1541 2022-07-31 01:23 ofs://om/volume1/bucket1/ozone-32677
-rw-rw-rw-   3 hadoop hadoop       1541 2022-07-31 01:25 ofs://om/volume1/bucket1/ozone-92053
drwxrwxrwx   - hadoop hadoop          0 2022-07-31 01:23 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2022-07-31 01:24 ofs://om/volume1/bucket1/wordcount-UWY9RS90.txt</msg>
<status status="PASS" starttime="20220731 01:25:21.196" endtime="20220731 01:25:21.196"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220731 01:25:21.197" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220731 01:25:21.197" endtime="20220731 01:25:21.197"/>
</kw>
<status status="PASS" starttime="20220731 01:25:19.259" endtime="20220731 01:25:21.197"/>
</kw>
<msg timestamp="20220731 01:25:21.197" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220731 01:25:19.259" endtime="20220731 01:25:21.197"/>
</kw>
<msg timestamp="20220731 01:25:21.198" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2022-07-31 01:22 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop       1541 2022-07-31 01:23 ofs://om/volume1/bucket1/ozone-32677
-rw-...</msg>
<status status="PASS" starttime="20220731 01:25:19.259" endtime="20220731 01:25:21.198"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220731 01:25:21.198" endtime="20220731 01:25:21.198"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -cat ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220731 01:25:21.203" level="INFO">Running command 'hdfs dfs -cat ofs://om/volume1/bucket1/ozone-92053 2&gt;&amp;1'.</msg>
<msg timestamp="20220731 01:25:24.586" level="INFO">${rc} = 0</msg>
<msg timestamp="20220731 01:25:24.586" level="INFO">${output} = 2022-07-31 01:25:23 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2022-07-31 01:25:23 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2022...</msg>
<status status="PASS" starttime="20220731 01:25:21.199" endtime="20220731 01:25:24.586"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220731 01:25:24.587" level="INFO">2022-07-31 01:25:23 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2022-07-31 01:25:23 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2022-07-31 01:25:23 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
Apache Hadoop
Copyright 2006 and onwards The Apache Software Foundation.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).

Export Control Notice
---------------------

This distribution includes cryptographic software.  The country in
which you currently reside may have restrictions on the import,
possession, use, and/or re-export to another country, of
encryption software.  BEFORE using any encryption software, please
check your country's laws, regulations and policies concerning the
import, possession, or use, and re-export of encryption software, to
see if this is permitted.  See &lt;http://www.wassenaar.org/&gt; for more
information.

The U.S. Government Department of Commerce, Bureau of Industry and
Security (BIS), has classified this software as Export Commodity
Control Number (ECCN) 5D002.C.1, which includes information security
software using or performing cryptographic functions with asymmetric
algorithms.  The form and manner of this Apache Software Foundation
distribution makes it eligible for export under the License Exception
ENC Technology Software Unrestricted (TSU) exception (see the BIS
Export Administration Regulations, Section 740.13) for both object
code and source code.

The following provides more details on the included cryptographic software:

This software uses the SSL libraries from the Jetty project written
by mortbay.org.
Hadoop Yarn Server Web Proxy uses the BouncyCastle Java
cryptography APIs written by the Legion of the Bouncy Castle Inc.</msg>
<status status="PASS" starttime="20220731 01:25:24.587" endtime="20220731 01:25:24.588"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220731 01:25:24.588" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220731 01:25:24.588" endtime="20220731 01:25:24.588"/>
</kw>
<status status="PASS" starttime="20220731 01:25:21.199" endtime="20220731 01:25:24.588"/>
</kw>
<msg timestamp="20220731 01:25:24.588" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220731 01:25:21.199" endtime="20220731 01:25:24.589"/>
</kw>
<msg timestamp="20220731 01:25:24.589" level="INFO">${result} = 2022-07-31 01:25:23 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2022-07-31 01:25:23 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2022...</msg>
<status status="PASS" starttime="20220731 01:25:21.198" endtime="20220731 01:25:24.589"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>This product includes software developed</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220731 01:25:24.589" endtime="20220731 01:25:24.589"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220731 01:25:13.090" endtime="20220731 01:25:24.589"/>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" starttime="20220731 01:25:12.956" endtime="20220731 01:25:24.591"/>
</suite>
<suite id="s1-s4-s4" name="mapreduce-ofs" source="/opt/ozone/smoketest/mapreduce.robot">
<test id="s1-s4-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220731 01:25:29.856" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20220731 01:25:29.863" level="INFO">${rc} = 0</msg>
<msg timestamp="20220731 01:25:29.863" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20220731 01:25:29.853" endtime="20220731 01:25:29.863"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220731 01:25:29.864" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20220731 01:25:29.864" endtime="20220731 01:25:29.864"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220731 01:25:29.865" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220731 01:25:29.864" endtime="20220731 01:25:29.865"/>
</kw>
<status status="PASS" starttime="20220731 01:25:29.852" endtime="20220731 01:25:29.865"/>
</kw>
<msg timestamp="20220731 01:25:29.865" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220731 01:25:29.852" endtime="20220731 01:25:29.865"/>
</kw>
<msg timestamp="20220731 01:25:29.865" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20220731 01:25:29.851" endtime="20220731 01:25:29.866"/>
</kw>
<msg timestamp="20220731 01:25:29.867" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20220731 01:25:29.851" endtime="20220731 01:25:29.867"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220731 01:25:29.870" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20220731 01:25:29.870" endtime="20220731 01:25:29.870"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220731 01:25:29.870" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20220731 01:25:29.870" endtime="20220731 01:25:29.870"/>
</kw>
<status status="PASS" starttime="20220731 01:25:29.869" endtime="20220731 01:25:29.871"/>
</kw>
<msg timestamp="20220731 01:25:29.871" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20220731 01:25:29.869" endtime="20220731 01:25:29.871"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20220731 01:25:29.871" endtime="20220731 01:25:29.872"/>
</kw>
<msg timestamp="20220731 01:25:29.872" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20220731 01:25:29.871" endtime="20220731 01:25:29.872"/>
</kw>
<status status="PASS" starttime="20220731 01:25:29.868" endtime="20220731 01:25:29.872"/>
</kw>
<msg timestamp="20220731 01:25:29.872" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20220731 01:25:29.868" endtime="20220731 01:25:29.872"/>
</kw>
<msg timestamp="20220731 01:25:29.872" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20220731 01:25:29.867" endtime="20220731 01:25:29.872"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220731 01:25:29.876" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20220731 01:26:09.753" level="INFO">${rc} = 0</msg>
<msg timestamp="20220731 01:26:09.753" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2022-07-31 01:25:31 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2022-07-31 01:25:32 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" starttime="20220731 01:25:29.874" endtime="20220731 01:26:09.753"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220731 01:26:09.754" level="INFO">Number of Maps  = 3
Samples per Map = 3
2022-07-31 01:25:31 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2022-07-31 01:25:32 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2022-07-31 01:25:32 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2022-07-31 01:25:32 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2022-07-31 01:25:33 INFO  DefaultNoHARMFailoverProxyProvider:64 - Connecting to ResourceManager at rm/172.21.0.4:8032
2022-07-31 01:25:33 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2022-07-31 01:25:34 INFO  FileInputFormat:300 - Total input files to process : 3
2022-07-31 01:25:34 INFO  JobSubmitter:202 - number of splits:3
2022-07-31 01:25:34 INFO  JobSubmitter:298 - Submitting tokens for job: job_1659230505152_0003
2022-07-31 01:25:34 INFO  JobSubmitter:299 - Executing with tokens: []
2022-07-31 01:25:34 INFO  Configuration:2824 - resource-types.xml not found
2022-07-31 01:25:34 INFO  ResourceUtils:476 - Unable to find 'resource-types.xml'.
2022-07-31 01:25:34 INFO  YarnClientImpl:338 - Submitted application application_1659230505152_0003
2022-07-31 01:25:34 INFO  Job:1575 - The url to track the job: http://rm:8088/proxy/application_1659230505152_0003/
2022-07-31 01:25:34 INFO  Job:1620 - Running job: job_1659230505152_0003
2022-07-31 01:25:41 INFO  Job:1641 - Job job_1659230505152_0003 running in uber mode : false
2022-07-31 01:25:41 INFO  Job:1648 -  map 0% reduce 0%
2022-07-31 01:25:48 INFO  Job:1648 -  map 33% reduce 0%
2022-07-31 01:25:54 INFO  Job:1648 -  map 67% reduce 0%
2022-07-31 01:26:00 INFO  Job:1648 -  map 100% reduce 0%
2022-07-31 01:26:05 INFO  Job:1648 -  map 100% reduce 100%
2022-07-31 01:26:09 INFO  Job:1659 - Job job_1659230505152_0003 completed successfully
2022-07-31 01:26:09 INFO  Job:1666 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1094781
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=17
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=40924
		Total time spent by all reduces in occupied slots (ms)=20352
		Total time spent by all map tasks (ms)=10231
		Total time spent by all reduce tasks (ms)=5088
		Total vcore-milliseconds taken by all map tasks=10231
		Total vcore-milliseconds taken by all reduce tasks=5088
		Total megabyte-milliseconds taken by all map tasks=41906176
		Total megabyte-milliseconds taken by all reduce tasks=20840448
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=555
		CPU time spent (ms)=7580
		Physical memory (bytes) snapshot=1687945216
		Virtual memory (bytes) snapshot=15821312000
		Total committed heap usage (bytes)=1490026496
		Peak Map Physical memory (bytes)=446066688
		Peak Map Virtual memory (bytes)=3955007488
		Peak Reduce Physical memory (bytes)=351731712
		Peak Reduce Virtual memory (bytes)=3958755328
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 35.792 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" starttime="20220731 01:26:09.754" endtime="20220731 01:26:09.755"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220731 01:26:09.755" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220731 01:26:09.755" endtime="20220731 01:26:09.755"/>
</kw>
<status status="PASS" starttime="20220731 01:25:29.873" endtime="20220731 01:26:09.756"/>
</kw>
<msg timestamp="20220731 01:26:09.756" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220731 01:25:29.873" endtime="20220731 01:26:09.756"/>
</kw>
<msg timestamp="20220731 01:26:09.756" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2022-07-31 01:25:31 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2022-07-31 01:25:32 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" starttime="20220731 01:25:29.873" endtime="20220731 01:26:09.756"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220731 01:26:09.756" endtime="20220731 01:26:09.757"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>multiple SLF4J bindings</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220731 01:26:09.757" endtime="20220731 01:26:09.757"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20220731 01:25:29.850" endtime="20220731 01:26:09.758"/>
</test>
<test id="s1-s4-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220731 01:26:09.763" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20220731 01:26:09.768" level="INFO">${rc} = 0</msg>
<msg timestamp="20220731 01:26:09.768" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20220731 01:26:09.761" endtime="20220731 01:26:09.768"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220731 01:26:09.769" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20220731 01:26:09.769" endtime="20220731 01:26:09.769"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220731 01:26:09.770" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220731 01:26:09.770" endtime="20220731 01:26:09.770"/>
</kw>
<status status="PASS" starttime="20220731 01:26:09.760" endtime="20220731 01:26:09.770"/>
</kw>
<msg timestamp="20220731 01:26:09.770" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220731 01:26:09.760" endtime="20220731 01:26:09.770"/>
</kw>
<msg timestamp="20220731 01:26:09.771" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20220731 01:26:09.760" endtime="20220731 01:26:09.771"/>
</kw>
<msg timestamp="20220731 01:26:09.771" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20220731 01:26:09.759" endtime="20220731 01:26:09.771"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220731 01:26:09.772" level="INFO">${random} = jBqQBsq6</msg>
<status status="PASS" starttime="20220731 01:26:09.771" endtime="20220731 01:26:09.772"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220731 01:26:09.775" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20220731 01:26:09.775" endtime="20220731 01:26:09.775"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220731 01:26:09.776" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20220731 01:26:09.775" endtime="20220731 01:26:09.776"/>
</kw>
<status status="PASS" starttime="20220731 01:26:09.774" endtime="20220731 01:26:09.776"/>
</kw>
<msg timestamp="20220731 01:26:09.776" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20220731 01:26:09.774" endtime="20220731 01:26:09.776"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20220731 01:26:09.777" endtime="20220731 01:26:09.777"/>
</kw>
<msg timestamp="20220731 01:26:09.777" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20220731 01:26:09.776" endtime="20220731 01:26:09.777"/>
</kw>
<status status="PASS" starttime="20220731 01:26:09.773" endtime="20220731 01:26:09.777"/>
</kw>
<msg timestamp="20220731 01:26:09.777" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20220731 01:26:09.773" endtime="20220731 01:26:09.777"/>
</kw>
<msg timestamp="20220731 01:26:09.778" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20220731 01:26:09.772" endtime="20220731 01:26:09.778"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220731 01:26:09.780" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20220731 01:26:09.780" endtime="20220731 01:26:09.780"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220731 01:26:09.781" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20220731 01:26:09.780" endtime="20220731 01:26:09.781"/>
</kw>
<status status="PASS" starttime="20220731 01:26:09.780" endtime="20220731 01:26:09.781"/>
</kw>
<msg timestamp="20220731 01:26:09.781" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20220731 01:26:09.779" endtime="20220731 01:26:09.781"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220731 01:26:09.782" level="INFO">${first} = i</msg>
<status status="PASS" starttime="20220731 01:26:09.782" endtime="20220731 01:26:09.782"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220731 01:26:09.783" level="INFO">${result} = /input/</msg>
<status status="PASS" starttime="20220731 01:26:09.783" endtime="20220731 01:26:09.783"/>
</kw>
<status status="PASS" starttime="20220731 01:26:09.782" endtime="20220731 01:26:09.783"/>
</kw>
<msg timestamp="20220731 01:26:09.783" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" starttime="20220731 01:26:09.781" endtime="20220731 01:26:09.783"/>
</kw>
<status status="PASS" starttime="20220731 01:26:09.779" endtime="20220731 01:26:09.784"/>
</kw>
<msg timestamp="20220731 01:26:09.784" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" starttime="20220731 01:26:09.778" endtime="20220731 01:26:09.784"/>
</kw>
<msg timestamp="20220731 01:26:09.784" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" starttime="20220731 01:26:09.778" endtime="20220731 01:26:09.784"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${result}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220731 01:26:09.787" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20220731 01:26:09.786" endtime="20220731 01:26:09.787"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220731 01:26:09.787" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20220731 01:26:09.787" endtime="20220731 01:26:09.787"/>
</kw>
<status status="PASS" starttime="20220731 01:26:09.786" endtime="20220731 01:26:09.787"/>
</kw>
<msg timestamp="20220731 01:26:09.788" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20220731 01:26:09.786" endtime="20220731 01:26:09.788"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220731 01:26:09.789" level="INFO">${first} = w</msg>
<status status="PASS" starttime="20220731 01:26:09.788" endtime="20220731 01:26:09.789"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220731 01:26:09.789" level="INFO">${result} = /wordcount-jBqQBsq6.txt</msg>
<status status="PASS" starttime="20220731 01:26:09.789" endtime="20220731 01:26:09.789"/>
</kw>
<status status="PASS" starttime="20220731 01:26:09.788" endtime="20220731 01:26:09.789"/>
</kw>
<msg timestamp="20220731 01:26:09.790" level="INFO">${path_with_leading} = /wordcount-jBqQBsq6.txt</msg>
<status status="PASS" starttime="20220731 01:26:09.788" endtime="20220731 01:26:09.790"/>
</kw>
<status status="PASS" starttime="20220731 01:26:09.785" endtime="20220731 01:26:09.790"/>
</kw>
<msg timestamp="20220731 01:26:09.790" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-jBqQBsq6.txt</msg>
<status status="PASS" starttime="20220731 01:26:09.785" endtime="20220731 01:26:09.790"/>
</kw>
<msg timestamp="20220731 01:26:09.790" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-jBqQBsq6.txt</msg>
<status status="PASS" starttime="20220731 01:26:09.784" endtime="20220731 01:26:09.790"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220731 01:26:09.793" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-jBqQBsq6.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220731 01:26:47.238" level="INFO">${rc} = 0</msg>
<msg timestamp="20220731 01:26:47.238" level="INFO">${output} = 2022-07-31 01:26:11 INFO  DefaultNoHARMFailoverProxyProvider:64 - Connecting to ResourceManager at rm/172.21.0.4:8032
2022-07-31 01:26:11 INFO  JobSubmissionFiles:156 - Permissions on staging director...</msg>
<status status="PASS" starttime="20220731 01:26:09.791" endtime="20220731 01:26:47.239"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220731 01:26:47.240" level="INFO">2022-07-31 01:26:11 INFO  DefaultNoHARMFailoverProxyProvider:64 - Connecting to ResourceManager at rm/172.21.0.4:8032
2022-07-31 01:26:11 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2022-07-31 01:26:12 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2022-07-31 01:26:12 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2022-07-31 01:26:12 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2022-07-31 01:26:12 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-07-31 01:26:13 INFO  FileInputFormat:300 - Total input files to process : 3
2022-07-31 01:26:13 INFO  JobSubmitter:202 - number of splits:3
2022-07-31 01:26:13 INFO  JobSubmitter:298 - Submitting tokens for job: job_1659230505152_0004
2022-07-31 01:26:13 INFO  JobSubmitter:299 - Executing with tokens: []
2022-07-31 01:26:14 INFO  Configuration:2824 - resource-types.xml not found
2022-07-31 01:26:14 INFO  ResourceUtils:476 - Unable to find 'resource-types.xml'.
2022-07-31 01:26:14 INFO  YarnClientImpl:338 - Submitted application application_1659230505152_0004
2022-07-31 01:26:14 INFO  Job:1575 - The url to track the job: http://rm:8088/proxy/application_1659230505152_0004/
2022-07-31 01:26:14 INFO  Job:1620 - Running job: job_1659230505152_0004
2022-07-31 01:26:23 INFO  Job:1641 - Job job_1659230505152_0004 running in uber mode : false
2022-07-31 01:26:23 INFO  Job:1648 -  map 0% reduce 0%
2022-07-31 01:26:30 INFO  Job:1648 -  map 33% reduce 0%
2022-07-31 01:26:36 INFO  Job:1648 -  map 67% reduce 0%
2022-07-31 01:26:41 INFO  Job:1648 -  map 100% reduce 0%
2022-07-31 01:26:45 INFO  Job:1648 -  map 100% reduce 100%
2022-07-31 01:26:46 INFO  Job:1659 - Job job_1659230505152_0004 completed successfully
2022-07-31 01:26:46 INFO  Job:1666 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32289
		FILE: Number of bytes written=1157979
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39993
		OFS: Number of bytes written=22443
		OFS: Number of read operations=14
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=42528
		Total time spent by all reduces in occupied slots (ms)=14312
		Total time spent by all map tasks (ms)=10632
		Total time spent by all reduce tasks (ms)=3578
		Total vcore-milliseconds taken by all map tasks=10632
		Total vcore-milliseconds taken by all reduce tasks=3578
		Total megabyte-milliseconds taken by all map tasks=43548672
		Total megabyte-milliseconds taken by all reduce tasks=14655488
	Map-Reduce Framework
		Map input records=1064
		Map output records=4522
		Map output bytes=55364
		Map output materialized bytes=32301
		Input split bytes=300
		Combine input records=4522
		Combine output records=1810
		Reduce input groups=1546
		Reduce shuffle bytes=32301
		Reduce input records=1810
		Reduce output records=1546
		Spilled Records=3620
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=553
		CPU time spent (ms)=7360
		Physical memory (bytes) snapshot=1670041600
		Virtual memory (bytes) snapshot=15810301952
		Total committed heap usage (bytes)=1484259328
		Peak Map Physical memory (bytes)=441507840
		Peak Map Virtual memory (bytes)=3957317632
		Peak Reduce Physical memory (bytes)=367198208
		Peak Reduce Virtual memory (bytes)=3969449984
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39693
	File Output Format Counters 
		Bytes Written=22443</msg>
<status status="PASS" starttime="20220731 01:26:47.239" endtime="20220731 01:26:47.240"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220731 01:26:47.240" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220731 01:26:47.240" endtime="20220731 01:26:47.241"/>
</kw>
<status status="PASS" starttime="20220731 01:26:09.791" endtime="20220731 01:26:47.241"/>
</kw>
<msg timestamp="20220731 01:26:47.241" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220731 01:26:09.791" endtime="20220731 01:26:47.241"/>
</kw>
<msg timestamp="20220731 01:26:47.241" level="INFO">${output} = 2022-07-31 01:26:11 INFO  DefaultNoHARMFailoverProxyProvider:64 - Connecting to ResourceManager at rm/172.21.0.4:8032
2022-07-31 01:26:11 INFO  JobSubmissionFiles:156 - Permissions on staging director...</msg>
<status status="PASS" starttime="20220731 01:26:09.790" endtime="20220731 01:26:47.241"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>map tasks=3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220731 01:26:47.242" endtime="20220731 01:26:47.242"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220731 01:26:47.242" endtime="20220731 01:26:47.242"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20220731 01:26:09.758" endtime="20220731 01:26:47.243"/>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" starttime="20220731 01:25:29.799" endtime="20220731 01:26:47.244"/>
</suite>
<suite id="s1-s4-s5" name="Createmrenv" source="/opt/hadoop/smoketest/createmrenv.robot">
<test id="s1-s4-s5-t1" name="Create test volume, bucket and key" line="38">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220731 01:22:37.527" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20220731 01:22:41.423" level="INFO">${rc} = 255</msg>
<msg timestamp="20220731 01:22:41.423" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20220731 01:22:37.524" endtime="20220731 01:22:41.423"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220731 01:22:41.424" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20220731 01:22:41.424" endtime="20220731 01:22:41.425"/>
</kw>
<msg timestamp="20220731 01:22:41.425" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20220731 01:22:37.523" endtime="20220731 01:22:41.425"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create volume">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220731 01:22:41.429" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20220731 01:22:45.124" level="INFO">${rc} = 0</msg>
<msg timestamp="20220731 01:22:45.124" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220731 01:22:41.427" endtime="20220731 01:22:45.124"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220731 01:22:45.125" level="INFO"/>
<status status="PASS" starttime="20220731 01:22:45.124" endtime="20220731 01:22:45.125"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220731 01:22:45.126" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220731 01:22:45.125" endtime="20220731 01:22:45.126"/>
</kw>
<status status="PASS" starttime="20220731 01:22:41.427" endtime="20220731 01:22:45.126"/>
</kw>
<msg timestamp="20220731 01:22:45.126" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220731 01:22:41.426" endtime="20220731 01:22:45.127"/>
</kw>
<msg timestamp="20220731 01:22:45.127" level="INFO">${result} = </msg>
<status status="PASS" starttime="20220731 01:22:41.426" endtime="20220731 01:22:45.128"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220731 01:22:45.128" endtime="20220731 01:22:45.128"/>
</kw>
<status status="PASS" starttime="20220731 01:22:41.425" endtime="20220731 01:22:45.128"/>
</kw>
<status status="PASS" starttime="20220731 01:22:41.425" endtime="20220731 01:22:45.128"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume}/${bucket} --layout FILE_SYSTEM_OPTIMIZED</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220731 01:22:45.133" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 --layout FILE_SYSTEM_OPTIMIZED 2&gt;&amp;1'.</msg>
<msg timestamp="20220731 01:22:48.596" level="INFO">${rc} = 0</msg>
<msg timestamp="20220731 01:22:48.596" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220731 01:22:45.131" endtime="20220731 01:22:48.596"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220731 01:22:48.598" level="INFO"/>
<status status="PASS" starttime="20220731 01:22:48.597" endtime="20220731 01:22:48.598"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220731 01:22:48.598" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220731 01:22:48.598" endtime="20220731 01:22:48.598"/>
</kw>
<status status="PASS" starttime="20220731 01:22:45.130" endtime="20220731 01:22:48.599"/>
</kw>
<msg timestamp="20220731 01:22:48.599" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220731 01:22:45.130" endtime="20220731 01:22:48.599"/>
</kw>
<status status="PASS" starttime="20220731 01:22:45.129" endtime="20220731 01:22:48.599"/>
</kw>
<status status="PASS" starttime="20220731 01:22:45.129" endtime="20220731 01:22:48.600"/>
</kw>
<status status="PASS" starttime="20220731 01:22:45.128" endtime="20220731 01:22:48.600"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220731 01:22:48.600" endtime="20220731 01:22:48.600"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220731 01:22:48.603" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20220731 01:22:52.430" level="INFO">${rc} = 0</msg>
<msg timestamp="20220731 01:22:52.430" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-07-31T01:22...</msg>
<status status="PASS" starttime="20220731 01:22:48.601" endtime="20220731 01:22:52.430"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220731 01:22:52.431" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-07-31T01:22:48.416Z",
  "modificationTime" : "2022-07-31T01:22:48.416Z",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "FILE_SYSTEM_OPTIMIZED",
  "owner" : "hadoop",
  "link" : false
}</msg>
<status status="PASS" starttime="20220731 01:22:52.430" endtime="20220731 01:22:52.431"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220731 01:22:52.432" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220731 01:22:52.432" endtime="20220731 01:22:52.432"/>
</kw>
<status status="PASS" starttime="20220731 01:22:48.601" endtime="20220731 01:22:52.432"/>
</kw>
<msg timestamp="20220731 01:22:52.432" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220731 01:22:48.601" endtime="20220731 01:22:52.433"/>
</kw>
<msg timestamp="20220731 01:22:52.433" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-07-31T01:22...</msg>
<status status="PASS" starttime="20220731 01:22:48.600" endtime="20220731 01:22:52.433"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220731 01:22:52.433" endtime="20220731 01:22:52.434"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220731 01:22:52.437" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220731 01:22:52.437" endtime="20220731 01:22:52.438"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220731 01:22:52.438" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220731 01:22:52.438" endtime="20220731 01:22:52.438"/>
</kw>
<status status="PASS" starttime="20220731 01:22:52.437" endtime="20220731 01:22:52.438"/>
</kw>
<msg timestamp="20220731 01:22:52.438" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220731 01:22:52.436" endtime="20220731 01:22:52.438"/>
</kw>
<status status="PASS" starttime="20220731 01:22:52.435" endtime="20220731 01:22:52.439"/>
</kw>
<msg timestamp="20220731 01:22:52.439" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" starttime="20220731 01:22:52.434" endtime="20220731 01:22:52.439"/>
</kw>
<msg timestamp="20220731 01:22:52.439" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" starttime="20220731 01:22:52.434" endtime="20220731 01:22:52.439"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220731 01:22:52.442" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20220731 01:22:55.964" level="INFO">${rc} = 0</msg>
<msg timestamp="20220731 01:22:55.964" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220731 01:22:52.440" endtime="20220731 01:22:55.964"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220731 01:22:55.966" level="INFO"/>
<status status="PASS" starttime="20220731 01:22:55.965" endtime="20220731 01:22:55.966"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220731 01:22:55.966" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220731 01:22:55.966" endtime="20220731 01:22:55.966"/>
</kw>
<status status="PASS" starttime="20220731 01:22:52.440" endtime="20220731 01:22:55.967"/>
</kw>
<msg timestamp="20220731 01:22:55.967" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220731 01:22:52.440" endtime="20220731 01:22:55.967"/>
</kw>
<status status="PASS" starttime="20220731 01:22:52.439" endtime="20220731 01:22:55.968"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220731 01:22:55.972" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220731 01:23:02.586" level="INFO">${rc} = 0</msg>
<msg timestamp="20220731 01:23:02.586" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220731 01:22:55.969" endtime="20220731 01:23:02.586"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220731 01:23:02.587" level="INFO"/>
<status status="PASS" starttime="20220731 01:23:02.587" endtime="20220731 01:23:02.588"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220731 01:23:02.588" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220731 01:23:02.588" endtime="20220731 01:23:02.588"/>
</kw>
<status status="PASS" starttime="20220731 01:22:55.969" endtime="20220731 01:23:02.589"/>
</kw>
<msg timestamp="20220731 01:23:02.589" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220731 01:22:55.969" endtime="20220731 01:23:02.589"/>
</kw>
<status status="PASS" starttime="20220731 01:22:55.968" endtime="20220731 01:23:02.589"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220731 01:23:02.593" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220731 01:23:12.294" level="INFO">${rc} = 0</msg>
<msg timestamp="20220731 01:23:12.294" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220731 01:23:02.591" endtime="20220731 01:23:12.294"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220731 01:23:12.295" level="INFO"/>
<status status="PASS" starttime="20220731 01:23:12.294" endtime="20220731 01:23:12.295"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220731 01:23:12.295" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220731 01:23:12.295" endtime="20220731 01:23:12.296"/>
</kw>
<status status="PASS" starttime="20220731 01:23:02.590" endtime="20220731 01:23:12.296"/>
</kw>
<msg timestamp="20220731 01:23:12.296" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220731 01:23:02.590" endtime="20220731 01:23:12.296"/>
</kw>
<status status="PASS" starttime="20220731 01:23:02.589" endtime="20220731 01:23:12.296"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220731 01:23:12.301" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20220731 01:23:19.507" level="INFO">${rc} = 0</msg>
<msg timestamp="20220731 01:23:19.507" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220731 01:23:12.298" endtime="20220731 01:23:19.507"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220731 01:23:19.508" level="INFO"/>
<status status="PASS" starttime="20220731 01:23:19.508" endtime="20220731 01:23:19.508"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220731 01:23:19.509" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220731 01:23:19.509" endtime="20220731 01:23:19.509"/>
</kw>
<status status="PASS" starttime="20220731 01:23:12.297" endtime="20220731 01:23:19.509"/>
</kw>
<msg timestamp="20220731 01:23:19.509" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220731 01:23:12.297" endtime="20220731 01:23:19.510"/>
</kw>
<status status="PASS" starttime="20220731 01:23:12.297" endtime="20220731 01:23:19.510"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220731 01:22:37.522" endtime="20220731 01:23:19.510"/>
</test>
<test id="s1-s4-s5-t2" name="Create user dir for hadoop" line="51">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220731 01:23:19.515" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220731 01:23:19.515" endtime="20220731 01:23:19.515"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220731 01:23:19.516" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220731 01:23:19.516" endtime="20220731 01:23:19.516"/>
</kw>
<status status="PASS" starttime="20220731 01:23:19.515" endtime="20220731 01:23:19.516"/>
</kw>
<msg timestamp="20220731 01:23:19.516" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220731 01:23:19.514" endtime="20220731 01:23:19.516"/>
</kw>
<status status="PASS" starttime="20220731 01:23:19.513" endtime="20220731 01:23:19.517"/>
</kw>
<msg timestamp="20220731 01:23:19.517" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20220731 01:23:19.512" endtime="20220731 01:23:19.517"/>
</kw>
<msg timestamp="20220731 01:23:19.517" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20220731 01:23:19.512" endtime="20220731 01:23:19.517"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220731 01:23:19.521" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20220731 01:23:22.809" level="INFO">${rc} = 0</msg>
<msg timestamp="20220731 01:23:22.809" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220731 01:23:19.518" endtime="20220731 01:23:22.809"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220731 01:23:22.811" level="INFO"/>
<status status="PASS" starttime="20220731 01:23:22.810" endtime="20220731 01:23:22.811"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220731 01:23:22.811" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220731 01:23:22.811" endtime="20220731 01:23:22.811"/>
</kw>
<status status="PASS" starttime="20220731 01:23:19.518" endtime="20220731 01:23:22.812"/>
</kw>
<msg timestamp="20220731 01:23:22.812" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220731 01:23:19.518" endtime="20220731 01:23:22.812"/>
</kw>
<status status="PASS" starttime="20220731 01:23:19.517" endtime="20220731 01:23:22.812"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220731 01:23:22.821" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20220731 01:23:26.227" level="INFO">${rc} = 0</msg>
<msg timestamp="20220731 01:23:26.227" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220731 01:23:22.814" endtime="20220731 01:23:26.227"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220731 01:23:26.228" level="INFO"/>
<status status="PASS" starttime="20220731 01:23:26.228" endtime="20220731 01:23:26.229"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220731 01:23:26.229" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220731 01:23:26.229" endtime="20220731 01:23:26.229"/>
</kw>
<status status="PASS" starttime="20220731 01:23:22.814" endtime="20220731 01:23:26.230"/>
</kw>
<msg timestamp="20220731 01:23:26.230" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220731 01:23:22.813" endtime="20220731 01:23:26.230"/>
</kw>
<status status="PASS" starttime="20220731 01:23:22.812" endtime="20220731 01:23:26.230"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220731 01:23:19.511" endtime="20220731 01:23:26.231"/>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" starttime="20220731 01:22:37.475" endtime="20220731 01:23:26.232"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="228599"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="829323"/>
</suite>
<statistics>
<total>
<stat pass="32" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="32" fail="0" skip="0" id="s1" name="ozone-mr">ozone-mr</stat>
<stat pass="8" fail="0" skip="0" id="s1-s1" name="hadoop27">ozone-mr.hadoop27</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s1" name="hadoopfs-o3fs">ozone-mr.hadoop27.hadoopfs-o3fs</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1-s2" name="mapreduce-o3fs">ozone-mr.hadoop27.mapreduce-o3fs</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s3" name="hadoopfs-ofs">ozone-mr.hadoop27.hadoopfs-ofs</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1-s4" name="mapreduce-ofs">ozone-mr.hadoop27.mapreduce-ofs</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1-s5" name="Createmrenv">ozone-mr.hadoop27.Createmrenv</stat>
<stat pass="8" fail="0" skip="0" id="s1-s2" name="hadoop31">ozone-mr.hadoop31</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s1" name="hadoopfs-o3fs">ozone-mr.hadoop31.hadoopfs-o3fs</stat>
<stat pass="2" fail="0" skip="0" id="s1-s2-s2" name="mapreduce-o3fs">ozone-mr.hadoop31.mapreduce-o3fs</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s3" name="hadoopfs-ofs">ozone-mr.hadoop31.hadoopfs-ofs</stat>
<stat pass="2" fail="0" skip="0" id="s1-s2-s4" name="mapreduce-ofs">ozone-mr.hadoop31.mapreduce-ofs</stat>
<stat pass="2" fail="0" skip="0" id="s1-s2-s5" name="Createmrenv">ozone-mr.hadoop31.Createmrenv</stat>
<stat pass="8" fail="0" skip="0" id="s1-s3" name="hadoop32">ozone-mr.hadoop32</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3-s1" name="hadoopfs-o3fs">ozone-mr.hadoop32.hadoopfs-o3fs</stat>
<stat pass="2" fail="0" skip="0" id="s1-s3-s2" name="mapreduce-o3fs">ozone-mr.hadoop32.mapreduce-o3fs</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3-s3" name="hadoopfs-ofs">ozone-mr.hadoop32.hadoopfs-ofs</stat>
<stat pass="2" fail="0" skip="0" id="s1-s3-s4" name="mapreduce-ofs">ozone-mr.hadoop32.mapreduce-ofs</stat>
<stat pass="2" fail="0" skip="0" id="s1-s3-s5" name="Createmrenv">ozone-mr.hadoop32.Createmrenv</stat>
<stat pass="8" fail="0" skip="0" id="s1-s4" name="hadoop33">ozone-mr.hadoop33</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4-s1" name="hadoopfs-o3fs">ozone-mr.hadoop33.hadoopfs-o3fs</stat>
<stat pass="2" fail="0" skip="0" id="s1-s4-s2" name="mapreduce-o3fs">ozone-mr.hadoop33.mapreduce-o3fs</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4-s3" name="hadoopfs-ofs">ozone-mr.hadoop33.hadoopfs-ofs</stat>
<stat pass="2" fail="0" skip="0" id="s1-s4-s4" name="mapreduce-ofs">ozone-mr.hadoop33.mapreduce-ofs</stat>
<stat pass="2" fail="0" skip="0" id="s1-s4-s5" name="Createmrenv">ozone-mr.hadoop33.Createmrenv</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
