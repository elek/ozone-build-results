<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 5.0.1 (Python 3.6.9 on linux)" generated="20220731 01:32:23.653" rpa="false" schemaversion="3">
<suite id="s1" name="ozonesecure-mr">
<suite id="s1-s1" name="Createmrenv" source="/opt/hadoop/smoketest/createmrenv.robot">
<test id="s1-s1-t1" name="Create test volume, bucket and key" line="38">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220731 01:29:35.590" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20220731 01:29:53.340" level="INFO">${rc} = 255</msg>
<msg timestamp="20220731 01:29:53.340" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20220731 01:29:35.586" endtime="20220731 01:29:53.340"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220731 01:29:53.341" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20220731 01:29:53.340" endtime="20220731 01:29:53.341"/>
</kw>
<msg timestamp="20220731 01:29:53.341" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20220731 01:29:35.585" endtime="20220731 01:29:53.341"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create volume">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220731 01:29:53.346" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20220731 01:30:01.563" level="INFO">${rc} = 0</msg>
<msg timestamp="20220731 01:30:01.563" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220731 01:29:53.344" endtime="20220731 01:30:01.563"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220731 01:30:01.564" level="INFO"/>
<status status="PASS" starttime="20220731 01:30:01.564" endtime="20220731 01:30:01.564"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220731 01:30:01.565" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220731 01:30:01.565" endtime="20220731 01:30:01.565"/>
</kw>
<status status="PASS" starttime="20220731 01:29:53.343" endtime="20220731 01:30:01.567"/>
</kw>
<msg timestamp="20220731 01:30:01.567" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220731 01:29:53.343" endtime="20220731 01:30:01.571"/>
</kw>
<msg timestamp="20220731 01:30:01.571" level="INFO">${result} = </msg>
<status status="PASS" starttime="20220731 01:29:53.342" endtime="20220731 01:30:01.571"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220731 01:30:01.572" endtime="20220731 01:30:01.573"/>
</kw>
<status status="PASS" starttime="20220731 01:29:53.342" endtime="20220731 01:30:01.574"/>
</kw>
<status status="PASS" starttime="20220731 01:29:53.341" endtime="20220731 01:30:01.574"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume}/${bucket} --layout FILE_SYSTEM_OPTIMIZED</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220731 01:30:01.587" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 --layout FILE_SYSTEM_OPTIMIZED 2&gt;&amp;1'.</msg>
<msg timestamp="20220731 01:30:17.703" level="INFO">${rc} = 0</msg>
<msg timestamp="20220731 01:30:17.704" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220731 01:30:01.581" endtime="20220731 01:30:17.704"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220731 01:30:17.705" level="INFO"/>
<status status="PASS" starttime="20220731 01:30:17.704" endtime="20220731 01:30:17.705"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220731 01:30:17.705" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220731 01:30:17.705" endtime="20220731 01:30:17.706"/>
</kw>
<status status="PASS" starttime="20220731 01:30:01.579" endtime="20220731 01:30:17.706"/>
</kw>
<msg timestamp="20220731 01:30:17.706" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220731 01:30:01.578" endtime="20220731 01:30:17.706"/>
</kw>
<status status="PASS" starttime="20220731 01:30:01.576" endtime="20220731 01:30:17.707"/>
</kw>
<status status="PASS" starttime="20220731 01:30:01.575" endtime="20220731 01:30:17.707"/>
</kw>
<status status="PASS" starttime="20220731 01:30:01.574" endtime="20220731 01:30:17.707"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220731 01:30:17.707" endtime="20220731 01:30:17.707"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220731 01:30:17.712" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20220731 01:30:30.173" level="INFO">${rc} = 0</msg>
<msg timestamp="20220731 01:30:30.173" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-07-31T01:30...</msg>
<status status="PASS" starttime="20220731 01:30:17.709" endtime="20220731 01:30:30.173"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220731 01:30:30.174" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-07-31T01:30:17.360Z",
  "modificationTime" : "2022-07-31T01:30:17.360Z",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "FILE_SYSTEM_OPTIMIZED",
  "owner" : "testuser",
  "link" : false
}</msg>
<status status="PASS" starttime="20220731 01:30:30.174" endtime="20220731 01:30:30.174"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220731 01:30:30.175" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220731 01:30:30.175" endtime="20220731 01:30:30.175"/>
</kw>
<status status="PASS" starttime="20220731 01:30:17.709" endtime="20220731 01:30:30.176"/>
</kw>
<msg timestamp="20220731 01:30:30.176" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220731 01:30:17.708" endtime="20220731 01:30:30.176"/>
</kw>
<msg timestamp="20220731 01:30:30.176" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-07-31T01:30...</msg>
<status status="PASS" starttime="20220731 01:30:17.708" endtime="20220731 01:30:30.176"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220731 01:30:30.176" endtime="20220731 01:30:30.177"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220731 01:30:30.181" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220731 01:30:30.181" endtime="20220731 01:30:30.181"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220731 01:30:30.182" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220731 01:30:30.182" endtime="20220731 01:30:30.182"/>
</kw>
<status status="PASS" starttime="20220731 01:30:30.180" endtime="20220731 01:30:30.182"/>
</kw>
<msg timestamp="20220731 01:30:30.183" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220731 01:30:30.179" endtime="20220731 01:30:30.183"/>
</kw>
<status status="PASS" starttime="20220731 01:30:30.178" endtime="20220731 01:30:30.183"/>
</kw>
<msg timestamp="20220731 01:30:30.183" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" starttime="20220731 01:30:30.178" endtime="20220731 01:30:30.183"/>
</kw>
<msg timestamp="20220731 01:30:30.183" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" starttime="20220731 01:30:30.177" endtime="20220731 01:30:30.183"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220731 01:30:30.187" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20220731 01:30:41.007" level="INFO">${rc} = 0</msg>
<msg timestamp="20220731 01:30:41.007" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220731 01:30:30.185" endtime="20220731 01:30:41.007"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220731 01:30:41.009" level="INFO"/>
<status status="PASS" starttime="20220731 01:30:41.008" endtime="20220731 01:30:41.009"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220731 01:30:41.009" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220731 01:30:41.009" endtime="20220731 01:30:41.010"/>
</kw>
<status status="PASS" starttime="20220731 01:30:30.184" endtime="20220731 01:30:41.010"/>
</kw>
<msg timestamp="20220731 01:30:41.010" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220731 01:30:30.184" endtime="20220731 01:30:41.010"/>
</kw>
<status status="PASS" starttime="20220731 01:30:30.184" endtime="20220731 01:30:41.011"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220731 01:30:41.021" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220731 01:31:00.619" level="INFO">${rc} = 0</msg>
<msg timestamp="20220731 01:31:00.619" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220731 01:30:41.012" endtime="20220731 01:31:00.619"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220731 01:31:00.620" level="INFO"/>
<status status="PASS" starttime="20220731 01:31:00.619" endtime="20220731 01:31:00.620"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220731 01:31:00.621" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220731 01:31:00.620" endtime="20220731 01:31:00.621"/>
</kw>
<status status="PASS" starttime="20220731 01:30:41.012" endtime="20220731 01:31:00.621"/>
</kw>
<msg timestamp="20220731 01:31:00.621" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220731 01:30:41.012" endtime="20220731 01:31:00.621"/>
</kw>
<status status="PASS" starttime="20220731 01:30:41.011" endtime="20220731 01:31:00.622"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220731 01:31:00.625" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220731 01:31:17.800" level="INFO">${rc} = 0</msg>
<msg timestamp="20220731 01:31:17.800" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220731 01:31:00.623" endtime="20220731 01:31:17.800"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220731 01:31:17.802" level="INFO"/>
<status status="PASS" starttime="20220731 01:31:17.801" endtime="20220731 01:31:17.802"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220731 01:31:17.802" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220731 01:31:17.802" endtime="20220731 01:31:17.803"/>
</kw>
<status status="PASS" starttime="20220731 01:31:00.623" endtime="20220731 01:31:17.803"/>
</kw>
<msg timestamp="20220731 01:31:17.803" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220731 01:31:00.622" endtime="20220731 01:31:17.803"/>
</kw>
<status status="PASS" starttime="20220731 01:31:00.622" endtime="20220731 01:31:17.804"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220731 01:31:17.808" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20220731 01:31:35.585" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20220731 01:31:17.805" endtime="20220731 01:31:35.585"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20220731 01:31:35.586" endtime="20220731 01:31:35.586"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20220731 01:31:35.586" endtime="20220731 01:31:35.586"/>
</kw>
<status status="FAIL" starttime="20220731 01:31:17.805" endtime="20220731 01:31:35.586"/>
</kw>
<msg timestamp="20220731 01:31:35.587" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20220731 01:31:17.804" endtime="20220731 01:31:35.587"/>
</kw>
<status status="FAIL" starttime="20220731 01:31:17.804" endtime="20220731 01:31:35.587"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20220731 01:29:35.584" endtime="20220731 01:31:35.588">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-t2" name="Create user dir for hadoop" line="51">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220731 01:31:35.633" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220731 01:31:35.631" endtime="20220731 01:31:35.633"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220731 01:31:35.636" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220731 01:31:35.635" endtime="20220731 01:31:35.636"/>
</kw>
<status status="PASS" starttime="20220731 01:31:35.626" endtime="20220731 01:31:35.636"/>
</kw>
<msg timestamp="20220731 01:31:35.636" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220731 01:31:35.618" endtime="20220731 01:31:35.636"/>
</kw>
<status status="PASS" starttime="20220731 01:31:35.617" endtime="20220731 01:31:35.641"/>
</kw>
<msg timestamp="20220731 01:31:35.641" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20220731 01:31:35.613" endtime="20220731 01:31:35.641"/>
</kw>
<msg timestamp="20220731 01:31:35.641" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20220731 01:31:35.608" endtime="20220731 01:31:35.641"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220731 01:31:35.667" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20220731 01:31:46.409" level="INFO">${rc} = 0</msg>
<msg timestamp="20220731 01:31:46.409" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220731 01:31:35.646" endtime="20220731 01:31:46.409"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220731 01:31:46.410" level="INFO"/>
<status status="PASS" starttime="20220731 01:31:46.409" endtime="20220731 01:31:46.410"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220731 01:31:46.411" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220731 01:31:46.410" endtime="20220731 01:31:46.411"/>
</kw>
<status status="PASS" starttime="20220731 01:31:35.644" endtime="20220731 01:31:46.412"/>
</kw>
<msg timestamp="20220731 01:31:46.412" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220731 01:31:35.644" endtime="20220731 01:31:46.412"/>
</kw>
<status status="PASS" starttime="20220731 01:31:35.641" endtime="20220731 01:31:46.412"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220731 01:31:46.416" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20220731 01:31:54.472" level="INFO">${rc} = 0</msg>
<msg timestamp="20220731 01:31:54.473" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220731 01:31:46.414" endtime="20220731 01:31:54.473"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220731 01:31:54.474" level="INFO"/>
<status status="PASS" starttime="20220731 01:31:54.473" endtime="20220731 01:31:54.474"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220731 01:31:54.475" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220731 01:31:54.474" endtime="20220731 01:31:54.475"/>
</kw>
<status status="PASS" starttime="20220731 01:31:46.413" endtime="20220731 01:31:54.475"/>
</kw>
<msg timestamp="20220731 01:31:54.476" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220731 01:31:46.413" endtime="20220731 01:31:54.476"/>
</kw>
<status status="PASS" starttime="20220731 01:31:46.412" endtime="20220731 01:31:54.476"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220731 01:31:35.602" endtime="20220731 01:31:54.476"/>
</test>
<doc>Create directories required for MR test</doc>
<status status="FAIL" starttime="20220731 01:29:35.527" endtime="20220731 01:31:54.478"/>
</suite>
<suite id="s1-s2" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s2-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220731 01:29:26.238" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220731 01:29:26.255" level="INFO">${rc} = 0</msg>
<msg timestamp="20220731 01:29:26.255" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20220731 01:29:26.224" endtime="20220731 01:29:26.255"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220731 01:29:26.259" level="INFO">om</msg>
<status status="PASS" starttime="20220731 01:29:26.256" endtime="20220731 01:29:26.259"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220731 01:29:26.261" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220731 01:29:26.260" endtime="20220731 01:29:26.261"/>
</kw>
<status status="PASS" starttime="20220731 01:29:26.222" endtime="20220731 01:29:26.262"/>
</kw>
<msg timestamp="20220731 01:29:26.263" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220731 01:29:26.221" endtime="20220731 01:29:26.267"/>
</kw>
<msg timestamp="20220731 01:29:26.268" level="INFO">${instance} = om</msg>
<status status="PASS" starttime="20220731 01:29:26.220" endtime="20220731 01:29:26.268"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220731 01:29:26.270" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220731 01:29:26.269" endtime="20220731 01:29:26.271"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220731 01:29:26.283" level="INFO">Running command 'kinit -k testuser/om@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220731 01:29:26.305" level="INFO">${rc} = 0</msg>
<msg timestamp="20220731 01:29:26.305" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220731 01:29:26.277" endtime="20220731 01:29:26.305"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220731 01:29:26.308" level="INFO"/>
<status status="PASS" starttime="20220731 01:29:26.306" endtime="20220731 01:29:26.309"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220731 01:29:26.311" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220731 01:29:26.310" endtime="20220731 01:29:26.312"/>
</kw>
<status status="PASS" starttime="20220731 01:29:26.275" endtime="20220731 01:29:26.313"/>
</kw>
<msg timestamp="20220731 01:29:26.313" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220731 01:29:26.274" endtime="20220731 01:29:26.315"/>
</kw>
<status status="PASS" starttime="20220731 01:29:26.272" endtime="20220731 01:29:26.315"/>
</kw>
<status status="PASS" starttime="20220731 01:29:26.271" endtime="20220731 01:29:26.315"/>
</kw>
<status status="PASS" starttime="20220731 01:29:26.217" endtime="20220731 01:29:26.316"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220731 01:29:26.215" endtime="20220731 01:29:26.316"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20220731 01:29:26.046" endtime="20220731 01:29:26.320"/>
</suite>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="139225"/>
</suite>
<statistics>
<total>
<stat pass="2" fail="1" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="2" fail="1" skip="0" id="s1" name="ozonesecure-mr">ozonesecure-mr</stat>
<stat pass="1" fail="1" skip="0" id="s1-s1" name="Createmrenv">ozonesecure-mr.Createmrenv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Kinit">ozonesecure-mr.Kinit</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
