<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 5.0.1 (Python 3.8.10 on linux)" generated="20220921 22:24:11.232" rpa="false" schemaversion="3">
<suite id="s1" name="ozone-topology">
<suite id="s1-s1" name="Cli" source="/opt/hadoop/smoketest/topology/cli.robot">
<test id="s1-s1-t1" name="Run printTopology" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220921 22:19:44.302" level="INFO">Running command 'ozone admin printTopology 2&gt;&amp;1'.</msg>
<msg timestamp="20220921 22:19:48.567" level="INFO">${rc} = 0</msg>
<msg timestamp="20220921 22:19:48.567" level="INFO">${output} = State = HEALTHY
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.5(ozone-topolog...</msg>
<status status="PASS" starttime="20220921 22:19:44.299" endtime="20220921 22:19:48.567"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220921 22:19:48.571" level="INFO">State = HEALTHY
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2</msg>
<status status="PASS" starttime="20220921 22:19:48.567" endtime="20220921 22:19:48.571"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220921 22:19:48.575" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220921 22:19:48.574" endtime="20220921 22:19:48.575"/>
</kw>
<status status="PASS" starttime="20220921 22:19:44.299" endtime="20220921 22:19:48.575"/>
</kw>
<msg timestamp="20220921 22:19:48.575" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220921 22:19:44.299" endtime="20220921 22:19:48.580"/>
</kw>
<msg timestamp="20220921 22:19:48.581" level="INFO">${output} = State = HEALTHY
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.5(ozone-topolog...</msg>
<status status="PASS" starttime="20220921 22:19:44.298" endtime="20220921 22:19:48.581"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
<arg>IN_SERVICE</arg>
<arg>/rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220921 22:19:48.581" endtime="20220921 22:19:48.582"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220921 22:19:44.297" endtime="20220921 22:19:48.582"/>
</test>
<test id="s1-s1-t2" name="Run printTopology -o" line="30">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology -o</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220921 22:19:48.591" level="INFO">Running command 'ozone admin printTopology -o 2&gt;&amp;1'.</msg>
<msg timestamp="20220921 22:19:52.052" level="INFO">${rc} = 0</msg>
<msg timestamp="20220921 22:19:52.052" level="INFO">${output} = State = HEALTHY
Location: /rack1
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net) IN_SERVICE
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net) IN_SERVICE
 10.5.0.6(ozone-topology_data...</msg>
<status status="PASS" starttime="20220921 22:19:48.586" endtime="20220921 22:19:52.052"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220921 22:19:52.053" level="INFO">State = HEALTHY
Location: /rack1
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net) IN_SERVICE
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net) IN_SERVICE
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net) IN_SERVICE
Location: /rack2
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net) IN_SERVICE
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net) IN_SERVICE
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net) IN_SERVICE</msg>
<status status="PASS" starttime="20220921 22:19:52.053" endtime="20220921 22:19:52.053"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220921 22:19:52.054" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220921 22:19:52.054" endtime="20220921 22:19:52.054"/>
</kw>
<status status="PASS" starttime="20220921 22:19:48.586" endtime="20220921 22:19:52.055"/>
</kw>
<msg timestamp="20220921 22:19:52.055" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220921 22:19:48.585" endtime="20220921 22:19:52.055"/>
</kw>
<msg timestamp="20220921 22:19:52.055" level="INFO">${output} = State = HEALTHY
Location: /rack1
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net) IN_SERVICE
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net) IN_SERVICE
 10.5.0.6(ozone-topology_data...</msg>
<status status="PASS" starttime="20220921 22:19:48.585" endtime="20220921 22:19:52.056"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Location: /rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220921 22:19:52.056" endtime="20220921 22:19:52.056"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net) IN_SERVICE</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220921 22:19:52.056" endtime="20220921 22:19:52.057"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220921 22:19:48.583" endtime="20220921 22:19:52.057"/>
</test>
<test id="s1-s1-t3" name="Run printTopology --operational-state IN_SERVICE" line="34">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology --operational-state IN_SERVICE</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220921 22:19:52.062" level="INFO">Running command 'ozone admin printTopology --operational-state IN_SERVICE 2&gt;&amp;1'.</msg>
<msg timestamp="20220921 22:19:55.352" level="INFO">${rc} = 0</msg>
<msg timestamp="20220921 22:19:55.352" level="INFO">${output} = State = HEALTHY
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.5(ozone-topolog...</msg>
<status status="PASS" starttime="20220921 22:19:52.060" endtime="20220921 22:19:55.352"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220921 22:19:55.353" level="INFO">State = HEALTHY
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2</msg>
<status status="PASS" starttime="20220921 22:19:55.352" endtime="20220921 22:19:55.353"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220921 22:19:55.354" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220921 22:19:55.353" endtime="20220921 22:19:55.354"/>
</kw>
<status status="PASS" starttime="20220921 22:19:52.060" endtime="20220921 22:19:55.354"/>
</kw>
<msg timestamp="20220921 22:19:55.354" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220921 22:19:52.059" endtime="20220921 22:19:55.355"/>
</kw>
<msg timestamp="20220921 22:19:55.355" level="INFO">${output} = State = HEALTHY
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.5(ozone-topolog...</msg>
<status status="PASS" starttime="20220921 22:19:52.058" endtime="20220921 22:19:55.355"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
<arg>IN_SERVICE</arg>
<arg>/rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220921 22:19:55.355" endtime="20220921 22:19:55.356"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220921 22:19:52.058" endtime="20220921 22:19:55.356"/>
</test>
<test id="s1-s1-t4" name="Run printTopology --node-state HEALTHY" line="37">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology --node-state HEALTHY</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220921 22:19:55.362" level="INFO">Running command 'ozone admin printTopology --node-state HEALTHY 2&gt;&amp;1'.</msg>
<msg timestamp="20220921 22:19:58.630" level="INFO">${rc} = 0</msg>
<msg timestamp="20220921 22:19:58.630" level="INFO">${output} = State = HEALTHY
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.5(ozone-topolog...</msg>
<status status="PASS" starttime="20220921 22:19:55.359" endtime="20220921 22:19:58.630"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220921 22:19:58.631" level="INFO">State = HEALTHY
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2</msg>
<status status="PASS" starttime="20220921 22:19:58.630" endtime="20220921 22:19:58.631"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220921 22:19:58.632" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220921 22:19:58.631" endtime="20220921 22:19:58.632"/>
</kw>
<status status="PASS" starttime="20220921 22:19:55.358" endtime="20220921 22:19:58.632"/>
</kw>
<msg timestamp="20220921 22:19:58.632" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220921 22:19:55.358" endtime="20220921 22:19:58.633"/>
</kw>
<msg timestamp="20220921 22:19:58.633" level="INFO">${output} = State = HEALTHY
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.5(ozone-topolog...</msg>
<status status="PASS" starttime="20220921 22:19:55.358" endtime="20220921 22:19:58.633"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
<arg>IN_SERVICE</arg>
<arg>/rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220921 22:19:58.633" endtime="20220921 22:19:58.633"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220921 22:19:55.357" endtime="20220921 22:19:58.634"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20220921 22:19:44.253" endtime="20220921 22:19:58.635"/>
</suite>
<suite id="s1-s2" name="Recon" source="/opt/hadoop/smoketest/recon">
<suite id="s1-s2-s1" name="Recon-Api" source="/opt/hadoop/smoketest/recon/recon-api.robot">
<test id="s1-s2-s1-t1" name="Check if Recon picks up OM data" line="61">
<kw name="Freon OCKG" library="freon" type="SETUP">
<arg>n=10</arg>
<arg>args=-s 1025 -v recon -b api</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220921 22:20:04.438" level="INFO">Running command 'ozone freon ockg  -t 1 -n10 -p ockg -s 1025 -v recon -b api 2&gt;&amp;1'.</msg>
<msg timestamp="20220921 22:20:19.705" level="INFO">${rc} = 0</msg>
<msg timestamp="20220921 22:20:19.705" level="INFO">${output} = 2022-09-21 22:20:06,545 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-09-21 22:20:06,685 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220921 22:20:04.434" endtime="20220921 22:20:19.705"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220921 22:20:19.707" level="INFO">2022-09-21 22:20:06,545 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-09-21 22:20:06,685 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-09-21 22:20:06,685 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-09-21 22:20:06,879 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockg and number-of-tests 10
2022-09-21 22:20:06,966 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2022-09-21 22:20:07,975 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2022-09-21 22:20:08,141 [main] INFO rpc.RpcClient: Creating Volume: recon, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2022-09-21 22:20:08,193 [main] INFO rpc.RpcClient: Creating Bucket: recon/api, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false 
2022-09-21 22:20:08,892 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-09-21 22:20:08,975 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2022-09-21 22:20:09,148 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-09-21 22:20:09,976 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2022-09-21 22:20:10,978 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2022-09-21 22:20:11,979 [Thread-5] INFO freon.ProgressBar: Progress: 30.00 % (3 out of 10)
2022-09-21 22:20:12,979 [Thread-5] INFO freon.ProgressBar: Progress: 30.00 % (3 out of 10)
2022-09-21 22:20:13,980 [Thread-5] INFO freon.ProgressBar: Progress: 70.00 % (7 out of 10)
2022-09-21 22:20:14,980 [Thread-5] INFO freon.ProgressBar: Progress: 70.00 % (7 out of 10)
2022-09-21 22:20:15,981 [Thread-5] INFO freon.ProgressBar: Progress: 90.00 % (9 out of 10)
2022-09-21 22:20:16,982 [Thread-5] INFO freon.ProgressBar: Progress: 90.00 % (9 out of 10)
2022-09-21 22:20:17,982 [Thread-5] INFO freon.ProgressBar: Progress: 90.00 % (9 out of 10)
2022-09-21 22:20:18,983 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (10 out of 10)
2022-09-21 22:20:19,350 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=10, min=88.847823, max=2787.11791, mean=1023.9586259103274, stddev=1055.525483195615, median=372.383887, p75=2089.607913, p95=2787.11791, p98=2787.11791, p99=2787.11791, p999=2787.11791, mean_rate=0.9008386049085761, m1=0.647973351222406, m5=0.6099171277070295, m15=0.603324091197062, rate_unit=events/second, duration_unit=milliseconds
2022-09-21 22:20:19,351 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 12
2022-09-21 22:20:19,351 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-09-21 22:20:19,351 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 10</msg>
<status status="PASS" starttime="20220921 22:20:19.706" endtime="20220921 22:20:19.707"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220921 22:20:19.708" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220921 22:20:19.707" endtime="20220921 22:20:19.708"/>
</kw>
<status status="PASS" starttime="20220921 22:20:04.433" endtime="20220921 22:20:19.708"/>
</kw>
<msg timestamp="20220921 22:20:19.708" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220921 22:20:04.433" endtime="20220921 22:20:19.709"/>
</kw>
<msg timestamp="20220921 22:20:19.710" level="INFO">${result} = 2022-09-21 22:20:06,545 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-09-21 22:20:06,685 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220921 22:20:04.432" endtime="20220921 22:20:19.710"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220921 22:20:19.710" endtime="20220921 22:20:19.711"/>
</kw>
<status status="PASS" starttime="20220921 22:20:04.432" endtime="20220921 22:20:19.711"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Check if Recon picks up container from OM</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220921 22:20:19.712" endtime="20220921 22:20:19.712"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220921 22:20:19.716" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20220921 22:20:19.943" level="INFO">${rc} = 0</msg>
<msg timestamp="20220921 22:20:19.944" level="INFO">${output} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20220921 22:20:19.714" endtime="20220921 22:20:19.944"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220921 22:20:19.945" level="INFO">{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20220921 22:20:19.944" endtime="20220921 22:20:19.946"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220921 22:20:19.946" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220921 22:20:19.946" endtime="20220921 22:20:19.946"/>
</kw>
<status status="PASS" starttime="20220921 22:20:19.713" endtime="20220921 22:20:19.947"/>
</kw>
<msg timestamp="20220921 22:20:19.947" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220921 22:20:19.713" endtime="20220921 22:20:19.947"/>
</kw>
<msg timestamp="20220921 22:20:19.948" level="INFO">${result} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20220921 22:20:19.712" endtime="20220921 22:20:19.948"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220921 22:20:19.948" endtime="20220921 22:20:19.948"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220921 22:20:19.953" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20220921 22:20:19.977" level="INFO">${rc} = 0</msg>
<msg timestamp="20220921 22:20:19.977" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20220921 22:20:19.951" endtime="20220921 22:20:19.978"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220921 22:20:19.979" level="INFO">[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20220921 22:20:19.978" endtime="20220921 22:20:19.979"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220921 22:20:19.979" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220921 22:20:19.979" endtime="20220921 22:20:19.979"/>
</kw>
<status status="PASS" starttime="20220921 22:20:19.950" endtime="20220921 22:20:19.980"/>
</kw>
<msg timestamp="20220921 22:20:19.980" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220921 22:20:19.949" endtime="20220921 22:20:19.981"/>
</kw>
<msg timestamp="20220921 22:20:19.981" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20220921 22:20:19.948" endtime="20220921 22:20:19.981"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20220921 22:20:19.982" level="FAIL">'[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20220921 22:20:19.981" endtime="20220921 22:20:19.982"/>
</kw>
<status status="FAIL" starttime="20220921 22:20:19.711" endtime="20220921 22:20:19.983"/>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220921 22:20:29.984" endtime="20220921 22:20:29.985"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220921 22:20:29.990" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20220921 22:20:30.009" level="INFO">${rc} = 0</msg>
<msg timestamp="20220921 22:20:30.009" level="INFO">${output} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20220921 22:20:29.986" endtime="20220921 22:20:30.009"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220921 22:20:30.011" level="INFO">{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20220921 22:20:30.009" endtime="20220921 22:20:30.011"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220921 22:20:30.011" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220921 22:20:30.011" endtime="20220921 22:20:30.012"/>
</kw>
<status status="PASS" starttime="20220921 22:20:29.986" endtime="20220921 22:20:30.012"/>
</kw>
<msg timestamp="20220921 22:20:30.012" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220921 22:20:29.986" endtime="20220921 22:20:30.012"/>
</kw>
<msg timestamp="20220921 22:20:30.013" level="INFO">${result} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20220921 22:20:29.985" endtime="20220921 22:20:30.013"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220921 22:20:30.013" endtime="20220921 22:20:30.013"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220921 22:20:30.017" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20220921 22:20:30.035" level="INFO">${rc} = 0</msg>
<msg timestamp="20220921 22:20:30.035" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20220921 22:20:30.015" endtime="20220921 22:20:30.035"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220921 22:20:30.036" level="INFO">[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20220921 22:20:30.035" endtime="20220921 22:20:30.036"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220921 22:20:30.037" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220921 22:20:30.036" endtime="20220921 22:20:30.037"/>
</kw>
<status status="PASS" starttime="20220921 22:20:30.014" endtime="20220921 22:20:30.037"/>
</kw>
<msg timestamp="20220921 22:20:30.037" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220921 22:20:30.014" endtime="20220921 22:20:30.038"/>
</kw>
<msg timestamp="20220921 22:20:30.038" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20220921 22:20:30.014" endtime="20220921 22:20:30.038"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20220921 22:20:30.039" level="FAIL">'[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20220921 22:20:30.038" endtime="20220921 22:20:30.039"/>
</kw>
<status status="FAIL" starttime="20220921 22:20:29.983" endtime="20220921 22:20:30.040"/>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220921 22:20:40.041" endtime="20220921 22:20:40.042"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220921 22:20:40.046" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20220921 22:20:40.065" level="INFO">${rc} = 0</msg>
<msg timestamp="20220921 22:20:40.065" level="INFO">${output} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20220921 22:20:40.043" endtime="20220921 22:20:40.065"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220921 22:20:40.067" level="INFO">{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20220921 22:20:40.065" endtime="20220921 22:20:40.067"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220921 22:20:40.068" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220921 22:20:40.068" endtime="20220921 22:20:40.068"/>
</kw>
<status status="PASS" starttime="20220921 22:20:40.043" endtime="20220921 22:20:40.069"/>
</kw>
<msg timestamp="20220921 22:20:40.069" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220921 22:20:40.042" endtime="20220921 22:20:40.069"/>
</kw>
<msg timestamp="20220921 22:20:40.069" level="INFO">${result} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20220921 22:20:40.042" endtime="20220921 22:20:40.069"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220921 22:20:40.070" endtime="20220921 22:20:40.070"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220921 22:20:40.074" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20220921 22:20:40.091" level="INFO">${rc} = 0</msg>
<msg timestamp="20220921 22:20:40.091" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20220921 22:20:40.072" endtime="20220921 22:20:40.091"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220921 22:20:40.092" level="INFO">[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20220921 22:20:40.091" endtime="20220921 22:20:40.092"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220921 22:20:40.093" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220921 22:20:40.092" endtime="20220921 22:20:40.093"/>
</kw>
<status status="PASS" starttime="20220921 22:20:40.071" endtime="20220921 22:20:40.093"/>
</kw>
<msg timestamp="20220921 22:20:40.093" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220921 22:20:40.071" endtime="20220921 22:20:40.094"/>
</kw>
<msg timestamp="20220921 22:20:40.094" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20220921 22:20:40.070" endtime="20220921 22:20:40.094"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20220921 22:20:40.095" level="FAIL">'[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20220921 22:20:40.094" endtime="20220921 22:20:40.096"/>
</kw>
<status status="FAIL" starttime="20220921 22:20:40.041" endtime="20220921 22:20:40.096"/>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220921 22:20:50.097" endtime="20220921 22:20:50.098"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220921 22:20:50.102" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20220921 22:20:50.120" level="INFO">${rc} = 0</msg>
<msg timestamp="20220921 22:20:50.120" level="INFO">${output} = {"data":{"totalCount":3,"containers":[{"ContainerID":1,"NumberOfKeys":2},{"ContainerID":2,"NumberOfKeys":4},{"ContainerID":3,"NumberOfKeys":5}]}}</msg>
<status status="PASS" starttime="20220921 22:20:50.099" endtime="20220921 22:20:50.120"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220921 22:20:50.122" level="INFO">{"data":{"totalCount":3,"containers":[{"ContainerID":1,"NumberOfKeys":2},{"ContainerID":2,"NumberOfKeys":4},{"ContainerID":3,"NumberOfKeys":5}]}}</msg>
<status status="PASS" starttime="20220921 22:20:50.121" endtime="20220921 22:20:50.122"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220921 22:20:50.123" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220921 22:20:50.122" endtime="20220921 22:20:50.123"/>
</kw>
<status status="PASS" starttime="20220921 22:20:50.099" endtime="20220921 22:20:50.123"/>
</kw>
<msg timestamp="20220921 22:20:50.123" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220921 22:20:50.098" endtime="20220921 22:20:50.124"/>
</kw>
<msg timestamp="20220921 22:20:50.124" level="INFO">${result} = {"data":{"totalCount":3,"containers":[{"ContainerID":1,"NumberOfKeys":2},{"ContainerID":2,"NumberOfKeys":4},{"ContainerID":3,"NumberOfKeys":5}]}}</msg>
<status status="PASS" starttime="20220921 22:20:50.098" endtime="20220921 22:20:50.124"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220921 22:20:50.124" endtime="20220921 22:20:50.125"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220921 22:20:50.129" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20220921 22:20:50.145" level="INFO">${rc} = 0</msg>
<msg timestamp="20220921 22:20:50.145" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1},{"volume":"recon","bucket":"api","fileSize":2048,"count":10}]</msg>
<status status="PASS" starttime="20220921 22:20:50.126" endtime="20220921 22:20:50.145"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220921 22:20:50.146" level="INFO">[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1},{"volume":"recon","bucket":"api","fileSize":2048,"count":10}]</msg>
<status status="PASS" starttime="20220921 22:20:50.145" endtime="20220921 22:20:50.146"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220921 22:20:50.147" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220921 22:20:50.146" endtime="20220921 22:20:50.147"/>
</kw>
<status status="PASS" starttime="20220921 22:20:50.126" endtime="20220921 22:20:50.147"/>
</kw>
<msg timestamp="20220921 22:20:50.147" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220921 22:20:50.126" endtime="20220921 22:20:50.148"/>
</kw>
<msg timestamp="20220921 22:20:50.148" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1},{"volume":"recon","bucket":"api","fileSize":2048,"count":10}]</msg>
<status status="PASS" starttime="20220921 22:20:50.125" endtime="20220921 22:20:50.148"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220921 22:20:50.148" endtime="20220921 22:20:50.148"/>
</kw>
<status status="PASS" starttime="20220921 22:20:50.097" endtime="20220921 22:20:50.149"/>
</kw>
<status status="PASS" starttime="20220921 22:20:19.711" endtime="20220921 22:20:50.149"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220921 22:20:04.431" endtime="20220921 22:20:50.149"/>
</test>
<test id="s1-s2-s1-t2" name="Check if Recon picks up DN heartbeats" line="65">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/datanodes</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220921 22:20:50.154" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/datanodes 2&gt;&amp;1'.</msg>
<msg timestamp="20220921 22:20:50.189" level="INFO">${rc} = 0</msg>
<msg timestamp="20220921 22:20:50.189" level="INFO">${output} = {"totalCount":6,"datanodes":[{"uuid":"378f0842-85de-4b4e-acb7-157680d79969","hostname":"ozone-topology_datanode_5_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1663798...</msg>
<status status="PASS" starttime="20220921 22:20:50.152" endtime="20220921 22:20:50.189"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220921 22:20:50.190" level="INFO">{"totalCount":6,"datanodes":[{"uuid":"378f0842-85de-4b4e-acb7-157680d79969","hostname":"ozone-topology_datanode_5_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1663798841562,"storageReport":{"capacity":89297309696,"used":20486,"remaining":31733526528},"pipelines":[{"pipelineID":"df0aedf4-cb16-4755-ad54-36172fbc7484","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net"},{"pipelineID":"df4c1902-e717-4a4c-89f2-b80932e56b7d","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net"},{"pipelineID":"2d7a4ee1-4f84-4877-a160-2f4ca6118c59","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net"}],"containers":2,"openContainers":3,"leaderCount":2,"version":"1.3.0-SNAPSHOT","setupTime":1663798690066,"revision":"1a6b4d2d6f2cb34c8d94a76c2a087f78f8cef9be","buildDate":"2022-09-21T21:55Z","layoutVersion":4,"networkLocation":"/rack2"},{"uuid":"0becff22-7e0e-4fce-8030-0cd43c830acb","hostname":"ozone-topology_datanode_3_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1663798841496,"storageReport":{"capacity":89297309696,"used":13321,"remaining":31733526528},"pipelines":[{"pipelineID":"fd05e5b3-26b9-43d7-ab95-690401e496eb","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net"},{"pipelineID":"df4c1902-e717-4a4c-89f2-b80932e56b7d","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net"},{"pipelineID":"7e18fd9c-14e2-4bf5-bb3a-b4b60a0a158d","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net"}],"containers":2,"openContainers":3,"leaderCount":1,"version":"1.3.0-SNAPSHOT","setupTime":1663798688432,"revision":"1a6b4d2d6f2cb34c8d94a76c2a087f78f8cef9be","buildDate":"2022-09-21T21:55Z","layoutVersion":4,"networkLocation":"/rack1"},{"uuid":"a63446fc-af68-45aa-a018-871ba91f2233","hostname":"ozone-topology_datanode_6_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1663798841473,"storageReport":{"capacity":89297309696,"used":20486,"remaining":31733526528},"pipelines":[{"pipelineID":"df4c1902-e717-4a4c-89f2-b80932e56b7d","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net"},{"pipelineID":"21a0f41b-5c48-4141-8e05-12abffd57201","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net"},{"pipelineID":"2d7a4ee1-4f84-4877-a160-2f4ca6118c59","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net"}],"containers":2,"openContainers":3,"leaderCount":2,"version":"1.3.0-SNAPSHOT","setupTime":1663798687396,"revision":"1a6b4d2d6f2cb34c8d94a76c2a087f78f8cef9be","buildDate":"2022-09-21T21:55Z","layoutVersion":4,"networkLocation":"/rack2"},{"uuid":"a1c9568a-ee85-4ed0-964b-d705c45d6613","hostname":"ozone-topology_datanode_4_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1663798840230,"storageReport":{"capacity":89297309696,"used":8196,"remaining":31733526528},"pipelines":[{"pipelineID":"64c10f3a-5412-471b-a4e3-4fe4f8d1f103","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net"},{"pipelineID":"7e18fd9c-14e2-4bf5-bb3a-b4b60a0a158d","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net"},{"pipelineID":"24e4bee2-1d4b-4767-b943-eb2bd0248baf","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net"}],"containers":1,"openContainers":1,"leaderCount":2,"version":"1.3.0-SNAPSHOT","setupTime":1663798688542,"revision":"1a6b4d2d6f2cb34c8d94a76c2a087f78f8cef9be","buildDate":"2022-09-21T21:55Z","layoutVersion":4,"networkLocation":"/rack2"},{"uuid":"92fbaa6a-1968-4b88-919e-308fb0592db5","hostname":"ozone-topology_datanode_2_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1663798828776,"storageReport":{"capacity":89297309696,"used":14336,"remaining":31777808384},"pipelines":[{"pipelineID":"d02a24c8-b30f-4cf5-a8e2-388a3e169a12","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net"},{"pipelineID":"24e4bee2-1d4b-4767-b943-eb2bd0248baf","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net"},{"pipelineID":"2d7a4ee1-4f84-4877-a160-2f4ca6118c59","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net"}],"containers":1,"openContainers":1,"leaderCount":2,"version":"1.3.0-SNAPSHOT","setupTime":1663798689640,"revision":"1a6b4d2d6f2cb34c8d94a76c2a087f78f8cef9be","buildDate":"2022-09-21T21:55Z","layoutVersion":4,"networkLocation":"/rack1"},{"uuid":"87a9df8b-1d94-42be-92f8-36527ad58b88","hostname":"ozone-topology_datanode_1_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1663798840504,"storageReport":{"capacity":89297309696,"used":8196,"remaining":31733526528},"pipelines":[{"pipelineID":"8dbf37e1-6621-4fcf-aecf-85b309b1219c","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net"},{"pipelineID":"7e18fd9c-14e2-4bf5-bb3a-b4b60a0a158d","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net"},{"pipelineID":"24e4bee2-1d4b-4767-b943-eb2bd0248baf","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net"}],"containers":1,"openContainers":1,"leaderCount":1,"version":"1.3.0-SNAPSHOT","setupTime":1663798689051,"revision":"1a6b4d2d6f2cb34c8d94a76c2a087f78f8cef9be","buildDate":"2022-09-21T21:55Z","layoutVersion":4,"networkLocation":"/rack1"}]}</msg>
<status status="PASS" starttime="20220921 22:20:50.190" endtime="20220921 22:20:50.191"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220921 22:20:50.191" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220921 22:20:50.191" endtime="20220921 22:20:50.191"/>
</kw>
<status status="PASS" starttime="20220921 22:20:50.151" endtime="20220921 22:20:50.192"/>
</kw>
<msg timestamp="20220921 22:20:50.192" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220921 22:20:50.151" endtime="20220921 22:20:50.192"/>
</kw>
<msg timestamp="20220921 22:20:50.193" level="INFO">${result} = {"totalCount":6,"datanodes":[{"uuid":"378f0842-85de-4b4e-acb7-157680d79969","hostname":"ozone-topology_datanode_5_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1663798...</msg>
<status status="PASS" starttime="20220921 22:20:50.150" endtime="20220921 22:20:50.193"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanodes</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220921 22:20:50.193" endtime="20220921 22:20:50.193"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220921 22:20:50.193" endtime="20220921 22:20:50.194"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220921 22:20:50.194" endtime="20220921 22:20:50.194"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220921 22:20:50.194" endtime="20220921 22:20:50.195"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/pipelines</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220921 22:20:50.198" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/pipelines 2&gt;&amp;1'.</msg>
<msg timestamp="20220921 22:20:50.220" level="INFO">${rc} = 0</msg>
<msg timestamp="20220921 22:20:50.220" level="INFO">${output} = {"totalCount":10,"pipelines":[{"pipelineId":"8dbf37e1-6621-4fcf-aecf-85b309b1219c","status":"OPEN","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net","datanodes":["ozone-topology_datanode_1...</msg>
<status status="PASS" starttime="20220921 22:20:50.197" endtime="20220921 22:20:50.220"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220921 22:20:50.221" level="INFO">{"totalCount":10,"pipelines":[{"pipelineId":"8dbf37e1-6621-4fcf-aecf-85b309b1219c","status":"OPEN","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net","datanodes":["ozone-topology_datanode_1_1.ozone-topology_net"],"lastLeaderElection":0,"duration":111824,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"d02a24c8-b30f-4cf5-a8e2-388a3e169a12","status":"OPEN","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net","datanodes":["ozone-topology_datanode_2_1.ozone-topology_net"],"lastLeaderElection":0,"duration":111837,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"df0aedf4-cb16-4755-ad54-36172fbc7484","status":"OPEN","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net","datanodes":["ozone-topology_datanode_5_1.ozone-topology_net"],"lastLeaderElection":0,"duration":112707,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"fd05e5b3-26b9-43d7-ab95-690401e496eb","status":"OPEN","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net","datanodes":["ozone-topology_datanode_3_1.ozone-topology_net"],"lastLeaderElection":0,"duration":111947,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"df4c1902-e717-4a4c-89f2-b80932e56b7d","status":"OPEN","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net","datanodes":["ozone-topology_datanode_5_1.ozone-topology_net","ozone-topology_datanode_3_1.ozone-topology_net","ozone-topology_datanode_6_1.ozone-topology_net"],"lastLeaderElection":0,"duration":111887,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"THREE","containers":1},{"pipelineId":"64c10f3a-5412-471b-a4e3-4fe4f8d1f103","status":"OPEN","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net","datanodes":["ozone-topology_datanode_4_1.ozone-topology_net"],"lastLeaderElection":0,"duration":111870,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"7e18fd9c-14e2-4bf5-bb3a-b4b60a0a158d","status":"OPEN","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net","datanodes":["ozone-topology_datanode_3_1.ozone-topology_net","ozone-topology_datanode_4_1.ozone-topology_net","ozone-topology_datanode_1_1.ozone-topology_net"],"lastLeaderElection":0,"duration":111928,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"THREE","containers":1},{"pipelineId":"21a0f41b-5c48-4141-8e05-12abffd57201","status":"OPEN","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net","datanodes":["ozone-topology_datanode_6_1.ozone-topology_net"],"lastLeaderElection":0,"duration":111900,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"24e4bee2-1d4b-4767-b943-eb2bd0248baf","status":"OPEN","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net","datanodes":["ozone-topology_datanode_4_1.ozone-topology_net","ozone-topology_datanode_2_1.ozone-topology_net","ozone-topology_datanode_1_1.ozone-topology_net"],"lastLeaderElection":0,"duration":111860,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"THREE","containers":0},{"pipelineId":"2d7a4ee1-4f84-4877-a160-2f4ca6118c59","status":"OPEN","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net","datanodes":["ozone-topology_datanode_5_1.ozone-topology_net","ozone-topology_datanode_2_1.ozone-topology_net","ozone-topology_datanode_6_1.ozone-topology_net"],"lastLeaderElection":0,"duration":111977,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"THREE","containers":1}]}</msg>
<status status="PASS" starttime="20220921 22:20:50.221" endtime="20220921 22:20:50.221"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220921 22:20:50.222" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220921 22:20:50.221" endtime="20220921 22:20:50.222"/>
</kw>
<status status="PASS" starttime="20220921 22:20:50.196" endtime="20220921 22:20:50.222"/>
</kw>
<msg timestamp="20220921 22:20:50.222" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220921 22:20:50.196" endtime="20220921 22:20:50.223"/>
</kw>
<msg timestamp="20220921 22:20:50.223" level="INFO">${result} = {"totalCount":10,"pipelines":[{"pipelineId":"8dbf37e1-6621-4fcf-aecf-85b309b1219c","status":"OPEN","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net","datanodes":["ozone-topology_datanode_1...</msg>
<status status="PASS" starttime="20220921 22:20:50.195" endtime="20220921 22:20:50.223"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>pipelines</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220921 22:20:50.224" endtime="20220921 22:20:50.224"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220921 22:20:50.224" endtime="20220921 22:20:50.225"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OPEN</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220921 22:20:50.225" endtime="20220921 22:20:50.225"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220921 22:20:50.225" endtime="20220921 22:20:50.226"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220921 22:20:50.226" endtime="20220921 22:20:50.226"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220921 22:20:50.226" endtime="20220921 22:20:50.227"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/clusterState</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220921 22:20:50.230" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20220921 22:20:50.253" level="INFO">${rc} = 0</msg>
<msg timestamp="20220921 22:20:50.253" level="INFO">${output} = {"pipelines":10,"totalDatanodes":6,"healthyDatanodes":6,"storageReport":{"capacity":535783858176,"used":85021,"remaining":190445441024},"containers":3,"volumes":3,"buckets":2,"keys":11}</msg>
<status status="PASS" starttime="20220921 22:20:50.228" endtime="20220921 22:20:50.254"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220921 22:20:50.255" level="INFO">{"pipelines":10,"totalDatanodes":6,"healthyDatanodes":6,"storageReport":{"capacity":535783858176,"used":85021,"remaining":190445441024},"containers":3,"volumes":3,"buckets":2,"keys":11}</msg>
<status status="PASS" starttime="20220921 22:20:50.254" endtime="20220921 22:20:50.255"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220921 22:20:50.255" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220921 22:20:50.255" endtime="20220921 22:20:50.257"/>
</kw>
<status status="PASS" starttime="20220921 22:20:50.227" endtime="20220921 22:20:50.257"/>
</kw>
<msg timestamp="20220921 22:20:50.257" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220921 22:20:50.227" endtime="20220921 22:20:50.259"/>
</kw>
<msg timestamp="20220921 22:20:50.259" level="INFO">${result} = {"pipelines":10,"totalDatanodes":6,"healthyDatanodes":6,"storageReport":{"capacity":535783858176,"used":85021,"remaining":190445441024},"containers":3,"volumes":3,"buckets":2,"keys":11}</msg>
<status status="PASS" starttime="20220921 22:20:50.227" endtime="20220921 22:20:50.259"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"totalDatanodes\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220921 22:20:50.259" endtime="20220921 22:20:50.260"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"healthyDatanodes\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220921 22:20:50.260" endtime="20220921 22:20:50.260"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"pipelines\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220921 22:20:50.260" endtime="20220921 22:20:50.261"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers/1/replicaHistory</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220921 22:20:50.265" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers/1/replicaHistory 2&gt;&amp;1'.</msg>
<msg timestamp="20220921 22:20:50.283" level="INFO">${rc} = 0</msg>
<msg timestamp="20220921 22:20:50.283" level="INFO">${output} = [{"containerId":1,"datanodeUuid":"378f0842-85de-4b4e-acb7-157680d79969","datanodeHost":"ozone-topology_datanode_5_1.ozone-topology_net","firstSeenTime":1663798769054,"lastSeenTime":1663798769054,"last...</msg>
<status status="PASS" starttime="20220921 22:20:50.262" endtime="20220921 22:20:50.284"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220921 22:20:50.285" level="INFO">[{"containerId":1,"datanodeUuid":"378f0842-85de-4b4e-acb7-157680d79969","datanodeHost":"ozone-topology_datanode_5_1.ozone-topology_net","firstSeenTime":1663798769054,"lastSeenTime":1663798769054,"lastBcsId":0},{"containerId":1,"datanodeUuid":"a63446fc-af68-45aa-a018-871ba91f2233","datanodeHost":"ozone-topology_datanode_6_1.ozone-topology_net","firstSeenTime":1663798768839,"lastSeenTime":1663798768839,"lastBcsId":0},{"containerId":1,"datanodeUuid":"92fbaa6a-1968-4b88-919e-308fb0592db5","datanodeHost":"ozone-topology_datanode_2_1.ozone-topology_net","firstSeenTime":1663798769022,"lastSeenTime":1663798769022,"lastBcsId":0}]</msg>
<status status="PASS" starttime="20220921 22:20:50.284" endtime="20220921 22:20:50.285"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220921 22:20:50.289" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220921 22:20:50.285" endtime="20220921 22:20:50.289"/>
</kw>
<status status="PASS" starttime="20220921 22:20:50.262" endtime="20220921 22:20:50.289"/>
</kw>
<msg timestamp="20220921 22:20:50.289" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220921 22:20:50.262" endtime="20220921 22:20:50.289"/>
</kw>
<msg timestamp="20220921 22:20:50.290" level="INFO">${result} = [{"containerId":1,"datanodeUuid":"378f0842-85de-4b4e-acb7-157680d79969","datanodeHost":"ozone-topology_datanode_5_1.ozone-topology_net","firstSeenTime":1663798769054,"lastSeenTime":1663798769054,"last...</msg>
<status status="PASS" starttime="20220921 22:20:50.261" endtime="20220921 22:20:50.290"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"containerId\":1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220921 22:20:50.290" endtime="20220921 22:20:50.290"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220921 22:20:50.150" endtime="20220921 22:20:50.290"/>
</test>
<test id="s1-s2-s1-t3" name="Check if Recon Web UI is up" line="88">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220921 22:20:50.292" endtime="20220921 22:20:50.293"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${ENDPOINT_URL}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220921 22:20:50.297" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20220921 22:20:50.315" level="INFO">${rc} = 0</msg>
<msg timestamp="20220921 22:20:50.315" level="INFO">${output} = &lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" ...</msg>
<status status="PASS" starttime="20220921 22:20:50.295" endtime="20220921 22:20:50.315"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220921 22:20:50.317" level="INFO">&lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" content="#000000"/&gt;&lt;link rel="manifest" href="/manifest.json"/&gt;&lt;link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto:300,400,500"/&gt;&lt;title&gt;Ozone Recon&lt;/title&gt;&lt;link href="/static/css/2.7465223f.chunk.css" rel="stylesheet"&gt;&lt;link href="/static/css/main.2dcb153a.chunk.css" rel="stylesheet"&gt;&lt;/head&gt;&lt;body&gt;&lt;noscript&gt;You need to enable JavaScript to run this app.&lt;/noscript&gt;&lt;div id="root"&gt;&lt;/div&gt;&lt;script&gt;!function(e){function r(r){for(var n,l,f=r[0],i=r[1],a=r[2],p=0,s=[];p&lt;f.length;p++)l=f[p],Object.prototype.hasOwnProperty.call(o,l)&amp;&amp;o[l]&amp;&amp;s.push(o[l][0]),o[l]=0;for(n in i)Object.prototype.hasOwnProperty.call(i,n)&amp;&amp;(e[n]=i[n]);for(c&amp;&amp;c(r);s.length;)s.shift()();return u.push.apply(u,a||[]),t()}function t(){for(var e,r=0;r&lt;u.length;r++){for(var t=u[r],n=!0,f=1;f&lt;t.length;f++){var i=t[f];0!==o[i]&amp;&amp;(n=!1)}n&amp;&amp;(u.splice(r--,1),e=l(l.s=t[0]))}return e}var n={},o={1:0},u=[];function l(r){if(n[r])return n[r].exports;var t=n[r]={i:r,l:!1,exports:{}};return e[r].call(t.exports,t,t.exports,l),t.l=!0,t.exports}l.m=e,l.c=n,l.d=function(e,r,t){l.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:t})},l.r=function(e){"undefined"!=typeof Symbol&amp;&amp;Symbol.toStringTag&amp;&amp;Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},l.t=function(e,r){if(1&amp;r&amp;&amp;(e=l(e)),8&amp;r)return e;if(4&amp;r&amp;&amp;"object"==typeof e&amp;&amp;e&amp;&amp;e.__esModule)return e;var t=Object.create(null);if(l.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&amp;r&amp;&amp;"string"!=typeof e)for(var n in e)l.d(t,n,function(r){return e[r]}.bind(null,n));return t},l.n=function(e){var r=e&amp;&amp;e.__esModule?function(){return e.default}:function(){return e};return l.d(r,"a",r),r},l.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},l.p="/";var f=this["webpackJsonpozone-recon"]=this["webpackJsonpozone-recon"]||[],i=f.push.bind(f);f.push=r,f=f.slice();for(var a=0;a&lt;f.length;a++)r(f[a]);var c=i;t()}([])&lt;/script&gt;&lt;script src="/static/js/2.9f2d5a7d.chunk.js"&gt;&lt;/script&gt;&lt;script src="/static/js/main.a9086444.chunk.js"&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;</msg>
<status status="PASS" starttime="20220921 22:20:50.316" endtime="20220921 22:20:50.317"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220921 22:20:50.318" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220921 22:20:50.317" endtime="20220921 22:20:50.318"/>
</kw>
<status status="PASS" starttime="20220921 22:20:50.294" endtime="20220921 22:20:50.318"/>
</kw>
<msg timestamp="20220921 22:20:50.318" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220921 22:20:50.293" endtime="20220921 22:20:50.318"/>
</kw>
<msg timestamp="20220921 22:20:50.319" level="INFO">${result} = &lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" ...</msg>
<status status="PASS" starttime="20220921 22:20:50.293" endtime="20220921 22:20:50.319"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Ozone Recon</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220921 22:20:50.319" endtime="20220921 22:20:50.320"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220921 22:20:50.292" endtime="20220921 22:20:50.320"/>
</test>
<test id="s1-s2-s1-t4" name="Check web UI access" line="93">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220921 22:20:50.328" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20220921 22:20:50.332" level="INFO">${rc} = 0</msg>
<msg timestamp="20220921 22:20:50.332" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20220921 22:20:50.325" endtime="20220921 22:20:50.332"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220921 22:20:50.333" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20220921 22:20:50.333" endtime="20220921 22:20:50.333"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220921 22:20:50.334" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220921 22:20:50.333" endtime="20220921 22:20:50.334"/>
</kw>
<status status="PASS" starttime="20220921 22:20:50.325" endtime="20220921 22:20:50.334"/>
</kw>
<msg timestamp="20220921 22:20:50.335" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220921 22:20:50.324" endtime="20220921 22:20:50.335"/>
</kw>
<status status="PASS" starttime="20220921 22:20:50.324" endtime="20220921 22:20:50.335"/>
</kw>
<kw name="Check http return code">
<arg>${ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220921 22:20:50.340" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20220921 22:20:50.355" level="INFO">${rc} = 0</msg>
<msg timestamp="20220921 22:20:50.355" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20220921 22:20:50.337" endtime="20220921 22:20:50.355"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220921 22:20:50.356" level="INFO">200</msg>
<status status="PASS" starttime="20220921 22:20:50.355" endtime="20220921 22:20:50.356"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220921 22:20:50.357" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220921 22:20:50.356" endtime="20220921 22:20:50.357"/>
</kw>
<status status="PASS" starttime="20220921 22:20:50.337" endtime="20220921 22:20:50.358"/>
</kw>
<msg timestamp="20220921 22:20:50.358" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220921 22:20:50.336" endtime="20220921 22:20:50.359"/>
</kw>
<msg timestamp="20220921 22:20:50.359" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20220921 22:20:50.336" endtime="20220921 22:20:50.359"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220921 22:20:50.359" endtime="20220921 22:20:50.359"/>
</kw>
<status status="NOT RUN" starttime="20220921 22:20:50.359" endtime="20220921 22:20:50.359"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220921 22:20:50.360" endtime="20220921 22:20:50.360"/>
</kw>
<status status="PASS" starttime="20220921 22:20:50.360" endtime="20220921 22:20:50.360"/>
</branch>
<status status="PASS" starttime="20220921 22:20:50.359" endtime="20220921 22:20:50.360"/>
</if>
<status status="PASS" starttime="20220921 22:20:50.335" endtime="20220921 22:20:50.360"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220921 22:20:50.361" endtime="20220921 22:20:50.361"/>
</kw>
<status status="PASS" starttime="20220921 22:20:50.360" endtime="20220921 22:20:50.361"/>
</kw>
<kw name="Check http return code">
<arg>${ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220921 22:20:50.366" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20220921 22:20:50.381" level="INFO">${rc} = 0</msg>
<msg timestamp="20220921 22:20:50.381" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20220921 22:20:50.363" endtime="20220921 22:20:50.381"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220921 22:20:50.382" level="INFO">200</msg>
<status status="PASS" starttime="20220921 22:20:50.381" endtime="20220921 22:20:50.382"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220921 22:20:50.383" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220921 22:20:50.382" endtime="20220921 22:20:50.383"/>
</kw>
<status status="PASS" starttime="20220921 22:20:50.363" endtime="20220921 22:20:50.387"/>
</kw>
<msg timestamp="20220921 22:20:50.387" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220921 22:20:50.362" endtime="20220921 22:20:50.388"/>
</kw>
<msg timestamp="20220921 22:20:50.388" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20220921 22:20:50.362" endtime="20220921 22:20:50.388"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220921 22:20:50.389" endtime="20220921 22:20:50.389"/>
</kw>
<status status="NOT RUN" starttime="20220921 22:20:50.389" endtime="20220921 22:20:50.389"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220921 22:20:50.389" endtime="20220921 22:20:50.389"/>
</kw>
<status status="PASS" starttime="20220921 22:20:50.389" endtime="20220921 22:20:50.390"/>
</branch>
<status status="PASS" starttime="20220921 22:20:50.388" endtime="20220921 22:20:50.390"/>
</if>
<status status="PASS" starttime="20220921 22:20:50.361" endtime="20220921 22:20:50.390"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220921 22:20:50.323" endtime="20220921 22:20:50.390"/>
</test>
<test id="s1-s2-s1-t5" name="Check admin only api access" line="101">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220921 22:20:50.398" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20220921 22:20:50.402" level="INFO">${rc} = 0</msg>
<msg timestamp="20220921 22:20:50.402" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20220921 22:20:50.395" endtime="20220921 22:20:50.402"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220921 22:20:50.403" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20220921 22:20:50.403" endtime="20220921 22:20:50.403"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220921 22:20:50.404" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220921 22:20:50.404" endtime="20220921 22:20:50.404"/>
</kw>
<status status="PASS" starttime="20220921 22:20:50.394" endtime="20220921 22:20:50.404"/>
</kw>
<msg timestamp="20220921 22:20:50.404" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220921 22:20:50.394" endtime="20220921 22:20:50.405"/>
</kw>
<status status="PASS" starttime="20220921 22:20:50.393" endtime="20220921 22:20:50.405"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220921 22:20:50.410" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20220921 22:20:50.427" level="INFO">${rc} = 0</msg>
<msg timestamp="20220921 22:20:50.427" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20220921 22:20:50.407" endtime="20220921 22:20:50.427"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220921 22:20:50.428" level="INFO">200</msg>
<status status="PASS" starttime="20220921 22:20:50.427" endtime="20220921 22:20:50.428"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220921 22:20:50.429" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220921 22:20:50.428" endtime="20220921 22:20:50.429"/>
</kw>
<status status="PASS" starttime="20220921 22:20:50.407" endtime="20220921 22:20:50.429"/>
</kw>
<msg timestamp="20220921 22:20:50.429" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220921 22:20:50.407" endtime="20220921 22:20:50.430"/>
</kw>
<msg timestamp="20220921 22:20:50.430" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20220921 22:20:50.406" endtime="20220921 22:20:50.430"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220921 22:20:50.431" endtime="20220921 22:20:50.431"/>
</kw>
<status status="NOT RUN" starttime="20220921 22:20:50.430" endtime="20220921 22:20:50.431"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220921 22:20:50.431" endtime="20220921 22:20:50.431"/>
</kw>
<status status="PASS" starttime="20220921 22:20:50.431" endtime="20220921 22:20:50.431"/>
</branch>
<status status="PASS" starttime="20220921 22:20:50.430" endtime="20220921 22:20:50.431"/>
</if>
<status status="PASS" starttime="20220921 22:20:50.405" endtime="20220921 22:20:50.432"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220921 22:20:50.432" endtime="20220921 22:20:50.433"/>
</kw>
<status status="PASS" starttime="20220921 22:20:50.432" endtime="20220921 22:20:50.433"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220921 22:20:50.437" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20220921 22:20:50.452" level="INFO">${rc} = 0</msg>
<msg timestamp="20220921 22:20:50.452" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20220921 22:20:50.435" endtime="20220921 22:20:50.452"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220921 22:20:50.453" level="INFO">200</msg>
<status status="PASS" starttime="20220921 22:20:50.452" endtime="20220921 22:20:50.453"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220921 22:20:50.453" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220921 22:20:50.453" endtime="20220921 22:20:50.454"/>
</kw>
<status status="PASS" starttime="20220921 22:20:50.434" endtime="20220921 22:20:50.454"/>
</kw>
<msg timestamp="20220921 22:20:50.454" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220921 22:20:50.434" endtime="20220921 22:20:50.454"/>
</kw>
<msg timestamp="20220921 22:20:50.455" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20220921 22:20:50.433" endtime="20220921 22:20:50.455"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220921 22:20:50.456" endtime="20220921 22:20:50.456"/>
</kw>
<status status="NOT RUN" starttime="20220921 22:20:50.455" endtime="20220921 22:20:50.456"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220921 22:20:50.456" endtime="20220921 22:20:50.456"/>
</kw>
<status status="PASS" starttime="20220921 22:20:50.456" endtime="20220921 22:20:50.456"/>
</branch>
<status status="PASS" starttime="20220921 22:20:50.455" endtime="20220921 22:20:50.456"/>
</if>
<status status="PASS" starttime="20220921 22:20:50.433" endtime="20220921 22:20:50.457"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220921 22:20:50.457" endtime="20220921 22:20:50.457"/>
</kw>
<status status="PASS" starttime="20220921 22:20:50.457" endtime="20220921 22:20:50.458"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220921 22:20:50.461" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20220921 22:20:50.479" level="INFO">${rc} = 0</msg>
<msg timestamp="20220921 22:20:50.480" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20220921 22:20:50.460" endtime="20220921 22:20:50.480"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220921 22:20:50.481" level="INFO">200</msg>
<status status="PASS" starttime="20220921 22:20:50.480" endtime="20220921 22:20:50.481"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220921 22:20:50.481" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220921 22:20:50.481" endtime="20220921 22:20:50.481"/>
</kw>
<status status="PASS" starttime="20220921 22:20:50.459" endtime="20220921 22:20:50.481"/>
</kw>
<msg timestamp="20220921 22:20:50.482" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220921 22:20:50.459" endtime="20220921 22:20:50.482"/>
</kw>
<msg timestamp="20220921 22:20:50.482" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20220921 22:20:50.458" endtime="20220921 22:20:50.482"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220921 22:20:50.483" endtime="20220921 22:20:50.483"/>
</kw>
<status status="NOT RUN" starttime="20220921 22:20:50.482" endtime="20220921 22:20:50.483"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220921 22:20:50.483" endtime="20220921 22:20:50.485"/>
</kw>
<status status="PASS" starttime="20220921 22:20:50.483" endtime="20220921 22:20:50.485"/>
</branch>
<status status="PASS" starttime="20220921 22:20:50.482" endtime="20220921 22:20:50.485"/>
</if>
<status status="PASS" starttime="20220921 22:20:50.458" endtime="20220921 22:20:50.486"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220921 22:20:50.486" endtime="20220921 22:20:50.487"/>
</kw>
<status status="PASS" starttime="20220921 22:20:50.486" endtime="20220921 22:20:50.487"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220921 22:20:50.492" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20220921 22:20:50.512" level="INFO">${rc} = 0</msg>
<msg timestamp="20220921 22:20:50.512" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20220921 22:20:50.490" endtime="20220921 22:20:50.512"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220921 22:20:50.513" level="INFO">200</msg>
<status status="PASS" starttime="20220921 22:20:50.512" endtime="20220921 22:20:50.513"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220921 22:20:50.514" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220921 22:20:50.513" endtime="20220921 22:20:50.514"/>
</kw>
<status status="PASS" starttime="20220921 22:20:50.489" endtime="20220921 22:20:50.514"/>
</kw>
<msg timestamp="20220921 22:20:50.514" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220921 22:20:50.488" endtime="20220921 22:20:50.515"/>
</kw>
<msg timestamp="20220921 22:20:50.515" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20220921 22:20:50.488" endtime="20220921 22:20:50.515"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220921 22:20:50.516" endtime="20220921 22:20:50.516"/>
</kw>
<status status="NOT RUN" starttime="20220921 22:20:50.516" endtime="20220921 22:20:50.516"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220921 22:20:50.516" endtime="20220921 22:20:50.516"/>
</kw>
<status status="PASS" starttime="20220921 22:20:50.516" endtime="20220921 22:20:50.517"/>
</branch>
<status status="PASS" starttime="20220921 22:20:50.515" endtime="20220921 22:20:50.517"/>
</if>
<status status="PASS" starttime="20220921 22:20:50.487" endtime="20220921 22:20:50.517"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220921 22:20:50.392" endtime="20220921 22:20:50.517"/>
</test>
<test id="s1-s2-s1-t6" name="Check unhealthy, (admin) api access" line="114">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220921 22:20:50.523" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20220921 22:20:50.527" level="INFO">${rc} = 0</msg>
<msg timestamp="20220921 22:20:50.527" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20220921 22:20:50.520" endtime="20220921 22:20:50.527"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220921 22:20:50.528" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20220921 22:20:50.527" endtime="20220921 22:20:50.528"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220921 22:20:50.529" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220921 22:20:50.528" endtime="20220921 22:20:50.529"/>
</kw>
<status status="PASS" starttime="20220921 22:20:50.520" endtime="20220921 22:20:50.529"/>
</kw>
<msg timestamp="20220921 22:20:50.529" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220921 22:20:50.519" endtime="20220921 22:20:50.530"/>
</kw>
<status status="PASS" starttime="20220921 22:20:50.518" endtime="20220921 22:20:50.530"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220921 22:20:50.539" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20220921 22:20:50.586" level="INFO">${rc} = 0</msg>
<msg timestamp="20220921 22:20:50.586" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20220921 22:20:50.532" endtime="20220921 22:20:50.587"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220921 22:20:50.588" level="INFO">200</msg>
<status status="PASS" starttime="20220921 22:20:50.587" endtime="20220921 22:20:50.588"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220921 22:20:50.589" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220921 22:20:50.588" endtime="20220921 22:20:50.590"/>
</kw>
<status status="PASS" starttime="20220921 22:20:50.531" endtime="20220921 22:20:50.590"/>
</kw>
<msg timestamp="20220921 22:20:50.591" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220921 22:20:50.531" endtime="20220921 22:20:50.591"/>
</kw>
<msg timestamp="20220921 22:20:50.592" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20220921 22:20:50.531" endtime="20220921 22:20:50.592"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220921 22:20:50.592" endtime="20220921 22:20:50.592"/>
</kw>
<status status="NOT RUN" starttime="20220921 22:20:50.592" endtime="20220921 22:20:50.592"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220921 22:20:50.593" endtime="20220921 22:20:50.593"/>
</kw>
<status status="PASS" starttime="20220921 22:20:50.592" endtime="20220921 22:20:50.593"/>
</branch>
<status status="PASS" starttime="20220921 22:20:50.592" endtime="20220921 22:20:50.593"/>
</if>
<status status="PASS" starttime="20220921 22:20:50.530" endtime="20220921 22:20:50.593"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220921 22:20:50.594" endtime="20220921 22:20:50.594"/>
</kw>
<status status="PASS" starttime="20220921 22:20:50.593" endtime="20220921 22:20:50.594"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220921 22:20:50.599" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20220921 22:20:50.615" level="INFO">${rc} = 0</msg>
<msg timestamp="20220921 22:20:50.615" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20220921 22:20:50.596" endtime="20220921 22:20:50.616"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220921 22:20:50.617" level="INFO">200</msg>
<status status="PASS" starttime="20220921 22:20:50.616" endtime="20220921 22:20:50.617"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220921 22:20:50.617" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220921 22:20:50.617" endtime="20220921 22:20:50.618"/>
</kw>
<status status="PASS" starttime="20220921 22:20:50.596" endtime="20220921 22:20:50.618"/>
</kw>
<msg timestamp="20220921 22:20:50.618" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220921 22:20:50.595" endtime="20220921 22:20:50.619"/>
</kw>
<msg timestamp="20220921 22:20:50.619" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20220921 22:20:50.595" endtime="20220921 22:20:50.619"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220921 22:20:50.619" endtime="20220921 22:20:50.620"/>
</kw>
<status status="NOT RUN" starttime="20220921 22:20:50.619" endtime="20220921 22:20:50.620"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220921 22:20:50.620" endtime="20220921 22:20:50.620"/>
</kw>
<status status="PASS" starttime="20220921 22:20:50.620" endtime="20220921 22:20:50.620"/>
</branch>
<status status="PASS" starttime="20220921 22:20:50.619" endtime="20220921 22:20:50.620"/>
</if>
<status status="PASS" starttime="20220921 22:20:50.594" endtime="20220921 22:20:50.620"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220921 22:20:50.621" endtime="20220921 22:20:50.621"/>
</kw>
<status status="PASS" starttime="20220921 22:20:50.621" endtime="20220921 22:20:50.622"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220921 22:20:50.626" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20220921 22:20:50.644" level="INFO">${rc} = 0</msg>
<msg timestamp="20220921 22:20:50.644" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20220921 22:20:50.624" endtime="20220921 22:20:50.644"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220921 22:20:50.645" level="INFO">200</msg>
<status status="PASS" starttime="20220921 22:20:50.644" endtime="20220921 22:20:50.645"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220921 22:20:50.646" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220921 22:20:50.645" endtime="20220921 22:20:50.646"/>
</kw>
<status status="PASS" starttime="20220921 22:20:50.623" endtime="20220921 22:20:50.646"/>
</kw>
<msg timestamp="20220921 22:20:50.646" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220921 22:20:50.623" endtime="20220921 22:20:50.647"/>
</kw>
<msg timestamp="20220921 22:20:50.647" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20220921 22:20:50.622" endtime="20220921 22:20:50.647"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220921 22:20:50.647" endtime="20220921 22:20:50.647"/>
</kw>
<status status="NOT RUN" starttime="20220921 22:20:50.647" endtime="20220921 22:20:50.647"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220921 22:20:50.648" endtime="20220921 22:20:50.648"/>
</kw>
<status status="PASS" starttime="20220921 22:20:50.648" endtime="20220921 22:20:50.648"/>
</branch>
<status status="PASS" starttime="20220921 22:20:50.647" endtime="20220921 22:20:50.648"/>
</if>
<status status="PASS" starttime="20220921 22:20:50.622" endtime="20220921 22:20:50.648"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220921 22:20:50.649" endtime="20220921 22:20:50.649"/>
</kw>
<status status="PASS" starttime="20220921 22:20:50.649" endtime="20220921 22:20:50.649"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220921 22:20:50.654" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20220921 22:20:50.670" level="INFO">${rc} = 0</msg>
<msg timestamp="20220921 22:20:50.670" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20220921 22:20:50.652" endtime="20220921 22:20:50.670"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220921 22:20:50.673" level="INFO">200</msg>
<status status="PASS" starttime="20220921 22:20:50.672" endtime="20220921 22:20:50.673"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220921 22:20:50.673" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220921 22:20:50.673" endtime="20220921 22:20:50.673"/>
</kw>
<status status="PASS" starttime="20220921 22:20:50.651" endtime="20220921 22:20:50.674"/>
</kw>
<msg timestamp="20220921 22:20:50.674" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220921 22:20:50.651" endtime="20220921 22:20:50.674"/>
</kw>
<msg timestamp="20220921 22:20:50.675" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20220921 22:20:50.650" endtime="20220921 22:20:50.675"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220921 22:20:50.675" endtime="20220921 22:20:50.675"/>
</kw>
<status status="NOT RUN" starttime="20220921 22:20:50.675" endtime="20220921 22:20:50.675"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220921 22:20:50.676" endtime="20220921 22:20:50.676"/>
</kw>
<status status="PASS" starttime="20220921 22:20:50.675" endtime="20220921 22:20:50.676"/>
</branch>
<status status="PASS" starttime="20220921 22:20:50.675" endtime="20220921 22:20:50.676"/>
</if>
<status status="PASS" starttime="20220921 22:20:50.650" endtime="20220921 22:20:50.676"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220921 22:20:50.518" endtime="20220921 22:20:50.677"/>
</test>
<test id="s1-s2-s1-t7" name="Check normal api access" line="127">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220921 22:20:50.682" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20220921 22:20:50.686" level="INFO">${rc} = 0</msg>
<msg timestamp="20220921 22:20:50.686" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20220921 22:20:50.680" endtime="20220921 22:20:50.686"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220921 22:20:50.687" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20220921 22:20:50.686" endtime="20220921 22:20:50.687"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220921 22:20:50.687" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220921 22:20:50.687" endtime="20220921 22:20:50.688"/>
</kw>
<status status="PASS" starttime="20220921 22:20:50.679" endtime="20220921 22:20:50.688"/>
</kw>
<msg timestamp="20220921 22:20:50.688" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220921 22:20:50.679" endtime="20220921 22:20:50.689"/>
</kw>
<status status="PASS" starttime="20220921 22:20:50.678" endtime="20220921 22:20:50.689"/>
</kw>
<kw name="Check http return code">
<arg>${NON_ADMIN_API_ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220921 22:20:50.693" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20220921 22:20:50.712" level="INFO">${rc} = 0</msg>
<msg timestamp="20220921 22:20:50.712" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20220921 22:20:50.690" endtime="20220921 22:20:50.712"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220921 22:20:50.713" level="INFO">200</msg>
<status status="PASS" starttime="20220921 22:20:50.712" endtime="20220921 22:20:50.713"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220921 22:20:50.714" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220921 22:20:50.714" endtime="20220921 22:20:50.714"/>
</kw>
<status status="PASS" starttime="20220921 22:20:50.690" endtime="20220921 22:20:50.715"/>
</kw>
<msg timestamp="20220921 22:20:50.715" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220921 22:20:50.690" endtime="20220921 22:20:50.715"/>
</kw>
<msg timestamp="20220921 22:20:50.716" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20220921 22:20:50.689" endtime="20220921 22:20:50.716"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220921 22:20:50.716" endtime="20220921 22:20:50.716"/>
</kw>
<status status="NOT RUN" starttime="20220921 22:20:50.716" endtime="20220921 22:20:50.716"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220921 22:20:50.717" endtime="20220921 22:20:50.717"/>
</kw>
<status status="PASS" starttime="20220921 22:20:50.717" endtime="20220921 22:20:50.717"/>
</branch>
<status status="PASS" starttime="20220921 22:20:50.716" endtime="20220921 22:20:50.717"/>
</if>
<status status="PASS" starttime="20220921 22:20:50.689" endtime="20220921 22:20:50.717"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220921 22:20:50.718" endtime="20220921 22:20:50.718"/>
</kw>
<status status="PASS" starttime="20220921 22:20:50.717" endtime="20220921 22:20:50.718"/>
</kw>
<kw name="Check http return code">
<arg>${NON_ADMIN_API_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220921 22:20:50.722" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20220921 22:20:50.750" level="INFO">${rc} = 0</msg>
<msg timestamp="20220921 22:20:50.750" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20220921 22:20:50.720" endtime="20220921 22:20:50.750"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220921 22:20:50.752" level="INFO">200</msg>
<status status="PASS" starttime="20220921 22:20:50.751" endtime="20220921 22:20:50.752"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220921 22:20:50.752" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220921 22:20:50.752" endtime="20220921 22:20:50.752"/>
</kw>
<status status="PASS" starttime="20220921 22:20:50.720" endtime="20220921 22:20:50.753"/>
</kw>
<msg timestamp="20220921 22:20:50.753" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220921 22:20:50.719" endtime="20220921 22:20:50.753"/>
</kw>
<msg timestamp="20220921 22:20:50.753" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20220921 22:20:50.719" endtime="20220921 22:20:50.753"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220921 22:20:50.754" endtime="20220921 22:20:50.754"/>
</kw>
<status status="NOT RUN" starttime="20220921 22:20:50.754" endtime="20220921 22:20:50.754"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220921 22:20:50.754" endtime="20220921 22:20:50.754"/>
</kw>
<status status="PASS" starttime="20220921 22:20:50.754" endtime="20220921 22:20:50.754"/>
</branch>
<status status="PASS" starttime="20220921 22:20:50.753" endtime="20220921 22:20:50.755"/>
</if>
<status status="PASS" starttime="20220921 22:20:50.718" endtime="20220921 22:20:50.755"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220921 22:20:50.678" endtime="20220921 22:20:50.755"/>
</test>
<doc>Smoke test to start cluster with docker-compose environments.</doc>
<status status="PASS" starttime="20220921 22:20:04.397" endtime="20220921 22:20:50.756"/>
</suite>
<suite id="s1-s2-s2" name="Recon-Fso-Nssummary" source="/opt/hadoop/smoketest/recon/recon-fso-nssummary.robot">
<test id="s1-s2-s2-t1" name="Check volume creation" line="98">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220921 22:20:50.769" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20220921 22:20:50.772" level="INFO">${rc} = 0</msg>
<msg timestamp="20220921 22:20:50.772" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20220921 22:20:50.767" endtime="20220921 22:20:50.772"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220921 22:20:50.773" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20220921 22:20:50.773" endtime="20220921 22:20:50.773"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220921 22:20:50.774" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220921 22:20:50.774" endtime="20220921 22:20:50.774"/>
</kw>
<status status="PASS" starttime="20220921 22:20:50.766" endtime="20220921 22:20:50.774"/>
</kw>
<msg timestamp="20220921 22:20:50.774" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220921 22:20:50.766" endtime="20220921 22:20:50.775"/>
</kw>
<status status="PASS" starttime="20220921 22:20:50.766" endtime="20220921 22:20:50.775"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220921 22:20:50.776" endtime="20220921 22:20:50.776"/>
</kw>
<status status="PASS" starttime="20220921 22:20:50.775" endtime="20220921 22:20:50.776"/>
</kw>
<kw name="Create volume">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220921 22:20:50.777" level="INFO">${random} = wzzzx</msg>
<status status="PASS" starttime="20220921 22:20:50.777" endtime="20220921 22:20:50.777"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${VOLUME}</arg>
<arg>vol-${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220921 22:20:50.777" level="INFO">${VOLUME} = vol-wzzzx</msg>
<status status="PASS" starttime="20220921 22:20:50.777" endtime="20220921 22:20:50.778"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${VOLUME}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220921 22:20:50.780" level="INFO">Running command 'ozone sh volume create /vol-wzzzx 2&gt;&amp;1'.</msg>
<msg timestamp="20220921 22:20:54.214" level="INFO">${rc} = 0</msg>
<msg timestamp="20220921 22:20:54.214" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20220921 22:20:50.779" endtime="20220921 22:20:54.214"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220921 22:20:54.215" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20220921 22:20:54.214" endtime="20220921 22:20:54.216"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220921 22:20:54.216" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220921 22:20:54.216" endtime="20220921 22:20:54.216"/>
</kw>
<status status="PASS" starttime="20220921 22:20:50.778" endtime="20220921 22:20:54.217"/>
</kw>
<msg timestamp="20220921 22:20:54.217" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220921 22:20:50.778" endtime="20220921 22:20:54.217"/>
</kw>
<msg timestamp="20220921 22:20:54.217" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20220921 22:20:50.778" endtime="20220921 22:20:54.217"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220921 22:20:54.218" endtime="20220921 22:20:54.218"/>
</kw>
<status status="PASS" starttime="20220921 22:20:50.776" endtime="20220921 22:20:54.218"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220921 22:20:50.765" endtime="20220921 22:20:54.218"/>
</test>
<test id="s1-s2-s2-t2" name="Check bucket creation" line="103">
<kw name="Create bucket">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220921 22:20:54.221" level="INFO">${random} = jwsvu</msg>
<status status="PASS" starttime="20220921 22:20:54.220" endtime="20220921 22:20:54.221"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<arg>buc-${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220921 22:20:54.221" level="INFO">${BUCKET} = buc-jwsvu</msg>
<status status="PASS" starttime="20220921 22:20:54.221" endtime="20220921 22:20:54.221"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create -l FILE_SYSTEM_OPTIMIZED /${VOLUME}/${BUCKET}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220921 22:20:54.224" level="INFO">Running command 'ozone sh bucket create -l FILE_SYSTEM_OPTIMIZED /vol-wzzzx/buc-jwsvu 2&gt;&amp;1'.</msg>
<msg timestamp="20220921 22:20:57.726" level="INFO">${rc} = 0</msg>
<msg timestamp="20220921 22:20:57.726" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20220921 22:20:54.222" endtime="20220921 22:20:57.726"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220921 22:20:57.727" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20220921 22:20:57.726" endtime="20220921 22:20:57.727"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220921 22:20:57.728" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220921 22:20:57.728" endtime="20220921 22:20:57.728"/>
</kw>
<status status="PASS" starttime="20220921 22:20:54.222" endtime="20220921 22:20:57.729"/>
</kw>
<msg timestamp="20220921 22:20:57.729" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220921 22:20:54.222" endtime="20220921 22:20:57.729"/>
</kw>
<msg timestamp="20220921 22:20:57.730" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20220921 22:20:54.221" endtime="20220921 22:20:57.730"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220921 22:20:57.730" endtime="20220921 22:20:57.730"/>
</kw>
<status status="PASS" starttime="20220921 22:20:54.220" endtime="20220921 22:20:57.731"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220921 22:20:54.219" endtime="20220921 22:20:57.731"/>
</test>
<test id="s1-s2-s2-t3" name="Check keys creation" line="106">
<kw name="Create keys">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put /${VOLUME}/${BUCKET}/file1 README.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220921 22:20:57.737" level="INFO">Running command 'ozone sh key put /vol-wzzzx/buc-jwsvu/file1 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20220921 22:21:04.057" level="INFO">${rc} = 0</msg>
<msg timestamp="20220921 22:21:04.058" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20220921 22:20:57.734" endtime="20220921 22:21:04.058"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220921 22:21:04.059" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20220921 22:21:04.058" endtime="20220921 22:21:04.059"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220921 22:21:04.060" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220921 22:21:04.059" endtime="20220921 22:21:04.060"/>
</kw>
<status status="PASS" starttime="20220921 22:20:57.734" endtime="20220921 22:21:04.060"/>
</kw>
<msg timestamp="20220921 22:21:04.060" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220921 22:20:57.734" endtime="20220921 22:21:04.061"/>
</kw>
<msg timestamp="20220921 22:21:04.061" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20220921 22:20:57.733" endtime="20220921 22:21:04.061"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220921 22:21:04.061" endtime="20220921 22:21:04.062"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put /${VOLUME}/${BUCKET}/dir1/dir2/file2 HISTORY.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220921 22:21:04.066" level="INFO">Running command 'ozone sh key put /vol-wzzzx/buc-jwsvu/dir1/dir2/file2 HISTORY.md 2&gt;&amp;1'.</msg>
<msg timestamp="20220921 22:21:11.447" level="INFO">${rc} = 0</msg>
<msg timestamp="20220921 22:21:11.448" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20220921 22:21:04.063" endtime="20220921 22:21:11.448"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220921 22:21:11.450" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20220921 22:21:11.448" endtime="20220921 22:21:11.450"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220921 22:21:11.450" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220921 22:21:11.450" endtime="20220921 22:21:11.451"/>
</kw>
<status status="PASS" starttime="20220921 22:21:04.063" endtime="20220921 22:21:11.451"/>
</kw>
<msg timestamp="20220921 22:21:11.451" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220921 22:21:04.062" endtime="20220921 22:21:11.452"/>
</kw>
<msg timestamp="20220921 22:21:11.452" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20220921 22:21:04.062" endtime="20220921 22:21:11.452"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220921 22:21:11.452" endtime="20220921 22:21:11.453"/>
</kw>
<status status="PASS" starttime="20220921 22:20:57.732" endtime="20220921 22:21:11.453"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220921 22:20:57.732" endtime="20220921 22:21:11.453"/>
</test>
<test id="s1-s2-s2-t4" name="Check Summary api access" line="109">
<kw name="Check Access">
<arg>${SUMMARY_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220921 22:21:11.463" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20220921 22:21:11.468" level="INFO">${rc} = 0</msg>
<msg timestamp="20220921 22:21:11.468" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20220921 22:21:11.460" endtime="20220921 22:21:11.468"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220921 22:21:11.469" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20220921 22:21:11.468" endtime="20220921 22:21:11.469"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220921 22:21:11.469" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220921 22:21:11.469" endtime="20220921 22:21:11.470"/>
</kw>
<status status="PASS" starttime="20220921 22:21:11.459" endtime="20220921 22:21:11.471"/>
</kw>
<msg timestamp="20220921 22:21:11.472" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220921 22:21:11.459" endtime="20220921 22:21:11.473"/>
</kw>
<status status="PASS" starttime="20220921 22:21:11.458" endtime="20220921 22:21:11.474"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220921 22:21:11.478" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20220921 22:21:11.513" level="INFO">${rc} = 0</msg>
<msg timestamp="20220921 22:21:11.513" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20220921 22:21:11.476" endtime="20220921 22:21:11.513"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220921 22:21:11.514" level="INFO">200</msg>
<status status="PASS" starttime="20220921 22:21:11.513" endtime="20220921 22:21:11.514"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220921 22:21:11.515" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220921 22:21:11.514" endtime="20220921 22:21:11.515"/>
</kw>
<status status="PASS" starttime="20220921 22:21:11.475" endtime="20220921 22:21:11.515"/>
</kw>
<msg timestamp="20220921 22:21:11.515" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220921 22:21:11.475" endtime="20220921 22:21:11.516"/>
</kw>
<msg timestamp="20220921 22:21:11.516" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20220921 22:21:11.475" endtime="20220921 22:21:11.516"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220921 22:21:11.517" endtime="20220921 22:21:11.517"/>
</kw>
<status status="NOT RUN" starttime="20220921 22:21:11.517" endtime="20220921 22:21:11.517"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220921 22:21:11.517" endtime="20220921 22:21:11.517"/>
</kw>
<status status="PASS" starttime="20220921 22:21:11.517" endtime="20220921 22:21:11.517"/>
</branch>
<status status="PASS" starttime="20220921 22:21:11.516" endtime="20220921 22:21:11.517"/>
</if>
<status status="PASS" starttime="20220921 22:21:11.474" endtime="20220921 22:21:11.518"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220921 22:21:11.518" endtime="20220921 22:21:11.518"/>
</kw>
<status status="PASS" starttime="20220921 22:21:11.518" endtime="20220921 22:21:11.518"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220921 22:21:11.523" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20220921 22:21:11.535" level="INFO">${rc} = 0</msg>
<msg timestamp="20220921 22:21:11.535" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20220921 22:21:11.520" endtime="20220921 22:21:11.535"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220921 22:21:11.536" level="INFO">200</msg>
<status status="PASS" starttime="20220921 22:21:11.536" endtime="20220921 22:21:11.536"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220921 22:21:11.537" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220921 22:21:11.536" endtime="20220921 22:21:11.537"/>
</kw>
<status status="PASS" starttime="20220921 22:21:11.519" endtime="20220921 22:21:11.537"/>
</kw>
<msg timestamp="20220921 22:21:11.538" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220921 22:21:11.519" endtime="20220921 22:21:11.538"/>
</kw>
<msg timestamp="20220921 22:21:11.538" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20220921 22:21:11.519" endtime="20220921 22:21:11.538"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220921 22:21:11.539" endtime="20220921 22:21:11.539"/>
</kw>
<status status="NOT RUN" starttime="20220921 22:21:11.539" endtime="20220921 22:21:11.539"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220921 22:21:11.539" endtime="20220921 22:21:11.539"/>
</kw>
<status status="PASS" starttime="20220921 22:21:11.539" endtime="20220921 22:21:11.539"/>
</branch>
<status status="PASS" starttime="20220921 22:21:11.538" endtime="20220921 22:21:11.539"/>
</if>
<status status="PASS" starttime="20220921 22:21:11.519" endtime="20220921 22:21:11.539"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220921 22:21:11.540" endtime="20220921 22:21:11.540"/>
</kw>
<status status="PASS" starttime="20220921 22:21:11.540" endtime="20220921 22:21:11.540"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220921 22:21:11.544" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20220921 22:21:11.560" level="INFO">${rc} = 0</msg>
<msg timestamp="20220921 22:21:11.560" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20220921 22:21:11.542" endtime="20220921 22:21:11.560"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220921 22:21:11.561" level="INFO">200</msg>
<status status="PASS" starttime="20220921 22:21:11.561" endtime="20220921 22:21:11.561"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220921 22:21:11.562" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220921 22:21:11.562" endtime="20220921 22:21:11.562"/>
</kw>
<status status="PASS" starttime="20220921 22:21:11.542" endtime="20220921 22:21:11.563"/>
</kw>
<msg timestamp="20220921 22:21:11.563" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220921 22:21:11.541" endtime="20220921 22:21:11.563"/>
</kw>
<msg timestamp="20220921 22:21:11.564" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20220921 22:21:11.541" endtime="20220921 22:21:11.564"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220921 22:21:11.564" endtime="20220921 22:21:11.564"/>
</kw>
<status status="NOT RUN" starttime="20220921 22:21:11.564" endtime="20220921 22:21:11.564"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220921 22:21:11.564" endtime="20220921 22:21:11.564"/>
</kw>
<status status="PASS" starttime="20220921 22:21:11.564" endtime="20220921 22:21:11.565"/>
</branch>
<status status="PASS" starttime="20220921 22:21:11.564" endtime="20220921 22:21:11.565"/>
</if>
<status status="PASS" starttime="20220921 22:21:11.540" endtime="20220921 22:21:11.565"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220921 22:21:11.565" endtime="20220921 22:21:11.565"/>
</kw>
<status status="PASS" starttime="20220921 22:21:11.565" endtime="20220921 22:21:11.565"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220921 22:21:11.570" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20220921 22:21:11.584" level="INFO">${rc} = 0</msg>
<msg timestamp="20220921 22:21:11.584" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20220921 22:21:11.568" endtime="20220921 22:21:11.584"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220921 22:21:11.586" level="INFO">200</msg>
<status status="PASS" starttime="20220921 22:21:11.585" endtime="20220921 22:21:11.586"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220921 22:21:11.586" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220921 22:21:11.586" endtime="20220921 22:21:11.586"/>
</kw>
<status status="PASS" starttime="20220921 22:21:11.567" endtime="20220921 22:21:11.586"/>
</kw>
<msg timestamp="20220921 22:21:11.586" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220921 22:21:11.567" endtime="20220921 22:21:11.587"/>
</kw>
<msg timestamp="20220921 22:21:11.587" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20220921 22:21:11.566" endtime="20220921 22:21:11.587"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220921 22:21:11.588" endtime="20220921 22:21:11.588"/>
</kw>
<status status="NOT RUN" starttime="20220921 22:21:11.588" endtime="20220921 22:21:11.588"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220921 22:21:11.588" endtime="20220921 22:21:11.589"/>
</kw>
<status status="PASS" starttime="20220921 22:21:11.588" endtime="20220921 22:21:11.589"/>
</branch>
<status status="PASS" starttime="20220921 22:21:11.588" endtime="20220921 22:21:11.589"/>
</if>
<status status="PASS" starttime="20220921 22:21:11.566" endtime="20220921 22:21:11.589"/>
</kw>
<status status="PASS" starttime="20220921 22:21:11.456" endtime="20220921 22:21:11.589"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220921 22:21:11.455" endtime="20220921 22:21:11.589"/>
</test>
<test id="s1-s2-s2-t5" name="Check Disk Usage api access" line="112">
<kw name="Check Access">
<arg>${DISK_USAGE_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220921 22:21:11.595" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20220921 22:21:11.598" level="INFO">${rc} = 0</msg>
<msg timestamp="20220921 22:21:11.598" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20220921 22:21:11.593" endtime="20220921 22:21:11.599"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220921 22:21:11.599" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20220921 22:21:11.599" endtime="20220921 22:21:11.600"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220921 22:21:11.600" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220921 22:21:11.600" endtime="20220921 22:21:11.600"/>
</kw>
<status status="PASS" starttime="20220921 22:21:11.592" endtime="20220921 22:21:11.600"/>
</kw>
<msg timestamp="20220921 22:21:11.600" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220921 22:21:11.592" endtime="20220921 22:21:11.601"/>
</kw>
<status status="PASS" starttime="20220921 22:21:11.592" endtime="20220921 22:21:11.601"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220921 22:21:11.604" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20220921 22:21:11.623" level="INFO">${rc} = 0</msg>
<msg timestamp="20220921 22:21:11.624" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20220921 22:21:11.603" endtime="20220921 22:21:11.624"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220921 22:21:11.625" level="INFO">200</msg>
<status status="PASS" starttime="20220921 22:21:11.624" endtime="20220921 22:21:11.625"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220921 22:21:11.625" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220921 22:21:11.625" endtime="20220921 22:21:11.625"/>
</kw>
<status status="PASS" starttime="20220921 22:21:11.602" endtime="20220921 22:21:11.626"/>
</kw>
<msg timestamp="20220921 22:21:11.626" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220921 22:21:11.602" endtime="20220921 22:21:11.626"/>
</kw>
<msg timestamp="20220921 22:21:11.626" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20220921 22:21:11.602" endtime="20220921 22:21:11.626"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220921 22:21:11.627" endtime="20220921 22:21:11.627"/>
</kw>
<status status="NOT RUN" starttime="20220921 22:21:11.627" endtime="20220921 22:21:11.628"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220921 22:21:11.628" endtime="20220921 22:21:11.628"/>
</kw>
<status status="PASS" starttime="20220921 22:21:11.628" endtime="20220921 22:21:11.628"/>
</branch>
<status status="PASS" starttime="20220921 22:21:11.627" endtime="20220921 22:21:11.628"/>
</if>
<status status="PASS" starttime="20220921 22:21:11.601" endtime="20220921 22:21:11.629"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220921 22:21:11.629" endtime="20220921 22:21:11.630"/>
</kw>
<status status="PASS" starttime="20220921 22:21:11.629" endtime="20220921 22:21:11.630"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220921 22:21:11.633" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20220921 22:21:11.649" level="INFO">${rc} = 0</msg>
<msg timestamp="20220921 22:21:11.650" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20220921 22:21:11.631" endtime="20220921 22:21:11.650"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220921 22:21:11.651" level="INFO">200</msg>
<status status="PASS" starttime="20220921 22:21:11.650" endtime="20220921 22:21:11.651"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220921 22:21:11.652" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220921 22:21:11.651" endtime="20220921 22:21:11.652"/>
</kw>
<status status="PASS" starttime="20220921 22:21:11.631" endtime="20220921 22:21:11.652"/>
</kw>
<msg timestamp="20220921 22:21:11.652" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220921 22:21:11.631" endtime="20220921 22:21:11.653"/>
</kw>
<msg timestamp="20220921 22:21:11.653" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20220921 22:21:11.630" endtime="20220921 22:21:11.653"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220921 22:21:11.653" endtime="20220921 22:21:11.653"/>
</kw>
<status status="NOT RUN" starttime="20220921 22:21:11.653" endtime="20220921 22:21:11.653"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220921 22:21:11.654" endtime="20220921 22:21:11.654"/>
</kw>
<status status="PASS" starttime="20220921 22:21:11.653" endtime="20220921 22:21:11.654"/>
</branch>
<status status="PASS" starttime="20220921 22:21:11.653" endtime="20220921 22:21:11.654"/>
</if>
<status status="PASS" starttime="20220921 22:21:11.630" endtime="20220921 22:21:11.654"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220921 22:21:11.655" endtime="20220921 22:21:11.655"/>
</kw>
<status status="PASS" starttime="20220921 22:21:11.654" endtime="20220921 22:21:11.655"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220921 22:21:11.660" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20220921 22:21:11.675" level="INFO">${rc} = 0</msg>
<msg timestamp="20220921 22:21:11.676" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20220921 22:21:11.657" endtime="20220921 22:21:11.676"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220921 22:21:11.677" level="INFO">200</msg>
<status status="PASS" starttime="20220921 22:21:11.676" endtime="20220921 22:21:11.677"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220921 22:21:11.677" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220921 22:21:11.677" endtime="20220921 22:21:11.678"/>
</kw>
<status status="PASS" starttime="20220921 22:21:11.656" endtime="20220921 22:21:11.678"/>
</kw>
<msg timestamp="20220921 22:21:11.678" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220921 22:21:11.656" endtime="20220921 22:21:11.678"/>
</kw>
<msg timestamp="20220921 22:21:11.679" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20220921 22:21:11.656" endtime="20220921 22:21:11.679"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220921 22:21:11.682" endtime="20220921 22:21:11.682"/>
</kw>
<status status="NOT RUN" starttime="20220921 22:21:11.679" endtime="20220921 22:21:11.682"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220921 22:21:11.682" endtime="20220921 22:21:11.683"/>
</kw>
<status status="PASS" starttime="20220921 22:21:11.682" endtime="20220921 22:21:11.683"/>
</branch>
<status status="PASS" starttime="20220921 22:21:11.679" endtime="20220921 22:21:11.683"/>
</if>
<status status="PASS" starttime="20220921 22:21:11.655" endtime="20220921 22:21:11.683"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220921 22:21:11.683" endtime="20220921 22:21:11.684"/>
</kw>
<status status="PASS" starttime="20220921 22:21:11.683" endtime="20220921 22:21:11.684"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220921 22:21:11.688" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20220921 22:21:11.702" level="INFO">${rc} = 0</msg>
<msg timestamp="20220921 22:21:11.702" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20220921 22:21:11.686" endtime="20220921 22:21:11.702"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220921 22:21:11.703" level="INFO">200</msg>
<status status="PASS" starttime="20220921 22:21:11.702" endtime="20220921 22:21:11.703"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220921 22:21:11.704" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220921 22:21:11.703" endtime="20220921 22:21:11.704"/>
</kw>
<status status="PASS" starttime="20220921 22:21:11.685" endtime="20220921 22:21:11.704"/>
</kw>
<msg timestamp="20220921 22:21:11.704" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220921 22:21:11.685" endtime="20220921 22:21:11.705"/>
</kw>
<msg timestamp="20220921 22:21:11.705" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20220921 22:21:11.684" endtime="20220921 22:21:11.705"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220921 22:21:11.706" endtime="20220921 22:21:11.706"/>
</kw>
<status status="NOT RUN" starttime="20220921 22:21:11.705" endtime="20220921 22:21:11.706"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220921 22:21:11.706" endtime="20220921 22:21:11.706"/>
</kw>
<status status="PASS" starttime="20220921 22:21:11.706" endtime="20220921 22:21:11.706"/>
</branch>
<status status="PASS" starttime="20220921 22:21:11.705" endtime="20220921 22:21:11.706"/>
</if>
<status status="PASS" starttime="20220921 22:21:11.684" endtime="20220921 22:21:11.706"/>
</kw>
<status status="PASS" starttime="20220921 22:21:11.591" endtime="20220921 22:21:11.707"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220921 22:21:11.591" endtime="20220921 22:21:11.707"/>
</test>
<test id="s1-s2-s2-t6" name="Check Quota Usage api access" line="115">
<kw name="Check Access">
<arg>${QUOTA_USAGE_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220921 22:21:11.712" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20220921 22:21:11.715" level="INFO">${rc} = 0</msg>
<msg timestamp="20220921 22:21:11.715" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20220921 22:21:11.710" endtime="20220921 22:21:11.715"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220921 22:21:11.717" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20220921 22:21:11.716" endtime="20220921 22:21:11.717"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220921 22:21:11.717" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220921 22:21:11.717" endtime="20220921 22:21:11.717"/>
</kw>
<status status="PASS" starttime="20220921 22:21:11.710" endtime="20220921 22:21:11.717"/>
</kw>
<msg timestamp="20220921 22:21:11.717" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220921 22:21:11.710" endtime="20220921 22:21:11.718"/>
</kw>
<status status="PASS" starttime="20220921 22:21:11.709" endtime="20220921 22:21:11.718"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220921 22:21:11.723" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20220921 22:21:11.741" level="INFO">${rc} = 0</msg>
<msg timestamp="20220921 22:21:11.741" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20220921 22:21:11.720" endtime="20220921 22:21:11.741"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220921 22:21:11.742" level="INFO">200</msg>
<status status="PASS" starttime="20220921 22:21:11.741" endtime="20220921 22:21:11.742"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220921 22:21:11.743" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220921 22:21:11.743" endtime="20220921 22:21:11.743"/>
</kw>
<status status="PASS" starttime="20220921 22:21:11.720" endtime="20220921 22:21:11.744"/>
</kw>
<msg timestamp="20220921 22:21:11.744" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220921 22:21:11.719" endtime="20220921 22:21:11.744"/>
</kw>
<msg timestamp="20220921 22:21:11.745" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20220921 22:21:11.719" endtime="20220921 22:21:11.745"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220921 22:21:11.745" endtime="20220921 22:21:11.745"/>
</kw>
<status status="NOT RUN" starttime="20220921 22:21:11.745" endtime="20220921 22:21:11.745"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220921 22:21:11.745" endtime="20220921 22:21:11.746"/>
</kw>
<status status="PASS" starttime="20220921 22:21:11.745" endtime="20220921 22:21:11.746"/>
</branch>
<status status="PASS" starttime="20220921 22:21:11.745" endtime="20220921 22:21:11.746"/>
</if>
<status status="PASS" starttime="20220921 22:21:11.718" endtime="20220921 22:21:11.746"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220921 22:21:11.746" endtime="20220921 22:21:11.747"/>
</kw>
<status status="PASS" starttime="20220921 22:21:11.746" endtime="20220921 22:21:11.747"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220921 22:21:11.752" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20220921 22:21:11.765" level="INFO">${rc} = 0</msg>
<msg timestamp="20220921 22:21:11.765" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20220921 22:21:11.749" endtime="20220921 22:21:11.765"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220921 22:21:11.766" level="INFO">200</msg>
<status status="PASS" starttime="20220921 22:21:11.765" endtime="20220921 22:21:11.766"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220921 22:21:11.767" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220921 22:21:11.766" endtime="20220921 22:21:11.767"/>
</kw>
<status status="PASS" starttime="20220921 22:21:11.749" endtime="20220921 22:21:11.767"/>
</kw>
<msg timestamp="20220921 22:21:11.767" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220921 22:21:11.748" endtime="20220921 22:21:11.768"/>
</kw>
<msg timestamp="20220921 22:21:11.768" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20220921 22:21:11.748" endtime="20220921 22:21:11.768"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220921 22:21:11.768" endtime="20220921 22:21:11.768"/>
</kw>
<status status="NOT RUN" starttime="20220921 22:21:11.768" endtime="20220921 22:21:11.768"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220921 22:21:11.769" endtime="20220921 22:21:11.769"/>
</kw>
<status status="PASS" starttime="20220921 22:21:11.768" endtime="20220921 22:21:11.769"/>
</branch>
<status status="PASS" starttime="20220921 22:21:11.768" endtime="20220921 22:21:11.769"/>
</if>
<status status="PASS" starttime="20220921 22:21:11.747" endtime="20220921 22:21:11.769"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220921 22:21:11.770" endtime="20220921 22:21:11.770"/>
</kw>
<status status="PASS" starttime="20220921 22:21:11.769" endtime="20220921 22:21:11.770"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220921 22:21:11.773" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20220921 22:21:11.785" level="INFO">${rc} = 0</msg>
<msg timestamp="20220921 22:21:11.786" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20220921 22:21:11.772" endtime="20220921 22:21:11.786"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220921 22:21:11.787" level="INFO">200</msg>
<status status="PASS" starttime="20220921 22:21:11.786" endtime="20220921 22:21:11.787"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220921 22:21:11.787" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220921 22:21:11.787" endtime="20220921 22:21:11.787"/>
</kw>
<status status="PASS" starttime="20220921 22:21:11.771" endtime="20220921 22:21:11.788"/>
</kw>
<msg timestamp="20220921 22:21:11.788" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220921 22:21:11.771" endtime="20220921 22:21:11.788"/>
</kw>
<msg timestamp="20220921 22:21:11.788" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20220921 22:21:11.771" endtime="20220921 22:21:11.789"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220921 22:21:11.789" endtime="20220921 22:21:11.789"/>
</kw>
<status status="NOT RUN" starttime="20220921 22:21:11.789" endtime="20220921 22:21:11.789"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220921 22:21:11.789" endtime="20220921 22:21:11.790"/>
</kw>
<status status="PASS" starttime="20220921 22:21:11.789" endtime="20220921 22:21:11.790"/>
</branch>
<status status="PASS" starttime="20220921 22:21:11.789" endtime="20220921 22:21:11.790"/>
</if>
<status status="PASS" starttime="20220921 22:21:11.770" endtime="20220921 22:21:11.790"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220921 22:21:11.790" endtime="20220921 22:21:11.791"/>
</kw>
<status status="PASS" starttime="20220921 22:21:11.790" endtime="20220921 22:21:11.791"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220921 22:21:11.795" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20220921 22:21:11.809" level="INFO">${rc} = 0</msg>
<msg timestamp="20220921 22:21:11.809" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20220921 22:21:11.793" endtime="20220921 22:21:11.809"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220921 22:21:11.810" level="INFO">200</msg>
<status status="PASS" starttime="20220921 22:21:11.809" endtime="20220921 22:21:11.810"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220921 22:21:11.811" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220921 22:21:11.810" endtime="20220921 22:21:11.811"/>
</kw>
<status status="PASS" starttime="20220921 22:21:11.792" endtime="20220921 22:21:11.811"/>
</kw>
<msg timestamp="20220921 22:21:11.811" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220921 22:21:11.792" endtime="20220921 22:21:11.812"/>
</kw>
<msg timestamp="20220921 22:21:11.812" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20220921 22:21:11.792" endtime="20220921 22:21:11.812"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220921 22:21:11.813" endtime="20220921 22:21:11.813"/>
</kw>
<status status="NOT RUN" starttime="20220921 22:21:11.812" endtime="20220921 22:21:11.813"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220921 22:21:11.813" endtime="20220921 22:21:11.813"/>
</kw>
<status status="PASS" starttime="20220921 22:21:11.813" endtime="20220921 22:21:11.813"/>
</branch>
<status status="PASS" starttime="20220921 22:21:11.812" endtime="20220921 22:21:11.814"/>
</if>
<status status="PASS" starttime="20220921 22:21:11.791" endtime="20220921 22:21:11.814"/>
</kw>
<status status="PASS" starttime="20220921 22:21:11.708" endtime="20220921 22:21:11.814"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220921 22:21:11.708" endtime="20220921 22:21:11.814"/>
</test>
<test id="s1-s2-s2-t7" name="Check File Size Distribution api access" line="118">
<kw name="Check Access">
<arg>${FILE_SIZE_DIST_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220921 22:21:11.819" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20220921 22:21:11.823" level="INFO">${rc} = 0</msg>
<msg timestamp="20220921 22:21:11.823" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20220921 22:21:11.817" endtime="20220921 22:21:11.823"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220921 22:21:11.824" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20220921 22:21:11.824" endtime="20220921 22:21:11.824"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220921 22:21:11.825" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220921 22:21:11.825" endtime="20220921 22:21:11.825"/>
</kw>
<status status="PASS" starttime="20220921 22:21:11.817" endtime="20220921 22:21:11.825"/>
</kw>
<msg timestamp="20220921 22:21:11.826" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220921 22:21:11.817" endtime="20220921 22:21:11.826"/>
</kw>
<status status="PASS" starttime="20220921 22:21:11.816" endtime="20220921 22:21:11.826"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220921 22:21:11.830" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20220921 22:21:11.851" level="INFO">${rc} = 0</msg>
<msg timestamp="20220921 22:21:11.851" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20220921 22:21:11.828" endtime="20220921 22:21:11.851"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220921 22:21:11.852" level="INFO">200</msg>
<status status="PASS" starttime="20220921 22:21:11.852" endtime="20220921 22:21:11.853"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220921 22:21:11.853" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220921 22:21:11.853" endtime="20220921 22:21:11.853"/>
</kw>
<status status="PASS" starttime="20220921 22:21:11.828" endtime="20220921 22:21:11.854"/>
</kw>
<msg timestamp="20220921 22:21:11.854" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220921 22:21:11.827" endtime="20220921 22:21:11.855"/>
</kw>
<msg timestamp="20220921 22:21:11.855" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20220921 22:21:11.827" endtime="20220921 22:21:11.855"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220921 22:21:11.855" endtime="20220921 22:21:11.856"/>
</kw>
<status status="NOT RUN" starttime="20220921 22:21:11.855" endtime="20220921 22:21:11.856"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220921 22:21:11.856" endtime="20220921 22:21:11.856"/>
</kw>
<status status="PASS" starttime="20220921 22:21:11.856" endtime="20220921 22:21:11.856"/>
</branch>
<status status="PASS" starttime="20220921 22:21:11.855" endtime="20220921 22:21:11.856"/>
</if>
<status status="PASS" starttime="20220921 22:21:11.826" endtime="20220921 22:21:11.856"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220921 22:21:11.857" endtime="20220921 22:21:11.858"/>
</kw>
<status status="PASS" starttime="20220921 22:21:11.856" endtime="20220921 22:21:11.858"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220921 22:21:11.863" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20220921 22:21:11.878" level="INFO">${rc} = 0</msg>
<msg timestamp="20220921 22:21:11.878" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20220921 22:21:11.860" endtime="20220921 22:21:11.878"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220921 22:21:11.880" level="INFO">200</msg>
<status status="PASS" starttime="20220921 22:21:11.879" endtime="20220921 22:21:11.880"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220921 22:21:11.880" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220921 22:21:11.880" endtime="20220921 22:21:11.880"/>
</kw>
<status status="PASS" starttime="20220921 22:21:11.859" endtime="20220921 22:21:11.881"/>
</kw>
<msg timestamp="20220921 22:21:11.881" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220921 22:21:11.859" endtime="20220921 22:21:11.881"/>
</kw>
<msg timestamp="20220921 22:21:11.882" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20220921 22:21:11.858" endtime="20220921 22:21:11.882"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220921 22:21:11.882" endtime="20220921 22:21:11.882"/>
</kw>
<status status="NOT RUN" starttime="20220921 22:21:11.882" endtime="20220921 22:21:11.882"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220921 22:21:11.883" endtime="20220921 22:21:11.883"/>
</kw>
<status status="PASS" starttime="20220921 22:21:11.882" endtime="20220921 22:21:11.883"/>
</branch>
<status status="PASS" starttime="20220921 22:21:11.882" endtime="20220921 22:21:11.883"/>
</if>
<status status="PASS" starttime="20220921 22:21:11.858" endtime="20220921 22:21:11.883"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220921 22:21:11.884" endtime="20220921 22:21:11.884"/>
</kw>
<status status="PASS" starttime="20220921 22:21:11.883" endtime="20220921 22:21:11.885"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220921 22:21:11.889" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20220921 22:21:11.905" level="INFO">${rc} = 0</msg>
<msg timestamp="20220921 22:21:11.905" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20220921 22:21:11.887" endtime="20220921 22:21:11.905"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220921 22:21:11.907" level="INFO">200</msg>
<status status="PASS" starttime="20220921 22:21:11.906" endtime="20220921 22:21:11.907"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220921 22:21:11.907" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220921 22:21:11.907" endtime="20220921 22:21:11.907"/>
</kw>
<status status="PASS" starttime="20220921 22:21:11.886" endtime="20220921 22:21:11.908"/>
</kw>
<msg timestamp="20220921 22:21:11.908" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220921 22:21:11.886" endtime="20220921 22:21:11.909"/>
</kw>
<msg timestamp="20220921 22:21:11.909" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20220921 22:21:11.885" endtime="20220921 22:21:11.909"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220921 22:21:11.909" endtime="20220921 22:21:11.910"/>
</kw>
<status status="NOT RUN" starttime="20220921 22:21:11.909" endtime="20220921 22:21:11.910"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220921 22:21:11.910" endtime="20220921 22:21:11.910"/>
</kw>
<status status="PASS" starttime="20220921 22:21:11.910" endtime="20220921 22:21:11.910"/>
</branch>
<status status="PASS" starttime="20220921 22:21:11.909" endtime="20220921 22:21:11.910"/>
</if>
<status status="PASS" starttime="20220921 22:21:11.885" endtime="20220921 22:21:11.910"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220921 22:21:11.911" endtime="20220921 22:21:11.911"/>
</kw>
<status status="PASS" starttime="20220921 22:21:11.911" endtime="20220921 22:21:11.912"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220921 22:21:11.917" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20220921 22:21:11.932" level="INFO">${rc} = 0</msg>
<msg timestamp="20220921 22:21:11.932" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20220921 22:21:11.914" endtime="20220921 22:21:11.932"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220921 22:21:11.934" level="INFO">200</msg>
<status status="PASS" starttime="20220921 22:21:11.933" endtime="20220921 22:21:11.934"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220921 22:21:11.935" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220921 22:21:11.934" endtime="20220921 22:21:11.935"/>
</kw>
<status status="PASS" starttime="20220921 22:21:11.913" endtime="20220921 22:21:11.935"/>
</kw>
<msg timestamp="20220921 22:21:11.935" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220921 22:21:11.913" endtime="20220921 22:21:11.936"/>
</kw>
<msg timestamp="20220921 22:21:11.936" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20220921 22:21:11.912" endtime="20220921 22:21:11.936"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220921 22:21:11.937" endtime="20220921 22:21:11.937"/>
</kw>
<status status="NOT RUN" starttime="20220921 22:21:11.937" endtime="20220921 22:21:11.937"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220921 22:21:11.937" endtime="20220921 22:21:11.938"/>
</kw>
<status status="PASS" starttime="20220921 22:21:11.937" endtime="20220921 22:21:11.938"/>
</branch>
<status status="PASS" starttime="20220921 22:21:11.936" endtime="20220921 22:21:11.938"/>
</if>
<status status="PASS" starttime="20220921 22:21:11.912" endtime="20220921 22:21:11.938"/>
</kw>
<status status="PASS" starttime="20220921 22:21:11.816" endtime="20220921 22:21:11.938"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220921 22:21:11.815" endtime="20220921 22:21:11.938"/>
</test>
<test id="s1-s2-s2-t8" name="Check Recon Namespace Summary Root" line="121">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/</arg>
<arg>ROOT</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220921 22:21:11.946" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20220921 22:21:11.967" level="INFO">${rc} = 0</msg>
<msg timestamp="20220921 22:21:11.967" level="INFO">${output} = {"type":"ROOT","numVolume":3,"numBucket":2,"numDir":0,"numKey":0,"status":"OK"}</msg>
<status status="PASS" starttime="20220921 22:21:11.943" endtime="20220921 22:21:11.967"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220921 22:21:11.969" level="INFO">{"type":"ROOT","numVolume":3,"numBucket":2,"numDir":0,"numKey":0,"status":"OK"}</msg>
<status status="PASS" starttime="20220921 22:21:11.968" endtime="20220921 22:21:11.969"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220921 22:21:11.969" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220921 22:21:11.969" endtime="20220921 22:21:11.969"/>
</kw>
<status status="PASS" starttime="20220921 22:21:11.943" endtime="20220921 22:21:11.970"/>
</kw>
<msg timestamp="20220921 22:21:11.970" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220921 22:21:11.942" endtime="20220921 22:21:11.970"/>
</kw>
<msg timestamp="20220921 22:21:11.971" level="INFO">${result} = {"type":"ROOT","numVolume":3,"numBucket":2,"numDir":0,"numKey":0,"status":"OK"}</msg>
<status status="PASS" starttime="20220921 22:21:11.942" endtime="20220921 22:21:11.971"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220921 22:21:11.971" endtime="20220921 22:21:11.971"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220921 22:21:11.972" endtime="20220921 22:21:11.972"/>
</kw>
<status status="PASS" starttime="20220921 22:21:11.941" endtime="20220921 22:21:11.972"/>
</kw>
<status status="PASS" starttime="20220921 22:21:11.941" endtime="20220921 22:21:11.972"/>
</kw>
<status status="PASS" starttime="20220921 22:21:11.940" endtime="20220921 22:21:11.973"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220921 22:21:11.939" endtime="20220921 22:21:11.973"/>
</test>
<test id="s1-s2-s2-t9" name="Check Recon Namespace Summary Volume" line="124">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}</arg>
<arg>VOLUME</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220921 22:21:11.982" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-wzzzx 2&gt;&amp;1'.</msg>
<msg timestamp="20220921 22:21:12.002" level="INFO">${rc} = 0</msg>
<msg timestamp="20220921 22:21:12.002" level="INFO">${output} = {"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20220921 22:21:11.979" endtime="20220921 22:21:12.002"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220921 22:21:12.003" level="INFO">{"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20220921 22:21:12.002" endtime="20220921 22:21:12.003"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220921 22:21:12.004" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220921 22:21:12.003" endtime="20220921 22:21:12.004"/>
</kw>
<status status="PASS" starttime="20220921 22:21:11.979" endtime="20220921 22:21:12.004"/>
</kw>
<msg timestamp="20220921 22:21:12.004" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220921 22:21:11.978" endtime="20220921 22:21:12.005"/>
</kw>
<msg timestamp="20220921 22:21:12.005" level="INFO">${result} = {"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20220921 22:21:11.978" endtime="20220921 22:21:12.005"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20220921 22:21:12.006" level="FAIL">'{"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20220921 22:21:12.005" endtime="20220921 22:21:12.006"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220921 22:21:12.007" endtime="20220921 22:21:12.007"/>
</kw>
<status status="FAIL" starttime="20220921 22:21:11.977" endtime="20220921 22:21:12.008"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220921 22:21:22.013" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-wzzzx 2&gt;&amp;1'.</msg>
<msg timestamp="20220921 22:21:22.027" level="INFO">${rc} = 0</msg>
<msg timestamp="20220921 22:21:22.027" level="INFO">${output} = {"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20220921 22:21:22.011" endtime="20220921 22:21:22.027"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220921 22:21:22.028" level="INFO">{"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20220921 22:21:22.027" endtime="20220921 22:21:22.028"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220921 22:21:22.028" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220921 22:21:22.028" endtime="20220921 22:21:22.029"/>
</kw>
<status status="PASS" starttime="20220921 22:21:22.010" endtime="20220921 22:21:22.029"/>
</kw>
<msg timestamp="20220921 22:21:22.029" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220921 22:21:22.010" endtime="20220921 22:21:22.029"/>
</kw>
<msg timestamp="20220921 22:21:22.030" level="INFO">${result} = {"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20220921 22:21:22.009" endtime="20220921 22:21:22.030"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20220921 22:21:22.031" level="FAIL">'{"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20220921 22:21:22.030" endtime="20220921 22:21:22.031"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220921 22:21:22.031" endtime="20220921 22:21:22.031"/>
</kw>
<status status="FAIL" starttime="20220921 22:21:22.008" endtime="20220921 22:21:22.032"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220921 22:21:32.038" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-wzzzx 2&gt;&amp;1'.</msg>
<msg timestamp="20220921 22:21:32.053" level="INFO">${rc} = 0</msg>
<msg timestamp="20220921 22:21:32.053" level="INFO">${output} = {"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20220921 22:21:32.035" endtime="20220921 22:21:32.053"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220921 22:21:32.054" level="INFO">{"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20220921 22:21:32.053" endtime="20220921 22:21:32.054"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220921 22:21:32.055" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220921 22:21:32.054" endtime="20220921 22:21:32.055"/>
</kw>
<status status="PASS" starttime="20220921 22:21:32.035" endtime="20220921 22:21:32.055"/>
</kw>
<msg timestamp="20220921 22:21:32.055" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220921 22:21:32.034" endtime="20220921 22:21:32.056"/>
</kw>
<msg timestamp="20220921 22:21:32.056" level="INFO">${result} = {"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20220921 22:21:32.034" endtime="20220921 22:21:32.056"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20220921 22:21:32.057" level="FAIL">'{"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20220921 22:21:32.056" endtime="20220921 22:21:32.057"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220921 22:21:32.058" endtime="20220921 22:21:32.058"/>
</kw>
<status status="FAIL" starttime="20220921 22:21:32.033" endtime="20220921 22:21:32.058"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220921 22:21:42.064" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-wzzzx 2&gt;&amp;1'.</msg>
<msg timestamp="20220921 22:21:42.080" level="INFO">${rc} = 0</msg>
<msg timestamp="20220921 22:21:42.080" level="INFO">${output} = {"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20220921 22:21:42.061" endtime="20220921 22:21:42.080"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220921 22:21:42.081" level="INFO">{"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20220921 22:21:42.080" endtime="20220921 22:21:42.081"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220921 22:21:42.082" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220921 22:21:42.081" endtime="20220921 22:21:42.082"/>
</kw>
<status status="PASS" starttime="20220921 22:21:42.061" endtime="20220921 22:21:42.082"/>
</kw>
<msg timestamp="20220921 22:21:42.082" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220921 22:21:42.060" endtime="20220921 22:21:42.083"/>
</kw>
<msg timestamp="20220921 22:21:42.083" level="INFO">${result} = {"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20220921 22:21:42.060" endtime="20220921 22:21:42.083"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20220921 22:21:42.084" level="FAIL">'{"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20220921 22:21:42.083" endtime="20220921 22:21:42.084"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220921 22:21:42.085" endtime="20220921 22:21:42.085"/>
</kw>
<status status="FAIL" starttime="20220921 22:21:42.059" endtime="20220921 22:21:42.086"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220921 22:21:52.092" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-wzzzx 2&gt;&amp;1'.</msg>
<msg timestamp="20220921 22:21:52.107" level="INFO">${rc} = 0</msg>
<msg timestamp="20220921 22:21:52.107" level="INFO">${output} = {"type":"VOLUME","numVolume":-1,"numBucket":1,"numDir":2,"numKey":2,"status":"OK"}</msg>
<status status="PASS" starttime="20220921 22:21:52.089" endtime="20220921 22:21:52.107"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220921 22:21:52.109" level="INFO">{"type":"VOLUME","numVolume":-1,"numBucket":1,"numDir":2,"numKey":2,"status":"OK"}</msg>
<status status="PASS" starttime="20220921 22:21:52.108" endtime="20220921 22:21:52.109"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220921 22:21:52.109" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220921 22:21:52.109" endtime="20220921 22:21:52.109"/>
</kw>
<status status="PASS" starttime="20220921 22:21:52.088" endtime="20220921 22:21:52.110"/>
</kw>
<msg timestamp="20220921 22:21:52.110" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220921 22:21:52.088" endtime="20220921 22:21:52.110"/>
</kw>
<msg timestamp="20220921 22:21:52.111" level="INFO">${result} = {"type":"VOLUME","numVolume":-1,"numBucket":1,"numDir":2,"numKey":2,"status":"OK"}</msg>
<status status="PASS" starttime="20220921 22:21:52.087" endtime="20220921 22:21:52.111"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220921 22:21:52.111" endtime="20220921 22:21:52.111"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220921 22:21:52.111" endtime="20220921 22:21:52.112"/>
</kw>
<status status="PASS" starttime="20220921 22:21:52.086" endtime="20220921 22:21:52.112"/>
</kw>
<status status="PASS" starttime="20220921 22:21:11.977" endtime="20220921 22:21:52.112"/>
</kw>
<status status="PASS" starttime="20220921 22:21:11.976" endtime="20220921 22:21:52.112"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220921 22:21:11.975" endtime="20220921 22:21:52.112"/>
</test>
<test id="s1-s2-s2-t10" name="Check Recon Namespace Summary Bucket" line="127">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}</arg>
<arg>BUCKET</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220921 22:21:52.119" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-wzzzx/buc-jwsvu 2&gt;&amp;1'.</msg>
<msg timestamp="20220921 22:21:52.139" level="INFO">${rc} = 0</msg>
<msg timestamp="20220921 22:21:52.139" level="INFO">${output} = {"type":"BUCKET","numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2,"status":"OK"}</msg>
<status status="PASS" starttime="20220921 22:21:52.117" endtime="20220921 22:21:52.139"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220921 22:21:52.140" level="INFO">{"type":"BUCKET","numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2,"status":"OK"}</msg>
<status status="PASS" starttime="20220921 22:21:52.139" endtime="20220921 22:21:52.140"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220921 22:21:52.140" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220921 22:21:52.140" endtime="20220921 22:21:52.141"/>
</kw>
<status status="PASS" starttime="20220921 22:21:52.117" endtime="20220921 22:21:52.141"/>
</kw>
<msg timestamp="20220921 22:21:52.141" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220921 22:21:52.116" endtime="20220921 22:21:52.141"/>
</kw>
<msg timestamp="20220921 22:21:52.141" level="INFO">${result} = {"type":"BUCKET","numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2,"status":"OK"}</msg>
<status status="PASS" starttime="20220921 22:21:52.116" endtime="20220921 22:21:52.141"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220921 22:21:52.142" endtime="20220921 22:21:52.142"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220921 22:21:52.142" endtime="20220921 22:21:52.143"/>
</kw>
<status status="PASS" starttime="20220921 22:21:52.115" endtime="20220921 22:21:52.143"/>
</kw>
<status status="PASS" starttime="20220921 22:21:52.115" endtime="20220921 22:21:52.143"/>
</kw>
<status status="PASS" starttime="20220921 22:21:52.114" endtime="20220921 22:21:52.143"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220921 22:21:52.113" endtime="20220921 22:21:52.143"/>
</test>
<test id="s1-s2-s2-t11" name="Check Recon Namespace Summary Key" line="130">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/file1</arg>
<arg>KEY</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220921 22:21:52.150" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-wzzzx/buc-jwsvu/file1 2&gt;&amp;1'.</msg>
<msg timestamp="20220921 22:21:52.168" level="INFO">${rc} = 0</msg>
<msg timestamp="20220921 22:21:52.168" level="INFO">${output} = {"type":"KEY","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"OK"}</msg>
<status status="PASS" starttime="20220921 22:21:52.148" endtime="20220921 22:21:52.168"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220921 22:21:52.169" level="INFO">{"type":"KEY","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"OK"}</msg>
<status status="PASS" starttime="20220921 22:21:52.168" endtime="20220921 22:21:52.169"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220921 22:21:52.169" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220921 22:21:52.169" endtime="20220921 22:21:52.169"/>
</kw>
<status status="PASS" starttime="20220921 22:21:52.147" endtime="20220921 22:21:52.170"/>
</kw>
<msg timestamp="20220921 22:21:52.170" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220921 22:21:52.147" endtime="20220921 22:21:52.170"/>
</kw>
<msg timestamp="20220921 22:21:52.170" level="INFO">${result} = {"type":"KEY","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"OK"}</msg>
<status status="PASS" starttime="20220921 22:21:52.146" endtime="20220921 22:21:52.170"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220921 22:21:52.171" endtime="20220921 22:21:52.171"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220921 22:21:52.171" endtime="20220921 22:21:52.171"/>
</kw>
<status status="PASS" starttime="20220921 22:21:52.145" endtime="20220921 22:21:52.172"/>
</kw>
<status status="PASS" starttime="20220921 22:21:52.145" endtime="20220921 22:21:52.172"/>
</kw>
<status status="PASS" starttime="20220921 22:21:52.144" endtime="20220921 22:21:52.172"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220921 22:21:52.144" endtime="20220921 22:21:52.172"/>
</test>
<test id="s1-s2-s2-t12" name="Check Recon Namespace Summary Directory" line="133">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2</arg>
<arg>DIRECTORY</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220921 22:21:52.182" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-wzzzx/buc-jwsvu/dir1/dir2 2&gt;&amp;1'.</msg>
<msg timestamp="20220921 22:21:52.204" level="INFO">${rc} = 0</msg>
<msg timestamp="20220921 22:21:52.204" level="INFO">${output} = {"type":"DIRECTORY","numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1,"status":"OK"}</msg>
<status status="PASS" starttime="20220921 22:21:52.176" endtime="20220921 22:21:52.204"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220921 22:21:52.205" level="INFO">{"type":"DIRECTORY","numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1,"status":"OK"}</msg>
<status status="PASS" starttime="20220921 22:21:52.204" endtime="20220921 22:21:52.205"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220921 22:21:52.206" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220921 22:21:52.205" endtime="20220921 22:21:52.206"/>
</kw>
<status status="PASS" starttime="20220921 22:21:52.176" endtime="20220921 22:21:52.206"/>
</kw>
<msg timestamp="20220921 22:21:52.206" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220921 22:21:52.176" endtime="20220921 22:21:52.207"/>
</kw>
<msg timestamp="20220921 22:21:52.207" level="INFO">${result} = {"type":"DIRECTORY","numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1,"status":"OK"}</msg>
<status status="PASS" starttime="20220921 22:21:52.175" endtime="20220921 22:21:52.207"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220921 22:21:52.207" endtime="20220921 22:21:52.208"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220921 22:21:52.208" endtime="20220921 22:21:52.208"/>
</kw>
<status status="PASS" starttime="20220921 22:21:52.175" endtime="20220921 22:21:52.208"/>
</kw>
<status status="PASS" starttime="20220921 22:21:52.174" endtime="20220921 22:21:52.208"/>
</kw>
<status status="PASS" starttime="20220921 22:21:52.173" endtime="20220921 22:21:52.209"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220921 22:21:52.173" endtime="20220921 22:21:52.209"/>
</test>
<test id="s1-s2-s2-t13" name="Check Recon Namespace Disk Usage" line="136">
<kw name="Wait For Summary">
<arg>${DISK_USAGE_URL}?path=/${VOLUME}/${BUCKET}&amp;files=true&amp;replica=true</arg>
<arg>\"sizeWithReplica\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220921 22:21:52.216" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/du?path=/vol-wzzzx/buc-jwsvu&amp;files=true&amp;replica=true 2&gt;&amp;1'.</msg>
<msg timestamp="20220921 22:21:52.228" level="INFO">${rc} = 0</msg>
<msg timestamp="20220921 22:21:52.228" level="INFO">${output} = {"status":"OK","path":"/vol-wzzzx/buc-jwsvu","size":9849,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-wzzzx/buc-jwsvu/dir1","size":6038,"sizeWithReplica":-1,"isKey":fals...</msg>
<status status="PASS" starttime="20220921 22:21:52.214" endtime="20220921 22:21:52.228"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220921 22:21:52.229" level="INFO">{"status":"OK","path":"/vol-wzzzx/buc-jwsvu","size":9849,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-wzzzx/buc-jwsvu/dir1","size":6038,"sizeWithReplica":-1,"isKey":false}],"sizeDirectKey":3811}</msg>
<status status="PASS" starttime="20220921 22:21:52.229" endtime="20220921 22:21:52.229"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220921 22:21:52.230" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220921 22:21:52.229" endtime="20220921 22:21:52.230"/>
</kw>
<status status="PASS" starttime="20220921 22:21:52.214" endtime="20220921 22:21:52.230"/>
</kw>
<msg timestamp="20220921 22:21:52.230" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220921 22:21:52.213" endtime="20220921 22:21:52.231"/>
</kw>
<msg timestamp="20220921 22:21:52.231" level="INFO">${result} = {"status":"OK","path":"/vol-wzzzx/buc-jwsvu","size":9849,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-wzzzx/buc-jwsvu/dir1","size":6038,"sizeWithReplica":-1,"isKey":fals...</msg>
<status status="PASS" starttime="20220921 22:21:52.213" endtime="20220921 22:21:52.231"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220921 22:21:52.231" endtime="20220921 22:21:52.232"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220921 22:21:52.232" endtime="20220921 22:21:52.232"/>
</kw>
<status status="PASS" starttime="20220921 22:21:52.212" endtime="20220921 22:21:52.232"/>
</kw>
<status status="PASS" starttime="20220921 22:21:52.212" endtime="20220921 22:21:52.232"/>
</kw>
<status status="PASS" starttime="20220921 22:21:52.211" endtime="20220921 22:21:52.233"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220921 22:21:52.210" endtime="20220921 22:21:52.233"/>
</test>
<test id="s1-s2-s2-t14" name="Check Recon Namespace Volume Quota Usage" line="139">
<kw name="Wait For Summary">
<arg>${QUOTA_USAGE_URL}?path=/${VOLUME}</arg>
<arg>\"used\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220921 22:21:52.238" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/quota?path=/vol-wzzzx 2&gt;&amp;1'.</msg>
<msg timestamp="20220921 22:21:52.251" level="INFO">${rc} = 0</msg>
<msg timestamp="20220921 22:21:52.251" level="INFO">${output} = {"allowed":-1,"used":9849,"status":"OK"}</msg>
<status status="PASS" starttime="20220921 22:21:52.236" endtime="20220921 22:21:52.251"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220921 22:21:52.252" level="INFO">{"allowed":-1,"used":9849,"status":"OK"}</msg>
<status status="PASS" starttime="20220921 22:21:52.252" endtime="20220921 22:21:52.253"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220921 22:21:52.253" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220921 22:21:52.253" endtime="20220921 22:21:52.253"/>
</kw>
<status status="PASS" starttime="20220921 22:21:52.236" endtime="20220921 22:21:52.254"/>
</kw>
<msg timestamp="20220921 22:21:52.254" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220921 22:21:52.236" endtime="20220921 22:21:52.254"/>
</kw>
<msg timestamp="20220921 22:21:52.255" level="INFO">${result} = {"allowed":-1,"used":9849,"status":"OK"}</msg>
<status status="PASS" starttime="20220921 22:21:52.235" endtime="20220921 22:21:52.255"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220921 22:21:52.255" endtime="20220921 22:21:52.256"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220921 22:21:52.256" endtime="20220921 22:21:52.256"/>
</kw>
<status status="PASS" starttime="20220921 22:21:52.235" endtime="20220921 22:21:52.257"/>
</kw>
<status status="PASS" starttime="20220921 22:21:52.235" endtime="20220921 22:21:52.257"/>
</kw>
<status status="PASS" starttime="20220921 22:21:52.234" endtime="20220921 22:21:52.257"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220921 22:21:52.233" endtime="20220921 22:21:52.257"/>
</test>
<test id="s1-s2-s2-t15" name="Check Recon Namespace Bucket Quota Usage" line="142">
<kw name="Wait For Summary">
<arg>${QUOTA_USAGE_URL}?path=/${VOLUME}/${BUCKET}</arg>
<arg>\"used\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220921 22:21:52.264" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/quota?path=/vol-wzzzx/buc-jwsvu 2&gt;&amp;1'.</msg>
<msg timestamp="20220921 22:21:52.278" level="INFO">${rc} = 0</msg>
<msg timestamp="20220921 22:21:52.278" level="INFO">${output} = {"allowed":-1,"used":9849,"status":"OK"}</msg>
<status status="PASS" starttime="20220921 22:21:52.262" endtime="20220921 22:21:52.278"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220921 22:21:52.279" level="INFO">{"allowed":-1,"used":9849,"status":"OK"}</msg>
<status status="PASS" starttime="20220921 22:21:52.279" endtime="20220921 22:21:52.279"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220921 22:21:52.280" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220921 22:21:52.280" endtime="20220921 22:21:52.280"/>
</kw>
<status status="PASS" starttime="20220921 22:21:52.261" endtime="20220921 22:21:52.280"/>
</kw>
<msg timestamp="20220921 22:21:52.281" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220921 22:21:52.261" endtime="20220921 22:21:52.281"/>
</kw>
<msg timestamp="20220921 22:21:52.281" level="INFO">${result} = {"allowed":-1,"used":9849,"status":"OK"}</msg>
<status status="PASS" starttime="20220921 22:21:52.260" endtime="20220921 22:21:52.281"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220921 22:21:52.281" endtime="20220921 22:21:52.282"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220921 22:21:52.282" endtime="20220921 22:21:52.283"/>
</kw>
<status status="PASS" starttime="20220921 22:21:52.260" endtime="20220921 22:21:52.283"/>
</kw>
<status status="PASS" starttime="20220921 22:21:52.260" endtime="20220921 22:21:52.283"/>
</kw>
<status status="PASS" starttime="20220921 22:21:52.259" endtime="20220921 22:21:52.283"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220921 22:21:52.258" endtime="20220921 22:21:52.283"/>
</test>
<test id="s1-s2-s2-t16" name="Check Recon Namespace File Size Distribution Root" line="145">
<kw name="Wait For Summary">
<arg>${FILE_SIZE_DIST_URL}?path=/</arg>
<arg>\"dist\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220921 22:21:52.290" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20220921 22:21:52.304" level="INFO">${rc} = 0</msg>
<msg timestamp="20220921 22:21:52.304" level="INFO">${output} = {"dist":[0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20220921 22:21:52.288" endtime="20220921 22:21:52.304"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220921 22:21:52.305" level="INFO">{"dist":[0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20220921 22:21:52.304" endtime="20220921 22:21:52.305"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220921 22:21:52.305" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220921 22:21:52.305" endtime="20220921 22:21:52.306"/>
</kw>
<status status="PASS" starttime="20220921 22:21:52.287" endtime="20220921 22:21:52.306"/>
</kw>
<msg timestamp="20220921 22:21:52.306" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220921 22:21:52.287" endtime="20220921 22:21:52.306"/>
</kw>
<msg timestamp="20220921 22:21:52.307" level="INFO">${result} = {"dist":[0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20220921 22:21:52.286" endtime="20220921 22:21:52.307"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220921 22:21:52.307" endtime="20220921 22:21:52.307"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220921 22:21:52.307" endtime="20220921 22:21:52.308"/>
</kw>
<status status="PASS" starttime="20220921 22:21:52.286" endtime="20220921 22:21:52.308"/>
</kw>
<status status="PASS" starttime="20220921 22:21:52.286" endtime="20220921 22:21:52.308"/>
</kw>
<status status="PASS" starttime="20220921 22:21:52.285" endtime="20220921 22:21:52.308"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220921 22:21:52.284" endtime="20220921 22:21:52.308"/>
</test>
<doc>Smoke test for Recon Namespace Summary Endpoint for FSO buckets.</doc>
<status status="PASS" starttime="20220921 22:20:50.758" endtime="20220921 22:21:52.309"/>
</suite>
<status status="PASS" starttime="20220921 22:20:04.373" endtime="20220921 22:21:52.311"/>
</suite>
<suite id="s1-s3" name="Loaddata" source="/opt/hadoop/smoketest/topology/loaddata.robot">
<test id="s1-s3-t1" name="Create a volume, bucket and key" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create topvol1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220921 22:21:57.687" level="INFO">Running command 'ozone sh volume create topvol1 2&gt;&amp;1'.</msg>
<msg timestamp="20220921 22:22:01.156" level="INFO">${rc} = 0</msg>
<msg timestamp="20220921 22:22:01.157" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20220921 22:21:57.683" endtime="20220921 22:22:01.157"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220921 22:22:01.158" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20220921 22:22:01.157" endtime="20220921 22:22:01.158"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220921 22:22:01.159" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220921 22:22:01.158" endtime="20220921 22:22:01.159"/>
</kw>
<status status="PASS" starttime="20220921 22:21:57.683" endtime="20220921 22:22:01.159"/>
</kw>
<msg timestamp="20220921 22:22:01.159" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220921 22:21:57.682" endtime="20220921 22:22:01.160"/>
</kw>
<msg timestamp="20220921 22:22:01.161" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20220921 22:21:57.682" endtime="20220921 22:22:01.161"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220921 22:22:01.161" endtime="20220921 22:22:01.161"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /topvol1/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220921 22:22:01.165" level="INFO">Running command 'ozone sh bucket create /topvol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20220921 22:22:04.587" level="INFO">${rc} = 0</msg>
<msg timestamp="20220921 22:22:04.588" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20220921 22:22:01.163" endtime="20220921 22:22:04.588"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220921 22:22:04.589" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20220921 22:22:04.588" endtime="20220921 22:22:04.589"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220921 22:22:04.590" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220921 22:22:04.589" endtime="20220921 22:22:04.590"/>
</kw>
<status status="PASS" starttime="20220921 22:22:01.162" endtime="20220921 22:22:04.590"/>
</kw>
<msg timestamp="20220921 22:22:04.590" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220921 22:22:01.162" endtime="20220921 22:22:04.590"/>
</kw>
<msg timestamp="20220921 22:22:04.591" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20220921 22:22:01.162" endtime="20220921 22:22:04.591"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220921 22:22:04.591" endtime="20220921 22:22:04.591"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220921 22:22:04.594" level="INFO">Running command 'ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220921 22:22:10.288" level="INFO">${rc} = 0</msg>
<msg timestamp="20220921 22:22:10.289" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20220921 22:22:04.592" endtime="20220921 22:22:10.289"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220921 22:22:10.290" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20220921 22:22:10.289" endtime="20220921 22:22:10.290"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220921 22:22:10.290" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220921 22:22:10.290" endtime="20220921 22:22:10.290"/>
</kw>
<status status="PASS" starttime="20220921 22:22:04.592" endtime="20220921 22:22:10.291"/>
</kw>
<msg timestamp="20220921 22:22:10.291" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220921 22:22:04.592" endtime="20220921 22:22:10.291"/>
</kw>
<msg timestamp="20220921 22:22:10.291" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20220921 22:22:04.591" endtime="20220921 22:22:10.291"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220921 22:22:10.292" endtime="20220921 22:22:10.292"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220921 22:21:57.681" endtime="20220921 22:22:10.292"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20220921 22:21:57.633" endtime="20220921 22:22:10.293"/>
</suite>
<suite id="s1-s4" name="readdata-first-half" source="/opt/hadoop/smoketest/topology/readdata.robot">
<test id="s1-s4-t1" name="Read data from previously created key" line="27">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220921 22:22:27.275" level="INFO">${random} = 45773</msg>
<status status="PASS" starttime="20220921 22:22:27.274" endtime="20220921 22:22:27.275"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220921 22:22:27.280" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-45773 2&gt;&amp;1'.</msg>
<msg timestamp="20220921 22:22:32.811" level="INFO">${rc} = 0</msg>
<msg timestamp="20220921 22:22:32.811" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20220921 22:22:27.277" endtime="20220921 22:22:32.811"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220921 22:22:32.813" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20220921 22:22:32.812" endtime="20220921 22:22:32.813"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220921 22:22:32.813" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220921 22:22:32.813" endtime="20220921 22:22:32.813"/>
</kw>
<status status="PASS" starttime="20220921 22:22:27.276" endtime="20220921 22:22:32.814"/>
</kw>
<msg timestamp="20220921 22:22:32.814" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220921 22:22:27.276" endtime="20220921 22:22:32.815"/>
</kw>
<msg timestamp="20220921 22:22:32.816" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20220921 22:22:27.275" endtime="20220921 22:22:32.816"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220921 22:22:32.816" endtime="20220921 22:22:32.816"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220921 22:22:27.274" endtime="20220921 22:22:32.817"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20220921 22:22:27.224" endtime="20220921 22:22:32.818"/>
</suite>
<suite id="s1-s5" name="readdata-second-half" source="/opt/hadoop/smoketest/topology/readdata.robot">
<test id="s1-s5-t1" name="Read data from previously created key" line="27">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220921 22:23:16.454" level="INFO">${random} = 56876</msg>
<status status="PASS" starttime="20220921 22:23:16.454" endtime="20220921 22:23:16.454"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220921 22:23:16.459" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-56876 2&gt;&amp;1'.</msg>
<msg timestamp="20220921 22:23:54.784" level="INFO">${rc} = 0</msg>
<msg timestamp="20220921 22:23:54.784" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20220921 22:23:16.456" endtime="20220921 22:23:54.784"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220921 22:23:54.785" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20220921 22:23:54.784" endtime="20220921 22:23:54.785"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220921 22:23:54.786" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220921 22:23:54.785" endtime="20220921 22:23:54.786"/>
</kw>
<status status="PASS" starttime="20220921 22:23:16.455" endtime="20220921 22:23:54.786"/>
</kw>
<msg timestamp="20220921 22:23:54.786" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220921 22:23:16.455" endtime="20220921 22:23:54.788"/>
</kw>
<msg timestamp="20220921 22:23:54.788" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20220921 22:23:16.454" endtime="20220921 22:23:54.788"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220921 22:23:54.788" endtime="20220921 22:23:54.788"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220921 22:23:16.453" endtime="20220921 22:23:54.789"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20220921 22:23:16.413" endtime="20220921 22:23:54.790"/>
</suite>
<suite id="s1-s6" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s6-t1" name="Check webui static resources" line="29">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220921 22:19:17.582" endtime="20220921 22:19:17.583"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -s -I http://${SCM}:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220921 22:19:17.600" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20220921 22:19:17.749" level="INFO">${rc} = 0</msg>
<msg timestamp="20220921 22:19:17.749" level="INFO">${output} = HTTP/1.1 200 OK
Date: Wed, 21 Sep 2022 22:19:17 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Wed, 21 Sep 2022 21:55:54 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20220921 22:19:17.592" endtime="20220921 22:19:17.749"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220921 22:19:17.750" level="INFO">HTTP/1.1 200 OK
Date: Wed, 21 Sep 2022 22:19:17 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Wed, 21 Sep 2022 21:55:54 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20220921 22:19:17.750" endtime="20220921 22:19:17.750"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220921 22:19:17.755" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220921 22:19:17.751" endtime="20220921 22:19:17.755"/>
</kw>
<status status="PASS" starttime="20220921 22:19:17.592" endtime="20220921 22:19:17.755"/>
</kw>
<msg timestamp="20220921 22:19:17.755" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220921 22:19:17.591" endtime="20220921 22:19:17.757"/>
</kw>
<msg timestamp="20220921 22:19:17.757" level="INFO">${result} = HTTP/1.1 200 OK
Date: Wed, 21 Sep 2022 22:19:17 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Wed, 21 Sep 2022 21:55:54 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20220921 22:19:17.584" endtime="20220921 22:19:17.757"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220921 22:19:17.757" endtime="20220921 22:19:17.757"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220921 22:19:17.580" endtime="20220921 22:19:17.758"/>
</test>
<test id="s1-s6-t2" name="Basic Freon smoketest" line="34">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220921 22:19:17.770" endtime="20220921 22:19:17.770"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>10</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220921 22:19:17.771" level="INFO">${random} = Krf5w2Wlhl</msg>
<status status="PASS" starttime="20220921 22:19:17.770" endtime="20220921 22:19:17.771"/>
</kw>
<kw name="Freon OCKG" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220921 22:19:17.789" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p Krf5w2Wlhl  2&gt;&amp;1'.</msg>
<msg timestamp="20220921 22:19:30.767" level="INFO">${rc} = 0</msg>
<msg timestamp="20220921 22:19:30.767" level="INFO">${output} = 2022-09-21 22:19:20,806 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-09-21 22:19:21,019 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220921 22:19:17.774" endtime="20220921 22:19:30.767"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220921 22:19:30.769" level="INFO">2022-09-21 22:19:20,806 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-09-21 22:19:21,019 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-09-21 22:19:21,019 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-09-21 22:19:21,206 [main] INFO freon.BaseFreonGenerator: Executing test with prefix Krf5w2Wlhl and number-of-tests 1
2022-09-21 22:19:21,296 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-09-21 22:19:22,304 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-09-21 22:19:23,305 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-09-21 22:19:24,305 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-09-21 22:19:25,306 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-09-21 22:19:25,470 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2022-09-21 22:19:25,663 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false 
2022-09-21 22:19:26,306 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-09-21 22:19:27,044 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-09-21 22:19:27,307 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-09-21 22:19:27,323 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-09-21 22:19:28,307 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-09-21 22:19:29,309 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-09-21 22:19:30,310 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-09-21 22:19:30,357 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=3744.799254, max=3744.799254, mean=3744.799254, stddev=0.0, median=3744.799254, p75=3744.799254, p95=3744.799254, p98=3744.799254, p99=3744.799254, p999=3744.799254, mean_rate=0.21727998302685256, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-09-21 22:19:30,358 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 9
2022-09-21 22:19:30,358 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-09-21 22:19:30,358 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20220921 22:19:30.768" endtime="20220921 22:19:30.769"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220921 22:19:30.769" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220921 22:19:30.769" endtime="20220921 22:19:30.769"/>
</kw>
<status status="PASS" starttime="20220921 22:19:17.773" endtime="20220921 22:19:30.770"/>
</kw>
<msg timestamp="20220921 22:19:30.770" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220921 22:19:17.773" endtime="20220921 22:19:30.770"/>
</kw>
<msg timestamp="20220921 22:19:30.771" level="INFO">${result} = 2022-09-21 22:19:20,806 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-09-21 22:19:21,019 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220921 22:19:17.772" endtime="20220921 22:19:30.771"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220921 22:19:30.771" endtime="20220921 22:19:30.771"/>
</kw>
<status status="PASS" starttime="20220921 22:19:17.771" endtime="20220921 22:19:30.771"/>
</kw>
<kw name="Freon OCKV" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220921 22:19:30.776" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p Krf5w2Wlhl  2&gt;&amp;1'.</msg>
<msg timestamp="20220921 22:19:38.784" level="INFO">${rc} = 0</msg>
<msg timestamp="20220921 22:19:38.784" level="INFO">${output} = 2022-09-21 22:19:33,343 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-09-21 22:19:33,515 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220921 22:19:30.774" endtime="20220921 22:19:38.784"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220921 22:19:38.785" level="INFO">2022-09-21 22:19:33,343 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-09-21 22:19:33,515 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-09-21 22:19:33,515 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-09-21 22:19:33,753 [main] INFO freon.BaseFreonGenerator: Executing test with prefix Krf5w2Wlhl and number-of-tests 1
2022-09-21 22:19:33,867 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-09-21 22:19:34,871 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-09-21 22:19:35,873 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-09-21 22:19:36,300 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-09-21 22:19:36,875 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-09-21 22:19:37,875 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-09-21 22:19:38,397 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=69.028856, max=69.028856, mean=69.028856, stddev=0.0, median=69.028856, p75=69.028856, p95=69.028856, p98=69.028856, p99=69.028856, p999=69.028856, mean_rate=0.9687079557437672, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-09-21 22:19:38,401 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 5
2022-09-21 22:19:38,404 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-09-21 22:19:38,404 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20220921 22:19:38.785" endtime="20220921 22:19:38.785"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220921 22:19:38.786" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220921 22:19:38.786" endtime="20220921 22:19:38.786"/>
</kw>
<status status="PASS" starttime="20220921 22:19:30.773" endtime="20220921 22:19:38.787"/>
</kw>
<msg timestamp="20220921 22:19:38.787" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220921 22:19:30.773" endtime="20220921 22:19:38.787"/>
</kw>
<msg timestamp="20220921 22:19:38.788" level="INFO">${result} = 2022-09-21 22:19:33,343 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-09-21 22:19:33,515 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220921 22:19:30.772" endtime="20220921 22:19:38.788"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220921 22:19:38.788" endtime="20220921 22:19:38.788"/>
</kw>
<status status="PASS" starttime="20220921 22:19:30.771" endtime="20220921 22:19:38.788"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220921 22:19:17.769" endtime="20220921 22:19:38.789"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20220921 22:19:17.490" endtime="20220921 22:19:38.790"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="200251"/>
</suite>
<statistics>
<total>
<stat pass="32" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="32" fail="0" skip="0" id="s1" name="ozone-topology">ozone-topology</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1" name="Cli">ozone-topology.Cli</stat>
<stat pass="23" fail="0" skip="0" id="s1-s2" name="Recon">ozone-topology.Recon</stat>
<stat pass="7" fail="0" skip="0" id="s1-s2-s1" name="Recon-Api">ozone-topology.Recon.Recon-Api</stat>
<stat pass="16" fail="0" skip="0" id="s1-s2-s2" name="Recon-Fso-Nssummary">ozone-topology.Recon.Recon-Fso-Nssummary</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3" name="Loaddata">ozone-topology.Loaddata</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="readdata-first-half">ozone-topology.readdata-first-half</stat>
<stat pass="1" fail="0" skip="0" id="s1-s5" name="readdata-second-half">ozone-topology.readdata-second-half</stat>
<stat pass="2" fail="0" skip="0" id="s1-s6" name="Basic">ozone-topology.Basic</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
