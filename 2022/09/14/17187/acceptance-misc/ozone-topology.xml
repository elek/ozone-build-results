<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 5.0.1 (Python 3.8.10 on linux)" generated="20220914 23:11:25.701" rpa="false" schemaversion="3">
<suite id="s1" name="ozone-topology">
<suite id="s1-s1" name="Cli" source="/opt/hadoop/smoketest/topology/cli.robot">
<test id="s1-s1-t1" name="Run printTopology" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220914 23:06:47.916" level="INFO">Running command 'ozone admin printTopology 2&gt;&amp;1'.</msg>
<msg timestamp="20220914 23:06:51.943" level="INFO">${rc} = 0</msg>
<msg timestamp="20220914 23:06:51.943" level="INFO">${output} = State = HEALTHY
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.5(ozone-topolog...</msg>
<status status="PASS" starttime="20220914 23:06:47.911" endtime="20220914 23:06:51.943"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220914 23:06:51.945" level="INFO">State = HEALTHY
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1</msg>
<status status="PASS" starttime="20220914 23:06:51.944" endtime="20220914 23:06:51.945"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220914 23:06:51.946" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220914 23:06:51.945" endtime="20220914 23:06:51.946"/>
</kw>
<status status="PASS" starttime="20220914 23:06:47.911" endtime="20220914 23:06:51.946"/>
</kw>
<msg timestamp="20220914 23:06:51.946" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220914 23:06:47.910" endtime="20220914 23:06:51.948"/>
</kw>
<msg timestamp="20220914 23:06:51.949" level="INFO">${output} = State = HEALTHY
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.5(ozone-topolog...</msg>
<status status="PASS" starttime="20220914 23:06:47.910" endtime="20220914 23:06:51.949"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
<arg>IN_SERVICE</arg>
<arg>/rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220914 23:06:51.949" endtime="20220914 23:06:51.950"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220914 23:06:47.908" endtime="20220914 23:06:51.950"/>
</test>
<test id="s1-s1-t2" name="Run printTopology -o" line="30">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology -o</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220914 23:06:51.956" level="INFO">Running command 'ozone admin printTopology -o 2&gt;&amp;1'.</msg>
<msg timestamp="20220914 23:06:56.602" level="INFO">${rc} = 0</msg>
<msg timestamp="20220914 23:06:56.602" level="INFO">${output} = State = HEALTHY
Location: /rack1
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net) IN_SERVICE
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net) IN_SERVICE
 10.5.0.4(ozone-topology_data...</msg>
<status status="PASS" starttime="20220914 23:06:51.953" endtime="20220914 23:06:56.602"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220914 23:06:56.603" level="INFO">State = HEALTHY
Location: /rack1
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net) IN_SERVICE
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net) IN_SERVICE
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net) IN_SERVICE
Location: /rack2
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net) IN_SERVICE
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net) IN_SERVICE
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net) IN_SERVICE</msg>
<status status="PASS" starttime="20220914 23:06:56.602" endtime="20220914 23:06:56.603"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220914 23:06:56.604" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220914 23:06:56.604" endtime="20220914 23:06:56.604"/>
</kw>
<status status="PASS" starttime="20220914 23:06:51.952" endtime="20220914 23:06:56.605"/>
</kw>
<msg timestamp="20220914 23:06:56.605" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220914 23:06:51.952" endtime="20220914 23:06:56.605"/>
</kw>
<msg timestamp="20220914 23:06:56.605" level="INFO">${output} = State = HEALTHY
Location: /rack1
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net) IN_SERVICE
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net) IN_SERVICE
 10.5.0.4(ozone-topology_data...</msg>
<status status="PASS" starttime="20220914 23:06:51.951" endtime="20220914 23:06:56.605"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Location: /rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220914 23:06:56.606" endtime="20220914 23:06:56.606"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net) IN_SERVICE</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220914 23:06:56.606" endtime="20220914 23:06:56.607"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220914 23:06:51.951" endtime="20220914 23:06:56.607"/>
</test>
<test id="s1-s1-t3" name="Run printTopology --operational-state IN_SERVICE" line="34">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology --operational-state IN_SERVICE</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220914 23:06:56.614" level="INFO">Running command 'ozone admin printTopology --operational-state IN_SERVICE 2&gt;&amp;1'.</msg>
<msg timestamp="20220914 23:07:00.863" level="INFO">${rc} = 0</msg>
<msg timestamp="20220914 23:07:00.863" level="INFO">${output} = State = HEALTHY
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.5(ozone-topolog...</msg>
<status status="PASS" starttime="20220914 23:06:56.611" endtime="20220914 23:07:00.863"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220914 23:07:00.865" level="INFO">State = HEALTHY
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1</msg>
<status status="PASS" starttime="20220914 23:07:00.864" endtime="20220914 23:07:00.865"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220914 23:07:00.865" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220914 23:07:00.865" endtime="20220914 23:07:00.866"/>
</kw>
<status status="PASS" starttime="20220914 23:06:56.611" endtime="20220914 23:07:00.866"/>
</kw>
<msg timestamp="20220914 23:07:00.866" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220914 23:06:56.610" endtime="20220914 23:07:00.867"/>
</kw>
<msg timestamp="20220914 23:07:00.867" level="INFO">${output} = State = HEALTHY
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.5(ozone-topolog...</msg>
<status status="PASS" starttime="20220914 23:06:56.609" endtime="20220914 23:07:00.867"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
<arg>IN_SERVICE</arg>
<arg>/rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220914 23:07:00.867" endtime="20220914 23:07:00.868"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220914 23:06:56.608" endtime="20220914 23:07:00.868"/>
</test>
<test id="s1-s1-t4" name="Run printTopology --node-state HEALTHY" line="37">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology --node-state HEALTHY</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220914 23:07:00.875" level="INFO">Running command 'ozone admin printTopology --node-state HEALTHY 2&gt;&amp;1'.</msg>
<msg timestamp="20220914 23:07:05.108" level="INFO">${rc} = 0</msg>
<msg timestamp="20220914 23:07:05.108" level="INFO">${output} = State = HEALTHY
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.5(ozone-topolog...</msg>
<status status="PASS" starttime="20220914 23:07:00.872" endtime="20220914 23:07:05.108"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220914 23:07:05.109" level="INFO">State = HEALTHY
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1</msg>
<status status="PASS" starttime="20220914 23:07:05.108" endtime="20220914 23:07:05.109"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220914 23:07:05.110" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220914 23:07:05.110" endtime="20220914 23:07:05.110"/>
</kw>
<status status="PASS" starttime="20220914 23:07:00.871" endtime="20220914 23:07:05.111"/>
</kw>
<msg timestamp="20220914 23:07:05.111" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220914 23:07:00.871" endtime="20220914 23:07:05.111"/>
</kw>
<msg timestamp="20220914 23:07:05.112" level="INFO">${output} = State = HEALTHY
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.5(ozone-topolog...</msg>
<status status="PASS" starttime="20220914 23:07:00.870" endtime="20220914 23:07:05.112"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
<arg>IN_SERVICE</arg>
<arg>/rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220914 23:07:05.112" endtime="20220914 23:07:05.112"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220914 23:07:00.869" endtime="20220914 23:07:05.113"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20220914 23:06:47.846" endtime="20220914 23:07:05.115"/>
</suite>
<suite id="s1-s2" name="Recon" source="/opt/hadoop/smoketest/recon">
<suite id="s1-s2-s1" name="Recon-Api" source="/opt/hadoop/smoketest/recon/recon-api.robot">
<test id="s1-s2-s1-t1" name="Check if Recon picks up OM data" line="61">
<kw name="Freon OCKG" library="freon" type="SETUP">
<arg>n=10</arg>
<arg>args=-s 1025 -v recon -b api</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220914 23:07:12.010" level="INFO">Running command 'ozone freon ockg  -t 1 -n10 -p ockg -s 1025 -v recon -b api 2&gt;&amp;1'.</msg>
<msg timestamp="20220914 23:07:33.908" level="INFO">${rc} = 0</msg>
<msg timestamp="20220914 23:07:33.908" level="INFO">${output} = 2022-09-14 23:07:14,713 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-09-14 23:07:14,903 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220914 23:07:12.005" endtime="20220914 23:07:33.908"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220914 23:07:33.910" level="INFO">2022-09-14 23:07:14,713 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-09-14 23:07:14,903 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-09-14 23:07:14,903 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-09-14 23:07:15,240 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockg and number-of-tests 10
2022-09-14 23:07:15,429 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2022-09-14 23:07:16,442 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2022-09-14 23:07:17,011 [main] INFO rpc.RpcClient: Creating Volume: recon, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2022-09-14 23:07:17,070 [main] INFO rpc.RpcClient: Creating Bucket: recon/api, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false 
2022-09-14 23:07:17,444 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2022-09-14 23:07:17,962 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-09-14 23:07:18,335 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-09-14 23:07:18,451 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2022-09-14 23:07:19,452 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2022-09-14 23:07:20,456 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2022-09-14 23:07:21,456 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2022-09-14 23:07:22,457 [Thread-5] INFO freon.ProgressBar: Progress: 10.00 % (1 out of 10)
2022-09-14 23:07:23,458 [Thread-5] INFO freon.ProgressBar: Progress: 20.00 % (2 out of 10)
2022-09-14 23:07:24,458 [Thread-5] INFO freon.ProgressBar: Progress: 20.00 % (2 out of 10)
2022-09-14 23:07:25,459 [Thread-5] INFO freon.ProgressBar: Progress: 50.00 % (5 out of 10)
2022-09-14 23:07:26,459 [Thread-5] INFO freon.ProgressBar: Progress: 50.00 % (5 out of 10)
2022-09-14 23:07:27,460 [Thread-5] INFO freon.ProgressBar: Progress: 60.00 % (6 out of 10)
2022-09-14 23:07:28,460 [Thread-5] INFO freon.ProgressBar: Progress: 60.00 % (6 out of 10)
2022-09-14 23:07:29,461 [Thread-5] INFO freon.ProgressBar: Progress: 60.00 % (6 out of 10)
2022-09-14 23:07:30,462 [Thread-5] INFO freon.ProgressBar: Progress: 70.00 % (7 out of 10)
2022-09-14 23:07:31,462 [Thread-5] INFO freon.ProgressBar: Progress: 70.00 % (7 out of 10)
2022-09-14 23:07:32,463 [Thread-5] INFO freon.ProgressBar: Progress: 90.00 % (9 out of 10)
2022-09-14 23:07:33,463 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (10 out of 10)
2022-09-14 23:07:33,552 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=10, min=128.385925, max=5122.089917, mean=1518.8956693080602, stddev=1501.2573345151, median=425.398942, p75=2502.097178, p95=5122.089917, p98=5122.089917, p99=5122.089917, p999=5122.089917, mean_rate=0.6085614253205701, m1=0.10554492388697982, m5=0.022866771810964588, m15=0.0077255195090157325, rate_unit=events/second, duration_unit=milliseconds
2022-09-14 23:07:33,554 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 18
2022-09-14 23:07:33,554 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-09-14 23:07:33,554 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 10</msg>
<status status="PASS" starttime="20220914 23:07:33.909" endtime="20220914 23:07:33.910"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220914 23:07:33.911" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220914 23:07:33.910" endtime="20220914 23:07:33.911"/>
</kw>
<status status="PASS" starttime="20220914 23:07:12.004" endtime="20220914 23:07:33.911"/>
</kw>
<msg timestamp="20220914 23:07:33.912" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220914 23:07:12.004" endtime="20220914 23:07:33.913"/>
</kw>
<msg timestamp="20220914 23:07:33.914" level="INFO">${result} = 2022-09-14 23:07:14,713 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-09-14 23:07:14,903 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220914 23:07:12.003" endtime="20220914 23:07:33.914"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220914 23:07:33.914" endtime="20220914 23:07:33.914"/>
</kw>
<status status="PASS" starttime="20220914 23:07:12.002" endtime="20220914 23:07:33.915"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Check if Recon picks up container from OM</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220914 23:07:33.916" endtime="20220914 23:07:33.917"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220914 23:07:33.922" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20220914 23:07:34.205" level="INFO">${rc} = 0</msg>
<msg timestamp="20220914 23:07:34.206" level="INFO">${output} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20220914 23:07:33.919" endtime="20220914 23:07:34.206"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220914 23:07:34.207" level="INFO">{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20220914 23:07:34.206" endtime="20220914 23:07:34.207"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220914 23:07:34.208" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220914 23:07:34.207" endtime="20220914 23:07:34.208"/>
</kw>
<status status="PASS" starttime="20220914 23:07:33.918" endtime="20220914 23:07:34.208"/>
</kw>
<msg timestamp="20220914 23:07:34.209" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220914 23:07:33.918" endtime="20220914 23:07:34.209"/>
</kw>
<msg timestamp="20220914 23:07:34.209" level="INFO">${result} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20220914 23:07:33.917" endtime="20220914 23:07:34.209"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220914 23:07:34.210" endtime="20220914 23:07:34.210"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220914 23:07:34.218" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20220914 23:07:34.249" level="INFO">${rc} = 0</msg>
<msg timestamp="20220914 23:07:34.249" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20220914 23:07:34.213" endtime="20220914 23:07:34.249"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220914 23:07:34.250" level="INFO">[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20220914 23:07:34.249" endtime="20220914 23:07:34.250"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220914 23:07:34.251" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220914 23:07:34.251" endtime="20220914 23:07:34.251"/>
</kw>
<status status="PASS" starttime="20220914 23:07:34.213" endtime="20220914 23:07:34.252"/>
</kw>
<msg timestamp="20220914 23:07:34.252" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220914 23:07:34.212" endtime="20220914 23:07:34.252"/>
</kw>
<msg timestamp="20220914 23:07:34.253" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20220914 23:07:34.210" endtime="20220914 23:07:34.253"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20220914 23:07:34.254" level="FAIL">'[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20220914 23:07:34.253" endtime="20220914 23:07:34.254"/>
</kw>
<status status="FAIL" starttime="20220914 23:07:33.916" endtime="20220914 23:07:34.255"/>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220914 23:07:44.257" endtime="20220914 23:07:44.257"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220914 23:07:44.263" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20220914 23:07:44.283" level="INFO">${rc} = 0</msg>
<msg timestamp="20220914 23:07:44.283" level="INFO">${output} = {"data":{"totalCount":4,"containers":[{"ContainerID":1,"NumberOfKeys":1},{"ContainerID":2,"NumberOfKeys":5},{"ContainerID":3,"NumberOfKeys":2},{"ContainerID":4,"NumberOfKeys":3}]}}</msg>
<status status="PASS" starttime="20220914 23:07:44.259" endtime="20220914 23:07:44.283"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220914 23:07:44.285" level="INFO">{"data":{"totalCount":4,"containers":[{"ContainerID":1,"NumberOfKeys":1},{"ContainerID":2,"NumberOfKeys":5},{"ContainerID":3,"NumberOfKeys":2},{"ContainerID":4,"NumberOfKeys":3}]}}</msg>
<status status="PASS" starttime="20220914 23:07:44.284" endtime="20220914 23:07:44.285"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220914 23:07:44.286" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220914 23:07:44.285" endtime="20220914 23:07:44.286"/>
</kw>
<status status="PASS" starttime="20220914 23:07:44.258" endtime="20220914 23:07:44.286"/>
</kw>
<msg timestamp="20220914 23:07:44.286" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220914 23:07:44.258" endtime="20220914 23:07:44.287"/>
</kw>
<msg timestamp="20220914 23:07:44.287" level="INFO">${result} = {"data":{"totalCount":4,"containers":[{"ContainerID":1,"NumberOfKeys":1},{"ContainerID":2,"NumberOfKeys":5},{"ContainerID":3,"NumberOfKeys":2},{"ContainerID":4,"NumberOfKeys":3}]}}</msg>
<status status="PASS" starttime="20220914 23:07:44.257" endtime="20220914 23:07:44.287"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220914 23:07:44.287" endtime="20220914 23:07:44.288"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220914 23:07:44.293" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20220914 23:07:44.311" level="INFO">${rc} = 0</msg>
<msg timestamp="20220914 23:07:44.311" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1},{"volume":"recon","bucket":"api","fileSize":2048,"count":10}]</msg>
<status status="PASS" starttime="20220914 23:07:44.290" endtime="20220914 23:07:44.312"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220914 23:07:44.313" level="INFO">[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1},{"volume":"recon","bucket":"api","fileSize":2048,"count":10}]</msg>
<status status="PASS" starttime="20220914 23:07:44.312" endtime="20220914 23:07:44.313"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220914 23:07:44.314" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220914 23:07:44.313" endtime="20220914 23:07:44.314"/>
</kw>
<status status="PASS" starttime="20220914 23:07:44.289" endtime="20220914 23:07:44.315"/>
</kw>
<msg timestamp="20220914 23:07:44.315" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220914 23:07:44.289" endtime="20220914 23:07:44.315"/>
</kw>
<msg timestamp="20220914 23:07:44.316" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1},{"volume":"recon","bucket":"api","fileSize":2048,"count":10}]</msg>
<status status="PASS" starttime="20220914 23:07:44.288" endtime="20220914 23:07:44.316"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220914 23:07:44.316" endtime="20220914 23:07:44.316"/>
</kw>
<status status="PASS" starttime="20220914 23:07:44.256" endtime="20220914 23:07:44.317"/>
</kw>
<status status="PASS" starttime="20220914 23:07:33.915" endtime="20220914 23:07:44.317"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220914 23:07:12.001" endtime="20220914 23:07:44.317"/>
</test>
<test id="s1-s2-s1-t2" name="Check if Recon picks up DN heartbeats" line="65">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/datanodes</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220914 23:07:44.324" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/datanodes 2&gt;&amp;1'.</msg>
<msg timestamp="20220914 23:07:44.384" level="INFO">${rc} = 0</msg>
<msg timestamp="20220914 23:07:44.384" level="INFO">${output} = {"totalCount":6,"datanodes":[{"uuid":"b76ecc59-0902-4a4a-b07c-496c5308f257","hostname":"ozone-topology_datanode_2_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1663196...</msg>
<status status="PASS" starttime="20220914 23:07:44.322" endtime="20220914 23:07:44.385"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220914 23:07:44.386" level="INFO">{"totalCount":6,"datanodes":[{"uuid":"b76ecc59-0902-4a4a-b07c-496c5308f257","hostname":"ozone-topology_datanode_2_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1663196842534,"storageReport":{"capacity":89297309696,"used":4096,"remaining":31411511296},"pipelines":[{"pipelineID":"44414545-ff24-49b7-bab8-bb3a8f1a76ef","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net"},{"pipelineID":"8942ebd5-4cf3-45b4-adbb-ce5f27b92bc8","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net"},{"pipelineID":"11a2d738-2f5f-4164-b884-50ee32ce5cea","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net"}],"containers":2,"openContainers":2,"leaderCount":2,"version":"1.3.0-SNAPSHOT","setupTime":1663196695068,"revision":"9ad75b2300cdf81a19d243326c99e2b5bfc6125e","buildDate":"2022-09-14T22:45Z","layoutVersion":4,"networkLocation":"/rack1"},{"uuid":"d3448a2d-6df7-4479-8f0f-d6f648bc5ed0","hostname":"ozone-topology_datanode_4_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1663196842557,"storageReport":{"capacity":89297309696,"used":8192,"remaining":31411621888},"pipelines":[{"pipelineID":"44414545-ff24-49b7-bab8-bb3a8f1a76ef","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net"},{"pipelineID":"dc6a7f1d-4546-4631-a7c2-928708be13ce","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net"},{"pipelineID":"11a2d738-2f5f-4164-b884-50ee32ce5cea","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net"}],"containers":2,"openContainers":2,"leaderCount":2,"version":"1.3.0-SNAPSHOT","setupTime":1663196693763,"revision":"9ad75b2300cdf81a19d243326c99e2b5bfc6125e","buildDate":"2022-09-14T22:45Z","layoutVersion":4,"networkLocation":"/rack2"},{"uuid":"339ea65c-12e5-4511-b0ce-7053667bcfd4","hostname":"ozone-topology_datanode_1_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1663196842486,"storageReport":{"capacity":89297309696,"used":4096,"remaining":31411613696},"pipelines":[{"pipelineID":"44414545-ff24-49b7-bab8-bb3a8f1a76ef","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net"},{"pipelineID":"1f4fe0ad-740e-4215-8b13-d6fb1ed178a9","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net"},{"pipelineID":"11a2d738-2f5f-4164-b884-50ee32ce5cea","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net"}],"containers":2,"openContainers":2,"leaderCount":1,"version":"1.3.0-SNAPSHOT","setupTime":1663196694820,"revision":"9ad75b2300cdf81a19d243326c99e2b5bfc6125e","buildDate":"2022-09-14T22:45Z","layoutVersion":4,"networkLocation":"/rack1"},{"uuid":"ebf276bc-dad3-463a-94ef-16cb7f4e9aaa","hostname":"ozone-topology_datanode_6_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1663196844993,"storageReport":{"capacity":89297309696,"used":4096,"remaining":31411507200},"pipelines":[{"pipelineID":"511fc414-36d8-4152-91f7-757dc4c17dea","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net"},{"pipelineID":"de4ce284-a601-46cd-864a-79e4bdca7e32","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net"},{"pipelineID":"bece5bbb-34fa-4898-aedf-332b26d5fbb9","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net"}],"containers":2,"openContainers":2,"leaderCount":2,"version":"1.3.0-SNAPSHOT","setupTime":1663196696543,"revision":"9ad75b2300cdf81a19d243326c99e2b5bfc6125e","buildDate":"2022-09-14T22:45Z","layoutVersion":4,"networkLocation":"/rack2"},{"uuid":"12df6b86-a5b9-420f-bf74-076eb7a136cc","hostname":"ozone-topology_datanode_3_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1663196845011,"storageReport":{"capacity":89297309696,"used":4096,"remaining":31411601408},"pipelines":[{"pipelineID":"511fc414-36d8-4152-91f7-757dc4c17dea","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net"},{"pipelineID":"de4ce284-a601-46cd-864a-79e4bdca7e32","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net"},{"pipelineID":"56c09db0-2bd2-4696-b09d-2235c01aa7dc","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net"}],"containers":2,"openContainers":2,"leaderCount":2,"version":"1.3.0-SNAPSHOT","setupTime":1663196696222,"revision":"9ad75b2300cdf81a19d243326c99e2b5bfc6125e","buildDate":"2022-09-14T22:45Z","layoutVersion":4,"networkLocation":"/rack1"},{"uuid":"96012aa1-19f3-4f94-91d8-3a4a5e7d7ce7","hostname":"ozone-topology_datanode_5_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1663196844956,"storageReport":{"capacity":89297309696,"used":4096,"remaining":31411621888},"pipelines":[{"pipelineID":"511fc414-36d8-4152-91f7-757dc4c17dea","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net"},{"pipelineID":"de4ce284-a601-46cd-864a-79e4bdca7e32","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net"},{"pipelineID":"c0ffdd01-a552-43c3-a188-be1562090c70","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net"}],"containers":2,"openContainers":2,"leaderCount":1,"version":"1.3.0-SNAPSHOT","setupTime":1663196694748,"revision":"9ad75b2300cdf81a19d243326c99e2b5bfc6125e","buildDate":"2022-09-14T22:45Z","layoutVersion":4,"networkLocation":"/rack2"}]}</msg>
<status status="PASS" starttime="20220914 23:07:44.385" endtime="20220914 23:07:44.386"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220914 23:07:44.387" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220914 23:07:44.386" endtime="20220914 23:07:44.387"/>
</kw>
<status status="PASS" starttime="20220914 23:07:44.321" endtime="20220914 23:07:44.387"/>
</kw>
<msg timestamp="20220914 23:07:44.388" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220914 23:07:44.321" endtime="20220914 23:07:44.388"/>
</kw>
<msg timestamp="20220914 23:07:44.388" level="INFO">${result} = {"totalCount":6,"datanodes":[{"uuid":"b76ecc59-0902-4a4a-b07c-496c5308f257","hostname":"ozone-topology_datanode_2_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1663196...</msg>
<status status="PASS" starttime="20220914 23:07:44.320" endtime="20220914 23:07:44.388"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanodes</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220914 23:07:44.389" endtime="20220914 23:07:44.390"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220914 23:07:44.390" endtime="20220914 23:07:44.391"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220914 23:07:44.391" endtime="20220914 23:07:44.391"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220914 23:07:44.391" endtime="20220914 23:07:44.392"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/pipelines</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220914 23:07:44.397" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/pipelines 2&gt;&amp;1'.</msg>
<msg timestamp="20220914 23:07:44.427" level="INFO">${rc} = 0</msg>
<msg timestamp="20220914 23:07:44.427" level="INFO">${output} = {"totalCount":10,"pipelines":[{"pipelineId":"511fc414-36d8-4152-91f7-757dc4c17dea","status":"OPEN","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net","datanodes":["ozone-topology_datanode_6...</msg>
<status status="PASS" starttime="20220914 23:07:44.394" endtime="20220914 23:07:44.427"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220914 23:07:44.429" level="INFO">{"totalCount":10,"pipelines":[{"pipelineId":"511fc414-36d8-4152-91f7-757dc4c17dea","status":"OPEN","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net","datanodes":["ozone-topology_datanode_6_1.ozone-topology_net","ozone-topology_datanode_3_1.ozone-topology_net","ozone-topology_datanode_5_1.ozone-topology_net"],"lastLeaderElection":0,"duration":110776,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"THREE","containers":1},{"pipelineId":"44414545-ff24-49b7-bab8-bb3a8f1a76ef","status":"OPEN","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net","datanodes":["ozone-topology_datanode_2_1.ozone-topology_net","ozone-topology_datanode_4_1.ozone-topology_net","ozone-topology_datanode_1_1.ozone-topology_net"],"lastLeaderElection":0,"duration":110952,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"THREE","containers":1},{"pipelineId":"de4ce284-a601-46cd-864a-79e4bdca7e32","status":"OPEN","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net","datanodes":["ozone-topology_datanode_6_1.ozone-topology_net","ozone-topology_datanode_3_1.ozone-topology_net","ozone-topology_datanode_5_1.ozone-topology_net"],"lastLeaderElection":0,"duration":110481,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"THREE","containers":1},{"pipelineId":"dc6a7f1d-4546-4631-a7c2-928708be13ce","status":"OPEN","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net","datanodes":["ozone-topology_datanode_4_1.ozone-topology_net"],"lastLeaderElection":0,"duration":110889,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"8942ebd5-4cf3-45b4-adbb-ce5f27b92bc8","status":"OPEN","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net","datanodes":["ozone-topology_datanode_2_1.ozone-topology_net"],"lastLeaderElection":0,"duration":112866,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"1f4fe0ad-740e-4215-8b13-d6fb1ed178a9","status":"OPEN","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net","datanodes":["ozone-topology_datanode_1_1.ozone-topology_net"],"lastLeaderElection":0,"duration":110716,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"56c09db0-2bd2-4696-b09d-2235c01aa7dc","status":"OPEN","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net","datanodes":["ozone-topology_datanode_3_1.ozone-topology_net"],"lastLeaderElection":0,"duration":110402,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"c0ffdd01-a552-43c3-a188-be1562090c70","status":"OPEN","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net","datanodes":["ozone-topology_datanode_5_1.ozone-topology_net"],"lastLeaderElection":0,"duration":110356,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"11a2d738-2f5f-4164-b884-50ee32ce5cea","status":"OPEN","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net","datanodes":["ozone-topology_datanode_2_1.ozone-topology_net","ozone-topology_datanode_4_1.ozone-topology_net","ozone-topology_datanode_1_1.ozone-topology_net"],"lastLeaderElection":0,"duration":110695,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"THREE","containers":1},{"pipelineId":"bece5bbb-34fa-4898-aedf-332b26d5fbb9","status":"OPEN","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net","datanodes":["ozone-topology_datanode_6_1.ozone-topology_net"],"lastLeaderElection":0,"duration":110517,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0}]}</msg>
<status status="PASS" starttime="20220914 23:07:44.427" endtime="20220914 23:07:44.429"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220914 23:07:44.430" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220914 23:07:44.430" endtime="20220914 23:07:44.431"/>
</kw>
<status status="PASS" starttime="20220914 23:07:44.394" endtime="20220914 23:07:44.431"/>
</kw>
<msg timestamp="20220914 23:07:44.431" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220914 23:07:44.393" endtime="20220914 23:07:44.431"/>
</kw>
<msg timestamp="20220914 23:07:44.432" level="INFO">${result} = {"totalCount":10,"pipelines":[{"pipelineId":"511fc414-36d8-4152-91f7-757dc4c17dea","status":"OPEN","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net","datanodes":["ozone-topology_datanode_6...</msg>
<status status="PASS" starttime="20220914 23:07:44.392" endtime="20220914 23:07:44.432"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>pipelines</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220914 23:07:44.432" endtime="20220914 23:07:44.433"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220914 23:07:44.433" endtime="20220914 23:07:44.433"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OPEN</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220914 23:07:44.434" endtime="20220914 23:07:44.434"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220914 23:07:44.434" endtime="20220914 23:07:44.435"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220914 23:07:44.435" endtime="20220914 23:07:44.436"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220914 23:07:44.436" endtime="20220914 23:07:44.437"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/clusterState</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220914 23:07:44.442" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20220914 23:07:44.530" level="INFO">${rc} = 0</msg>
<msg timestamp="20220914 23:07:44.530" level="INFO">${output} = {"pipelines":10,"totalDatanodes":6,"healthyDatanodes":6,"storageReport":{"capacity":535783858176,"used":28672,"remaining":188469477376},"containers":4,"volumes":3,"buckets":2,"keys":11}</msg>
<status status="PASS" starttime="20220914 23:07:44.439" endtime="20220914 23:07:44.530"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220914 23:07:44.532" level="INFO">{"pipelines":10,"totalDatanodes":6,"healthyDatanodes":6,"storageReport":{"capacity":535783858176,"used":28672,"remaining":188469477376},"containers":4,"volumes":3,"buckets":2,"keys":11}</msg>
<status status="PASS" starttime="20220914 23:07:44.531" endtime="20220914 23:07:44.532"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220914 23:07:44.532" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220914 23:07:44.532" endtime="20220914 23:07:44.533"/>
</kw>
<status status="PASS" starttime="20220914 23:07:44.438" endtime="20220914 23:07:44.533"/>
</kw>
<msg timestamp="20220914 23:07:44.533" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220914 23:07:44.437" endtime="20220914 23:07:44.534"/>
</kw>
<msg timestamp="20220914 23:07:44.534" level="INFO">${result} = {"pipelines":10,"totalDatanodes":6,"healthyDatanodes":6,"storageReport":{"capacity":535783858176,"used":28672,"remaining":188469477376},"containers":4,"volumes":3,"buckets":2,"keys":11}</msg>
<status status="PASS" starttime="20220914 23:07:44.437" endtime="20220914 23:07:44.534"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"totalDatanodes\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220914 23:07:44.534" endtime="20220914 23:07:44.536"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"healthyDatanodes\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220914 23:07:44.538" endtime="20220914 23:07:44.539"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"pipelines\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220914 23:07:44.539" endtime="20220914 23:07:44.540"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers/1/replicaHistory</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220914 23:07:44.545" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers/1/replicaHistory 2&gt;&amp;1'.</msg>
<msg timestamp="20220914 23:07:44.572" level="INFO">${rc} = 0</msg>
<msg timestamp="20220914 23:07:44.572" level="INFO">${output} = [{"containerId":1,"datanodeUuid":"ebf276bc-dad3-463a-94ef-16cb7f4e9aaa","datanodeHost":"ozone-topology_datanode_6_1.ozone-topology_net","firstSeenTime":1663196790227,"lastSeenTime":1663196790227,"last...</msg>
<status status="PASS" starttime="20220914 23:07:44.542" endtime="20220914 23:07:44.572"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220914 23:07:44.574" level="INFO">[{"containerId":1,"datanodeUuid":"ebf276bc-dad3-463a-94ef-16cb7f4e9aaa","datanodeHost":"ozone-topology_datanode_6_1.ozone-topology_net","firstSeenTime":1663196790227,"lastSeenTime":1663196790227,"lastBcsId":0},{"containerId":1,"datanodeUuid":"12df6b86-a5b9-420f-bf74-076eb7a136cc","datanodeHost":"ozone-topology_datanode_3_1.ozone-topology_net","firstSeenTime":1663196790097,"lastSeenTime":1663196790097,"lastBcsId":0},{"containerId":1,"datanodeUuid":"96012aa1-19f3-4f94-91d8-3a4a5e7d7ce7","datanodeHost":"ozone-topology_datanode_5_1.ozone-topology_net","firstSeenTime":1663196790232,"lastSeenTime":1663196790232,"lastBcsId":0}]</msg>
<status status="PASS" starttime="20220914 23:07:44.573" endtime="20220914 23:07:44.574"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220914 23:07:44.575" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220914 23:07:44.574" endtime="20220914 23:07:44.575"/>
</kw>
<status status="PASS" starttime="20220914 23:07:44.541" endtime="20220914 23:07:44.576"/>
</kw>
<msg timestamp="20220914 23:07:44.576" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220914 23:07:44.541" endtime="20220914 23:07:44.576"/>
</kw>
<msg timestamp="20220914 23:07:44.577" level="INFO">${result} = [{"containerId":1,"datanodeUuid":"ebf276bc-dad3-463a-94ef-16cb7f4e9aaa","datanodeHost":"ozone-topology_datanode_6_1.ozone-topology_net","firstSeenTime":1663196790227,"lastSeenTime":1663196790227,"last...</msg>
<status status="PASS" starttime="20220914 23:07:44.540" endtime="20220914 23:07:44.577"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"containerId\":1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220914 23:07:44.577" endtime="20220914 23:07:44.577"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220914 23:07:44.319" endtime="20220914 23:07:44.578"/>
</test>
<test id="s1-s2-s1-t3" name="Check if Recon Web UI is up" line="88">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220914 23:07:44.581" endtime="20220914 23:07:44.582"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${ENDPOINT_URL}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220914 23:07:44.586" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20220914 23:07:44.606" level="INFO">${rc} = 0</msg>
<msg timestamp="20220914 23:07:44.606" level="INFO">${output} = &lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" ...</msg>
<status status="PASS" starttime="20220914 23:07:44.584" endtime="20220914 23:07:44.606"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220914 23:07:44.608" level="INFO">&lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" content="#000000"/&gt;&lt;link rel="manifest" href="/manifest.json"/&gt;&lt;link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto:300,400,500"/&gt;&lt;title&gt;Ozone Recon&lt;/title&gt;&lt;link href="/static/css/2.7465223f.chunk.css" rel="stylesheet"&gt;&lt;link href="/static/css/main.2dcb153a.chunk.css" rel="stylesheet"&gt;&lt;/head&gt;&lt;body&gt;&lt;noscript&gt;You need to enable JavaScript to run this app.&lt;/noscript&gt;&lt;div id="root"&gt;&lt;/div&gt;&lt;script&gt;!function(e){function r(r){for(var n,l,f=r[0],i=r[1],a=r[2],p=0,s=[];p&lt;f.length;p++)l=f[p],Object.prototype.hasOwnProperty.call(o,l)&amp;&amp;o[l]&amp;&amp;s.push(o[l][0]),o[l]=0;for(n in i)Object.prototype.hasOwnProperty.call(i,n)&amp;&amp;(e[n]=i[n]);for(c&amp;&amp;c(r);s.length;)s.shift()();return u.push.apply(u,a||[]),t()}function t(){for(var e,r=0;r&lt;u.length;r++){for(var t=u[r],n=!0,f=1;f&lt;t.length;f++){var i=t[f];0!==o[i]&amp;&amp;(n=!1)}n&amp;&amp;(u.splice(r--,1),e=l(l.s=t[0]))}return e}var n={},o={1:0},u=[];function l(r){if(n[r])return n[r].exports;var t=n[r]={i:r,l:!1,exports:{}};return e[r].call(t.exports,t,t.exports,l),t.l=!0,t.exports}l.m=e,l.c=n,l.d=function(e,r,t){l.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:t})},l.r=function(e){"undefined"!=typeof Symbol&amp;&amp;Symbol.toStringTag&amp;&amp;Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},l.t=function(e,r){if(1&amp;r&amp;&amp;(e=l(e)),8&amp;r)return e;if(4&amp;r&amp;&amp;"object"==typeof e&amp;&amp;e&amp;&amp;e.__esModule)return e;var t=Object.create(null);if(l.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&amp;r&amp;&amp;"string"!=typeof e)for(var n in e)l.d(t,n,function(r){return e[r]}.bind(null,n));return t},l.n=function(e){var r=e&amp;&amp;e.__esModule?function(){return e.default}:function(){return e};return l.d(r,"a",r),r},l.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},l.p="/";var f=this["webpackJsonpozone-recon"]=this["webpackJsonpozone-recon"]||[],i=f.push.bind(f);f.push=r,f=f.slice();for(var a=0;a&lt;f.length;a++)r(f[a]);var c=i;t()}([])&lt;/script&gt;&lt;script src="/static/js/2.9f2d5a7d.chunk.js"&gt;&lt;/script&gt;&lt;script src="/static/js/main.b60515b4.chunk.js"&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;</msg>
<status status="PASS" starttime="20220914 23:07:44.607" endtime="20220914 23:07:44.608"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220914 23:07:44.609" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220914 23:07:44.608" endtime="20220914 23:07:44.610"/>
</kw>
<status status="PASS" starttime="20220914 23:07:44.583" endtime="20220914 23:07:44.610"/>
</kw>
<msg timestamp="20220914 23:07:44.610" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220914 23:07:44.583" endtime="20220914 23:07:44.611"/>
</kw>
<msg timestamp="20220914 23:07:44.611" level="INFO">${result} = &lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" ...</msg>
<status status="PASS" starttime="20220914 23:07:44.582" endtime="20220914 23:07:44.611"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Ozone Recon</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220914 23:07:44.612" endtime="20220914 23:07:44.612"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220914 23:07:44.580" endtime="20220914 23:07:44.613"/>
</test>
<test id="s1-s2-s1-t4" name="Check web UI access" line="93">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220914 23:07:44.620" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20220914 23:07:44.625" level="INFO">${rc} = 0</msg>
<msg timestamp="20220914 23:07:44.625" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20220914 23:07:44.617" endtime="20220914 23:07:44.625"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220914 23:07:44.626" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20220914 23:07:44.625" endtime="20220914 23:07:44.626"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220914 23:07:44.627" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220914 23:07:44.627" endtime="20220914 23:07:44.627"/>
</kw>
<status status="PASS" starttime="20220914 23:07:44.616" endtime="20220914 23:07:44.628"/>
</kw>
<msg timestamp="20220914 23:07:44.628" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220914 23:07:44.616" endtime="20220914 23:07:44.628"/>
</kw>
<status status="PASS" starttime="20220914 23:07:44.615" endtime="20220914 23:07:44.629"/>
</kw>
<kw name="Check http return code">
<arg>${ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220914 23:07:44.634" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20220914 23:07:44.651" level="INFO">${rc} = 0</msg>
<msg timestamp="20220914 23:07:44.651" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20220914 23:07:44.631" endtime="20220914 23:07:44.651"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220914 23:07:44.652" level="INFO">200</msg>
<status status="PASS" starttime="20220914 23:07:44.651" endtime="20220914 23:07:44.652"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220914 23:07:44.653" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220914 23:07:44.652" endtime="20220914 23:07:44.653"/>
</kw>
<status status="PASS" starttime="20220914 23:07:44.630" endtime="20220914 23:07:44.654"/>
</kw>
<msg timestamp="20220914 23:07:44.654" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220914 23:07:44.630" endtime="20220914 23:07:44.655"/>
</kw>
<msg timestamp="20220914 23:07:44.655" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20220914 23:07:44.629" endtime="20220914 23:07:44.655"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220914 23:07:44.655" endtime="20220914 23:07:44.656"/>
</kw>
<status status="NOT RUN" starttime="20220914 23:07:44.655" endtime="20220914 23:07:44.656"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220914 23:07:44.656" endtime="20220914 23:07:44.656"/>
</kw>
<status status="PASS" starttime="20220914 23:07:44.656" endtime="20220914 23:07:44.656"/>
</branch>
<status status="PASS" starttime="20220914 23:07:44.655" endtime="20220914 23:07:44.656"/>
</if>
<status status="PASS" starttime="20220914 23:07:44.629" endtime="20220914 23:07:44.657"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220914 23:07:44.657" endtime="20220914 23:07:44.658"/>
</kw>
<status status="PASS" starttime="20220914 23:07:44.657" endtime="20220914 23:07:44.658"/>
</kw>
<kw name="Check http return code">
<arg>${ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220914 23:07:44.663" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20220914 23:07:44.680" level="INFO">${rc} = 0</msg>
<msg timestamp="20220914 23:07:44.680" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20220914 23:07:44.660" endtime="20220914 23:07:44.680"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220914 23:07:44.682" level="INFO">200</msg>
<status status="PASS" starttime="20220914 23:07:44.681" endtime="20220914 23:07:44.682"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220914 23:07:44.682" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220914 23:07:44.682" endtime="20220914 23:07:44.682"/>
</kw>
<status status="PASS" starttime="20220914 23:07:44.660" endtime="20220914 23:07:44.683"/>
</kw>
<msg timestamp="20220914 23:07:44.683" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220914 23:07:44.659" endtime="20220914 23:07:44.684"/>
</kw>
<msg timestamp="20220914 23:07:44.684" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20220914 23:07:44.659" endtime="20220914 23:07:44.684"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220914 23:07:44.685" endtime="20220914 23:07:44.685"/>
</kw>
<status status="NOT RUN" starttime="20220914 23:07:44.685" endtime="20220914 23:07:44.685"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220914 23:07:44.685" endtime="20220914 23:07:44.686"/>
</kw>
<status status="PASS" starttime="20220914 23:07:44.685" endtime="20220914 23:07:44.686"/>
</branch>
<status status="PASS" starttime="20220914 23:07:44.684" endtime="20220914 23:07:44.686"/>
</if>
<status status="PASS" starttime="20220914 23:07:44.658" endtime="20220914 23:07:44.686"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220914 23:07:44.614" endtime="20220914 23:07:44.687"/>
</test>
<test id="s1-s2-s1-t5" name="Check admin only api access" line="101">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220914 23:07:44.693" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20220914 23:07:44.697" level="INFO">${rc} = 0</msg>
<msg timestamp="20220914 23:07:44.698" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20220914 23:07:44.691" endtime="20220914 23:07:44.698"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220914 23:07:44.699" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20220914 23:07:44.698" endtime="20220914 23:07:44.699"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220914 23:07:44.700" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220914 23:07:44.699" endtime="20220914 23:07:44.700"/>
</kw>
<status status="PASS" starttime="20220914 23:07:44.690" endtime="20220914 23:07:44.700"/>
</kw>
<msg timestamp="20220914 23:07:44.700" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220914 23:07:44.689" endtime="20220914 23:07:44.701"/>
</kw>
<status status="PASS" starttime="20220914 23:07:44.689" endtime="20220914 23:07:44.701"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220914 23:07:44.706" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20220914 23:07:44.739" level="INFO">${rc} = 0</msg>
<msg timestamp="20220914 23:07:44.739" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20220914 23:07:44.704" endtime="20220914 23:07:44.739"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220914 23:07:44.741" level="INFO">200</msg>
<status status="PASS" starttime="20220914 23:07:44.740" endtime="20220914 23:07:44.741"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220914 23:07:44.741" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220914 23:07:44.741" endtime="20220914 23:07:44.742"/>
</kw>
<status status="PASS" starttime="20220914 23:07:44.703" endtime="20220914 23:07:44.742"/>
</kw>
<msg timestamp="20220914 23:07:44.742" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220914 23:07:44.703" endtime="20220914 23:07:44.743"/>
</kw>
<msg timestamp="20220914 23:07:44.743" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20220914 23:07:44.702" endtime="20220914 23:07:44.743"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220914 23:07:44.744" endtime="20220914 23:07:44.744"/>
</kw>
<status status="NOT RUN" starttime="20220914 23:07:44.743" endtime="20220914 23:07:44.744"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220914 23:07:44.744" endtime="20220914 23:07:44.744"/>
</kw>
<status status="PASS" starttime="20220914 23:07:44.744" endtime="20220914 23:07:44.745"/>
</branch>
<status status="PASS" starttime="20220914 23:07:44.743" endtime="20220914 23:07:44.745"/>
</if>
<status status="PASS" starttime="20220914 23:07:44.701" endtime="20220914 23:07:44.745"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220914 23:07:44.745" endtime="20220914 23:07:44.746"/>
</kw>
<status status="PASS" starttime="20220914 23:07:44.745" endtime="20220914 23:07:44.746"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220914 23:07:44.751" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20220914 23:07:44.770" level="INFO">${rc} = 0</msg>
<msg timestamp="20220914 23:07:44.770" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20220914 23:07:44.749" endtime="20220914 23:07:44.770"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220914 23:07:44.772" level="INFO">200</msg>
<status status="PASS" starttime="20220914 23:07:44.771" endtime="20220914 23:07:44.772"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220914 23:07:44.773" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220914 23:07:44.772" endtime="20220914 23:07:44.773"/>
</kw>
<status status="PASS" starttime="20220914 23:07:44.748" endtime="20220914 23:07:44.773"/>
</kw>
<msg timestamp="20220914 23:07:44.773" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220914 23:07:44.748" endtime="20220914 23:07:44.774"/>
</kw>
<msg timestamp="20220914 23:07:44.774" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20220914 23:07:44.747" endtime="20220914 23:07:44.774"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220914 23:07:44.775" endtime="20220914 23:07:44.775"/>
</kw>
<status status="NOT RUN" starttime="20220914 23:07:44.775" endtime="20220914 23:07:44.775"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220914 23:07:44.775" endtime="20220914 23:07:44.776"/>
</kw>
<status status="PASS" starttime="20220914 23:07:44.775" endtime="20220914 23:07:44.776"/>
</branch>
<status status="PASS" starttime="20220914 23:07:44.774" endtime="20220914 23:07:44.776"/>
</if>
<status status="PASS" starttime="20220914 23:07:44.746" endtime="20220914 23:07:44.776"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220914 23:07:44.777" endtime="20220914 23:07:44.777"/>
</kw>
<status status="PASS" starttime="20220914 23:07:44.776" endtime="20220914 23:07:44.777"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220914 23:07:44.783" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20220914 23:07:44.803" level="INFO">${rc} = 0</msg>
<msg timestamp="20220914 23:07:44.803" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20220914 23:07:44.780" endtime="20220914 23:07:44.803"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220914 23:07:44.804" level="INFO">200</msg>
<status status="PASS" starttime="20220914 23:07:44.803" endtime="20220914 23:07:44.804"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220914 23:07:44.805" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220914 23:07:44.805" endtime="20220914 23:07:44.805"/>
</kw>
<status status="PASS" starttime="20220914 23:07:44.779" endtime="20220914 23:07:44.806"/>
</kw>
<msg timestamp="20220914 23:07:44.806" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220914 23:07:44.779" endtime="20220914 23:07:44.806"/>
</kw>
<msg timestamp="20220914 23:07:44.807" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20220914 23:07:44.778" endtime="20220914 23:07:44.807"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220914 23:07:44.807" endtime="20220914 23:07:44.807"/>
</kw>
<status status="NOT RUN" starttime="20220914 23:07:44.807" endtime="20220914 23:07:44.807"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220914 23:07:44.807" endtime="20220914 23:07:44.808"/>
</kw>
<status status="PASS" starttime="20220914 23:07:44.807" endtime="20220914 23:07:44.808"/>
</branch>
<status status="PASS" starttime="20220914 23:07:44.807" endtime="20220914 23:07:44.808"/>
</if>
<status status="PASS" starttime="20220914 23:07:44.778" endtime="20220914 23:07:44.808"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220914 23:07:44.809" endtime="20220914 23:07:44.810"/>
</kw>
<status status="PASS" starttime="20220914 23:07:44.809" endtime="20220914 23:07:44.810"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220914 23:07:44.815" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20220914 23:07:44.837" level="INFO">${rc} = 0</msg>
<msg timestamp="20220914 23:07:44.837" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20220914 23:07:44.812" endtime="20220914 23:07:44.837"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220914 23:07:44.839" level="INFO">200</msg>
<status status="PASS" starttime="20220914 23:07:44.838" endtime="20220914 23:07:44.839"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220914 23:07:44.840" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220914 23:07:44.839" endtime="20220914 23:07:44.840"/>
</kw>
<status status="PASS" starttime="20220914 23:07:44.812" endtime="20220914 23:07:44.840"/>
</kw>
<msg timestamp="20220914 23:07:44.840" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220914 23:07:44.811" endtime="20220914 23:07:44.841"/>
</kw>
<msg timestamp="20220914 23:07:44.841" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20220914 23:07:44.811" endtime="20220914 23:07:44.841"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220914 23:07:44.842" endtime="20220914 23:07:44.842"/>
</kw>
<status status="NOT RUN" starttime="20220914 23:07:44.842" endtime="20220914 23:07:44.842"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220914 23:07:44.842" endtime="20220914 23:07:44.843"/>
</kw>
<status status="PASS" starttime="20220914 23:07:44.842" endtime="20220914 23:07:44.843"/>
</branch>
<status status="PASS" starttime="20220914 23:07:44.841" endtime="20220914 23:07:44.843"/>
</if>
<status status="PASS" starttime="20220914 23:07:44.810" endtime="20220914 23:07:44.843"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220914 23:07:44.688" endtime="20220914 23:07:44.843"/>
</test>
<test id="s1-s2-s1-t6" name="Check unhealthy, (admin) api access" line="114">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220914 23:07:44.852" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20220914 23:07:44.857" level="INFO">${rc} = 0</msg>
<msg timestamp="20220914 23:07:44.857" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20220914 23:07:44.849" endtime="20220914 23:07:44.857"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220914 23:07:44.858" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20220914 23:07:44.857" endtime="20220914 23:07:44.858"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220914 23:07:44.860" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220914 23:07:44.859" endtime="20220914 23:07:44.860"/>
</kw>
<status status="PASS" starttime="20220914 23:07:44.848" endtime="20220914 23:07:44.860"/>
</kw>
<msg timestamp="20220914 23:07:44.860" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220914 23:07:44.847" endtime="20220914 23:07:44.861"/>
</kw>
<status status="PASS" starttime="20220914 23:07:44.847" endtime="20220914 23:07:44.861"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220914 23:07:44.867" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20220914 23:07:44.939" level="INFO">${rc} = 0</msg>
<msg timestamp="20220914 23:07:44.939" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20220914 23:07:44.864" endtime="20220914 23:07:44.939"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220914 23:07:44.940" level="INFO">200</msg>
<status status="PASS" starttime="20220914 23:07:44.940" endtime="20220914 23:07:44.940"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220914 23:07:44.942" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220914 23:07:44.941" endtime="20220914 23:07:44.942"/>
</kw>
<status status="PASS" starttime="20220914 23:07:44.863" endtime="20220914 23:07:44.942"/>
</kw>
<msg timestamp="20220914 23:07:44.942" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220914 23:07:44.863" endtime="20220914 23:07:44.943"/>
</kw>
<msg timestamp="20220914 23:07:44.943" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20220914 23:07:44.862" endtime="20220914 23:07:44.943"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220914 23:07:44.944" endtime="20220914 23:07:44.944"/>
</kw>
<status status="NOT RUN" starttime="20220914 23:07:44.944" endtime="20220914 23:07:44.944"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220914 23:07:44.944" endtime="20220914 23:07:44.945"/>
</kw>
<status status="PASS" starttime="20220914 23:07:44.944" endtime="20220914 23:07:44.945"/>
</branch>
<status status="PASS" starttime="20220914 23:07:44.944" endtime="20220914 23:07:44.945"/>
</if>
<status status="PASS" starttime="20220914 23:07:44.861" endtime="20220914 23:07:44.945"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220914 23:07:44.946" endtime="20220914 23:07:44.946"/>
</kw>
<status status="PASS" starttime="20220914 23:07:44.945" endtime="20220914 23:07:44.946"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220914 23:07:44.952" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20220914 23:07:44.976" level="INFO">${rc} = 0</msg>
<msg timestamp="20220914 23:07:44.976" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20220914 23:07:44.949" endtime="20220914 23:07:44.976"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220914 23:07:44.977" level="INFO">200</msg>
<status status="PASS" starttime="20220914 23:07:44.977" endtime="20220914 23:07:44.978"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220914 23:07:44.978" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220914 23:07:44.978" endtime="20220914 23:07:44.978"/>
</kw>
<status status="PASS" starttime="20220914 23:07:44.948" endtime="20220914 23:07:44.979"/>
</kw>
<msg timestamp="20220914 23:07:44.979" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220914 23:07:44.948" endtime="20220914 23:07:44.980"/>
</kw>
<msg timestamp="20220914 23:07:44.980" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20220914 23:07:44.947" endtime="20220914 23:07:44.980"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220914 23:07:44.981" endtime="20220914 23:07:44.982"/>
</kw>
<status status="NOT RUN" starttime="20220914 23:07:44.981" endtime="20220914 23:07:44.982"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220914 23:07:44.982" endtime="20220914 23:07:44.983"/>
</kw>
<status status="PASS" starttime="20220914 23:07:44.982" endtime="20220914 23:07:44.983"/>
</branch>
<status status="PASS" starttime="20220914 23:07:44.980" endtime="20220914 23:07:44.983"/>
</if>
<status status="PASS" starttime="20220914 23:07:44.946" endtime="20220914 23:07:44.983"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220914 23:07:44.984" endtime="20220914 23:07:44.985"/>
</kw>
<status status="PASS" starttime="20220914 23:07:44.984" endtime="20220914 23:07:44.985"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220914 23:07:44.990" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20220914 23:07:45.009" level="INFO">${rc} = 0</msg>
<msg timestamp="20220914 23:07:45.009" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20220914 23:07:44.987" endtime="20220914 23:07:45.009"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220914 23:07:45.010" level="INFO">200</msg>
<status status="PASS" starttime="20220914 23:07:45.009" endtime="20220914 23:07:45.011"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220914 23:07:45.011" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220914 23:07:45.011" endtime="20220914 23:07:45.012"/>
</kw>
<status status="PASS" starttime="20220914 23:07:44.987" endtime="20220914 23:07:45.012"/>
</kw>
<msg timestamp="20220914 23:07:45.012" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220914 23:07:44.986" endtime="20220914 23:07:45.013"/>
</kw>
<msg timestamp="20220914 23:07:45.013" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20220914 23:07:44.986" endtime="20220914 23:07:45.013"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220914 23:07:45.014" endtime="20220914 23:07:45.014"/>
</kw>
<status status="NOT RUN" starttime="20220914 23:07:45.013" endtime="20220914 23:07:45.014"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220914 23:07:45.014" endtime="20220914 23:07:45.014"/>
</kw>
<status status="PASS" starttime="20220914 23:07:45.014" endtime="20220914 23:07:45.015"/>
</branch>
<status status="PASS" starttime="20220914 23:07:45.013" endtime="20220914 23:07:45.015"/>
</if>
<status status="PASS" starttime="20220914 23:07:44.985" endtime="20220914 23:07:45.015"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220914 23:07:45.015" endtime="20220914 23:07:45.016"/>
</kw>
<status status="PASS" starttime="20220914 23:07:45.015" endtime="20220914 23:07:45.016"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220914 23:07:45.021" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20220914 23:07:45.045" level="INFO">${rc} = 0</msg>
<msg timestamp="20220914 23:07:45.045" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20220914 23:07:45.019" endtime="20220914 23:07:45.045"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220914 23:07:45.047" level="INFO">200</msg>
<status status="PASS" starttime="20220914 23:07:45.046" endtime="20220914 23:07:45.047"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220914 23:07:45.047" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220914 23:07:45.047" endtime="20220914 23:07:45.047"/>
</kw>
<status status="PASS" starttime="20220914 23:07:45.018" endtime="20220914 23:07:45.048"/>
</kw>
<msg timestamp="20220914 23:07:45.048" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220914 23:07:45.018" endtime="20220914 23:07:45.049"/>
</kw>
<msg timestamp="20220914 23:07:45.049" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20220914 23:07:45.017" endtime="20220914 23:07:45.049"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220914 23:07:45.049" endtime="20220914 23:07:45.050"/>
</kw>
<status status="NOT RUN" starttime="20220914 23:07:45.049" endtime="20220914 23:07:45.050"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220914 23:07:45.050" endtime="20220914 23:07:45.050"/>
</kw>
<status status="PASS" starttime="20220914 23:07:45.050" endtime="20220914 23:07:45.050"/>
</branch>
<status status="PASS" starttime="20220914 23:07:45.049" endtime="20220914 23:07:45.051"/>
</if>
<status status="PASS" starttime="20220914 23:07:45.016" endtime="20220914 23:07:45.051"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220914 23:07:44.844" endtime="20220914 23:07:45.051"/>
</test>
<test id="s1-s2-s1-t7" name="Check normal api access" line="127">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220914 23:07:45.062" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20220914 23:07:45.066" level="INFO">${rc} = 0</msg>
<msg timestamp="20220914 23:07:45.066" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20220914 23:07:45.059" endtime="20220914 23:07:45.066"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220914 23:07:45.068" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20220914 23:07:45.067" endtime="20220914 23:07:45.068"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220914 23:07:45.068" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220914 23:07:45.068" endtime="20220914 23:07:45.068"/>
</kw>
<status status="PASS" starttime="20220914 23:07:45.058" endtime="20220914 23:07:45.069"/>
</kw>
<msg timestamp="20220914 23:07:45.069" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220914 23:07:45.058" endtime="20220914 23:07:45.069"/>
</kw>
<status status="PASS" starttime="20220914 23:07:45.057" endtime="20220914 23:07:45.070"/>
</kw>
<kw name="Check http return code">
<arg>${NON_ADMIN_API_ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220914 23:07:45.077" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20220914 23:07:45.097" level="INFO">${rc} = 0</msg>
<msg timestamp="20220914 23:07:45.097" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20220914 23:07:45.072" endtime="20220914 23:07:45.097"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220914 23:07:45.099" level="INFO">200</msg>
<status status="PASS" starttime="20220914 23:07:45.098" endtime="20220914 23:07:45.099"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220914 23:07:45.100" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220914 23:07:45.099" endtime="20220914 23:07:45.100"/>
</kw>
<status status="PASS" starttime="20220914 23:07:45.072" endtime="20220914 23:07:45.100"/>
</kw>
<msg timestamp="20220914 23:07:45.100" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220914 23:07:45.071" endtime="20220914 23:07:45.101"/>
</kw>
<msg timestamp="20220914 23:07:45.101" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20220914 23:07:45.071" endtime="20220914 23:07:45.101"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220914 23:07:45.102" endtime="20220914 23:07:45.102"/>
</kw>
<status status="NOT RUN" starttime="20220914 23:07:45.102" endtime="20220914 23:07:45.102"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220914 23:07:45.102" endtime="20220914 23:07:45.103"/>
</kw>
<status status="PASS" starttime="20220914 23:07:45.102" endtime="20220914 23:07:45.103"/>
</branch>
<status status="PASS" starttime="20220914 23:07:45.101" endtime="20220914 23:07:45.103"/>
</if>
<status status="PASS" starttime="20220914 23:07:45.070" endtime="20220914 23:07:45.103"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220914 23:07:45.104" endtime="20220914 23:07:45.105"/>
</kw>
<status status="PASS" starttime="20220914 23:07:45.104" endtime="20220914 23:07:45.105"/>
</kw>
<kw name="Check http return code">
<arg>${NON_ADMIN_API_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220914 23:07:45.111" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20220914 23:07:45.143" level="INFO">${rc} = 0</msg>
<msg timestamp="20220914 23:07:45.143" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20220914 23:07:45.108" endtime="20220914 23:07:45.143"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220914 23:07:45.145" level="INFO">200</msg>
<status status="PASS" starttime="20220914 23:07:45.144" endtime="20220914 23:07:45.145"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220914 23:07:45.146" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220914 23:07:45.145" endtime="20220914 23:07:45.146"/>
</kw>
<status status="PASS" starttime="20220914 23:07:45.107" endtime="20220914 23:07:45.146"/>
</kw>
<msg timestamp="20220914 23:07:45.146" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220914 23:07:45.106" endtime="20220914 23:07:45.147"/>
</kw>
<msg timestamp="20220914 23:07:45.148" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20220914 23:07:45.105" endtime="20220914 23:07:45.148"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220914 23:07:45.148" endtime="20220914 23:07:45.148"/>
</kw>
<status status="NOT RUN" starttime="20220914 23:07:45.148" endtime="20220914 23:07:45.148"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220914 23:07:45.148" endtime="20220914 23:07:45.149"/>
</kw>
<status status="PASS" starttime="20220914 23:07:45.148" endtime="20220914 23:07:45.149"/>
</branch>
<status status="PASS" starttime="20220914 23:07:45.148" endtime="20220914 23:07:45.149"/>
</if>
<status status="PASS" starttime="20220914 23:07:45.105" endtime="20220914 23:07:45.149"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220914 23:07:45.056" endtime="20220914 23:07:45.150"/>
</test>
<doc>Smoke test to start cluster with docker-compose environments.</doc>
<status status="PASS" starttime="20220914 23:07:11.947" endtime="20220914 23:07:45.152"/>
</suite>
<suite id="s1-s2-s2" name="Recon-Fso-Nssummary" source="/opt/hadoop/smoketest/recon/recon-fso-nssummary.robot">
<test id="s1-s2-s2-t1" name="Check volume creation" line="98">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220914 23:07:45.173" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20220914 23:07:45.179" level="INFO">${rc} = 0</msg>
<msg timestamp="20220914 23:07:45.179" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20220914 23:07:45.171" endtime="20220914 23:07:45.179"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220914 23:07:45.181" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20220914 23:07:45.180" endtime="20220914 23:07:45.181"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220914 23:07:45.181" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220914 23:07:45.181" endtime="20220914 23:07:45.181"/>
</kw>
<status status="PASS" starttime="20220914 23:07:45.170" endtime="20220914 23:07:45.182"/>
</kw>
<msg timestamp="20220914 23:07:45.182" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220914 23:07:45.170" endtime="20220914 23:07:45.182"/>
</kw>
<status status="PASS" starttime="20220914 23:07:45.169" endtime="20220914 23:07:45.183"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220914 23:07:45.183" endtime="20220914 23:07:45.184"/>
</kw>
<status status="PASS" starttime="20220914 23:07:45.183" endtime="20220914 23:07:45.184"/>
</kw>
<kw name="Create volume">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220914 23:07:45.185" level="INFO">${random} = ymazs</msg>
<status status="PASS" starttime="20220914 23:07:45.185" endtime="20220914 23:07:45.186"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${VOLUME}</arg>
<arg>vol-${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220914 23:07:45.186" level="INFO">${VOLUME} = vol-ymazs</msg>
<status status="PASS" starttime="20220914 23:07:45.186" endtime="20220914 23:07:45.186"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${VOLUME}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220914 23:07:45.190" level="INFO">Running command 'ozone sh volume create /vol-ymazs 2&gt;&amp;1'.</msg>
<msg timestamp="20220914 23:07:50.012" level="INFO">${rc} = 0</msg>
<msg timestamp="20220914 23:07:50.012" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20220914 23:07:45.188" endtime="20220914 23:07:50.012"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220914 23:07:50.014" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20220914 23:07:50.013" endtime="20220914 23:07:50.014"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220914 23:07:50.014" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220914 23:07:50.014" endtime="20220914 23:07:50.015"/>
</kw>
<status status="PASS" starttime="20220914 23:07:45.187" endtime="20220914 23:07:50.015"/>
</kw>
<msg timestamp="20220914 23:07:50.015" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220914 23:07:45.187" endtime="20220914 23:07:50.016"/>
</kw>
<msg timestamp="20220914 23:07:50.016" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20220914 23:07:45.187" endtime="20220914 23:07:50.016"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220914 23:07:50.016" endtime="20220914 23:07:50.017"/>
</kw>
<status status="PASS" starttime="20220914 23:07:45.184" endtime="20220914 23:07:50.017"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220914 23:07:45.168" endtime="20220914 23:07:50.017"/>
</test>
<test id="s1-s2-s2-t2" name="Check bucket creation" line="103">
<kw name="Create bucket">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220914 23:07:50.023" level="INFO">${random} = iyjnq</msg>
<status status="PASS" starttime="20220914 23:07:50.022" endtime="20220914 23:07:50.023"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<arg>buc-${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220914 23:07:50.023" level="INFO">${BUCKET} = buc-iyjnq</msg>
<status status="PASS" starttime="20220914 23:07:50.023" endtime="20220914 23:07:50.024"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create -l FILE_SYSTEM_OPTIMIZED /${VOLUME}/${BUCKET}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220914 23:07:50.028" level="INFO">Running command 'ozone sh bucket create -l FILE_SYSTEM_OPTIMIZED /vol-ymazs/buc-iyjnq 2&gt;&amp;1'.</msg>
<msg timestamp="20220914 23:07:54.838" level="INFO">${rc} = 0</msg>
<msg timestamp="20220914 23:07:54.838" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20220914 23:07:50.026" endtime="20220914 23:07:54.838"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220914 23:07:54.839" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20220914 23:07:54.839" endtime="20220914 23:07:54.840"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220914 23:07:54.840" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220914 23:07:54.840" endtime="20220914 23:07:54.840"/>
</kw>
<status status="PASS" starttime="20220914 23:07:50.025" endtime="20220914 23:07:54.841"/>
</kw>
<msg timestamp="20220914 23:07:54.841" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220914 23:07:50.024" endtime="20220914 23:07:54.841"/>
</kw>
<msg timestamp="20220914 23:07:54.842" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20220914 23:07:50.024" endtime="20220914 23:07:54.842"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220914 23:07:54.842" endtime="20220914 23:07:54.843"/>
</kw>
<status status="PASS" starttime="20220914 23:07:50.021" endtime="20220914 23:07:54.843"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220914 23:07:50.019" endtime="20220914 23:07:54.843"/>
</test>
<test id="s1-s2-s2-t3" name="Check keys creation" line="106">
<kw name="Create keys">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put /${VOLUME}/${BUCKET}/file1 README.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220914 23:07:54.850" level="INFO">Running command 'ozone sh key put /vol-ymazs/buc-iyjnq/file1 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20220914 23:08:02.788" level="INFO">${rc} = 0</msg>
<msg timestamp="20220914 23:08:02.788" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20220914 23:07:54.847" endtime="20220914 23:08:02.788"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220914 23:08:02.790" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20220914 23:08:02.789" endtime="20220914 23:08:02.790"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220914 23:08:02.791" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220914 23:08:02.790" endtime="20220914 23:08:02.791"/>
</kw>
<status status="PASS" starttime="20220914 23:07:54.846" endtime="20220914 23:08:02.792"/>
</kw>
<msg timestamp="20220914 23:08:02.792" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220914 23:07:54.846" endtime="20220914 23:08:02.792"/>
</kw>
<msg timestamp="20220914 23:08:02.793" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20220914 23:07:54.845" endtime="20220914 23:08:02.793"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220914 23:08:02.793" endtime="20220914 23:08:02.794"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put /${VOLUME}/${BUCKET}/dir1/dir2/file2 HISTORY.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220914 23:08:02.800" level="INFO">Running command 'ozone sh key put /vol-ymazs/buc-iyjnq/dir1/dir2/file2 HISTORY.md 2&gt;&amp;1'.</msg>
<msg timestamp="20220914 23:08:10.312" level="INFO">${rc} = 0</msg>
<msg timestamp="20220914 23:08:10.312" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20220914 23:08:02.797" endtime="20220914 23:08:10.312"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220914 23:08:10.314" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20220914 23:08:10.313" endtime="20220914 23:08:10.314"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220914 23:08:10.314" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220914 23:08:10.314" endtime="20220914 23:08:10.315"/>
</kw>
<status status="PASS" starttime="20220914 23:08:02.796" endtime="20220914 23:08:10.315"/>
</kw>
<msg timestamp="20220914 23:08:10.315" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220914 23:08:02.796" endtime="20220914 23:08:10.316"/>
</kw>
<msg timestamp="20220914 23:08:10.316" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20220914 23:08:02.795" endtime="20220914 23:08:10.316"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220914 23:08:10.317" endtime="20220914 23:08:10.317"/>
</kw>
<status status="PASS" starttime="20220914 23:07:54.845" endtime="20220914 23:08:10.317"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220914 23:07:54.844" endtime="20220914 23:08:10.318"/>
</test>
<test id="s1-s2-s2-t4" name="Check Summary api access" line="109">
<kw name="Check Access">
<arg>${SUMMARY_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220914 23:08:10.325" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20220914 23:08:10.329" level="INFO">${rc} = 0</msg>
<msg timestamp="20220914 23:08:10.329" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20220914 23:08:10.322" endtime="20220914 23:08:10.329"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220914 23:08:10.330" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20220914 23:08:10.329" endtime="20220914 23:08:10.330"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220914 23:08:10.331" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220914 23:08:10.331" endtime="20220914 23:08:10.331"/>
</kw>
<status status="PASS" starttime="20220914 23:08:10.321" endtime="20220914 23:08:10.332"/>
</kw>
<msg timestamp="20220914 23:08:10.332" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220914 23:08:10.321" endtime="20220914 23:08:10.332"/>
</kw>
<status status="PASS" starttime="20220914 23:08:10.320" endtime="20220914 23:08:10.333"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220914 23:08:10.339" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20220914 23:08:10.373" level="INFO">${rc} = 0</msg>
<msg timestamp="20220914 23:08:10.373" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20220914 23:08:10.335" endtime="20220914 23:08:10.373"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220914 23:08:10.374" level="INFO">200</msg>
<status status="PASS" starttime="20220914 23:08:10.373" endtime="20220914 23:08:10.374"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220914 23:08:10.375" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220914 23:08:10.374" endtime="20220914 23:08:10.375"/>
</kw>
<status status="PASS" starttime="20220914 23:08:10.335" endtime="20220914 23:08:10.376"/>
</kw>
<msg timestamp="20220914 23:08:10.376" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220914 23:08:10.334" endtime="20220914 23:08:10.377"/>
</kw>
<msg timestamp="20220914 23:08:10.377" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20220914 23:08:10.334" endtime="20220914 23:08:10.377"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220914 23:08:10.378" endtime="20220914 23:08:10.378"/>
</kw>
<status status="NOT RUN" starttime="20220914 23:08:10.378" endtime="20220914 23:08:10.378"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220914 23:08:10.378" endtime="20220914 23:08:10.379"/>
</kw>
<status status="PASS" starttime="20220914 23:08:10.378" endtime="20220914 23:08:10.379"/>
</branch>
<status status="PASS" starttime="20220914 23:08:10.377" endtime="20220914 23:08:10.379"/>
</if>
<status status="PASS" starttime="20220914 23:08:10.333" endtime="20220914 23:08:10.379"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220914 23:08:10.380" endtime="20220914 23:08:10.380"/>
</kw>
<status status="PASS" starttime="20220914 23:08:10.379" endtime="20220914 23:08:10.380"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220914 23:08:10.386" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20220914 23:08:10.405" level="INFO">${rc} = 0</msg>
<msg timestamp="20220914 23:08:10.405" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20220914 23:08:10.383" endtime="20220914 23:08:10.405"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220914 23:08:10.408" level="INFO">200</msg>
<status status="PASS" starttime="20220914 23:08:10.406" endtime="20220914 23:08:10.408"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220914 23:08:10.409" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220914 23:08:10.408" endtime="20220914 23:08:10.409"/>
</kw>
<status status="PASS" starttime="20220914 23:08:10.382" endtime="20220914 23:08:10.409"/>
</kw>
<msg timestamp="20220914 23:08:10.409" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220914 23:08:10.382" endtime="20220914 23:08:10.410"/>
</kw>
<msg timestamp="20220914 23:08:10.411" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20220914 23:08:10.381" endtime="20220914 23:08:10.411"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220914 23:08:10.411" endtime="20220914 23:08:10.411"/>
</kw>
<status status="NOT RUN" starttime="20220914 23:08:10.411" endtime="20220914 23:08:10.411"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220914 23:08:10.412" endtime="20220914 23:08:10.412"/>
</kw>
<status status="PASS" starttime="20220914 23:08:10.411" endtime="20220914 23:08:10.412"/>
</branch>
<status status="PASS" starttime="20220914 23:08:10.411" endtime="20220914 23:08:10.412"/>
</if>
<status status="PASS" starttime="20220914 23:08:10.381" endtime="20220914 23:08:10.412"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220914 23:08:10.413" endtime="20220914 23:08:10.413"/>
</kw>
<status status="PASS" starttime="20220914 23:08:10.413" endtime="20220914 23:08:10.414"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220914 23:08:10.419" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20220914 23:08:10.436" level="INFO">${rc} = 0</msg>
<msg timestamp="20220914 23:08:10.436" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20220914 23:08:10.416" endtime="20220914 23:08:10.436"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220914 23:08:10.438" level="INFO">200</msg>
<status status="PASS" starttime="20220914 23:08:10.437" endtime="20220914 23:08:10.438"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220914 23:08:10.439" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220914 23:08:10.438" endtime="20220914 23:08:10.439"/>
</kw>
<status status="PASS" starttime="20220914 23:08:10.415" endtime="20220914 23:08:10.439"/>
</kw>
<msg timestamp="20220914 23:08:10.439" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220914 23:08:10.415" endtime="20220914 23:08:10.440"/>
</kw>
<msg timestamp="20220914 23:08:10.441" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20220914 23:08:10.414" endtime="20220914 23:08:10.441"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220914 23:08:10.441" endtime="20220914 23:08:10.441"/>
</kw>
<status status="NOT RUN" starttime="20220914 23:08:10.441" endtime="20220914 23:08:10.441"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220914 23:08:10.442" endtime="20220914 23:08:10.442"/>
</kw>
<status status="PASS" starttime="20220914 23:08:10.441" endtime="20220914 23:08:10.442"/>
</branch>
<status status="PASS" starttime="20220914 23:08:10.441" endtime="20220914 23:08:10.442"/>
</if>
<status status="PASS" starttime="20220914 23:08:10.414" endtime="20220914 23:08:10.442"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220914 23:08:10.443" endtime="20220914 23:08:10.444"/>
</kw>
<status status="PASS" starttime="20220914 23:08:10.442" endtime="20220914 23:08:10.444"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220914 23:08:10.449" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20220914 23:08:10.476" level="INFO">${rc} = 0</msg>
<msg timestamp="20220914 23:08:10.476" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20220914 23:08:10.446" endtime="20220914 23:08:10.476"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220914 23:08:10.480" level="INFO">200</msg>
<status status="PASS" starttime="20220914 23:08:10.477" endtime="20220914 23:08:10.480"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220914 23:08:10.481" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220914 23:08:10.480" endtime="20220914 23:08:10.481"/>
</kw>
<status status="PASS" starttime="20220914 23:08:10.445" endtime="20220914 23:08:10.481"/>
</kw>
<msg timestamp="20220914 23:08:10.482" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220914 23:08:10.445" endtime="20220914 23:08:10.483"/>
</kw>
<msg timestamp="20220914 23:08:10.483" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20220914 23:08:10.444" endtime="20220914 23:08:10.483"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220914 23:08:10.485" endtime="20220914 23:08:10.485"/>
</kw>
<status status="NOT RUN" starttime="20220914 23:08:10.484" endtime="20220914 23:08:10.485"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220914 23:08:10.485" endtime="20220914 23:08:10.486"/>
</kw>
<status status="PASS" starttime="20220914 23:08:10.485" endtime="20220914 23:08:10.486"/>
</branch>
<status status="PASS" starttime="20220914 23:08:10.484" endtime="20220914 23:08:10.486"/>
</if>
<status status="PASS" starttime="20220914 23:08:10.444" endtime="20220914 23:08:10.486"/>
</kw>
<status status="PASS" starttime="20220914 23:08:10.319" endtime="20220914 23:08:10.486"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220914 23:08:10.318" endtime="20220914 23:08:10.487"/>
</test>
<test id="s1-s2-s2-t5" name="Check Disk Usage api access" line="112">
<kw name="Check Access">
<arg>${DISK_USAGE_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220914 23:08:10.495" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20220914 23:08:10.502" level="INFO">${rc} = 0</msg>
<msg timestamp="20220914 23:08:10.502" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20220914 23:08:10.492" endtime="20220914 23:08:10.502"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220914 23:08:10.503" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20220914 23:08:10.502" endtime="20220914 23:08:10.504"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220914 23:08:10.504" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220914 23:08:10.504" endtime="20220914 23:08:10.504"/>
</kw>
<status status="PASS" starttime="20220914 23:08:10.491" endtime="20220914 23:08:10.505"/>
</kw>
<msg timestamp="20220914 23:08:10.505" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220914 23:08:10.490" endtime="20220914 23:08:10.506"/>
</kw>
<status status="PASS" starttime="20220914 23:08:10.490" endtime="20220914 23:08:10.506"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220914 23:08:10.513" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20220914 23:08:10.543" level="INFO">${rc} = 0</msg>
<msg timestamp="20220914 23:08:10.543" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20220914 23:08:10.509" endtime="20220914 23:08:10.543"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220914 23:08:10.544" level="INFO">200</msg>
<status status="PASS" starttime="20220914 23:08:10.544" endtime="20220914 23:08:10.545"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220914 23:08:10.545" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220914 23:08:10.545" endtime="20220914 23:08:10.546"/>
</kw>
<status status="PASS" starttime="20220914 23:08:10.508" endtime="20220914 23:08:10.546"/>
</kw>
<msg timestamp="20220914 23:08:10.546" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220914 23:08:10.508" endtime="20220914 23:08:10.547"/>
</kw>
<msg timestamp="20220914 23:08:10.548" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20220914 23:08:10.507" endtime="20220914 23:08:10.548"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220914 23:08:10.549" endtime="20220914 23:08:10.549"/>
</kw>
<status status="NOT RUN" starttime="20220914 23:08:10.548" endtime="20220914 23:08:10.549"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220914 23:08:10.549" endtime="20220914 23:08:10.549"/>
</kw>
<status status="PASS" starttime="20220914 23:08:10.549" endtime="20220914 23:08:10.550"/>
</branch>
<status status="PASS" starttime="20220914 23:08:10.548" endtime="20220914 23:08:10.550"/>
</if>
<status status="PASS" starttime="20220914 23:08:10.506" endtime="20220914 23:08:10.550"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220914 23:08:10.551" endtime="20220914 23:08:10.551"/>
</kw>
<status status="PASS" starttime="20220914 23:08:10.550" endtime="20220914 23:08:10.551"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220914 23:08:10.557" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20220914 23:08:10.586" level="INFO">${rc} = 0</msg>
<msg timestamp="20220914 23:08:10.586" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20220914 23:08:10.554" endtime="20220914 23:08:10.586"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220914 23:08:10.588" level="INFO">200</msg>
<status status="PASS" starttime="20220914 23:08:10.587" endtime="20220914 23:08:10.588"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220914 23:08:10.590" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220914 23:08:10.588" endtime="20220914 23:08:10.590"/>
</kw>
<status status="PASS" starttime="20220914 23:08:10.553" endtime="20220914 23:08:10.591"/>
</kw>
<msg timestamp="20220914 23:08:10.591" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220914 23:08:10.553" endtime="20220914 23:08:10.591"/>
</kw>
<msg timestamp="20220914 23:08:10.593" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20220914 23:08:10.552" endtime="20220914 23:08:10.593"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220914 23:08:10.594" endtime="20220914 23:08:10.594"/>
</kw>
<status status="NOT RUN" starttime="20220914 23:08:10.594" endtime="20220914 23:08:10.594"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220914 23:08:10.596" endtime="20220914 23:08:10.597"/>
</kw>
<status status="PASS" starttime="20220914 23:08:10.595" endtime="20220914 23:08:10.597"/>
</branch>
<status status="PASS" starttime="20220914 23:08:10.593" endtime="20220914 23:08:10.597"/>
</if>
<status status="PASS" starttime="20220914 23:08:10.551" endtime="20220914 23:08:10.597"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220914 23:08:10.598" endtime="20220914 23:08:10.599"/>
</kw>
<status status="PASS" starttime="20220914 23:08:10.597" endtime="20220914 23:08:10.599"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220914 23:08:10.606" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20220914 23:08:10.624" level="INFO">${rc} = 0</msg>
<msg timestamp="20220914 23:08:10.624" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20220914 23:08:10.602" endtime="20220914 23:08:10.625"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220914 23:08:10.626" level="INFO">200</msg>
<status status="PASS" starttime="20220914 23:08:10.625" endtime="20220914 23:08:10.626"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220914 23:08:10.627" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220914 23:08:10.626" endtime="20220914 23:08:10.627"/>
</kw>
<status status="PASS" starttime="20220914 23:08:10.601" endtime="20220914 23:08:10.627"/>
</kw>
<msg timestamp="20220914 23:08:10.628" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220914 23:08:10.601" endtime="20220914 23:08:10.628"/>
</kw>
<msg timestamp="20220914 23:08:10.632" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20220914 23:08:10.600" endtime="20220914 23:08:10.632"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220914 23:08:10.633" endtime="20220914 23:08:10.634"/>
</kw>
<status status="NOT RUN" starttime="20220914 23:08:10.633" endtime="20220914 23:08:10.634"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220914 23:08:10.634" endtime="20220914 23:08:10.636"/>
</kw>
<status status="PASS" starttime="20220914 23:08:10.634" endtime="20220914 23:08:10.636"/>
</branch>
<status status="PASS" starttime="20220914 23:08:10.633" endtime="20220914 23:08:10.636"/>
</if>
<status status="PASS" starttime="20220914 23:08:10.599" endtime="20220914 23:08:10.636"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220914 23:08:10.637" endtime="20220914 23:08:10.638"/>
</kw>
<status status="PASS" starttime="20220914 23:08:10.637" endtime="20220914 23:08:10.638"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220914 23:08:10.644" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20220914 23:08:10.663" level="INFO">${rc} = 0</msg>
<msg timestamp="20220914 23:08:10.663" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20220914 23:08:10.641" endtime="20220914 23:08:10.663"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220914 23:08:10.665" level="INFO">200</msg>
<status status="PASS" starttime="20220914 23:08:10.663" endtime="20220914 23:08:10.665"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220914 23:08:10.666" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220914 23:08:10.665" endtime="20220914 23:08:10.666"/>
</kw>
<status status="PASS" starttime="20220914 23:08:10.640" endtime="20220914 23:08:10.666"/>
</kw>
<msg timestamp="20220914 23:08:10.667" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220914 23:08:10.640" endtime="20220914 23:08:10.667"/>
</kw>
<msg timestamp="20220914 23:08:10.668" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20220914 23:08:10.638" endtime="20220914 23:08:10.668"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220914 23:08:10.668" endtime="20220914 23:08:10.668"/>
</kw>
<status status="NOT RUN" starttime="20220914 23:08:10.668" endtime="20220914 23:08:10.668"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220914 23:08:10.669" endtime="20220914 23:08:10.669"/>
</kw>
<status status="PASS" starttime="20220914 23:08:10.668" endtime="20220914 23:08:10.669"/>
</branch>
<status status="PASS" starttime="20220914 23:08:10.668" endtime="20220914 23:08:10.669"/>
</if>
<status status="PASS" starttime="20220914 23:08:10.638" endtime="20220914 23:08:10.670"/>
</kw>
<status status="PASS" starttime="20220914 23:08:10.489" endtime="20220914 23:08:10.670"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220914 23:08:10.488" endtime="20220914 23:08:10.670"/>
</test>
<test id="s1-s2-s2-t6" name="Check Quota Usage api access" line="115">
<kw name="Check Access">
<arg>${QUOTA_USAGE_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220914 23:08:10.678" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20220914 23:08:10.682" level="INFO">${rc} = 0</msg>
<msg timestamp="20220914 23:08:10.683" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20220914 23:08:10.675" endtime="20220914 23:08:10.683"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220914 23:08:10.684" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20220914 23:08:10.683" endtime="20220914 23:08:10.684"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220914 23:08:10.685" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220914 23:08:10.684" endtime="20220914 23:08:10.685"/>
</kw>
<status status="PASS" starttime="20220914 23:08:10.675" endtime="20220914 23:08:10.685"/>
</kw>
<msg timestamp="20220914 23:08:10.685" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220914 23:08:10.674" endtime="20220914 23:08:10.686"/>
</kw>
<status status="PASS" starttime="20220914 23:08:10.673" endtime="20220914 23:08:10.686"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220914 23:08:10.691" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20220914 23:08:10.712" level="INFO">${rc} = 0</msg>
<msg timestamp="20220914 23:08:10.712" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20220914 23:08:10.689" endtime="20220914 23:08:10.712"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220914 23:08:10.714" level="INFO">200</msg>
<status status="PASS" starttime="20220914 23:08:10.713" endtime="20220914 23:08:10.714"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220914 23:08:10.715" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220914 23:08:10.714" endtime="20220914 23:08:10.715"/>
</kw>
<status status="PASS" starttime="20220914 23:08:10.688" endtime="20220914 23:08:10.716"/>
</kw>
<msg timestamp="20220914 23:08:10.716" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220914 23:08:10.688" endtime="20220914 23:08:10.716"/>
</kw>
<msg timestamp="20220914 23:08:10.717" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20220914 23:08:10.687" endtime="20220914 23:08:10.717"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220914 23:08:10.717" endtime="20220914 23:08:10.717"/>
</kw>
<status status="NOT RUN" starttime="20220914 23:08:10.717" endtime="20220914 23:08:10.717"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220914 23:08:10.718" endtime="20220914 23:08:10.718"/>
</kw>
<status status="PASS" starttime="20220914 23:08:10.718" endtime="20220914 23:08:10.718"/>
</branch>
<status status="PASS" starttime="20220914 23:08:10.717" endtime="20220914 23:08:10.718"/>
</if>
<status status="PASS" starttime="20220914 23:08:10.686" endtime="20220914 23:08:10.719"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220914 23:08:10.719" endtime="20220914 23:08:10.720"/>
</kw>
<status status="PASS" starttime="20220914 23:08:10.719" endtime="20220914 23:08:10.720"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220914 23:08:10.726" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20220914 23:08:10.749" level="INFO">${rc} = 0</msg>
<msg timestamp="20220914 23:08:10.749" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20220914 23:08:10.723" endtime="20220914 23:08:10.749"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220914 23:08:10.751" level="INFO">200</msg>
<status status="PASS" starttime="20220914 23:08:10.749" endtime="20220914 23:08:10.751"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220914 23:08:10.751" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220914 23:08:10.751" endtime="20220914 23:08:10.752"/>
</kw>
<status status="PASS" starttime="20220914 23:08:10.722" endtime="20220914 23:08:10.752"/>
</kw>
<msg timestamp="20220914 23:08:10.752" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220914 23:08:10.722" endtime="20220914 23:08:10.753"/>
</kw>
<msg timestamp="20220914 23:08:10.753" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20220914 23:08:10.721" endtime="20220914 23:08:10.753"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220914 23:08:10.754" endtime="20220914 23:08:10.754"/>
</kw>
<status status="NOT RUN" starttime="20220914 23:08:10.753" endtime="20220914 23:08:10.754"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220914 23:08:10.754" endtime="20220914 23:08:10.755"/>
</kw>
<status status="PASS" starttime="20220914 23:08:10.754" endtime="20220914 23:08:10.755"/>
</branch>
<status status="PASS" starttime="20220914 23:08:10.753" endtime="20220914 23:08:10.755"/>
</if>
<status status="PASS" starttime="20220914 23:08:10.720" endtime="20220914 23:08:10.755"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220914 23:08:10.756" endtime="20220914 23:08:10.756"/>
</kw>
<status status="PASS" starttime="20220914 23:08:10.755" endtime="20220914 23:08:10.756"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220914 23:08:10.763" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20220914 23:08:10.780" level="INFO">${rc} = 0</msg>
<msg timestamp="20220914 23:08:10.780" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20220914 23:08:10.759" endtime="20220914 23:08:10.780"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220914 23:08:10.782" level="INFO">200</msg>
<status status="PASS" starttime="20220914 23:08:10.781" endtime="20220914 23:08:10.782"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220914 23:08:10.782" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220914 23:08:10.782" endtime="20220914 23:08:10.783"/>
</kw>
<status status="PASS" starttime="20220914 23:08:10.758" endtime="20220914 23:08:10.783"/>
</kw>
<msg timestamp="20220914 23:08:10.783" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220914 23:08:10.758" endtime="20220914 23:08:10.784"/>
</kw>
<msg timestamp="20220914 23:08:10.784" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20220914 23:08:10.757" endtime="20220914 23:08:10.784"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220914 23:08:10.785" endtime="20220914 23:08:10.785"/>
</kw>
<status status="NOT RUN" starttime="20220914 23:08:10.784" endtime="20220914 23:08:10.785"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220914 23:08:10.785" endtime="20220914 23:08:10.785"/>
</kw>
<status status="PASS" starttime="20220914 23:08:10.785" endtime="20220914 23:08:10.786"/>
</branch>
<status status="PASS" starttime="20220914 23:08:10.784" endtime="20220914 23:08:10.786"/>
</if>
<status status="PASS" starttime="20220914 23:08:10.757" endtime="20220914 23:08:10.786"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220914 23:08:10.787" endtime="20220914 23:08:10.787"/>
</kw>
<status status="PASS" starttime="20220914 23:08:10.786" endtime="20220914 23:08:10.787"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220914 23:08:10.792" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20220914 23:08:10.810" level="INFO">${rc} = 0</msg>
<msg timestamp="20220914 23:08:10.810" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20220914 23:08:10.790" endtime="20220914 23:08:10.810"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220914 23:08:10.812" level="INFO">200</msg>
<status status="PASS" starttime="20220914 23:08:10.811" endtime="20220914 23:08:10.812"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220914 23:08:10.813" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220914 23:08:10.812" endtime="20220914 23:08:10.813"/>
</kw>
<status status="PASS" starttime="20220914 23:08:10.789" endtime="20220914 23:08:10.813"/>
</kw>
<msg timestamp="20220914 23:08:10.813" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220914 23:08:10.789" endtime="20220914 23:08:10.814"/>
</kw>
<msg timestamp="20220914 23:08:10.814" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20220914 23:08:10.788" endtime="20220914 23:08:10.815"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220914 23:08:10.815" endtime="20220914 23:08:10.815"/>
</kw>
<status status="NOT RUN" starttime="20220914 23:08:10.815" endtime="20220914 23:08:10.815"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220914 23:08:10.815" endtime="20220914 23:08:10.816"/>
</kw>
<status status="PASS" starttime="20220914 23:08:10.815" endtime="20220914 23:08:10.816"/>
</branch>
<status status="PASS" starttime="20220914 23:08:10.815" endtime="20220914 23:08:10.816"/>
</if>
<status status="PASS" starttime="20220914 23:08:10.787" endtime="20220914 23:08:10.816"/>
</kw>
<status status="PASS" starttime="20220914 23:08:10.672" endtime="20220914 23:08:10.816"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220914 23:08:10.671" endtime="20220914 23:08:10.817"/>
</test>
<test id="s1-s2-s2-t7" name="Check File Size Distribution api access" line="118">
<kw name="Check Access">
<arg>${FILE_SIZE_DIST_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220914 23:08:10.824" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20220914 23:08:10.828" level="INFO">${rc} = 0</msg>
<msg timestamp="20220914 23:08:10.828" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20220914 23:08:10.822" endtime="20220914 23:08:10.828"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220914 23:08:10.829" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20220914 23:08:10.829" endtime="20220914 23:08:10.829"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220914 23:08:10.830" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220914 23:08:10.830" endtime="20220914 23:08:10.830"/>
</kw>
<status status="PASS" starttime="20220914 23:08:10.820" endtime="20220914 23:08:10.831"/>
</kw>
<msg timestamp="20220914 23:08:10.831" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220914 23:08:10.820" endtime="20220914 23:08:10.831"/>
</kw>
<status status="PASS" starttime="20220914 23:08:10.820" endtime="20220914 23:08:10.832"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220914 23:08:10.837" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20220914 23:08:10.865" level="INFO">${rc} = 0</msg>
<msg timestamp="20220914 23:08:10.865" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20220914 23:08:10.834" endtime="20220914 23:08:10.865"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220914 23:08:10.866" level="INFO">200</msg>
<status status="PASS" starttime="20220914 23:08:10.865" endtime="20220914 23:08:10.867"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220914 23:08:10.868" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220914 23:08:10.867" endtime="20220914 23:08:10.868"/>
</kw>
<status status="PASS" starttime="20220914 23:08:10.833" endtime="20220914 23:08:10.868"/>
</kw>
<msg timestamp="20220914 23:08:10.868" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220914 23:08:10.833" endtime="20220914 23:08:10.869"/>
</kw>
<msg timestamp="20220914 23:08:10.869" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20220914 23:08:10.832" endtime="20220914 23:08:10.869"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220914 23:08:10.870" endtime="20220914 23:08:10.870"/>
</kw>
<status status="NOT RUN" starttime="20220914 23:08:10.870" endtime="20220914 23:08:10.870"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220914 23:08:10.870" endtime="20220914 23:08:10.871"/>
</kw>
<status status="PASS" starttime="20220914 23:08:10.870" endtime="20220914 23:08:10.871"/>
</branch>
<status status="PASS" starttime="20220914 23:08:10.869" endtime="20220914 23:08:10.871"/>
</if>
<status status="PASS" starttime="20220914 23:08:10.832" endtime="20220914 23:08:10.871"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220914 23:08:10.872" endtime="20220914 23:08:10.873"/>
</kw>
<status status="PASS" starttime="20220914 23:08:10.871" endtime="20220914 23:08:10.873"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220914 23:08:10.878" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20220914 23:08:10.896" level="INFO">${rc} = 0</msg>
<msg timestamp="20220914 23:08:10.896" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20220914 23:08:10.875" endtime="20220914 23:08:10.896"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220914 23:08:10.899" level="INFO">200</msg>
<status status="PASS" starttime="20220914 23:08:10.898" endtime="20220914 23:08:10.899"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220914 23:08:10.900" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220914 23:08:10.899" endtime="20220914 23:08:10.900"/>
</kw>
<status status="PASS" starttime="20220914 23:08:10.875" endtime="20220914 23:08:10.900"/>
</kw>
<msg timestamp="20220914 23:08:10.901" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220914 23:08:10.874" endtime="20220914 23:08:10.901"/>
</kw>
<msg timestamp="20220914 23:08:10.902" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20220914 23:08:10.874" endtime="20220914 23:08:10.902"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220914 23:08:10.902" endtime="20220914 23:08:10.902"/>
</kw>
<status status="NOT RUN" starttime="20220914 23:08:10.902" endtime="20220914 23:08:10.902"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220914 23:08:10.903" endtime="20220914 23:08:10.903"/>
</kw>
<status status="PASS" starttime="20220914 23:08:10.902" endtime="20220914 23:08:10.903"/>
</branch>
<status status="PASS" starttime="20220914 23:08:10.902" endtime="20220914 23:08:10.903"/>
</if>
<status status="PASS" starttime="20220914 23:08:10.873" endtime="20220914 23:08:10.903"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220914 23:08:10.904" endtime="20220914 23:08:10.904"/>
</kw>
<status status="PASS" starttime="20220914 23:08:10.904" endtime="20220914 23:08:10.905"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220914 23:08:10.910" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20220914 23:08:10.926" level="INFO">${rc} = 0</msg>
<msg timestamp="20220914 23:08:10.926" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20220914 23:08:10.907" endtime="20220914 23:08:10.926"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220914 23:08:10.928" level="INFO">200</msg>
<status status="PASS" starttime="20220914 23:08:10.927" endtime="20220914 23:08:10.928"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220914 23:08:10.929" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220914 23:08:10.928" endtime="20220914 23:08:10.929"/>
</kw>
<status status="PASS" starttime="20220914 23:08:10.906" endtime="20220914 23:08:10.929"/>
</kw>
<msg timestamp="20220914 23:08:10.930" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220914 23:08:10.906" endtime="20220914 23:08:10.931"/>
</kw>
<msg timestamp="20220914 23:08:10.931" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20220914 23:08:10.905" endtime="20220914 23:08:10.931"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220914 23:08:10.931" endtime="20220914 23:08:10.932"/>
</kw>
<status status="NOT RUN" starttime="20220914 23:08:10.931" endtime="20220914 23:08:10.932"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220914 23:08:10.932" endtime="20220914 23:08:10.933"/>
</kw>
<status status="PASS" starttime="20220914 23:08:10.932" endtime="20220914 23:08:10.933"/>
</branch>
<status status="PASS" starttime="20220914 23:08:10.931" endtime="20220914 23:08:10.933"/>
</if>
<status status="PASS" starttime="20220914 23:08:10.905" endtime="20220914 23:08:10.933"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220914 23:08:10.934" endtime="20220914 23:08:10.934"/>
</kw>
<status status="PASS" starttime="20220914 23:08:10.933" endtime="20220914 23:08:10.935"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220914 23:08:10.940" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20220914 23:08:10.959" level="INFO">${rc} = 0</msg>
<msg timestamp="20220914 23:08:10.959" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20220914 23:08:10.937" endtime="20220914 23:08:10.959"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220914 23:08:10.961" level="INFO">200</msg>
<status status="PASS" starttime="20220914 23:08:10.960" endtime="20220914 23:08:10.961"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220914 23:08:10.961" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220914 23:08:10.961" endtime="20220914 23:08:10.962"/>
</kw>
<status status="PASS" starttime="20220914 23:08:10.936" endtime="20220914 23:08:10.962"/>
</kw>
<msg timestamp="20220914 23:08:10.963" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220914 23:08:10.936" endtime="20220914 23:08:10.963"/>
</kw>
<msg timestamp="20220914 23:08:10.964" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20220914 23:08:10.935" endtime="20220914 23:08:10.964"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220914 23:08:10.964" endtime="20220914 23:08:10.964"/>
</kw>
<status status="NOT RUN" starttime="20220914 23:08:10.964" endtime="20220914 23:08:10.964"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220914 23:08:10.965" endtime="20220914 23:08:10.965"/>
</kw>
<status status="PASS" starttime="20220914 23:08:10.964" endtime="20220914 23:08:10.965"/>
</branch>
<status status="PASS" starttime="20220914 23:08:10.964" endtime="20220914 23:08:10.965"/>
</if>
<status status="PASS" starttime="20220914 23:08:10.935" endtime="20220914 23:08:10.965"/>
</kw>
<status status="PASS" starttime="20220914 23:08:10.819" endtime="20220914 23:08:10.966"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220914 23:08:10.818" endtime="20220914 23:08:10.966"/>
</test>
<test id="s1-s2-s2-t8" name="Check Recon Namespace Summary Root" line="121">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/</arg>
<arg>ROOT</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220914 23:08:10.975" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20220914 23:08:10.991" level="INFO">${rc} = 0</msg>
<msg timestamp="20220914 23:08:10.992" level="INFO">${output} = {"type":"ROOT","numVolume":3,"numBucket":2,"numDir":0,"numKey":0,"status":"OK"}</msg>
<status status="PASS" starttime="20220914 23:08:10.972" endtime="20220914 23:08:10.992"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220914 23:08:10.993" level="INFO">{"type":"ROOT","numVolume":3,"numBucket":2,"numDir":0,"numKey":0,"status":"OK"}</msg>
<status status="PASS" starttime="20220914 23:08:10.992" endtime="20220914 23:08:10.993"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220914 23:08:10.994" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220914 23:08:10.993" endtime="20220914 23:08:10.994"/>
</kw>
<status status="PASS" starttime="20220914 23:08:10.971" endtime="20220914 23:08:10.994"/>
</kw>
<msg timestamp="20220914 23:08:10.995" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220914 23:08:10.971" endtime="20220914 23:08:10.995"/>
</kw>
<msg timestamp="20220914 23:08:10.996" level="INFO">${result} = {"type":"ROOT","numVolume":3,"numBucket":2,"numDir":0,"numKey":0,"status":"OK"}</msg>
<status status="PASS" starttime="20220914 23:08:10.970" endtime="20220914 23:08:10.996"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220914 23:08:10.996" endtime="20220914 23:08:10.996"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220914 23:08:10.996" endtime="20220914 23:08:10.997"/>
</kw>
<status status="PASS" starttime="20220914 23:08:10.970" endtime="20220914 23:08:10.997"/>
</kw>
<status status="PASS" starttime="20220914 23:08:10.969" endtime="20220914 23:08:10.997"/>
</kw>
<status status="PASS" starttime="20220914 23:08:10.968" endtime="20220914 23:08:10.997"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220914 23:08:10.967" endtime="20220914 23:08:10.998"/>
</test>
<test id="s1-s2-s2-t9" name="Check Recon Namespace Summary Volume" line="124">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}</arg>
<arg>VOLUME</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220914 23:08:11.007" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-ymazs 2&gt;&amp;1'.</msg>
<msg timestamp="20220914 23:08:11.027" level="INFO">${rc} = 0</msg>
<msg timestamp="20220914 23:08:11.027" level="INFO">${output} = {"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20220914 23:08:11.004" endtime="20220914 23:08:11.027"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220914 23:08:11.029" level="INFO">{"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20220914 23:08:11.028" endtime="20220914 23:08:11.029"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220914 23:08:11.029" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220914 23:08:11.029" endtime="20220914 23:08:11.030"/>
</kw>
<status status="PASS" starttime="20220914 23:08:11.003" endtime="20220914 23:08:11.030"/>
</kw>
<msg timestamp="20220914 23:08:11.030" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220914 23:08:11.003" endtime="20220914 23:08:11.031"/>
</kw>
<msg timestamp="20220914 23:08:11.031" level="INFO">${result} = {"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20220914 23:08:11.003" endtime="20220914 23:08:11.031"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20220914 23:08:11.032" level="FAIL">'{"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20220914 23:08:11.032" endtime="20220914 23:08:11.033"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220914 23:08:11.033" endtime="20220914 23:08:11.034"/>
</kw>
<status status="FAIL" starttime="20220914 23:08:11.002" endtime="20220914 23:08:11.035"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220914 23:08:21.041" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-ymazs 2&gt;&amp;1'.</msg>
<msg timestamp="20220914 23:08:21.059" level="INFO">${rc} = 0</msg>
<msg timestamp="20220914 23:08:21.059" level="INFO">${output} = {"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20220914 23:08:21.038" endtime="20220914 23:08:21.059"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220914 23:08:21.061" level="INFO">{"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20220914 23:08:21.060" endtime="20220914 23:08:21.061"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220914 23:08:21.062" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220914 23:08:21.061" endtime="20220914 23:08:21.062"/>
</kw>
<status status="PASS" starttime="20220914 23:08:21.037" endtime="20220914 23:08:21.062"/>
</kw>
<msg timestamp="20220914 23:08:21.062" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220914 23:08:21.037" endtime="20220914 23:08:21.063"/>
</kw>
<msg timestamp="20220914 23:08:21.064" level="INFO">${result} = {"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20220914 23:08:21.036" endtime="20220914 23:08:21.064"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20220914 23:08:21.065" level="FAIL">'{"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20220914 23:08:21.064" endtime="20220914 23:08:21.065"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220914 23:08:21.066" endtime="20220914 23:08:21.066"/>
</kw>
<status status="FAIL" starttime="20220914 23:08:21.035" endtime="20220914 23:08:21.067"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220914 23:08:31.074" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-ymazs 2&gt;&amp;1'.</msg>
<msg timestamp="20220914 23:08:31.092" level="INFO">${rc} = 0</msg>
<msg timestamp="20220914 23:08:31.092" level="INFO">${output} = {"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20220914 23:08:31.071" endtime="20220914 23:08:31.092"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220914 23:08:31.093" level="INFO">{"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20220914 23:08:31.092" endtime="20220914 23:08:31.093"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220914 23:08:31.094" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220914 23:08:31.093" endtime="20220914 23:08:31.094"/>
</kw>
<status status="PASS" starttime="20220914 23:08:31.071" endtime="20220914 23:08:31.095"/>
</kw>
<msg timestamp="20220914 23:08:31.095" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220914 23:08:31.070" endtime="20220914 23:08:31.095"/>
</kw>
<msg timestamp="20220914 23:08:31.096" level="INFO">${result} = {"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20220914 23:08:31.069" endtime="20220914 23:08:31.096"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20220914 23:08:31.097" level="FAIL">'{"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20220914 23:08:31.096" endtime="20220914 23:08:31.097"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220914 23:08:31.098" endtime="20220914 23:08:31.098"/>
</kw>
<status status="FAIL" starttime="20220914 23:08:31.068" endtime="20220914 23:08:31.099"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220914 23:08:41.105" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-ymazs 2&gt;&amp;1'.</msg>
<msg timestamp="20220914 23:08:41.122" level="INFO">${rc} = 0</msg>
<msg timestamp="20220914 23:08:41.122" level="INFO">${output} = {"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20220914 23:08:41.103" endtime="20220914 23:08:41.122"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220914 23:08:41.123" level="INFO">{"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20220914 23:08:41.122" endtime="20220914 23:08:41.123"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220914 23:08:41.124" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220914 23:08:41.123" endtime="20220914 23:08:41.124"/>
</kw>
<status status="PASS" starttime="20220914 23:08:41.102" endtime="20220914 23:08:41.124"/>
</kw>
<msg timestamp="20220914 23:08:41.125" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220914 23:08:41.102" endtime="20220914 23:08:41.125"/>
</kw>
<msg timestamp="20220914 23:08:41.126" level="INFO">${result} = {"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20220914 23:08:41.101" endtime="20220914 23:08:41.126"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20220914 23:08:41.127" level="FAIL">'{"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20220914 23:08:41.126" endtime="20220914 23:08:41.128"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220914 23:08:41.128" endtime="20220914 23:08:41.128"/>
</kw>
<status status="FAIL" starttime="20220914 23:08:41.099" endtime="20220914 23:08:41.129"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220914 23:08:51.136" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-ymazs 2&gt;&amp;1'.</msg>
<msg timestamp="20220914 23:08:51.162" level="INFO">${rc} = 0</msg>
<msg timestamp="20220914 23:08:51.163" level="INFO">${output} = {"type":"VOLUME","numVolume":-1,"numBucket":1,"numDir":2,"numKey":2,"status":"OK"}</msg>
<status status="PASS" starttime="20220914 23:08:51.134" endtime="20220914 23:08:51.163"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220914 23:08:51.164" level="INFO">{"type":"VOLUME","numVolume":-1,"numBucket":1,"numDir":2,"numKey":2,"status":"OK"}</msg>
<status status="PASS" starttime="20220914 23:08:51.163" endtime="20220914 23:08:51.164"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220914 23:08:51.165" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220914 23:08:51.165" endtime="20220914 23:08:51.165"/>
</kw>
<status status="PASS" starttime="20220914 23:08:51.133" endtime="20220914 23:08:51.166"/>
</kw>
<msg timestamp="20220914 23:08:51.166" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220914 23:08:51.132" endtime="20220914 23:08:51.166"/>
</kw>
<msg timestamp="20220914 23:08:51.168" level="INFO">${result} = {"type":"VOLUME","numVolume":-1,"numBucket":1,"numDir":2,"numKey":2,"status":"OK"}</msg>
<status status="PASS" starttime="20220914 23:08:51.131" endtime="20220914 23:08:51.168"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220914 23:08:51.169" endtime="20220914 23:08:51.169"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220914 23:08:51.169" endtime="20220914 23:08:51.170"/>
</kw>
<status status="PASS" starttime="20220914 23:08:51.130" endtime="20220914 23:08:51.170"/>
</kw>
<status status="PASS" starttime="20220914 23:08:11.001" endtime="20220914 23:08:51.170"/>
</kw>
<status status="PASS" starttime="20220914 23:08:11.000" endtime="20220914 23:08:51.170"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220914 23:08:10.999" endtime="20220914 23:08:51.171"/>
</test>
<test id="s1-s2-s2-t10" name="Check Recon Namespace Summary Bucket" line="127">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}</arg>
<arg>BUCKET</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220914 23:08:51.180" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-ymazs/buc-iyjnq 2&gt;&amp;1'.</msg>
<msg timestamp="20220914 23:08:51.208" level="INFO">${rc} = 0</msg>
<msg timestamp="20220914 23:08:51.208" level="INFO">${output} = {"type":"BUCKET","numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2,"status":"OK"}</msg>
<status status="PASS" starttime="20220914 23:08:51.178" endtime="20220914 23:08:51.209"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220914 23:08:51.210" level="INFO">{"type":"BUCKET","numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2,"status":"OK"}</msg>
<status status="PASS" starttime="20220914 23:08:51.209" endtime="20220914 23:08:51.210"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220914 23:08:51.211" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220914 23:08:51.210" endtime="20220914 23:08:51.211"/>
</kw>
<status status="PASS" starttime="20220914 23:08:51.177" endtime="20220914 23:08:51.212"/>
</kw>
<msg timestamp="20220914 23:08:51.212" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220914 23:08:51.176" endtime="20220914 23:08:51.212"/>
</kw>
<msg timestamp="20220914 23:08:51.213" level="INFO">${result} = {"type":"BUCKET","numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2,"status":"OK"}</msg>
<status status="PASS" starttime="20220914 23:08:51.176" endtime="20220914 23:08:51.213"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220914 23:08:51.213" endtime="20220914 23:08:51.213"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220914 23:08:51.214" endtime="20220914 23:08:51.214"/>
</kw>
<status status="PASS" starttime="20220914 23:08:51.175" endtime="20220914 23:08:51.214"/>
</kw>
<status status="PASS" starttime="20220914 23:08:51.174" endtime="20220914 23:08:51.214"/>
</kw>
<status status="PASS" starttime="20220914 23:08:51.173" endtime="20220914 23:08:51.215"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220914 23:08:51.172" endtime="20220914 23:08:51.215"/>
</test>
<test id="s1-s2-s2-t11" name="Check Recon Namespace Summary Key" line="130">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/file1</arg>
<arg>KEY</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220914 23:08:51.224" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-ymazs/buc-iyjnq/file1 2&gt;&amp;1'.</msg>
<msg timestamp="20220914 23:08:51.243" level="INFO">${rc} = 0</msg>
<msg timestamp="20220914 23:08:51.243" level="INFO">${output} = {"type":"KEY","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"OK"}</msg>
<status status="PASS" starttime="20220914 23:08:51.221" endtime="20220914 23:08:51.243"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220914 23:08:51.244" level="INFO">{"type":"KEY","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"OK"}</msg>
<status status="PASS" starttime="20220914 23:08:51.243" endtime="20220914 23:08:51.244"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220914 23:08:51.245" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220914 23:08:51.244" endtime="20220914 23:08:51.245"/>
</kw>
<status status="PASS" starttime="20220914 23:08:51.220" endtime="20220914 23:08:51.245"/>
</kw>
<msg timestamp="20220914 23:08:51.246" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220914 23:08:51.220" endtime="20220914 23:08:51.246"/>
</kw>
<msg timestamp="20220914 23:08:51.247" level="INFO">${result} = {"type":"KEY","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"OK"}</msg>
<status status="PASS" starttime="20220914 23:08:51.220" endtime="20220914 23:08:51.247"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220914 23:08:51.247" endtime="20220914 23:08:51.248"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220914 23:08:51.248" endtime="20220914 23:08:51.249"/>
</kw>
<status status="PASS" starttime="20220914 23:08:51.219" endtime="20220914 23:08:51.249"/>
</kw>
<status status="PASS" starttime="20220914 23:08:51.218" endtime="20220914 23:08:51.249"/>
</kw>
<status status="PASS" starttime="20220914 23:08:51.217" endtime="20220914 23:08:51.249"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220914 23:08:51.216" endtime="20220914 23:08:51.250"/>
</test>
<test id="s1-s2-s2-t12" name="Check Recon Namespace Summary Directory" line="133">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2</arg>
<arg>DIRECTORY</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220914 23:08:51.260" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-ymazs/buc-iyjnq/dir1/dir2 2&gt;&amp;1'.</msg>
<msg timestamp="20220914 23:08:51.279" level="INFO">${rc} = 0</msg>
<msg timestamp="20220914 23:08:51.279" level="INFO">${output} = {"type":"DIRECTORY","numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1,"status":"OK"}</msg>
<status status="PASS" starttime="20220914 23:08:51.257" endtime="20220914 23:08:51.279"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220914 23:08:51.281" level="INFO">{"type":"DIRECTORY","numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1,"status":"OK"}</msg>
<status status="PASS" starttime="20220914 23:08:51.280" endtime="20220914 23:08:51.281"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220914 23:08:51.282" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220914 23:08:51.281" endtime="20220914 23:08:51.282"/>
</kw>
<status status="PASS" starttime="20220914 23:08:51.256" endtime="20220914 23:08:51.283"/>
</kw>
<msg timestamp="20220914 23:08:51.283" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220914 23:08:51.256" endtime="20220914 23:08:51.283"/>
</kw>
<msg timestamp="20220914 23:08:51.284" level="INFO">${result} = {"type":"DIRECTORY","numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1,"status":"OK"}</msg>
<status status="PASS" starttime="20220914 23:08:51.255" endtime="20220914 23:08:51.284"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220914 23:08:51.284" endtime="20220914 23:08:51.284"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220914 23:08:51.285" endtime="20220914 23:08:51.285"/>
</kw>
<status status="PASS" starttime="20220914 23:08:51.254" endtime="20220914 23:08:51.285"/>
</kw>
<status status="PASS" starttime="20220914 23:08:51.254" endtime="20220914 23:08:51.285"/>
</kw>
<status status="PASS" starttime="20220914 23:08:51.253" endtime="20220914 23:08:51.286"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220914 23:08:51.251" endtime="20220914 23:08:51.286"/>
</test>
<test id="s1-s2-s2-t13" name="Check Recon Namespace Disk Usage" line="136">
<kw name="Wait For Summary">
<arg>${DISK_USAGE_URL}?path=/${VOLUME}/${BUCKET}&amp;files=true&amp;replica=true</arg>
<arg>\"sizeWithReplica\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220914 23:08:51.295" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/du?path=/vol-ymazs/buc-iyjnq&amp;files=true&amp;replica=true 2&gt;&amp;1'.</msg>
<msg timestamp="20220914 23:08:51.312" level="INFO">${rc} = 0</msg>
<msg timestamp="20220914 23:08:51.312" level="INFO">${output} = {"status":"OK","path":"/vol-ymazs/buc-iyjnq","size":9849,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-ymazs/buc-iyjnq/dir1","size":6038,"sizeWithReplica":-1,"isKey":fals...</msg>
<status status="PASS" starttime="20220914 23:08:51.292" endtime="20220914 23:08:51.312"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220914 23:08:51.313" level="INFO">{"status":"OK","path":"/vol-ymazs/buc-iyjnq","size":9849,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-ymazs/buc-iyjnq/dir1","size":6038,"sizeWithReplica":-1,"isKey":false}],"sizeDirectKey":3811}</msg>
<status status="PASS" starttime="20220914 23:08:51.312" endtime="20220914 23:08:51.313"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220914 23:08:51.314" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220914 23:08:51.314" endtime="20220914 23:08:51.314"/>
</kw>
<status status="PASS" starttime="20220914 23:08:51.292" endtime="20220914 23:08:51.315"/>
</kw>
<msg timestamp="20220914 23:08:51.315" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220914 23:08:51.291" endtime="20220914 23:08:51.316"/>
</kw>
<msg timestamp="20220914 23:08:51.316" level="INFO">${result} = {"status":"OK","path":"/vol-ymazs/buc-iyjnq","size":9849,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-ymazs/buc-iyjnq/dir1","size":6038,"sizeWithReplica":-1,"isKey":fals...</msg>
<status status="PASS" starttime="20220914 23:08:51.291" endtime="20220914 23:08:51.316"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220914 23:08:51.316" endtime="20220914 23:08:51.317"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220914 23:08:51.317" endtime="20220914 23:08:51.317"/>
</kw>
<status status="PASS" starttime="20220914 23:08:51.290" endtime="20220914 23:08:51.317"/>
</kw>
<status status="PASS" starttime="20220914 23:08:51.290" endtime="20220914 23:08:51.317"/>
</kw>
<status status="PASS" starttime="20220914 23:08:51.288" endtime="20220914 23:08:51.318"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220914 23:08:51.287" endtime="20220914 23:08:51.318"/>
</test>
<test id="s1-s2-s2-t14" name="Check Recon Namespace Volume Quota Usage" line="139">
<kw name="Wait For Summary">
<arg>${QUOTA_USAGE_URL}?path=/${VOLUME}</arg>
<arg>\"used\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220914 23:08:51.327" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/quota?path=/vol-ymazs 2&gt;&amp;1'.</msg>
<msg timestamp="20220914 23:08:51.344" level="INFO">${rc} = 0</msg>
<msg timestamp="20220914 23:08:51.344" level="INFO">${output} = {"allowed":-1,"used":9849,"status":"OK"}</msg>
<status status="PASS" starttime="20220914 23:08:51.324" endtime="20220914 23:08:51.344"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220914 23:08:51.345" level="INFO">{"allowed":-1,"used":9849,"status":"OK"}</msg>
<status status="PASS" starttime="20220914 23:08:51.344" endtime="20220914 23:08:51.345"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220914 23:08:51.346" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220914 23:08:51.345" endtime="20220914 23:08:51.347"/>
</kw>
<status status="PASS" starttime="20220914 23:08:51.324" endtime="20220914 23:08:51.347"/>
</kw>
<msg timestamp="20220914 23:08:51.347" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220914 23:08:51.323" endtime="20220914 23:08:51.348"/>
</kw>
<msg timestamp="20220914 23:08:51.348" level="INFO">${result} = {"allowed":-1,"used":9849,"status":"OK"}</msg>
<status status="PASS" starttime="20220914 23:08:51.323" endtime="20220914 23:08:51.348"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220914 23:08:51.348" endtime="20220914 23:08:51.349"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220914 23:08:51.349" endtime="20220914 23:08:51.350"/>
</kw>
<status status="PASS" starttime="20220914 23:08:51.322" endtime="20220914 23:08:51.350"/>
</kw>
<status status="PASS" starttime="20220914 23:08:51.322" endtime="20220914 23:08:51.350"/>
</kw>
<status status="PASS" starttime="20220914 23:08:51.321" endtime="20220914 23:08:51.350"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220914 23:08:51.320" endtime="20220914 23:08:51.351"/>
</test>
<test id="s1-s2-s2-t15" name="Check Recon Namespace Bucket Quota Usage" line="142">
<kw name="Wait For Summary">
<arg>${QUOTA_USAGE_URL}?path=/${VOLUME}/${BUCKET}</arg>
<arg>\"used\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220914 23:08:51.359" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/quota?path=/vol-ymazs/buc-iyjnq 2&gt;&amp;1'.</msg>
<msg timestamp="20220914 23:08:51.376" level="INFO">${rc} = 0</msg>
<msg timestamp="20220914 23:08:51.376" level="INFO">${output} = {"allowed":-1,"used":9849,"status":"OK"}</msg>
<status status="PASS" starttime="20220914 23:08:51.356" endtime="20220914 23:08:51.376"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220914 23:08:51.377" level="INFO">{"allowed":-1,"used":9849,"status":"OK"}</msg>
<status status="PASS" starttime="20220914 23:08:51.376" endtime="20220914 23:08:51.377"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220914 23:08:51.379" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220914 23:08:51.378" endtime="20220914 23:08:51.379"/>
</kw>
<status status="PASS" starttime="20220914 23:08:51.356" endtime="20220914 23:08:51.379"/>
</kw>
<msg timestamp="20220914 23:08:51.379" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220914 23:08:51.355" endtime="20220914 23:08:51.380"/>
</kw>
<msg timestamp="20220914 23:08:51.380" level="INFO">${result} = {"allowed":-1,"used":9849,"status":"OK"}</msg>
<status status="PASS" starttime="20220914 23:08:51.355" endtime="20220914 23:08:51.380"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220914 23:08:51.381" endtime="20220914 23:08:51.381"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220914 23:08:51.381" endtime="20220914 23:08:51.382"/>
</kw>
<status status="PASS" starttime="20220914 23:08:51.354" endtime="20220914 23:08:51.382"/>
</kw>
<status status="PASS" starttime="20220914 23:08:51.354" endtime="20220914 23:08:51.382"/>
</kw>
<status status="PASS" starttime="20220914 23:08:51.353" endtime="20220914 23:08:51.382"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220914 23:08:51.352" endtime="20220914 23:08:51.383"/>
</test>
<test id="s1-s2-s2-t16" name="Check Recon Namespace File Size Distribution Root" line="145">
<kw name="Wait For Summary">
<arg>${FILE_SIZE_DIST_URL}?path=/</arg>
<arg>\"dist\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220914 23:08:51.391" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20220914 23:08:51.408" level="INFO">${rc} = 0</msg>
<msg timestamp="20220914 23:08:51.408" level="INFO">${output} = {"dist":[0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20220914 23:08:51.388" endtime="20220914 23:08:51.408"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220914 23:08:51.410" level="INFO">{"dist":[0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20220914 23:08:51.409" endtime="20220914 23:08:51.410"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220914 23:08:51.411" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220914 23:08:51.410" endtime="20220914 23:08:51.411"/>
</kw>
<status status="PASS" starttime="20220914 23:08:51.387" endtime="20220914 23:08:51.412"/>
</kw>
<msg timestamp="20220914 23:08:51.412" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220914 23:08:51.387" endtime="20220914 23:08:51.412"/>
</kw>
<msg timestamp="20220914 23:08:51.413" level="INFO">${result} = {"dist":[0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20220914 23:08:51.386" endtime="20220914 23:08:51.413"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220914 23:08:51.413" endtime="20220914 23:08:51.413"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220914 23:08:51.414" endtime="20220914 23:08:51.414"/>
</kw>
<status status="PASS" starttime="20220914 23:08:51.386" endtime="20220914 23:08:51.414"/>
</kw>
<status status="PASS" starttime="20220914 23:08:51.385" endtime="20220914 23:08:51.415"/>
</kw>
<status status="PASS" starttime="20220914 23:08:51.384" endtime="20220914 23:08:51.415"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220914 23:08:51.384" endtime="20220914 23:08:51.415"/>
</test>
<doc>Smoke test for Recon Namespace Summary Endpoint for FSO buckets.</doc>
<status status="PASS" starttime="20220914 23:07:45.157" endtime="20220914 23:08:51.416"/>
</suite>
<status status="PASS" starttime="20220914 23:07:11.913" endtime="20220914 23:08:51.419"/>
</suite>
<suite id="s1-s3" name="Loaddata" source="/opt/hadoop/smoketest/topology/loaddata.robot">
<test id="s1-s3-t1" name="Create a volume, bucket and key" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create topvol1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220914 23:08:58.109" level="INFO">Running command 'ozone sh volume create topvol1 2&gt;&amp;1'.</msg>
<msg timestamp="20220914 23:09:02.599" level="INFO">${rc} = 0</msg>
<msg timestamp="20220914 23:09:02.599" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20220914 23:08:58.105" endtime="20220914 23:09:02.599"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220914 23:09:02.600" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20220914 23:09:02.599" endtime="20220914 23:09:02.600"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220914 23:09:02.601" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220914 23:09:02.600" endtime="20220914 23:09:02.601"/>
</kw>
<status status="PASS" starttime="20220914 23:08:58.104" endtime="20220914 23:09:02.601"/>
</kw>
<msg timestamp="20220914 23:09:02.601" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220914 23:08:58.104" endtime="20220914 23:09:02.603"/>
</kw>
<msg timestamp="20220914 23:09:02.604" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20220914 23:08:58.103" endtime="20220914 23:09:02.604"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220914 23:09:02.604" endtime="20220914 23:09:02.605"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /topvol1/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220914 23:09:02.609" level="INFO">Running command 'ozone sh bucket create /topvol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20220914 23:09:07.122" level="INFO">${rc} = 0</msg>
<msg timestamp="20220914 23:09:07.122" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20220914 23:09:02.607" endtime="20220914 23:09:07.123"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220914 23:09:07.124" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20220914 23:09:07.123" endtime="20220914 23:09:07.124"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220914 23:09:07.125" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220914 23:09:07.124" endtime="20220914 23:09:07.125"/>
</kw>
<status status="PASS" starttime="20220914 23:09:02.606" endtime="20220914 23:09:07.125"/>
</kw>
<msg timestamp="20220914 23:09:07.125" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220914 23:09:02.606" endtime="20220914 23:09:07.126"/>
</kw>
<msg timestamp="20220914 23:09:07.126" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20220914 23:09:02.605" endtime="20220914 23:09:07.126"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220914 23:09:07.126" endtime="20220914 23:09:07.127"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220914 23:09:07.132" level="INFO">Running command 'ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220914 23:09:14.258" level="INFO">${rc} = 0</msg>
<msg timestamp="20220914 23:09:14.258" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20220914 23:09:07.129" endtime="20220914 23:09:14.258"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220914 23:09:14.259" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20220914 23:09:14.258" endtime="20220914 23:09:14.259"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220914 23:09:14.260" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220914 23:09:14.259" endtime="20220914 23:09:14.260"/>
</kw>
<status status="PASS" starttime="20220914 23:09:07.128" endtime="20220914 23:09:14.260"/>
</kw>
<msg timestamp="20220914 23:09:14.260" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220914 23:09:07.128" endtime="20220914 23:09:14.261"/>
</kw>
<msg timestamp="20220914 23:09:14.261" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20220914 23:09:07.127" endtime="20220914 23:09:14.261"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220914 23:09:14.261" endtime="20220914 23:09:14.262"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220914 23:08:58.102" endtime="20220914 23:09:14.262"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20220914 23:08:58.034" endtime="20220914 23:09:14.264"/>
</suite>
<suite id="s1-s4" name="readdata-first-half" source="/opt/hadoop/smoketest/topology/readdata.robot">
<test id="s1-s4-t1" name="Read data from previously created key" line="27">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220914 23:09:32.220" level="INFO">${random} = 95707</msg>
<status status="PASS" starttime="20220914 23:09:32.219" endtime="20220914 23:09:32.220"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220914 23:09:32.226" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-95707 2&gt;&amp;1'.</msg>
<msg timestamp="20220914 23:09:39.140" level="INFO">${rc} = 0</msg>
<msg timestamp="20220914 23:09:39.140" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20220914 23:09:32.222" endtime="20220914 23:09:39.140"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220914 23:09:39.141" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20220914 23:09:39.141" endtime="20220914 23:09:39.142"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220914 23:09:39.142" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220914 23:09:39.142" endtime="20220914 23:09:39.142"/>
</kw>
<status status="PASS" starttime="20220914 23:09:32.221" endtime="20220914 23:09:39.143"/>
</kw>
<msg timestamp="20220914 23:09:39.143" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220914 23:09:32.221" endtime="20220914 23:09:39.144"/>
</kw>
<msg timestamp="20220914 23:09:39.145" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20220914 23:09:32.220" endtime="20220914 23:09:39.145"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220914 23:09:39.145" endtime="20220914 23:09:39.145"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220914 23:09:32.218" endtime="20220914 23:09:39.146"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20220914 23:09:32.155" endtime="20220914 23:09:39.147"/>
</suite>
<suite id="s1-s5" name="readdata-second-half" source="/opt/hadoop/smoketest/topology/readdata.robot">
<test id="s1-s5-t1" name="Read data from previously created key" line="27">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220914 23:10:39.819" level="INFO">${random} = 06885</msg>
<status status="PASS" starttime="20220914 23:10:39.819" endtime="20220914 23:10:39.819"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220914 23:10:39.825" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-06885 2&gt;&amp;1'.</msg>
<msg timestamp="20220914 23:11:07.890" level="INFO">${rc} = 0</msg>
<msg timestamp="20220914 23:11:07.890" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20220914 23:10:39.821" endtime="20220914 23:11:07.890"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220914 23:11:07.891" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20220914 23:11:07.891" endtime="20220914 23:11:07.892"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220914 23:11:07.892" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220914 23:11:07.892" endtime="20220914 23:11:07.892"/>
</kw>
<status status="PASS" starttime="20220914 23:10:39.821" endtime="20220914 23:11:07.893"/>
</kw>
<msg timestamp="20220914 23:11:07.893" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220914 23:10:39.820" endtime="20220914 23:11:07.895"/>
</kw>
<msg timestamp="20220914 23:11:07.895" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20220914 23:10:39.819" endtime="20220914 23:11:07.895"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220914 23:11:07.895" endtime="20220914 23:11:07.896"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220914 23:10:39.817" endtime="20220914 23:11:07.896"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20220914 23:10:39.754" endtime="20220914 23:11:07.897"/>
</suite>
<suite id="s1-s6" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s6-t1" name="Check webui static resources" line="29">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220914 23:06:14.598" endtime="20220914 23:06:14.599"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -s -I http://${SCM}:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220914 23:06:14.606" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20220914 23:06:14.831" level="INFO">${rc} = 0</msg>
<msg timestamp="20220914 23:06:14.831" level="INFO">${output} = HTTP/1.1 200 OK
Date: Wed, 14 Sep 2022 23:06:14 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Wed, 14 Sep 2022 22:45:14 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20220914 23:06:14.601" endtime="20220914 23:06:14.831"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220914 23:06:14.833" level="INFO">HTTP/1.1 200 OK
Date: Wed, 14 Sep 2022 23:06:14 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Wed, 14 Sep 2022 22:45:14 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20220914 23:06:14.832" endtime="20220914 23:06:14.833"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220914 23:06:14.836" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220914 23:06:14.834" endtime="20220914 23:06:14.836"/>
</kw>
<status status="PASS" starttime="20220914 23:06:14.600" endtime="20220914 23:06:14.837"/>
</kw>
<msg timestamp="20220914 23:06:14.837" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220914 23:06:14.600" endtime="20220914 23:06:14.838"/>
</kw>
<msg timestamp="20220914 23:06:14.839" level="INFO">${result} = HTTP/1.1 200 OK
Date: Wed, 14 Sep 2022 23:06:14 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Wed, 14 Sep 2022 22:45:14 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20220914 23:06:14.599" endtime="20220914 23:06:14.839"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220914 23:06:14.839" endtime="20220914 23:06:14.840"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220914 23:06:14.596" endtime="20220914 23:06:14.840"/>
</test>
<test id="s1-s6-t2" name="Basic Freon smoketest" line="34">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220914 23:06:14.856" endtime="20220914 23:06:14.857"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>10</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220914 23:06:14.858" level="INFO">${random} = QDy9abC865</msg>
<status status="PASS" starttime="20220914 23:06:14.858" endtime="20220914 23:06:14.858"/>
</kw>
<kw name="Freon OCKG" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220914 23:06:14.873" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p QDy9abC865  2&gt;&amp;1'.</msg>
<msg timestamp="20220914 23:06:31.911" level="INFO">${rc} = 0</msg>
<msg timestamp="20220914 23:06:31.911" level="INFO">${output} = 2022-09-14 23:06:19,362 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-09-14 23:06:19,569 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220914 23:06:14.870" endtime="20220914 23:06:31.911"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220914 23:06:31.912" level="INFO">2022-09-14 23:06:19,362 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-09-14 23:06:19,569 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-09-14 23:06:19,569 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-09-14 23:06:19,790 [main] INFO freon.BaseFreonGenerator: Executing test with prefix QDy9abC865 and number-of-tests 1
2022-09-14 23:06:19,891 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-09-14 23:06:20,893 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-09-14 23:06:21,897 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-09-14 23:06:22,897 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-09-14 23:06:23,898 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-09-14 23:06:24,903 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-09-14 23:06:24,913 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2022-09-14 23:06:25,225 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false 
2022-09-14 23:06:25,904 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-09-14 23:06:26,904 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-09-14 23:06:27,546 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-09-14 23:06:27,863 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-09-14 23:06:27,904 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-09-14 23:06:28,905 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-09-14 23:06:29,906 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-09-14 23:06:30,906 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-09-14 23:06:31,501 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=5487.644965, max=5487.644965, mean=5487.644965, stddev=0.0, median=5487.644965, p75=5487.644965, p95=5487.644965, p98=5487.644965, p99=5487.644965, p999=5487.644965, mean_rate=0.16330211505906095, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-09-14 23:06:31,502 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 12
2022-09-14 23:06:31,502 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-09-14 23:06:31,502 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20220914 23:06:31.911" endtime="20220914 23:06:31.913"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220914 23:06:31.913" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220914 23:06:31.913" endtime="20220914 23:06:31.913"/>
</kw>
<status status="PASS" starttime="20220914 23:06:14.861" endtime="20220914 23:06:31.914"/>
</kw>
<msg timestamp="20220914 23:06:31.914" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220914 23:06:14.861" endtime="20220914 23:06:31.914"/>
</kw>
<msg timestamp="20220914 23:06:31.915" level="INFO">${result} = 2022-09-14 23:06:19,362 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-09-14 23:06:19,569 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220914 23:06:14.860" endtime="20220914 23:06:31.915"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220914 23:06:31.915" endtime="20220914 23:06:31.916"/>
</kw>
<status status="PASS" starttime="20220914 23:06:14.858" endtime="20220914 23:06:31.916"/>
</kw>
<kw name="Freon OCKV" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220914 23:06:31.922" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p QDy9abC865  2&gt;&amp;1'.</msg>
<msg timestamp="20220914 23:06:40.882" level="INFO">${rc} = 0</msg>
<msg timestamp="20220914 23:06:40.882" level="INFO">${output} = 2022-09-14 23:06:34,744 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-09-14 23:06:34,985 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220914 23:06:31.919" endtime="20220914 23:06:40.882"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220914 23:06:40.888" level="INFO">2022-09-14 23:06:34,744 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-09-14 23:06:34,985 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-09-14 23:06:34,985 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-09-14 23:06:35,276 [main] INFO freon.BaseFreonGenerator: Executing test with prefix QDy9abC865 and number-of-tests 1
2022-09-14 23:06:35,366 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-09-14 23:06:36,379 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-09-14 23:06:37,379 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-09-14 23:06:38,369 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-09-14 23:06:38,380 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-09-14 23:06:39,380 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-09-14 23:06:40,381 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-09-14 23:06:40,513 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=73.616145, max=73.616145, mean=73.616145, stddev=0.0, median=73.616145, p75=73.616145, p95=73.616145, p98=73.616145, p99=73.616145, p999=73.616145, mean_rate=0.9204540566725219, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-09-14 23:06:40,514 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 5
2022-09-14 23:06:40,515 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-09-14 23:06:40,515 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20220914 23:06:40.883" endtime="20220914 23:06:40.889"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220914 23:06:40.890" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220914 23:06:40.889" endtime="20220914 23:06:40.890"/>
</kw>
<status status="PASS" starttime="20220914 23:06:31.919" endtime="20220914 23:06:40.890"/>
</kw>
<msg timestamp="20220914 23:06:40.890" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220914 23:06:31.918" endtime="20220914 23:06:40.891"/>
</kw>
<msg timestamp="20220914 23:06:40.892" level="INFO">${result} = 2022-09-14 23:06:34,744 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-09-14 23:06:34,985 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220914 23:06:31.918" endtime="20220914 23:06:40.892"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220914 23:06:40.892" endtime="20220914 23:06:40.893"/>
</kw>
<status status="PASS" starttime="20220914 23:06:31.916" endtime="20220914 23:06:40.893"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220914 23:06:14.855" endtime="20220914 23:06:40.893"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20220914 23:06:14.508" endtime="20220914 23:06:40.896"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="194528"/>
</suite>
<statistics>
<total>
<stat pass="32" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="32" fail="0" skip="0" id="s1" name="ozone-topology">ozone-topology</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1" name="Cli">ozone-topology.Cli</stat>
<stat pass="23" fail="0" skip="0" id="s1-s2" name="Recon">ozone-topology.Recon</stat>
<stat pass="7" fail="0" skip="0" id="s1-s2-s1" name="Recon-Api">ozone-topology.Recon.Recon-Api</stat>
<stat pass="16" fail="0" skip="0" id="s1-s2-s2" name="Recon-Fso-Nssummary">ozone-topology.Recon.Recon-Fso-Nssummary</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3" name="Loaddata">ozone-topology.Loaddata</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="readdata-first-half">ozone-topology.readdata-first-half</stat>
<stat pass="1" fail="0" skip="0" id="s1-s5" name="readdata-second-half">ozone-topology.readdata-second-half</stat>
<stat pass="2" fail="0" skip="0" id="s1-s6" name="Basic">ozone-topology.Basic</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
