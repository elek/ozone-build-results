<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.0.1 (Python 3.8.10 on linux)" generated="20221128 19:11:06.703" rpa="false" schemaversion="3">
<suite id="s1" name="ozonescripts">
<suite id="s1-s1" name="Pipeline" source="/opt/hadoop/smoketest/admincli/pipeline.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221128 19:09:11.185" endtime="20221128 19:09:11.186"/>
</kw>
<test id="s1-s1-t1" name="Create pipeline" line="28">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin pipeline create</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221128 19:09:11.193" level="INFO">Running command 'ozone admin pipeline create 2&gt;&amp;1'.</msg>
<msg timestamp="20221128 19:09:13.977" level="INFO">${rc} = 0</msg>
<msg timestamp="20221128 19:09:13.977" level="INFO">${output} = PipelineID=5737effe-3e32-4bd5-9874-f7c0030e8a82 is created. Pipeline[ Id: 5737effe-3e32-4bd5-9874-f7c0030e8a82, Nodes: 1e8bbb67-30b5-4f05-ba54-8ad9b40d66fa{ip: 172.20.0.3, host: ozonescripts_datanode_...</msg>
<status status="PASS" starttime="20221128 19:09:11.189" endtime="20221128 19:09:13.977"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221128 19:09:13.978" level="INFO">PipelineID=5737effe-3e32-4bd5-9874-f7c0030e8a82 is created. Pipeline[ Id: 5737effe-3e32-4bd5-9874-f7c0030e8a82, Nodes: 1e8bbb67-30b5-4f05-ba54-8ad9b40d66fa{ip: 172.20.0.3, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, ReplicationConfig: STANDALONE/ONE, State:OPEN, leaderId:, CreationTimestamp2022-11-28T19:09:13.834Z[UTC]]</msg>
<status status="PASS" starttime="20221128 19:09:13.977" endtime="20221128 19:09:13.978"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221128 19:09:13.979" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221128 19:09:13.978" endtime="20221128 19:09:13.979"/>
</kw>
<status status="PASS" starttime="20221128 19:09:11.188" endtime="20221128 19:09:13.979"/>
</kw>
<msg timestamp="20221128 19:09:13.980" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221128 19:09:11.188" endtime="20221128 19:09:13.981"/>
</kw>
<msg timestamp="20221128 19:09:13.981" level="INFO">${output} = PipelineID=5737effe-3e32-4bd5-9874-f7c0030e8a82 is created. Pipeline[ Id: 5737effe-3e32-4bd5-9874-f7c0030e8a82, Nodes: 1e8bbb67-30b5-4f05-ba54-8ad9b40d66fa{ip: 172.20.0.3, host: ozonescripts_datanode_...</msg>
<status status="PASS" starttime="20221128 19:09:11.187" endtime="20221128 19:09:13.981"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>is created.</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221128 19:09:13.981" endtime="20221128 19:09:13.982"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>STANDALONE/ONE</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221128 19:09:13.982" endtime="20221128 19:09:13.983"/>
</kw>
<kw name="Execute" library="os">
<var>${pipeline}</var>
<arg>echo "${output}" | grep 'is created' | cut -f1 -d' ' | cut -f2 -d'='</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221128 19:09:13.987" level="INFO">Running command 'echo "PipelineID=5737effe-3e32-4bd5-9874-f7c0030e8a82 is created. Pipeline[ Id: 5737effe-3e32-4bd5-9874-f7c0030e8a82, Nodes: 1e8bbb67-30b5-4f05-ba54-8ad9b40d66fa{ip: 172.20.0.3, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, ReplicationConfig: STANDALONE/ONE, State:OPEN, leaderId:, CreationTimestamp2022-11-28T19:09:13.834Z[UTC]]" | grep 'is created' | cut -f1 -d' ' | cut -f2 -d'=' 2&gt;&amp;1'.</msg>
<msg timestamp="20221128 19:09:13.992" level="INFO">${rc} = 0</msg>
<msg timestamp="20221128 19:09:13.992" level="INFO">${output} = 5737effe-3e32-4bd5-9874-f7c0030e8a82</msg>
<status status="PASS" starttime="20221128 19:09:13.985" endtime="20221128 19:09:13.992"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221128 19:09:13.993" level="INFO">5737effe-3e32-4bd5-9874-f7c0030e8a82</msg>
<status status="PASS" starttime="20221128 19:09:13.992" endtime="20221128 19:09:13.993"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221128 19:09:13.994" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221128 19:09:13.993" endtime="20221128 19:09:13.995"/>
</kw>
<status status="PASS" starttime="20221128 19:09:13.984" endtime="20221128 19:09:13.995"/>
</kw>
<msg timestamp="20221128 19:09:13.995" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221128 19:09:13.984" endtime="20221128 19:09:13.996"/>
</kw>
<msg timestamp="20221128 19:09:13.996" level="INFO">${pipeline} = 5737effe-3e32-4bd5-9874-f7c0030e8a82</msg>
<status status="PASS" starttime="20221128 19:09:13.983" endtime="20221128 19:09:13.996"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PIPELINE}</arg>
<arg>${pipeline}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20221128 19:09:13.997" level="INFO">${PIPELINE} = 5737effe-3e32-4bd5-9874-f7c0030e8a82</msg>
<status status="PASS" starttime="20221128 19:09:13.996" endtime="20221128 19:09:13.997"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221128 19:09:11.186" endtime="20221128 19:09:13.997"/>
</test>
<test id="s1-s1-t2" name="List pipelines" line="35">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin pipeline list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221128 19:09:14.003" level="INFO">Running command 'ozone admin pipeline list 2&gt;&amp;1'.</msg>
<msg timestamp="20221128 19:09:17.150" level="INFO">${rc} = 0</msg>
<msg timestamp="20221128 19:09:17.150" level="INFO">${output} = Pipeline[ Id: bd6232a0-2f24-4978-b9f5-615616bbca93, Nodes: 1e8bbb67-30b5-4f05-ba54-8ad9b40d66fa{ip: 172.20.0.3, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858...</msg>
<status status="PASS" starttime="20221128 19:09:14.001" endtime="20221128 19:09:17.150"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221128 19:09:17.152" level="INFO">Pipeline[ Id: bd6232a0-2f24-4978-b9f5-615616bbca93, Nodes: 1e8bbb67-30b5-4f05-ba54-8ad9b40d66fa{ip: 172.20.0.3, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, ReplicationConfig: RATIS/ONE, State:OPEN, leaderId:1e8bbb67-30b5-4f05-ba54-8ad9b40d66fa, CreationTimestamp2022-11-28T19:08:30.293Z[UTC]]
Pipeline[ Id: 5737effe-3e32-4bd5-9874-f7c0030e8a82, Nodes: 1e8bbb67-30b5-4f05-ba54-8ad9b40d66fa{ip: 172.20.0.3, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, ReplicationConfig: STANDALONE/ONE, State:OPEN, leaderId:, CreationTimestamp2022-11-28T19:09:13.834Z[UTC]]</msg>
<status status="PASS" starttime="20221128 19:09:17.151" endtime="20221128 19:09:17.152"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221128 19:09:17.153" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221128 19:09:17.152" endtime="20221128 19:09:17.153"/>
</kw>
<status status="PASS" starttime="20221128 19:09:14.000" endtime="20221128 19:09:17.153"/>
</kw>
<msg timestamp="20221128 19:09:17.153" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221128 19:09:14.000" endtime="20221128 19:09:17.154"/>
</kw>
<msg timestamp="20221128 19:09:17.154" level="INFO">${output} = Pipeline[ Id: bd6232a0-2f24-4978-b9f5-615616bbca93, Nodes: 1e8bbb67-30b5-4f05-ba54-8ad9b40d66fa{ip: 172.20.0.3, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858...</msg>
<status status="PASS" starttime="20221128 19:09:13.999" endtime="20221128 19:09:17.154"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>STANDALONE/ONE</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221128 19:09:17.155" endtime="20221128 19:09:17.155"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221128 19:09:13.998" endtime="20221128 19:09:17.155"/>
</test>
<test id="s1-s1-t3" name="List pipelines with explicit host" line="39">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin pipeline list --scm ${SCM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221128 19:09:17.167" level="INFO">Running command 'ozone admin pipeline list --scm scm 2&gt;&amp;1'.</msg>
<msg timestamp="20221128 19:09:19.987" level="INFO">${rc} = 0</msg>
<msg timestamp="20221128 19:09:19.987" level="INFO">${output} = Pipeline[ Id: bd6232a0-2f24-4978-b9f5-615616bbca93, Nodes: 1e8bbb67-30b5-4f05-ba54-8ad9b40d66fa{ip: 172.20.0.3, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858...</msg>
<status status="PASS" starttime="20221128 19:09:17.159" endtime="20221128 19:09:19.987"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221128 19:09:19.990" level="INFO">Pipeline[ Id: bd6232a0-2f24-4978-b9f5-615616bbca93, Nodes: 1e8bbb67-30b5-4f05-ba54-8ad9b40d66fa{ip: 172.20.0.3, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, ReplicationConfig: RATIS/ONE, State:OPEN, leaderId:1e8bbb67-30b5-4f05-ba54-8ad9b40d66fa, CreationTimestamp2022-11-28T19:08:30.293Z[UTC]]
Pipeline[ Id: 5737effe-3e32-4bd5-9874-f7c0030e8a82, Nodes: 1e8bbb67-30b5-4f05-ba54-8ad9b40d66fa{ip: 172.20.0.3, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, ReplicationConfig: STANDALONE/ONE, State:OPEN, leaderId:, CreationTimestamp2022-11-28T19:09:13.834Z[UTC]]</msg>
<status status="PASS" starttime="20221128 19:09:19.988" endtime="20221128 19:09:19.990"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221128 19:09:19.991" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221128 19:09:19.990" endtime="20221128 19:09:19.991"/>
</kw>
<status status="PASS" starttime="20221128 19:09:17.158" endtime="20221128 19:09:19.991"/>
</kw>
<msg timestamp="20221128 19:09:19.991" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221128 19:09:17.158" endtime="20221128 19:09:19.992"/>
</kw>
<msg timestamp="20221128 19:09:19.992" level="INFO">${output} = Pipeline[ Id: bd6232a0-2f24-4978-b9f5-615616bbca93, Nodes: 1e8bbb67-30b5-4f05-ba54-8ad9b40d66fa{ip: 172.20.0.3, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858...</msg>
<status status="PASS" starttime="20221128 19:09:17.157" endtime="20221128 19:09:19.992"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>STANDALONE/ONE</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221128 19:09:19.992" endtime="20221128 19:09:19.993"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221128 19:09:17.156" endtime="20221128 19:09:19.993"/>
</test>
<test id="s1-s1-t4" name="Deactivate pipeline" line="43">
<kw name="Execute" library="os">
<arg>ozone admin pipeline deactivate "${PIPELINE}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221128 19:09:20.000" level="INFO">Running command 'ozone admin pipeline deactivate "5737effe-3e32-4bd5-9874-f7c0030e8a82" 2&gt;&amp;1'.</msg>
<msg timestamp="20221128 19:09:23.215" level="INFO">${rc} = 0</msg>
<msg timestamp="20221128 19:09:23.215" level="INFO">${output} = </msg>
<status status="PASS" starttime="20221128 19:09:19.996" endtime="20221128 19:09:23.215"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221128 19:09:23.217" level="INFO"/>
<status status="PASS" starttime="20221128 19:09:23.216" endtime="20221128 19:09:23.217"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221128 19:09:23.217" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221128 19:09:23.217" endtime="20221128 19:09:23.218"/>
</kw>
<status status="PASS" starttime="20221128 19:09:19.996" endtime="20221128 19:09:23.218"/>
</kw>
<msg timestamp="20221128 19:09:23.218" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221128 19:09:19.995" endtime="20221128 19:09:23.219"/>
</kw>
<status status="PASS" starttime="20221128 19:09:19.995" endtime="20221128 19:09:23.219"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin pipeline list | grep "${PIPELINE}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221128 19:09:23.223" level="INFO">Running command 'ozone admin pipeline list | grep "5737effe-3e32-4bd5-9874-f7c0030e8a82" 2&gt;&amp;1'.</msg>
<msg timestamp="20221128 19:09:26.472" level="INFO">${rc} = 0</msg>
<msg timestamp="20221128 19:09:26.473" level="INFO">${output} = Pipeline[ Id: 5737effe-3e32-4bd5-9874-f7c0030e8a82, Nodes: 1e8bbb67-30b5-4f05-ba54-8ad9b40d66fa{ip: 172.20.0.3, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858...</msg>
<status status="PASS" starttime="20221128 19:09:23.221" endtime="20221128 19:09:26.473"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221128 19:09:26.475" level="INFO">Pipeline[ Id: 5737effe-3e32-4bd5-9874-f7c0030e8a82, Nodes: 1e8bbb67-30b5-4f05-ba54-8ad9b40d66fa{ip: 172.20.0.3, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, ReplicationConfig: STANDALONE/ONE, State:DORMANT, leaderId:, CreationTimestamp2022-11-28T19:09:13.834Z[UTC]]</msg>
<status status="PASS" starttime="20221128 19:09:26.473" endtime="20221128 19:09:26.475"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221128 19:09:26.475" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221128 19:09:26.475" endtime="20221128 19:09:26.475"/>
</kw>
<status status="PASS" starttime="20221128 19:09:23.220" endtime="20221128 19:09:26.476"/>
</kw>
<msg timestamp="20221128 19:09:26.476" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221128 19:09:23.220" endtime="20221128 19:09:26.476"/>
</kw>
<msg timestamp="20221128 19:09:26.477" level="INFO">${output} = Pipeline[ Id: 5737effe-3e32-4bd5-9874-f7c0030e8a82, Nodes: 1e8bbb67-30b5-4f05-ba54-8ad9b40d66fa{ip: 172.20.0.3, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858...</msg>
<status status="PASS" starttime="20221128 19:09:23.219" endtime="20221128 19:09:26.477"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>DORMANT</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221128 19:09:26.477" endtime="20221128 19:09:26.478"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221128 19:09:19.994" endtime="20221128 19:09:26.478"/>
</test>
<test id="s1-s1-t5" name="Activate pipeline" line="48">
<kw name="Execute" library="os">
<arg>ozone admin pipeline activate "${PIPELINE}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221128 19:09:26.484" level="INFO">Running command 'ozone admin pipeline activate "5737effe-3e32-4bd5-9874-f7c0030e8a82" 2&gt;&amp;1'.</msg>
<msg timestamp="20221128 19:09:29.651" level="INFO">${rc} = 0</msg>
<msg timestamp="20221128 19:09:29.652" level="INFO">${output} = </msg>
<status status="PASS" starttime="20221128 19:09:26.481" endtime="20221128 19:09:29.652"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221128 19:09:29.654" level="INFO"/>
<status status="PASS" starttime="20221128 19:09:29.652" endtime="20221128 19:09:29.654"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221128 19:09:29.655" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221128 19:09:29.654" endtime="20221128 19:09:29.655"/>
</kw>
<status status="PASS" starttime="20221128 19:09:26.480" endtime="20221128 19:09:29.655"/>
</kw>
<msg timestamp="20221128 19:09:29.656" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221128 19:09:26.480" endtime="20221128 19:09:29.656"/>
</kw>
<status status="PASS" starttime="20221128 19:09:26.479" endtime="20221128 19:09:29.656"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin pipeline list | grep "${PIPELINE}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221128 19:09:29.663" level="INFO">Running command 'ozone admin pipeline list | grep "5737effe-3e32-4bd5-9874-f7c0030e8a82" 2&gt;&amp;1'.</msg>
<msg timestamp="20221128 19:09:32.676" level="INFO">${rc} = 0</msg>
<msg timestamp="20221128 19:09:32.676" level="INFO">${output} = Pipeline[ Id: 5737effe-3e32-4bd5-9874-f7c0030e8a82, Nodes: 1e8bbb67-30b5-4f05-ba54-8ad9b40d66fa{ip: 172.20.0.3, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858...</msg>
<status status="PASS" starttime="20221128 19:09:29.661" endtime="20221128 19:09:32.677"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221128 19:09:32.678" level="INFO">Pipeline[ Id: 5737effe-3e32-4bd5-9874-f7c0030e8a82, Nodes: 1e8bbb67-30b5-4f05-ba54-8ad9b40d66fa{ip: 172.20.0.3, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, ReplicationConfig: STANDALONE/ONE, State:OPEN, leaderId:, CreationTimestamp2022-11-28T19:09:13.834Z[UTC]]</msg>
<status status="PASS" starttime="20221128 19:09:32.677" endtime="20221128 19:09:32.678"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221128 19:09:32.679" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221128 19:09:32.678" endtime="20221128 19:09:32.679"/>
</kw>
<status status="PASS" starttime="20221128 19:09:29.660" endtime="20221128 19:09:32.679"/>
</kw>
<msg timestamp="20221128 19:09:32.679" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221128 19:09:29.660" endtime="20221128 19:09:32.680"/>
</kw>
<msg timestamp="20221128 19:09:32.681" level="INFO">${output} = Pipeline[ Id: 5737effe-3e32-4bd5-9874-f7c0030e8a82, Nodes: 1e8bbb67-30b5-4f05-ba54-8ad9b40d66fa{ip: 172.20.0.3, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858...</msg>
<status status="PASS" starttime="20221128 19:09:29.657" endtime="20221128 19:09:32.681"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>OPEN</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221128 19:09:32.681" endtime="20221128 19:09:32.681"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221128 19:09:26.479" endtime="20221128 19:09:32.682"/>
</test>
<test id="s1-s1-t6" name="Close pipeline" line="53">
<kw name="Execute" library="os">
<arg>ozone admin pipeline close "${PIPELINE}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221128 19:09:32.689" level="INFO">Running command 'ozone admin pipeline close "5737effe-3e32-4bd5-9874-f7c0030e8a82" 2&gt;&amp;1'.</msg>
<msg timestamp="20221128 19:09:35.730" level="INFO">${rc} = 0</msg>
<msg timestamp="20221128 19:09:35.730" level="INFO">${output} = </msg>
<status status="PASS" starttime="20221128 19:09:32.686" endtime="20221128 19:09:35.730"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221128 19:09:35.731" level="INFO"/>
<status status="PASS" starttime="20221128 19:09:35.730" endtime="20221128 19:09:35.731"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221128 19:09:35.732" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221128 19:09:35.732" endtime="20221128 19:09:35.732"/>
</kw>
<status status="PASS" starttime="20221128 19:09:32.686" endtime="20221128 19:09:35.733"/>
</kw>
<msg timestamp="20221128 19:09:35.733" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221128 19:09:32.685" endtime="20221128 19:09:35.733"/>
</kw>
<status status="PASS" starttime="20221128 19:09:32.684" endtime="20221128 19:09:35.734"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin pipeline list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221128 19:09:35.742" level="INFO">Running command 'ozone admin pipeline list 2&gt;&amp;1'.</msg>
<msg timestamp="20221128 19:09:38.621" level="INFO">${rc} = 0</msg>
<msg timestamp="20221128 19:09:38.622" level="INFO">${output} = Pipeline[ Id: bd6232a0-2f24-4978-b9f5-615616bbca93, Nodes: 1e8bbb67-30b5-4f05-ba54-8ad9b40d66fa{ip: 172.20.0.3, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858...</msg>
<status status="PASS" starttime="20221128 19:09:35.736" endtime="20221128 19:09:38.622"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221128 19:09:38.623" level="INFO">Pipeline[ Id: bd6232a0-2f24-4978-b9f5-615616bbca93, Nodes: 1e8bbb67-30b5-4f05-ba54-8ad9b40d66fa{ip: 172.20.0.3, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, ReplicationConfig: RATIS/ONE, State:OPEN, leaderId:1e8bbb67-30b5-4f05-ba54-8ad9b40d66fa, CreationTimestamp2022-11-28T19:08:30.293Z[UTC]]
Pipeline[ Id: 5737effe-3e32-4bd5-9874-f7c0030e8a82, Nodes: 1e8bbb67-30b5-4f05-ba54-8ad9b40d66fa{ip: 172.20.0.3, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, ReplicationConfig: STANDALONE/ONE, State:CLOSED, leaderId:, CreationTimestamp2022-11-28T19:09:13.834Z[UTC]]</msg>
<status status="PASS" starttime="20221128 19:09:38.622" endtime="20221128 19:09:38.623"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221128 19:09:38.624" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221128 19:09:38.623" endtime="20221128 19:09:38.624"/>
</kw>
<status status="PASS" starttime="20221128 19:09:35.735" endtime="20221128 19:09:38.624"/>
</kw>
<msg timestamp="20221128 19:09:38.624" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221128 19:09:35.734" endtime="20221128 19:09:38.625"/>
</kw>
<msg timestamp="20221128 19:09:38.625" level="INFO">${output} = Pipeline[ Id: bd6232a0-2f24-4978-b9f5-615616bbca93, Nodes: 1e8bbb67-30b5-4f05-ba54-8ad9b40d66fa{ip: 172.20.0.3, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858...</msg>
<status status="PASS" starttime="20221128 19:09:35.734" endtime="20221128 19:09:38.625"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${PIPELINE}' not in '''${output}'''</arg>
<arg>Pipeline already scrubbed</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20221128 19:09:38.625" endtime="20221128 19:09:38.626"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${output}</arg>
<arg>${PIPELINE}.*CLOSED</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20221128 19:09:38.626" endtime="20221128 19:09:38.627"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221128 19:09:32.683" endtime="20221128 19:09:38.627"/>
</test>
<test id="s1-s1-t7" name="Incomplete command" line="59">
<kw name="Execute And Ignore Error" library="os">
<var>${output}</var>
<arg>ozone admin pipeline</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221128 19:09:38.633" level="INFO">Running command 'ozone admin pipeline 2&gt;&amp;1'.</msg>
<msg timestamp="20221128 19:09:41.430" level="INFO">${rc} = 255</msg>
<msg timestamp="20221128 19:09:41.430" level="INFO">${output} = Incomplete command
Usage: ozone admin pipeline [-hV] [COMMAND]
Pipeline specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
Com...</msg>
<status status="PASS" starttime="20221128 19:09:38.630" endtime="20221128 19:09:41.430"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221128 19:09:41.431" level="INFO">Incomplete command
Usage: ozone admin pipeline [-hV] [COMMAND]
Pipeline specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
Commands:
  list        List all active pipelines
  activate    Activates the given Pipeline
  deactivate  Deactivates the given Pipeline
  create      create pipeline
  close       Close pipeline</msg>
<status status="PASS" starttime="20221128 19:09:41.431" endtime="20221128 19:09:41.431"/>
</kw>
<msg timestamp="20221128 19:09:41.432" level="INFO">${output} = Incomplete command
Usage: ozone admin pipeline [-hV] [COMMAND]
Pipeline specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
Com...</msg>
<status status="PASS" starttime="20221128 19:09:38.630" endtime="20221128 19:09:41.432"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Incomplete command</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221128 19:09:41.432" endtime="20221128 19:09:41.433"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>close</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221128 19:09:41.433" endtime="20221128 19:09:41.433"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>create</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221128 19:09:41.433" endtime="20221128 19:09:41.434"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>deactivate</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221128 19:09:41.434" endtime="20221128 19:09:41.435"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>list</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221128 19:09:41.435" endtime="20221128 19:09:41.435"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221128 19:09:38.629" endtime="20221128 19:09:41.436"/>
</test>
<doc>Test ozone admin pipeline command</doc>
<status status="PASS" starttime="20221128 19:09:11.122" endtime="20221128 19:09:41.438"/>
</suite>
<suite id="s1-s2" name="Single Node" source="/opt/hadoop/smoketest/basic/single_node.robot">
<test id="s1-s2-t1" name="Basic Freon smoketest for one datanode" line="25">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221128 19:08:49.963" endtime="20221128 19:08:49.964"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>10</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20221128 19:08:49.965" level="INFO">${random} = XgKLTU2Hzw</msg>
<status status="PASS" starttime="20221128 19:08:49.964" endtime="20221128 19:08:49.965"/>
</kw>
<kw name="Freon OCKG" library="freon">
<arg>prefix=${random}</arg>
<arg>args=--replication ONE --replication-type RATIS</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221128 19:08:49.973" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p XgKLTU2Hzw --replication ONE --replication-type RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20221128 19:09:00.279" level="INFO">${rc} = 0</msg>
<msg timestamp="20221128 19:09:00.279" level="INFO">${output} = 2022-11-28 19:08:52,386 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-28 19:08:52,532 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221128 19:08:49.968" endtime="20221128 19:09:00.279"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221128 19:09:00.281" level="INFO">2022-11-28 19:08:52,386 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-28 19:08:52,532 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-11-28 19:08:52,532 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-11-28 19:08:52,755 [main] INFO freon.BaseFreonGenerator: Executing test with prefix XgKLTU2Hzw and number-of-tests 1
2022-11-28 19:08:52,863 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-28 19:08:53,869 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-28 19:08:54,870 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-28 19:08:55,871 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-28 19:08:56,382 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2022-11-28 19:08:56,518 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false 
2022-11-28 19:08:56,873 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-28 19:08:57,271 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-11-28 19:08:57,573 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-11-28 19:08:57,885 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-28 19:08:58,885 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-28 19:08:59,886 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-11-28 19:08:59,931 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=2489.585864, max=2489.585864, mean=2489.585864, stddev=0.0, median=2489.585864, p75=2489.585864, p95=2489.585864, p98=2489.585864, p99=2489.585864, p999=2489.585864, mean_rate=0.2970579457397824, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-11-28 19:08:59,931 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 7
2022-11-28 19:08:59,931 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-11-28 19:08:59,932 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20221128 19:09:00.280" endtime="20221128 19:09:00.281"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221128 19:09:00.281" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221128 19:09:00.281" endtime="20221128 19:09:00.282"/>
</kw>
<status status="PASS" starttime="20221128 19:08:49.967" endtime="20221128 19:09:00.282"/>
</kw>
<msg timestamp="20221128 19:09:00.282" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221128 19:08:49.967" endtime="20221128 19:09:00.284"/>
</kw>
<msg timestamp="20221128 19:09:00.284" level="INFO">${result} = 2022-11-28 19:08:52,386 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-28 19:08:52,532 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221128 19:08:49.966" endtime="20221128 19:09:00.284"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221128 19:09:00.284" endtime="20221128 19:09:00.285"/>
</kw>
<status status="PASS" starttime="20221128 19:08:49.965" endtime="20221128 19:09:00.285"/>
</kw>
<kw name="Freon OCKV" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221128 19:09:00.291" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p XgKLTU2Hzw  2&gt;&amp;1'.</msg>
<msg timestamp="20221128 19:09:07.006" level="INFO">${rc} = 0</msg>
<msg timestamp="20221128 19:09:07.007" level="INFO">${output} = 2022-11-28 19:09:01,991 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-28 19:09:02,207 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221128 19:09:00.289" endtime="20221128 19:09:07.007"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221128 19:09:07.008" level="INFO">2022-11-28 19:09:01,991 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-28 19:09:02,207 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-11-28 19:09:02,207 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-11-28 19:09:02,412 [main] INFO freon.BaseFreonGenerator: Executing test with prefix XgKLTU2Hzw and number-of-tests 1
2022-11-28 19:09:02,513 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-28 19:09:03,526 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-28 19:09:04,295 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-11-28 19:09:04,527 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-28 19:09:05,527 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-28 19:09:06,528 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-11-28 19:09:06,647 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=39.721491, max=39.721491, mean=39.721491, stddev=0.0, median=39.721491, p75=39.721491, p95=39.721491, p98=39.721491, p99=39.721491, p999=39.721491, mean_rate=0.9605250189795901, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-11-28 19:09:06,648 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 4
2022-11-28 19:09:06,648 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-11-28 19:09:06,648 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20221128 19:09:07.007" endtime="20221128 19:09:07.008"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221128 19:09:07.009" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221128 19:09:07.008" endtime="20221128 19:09:07.009"/>
</kw>
<status status="PASS" starttime="20221128 19:09:00.288" endtime="20221128 19:09:07.009"/>
</kw>
<msg timestamp="20221128 19:09:07.010" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221128 19:09:00.288" endtime="20221128 19:09:07.010"/>
</kw>
<msg timestamp="20221128 19:09:07.011" level="INFO">${result} = 2022-11-28 19:09:01,991 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-28 19:09:02,207 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221128 19:09:00.287" endtime="20221128 19:09:07.011"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221128 19:09:07.011" endtime="20221128 19:09:07.012"/>
</kw>
<status status="PASS" starttime="20221128 19:09:00.285" endtime="20221128 19:09:07.012"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221128 19:08:49.962" endtime="20221128 19:09:07.012"/>
</test>
<doc>Smoketest for one datanode</doc>
<status status="PASS" starttime="20221128 19:08:49.874" endtime="20221128 19:09:07.013"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="47455"/>
</suite>
<statistics>
<total>
<stat pass="8" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="8" fail="0" skip="0" id="s1" name="ozonescripts">ozonescripts</stat>
<stat pass="7" fail="0" skip="0" id="s1-s1" name="Pipeline">ozonescripts.Pipeline</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Single Node">ozonescripts.Single Node</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
