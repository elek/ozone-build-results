<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.0.1 (Python 3.8.10 on linux)" generated="20221128 19:04:46.872" rpa="false" schemaversion="3">
<suite id="s1" name="ozone-topology">
<suite id="s1-s1" name="Cli" source="/opt/hadoop/smoketest/topology/cli.robot">
<test id="s1-s1-t1" name="Run printTopology" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221128 18:59:44.524" level="INFO">Running command 'ozone admin printTopology 2&gt;&amp;1'.</msg>
<msg timestamp="20221128 18:59:49.394" level="INFO">${rc} = 0</msg>
<msg timestamp="20221128 18:59:49.395" level="INFO">${output} = State = HEALTHY
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.4(ozone-topolog...</msg>
<status status="PASS" starttime="20221128 18:59:44.520" endtime="20221128 18:59:49.395"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221128 18:59:49.396" level="INFO">State = HEALTHY
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1</msg>
<status status="PASS" starttime="20221128 18:59:49.395" endtime="20221128 18:59:49.396"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221128 18:59:49.397" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221128 18:59:49.396" endtime="20221128 18:59:49.397"/>
</kw>
<status status="PASS" starttime="20221128 18:59:44.519" endtime="20221128 18:59:49.397"/>
</kw>
<msg timestamp="20221128 18:59:49.397" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221128 18:59:44.518" endtime="20221128 18:59:49.399"/>
</kw>
<msg timestamp="20221128 18:59:49.399" level="INFO">${output} = State = HEALTHY
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.4(ozone-topolog...</msg>
<status status="PASS" starttime="20221128 18:59:44.518" endtime="20221128 18:59:49.399"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
<arg>IN_SERVICE</arg>
<arg>/rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221128 18:59:49.399" endtime="20221128 18:59:49.400"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221128 18:59:44.516" endtime="20221128 18:59:49.400"/>
</test>
<test id="s1-s1-t2" name="Run printTopology -o" line="30">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology -o</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221128 18:59:49.407" level="INFO">Running command 'ozone admin printTopology -o 2&gt;&amp;1'.</msg>
<msg timestamp="20221128 18:59:54.396" level="INFO">${rc} = 0</msg>
<msg timestamp="20221128 18:59:54.396" level="INFO">${output} = State = HEALTHY
Location: /rack1
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net) IN_SERVICE
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net) IN_SERVICE
 10.5.0.5(ozone-topology_data...</msg>
<status status="PASS" starttime="20221128 18:59:49.404" endtime="20221128 18:59:54.396"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221128 18:59:54.398" level="INFO">State = HEALTHY
Location: /rack1
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net) IN_SERVICE
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net) IN_SERVICE
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net) IN_SERVICE
Location: /rack2
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net) IN_SERVICE
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net) IN_SERVICE
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net) IN_SERVICE</msg>
<status status="PASS" starttime="20221128 18:59:54.397" endtime="20221128 18:59:54.398"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221128 18:59:54.399" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221128 18:59:54.398" endtime="20221128 18:59:54.399"/>
</kw>
<status status="PASS" starttime="20221128 18:59:49.404" endtime="20221128 18:59:54.399"/>
</kw>
<msg timestamp="20221128 18:59:54.399" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221128 18:59:49.403" endtime="20221128 18:59:54.400"/>
</kw>
<msg timestamp="20221128 18:59:54.400" level="INFO">${output} = State = HEALTHY
Location: /rack1
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net) IN_SERVICE
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net) IN_SERVICE
 10.5.0.5(ozone-topology_data...</msg>
<status status="PASS" starttime="20221128 18:59:49.402" endtime="20221128 18:59:54.400"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Location: /rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221128 18:59:54.400" endtime="20221128 18:59:54.401"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net) IN_SERVICE</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221128 18:59:54.401" endtime="20221128 18:59:54.403"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221128 18:59:49.402" endtime="20221128 18:59:54.403"/>
</test>
<test id="s1-s1-t3" name="Run printTopology --operational-state IN_SERVICE" line="34">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology --operational-state IN_SERVICE</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221128 18:59:54.410" level="INFO">Running command 'ozone admin printTopology --operational-state IN_SERVICE 2&gt;&amp;1'.</msg>
<msg timestamp="20221128 18:59:59.473" level="INFO">${rc} = 0</msg>
<msg timestamp="20221128 18:59:59.473" level="INFO">${output} = State = HEALTHY
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.4(ozone-topolog...</msg>
<status status="PASS" starttime="20221128 18:59:54.407" endtime="20221128 18:59:59.473"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221128 18:59:59.474" level="INFO">State = HEALTHY
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1</msg>
<status status="PASS" starttime="20221128 18:59:59.474" endtime="20221128 18:59:59.475"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221128 18:59:59.475" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221128 18:59:59.475" endtime="20221128 18:59:59.475"/>
</kw>
<status status="PASS" starttime="20221128 18:59:54.406" endtime="20221128 18:59:59.476"/>
</kw>
<msg timestamp="20221128 18:59:59.476" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221128 18:59:54.406" endtime="20221128 18:59:59.476"/>
</kw>
<msg timestamp="20221128 18:59:59.477" level="INFO">${output} = State = HEALTHY
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.4(ozone-topolog...</msg>
<status status="PASS" starttime="20221128 18:59:54.405" endtime="20221128 18:59:59.477"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
<arg>IN_SERVICE</arg>
<arg>/rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221128 18:59:59.477" endtime="20221128 18:59:59.478"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221128 18:59:54.404" endtime="20221128 18:59:59.478"/>
</test>
<test id="s1-s1-t4" name="Run printTopology --node-state HEALTHY" line="37">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology --node-state HEALTHY</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221128 18:59:59.485" level="INFO">Running command 'ozone admin printTopology --node-state HEALTHY 2&gt;&amp;1'.</msg>
<msg timestamp="20221128 19:00:04.529" level="INFO">${rc} = 0</msg>
<msg timestamp="20221128 19:00:04.529" level="INFO">${output} = State = HEALTHY
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.4(ozone-topolog...</msg>
<status status="PASS" starttime="20221128 18:59:59.482" endtime="20221128 19:00:04.530"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221128 19:00:04.531" level="INFO">State = HEALTHY
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1</msg>
<status status="PASS" starttime="20221128 19:00:04.530" endtime="20221128 19:00:04.531"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221128 19:00:04.532" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221128 19:00:04.531" endtime="20221128 19:00:04.532"/>
</kw>
<status status="PASS" starttime="20221128 18:59:59.481" endtime="20221128 19:00:04.532"/>
</kw>
<msg timestamp="20221128 19:00:04.532" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221128 18:59:59.481" endtime="20221128 19:00:04.533"/>
</kw>
<msg timestamp="20221128 19:00:04.533" level="INFO">${output} = State = HEALTHY
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.4(ozone-topolog...</msg>
<status status="PASS" starttime="20221128 18:59:59.480" endtime="20221128 19:00:04.533"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
<arg>IN_SERVICE</arg>
<arg>/rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221128 19:00:04.533" endtime="20221128 19:00:04.534"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221128 18:59:59.479" endtime="20221128 19:00:04.534"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20221128 18:59:44.438" endtime="20221128 19:00:04.536"/>
</suite>
<suite id="s1-s2" name="Recon" source="/opt/hadoop/smoketest/recon">
<suite id="s1-s2-s1" name="Recon-Api" source="/opt/hadoop/smoketest/recon/recon-api.robot">
<test id="s1-s2-s1-t1" name="Check if Recon picks up OM data" line="61">
<kw name="Freon OCKG" library="freon" type="SETUP">
<arg>n=10</arg>
<arg>args=-s 1025 -v recon -b api</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221128 19:00:11.436" level="INFO">Running command 'ozone freon ockg  -t 1 -n10 -p ockg -s 1025 -v recon -b api 2&gt;&amp;1'.</msg>
<msg timestamp="20221128 19:00:23.362" level="INFO">${rc} = 0</msg>
<msg timestamp="20221128 19:00:23.362" level="INFO">${output} = 2022-11-28 19:00:14,336 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-28 19:00:14,510 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221128 19:00:11.430" endtime="20221128 19:00:23.362"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221128 19:00:23.364" level="INFO">2022-11-28 19:00:14,336 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-28 19:00:14,510 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-11-28 19:00:14,510 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-11-28 19:00:14,731 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockg and number-of-tests 10
2022-11-28 19:00:14,832 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2022-11-28 19:00:15,837 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2022-11-28 19:00:16,583 [main] INFO rpc.RpcClient: Creating Volume: recon, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2022-11-28 19:00:16,650 [main] INFO rpc.RpcClient: Creating Bucket: recon/api, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false 
2022-11-28 19:00:16,838 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2022-11-28 19:00:17,791 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-11-28 19:00:17,838 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2022-11-28 19:00:18,332 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-11-28 19:00:18,838 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2022-11-28 19:00:19,850 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2022-11-28 19:00:20,850 [Thread-5] INFO freon.ProgressBar: Progress: 10.00 % (1 out of 10)
2022-11-28 19:00:21,860 [Thread-5] INFO freon.ProgressBar: Progress: 70.00 % (7 out of 10)
2022-11-28 19:00:22,864 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (10 out of 10)
2022-11-28 19:00:22,996 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=10, min=107.12026, max=4091.899427, mean=563.8612035025012, stddev=1168.2325436600624, median=137.44039, p75=313.787248, p95=4091.899427, p98=4091.899427, p99=4091.899427, p999=4091.899427, mean_rate=1.5861003723114786, m1=1.2, m5=1.2, m15=1.2, rate_unit=events/second, duration_unit=milliseconds
2022-11-28 19:00:22,996 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 8
2022-11-28 19:00:22,997 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-11-28 19:00:22,997 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 10</msg>
<status status="PASS" starttime="20221128 19:00:23.363" endtime="20221128 19:00:23.364"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221128 19:00:23.365" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221128 19:00:23.364" endtime="20221128 19:00:23.365"/>
</kw>
<status status="PASS" starttime="20221128 19:00:11.430" endtime="20221128 19:00:23.365"/>
</kw>
<msg timestamp="20221128 19:00:23.365" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221128 19:00:11.429" endtime="20221128 19:00:23.367"/>
</kw>
<msg timestamp="20221128 19:00:23.367" level="INFO">${result} = 2022-11-28 19:00:14,336 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-28 19:00:14,510 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221128 19:00:11.428" endtime="20221128 19:00:23.367"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221128 19:00:23.367" endtime="20221128 19:00:23.368"/>
</kw>
<status status="PASS" starttime="20221128 19:00:11.427" endtime="20221128 19:00:23.368"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Check if Recon picks up container from OM</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221128 19:00:23.370" endtime="20221128 19:00:23.371"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221128 19:00:23.376" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20221128 19:00:23.672" level="INFO">${rc} = 0</msg>
<msg timestamp="20221128 19:00:23.672" level="INFO">${output} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221128 19:00:23.373" endtime="20221128 19:00:23.672"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221128 19:00:23.674" level="INFO">{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221128 19:00:23.673" endtime="20221128 19:00:23.674"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221128 19:00:23.675" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221128 19:00:23.674" endtime="20221128 19:00:23.675"/>
</kw>
<status status="PASS" starttime="20221128 19:00:23.372" endtime="20221128 19:00:23.676"/>
</kw>
<msg timestamp="20221128 19:00:23.676" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221128 19:00:23.372" endtime="20221128 19:00:23.676"/>
</kw>
<msg timestamp="20221128 19:00:23.679" level="INFO">${result} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221128 19:00:23.371" endtime="20221128 19:00:23.679"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221128 19:00:23.679" endtime="20221128 19:00:23.679"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221128 19:00:23.686" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20221128 19:00:23.717" level="INFO">${rc} = 0</msg>
<msg timestamp="20221128 19:00:23.718" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221128 19:00:23.683" endtime="20221128 19:00:23.718"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221128 19:00:23.719" level="INFO">[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221128 19:00:23.718" endtime="20221128 19:00:23.719"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221128 19:00:23.720" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221128 19:00:23.720" endtime="20221128 19:00:23.720"/>
</kw>
<status status="PASS" starttime="20221128 19:00:23.682" endtime="20221128 19:00:23.721"/>
</kw>
<msg timestamp="20221128 19:00:23.721" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221128 19:00:23.681" endtime="20221128 19:00:23.721"/>
</kw>
<msg timestamp="20221128 19:00:23.722" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221128 19:00:23.680" endtime="20221128 19:00:23.722"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20221128 19:00:23.730" level="FAIL">'[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20221128 19:00:23.729" endtime="20221128 19:00:23.730"/>
</kw>
<status status="FAIL" starttime="20221128 19:00:23.369" endtime="20221128 19:00:23.731"/>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221128 19:00:33.733" endtime="20221128 19:00:33.733"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221128 19:00:33.740" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20221128 19:00:33.772" level="INFO">${rc} = 0</msg>
<msg timestamp="20221128 19:00:33.773" level="INFO">${output} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221128 19:00:33.735" endtime="20221128 19:00:33.773"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221128 19:00:33.781" level="INFO">{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221128 19:00:33.777" endtime="20221128 19:00:33.781"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221128 19:00:33.783" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221128 19:00:33.781" endtime="20221128 19:00:33.783"/>
</kw>
<status status="PASS" starttime="20221128 19:00:33.734" endtime="20221128 19:00:33.784"/>
</kw>
<msg timestamp="20221128 19:00:33.785" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221128 19:00:33.734" endtime="20221128 19:00:33.785"/>
</kw>
<msg timestamp="20221128 19:00:33.786" level="INFO">${result} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221128 19:00:33.733" endtime="20221128 19:00:33.786"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221128 19:00:33.786" endtime="20221128 19:00:33.787"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221128 19:00:33.792" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20221128 19:00:33.812" level="INFO">${rc} = 0</msg>
<msg timestamp="20221128 19:00:33.812" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221128 19:00:33.789" endtime="20221128 19:00:33.813"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221128 19:00:33.814" level="INFO">[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221128 19:00:33.813" endtime="20221128 19:00:33.815"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221128 19:00:33.818" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221128 19:00:33.816" endtime="20221128 19:00:33.818"/>
</kw>
<status status="PASS" starttime="20221128 19:00:33.788" endtime="20221128 19:00:33.819"/>
</kw>
<msg timestamp="20221128 19:00:33.819" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221128 19:00:33.788" endtime="20221128 19:00:33.820"/>
</kw>
<msg timestamp="20221128 19:00:33.820" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221128 19:00:33.787" endtime="20221128 19:00:33.820"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20221128 19:00:33.821" level="FAIL">'[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20221128 19:00:33.820" endtime="20221128 19:00:33.822"/>
</kw>
<status status="FAIL" starttime="20221128 19:00:33.732" endtime="20221128 19:00:33.823"/>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221128 19:00:43.825" endtime="20221128 19:00:43.825"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221128 19:00:43.833" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20221128 19:00:43.852" level="INFO">${rc} = 0</msg>
<msg timestamp="20221128 19:00:43.853" level="INFO">${output} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221128 19:00:43.827" endtime="20221128 19:00:43.853"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221128 19:00:43.854" level="INFO">{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221128 19:00:43.853" endtime="20221128 19:00:43.854"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221128 19:00:43.855" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221128 19:00:43.854" endtime="20221128 19:00:43.855"/>
</kw>
<status status="PASS" starttime="20221128 19:00:43.827" endtime="20221128 19:00:43.855"/>
</kw>
<msg timestamp="20221128 19:00:43.855" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221128 19:00:43.826" endtime="20221128 19:00:43.856"/>
</kw>
<msg timestamp="20221128 19:00:43.856" level="INFO">${result} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221128 19:00:43.826" endtime="20221128 19:00:43.856"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221128 19:00:43.856" endtime="20221128 19:00:43.857"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221128 19:00:43.862" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20221128 19:00:43.882" level="INFO">${rc} = 0</msg>
<msg timestamp="20221128 19:00:43.882" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221128 19:00:43.859" endtime="20221128 19:00:43.882"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221128 19:00:43.884" level="INFO">[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221128 19:00:43.883" endtime="20221128 19:00:43.884"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221128 19:00:43.885" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221128 19:00:43.885" endtime="20221128 19:00:43.886"/>
</kw>
<status status="PASS" starttime="20221128 19:00:43.859" endtime="20221128 19:00:43.886"/>
</kw>
<msg timestamp="20221128 19:00:43.886" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221128 19:00:43.858" endtime="20221128 19:00:43.887"/>
</kw>
<msg timestamp="20221128 19:00:43.887" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221128 19:00:43.858" endtime="20221128 19:00:43.887"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20221128 19:00:43.890" level="FAIL">'[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20221128 19:00:43.888" endtime="20221128 19:00:43.890"/>
</kw>
<status status="FAIL" starttime="20221128 19:00:43.824" endtime="20221128 19:00:43.891"/>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221128 19:00:53.893" endtime="20221128 19:00:53.893"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221128 19:00:53.899" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20221128 19:00:53.920" level="INFO">${rc} = 0</msg>
<msg timestamp="20221128 19:00:53.920" level="INFO">${output} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221128 19:00:53.895" endtime="20221128 19:00:53.920"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221128 19:00:53.921" level="INFO">{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221128 19:00:53.920" endtime="20221128 19:00:53.921"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221128 19:00:53.922" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221128 19:00:53.922" endtime="20221128 19:00:53.922"/>
</kw>
<status status="PASS" starttime="20221128 19:00:53.895" endtime="20221128 19:00:53.923"/>
</kw>
<msg timestamp="20221128 19:00:53.923" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221128 19:00:53.894" endtime="20221128 19:00:53.924"/>
</kw>
<msg timestamp="20221128 19:00:53.924" level="INFO">${result} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221128 19:00:53.894" endtime="20221128 19:00:53.924"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221128 19:00:53.924" endtime="20221128 19:00:53.925"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221128 19:00:53.936" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20221128 19:00:53.971" level="INFO">${rc} = 0</msg>
<msg timestamp="20221128 19:00:53.971" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221128 19:00:53.930" endtime="20221128 19:00:53.973"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221128 19:00:53.974" level="INFO">[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221128 19:00:53.974" endtime="20221128 19:00:53.975"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221128 19:00:53.975" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221128 19:00:53.975" endtime="20221128 19:00:53.975"/>
</kw>
<status status="PASS" starttime="20221128 19:00:53.929" endtime="20221128 19:00:53.976"/>
</kw>
<msg timestamp="20221128 19:00:53.976" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221128 19:00:53.928" endtime="20221128 19:00:53.977"/>
</kw>
<msg timestamp="20221128 19:00:53.977" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221128 19:00:53.925" endtime="20221128 19:00:53.977"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20221128 19:00:53.978" level="FAIL">'[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20221128 19:00:53.977" endtime="20221128 19:00:53.978"/>
</kw>
<status status="FAIL" starttime="20221128 19:00:53.892" endtime="20221128 19:00:53.979"/>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221128 19:01:03.981" endtime="20221128 19:01:03.982"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221128 19:01:03.987" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20221128 19:01:04.008" level="INFO">${rc} = 0</msg>
<msg timestamp="20221128 19:01:04.008" level="INFO">${output} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221128 19:01:03.984" endtime="20221128 19:01:04.008"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221128 19:01:04.010" level="INFO">{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221128 19:01:04.008" endtime="20221128 19:01:04.010"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221128 19:01:04.011" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221128 19:01:04.010" endtime="20221128 19:01:04.011"/>
</kw>
<status status="PASS" starttime="20221128 19:01:03.983" endtime="20221128 19:01:04.012"/>
</kw>
<msg timestamp="20221128 19:01:04.012" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221128 19:01:03.983" endtime="20221128 19:01:04.013"/>
</kw>
<msg timestamp="20221128 19:01:04.013" level="INFO">${result} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221128 19:01:03.982" endtime="20221128 19:01:04.013"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221128 19:01:04.013" endtime="20221128 19:01:04.014"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221128 19:01:04.019" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20221128 19:01:04.037" level="INFO">${rc} = 0</msg>
<msg timestamp="20221128 19:01:04.037" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221128 19:01:04.016" endtime="20221128 19:01:04.037"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221128 19:01:04.039" level="INFO">[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221128 19:01:04.038" endtime="20221128 19:01:04.039"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221128 19:01:04.040" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221128 19:01:04.039" endtime="20221128 19:01:04.040"/>
</kw>
<status status="PASS" starttime="20221128 19:01:04.015" endtime="20221128 19:01:04.040"/>
</kw>
<msg timestamp="20221128 19:01:04.041" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221128 19:01:04.015" endtime="20221128 19:01:04.041"/>
</kw>
<msg timestamp="20221128 19:01:04.042" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221128 19:01:04.014" endtime="20221128 19:01:04.042"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20221128 19:01:04.043" level="FAIL">'[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20221128 19:01:04.042" endtime="20221128 19:01:04.043"/>
</kw>
<status status="FAIL" starttime="20221128 19:01:03.980" endtime="20221128 19:01:04.044"/>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221128 19:01:14.046" endtime="20221128 19:01:14.046"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221128 19:01:14.051" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20221128 19:01:14.071" level="INFO">${rc} = 0</msg>
<msg timestamp="20221128 19:01:14.071" level="INFO">${output} = {"data":{"totalCount":4,"containers":[{"ContainerID":1,"NumberOfKeys":4},{"ContainerID":2,"NumberOfKeys":2},{"ContainerID":3,"NumberOfKeys":4},{"ContainerID":4,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221128 19:01:14.048" endtime="20221128 19:01:14.071"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221128 19:01:14.075" level="INFO">{"data":{"totalCount":4,"containers":[{"ContainerID":1,"NumberOfKeys":4},{"ContainerID":2,"NumberOfKeys":2},{"ContainerID":3,"NumberOfKeys":4},{"ContainerID":4,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221128 19:01:14.072" endtime="20221128 19:01:14.075"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221128 19:01:14.076" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221128 19:01:14.076" endtime="20221128 19:01:14.076"/>
</kw>
<status status="PASS" starttime="20221128 19:01:14.047" endtime="20221128 19:01:14.077"/>
</kw>
<msg timestamp="20221128 19:01:14.077" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221128 19:01:14.047" endtime="20221128 19:01:14.078"/>
</kw>
<msg timestamp="20221128 19:01:14.078" level="INFO">${result} = {"data":{"totalCount":4,"containers":[{"ContainerID":1,"NumberOfKeys":4},{"ContainerID":2,"NumberOfKeys":2},{"ContainerID":3,"NumberOfKeys":4},{"ContainerID":4,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221128 19:01:14.046" endtime="20221128 19:01:14.078"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221128 19:01:14.078" endtime="20221128 19:01:14.079"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221128 19:01:14.085" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20221128 19:01:14.104" level="INFO">${rc} = 0</msg>
<msg timestamp="20221128 19:01:14.107" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1},{"volume":"recon","bucket":"api","fileSize":2048,"count":10}]</msg>
<status status="PASS" starttime="20221128 19:01:14.081" endtime="20221128 19:01:14.107"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221128 19:01:14.108" level="INFO">[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1},{"volume":"recon","bucket":"api","fileSize":2048,"count":10}]</msg>
<status status="PASS" starttime="20221128 19:01:14.107" endtime="20221128 19:01:14.109"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221128 19:01:14.109" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221128 19:01:14.109" endtime="20221128 19:01:14.109"/>
</kw>
<status status="PASS" starttime="20221128 19:01:14.080" endtime="20221128 19:01:14.110"/>
</kw>
<msg timestamp="20221128 19:01:14.110" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221128 19:01:14.080" endtime="20221128 19:01:14.111"/>
</kw>
<msg timestamp="20221128 19:01:14.111" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1},{"volume":"recon","bucket":"api","fileSize":2048,"count":10}]</msg>
<status status="PASS" starttime="20221128 19:01:14.079" endtime="20221128 19:01:14.111"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221128 19:01:14.111" endtime="20221128 19:01:14.112"/>
</kw>
<status status="PASS" starttime="20221128 19:01:14.045" endtime="20221128 19:01:14.112"/>
</kw>
<status status="PASS" starttime="20221128 19:00:23.368" endtime="20221128 19:01:14.112"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221128 19:00:11.426" endtime="20221128 19:01:14.113"/>
</test>
<test id="s1-s2-s1-t2" name="Check if Recon picks up DN heartbeats" line="65">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/datanodes</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221128 19:01:14.120" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/datanodes 2&gt;&amp;1'.</msg>
<msg timestamp="20221128 19:01:14.163" level="INFO">${rc} = 0</msg>
<msg timestamp="20221128 19:01:14.163" level="INFO">${output} = {"totalCount":6,"datanodes":[{"uuid":"a3baa934-c398-4ef8-9c38-802ebdb13ed8","hostname":"ozone-topology_datanode_5_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1669662...</msg>
<status status="PASS" starttime="20221128 19:01:14.116" endtime="20221128 19:01:14.163"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221128 19:01:14.164" level="INFO">{"totalCount":6,"datanodes":[{"uuid":"a3baa934-c398-4ef8-9c38-802ebdb13ed8","hostname":"ozone-topology_datanode_5_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1669662052155,"storageReport":{"capacity":89297309696,"used":18436,"remaining":28980912128},"pipelines":[{"pipelineID":"03e07746-bf3b-4328-8665-089ff655ee3b","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net"},{"pipelineID":"1e027574-fa8f-4f60-8105-912cf7e218ca","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net"},{"pipelineID":"7baad3d9-f9b5-4854-8095-5374a5c495de","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net"}],"containers":2,"openContainers":2,"leaderCount":2,"version":"1.3.0-SNAPSHOT","setupTime":1669661838923,"revision":"e50c443d24af766069f31f6033e47f3fb4a66ad1","buildDate":"2022-11-28T18:29Z","layoutVersion":4,"networkLocation":"/rack2"},{"uuid":"a155ad70-fb9a-4737-a7dd-4682e23bf9ad","hostname":"ozone-topology_datanode_1_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1669662052134,"storageReport":{"capacity":89297309696,"used":18436,"remaining":28980920320},"pipelines":[{"pipelineID":"22e5efda-f5ad-4c8c-9861-c1a78b021c68","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net"},{"pipelineID":"1e027574-fa8f-4f60-8105-912cf7e218ca","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net"},{"pipelineID":"7baad3d9-f9b5-4854-8095-5374a5c495de","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net"}],"containers":2,"openContainers":2,"leaderCount":1,"version":"1.3.0-SNAPSHOT","setupTime":1669661837185,"revision":"e50c443d24af766069f31f6033e47f3fb4a66ad1","buildDate":"2022-11-28T18:29Z","layoutVersion":4,"networkLocation":"/rack1"},{"uuid":"8b256c58-83ac-4f8f-8f86-08c748cc706b","hostname":"ozone-topology_datanode_4_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1669662051003,"storageReport":{"capacity":89297309696,"used":10246,"remaining":28980920320},"pipelines":[{"pipelineID":"d25cfa43-f6ab-45fd-a958-599037ee4aff","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net"},{"pipelineID":"a8a40ff9-8a5d-478c-abc3-706546802cdf","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net"},{"pipelineID":"3aa61949-cc00-42e2-9184-14dddde3b3c9","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net"}],"containers":2,"openContainers":3,"leaderCount":2,"version":"1.3.0-SNAPSHOT","setupTime":1669661838147,"revision":"e50c443d24af766069f31f6033e47f3fb4a66ad1","buildDate":"2022-11-28T18:29Z","layoutVersion":4,"networkLocation":"/rack2"},{"uuid":"444470f5-d6ff-4e6a-b7e0-81e04bea68c7","hostname":"ozone-topology_datanode_3_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1669662052145,"storageReport":{"capacity":89297309696,"used":22532,"remaining":28980916224},"pipelines":[{"pipelineID":"1e027574-fa8f-4f60-8105-912cf7e218ca","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net"},{"pipelineID":"7baad3d9-f9b5-4854-8095-5374a5c495de","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net"},{"pipelineID":"39df1cc9-4c4c-42dd-9319-3c12ee121a30","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net"}],"containers":2,"openContainers":2,"leaderCount":2,"version":"1.3.0-SNAPSHOT","setupTime":1669661838355,"revision":"e50c443d24af766069f31f6033e47f3fb4a66ad1","buildDate":"2022-11-28T18:29Z","layoutVersion":4,"networkLocation":"/rack1"},{"uuid":"6e9f6dfc-f853-4b05-ab12-d901d7584bd2","hostname":"ozone-topology_datanode_2_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1669662050997,"storageReport":{"capacity":89297309696,"used":10246,"remaining":28980920320},"pipelines":[{"pipelineID":"d25cfa43-f6ab-45fd-a958-599037ee4aff","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net"},{"pipelineID":"c1204c8b-65d7-49a5-8da6-0154c7e910b8","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net"},{"pipelineID":"3aa61949-cc00-42e2-9184-14dddde3b3c9","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net"}],"containers":2,"openContainers":3,"leaderCount":2,"version":"1.3.0-SNAPSHOT","setupTime":1669661838274,"revision":"e50c443d24af766069f31f6033e47f3fb4a66ad1","buildDate":"2022-11-28T18:29Z","layoutVersion":4,"networkLocation":"/rack1"},{"uuid":"229144ae-bd4d-45c0-b43f-f96b4ac67f7d","hostname":"ozone-topology_datanode_6_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1669662050992,"storageReport":{"capacity":89297309696,"used":4096,"remaining":29572030464},"pipelines":[{"pipelineID":"d25cfa43-f6ab-45fd-a958-599037ee4aff","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net"},{"pipelineID":"c9574387-cdbc-441b-b5a5-e1382b529602","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net"},{"pipelineID":"3aa61949-cc00-42e2-9184-14dddde3b3c9","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net"}],"containers":2,"openContainers":3,"leaderCount":1,"version":"1.3.0-SNAPSHOT","setupTime":1669661839750,"revision":"e50c443d24af766069f31f6033e47f3fb4a66ad1","buildDate":"2022-11-28T18:29Z","layoutVersion":4,"networkLocation":"/rack2"}]}</msg>
<status status="PASS" starttime="20221128 19:01:14.163" endtime="20221128 19:01:14.165"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221128 19:01:14.166" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221128 19:01:14.165" endtime="20221128 19:01:14.166"/>
</kw>
<status status="PASS" starttime="20221128 19:01:14.116" endtime="20221128 19:01:14.166"/>
</kw>
<msg timestamp="20221128 19:01:14.166" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221128 19:01:14.115" endtime="20221128 19:01:14.167"/>
</kw>
<msg timestamp="20221128 19:01:14.168" level="INFO">${result} = {"totalCount":6,"datanodes":[{"uuid":"a3baa934-c398-4ef8-9c38-802ebdb13ed8","hostname":"ozone-topology_datanode_5_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1669662...</msg>
<status status="PASS" starttime="20221128 19:01:14.114" endtime="20221128 19:01:14.169"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanodes</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221128 19:01:14.169" endtime="20221128 19:01:14.170"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221128 19:01:14.171" endtime="20221128 19:01:14.171"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221128 19:01:14.171" endtime="20221128 19:01:14.172"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221128 19:01:14.172" endtime="20221128 19:01:14.173"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/pipelines</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221128 19:01:14.179" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/pipelines 2&gt;&amp;1'.</msg>
<msg timestamp="20221128 19:01:14.229" level="INFO">${rc} = 0</msg>
<msg timestamp="20221128 19:01:14.229" level="INFO">${output} = {"totalCount":10,"pipelines":[{"pipelineId":"d25cfa43-f6ab-45fd-a958-599037ee4aff","status":"OPEN","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net","datanodes":["ozone-topology_datanode_4...</msg>
<status status="PASS" starttime="20221128 19:01:14.175" endtime="20221128 19:01:14.229"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221128 19:01:14.231" level="INFO">{"totalCount":10,"pipelines":[{"pipelineId":"d25cfa43-f6ab-45fd-a958-599037ee4aff","status":"OPEN","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net","datanodes":["ozone-topology_datanode_4_1.ozone-topology_net","ozone-topology_datanode_2_1.ozone-topology_net","ozone-topology_datanode_6_1.ozone-topology_net"],"lastLeaderElection":0,"duration":175223,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"THREE","containers":1},{"pipelineId":"03e07746-bf3b-4328-8665-089ff655ee3b","status":"OPEN","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net","datanodes":["ozone-topology_datanode_5_1.ozone-topology_net"],"lastLeaderElection":0,"duration":175281,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"22e5efda-f5ad-4c8c-9861-c1a78b021c68","status":"OPEN","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net","datanodes":["ozone-topology_datanode_1_1.ozone-topology_net"],"lastLeaderElection":0,"duration":176944,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"a8a40ff9-8a5d-478c-abc3-706546802cdf","status":"OPEN","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net","datanodes":["ozone-topology_datanode_4_1.ozone-topology_net"],"lastLeaderElection":0,"duration":175132,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"1e027574-fa8f-4f60-8105-912cf7e218ca","status":"OPEN","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net","datanodes":["ozone-topology_datanode_1_1.ozone-topology_net","ozone-topology_datanode_5_1.ozone-topology_net","ozone-topology_datanode_3_1.ozone-topology_net"],"lastLeaderElection":0,"duration":175122,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"THREE","containers":1},{"pipelineId":"7baad3d9-f9b5-4854-8095-5374a5c495de","status":"OPEN","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net","datanodes":["ozone-topology_datanode_1_1.ozone-topology_net","ozone-topology_datanode_5_1.ozone-topology_net","ozone-topology_datanode_3_1.ozone-topology_net"],"lastLeaderElection":0,"duration":175317,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"THREE","containers":1},{"pipelineId":"c9574387-cdbc-441b-b5a5-e1382b529602","status":"OPEN","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net","datanodes":["ozone-topology_datanode_6_1.ozone-topology_net"],"lastLeaderElection":0,"duration":175015,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"c1204c8b-65d7-49a5-8da6-0154c7e910b8","status":"OPEN","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net","datanodes":["ozone-topology_datanode_2_1.ozone-topology_net"],"lastLeaderElection":0,"duration":175065,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"3aa61949-cc00-42e2-9184-14dddde3b3c9","status":"OPEN","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net","datanodes":["ozone-topology_datanode_4_1.ozone-topology_net","ozone-topology_datanode_2_1.ozone-topology_net","ozone-topology_datanode_6_1.ozone-topology_net"],"lastLeaderElection":0,"duration":175108,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"THREE","containers":1},{"pipelineId":"39df1cc9-4c4c-42dd-9319-3c12ee121a30","status":"OPEN","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net","datanodes":["ozone-topology_datanode_3_1.ozone-topology_net"],"lastLeaderElection":0,"duration":175113,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0}]}</msg>
<status status="PASS" starttime="20221128 19:01:14.230" endtime="20221128 19:01:14.232"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221128 19:01:14.233" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221128 19:01:14.232" endtime="20221128 19:01:14.233"/>
</kw>
<status status="PASS" starttime="20221128 19:01:14.174" endtime="20221128 19:01:14.233"/>
</kw>
<msg timestamp="20221128 19:01:14.233" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221128 19:01:14.174" endtime="20221128 19:01:14.234"/>
</kw>
<msg timestamp="20221128 19:01:14.234" level="INFO">${result} = {"totalCount":10,"pipelines":[{"pipelineId":"d25cfa43-f6ab-45fd-a958-599037ee4aff","status":"OPEN","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net","datanodes":["ozone-topology_datanode_4...</msg>
<status status="PASS" starttime="20221128 19:01:14.173" endtime="20221128 19:01:14.234"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>pipelines</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221128 19:01:14.235" endtime="20221128 19:01:14.235"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221128 19:01:14.235" endtime="20221128 19:01:14.236"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OPEN</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221128 19:01:14.236" endtime="20221128 19:01:14.236"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221128 19:01:14.237" endtime="20221128 19:01:14.237"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221128 19:01:14.237" endtime="20221128 19:01:14.238"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221128 19:01:14.238" endtime="20221128 19:01:14.239"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/clusterState</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221128 19:01:14.245" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20221128 19:01:14.315" level="INFO">${rc} = 0</msg>
<msg timestamp="20221128 19:01:14.315" level="INFO">${output} = {"pipelines":10,"totalDatanodes":6,"healthyDatanodes":6,"storageReport":{"capacity":535783858176,"used":83992,"remaining":174476619776},"containers":4,"missingContainers":0,"volumes":3,"buckets":2,"ke...</msg>
<status status="PASS" starttime="20221128 19:01:14.241" endtime="20221128 19:01:14.315"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221128 19:01:14.317" level="INFO">{"pipelines":10,"totalDatanodes":6,"healthyDatanodes":6,"storageReport":{"capacity":535783858176,"used":83992,"remaining":174476619776},"containers":4,"missingContainers":0,"volumes":3,"buckets":2,"keys":11}</msg>
<status status="PASS" starttime="20221128 19:01:14.316" endtime="20221128 19:01:14.317"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221128 19:01:14.318" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221128 19:01:14.317" endtime="20221128 19:01:14.318"/>
</kw>
<status status="PASS" starttime="20221128 19:01:14.240" endtime="20221128 19:01:14.318"/>
</kw>
<msg timestamp="20221128 19:01:14.319" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221128 19:01:14.240" endtime="20221128 19:01:14.319"/>
</kw>
<msg timestamp="20221128 19:01:14.320" level="INFO">${result} = {"pipelines":10,"totalDatanodes":6,"healthyDatanodes":6,"storageReport":{"capacity":535783858176,"used":83992,"remaining":174476619776},"containers":4,"missingContainers":0,"volumes":3,"buckets":2,"ke...</msg>
<status status="PASS" starttime="20221128 19:01:14.239" endtime="20221128 19:01:14.320"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"totalDatanodes\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221128 19:01:14.320" endtime="20221128 19:01:14.320"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"healthyDatanodes\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221128 19:01:14.321" endtime="20221128 19:01:14.321"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"pipelines\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221128 19:01:14.321" endtime="20221128 19:01:14.322"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers/1/replicaHistory</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221128 19:01:14.331" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers/1/replicaHistory 2&gt;&amp;1'.</msg>
<msg timestamp="20221128 19:01:14.357" level="INFO">${rc} = 0</msg>
<msg timestamp="20221128 19:01:14.357" level="INFO">${output} = [{"containerId":1,"datanodeUuid":"a3baa934-c398-4ef8-9c38-802ebdb13ed8","datanodeHost":"ozone-topology_datanode_5_1.ozone-topology_net","firstSeenTime":1669661964328,"lastSeenTime":1669661964328,"last...</msg>
<status status="PASS" starttime="20221128 19:01:14.325" endtime="20221128 19:01:14.357"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221128 19:01:14.359" level="INFO">[{"containerId":1,"datanodeUuid":"a3baa934-c398-4ef8-9c38-802ebdb13ed8","datanodeHost":"ozone-topology_datanode_5_1.ozone-topology_net","firstSeenTime":1669661964328,"lastSeenTime":1669661964328,"lastBcsId":0},{"containerId":1,"datanodeUuid":"a155ad70-fb9a-4737-a7dd-4682e23bf9ad","datanodeHost":"ozone-topology_datanode_1_1.ozone-topology_net","firstSeenTime":1669661964583,"lastSeenTime":1669661964583,"lastBcsId":0},{"containerId":1,"datanodeUuid":"444470f5-d6ff-4e6a-b7e0-81e04bea68c7","datanodeHost":"ozone-topology_datanode_3_1.ozone-topology_net","firstSeenTime":1669661964154,"lastSeenTime":1669661964154,"lastBcsId":0}]</msg>
<status status="PASS" starttime="20221128 19:01:14.358" endtime="20221128 19:01:14.359"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221128 19:01:14.361" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221128 19:01:14.359" endtime="20221128 19:01:14.361"/>
</kw>
<status status="PASS" starttime="20221128 19:01:14.325" endtime="20221128 19:01:14.361"/>
</kw>
<msg timestamp="20221128 19:01:14.361" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221128 19:01:14.323" endtime="20221128 19:01:14.362"/>
</kw>
<msg timestamp="20221128 19:01:14.362" level="INFO">${result} = [{"containerId":1,"datanodeUuid":"a3baa934-c398-4ef8-9c38-802ebdb13ed8","datanodeHost":"ozone-topology_datanode_5_1.ozone-topology_net","firstSeenTime":1669661964328,"lastSeenTime":1669661964328,"last...</msg>
<status status="PASS" starttime="20221128 19:01:14.322" endtime="20221128 19:01:14.362"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"containerId\":1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221128 19:01:14.363" endtime="20221128 19:01:14.363"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221128 19:01:14.113" endtime="20221128 19:01:14.363"/>
</test>
<test id="s1-s2-s1-t3" name="Check if Recon Web UI is up" line="88">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221128 19:01:14.366" endtime="20221128 19:01:14.366"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${ENDPOINT_URL}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221128 19:01:14.371" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20221128 19:01:14.431" level="INFO">${rc} = 0</msg>
<msg timestamp="20221128 19:01:14.431" level="INFO">${output} = &lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" ...</msg>
<status status="PASS" starttime="20221128 19:01:14.368" endtime="20221128 19:01:14.431"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221128 19:01:14.433" level="INFO">&lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" content="#000000"/&gt;&lt;link rel="manifest" href="/manifest.json"/&gt;&lt;link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto:300,400,500"/&gt;&lt;title&gt;Ozone Recon&lt;/title&gt;&lt;link href="/static/css/2.7465223f.chunk.css" rel="stylesheet"&gt;&lt;link href="/static/css/main.0c211d12.chunk.css" rel="stylesheet"&gt;&lt;/head&gt;&lt;body&gt;&lt;noscript&gt;You need to enable JavaScript to run this app.&lt;/noscript&gt;&lt;div id="root"&gt;&lt;/div&gt;&lt;script&gt;!function(e){function r(r){for(var n,l,f=r[0],i=r[1],a=r[2],p=0,s=[];p&lt;f.length;p++)l=f[p],Object.prototype.hasOwnProperty.call(o,l)&amp;&amp;o[l]&amp;&amp;s.push(o[l][0]),o[l]=0;for(n in i)Object.prototype.hasOwnProperty.call(i,n)&amp;&amp;(e[n]=i[n]);for(c&amp;&amp;c(r);s.length;)s.shift()();return u.push.apply(u,a||[]),t()}function t(){for(var e,r=0;r&lt;u.length;r++){for(var t=u[r],n=!0,f=1;f&lt;t.length;f++){var i=t[f];0!==o[i]&amp;&amp;(n=!1)}n&amp;&amp;(u.splice(r--,1),e=l(l.s=t[0]))}return e}var n={},o={1:0},u=[];function l(r){if(n[r])return n[r].exports;var t=n[r]={i:r,l:!1,exports:{}};return e[r].call(t.exports,t,t.exports,l),t.l=!0,t.exports}l.m=e,l.c=n,l.d=function(e,r,t){l.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:t})},l.r=function(e){"undefined"!=typeof Symbol&amp;&amp;Symbol.toStringTag&amp;&amp;Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},l.t=function(e,r){if(1&amp;r&amp;&amp;(e=l(e)),8&amp;r)return e;if(4&amp;r&amp;&amp;"object"==typeof e&amp;&amp;e&amp;&amp;e.__esModule)return e;var t=Object.create(null);if(l.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&amp;r&amp;&amp;"string"!=typeof e)for(var n in e)l.d(t,n,function(r){return e[r]}.bind(null,n));return t},l.n=function(e){var r=e&amp;&amp;e.__esModule?function(){return e.default}:function(){return e};return l.d(r,"a",r),r},l.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},l.p="/";var f=this["webpackJsonpozone-recon"]=this["webpackJsonpozone-recon"]||[],i=f.push.bind(f);f.push=r,f=f.slice();for(var a=0;a&lt;f.length;a++)r(f[a]);var c=i;t()}([])&lt;/script&gt;&lt;script src="/static/js/2.f3fa3186.chunk.js"&gt;&lt;/script&gt;&lt;script src="/static/js/main.885ac5d8.chunk.js"&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;</msg>
<status status="PASS" starttime="20221128 19:01:14.432" endtime="20221128 19:01:14.433"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221128 19:01:14.434" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221128 19:01:14.433" endtime="20221128 19:01:14.434"/>
</kw>
<status status="PASS" starttime="20221128 19:01:14.367" endtime="20221128 19:01:14.434"/>
</kw>
<msg timestamp="20221128 19:01:14.434" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221128 19:01:14.367" endtime="20221128 19:01:14.437"/>
</kw>
<msg timestamp="20221128 19:01:14.438" level="INFO">${result} = &lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" ...</msg>
<status status="PASS" starttime="20221128 19:01:14.366" endtime="20221128 19:01:14.438"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Ozone Recon</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221128 19:01:14.438" endtime="20221128 19:01:14.438"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221128 19:01:14.364" endtime="20221128 19:01:14.439"/>
</test>
<test id="s1-s2-s1-t4" name="Check web UI access" line="93">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221128 19:01:14.446" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20221128 19:01:14.461" level="INFO">${rc} = 0</msg>
<msg timestamp="20221128 19:01:14.461" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221128 19:01:14.443" endtime="20221128 19:01:14.461"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221128 19:01:14.463" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221128 19:01:14.462" endtime="20221128 19:01:14.463"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221128 19:01:14.464" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221128 19:01:14.463" endtime="20221128 19:01:14.464"/>
</kw>
<status status="PASS" starttime="20221128 19:01:14.442" endtime="20221128 19:01:14.464"/>
</kw>
<msg timestamp="20221128 19:01:14.465" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221128 19:01:14.442" endtime="20221128 19:01:14.465"/>
</kw>
<status status="PASS" starttime="20221128 19:01:14.441" endtime="20221128 19:01:14.466"/>
</kw>
<kw name="Check http return code">
<arg>${ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221128 19:01:14.472" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20221128 19:01:14.490" level="INFO">${rc} = 0</msg>
<msg timestamp="20221128 19:01:14.490" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221128 19:01:14.468" endtime="20221128 19:01:14.490"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221128 19:01:14.491" level="INFO">200</msg>
<status status="PASS" starttime="20221128 19:01:14.491" endtime="20221128 19:01:14.491"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221128 19:01:14.492" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221128 19:01:14.492" endtime="20221128 19:01:14.492"/>
</kw>
<status status="PASS" starttime="20221128 19:01:14.468" endtime="20221128 19:01:14.493"/>
</kw>
<msg timestamp="20221128 19:01:14.493" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221128 19:01:14.467" endtime="20221128 19:01:14.494"/>
</kw>
<msg timestamp="20221128 19:01:14.494" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221128 19:01:14.467" endtime="20221128 19:01:14.494"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221128 19:01:14.495" endtime="20221128 19:01:14.495"/>
</kw>
<status status="NOT RUN" starttime="20221128 19:01:14.494" endtime="20221128 19:01:14.495"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221128 19:01:14.495" endtime="20221128 19:01:14.496"/>
</kw>
<status status="PASS" starttime="20221128 19:01:14.495" endtime="20221128 19:01:14.496"/>
</branch>
<status status="PASS" starttime="20221128 19:01:14.494" endtime="20221128 19:01:14.496"/>
</if>
<status status="PASS" starttime="20221128 19:01:14.466" endtime="20221128 19:01:14.496"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221128 19:01:14.497" endtime="20221128 19:01:14.497"/>
</kw>
<status status="PASS" starttime="20221128 19:01:14.496" endtime="20221128 19:01:14.497"/>
</kw>
<kw name="Check http return code">
<arg>${ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221128 19:01:14.503" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20221128 19:01:14.528" level="INFO">${rc} = 0</msg>
<msg timestamp="20221128 19:01:14.528" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221128 19:01:14.500" endtime="20221128 19:01:14.528"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221128 19:01:14.530" level="INFO">200</msg>
<status status="PASS" starttime="20221128 19:01:14.529" endtime="20221128 19:01:14.530"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221128 19:01:14.531" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221128 19:01:14.530" endtime="20221128 19:01:14.531"/>
</kw>
<status status="PASS" starttime="20221128 19:01:14.499" endtime="20221128 19:01:14.531"/>
</kw>
<msg timestamp="20221128 19:01:14.531" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221128 19:01:14.499" endtime="20221128 19:01:14.532"/>
</kw>
<msg timestamp="20221128 19:01:14.532" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221128 19:01:14.498" endtime="20221128 19:01:14.532"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221128 19:01:14.533" endtime="20221128 19:01:14.533"/>
</kw>
<status status="NOT RUN" starttime="20221128 19:01:14.533" endtime="20221128 19:01:14.533"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221128 19:01:14.533" endtime="20221128 19:01:14.537"/>
</kw>
<status status="PASS" starttime="20221128 19:01:14.533" endtime="20221128 19:01:14.538"/>
</branch>
<status status="PASS" starttime="20221128 19:01:14.532" endtime="20221128 19:01:14.538"/>
</if>
<status status="PASS" starttime="20221128 19:01:14.497" endtime="20221128 19:01:14.538"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221128 19:01:14.440" endtime="20221128 19:01:14.538"/>
</test>
<test id="s1-s2-s1-t5" name="Check admin only api access" line="101">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221128 19:01:14.545" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20221128 19:01:14.549" level="INFO">${rc} = 0</msg>
<msg timestamp="20221128 19:01:14.550" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221128 19:01:14.542" endtime="20221128 19:01:14.550"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221128 19:01:14.551" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221128 19:01:14.550" endtime="20221128 19:01:14.551"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221128 19:01:14.551" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221128 19:01:14.551" endtime="20221128 19:01:14.552"/>
</kw>
<status status="PASS" starttime="20221128 19:01:14.541" endtime="20221128 19:01:14.553"/>
</kw>
<msg timestamp="20221128 19:01:14.553" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221128 19:01:14.541" endtime="20221128 19:01:14.554"/>
</kw>
<status status="PASS" starttime="20221128 19:01:14.540" endtime="20221128 19:01:14.555"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221128 19:01:14.561" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20221128 19:01:14.584" level="INFO">${rc} = 0</msg>
<msg timestamp="20221128 19:01:14.584" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221128 19:01:14.557" endtime="20221128 19:01:14.584"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221128 19:01:14.586" level="INFO">200</msg>
<status status="PASS" starttime="20221128 19:01:14.585" endtime="20221128 19:01:14.586"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221128 19:01:14.587" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221128 19:01:14.586" endtime="20221128 19:01:14.587"/>
</kw>
<status status="PASS" starttime="20221128 19:01:14.557" endtime="20221128 19:01:14.588"/>
</kw>
<msg timestamp="20221128 19:01:14.588" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221128 19:01:14.556" endtime="20221128 19:01:14.588"/>
</kw>
<msg timestamp="20221128 19:01:14.589" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221128 19:01:14.556" endtime="20221128 19:01:14.589"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221128 19:01:14.590" endtime="20221128 19:01:14.590"/>
</kw>
<status status="NOT RUN" starttime="20221128 19:01:14.589" endtime="20221128 19:01:14.590"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221128 19:01:14.590" endtime="20221128 19:01:14.591"/>
</kw>
<status status="PASS" starttime="20221128 19:01:14.590" endtime="20221128 19:01:14.591"/>
</branch>
<status status="PASS" starttime="20221128 19:01:14.589" endtime="20221128 19:01:14.591"/>
</if>
<status status="PASS" starttime="20221128 19:01:14.555" endtime="20221128 19:01:14.591"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221128 19:01:14.592" endtime="20221128 19:01:14.593"/>
</kw>
<status status="PASS" starttime="20221128 19:01:14.592" endtime="20221128 19:01:14.593"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221128 19:01:14.604" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20221128 19:01:14.634" level="INFO">${rc} = 0</msg>
<msg timestamp="20221128 19:01:14.634" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221128 19:01:14.597" endtime="20221128 19:01:14.634"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221128 19:01:14.636" level="INFO">200</msg>
<status status="PASS" starttime="20221128 19:01:14.635" endtime="20221128 19:01:14.636"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221128 19:01:14.637" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221128 19:01:14.636" endtime="20221128 19:01:14.637"/>
</kw>
<status status="PASS" starttime="20221128 19:01:14.596" endtime="20221128 19:01:14.638"/>
</kw>
<msg timestamp="20221128 19:01:14.638" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221128 19:01:14.596" endtime="20221128 19:01:14.639"/>
</kw>
<msg timestamp="20221128 19:01:14.639" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221128 19:01:14.594" endtime="20221128 19:01:14.639"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221128 19:01:14.640" endtime="20221128 19:01:14.640"/>
</kw>
<status status="NOT RUN" starttime="20221128 19:01:14.640" endtime="20221128 19:01:14.640"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221128 19:01:14.640" endtime="20221128 19:01:14.641"/>
</kw>
<status status="PASS" starttime="20221128 19:01:14.640" endtime="20221128 19:01:14.641"/>
</branch>
<status status="PASS" starttime="20221128 19:01:14.639" endtime="20221128 19:01:14.641"/>
</if>
<status status="PASS" starttime="20221128 19:01:14.593" endtime="20221128 19:01:14.642"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221128 19:01:14.642" endtime="20221128 19:01:14.643"/>
</kw>
<status status="PASS" starttime="20221128 19:01:14.642" endtime="20221128 19:01:14.643"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221128 19:01:14.651" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20221128 19:01:14.669" level="INFO">${rc} = 0</msg>
<msg timestamp="20221128 19:01:14.669" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221128 19:01:14.646" endtime="20221128 19:01:14.669"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221128 19:01:14.671" level="INFO">200</msg>
<status status="PASS" starttime="20221128 19:01:14.670" endtime="20221128 19:01:14.671"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221128 19:01:14.672" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221128 19:01:14.671" endtime="20221128 19:01:14.672"/>
</kw>
<status status="PASS" starttime="20221128 19:01:14.645" endtime="20221128 19:01:14.672"/>
</kw>
<msg timestamp="20221128 19:01:14.672" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221128 19:01:14.645" endtime="20221128 19:01:14.673"/>
</kw>
<msg timestamp="20221128 19:01:14.673" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221128 19:01:14.644" endtime="20221128 19:01:14.673"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221128 19:01:14.674" endtime="20221128 19:01:14.674"/>
</kw>
<status status="NOT RUN" starttime="20221128 19:01:14.674" endtime="20221128 19:01:14.674"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221128 19:01:14.675" endtime="20221128 19:01:14.675"/>
</kw>
<status status="PASS" starttime="20221128 19:01:14.674" endtime="20221128 19:01:14.675"/>
</branch>
<status status="PASS" starttime="20221128 19:01:14.674" endtime="20221128 19:01:14.675"/>
</if>
<status status="PASS" starttime="20221128 19:01:14.643" endtime="20221128 19:01:14.676"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221128 19:01:14.676" endtime="20221128 19:01:14.677"/>
</kw>
<status status="PASS" starttime="20221128 19:01:14.676" endtime="20221128 19:01:14.677"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221128 19:01:14.684" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20221128 19:01:14.704" level="INFO">${rc} = 0</msg>
<msg timestamp="20221128 19:01:14.704" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221128 19:01:14.681" endtime="20221128 19:01:14.704"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221128 19:01:14.706" level="INFO">200</msg>
<status status="PASS" starttime="20221128 19:01:14.705" endtime="20221128 19:01:14.706"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221128 19:01:14.706" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221128 19:01:14.706" endtime="20221128 19:01:14.707"/>
</kw>
<status status="PASS" starttime="20221128 19:01:14.680" endtime="20221128 19:01:14.707"/>
</kw>
<msg timestamp="20221128 19:01:14.707" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221128 19:01:14.679" endtime="20221128 19:01:14.708"/>
</kw>
<msg timestamp="20221128 19:01:14.708" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221128 19:01:14.678" endtime="20221128 19:01:14.709"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221128 19:01:14.709" endtime="20221128 19:01:14.709"/>
</kw>
<status status="NOT RUN" starttime="20221128 19:01:14.709" endtime="20221128 19:01:14.709"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221128 19:01:14.710" endtime="20221128 19:01:14.710"/>
</kw>
<status status="PASS" starttime="20221128 19:01:14.709" endtime="20221128 19:01:14.710"/>
</branch>
<status status="PASS" starttime="20221128 19:01:14.709" endtime="20221128 19:01:14.710"/>
</if>
<status status="PASS" starttime="20221128 19:01:14.677" endtime="20221128 19:01:14.710"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221128 19:01:14.539" endtime="20221128 19:01:14.711"/>
</test>
<test id="s1-s2-s1-t6" name="Check unhealthy, (admin) api access" line="114">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221128 19:01:14.718" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20221128 19:01:14.722" level="INFO">${rc} = 0</msg>
<msg timestamp="20221128 19:01:14.722" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221128 19:01:14.715" endtime="20221128 19:01:14.723"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221128 19:01:14.724" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221128 19:01:14.723" endtime="20221128 19:01:14.724"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221128 19:01:14.725" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221128 19:01:14.724" endtime="20221128 19:01:14.725"/>
</kw>
<status status="PASS" starttime="20221128 19:01:14.714" endtime="20221128 19:01:14.725"/>
</kw>
<msg timestamp="20221128 19:01:14.725" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221128 19:01:14.714" endtime="20221128 19:01:14.726"/>
</kw>
<status status="PASS" starttime="20221128 19:01:14.713" endtime="20221128 19:01:14.726"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221128 19:01:14.732" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20221128 19:01:14.795" level="INFO">${rc} = 0</msg>
<msg timestamp="20221128 19:01:14.795" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221128 19:01:14.729" endtime="20221128 19:01:14.795"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221128 19:01:14.797" level="INFO">200</msg>
<status status="PASS" starttime="20221128 19:01:14.796" endtime="20221128 19:01:14.797"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221128 19:01:14.798" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221128 19:01:14.798" endtime="20221128 19:01:14.798"/>
</kw>
<status status="PASS" starttime="20221128 19:01:14.728" endtime="20221128 19:01:14.799"/>
</kw>
<msg timestamp="20221128 19:01:14.799" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221128 19:01:14.728" endtime="20221128 19:01:14.800"/>
</kw>
<msg timestamp="20221128 19:01:14.800" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221128 19:01:14.727" endtime="20221128 19:01:14.800"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221128 19:01:14.801" endtime="20221128 19:01:14.801"/>
</kw>
<status status="NOT RUN" starttime="20221128 19:01:14.801" endtime="20221128 19:01:14.801"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221128 19:01:14.801" endtime="20221128 19:01:14.802"/>
</kw>
<status status="PASS" starttime="20221128 19:01:14.801" endtime="20221128 19:01:14.802"/>
</branch>
<status status="PASS" starttime="20221128 19:01:14.800" endtime="20221128 19:01:14.802"/>
</if>
<status status="PASS" starttime="20221128 19:01:14.726" endtime="20221128 19:01:14.802"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221128 19:01:14.803" endtime="20221128 19:01:14.804"/>
</kw>
<status status="PASS" starttime="20221128 19:01:14.803" endtime="20221128 19:01:14.804"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221128 19:01:14.813" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20221128 19:01:14.859" level="INFO">${rc} = 0</msg>
<msg timestamp="20221128 19:01:14.859" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221128 19:01:14.807" endtime="20221128 19:01:14.859"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221128 19:01:14.868" level="INFO">200</msg>
<status status="PASS" starttime="20221128 19:01:14.860" endtime="20221128 19:01:14.868"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221128 19:01:14.870" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221128 19:01:14.869" endtime="20221128 19:01:14.870"/>
</kw>
<status status="PASS" starttime="20221128 19:01:14.806" endtime="20221128 19:01:14.870"/>
</kw>
<msg timestamp="20221128 19:01:14.870" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221128 19:01:14.805" endtime="20221128 19:01:14.871"/>
</kw>
<msg timestamp="20221128 19:01:14.871" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221128 19:01:14.805" endtime="20221128 19:01:14.871"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221128 19:01:14.872" endtime="20221128 19:01:14.872"/>
</kw>
<status status="NOT RUN" starttime="20221128 19:01:14.872" endtime="20221128 19:01:14.872"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221128 19:01:14.872" endtime="20221128 19:01:14.873"/>
</kw>
<status status="PASS" starttime="20221128 19:01:14.872" endtime="20221128 19:01:14.873"/>
</branch>
<status status="PASS" starttime="20221128 19:01:14.871" endtime="20221128 19:01:14.873"/>
</if>
<status status="PASS" starttime="20221128 19:01:14.804" endtime="20221128 19:01:14.873"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221128 19:01:14.874" endtime="20221128 19:01:14.875"/>
</kw>
<status status="PASS" starttime="20221128 19:01:14.873" endtime="20221128 19:01:14.875"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221128 19:01:14.882" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20221128 19:01:14.917" level="INFO">${rc} = 0</msg>
<msg timestamp="20221128 19:01:14.918" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221128 19:01:14.879" endtime="20221128 19:01:14.918"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221128 19:01:14.920" level="INFO">200</msg>
<status status="PASS" starttime="20221128 19:01:14.919" endtime="20221128 19:01:14.920"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221128 19:01:14.921" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221128 19:01:14.920" endtime="20221128 19:01:14.921"/>
</kw>
<status status="PASS" starttime="20221128 19:01:14.877" endtime="20221128 19:01:14.922"/>
</kw>
<msg timestamp="20221128 19:01:14.922" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221128 19:01:14.876" endtime="20221128 19:01:14.923"/>
</kw>
<msg timestamp="20221128 19:01:14.923" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221128 19:01:14.876" endtime="20221128 19:01:14.924"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221128 19:01:14.924" endtime="20221128 19:01:14.925"/>
</kw>
<status status="NOT RUN" starttime="20221128 19:01:14.924" endtime="20221128 19:01:14.925"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221128 19:01:14.925" endtime="20221128 19:01:14.926"/>
</kw>
<status status="PASS" starttime="20221128 19:01:14.925" endtime="20221128 19:01:14.926"/>
</branch>
<status status="PASS" starttime="20221128 19:01:14.924" endtime="20221128 19:01:14.926"/>
</if>
<status status="PASS" starttime="20221128 19:01:14.875" endtime="20221128 19:01:14.926"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221128 19:01:14.927" endtime="20221128 19:01:14.927"/>
</kw>
<status status="PASS" starttime="20221128 19:01:14.926" endtime="20221128 19:01:14.927"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221128 19:01:14.933" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20221128 19:01:14.951" level="INFO">${rc} = 0</msg>
<msg timestamp="20221128 19:01:14.951" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221128 19:01:14.930" endtime="20221128 19:01:14.951"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221128 19:01:14.953" level="INFO">200</msg>
<status status="PASS" starttime="20221128 19:01:14.952" endtime="20221128 19:01:14.953"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221128 19:01:14.954" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221128 19:01:14.953" endtime="20221128 19:01:14.955"/>
</kw>
<status status="PASS" starttime="20221128 19:01:14.929" endtime="20221128 19:01:14.955"/>
</kw>
<msg timestamp="20221128 19:01:14.955" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221128 19:01:14.929" endtime="20221128 19:01:14.956"/>
</kw>
<msg timestamp="20221128 19:01:14.956" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221128 19:01:14.928" endtime="20221128 19:01:14.956"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221128 19:01:14.957" endtime="20221128 19:01:14.957"/>
</kw>
<status status="NOT RUN" starttime="20221128 19:01:14.957" endtime="20221128 19:01:14.957"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221128 19:01:14.957" endtime="20221128 19:01:14.958"/>
</kw>
<status status="PASS" starttime="20221128 19:01:14.957" endtime="20221128 19:01:14.958"/>
</branch>
<status status="PASS" starttime="20221128 19:01:14.956" endtime="20221128 19:01:14.958"/>
</if>
<status status="PASS" starttime="20221128 19:01:14.928" endtime="20221128 19:01:14.958"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221128 19:01:14.712" endtime="20221128 19:01:14.959"/>
</test>
<test id="s1-s2-s1-t7" name="Check normal api access" line="127">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221128 19:01:14.968" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20221128 19:01:14.972" level="INFO">${rc} = 0</msg>
<msg timestamp="20221128 19:01:14.972" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221128 19:01:14.965" endtime="20221128 19:01:14.972"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221128 19:01:14.974" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221128 19:01:14.973" endtime="20221128 19:01:14.974"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221128 19:01:14.975" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221128 19:01:14.974" endtime="20221128 19:01:14.975"/>
</kw>
<status status="PASS" starttime="20221128 19:01:14.963" endtime="20221128 19:01:14.976"/>
</kw>
<msg timestamp="20221128 19:01:14.976" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221128 19:01:14.963" endtime="20221128 19:01:14.977"/>
</kw>
<status status="PASS" starttime="20221128 19:01:14.962" endtime="20221128 19:01:14.977"/>
</kw>
<kw name="Check http return code">
<arg>${NON_ADMIN_API_ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221128 19:01:14.983" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20221128 19:01:15.011" level="INFO">${rc} = 0</msg>
<msg timestamp="20221128 19:01:15.011" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221128 19:01:14.980" endtime="20221128 19:01:15.011"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221128 19:01:15.013" level="INFO">200</msg>
<status status="PASS" starttime="20221128 19:01:15.012" endtime="20221128 19:01:15.013"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221128 19:01:15.014" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221128 19:01:15.013" endtime="20221128 19:01:15.014"/>
</kw>
<status status="PASS" starttime="20221128 19:01:14.979" endtime="20221128 19:01:15.014"/>
</kw>
<msg timestamp="20221128 19:01:15.014" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221128 19:01:14.979" endtime="20221128 19:01:15.015"/>
</kw>
<msg timestamp="20221128 19:01:15.029" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221128 19:01:14.978" endtime="20221128 19:01:15.029"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221128 19:01:15.030" endtime="20221128 19:01:15.030"/>
</kw>
<status status="NOT RUN" starttime="20221128 19:01:15.030" endtime="20221128 19:01:15.030"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221128 19:01:15.030" endtime="20221128 19:01:15.031"/>
</kw>
<status status="PASS" starttime="20221128 19:01:15.030" endtime="20221128 19:01:15.031"/>
</branch>
<status status="PASS" starttime="20221128 19:01:15.029" endtime="20221128 19:01:15.031"/>
</if>
<status status="PASS" starttime="20221128 19:01:14.977" endtime="20221128 19:01:15.031"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221128 19:01:15.032" endtime="20221128 19:01:15.033"/>
</kw>
<status status="PASS" starttime="20221128 19:01:15.032" endtime="20221128 19:01:15.033"/>
</kw>
<kw name="Check http return code">
<arg>${NON_ADMIN_API_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221128 19:01:15.041" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20221128 19:01:15.072" level="INFO">${rc} = 0</msg>
<msg timestamp="20221128 19:01:15.072" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221128 19:01:15.037" endtime="20221128 19:01:15.072"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221128 19:01:15.074" level="INFO">200</msg>
<status status="PASS" starttime="20221128 19:01:15.073" endtime="20221128 19:01:15.074"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221128 19:01:15.075" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221128 19:01:15.074" endtime="20221128 19:01:15.075"/>
</kw>
<status status="PASS" starttime="20221128 19:01:15.036" endtime="20221128 19:01:15.076"/>
</kw>
<msg timestamp="20221128 19:01:15.076" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221128 19:01:15.036" endtime="20221128 19:01:15.077"/>
</kw>
<msg timestamp="20221128 19:01:15.077" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221128 19:01:15.035" endtime="20221128 19:01:15.077"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221128 19:01:15.078" endtime="20221128 19:01:15.078"/>
</kw>
<status status="NOT RUN" starttime="20221128 19:01:15.078" endtime="20221128 19:01:15.078"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221128 19:01:15.078" endtime="20221128 19:01:15.079"/>
</kw>
<status status="PASS" starttime="20221128 19:01:15.078" endtime="20221128 19:01:15.079"/>
</branch>
<status status="PASS" starttime="20221128 19:01:15.077" endtime="20221128 19:01:15.079"/>
</if>
<status status="PASS" starttime="20221128 19:01:15.034" endtime="20221128 19:01:15.079"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221128 19:01:14.960" endtime="20221128 19:01:15.079"/>
</test>
<doc>Smoke test to start cluster with docker-compose environments.</doc>
<status status="PASS" starttime="20221128 19:00:11.376" endtime="20221128 19:01:15.082"/>
</suite>
<suite id="s1-s2-s2" name="Recon-Nssummary" source="/opt/hadoop/smoketest/recon/recon-nssummary.robot">
<test id="s1-s2-s2-t1" name="Check volume creation" line="99">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221128 19:01:15.103" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20221128 19:01:15.106" level="INFO">${rc} = 0</msg>
<msg timestamp="20221128 19:01:15.106" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221128 19:01:15.099" endtime="20221128 19:01:15.106"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221128 19:01:15.108" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221128 19:01:15.107" endtime="20221128 19:01:15.108"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221128 19:01:15.109" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221128 19:01:15.108" endtime="20221128 19:01:15.109"/>
</kw>
<status status="PASS" starttime="20221128 19:01:15.098" endtime="20221128 19:01:15.109"/>
</kw>
<msg timestamp="20221128 19:01:15.110" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221128 19:01:15.098" endtime="20221128 19:01:15.110"/>
</kw>
<status status="PASS" starttime="20221128 19:01:15.097" endtime="20221128 19:01:15.110"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221128 19:01:15.111" endtime="20221128 19:01:15.112"/>
</kw>
<status status="PASS" starttime="20221128 19:01:15.111" endtime="20221128 19:01:15.114"/>
</kw>
<kw name="Create volume">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20221128 19:01:15.116" level="INFO">${random} = nqebi</msg>
<status status="PASS" starttime="20221128 19:01:15.115" endtime="20221128 19:01:15.116"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${VOLUME}</arg>
<arg>vol-${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20221128 19:01:15.117" level="INFO">${VOLUME} = vol-nqebi</msg>
<status status="PASS" starttime="20221128 19:01:15.116" endtime="20221128 19:01:15.117"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${VOLUME}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221128 19:01:15.122" level="INFO">Running command 'ozone sh volume create /vol-nqebi 2&gt;&amp;1'.</msg>
<msg timestamp="20221128 19:01:20.175" level="INFO">${rc} = 0</msg>
<msg timestamp="20221128 19:01:20.175" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221128 19:01:15.119" endtime="20221128 19:01:20.175"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221128 19:01:20.176" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221128 19:01:20.175" endtime="20221128 19:01:20.177"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221128 19:01:20.178" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221128 19:01:20.177" endtime="20221128 19:01:20.178"/>
</kw>
<status status="PASS" starttime="20221128 19:01:15.118" endtime="20221128 19:01:20.179"/>
</kw>
<msg timestamp="20221128 19:01:20.179" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221128 19:01:15.118" endtime="20221128 19:01:20.179"/>
</kw>
<msg timestamp="20221128 19:01:20.180" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221128 19:01:15.117" endtime="20221128 19:01:20.180"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20221128 19:01:20.180" endtime="20221128 19:01:20.180"/>
</kw>
<status status="PASS" starttime="20221128 19:01:15.114" endtime="20221128 19:01:20.181"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221128 19:01:15.096" endtime="20221128 19:01:20.181"/>
</test>
<test id="s1-s2-s2-t2" name="Check bucket creation" line="104">
<kw name="Create bucket">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20221128 19:01:20.185" level="INFO">${random} = djfkk</msg>
<status status="PASS" starttime="20221128 19:01:20.184" endtime="20221128 19:01:20.185"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<arg>buc-${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20221128 19:01:20.187" level="INFO">${BUCKET} = buc-djfkk</msg>
<status status="PASS" starttime="20221128 19:01:20.186" endtime="20221128 19:01:20.187"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create -l ${BUCKET_LAYOUT} /${VOLUME}/${BUCKET}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221128 19:01:20.194" level="INFO">Running command 'ozone sh bucket create -l FILE_SYSTEM_OPTIMIZED /vol-nqebi/buc-djfkk 2&gt;&amp;1'.</msg>
<msg timestamp="20221128 19:01:24.938" level="INFO">${rc} = 0</msg>
<msg timestamp="20221128 19:01:24.939" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221128 19:01:20.190" endtime="20221128 19:01:24.939"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221128 19:01:24.940" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221128 19:01:24.939" endtime="20221128 19:01:24.940"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221128 19:01:24.941" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221128 19:01:24.940" endtime="20221128 19:01:24.941"/>
</kw>
<status status="PASS" starttime="20221128 19:01:20.190" endtime="20221128 19:01:24.941"/>
</kw>
<msg timestamp="20221128 19:01:24.942" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221128 19:01:20.189" endtime="20221128 19:01:24.943"/>
</kw>
<msg timestamp="20221128 19:01:24.943" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221128 19:01:20.188" endtime="20221128 19:01:24.943"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20221128 19:01:24.943" endtime="20221128 19:01:24.944"/>
</kw>
<status status="PASS" starttime="20221128 19:01:20.184" endtime="20221128 19:01:24.944"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221128 19:01:20.183" endtime="20221128 19:01:24.944"/>
</test>
<test id="s1-s2-s2-t3" name="Check keys creation" line="107">
<kw name="Create keys">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put /${VOLUME}/${BUCKET}/file1 README.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221128 19:01:24.953" level="INFO">Running command 'ozone sh key put /vol-nqebi/buc-djfkk/file1 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20221128 19:01:33.527" level="INFO">${rc} = 0</msg>
<msg timestamp="20221128 19:01:33.528" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221128 19:01:24.950" endtime="20221128 19:01:33.528"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221128 19:01:33.529" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221128 19:01:33.528" endtime="20221128 19:01:33.530"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221128 19:01:33.530" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221128 19:01:33.530" endtime="20221128 19:01:33.530"/>
</kw>
<status status="PASS" starttime="20221128 19:01:24.949" endtime="20221128 19:01:33.531"/>
</kw>
<msg timestamp="20221128 19:01:33.531" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221128 19:01:24.947" endtime="20221128 19:01:33.531"/>
</kw>
<msg timestamp="20221128 19:01:33.532" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221128 19:01:24.947" endtime="20221128 19:01:33.532"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20221128 19:01:33.532" endtime="20221128 19:01:33.532"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put /${VOLUME}/${BUCKET}/dir1/dir2/file2 HISTORY.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221128 19:01:33.540" level="INFO">Running command 'ozone sh key put /vol-nqebi/buc-djfkk/dir1/dir2/file2 HISTORY.md 2&gt;&amp;1'.</msg>
<msg timestamp="20221128 19:01:41.746" level="INFO">${rc} = 0</msg>
<msg timestamp="20221128 19:01:41.746" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221128 19:01:33.534" endtime="20221128 19:01:41.746"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221128 19:01:41.748" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221128 19:01:41.747" endtime="20221128 19:01:41.748"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221128 19:01:41.749" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221128 19:01:41.748" endtime="20221128 19:01:41.749"/>
</kw>
<status status="PASS" starttime="20221128 19:01:33.534" endtime="20221128 19:01:41.749"/>
</kw>
<msg timestamp="20221128 19:01:41.749" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221128 19:01:33.533" endtime="20221128 19:01:41.750"/>
</kw>
<msg timestamp="20221128 19:01:41.751" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221128 19:01:33.532" endtime="20221128 19:01:41.751"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20221128 19:01:41.751" endtime="20221128 19:01:41.751"/>
</kw>
<status status="PASS" starttime="20221128 19:01:24.946" endtime="20221128 19:01:41.752"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221128 19:01:24.945" endtime="20221128 19:01:41.752"/>
</test>
<test id="s1-s2-s2-t4" name="Check Summary api access" line="110">
<kw name="Check Access">
<arg>${SUMMARY_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221128 19:01:41.759" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20221128 19:01:41.764" level="INFO">${rc} = 0</msg>
<msg timestamp="20221128 19:01:41.764" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221128 19:01:41.756" endtime="20221128 19:01:41.764"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221128 19:01:41.765" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221128 19:01:41.764" endtime="20221128 19:01:41.765"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221128 19:01:41.766" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221128 19:01:41.765" endtime="20221128 19:01:41.766"/>
</kw>
<status status="PASS" starttime="20221128 19:01:41.755" endtime="20221128 19:01:41.766"/>
</kw>
<msg timestamp="20221128 19:01:41.767" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221128 19:01:41.755" endtime="20221128 19:01:41.767"/>
</kw>
<status status="PASS" starttime="20221128 19:01:41.755" endtime="20221128 19:01:41.767"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221128 19:01:41.774" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221128 19:01:41.817" level="INFO">${rc} = 0</msg>
<msg timestamp="20221128 19:01:41.817" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221128 19:01:41.770" endtime="20221128 19:01:41.817"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221128 19:01:41.821" level="INFO">200</msg>
<status status="PASS" starttime="20221128 19:01:41.818" endtime="20221128 19:01:41.822"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221128 19:01:41.823" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221128 19:01:41.822" endtime="20221128 19:01:41.823"/>
</kw>
<status status="PASS" starttime="20221128 19:01:41.769" endtime="20221128 19:01:41.823"/>
</kw>
<msg timestamp="20221128 19:01:41.823" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221128 19:01:41.769" endtime="20221128 19:01:41.824"/>
</kw>
<msg timestamp="20221128 19:01:41.824" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221128 19:01:41.768" endtime="20221128 19:01:41.824"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221128 19:01:41.825" endtime="20221128 19:01:41.825"/>
</kw>
<status status="NOT RUN" starttime="20221128 19:01:41.825" endtime="20221128 19:01:41.825"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221128 19:01:41.826" endtime="20221128 19:01:41.826"/>
</kw>
<status status="PASS" starttime="20221128 19:01:41.825" endtime="20221128 19:01:41.826"/>
</branch>
<status status="PASS" starttime="20221128 19:01:41.825" endtime="20221128 19:01:41.826"/>
</if>
<status status="PASS" starttime="20221128 19:01:41.767" endtime="20221128 19:01:41.826"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221128 19:01:41.827" endtime="20221128 19:01:41.827"/>
</kw>
<status status="PASS" starttime="20221128 19:01:41.827" endtime="20221128 19:01:41.828"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221128 19:01:41.834" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221128 19:01:41.853" level="INFO">${rc} = 0</msg>
<msg timestamp="20221128 19:01:41.853" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221128 19:01:41.831" endtime="20221128 19:01:41.853"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221128 19:01:41.854" level="INFO">200</msg>
<status status="PASS" starttime="20221128 19:01:41.853" endtime="20221128 19:01:41.854"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221128 19:01:41.855" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221128 19:01:41.854" endtime="20221128 19:01:41.856"/>
</kw>
<status status="PASS" starttime="20221128 19:01:41.830" endtime="20221128 19:01:41.856"/>
</kw>
<msg timestamp="20221128 19:01:41.856" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221128 19:01:41.830" endtime="20221128 19:01:41.857"/>
</kw>
<msg timestamp="20221128 19:01:41.857" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221128 19:01:41.829" endtime="20221128 19:01:41.857"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221128 19:01:41.858" endtime="20221128 19:01:41.858"/>
</kw>
<status status="NOT RUN" starttime="20221128 19:01:41.858" endtime="20221128 19:01:41.858"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221128 19:01:41.858" endtime="20221128 19:01:41.859"/>
</kw>
<status status="PASS" starttime="20221128 19:01:41.858" endtime="20221128 19:01:41.859"/>
</branch>
<status status="PASS" starttime="20221128 19:01:41.858" endtime="20221128 19:01:41.859"/>
</if>
<status status="PASS" starttime="20221128 19:01:41.828" endtime="20221128 19:01:41.859"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221128 19:01:41.861" endtime="20221128 19:01:41.861"/>
</kw>
<status status="PASS" starttime="20221128 19:01:41.859" endtime="20221128 19:01:41.862"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221128 19:01:41.867" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221128 19:01:41.885" level="INFO">${rc} = 0</msg>
<msg timestamp="20221128 19:01:41.885" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221128 19:01:41.864" endtime="20221128 19:01:41.885"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221128 19:01:41.886" level="INFO">200</msg>
<status status="PASS" starttime="20221128 19:01:41.886" endtime="20221128 19:01:41.887"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221128 19:01:41.888" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221128 19:01:41.887" endtime="20221128 19:01:41.888"/>
</kw>
<status status="PASS" starttime="20221128 19:01:41.864" endtime="20221128 19:01:41.888"/>
</kw>
<msg timestamp="20221128 19:01:41.888" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221128 19:01:41.863" endtime="20221128 19:01:41.889"/>
</kw>
<msg timestamp="20221128 19:01:41.889" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221128 19:01:41.863" endtime="20221128 19:01:41.889"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221128 19:01:41.890" endtime="20221128 19:01:41.890"/>
</kw>
<status status="NOT RUN" starttime="20221128 19:01:41.890" endtime="20221128 19:01:41.890"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221128 19:01:41.890" endtime="20221128 19:01:41.891"/>
</kw>
<status status="PASS" starttime="20221128 19:01:41.890" endtime="20221128 19:01:41.891"/>
</branch>
<status status="PASS" starttime="20221128 19:01:41.889" endtime="20221128 19:01:41.891"/>
</if>
<status status="PASS" starttime="20221128 19:01:41.862" endtime="20221128 19:01:41.891"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221128 19:01:41.892" endtime="20221128 19:01:41.892"/>
</kw>
<status status="PASS" starttime="20221128 19:01:41.891" endtime="20221128 19:01:41.892"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221128 19:01:41.898" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221128 19:01:41.918" level="INFO">${rc} = 0</msg>
<msg timestamp="20221128 19:01:41.918" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221128 19:01:41.896" endtime="20221128 19:01:41.918"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221128 19:01:41.920" level="INFO">200</msg>
<status status="PASS" starttime="20221128 19:01:41.918" endtime="20221128 19:01:41.920"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221128 19:01:41.921" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221128 19:01:41.920" endtime="20221128 19:01:41.921"/>
</kw>
<status status="PASS" starttime="20221128 19:01:41.895" endtime="20221128 19:01:41.922"/>
</kw>
<msg timestamp="20221128 19:01:41.922" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221128 19:01:41.894" endtime="20221128 19:01:41.923"/>
</kw>
<msg timestamp="20221128 19:01:41.923" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221128 19:01:41.894" endtime="20221128 19:01:41.923"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221128 19:01:41.924" endtime="20221128 19:01:41.924"/>
</kw>
<status status="NOT RUN" starttime="20221128 19:01:41.924" endtime="20221128 19:01:41.924"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221128 19:01:41.925" endtime="20221128 19:01:41.925"/>
</kw>
<status status="PASS" starttime="20221128 19:01:41.925" endtime="20221128 19:01:41.925"/>
</branch>
<status status="PASS" starttime="20221128 19:01:41.924" endtime="20221128 19:01:41.925"/>
</if>
<status status="PASS" starttime="20221128 19:01:41.893" endtime="20221128 19:01:41.926"/>
</kw>
<status status="PASS" starttime="20221128 19:01:41.754" endtime="20221128 19:01:41.926"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221128 19:01:41.753" endtime="20221128 19:01:41.926"/>
</test>
<test id="s1-s2-s2-t5" name="Check Disk Usage api access" line="113">
<kw name="Check Access">
<arg>${DISK_USAGE_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221128 19:01:41.936" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20221128 19:01:41.940" level="INFO">${rc} = 0</msg>
<msg timestamp="20221128 19:01:41.940" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221128 19:01:41.934" endtime="20221128 19:01:41.941"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221128 19:01:41.942" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221128 19:01:41.941" endtime="20221128 19:01:41.942"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221128 19:01:41.943" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221128 19:01:41.942" endtime="20221128 19:01:41.943"/>
</kw>
<status status="PASS" starttime="20221128 19:01:41.933" endtime="20221128 19:01:41.943"/>
</kw>
<msg timestamp="20221128 19:01:41.944" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221128 19:01:41.932" endtime="20221128 19:01:41.944"/>
</kw>
<status status="PASS" starttime="20221128 19:01:41.930" endtime="20221128 19:01:41.944"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221128 19:01:41.950" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221128 19:01:41.974" level="INFO">${rc} = 0</msg>
<msg timestamp="20221128 19:01:41.974" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221128 19:01:41.947" endtime="20221128 19:01:41.974"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221128 19:01:41.976" level="INFO">200</msg>
<status status="PASS" starttime="20221128 19:01:41.975" endtime="20221128 19:01:41.976"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221128 19:01:41.977" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221128 19:01:41.976" endtime="20221128 19:01:41.977"/>
</kw>
<status status="PASS" starttime="20221128 19:01:41.946" endtime="20221128 19:01:41.977"/>
</kw>
<msg timestamp="20221128 19:01:41.977" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221128 19:01:41.946" endtime="20221128 19:01:41.978"/>
</kw>
<msg timestamp="20221128 19:01:41.978" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221128 19:01:41.945" endtime="20221128 19:01:41.978"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221128 19:01:41.981" endtime="20221128 19:01:41.981"/>
</kw>
<status status="NOT RUN" starttime="20221128 19:01:41.979" endtime="20221128 19:01:41.981"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221128 19:01:41.981" endtime="20221128 19:01:41.982"/>
</kw>
<status status="PASS" starttime="20221128 19:01:41.981" endtime="20221128 19:01:41.982"/>
</branch>
<status status="PASS" starttime="20221128 19:01:41.979" endtime="20221128 19:01:41.982"/>
</if>
<status status="PASS" starttime="20221128 19:01:41.945" endtime="20221128 19:01:41.982"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221128 19:01:41.984" endtime="20221128 19:01:41.984"/>
</kw>
<status status="PASS" starttime="20221128 19:01:41.982" endtime="20221128 19:01:41.984"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221128 19:01:41.993" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221128 19:01:42.010" level="INFO">${rc} = 0</msg>
<msg timestamp="20221128 19:01:42.010" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221128 19:01:41.989" endtime="20221128 19:01:42.010"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221128 19:01:42.012" level="INFO">200</msg>
<status status="PASS" starttime="20221128 19:01:42.011" endtime="20221128 19:01:42.012"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221128 19:01:42.013" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221128 19:01:42.012" endtime="20221128 19:01:42.013"/>
</kw>
<status status="PASS" starttime="20221128 19:01:41.986" endtime="20221128 19:01:42.014"/>
</kw>
<msg timestamp="20221128 19:01:42.014" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221128 19:01:41.986" endtime="20221128 19:01:42.015"/>
</kw>
<msg timestamp="20221128 19:01:42.015" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221128 19:01:41.985" endtime="20221128 19:01:42.015"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221128 19:01:42.016" endtime="20221128 19:01:42.016"/>
</kw>
<status status="NOT RUN" starttime="20221128 19:01:42.016" endtime="20221128 19:01:42.016"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221128 19:01:42.016" endtime="20221128 19:01:42.018"/>
</kw>
<status status="PASS" starttime="20221128 19:01:42.016" endtime="20221128 19:01:42.018"/>
</branch>
<status status="PASS" starttime="20221128 19:01:42.015" endtime="20221128 19:01:42.018"/>
</if>
<status status="PASS" starttime="20221128 19:01:41.985" endtime="20221128 19:01:42.018"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221128 19:01:42.019" endtime="20221128 19:01:42.020"/>
</kw>
<status status="PASS" starttime="20221128 19:01:42.019" endtime="20221128 19:01:42.020"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221128 19:01:42.026" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221128 19:01:42.044" level="INFO">${rc} = 0</msg>
<msg timestamp="20221128 19:01:42.044" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221128 19:01:42.023" endtime="20221128 19:01:42.044"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221128 19:01:42.046" level="INFO">200</msg>
<status status="PASS" starttime="20221128 19:01:42.045" endtime="20221128 19:01:42.046"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221128 19:01:42.047" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221128 19:01:42.046" endtime="20221128 19:01:42.047"/>
</kw>
<status status="PASS" starttime="20221128 19:01:42.022" endtime="20221128 19:01:42.047"/>
</kw>
<msg timestamp="20221128 19:01:42.053" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221128 19:01:42.022" endtime="20221128 19:01:42.053"/>
</kw>
<msg timestamp="20221128 19:01:42.054" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221128 19:01:42.021" endtime="20221128 19:01:42.055"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221128 19:01:42.055" endtime="20221128 19:01:42.055"/>
</kw>
<status status="NOT RUN" starttime="20221128 19:01:42.055" endtime="20221128 19:01:42.055"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221128 19:01:42.056" endtime="20221128 19:01:42.056"/>
</kw>
<status status="PASS" starttime="20221128 19:01:42.055" endtime="20221128 19:01:42.056"/>
</branch>
<status status="PASS" starttime="20221128 19:01:42.055" endtime="20221128 19:01:42.056"/>
</if>
<status status="PASS" starttime="20221128 19:01:42.020" endtime="20221128 19:01:42.056"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221128 19:01:42.057" endtime="20221128 19:01:42.058"/>
</kw>
<status status="PASS" starttime="20221128 19:01:42.057" endtime="20221128 19:01:42.058"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221128 19:01:42.069" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221128 19:01:42.089" level="INFO">${rc} = 0</msg>
<msg timestamp="20221128 19:01:42.089" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221128 19:01:42.061" endtime="20221128 19:01:42.089"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221128 19:01:42.091" level="INFO">200</msg>
<status status="PASS" starttime="20221128 19:01:42.090" endtime="20221128 19:01:42.091"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221128 19:01:42.091" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221128 19:01:42.091" endtime="20221128 19:01:42.092"/>
</kw>
<status status="PASS" starttime="20221128 19:01:42.061" endtime="20221128 19:01:42.092"/>
</kw>
<msg timestamp="20221128 19:01:42.092" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221128 19:01:42.060" endtime="20221128 19:01:42.094"/>
</kw>
<msg timestamp="20221128 19:01:42.095" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221128 19:01:42.060" endtime="20221128 19:01:42.095"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221128 19:01:42.096" endtime="20221128 19:01:42.096"/>
</kw>
<status status="NOT RUN" starttime="20221128 19:01:42.096" endtime="20221128 19:01:42.096"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221128 19:01:42.096" endtime="20221128 19:01:42.097"/>
</kw>
<status status="PASS" starttime="20221128 19:01:42.096" endtime="20221128 19:01:42.098"/>
</branch>
<status status="PASS" starttime="20221128 19:01:42.095" endtime="20221128 19:01:42.098"/>
</if>
<status status="PASS" starttime="20221128 19:01:42.058" endtime="20221128 19:01:42.098"/>
</kw>
<status status="PASS" starttime="20221128 19:01:41.928" endtime="20221128 19:01:42.098"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221128 19:01:41.927" endtime="20221128 19:01:42.099"/>
</test>
<test id="s1-s2-s2-t6" name="Check Quota Usage api access" line="116">
<kw name="Check Access">
<arg>${QUOTA_USAGE_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221128 19:01:42.110" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20221128 19:01:42.116" level="INFO">${rc} = 0</msg>
<msg timestamp="20221128 19:01:42.116" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221128 19:01:42.107" endtime="20221128 19:01:42.116"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221128 19:01:42.118" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221128 19:01:42.117" endtime="20221128 19:01:42.118"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221128 19:01:42.119" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221128 19:01:42.118" endtime="20221128 19:01:42.119"/>
</kw>
<status status="PASS" starttime="20221128 19:01:42.105" endtime="20221128 19:01:42.119"/>
</kw>
<msg timestamp="20221128 19:01:42.119" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221128 19:01:42.105" endtime="20221128 19:01:42.120"/>
</kw>
<status status="PASS" starttime="20221128 19:01:42.104" endtime="20221128 19:01:42.120"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221128 19:01:42.129" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221128 19:01:42.150" level="INFO">${rc} = 0</msg>
<msg timestamp="20221128 19:01:42.150" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221128 19:01:42.124" endtime="20221128 19:01:42.150"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221128 19:01:42.152" level="INFO">200</msg>
<status status="PASS" starttime="20221128 19:01:42.151" endtime="20221128 19:01:42.152"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221128 19:01:42.153" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221128 19:01:42.152" endtime="20221128 19:01:42.153"/>
</kw>
<status status="PASS" starttime="20221128 19:01:42.123" endtime="20221128 19:01:42.154"/>
</kw>
<msg timestamp="20221128 19:01:42.154" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221128 19:01:42.122" endtime="20221128 19:01:42.154"/>
</kw>
<msg timestamp="20221128 19:01:42.155" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221128 19:01:42.122" endtime="20221128 19:01:42.155"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221128 19:01:42.155" endtime="20221128 19:01:42.156"/>
</kw>
<status status="NOT RUN" starttime="20221128 19:01:42.155" endtime="20221128 19:01:42.156"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221128 19:01:42.156" endtime="20221128 19:01:42.156"/>
</kw>
<status status="PASS" starttime="20221128 19:01:42.156" endtime="20221128 19:01:42.156"/>
</branch>
<status status="PASS" starttime="20221128 19:01:42.155" endtime="20221128 19:01:42.157"/>
</if>
<status status="PASS" starttime="20221128 19:01:42.121" endtime="20221128 19:01:42.157"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221128 19:01:42.158" endtime="20221128 19:01:42.158"/>
</kw>
<status status="PASS" starttime="20221128 19:01:42.157" endtime="20221128 19:01:42.158"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221128 19:01:42.169" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221128 19:01:42.191" level="INFO">${rc} = 0</msg>
<msg timestamp="20221128 19:01:42.191" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221128 19:01:42.166" endtime="20221128 19:01:42.191"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221128 19:01:42.193" level="INFO">200</msg>
<status status="PASS" starttime="20221128 19:01:42.191" endtime="20221128 19:01:42.193"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221128 19:01:42.194" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221128 19:01:42.193" endtime="20221128 19:01:42.194"/>
</kw>
<status status="PASS" starttime="20221128 19:01:42.165" endtime="20221128 19:01:42.194"/>
</kw>
<msg timestamp="20221128 19:01:42.194" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221128 19:01:42.165" endtime="20221128 19:01:42.195"/>
</kw>
<msg timestamp="20221128 19:01:42.195" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221128 19:01:42.159" endtime="20221128 19:01:42.196"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221128 19:01:42.196" endtime="20221128 19:01:42.196"/>
</kw>
<status status="NOT RUN" starttime="20221128 19:01:42.196" endtime="20221128 19:01:42.196"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221128 19:01:42.197" endtime="20221128 19:01:42.197"/>
</kw>
<status status="PASS" starttime="20221128 19:01:42.196" endtime="20221128 19:01:42.197"/>
</branch>
<status status="PASS" starttime="20221128 19:01:42.196" endtime="20221128 19:01:42.197"/>
</if>
<status status="PASS" starttime="20221128 19:01:42.158" endtime="20221128 19:01:42.197"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221128 19:01:42.198" endtime="20221128 19:01:42.198"/>
</kw>
<status status="PASS" starttime="20221128 19:01:42.198" endtime="20221128 19:01:42.199"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221128 19:01:42.205" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221128 19:01:42.227" level="INFO">${rc} = 0</msg>
<msg timestamp="20221128 19:01:42.228" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221128 19:01:42.202" endtime="20221128 19:01:42.228"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221128 19:01:42.229" level="INFO">200</msg>
<status status="PASS" starttime="20221128 19:01:42.228" endtime="20221128 19:01:42.229"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221128 19:01:42.230" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221128 19:01:42.229" endtime="20221128 19:01:42.230"/>
</kw>
<status status="PASS" starttime="20221128 19:01:42.201" endtime="20221128 19:01:42.230"/>
</kw>
<msg timestamp="20221128 19:01:42.231" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221128 19:01:42.201" endtime="20221128 19:01:42.231"/>
</kw>
<msg timestamp="20221128 19:01:42.232" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221128 19:01:42.200" endtime="20221128 19:01:42.232"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221128 19:01:42.232" endtime="20221128 19:01:42.232"/>
</kw>
<status status="NOT RUN" starttime="20221128 19:01:42.232" endtime="20221128 19:01:42.233"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221128 19:01:42.233" endtime="20221128 19:01:42.233"/>
</kw>
<status status="PASS" starttime="20221128 19:01:42.233" endtime="20221128 19:01:42.233"/>
</branch>
<status status="PASS" starttime="20221128 19:01:42.232" endtime="20221128 19:01:42.234"/>
</if>
<status status="PASS" starttime="20221128 19:01:42.199" endtime="20221128 19:01:42.234"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221128 19:01:42.235" endtime="20221128 19:01:42.235"/>
</kw>
<status status="PASS" starttime="20221128 19:01:42.234" endtime="20221128 19:01:42.236"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221128 19:01:42.241" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221128 19:01:42.261" level="INFO">${rc} = 0</msg>
<msg timestamp="20221128 19:01:42.261" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221128 19:01:42.238" endtime="20221128 19:01:42.261"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221128 19:01:42.263" level="INFO">200</msg>
<status status="PASS" starttime="20221128 19:01:42.262" endtime="20221128 19:01:42.263"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221128 19:01:42.263" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221128 19:01:42.263" endtime="20221128 19:01:42.264"/>
</kw>
<status status="PASS" starttime="20221128 19:01:42.237" endtime="20221128 19:01:42.264"/>
</kw>
<msg timestamp="20221128 19:01:42.264" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221128 19:01:42.237" endtime="20221128 19:01:42.265"/>
</kw>
<msg timestamp="20221128 19:01:42.265" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221128 19:01:42.236" endtime="20221128 19:01:42.265"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221128 19:01:42.266" endtime="20221128 19:01:42.266"/>
</kw>
<status status="NOT RUN" starttime="20221128 19:01:42.266" endtime="20221128 19:01:42.266"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221128 19:01:42.266" endtime="20221128 19:01:42.267"/>
</kw>
<status status="PASS" starttime="20221128 19:01:42.266" endtime="20221128 19:01:42.267"/>
</branch>
<status status="PASS" starttime="20221128 19:01:42.266" endtime="20221128 19:01:42.267"/>
</if>
<status status="PASS" starttime="20221128 19:01:42.236" endtime="20221128 19:01:42.267"/>
</kw>
<status status="PASS" starttime="20221128 19:01:42.103" endtime="20221128 19:01:42.267"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221128 19:01:42.101" endtime="20221128 19:01:42.268"/>
</test>
<test id="s1-s2-s2-t7" name="Check File Size Distribution api access" line="119">
<kw name="Check Access">
<arg>${FILE_SIZE_DIST_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221128 19:01:42.276" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20221128 19:01:42.281" level="INFO">${rc} = 0</msg>
<msg timestamp="20221128 19:01:42.281" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221128 19:01:42.273" endtime="20221128 19:01:42.281"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221128 19:01:42.282" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221128 19:01:42.281" endtime="20221128 19:01:42.282"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221128 19:01:42.283" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221128 19:01:42.283" endtime="20221128 19:01:42.284"/>
</kw>
<status status="PASS" starttime="20221128 19:01:42.273" endtime="20221128 19:01:42.284"/>
</kw>
<msg timestamp="20221128 19:01:42.284" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221128 19:01:42.272" endtime="20221128 19:01:42.285"/>
</kw>
<status status="PASS" starttime="20221128 19:01:42.272" endtime="20221128 19:01:42.285"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221128 19:01:42.294" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221128 19:01:42.322" level="INFO">${rc} = 0</msg>
<msg timestamp="20221128 19:01:42.322" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221128 19:01:42.290" endtime="20221128 19:01:42.322"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221128 19:01:42.323" level="INFO">200</msg>
<status status="PASS" starttime="20221128 19:01:42.322" endtime="20221128 19:01:42.324"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221128 19:01:42.324" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221128 19:01:42.324" endtime="20221128 19:01:42.324"/>
</kw>
<status status="PASS" starttime="20221128 19:01:42.288" endtime="20221128 19:01:42.325"/>
</kw>
<msg timestamp="20221128 19:01:42.325" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221128 19:01:42.287" endtime="20221128 19:01:42.326"/>
</kw>
<msg timestamp="20221128 19:01:42.326" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221128 19:01:42.286" endtime="20221128 19:01:42.327"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221128 19:01:42.327" endtime="20221128 19:01:42.327"/>
</kw>
<status status="NOT RUN" starttime="20221128 19:01:42.327" endtime="20221128 19:01:42.327"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221128 19:01:42.328" endtime="20221128 19:01:42.328"/>
</kw>
<status status="PASS" starttime="20221128 19:01:42.327" endtime="20221128 19:01:42.328"/>
</branch>
<status status="PASS" starttime="20221128 19:01:42.327" endtime="20221128 19:01:42.328"/>
</if>
<status status="PASS" starttime="20221128 19:01:42.286" endtime="20221128 19:01:42.328"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221128 19:01:42.329" endtime="20221128 19:01:42.330"/>
</kw>
<status status="PASS" starttime="20221128 19:01:42.329" endtime="20221128 19:01:42.330"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221128 19:01:42.335" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221128 19:01:42.354" level="INFO">${rc} = 0</msg>
<msg timestamp="20221128 19:01:42.354" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221128 19:01:42.332" endtime="20221128 19:01:42.354"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221128 19:01:42.358" level="INFO">200</msg>
<status status="PASS" starttime="20221128 19:01:42.356" endtime="20221128 19:01:42.358"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221128 19:01:42.359" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221128 19:01:42.358" endtime="20221128 19:01:42.359"/>
</kw>
<status status="PASS" starttime="20221128 19:01:42.332" endtime="20221128 19:01:42.359"/>
</kw>
<msg timestamp="20221128 19:01:42.359" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221128 19:01:42.331" endtime="20221128 19:01:42.360"/>
</kw>
<msg timestamp="20221128 19:01:42.361" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221128 19:01:42.331" endtime="20221128 19:01:42.361"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221128 19:01:42.362" endtime="20221128 19:01:42.362"/>
</kw>
<status status="NOT RUN" starttime="20221128 19:01:42.361" endtime="20221128 19:01:42.362"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221128 19:01:42.363" endtime="20221128 19:01:42.364"/>
</kw>
<status status="PASS" starttime="20221128 19:01:42.363" endtime="20221128 19:01:42.364"/>
</branch>
<status status="PASS" starttime="20221128 19:01:42.361" endtime="20221128 19:01:42.364"/>
</if>
<status status="PASS" starttime="20221128 19:01:42.330" endtime="20221128 19:01:42.364"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221128 19:01:42.367" endtime="20221128 19:01:42.367"/>
</kw>
<status status="PASS" starttime="20221128 19:01:42.365" endtime="20221128 19:01:42.367"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221128 19:01:42.374" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221128 19:01:42.392" level="INFO">${rc} = 0</msg>
<msg timestamp="20221128 19:01:42.392" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221128 19:01:42.370" endtime="20221128 19:01:42.392"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221128 19:01:42.394" level="INFO">200</msg>
<status status="PASS" starttime="20221128 19:01:42.393" endtime="20221128 19:01:42.394"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221128 19:01:42.395" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221128 19:01:42.394" endtime="20221128 19:01:42.395"/>
</kw>
<status status="PASS" starttime="20221128 19:01:42.369" endtime="20221128 19:01:42.395"/>
</kw>
<msg timestamp="20221128 19:01:42.395" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221128 19:01:42.369" endtime="20221128 19:01:42.396"/>
</kw>
<msg timestamp="20221128 19:01:42.396" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221128 19:01:42.368" endtime="20221128 19:01:42.397"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221128 19:01:42.397" endtime="20221128 19:01:42.397"/>
</kw>
<status status="NOT RUN" starttime="20221128 19:01:42.397" endtime="20221128 19:01:42.397"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221128 19:01:42.398" endtime="20221128 19:01:42.398"/>
</kw>
<status status="PASS" starttime="20221128 19:01:42.397" endtime="20221128 19:01:42.398"/>
</branch>
<status status="PASS" starttime="20221128 19:01:42.397" endtime="20221128 19:01:42.398"/>
</if>
<status status="PASS" starttime="20221128 19:01:42.368" endtime="20221128 19:01:42.398"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221128 19:01:42.399" endtime="20221128 19:01:42.400"/>
</kw>
<status status="PASS" starttime="20221128 19:01:42.399" endtime="20221128 19:01:42.400"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221128 19:01:42.407" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221128 19:01:42.426" level="INFO">${rc} = 0</msg>
<msg timestamp="20221128 19:01:42.426" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221128 19:01:42.403" endtime="20221128 19:01:42.426"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221128 19:01:42.428" level="INFO">200</msg>
<status status="PASS" starttime="20221128 19:01:42.426" endtime="20221128 19:01:42.428"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221128 19:01:42.428" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221128 19:01:42.428" endtime="20221128 19:01:42.429"/>
</kw>
<status status="PASS" starttime="20221128 19:01:42.402" endtime="20221128 19:01:42.429"/>
</kw>
<msg timestamp="20221128 19:01:42.429" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221128 19:01:42.401" endtime="20221128 19:01:42.430"/>
</kw>
<msg timestamp="20221128 19:01:42.430" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221128 19:01:42.401" endtime="20221128 19:01:42.430"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221128 19:01:42.431" endtime="20221128 19:01:42.431"/>
</kw>
<status status="NOT RUN" starttime="20221128 19:01:42.431" endtime="20221128 19:01:42.431"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221128 19:01:42.431" endtime="20221128 19:01:42.432"/>
</kw>
<status status="PASS" starttime="20221128 19:01:42.431" endtime="20221128 19:01:42.432"/>
</branch>
<status status="PASS" starttime="20221128 19:01:42.430" endtime="20221128 19:01:42.432"/>
</if>
<status status="PASS" starttime="20221128 19:01:42.400" endtime="20221128 19:01:42.432"/>
</kw>
<status status="PASS" starttime="20221128 19:01:42.271" endtime="20221128 19:01:42.432"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221128 19:01:42.270" endtime="20221128 19:01:42.433"/>
</test>
<test id="s1-s2-s2-t8" name="Check Recon Namespace Summary Root" line="122">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/</arg>
<arg>ROOT</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221128 19:01:42.443" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221128 19:01:42.463" level="INFO">${rc} = 0</msg>
<msg timestamp="20221128 19:01:42.463" level="INFO">${output} = {"type":"ROOT","numVolume":3,"numBucket":2,"numDir":0,"numKey":0,"status":"OK"}</msg>
<status status="PASS" starttime="20221128 19:01:42.440" endtime="20221128 19:01:42.463"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221128 19:01:42.465" level="INFO">{"type":"ROOT","numVolume":3,"numBucket":2,"numDir":0,"numKey":0,"status":"OK"}</msg>
<status status="PASS" starttime="20221128 19:01:42.464" endtime="20221128 19:01:42.465"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221128 19:01:42.466" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221128 19:01:42.465" endtime="20221128 19:01:42.466"/>
</kw>
<status status="PASS" starttime="20221128 19:01:42.439" endtime="20221128 19:01:42.467"/>
</kw>
<msg timestamp="20221128 19:01:42.467" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221128 19:01:42.439" endtime="20221128 19:01:42.468"/>
</kw>
<msg timestamp="20221128 19:01:42.468" level="INFO">${result} = {"type":"ROOT","numVolume":3,"numBucket":2,"numDir":0,"numKey":0,"status":"OK"}</msg>
<status status="PASS" starttime="20221128 19:01:42.438" endtime="20221128 19:01:42.469"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221128 19:01:42.469" endtime="20221128 19:01:42.469"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221128 19:01:42.470" endtime="20221128 19:01:42.470"/>
</kw>
<status status="PASS" starttime="20221128 19:01:42.438" endtime="20221128 19:01:42.470"/>
</kw>
<status status="PASS" starttime="20221128 19:01:42.437" endtime="20221128 19:01:42.471"/>
</kw>
<status status="PASS" starttime="20221128 19:01:42.436" endtime="20221128 19:01:42.471"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221128 19:01:42.435" endtime="20221128 19:01:42.471"/>
</test>
<test id="s1-s2-s2-t9" name="Check Recon Namespace Summary Volume" line="125">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}</arg>
<arg>VOLUME</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221128 19:01:42.482" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-nqebi 2&gt;&amp;1'.</msg>
<msg timestamp="20221128 19:01:42.499" level="INFO">${rc} = 0</msg>
<msg timestamp="20221128 19:01:42.499" level="INFO">${output} = {"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221128 19:01:42.478" endtime="20221128 19:01:42.499"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221128 19:01:42.501" level="INFO">{"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221128 19:01:42.500" endtime="20221128 19:01:42.501"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221128 19:01:42.502" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221128 19:01:42.501" endtime="20221128 19:01:42.502"/>
</kw>
<status status="PASS" starttime="20221128 19:01:42.477" endtime="20221128 19:01:42.502"/>
</kw>
<msg timestamp="20221128 19:01:42.502" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221128 19:01:42.477" endtime="20221128 19:01:42.503"/>
</kw>
<msg timestamp="20221128 19:01:42.503" level="INFO">${result} = {"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221128 19:01:42.476" endtime="20221128 19:01:42.504"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20221128 19:01:42.505" level="FAIL">'{"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20221128 19:01:42.504" endtime="20221128 19:01:42.505"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221128 19:01:42.506" endtime="20221128 19:01:42.506"/>
</kw>
<status status="FAIL" starttime="20221128 19:01:42.475" endtime="20221128 19:01:42.507"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221128 19:01:52.514" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-nqebi 2&gt;&amp;1'.</msg>
<msg timestamp="20221128 19:01:52.534" level="INFO">${rc} = 0</msg>
<msg timestamp="20221128 19:01:52.534" level="INFO">${output} = {"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221128 19:01:52.510" endtime="20221128 19:01:52.535"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221128 19:01:52.536" level="INFO">{"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221128 19:01:52.535" endtime="20221128 19:01:52.536"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221128 19:01:52.537" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221128 19:01:52.536" endtime="20221128 19:01:52.537"/>
</kw>
<status status="PASS" starttime="20221128 19:01:52.510" endtime="20221128 19:01:52.538"/>
</kw>
<msg timestamp="20221128 19:01:52.538" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221128 19:01:52.509" endtime="20221128 19:01:52.539"/>
</kw>
<msg timestamp="20221128 19:01:52.539" level="INFO">${result} = {"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221128 19:01:52.509" endtime="20221128 19:01:52.539"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20221128 19:01:52.540" level="FAIL">'{"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20221128 19:01:52.539" endtime="20221128 19:01:52.540"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221128 19:01:52.541" endtime="20221128 19:01:52.541"/>
</kw>
<status status="FAIL" starttime="20221128 19:01:52.507" endtime="20221128 19:01:52.542"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221128 19:02:02.549" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-nqebi 2&gt;&amp;1'.</msg>
<msg timestamp="20221128 19:02:02.568" level="INFO">${rc} = 0</msg>
<msg timestamp="20221128 19:02:02.568" level="INFO">${output} = {"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221128 19:02:02.546" endtime="20221128 19:02:02.568"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221128 19:02:02.570" level="INFO">{"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221128 19:02:02.569" endtime="20221128 19:02:02.570"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221128 19:02:02.571" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221128 19:02:02.570" endtime="20221128 19:02:02.571"/>
</kw>
<status status="PASS" starttime="20221128 19:02:02.545" endtime="20221128 19:02:02.572"/>
</kw>
<msg timestamp="20221128 19:02:02.572" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221128 19:02:02.545" endtime="20221128 19:02:02.572"/>
</kw>
<msg timestamp="20221128 19:02:02.573" level="INFO">${result} = {"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221128 19:02:02.544" endtime="20221128 19:02:02.573"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20221128 19:02:02.574" level="FAIL">'{"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20221128 19:02:02.573" endtime="20221128 19:02:02.574"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221128 19:02:02.575" endtime="20221128 19:02:02.575"/>
</kw>
<status status="FAIL" starttime="20221128 19:02:02.543" endtime="20221128 19:02:02.576"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221128 19:02:12.584" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-nqebi 2&gt;&amp;1'.</msg>
<msg timestamp="20221128 19:02:12.603" level="INFO">${rc} = 0</msg>
<msg timestamp="20221128 19:02:12.604" level="INFO">${output} = {"type":"VOLUME","numVolume":-1,"numBucket":1,"numDir":2,"numKey":2,"status":"OK"}</msg>
<status status="PASS" starttime="20221128 19:02:12.580" endtime="20221128 19:02:12.604"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221128 19:02:12.605" level="INFO">{"type":"VOLUME","numVolume":-1,"numBucket":1,"numDir":2,"numKey":2,"status":"OK"}</msg>
<status status="PASS" starttime="20221128 19:02:12.604" endtime="20221128 19:02:12.605"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221128 19:02:12.606" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221128 19:02:12.606" endtime="20221128 19:02:12.606"/>
</kw>
<status status="PASS" starttime="20221128 19:02:12.580" endtime="20221128 19:02:12.607"/>
</kw>
<msg timestamp="20221128 19:02:12.607" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221128 19:02:12.579" endtime="20221128 19:02:12.610"/>
</kw>
<msg timestamp="20221128 19:02:12.610" level="INFO">${result} = {"type":"VOLUME","numVolume":-1,"numBucket":1,"numDir":2,"numKey":2,"status":"OK"}</msg>
<status status="PASS" starttime="20221128 19:02:12.579" endtime="20221128 19:02:12.610"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221128 19:02:12.610" endtime="20221128 19:02:12.611"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221128 19:02:12.611" endtime="20221128 19:02:12.611"/>
</kw>
<status status="PASS" starttime="20221128 19:02:12.577" endtime="20221128 19:02:12.612"/>
</kw>
<status status="PASS" starttime="20221128 19:01:42.475" endtime="20221128 19:02:12.612"/>
</kw>
<status status="PASS" starttime="20221128 19:01:42.473" endtime="20221128 19:02:12.612"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221128 19:01:42.473" endtime="20221128 19:02:12.612"/>
</test>
<test id="s1-s2-s2-t10" name="Check Recon Namespace Summary Bucket" line="128">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}</arg>
<arg>BUCKET</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221128 19:02:12.625" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-nqebi/buc-djfkk 2&gt;&amp;1'.</msg>
<msg timestamp="20221128 19:02:12.651" level="INFO">${rc} = 0</msg>
<msg timestamp="20221128 19:02:12.651" level="INFO">${output} = {"type":"BUCKET","numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2,"status":"OK"}</msg>
<status status="PASS" starttime="20221128 19:02:12.622" endtime="20221128 19:02:12.651"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221128 19:02:12.653" level="INFO">{"type":"BUCKET","numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2,"status":"OK"}</msg>
<status status="PASS" starttime="20221128 19:02:12.652" endtime="20221128 19:02:12.653"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221128 19:02:12.654" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221128 19:02:12.654" endtime="20221128 19:02:12.654"/>
</kw>
<status status="PASS" starttime="20221128 19:02:12.621" endtime="20221128 19:02:12.655"/>
</kw>
<msg timestamp="20221128 19:02:12.655" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221128 19:02:12.621" endtime="20221128 19:02:12.656"/>
</kw>
<msg timestamp="20221128 19:02:12.656" level="INFO">${result} = {"type":"BUCKET","numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2,"status":"OK"}</msg>
<status status="PASS" starttime="20221128 19:02:12.620" endtime="20221128 19:02:12.656"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221128 19:02:12.656" endtime="20221128 19:02:12.657"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221128 19:02:12.658" endtime="20221128 19:02:12.659"/>
</kw>
<status status="PASS" starttime="20221128 19:02:12.619" endtime="20221128 19:02:12.659"/>
</kw>
<status status="PASS" starttime="20221128 19:02:12.619" endtime="20221128 19:02:12.659"/>
</kw>
<status status="PASS" starttime="20221128 19:02:12.618" endtime="20221128 19:02:12.660"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221128 19:02:12.616" endtime="20221128 19:02:12.660"/>
</test>
<test id="s1-s2-s2-t11" name="Check Recon Namespace Summary Key" line="131">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/file1</arg>
<arg>KEY</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221128 19:02:12.670" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-nqebi/buc-djfkk/file1 2&gt;&amp;1'.</msg>
<msg timestamp="20221128 19:02:12.696" level="INFO">${rc} = 0</msg>
<msg timestamp="20221128 19:02:12.696" level="INFO">${output} = {"type":"KEY","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"OK"}</msg>
<status status="PASS" starttime="20221128 19:02:12.667" endtime="20221128 19:02:12.696"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221128 19:02:12.697" level="INFO">{"type":"KEY","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"OK"}</msg>
<status status="PASS" starttime="20221128 19:02:12.697" endtime="20221128 19:02:12.698"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221128 19:02:12.699" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221128 19:02:12.698" endtime="20221128 19:02:12.699"/>
</kw>
<status status="PASS" starttime="20221128 19:02:12.666" endtime="20221128 19:02:12.699"/>
</kw>
<msg timestamp="20221128 19:02:12.699" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221128 19:02:12.666" endtime="20221128 19:02:12.700"/>
</kw>
<msg timestamp="20221128 19:02:12.701" level="INFO">${result} = {"type":"KEY","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"OK"}</msg>
<status status="PASS" starttime="20221128 19:02:12.665" endtime="20221128 19:02:12.701"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221128 19:02:12.701" endtime="20221128 19:02:12.701"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221128 19:02:12.702" endtime="20221128 19:02:12.702"/>
</kw>
<status status="PASS" starttime="20221128 19:02:12.664" endtime="20221128 19:02:12.702"/>
</kw>
<status status="PASS" starttime="20221128 19:02:12.663" endtime="20221128 19:02:12.702"/>
</kw>
<status status="PASS" starttime="20221128 19:02:12.662" endtime="20221128 19:02:12.703"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221128 19:02:12.661" endtime="20221128 19:02:12.703"/>
</test>
<test id="s1-s2-s2-t12" name="Check Recon Namespace Summary Directory" line="134">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET_LAYOUT}' == 'LEGACY'</arg>
<arg>Wait For Summary</arg>
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2/</arg>
<arg>DIRECTORY</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221128 19:02:12.705" endtime="20221128 19:02:12.706"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET_LAYOUT}' == 'FILE_SYSTEM_OPTIMIZED'</arg>
<arg>Wait For Summary</arg>
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2</arg>
<arg>DIRECTORY</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2</arg>
<arg>DIRECTORY</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221128 19:02:12.713" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-nqebi/buc-djfkk/dir1/dir2 2&gt;&amp;1'.</msg>
<msg timestamp="20221128 19:02:12.732" level="INFO">${rc} = 0</msg>
<msg timestamp="20221128 19:02:12.732" level="INFO">${output} = {"type":"DIRECTORY","numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1,"status":"OK"}</msg>
<status status="PASS" starttime="20221128 19:02:12.710" endtime="20221128 19:02:12.733"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221128 19:02:12.735" level="INFO">{"type":"DIRECTORY","numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1,"status":"OK"}</msg>
<status status="PASS" starttime="20221128 19:02:12.734" endtime="20221128 19:02:12.735"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221128 19:02:12.735" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221128 19:02:12.735" endtime="20221128 19:02:12.736"/>
</kw>
<status status="PASS" starttime="20221128 19:02:12.710" endtime="20221128 19:02:12.736"/>
</kw>
<msg timestamp="20221128 19:02:12.736" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221128 19:02:12.709" endtime="20221128 19:02:12.737"/>
</kw>
<msg timestamp="20221128 19:02:12.737" level="INFO">${result} = {"type":"DIRECTORY","numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1,"status":"OK"}</msg>
<status status="PASS" starttime="20221128 19:02:12.709" endtime="20221128 19:02:12.738"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221128 19:02:12.738" endtime="20221128 19:02:12.738"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221128 19:02:12.739" endtime="20221128 19:02:12.739"/>
</kw>
<status status="PASS" starttime="20221128 19:02:12.708" endtime="20221128 19:02:12.740"/>
</kw>
<status status="PASS" starttime="20221128 19:02:12.707" endtime="20221128 19:02:12.740"/>
</kw>
<status status="PASS" starttime="20221128 19:02:12.707" endtime="20221128 19:02:12.740"/>
</kw>
<status status="PASS" starttime="20221128 19:02:12.706" endtime="20221128 19:02:12.740"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221128 19:02:12.704" endtime="20221128 19:02:12.741"/>
</test>
<test id="s1-s2-s2-t13" name="Check Recon Namespace Disk Usage" line="138">
<kw name="Wait For Summary">
<arg>${DISK_USAGE_URL}?path=/${VOLUME}/${BUCKET}&amp;files=true&amp;replica=true</arg>
<arg>\"sizeWithReplica\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221128 19:02:12.754" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/du?path=/vol-nqebi/buc-djfkk&amp;files=true&amp;replica=true 2&gt;&amp;1'.</msg>
<msg timestamp="20221128 19:02:12.772" level="INFO">${rc} = 0</msg>
<msg timestamp="20221128 19:02:12.772" level="INFO">${output} = {"status":"OK","path":"/vol-nqebi/buc-djfkk","size":9917,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-nqebi/buc-djfkk/dir1","size":6038,"sizeWithReplica":-1,"isKey":fals...</msg>
<status status="PASS" starttime="20221128 19:02:12.749" endtime="20221128 19:02:12.772"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221128 19:02:12.774" level="INFO">{"status":"OK","path":"/vol-nqebi/buc-djfkk","size":9917,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-nqebi/buc-djfkk/dir1","size":6038,"sizeWithReplica":-1,"isKey":false}],"sizeDirectKey":3879}</msg>
<status status="PASS" starttime="20221128 19:02:12.773" endtime="20221128 19:02:12.774"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221128 19:02:12.774" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221128 19:02:12.774" endtime="20221128 19:02:12.775"/>
</kw>
<status status="PASS" starttime="20221128 19:02:12.749" endtime="20221128 19:02:12.775"/>
</kw>
<msg timestamp="20221128 19:02:12.775" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221128 19:02:12.748" endtime="20221128 19:02:12.776"/>
</kw>
<msg timestamp="20221128 19:02:12.776" level="INFO">${result} = {"status":"OK","path":"/vol-nqebi/buc-djfkk","size":9917,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-nqebi/buc-djfkk/dir1","size":6038,"sizeWithReplica":-1,"isKey":fals...</msg>
<status status="PASS" starttime="20221128 19:02:12.747" endtime="20221128 19:02:12.776"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221128 19:02:12.777" endtime="20221128 19:02:12.777"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221128 19:02:12.777" endtime="20221128 19:02:12.778"/>
</kw>
<status status="PASS" starttime="20221128 19:02:12.746" endtime="20221128 19:02:12.778"/>
</kw>
<status status="PASS" starttime="20221128 19:02:12.746" endtime="20221128 19:02:12.778"/>
</kw>
<status status="PASS" starttime="20221128 19:02:12.745" endtime="20221128 19:02:12.778"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221128 19:02:12.743" endtime="20221128 19:02:12.779"/>
</test>
<test id="s1-s2-s2-t14" name="Check Recon Namespace Volume Quota Usage" line="141">
<kw name="Wait For Summary">
<arg>${QUOTA_USAGE_URL}?path=/${VOLUME}</arg>
<arg>\"used\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221128 19:02:12.788" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/quota?path=/vol-nqebi 2&gt;&amp;1'.</msg>
<msg timestamp="20221128 19:02:12.809" level="INFO">${rc} = 0</msg>
<msg timestamp="20221128 19:02:12.809" level="INFO">${output} = {"allowed":-1,"used":9917,"status":"OK"}</msg>
<status status="PASS" starttime="20221128 19:02:12.785" endtime="20221128 19:02:12.809"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221128 19:02:12.812" level="INFO">{"allowed":-1,"used":9917,"status":"OK"}</msg>
<status status="PASS" starttime="20221128 19:02:12.810" endtime="20221128 19:02:12.812"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221128 19:02:12.813" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221128 19:02:12.812" endtime="20221128 19:02:12.813"/>
</kw>
<status status="PASS" starttime="20221128 19:02:12.784" endtime="20221128 19:02:12.813"/>
</kw>
<msg timestamp="20221128 19:02:12.813" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221128 19:02:12.784" endtime="20221128 19:02:12.814"/>
</kw>
<msg timestamp="20221128 19:02:12.814" level="INFO">${result} = {"allowed":-1,"used":9917,"status":"OK"}</msg>
<status status="PASS" starttime="20221128 19:02:12.783" endtime="20221128 19:02:12.814"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221128 19:02:12.815" endtime="20221128 19:02:12.815"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221128 19:02:12.815" endtime="20221128 19:02:12.816"/>
</kw>
<status status="PASS" starttime="20221128 19:02:12.783" endtime="20221128 19:02:12.816"/>
</kw>
<status status="PASS" starttime="20221128 19:02:12.782" endtime="20221128 19:02:12.816"/>
</kw>
<status status="PASS" starttime="20221128 19:02:12.781" endtime="20221128 19:02:12.817"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221128 19:02:12.780" endtime="20221128 19:02:12.817"/>
</test>
<test id="s1-s2-s2-t15" name="Check Recon Namespace Bucket Quota Usage" line="144">
<kw name="Wait For Summary">
<arg>${QUOTA_USAGE_URL}?path=/${VOLUME}/${BUCKET}</arg>
<arg>\"used\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221128 19:02:12.831" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/quota?path=/vol-nqebi/buc-djfkk 2&gt;&amp;1'.</msg>
<msg timestamp="20221128 19:02:12.849" level="INFO">${rc} = 0</msg>
<msg timestamp="20221128 19:02:12.849" level="INFO">${output} = {"allowed":-1,"used":9917,"status":"OK"}</msg>
<status status="PASS" starttime="20221128 19:02:12.825" endtime="20221128 19:02:12.849"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221128 19:02:12.851" level="INFO">{"allowed":-1,"used":9917,"status":"OK"}</msg>
<status status="PASS" starttime="20221128 19:02:12.850" endtime="20221128 19:02:12.851"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221128 19:02:12.852" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221128 19:02:12.851" endtime="20221128 19:02:12.852"/>
</kw>
<status status="PASS" starttime="20221128 19:02:12.823" endtime="20221128 19:02:12.852"/>
</kw>
<msg timestamp="20221128 19:02:12.853" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221128 19:02:12.823" endtime="20221128 19:02:12.853"/>
</kw>
<msg timestamp="20221128 19:02:12.854" level="INFO">${result} = {"allowed":-1,"used":9917,"status":"OK"}</msg>
<status status="PASS" starttime="20221128 19:02:12.822" endtime="20221128 19:02:12.854"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221128 19:02:12.854" endtime="20221128 19:02:12.854"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221128 19:02:12.854" endtime="20221128 19:02:12.855"/>
</kw>
<status status="PASS" starttime="20221128 19:02:12.821" endtime="20221128 19:02:12.855"/>
</kw>
<status status="PASS" starttime="20221128 19:02:12.821" endtime="20221128 19:02:12.855"/>
</kw>
<status status="PASS" starttime="20221128 19:02:12.820" endtime="20221128 19:02:12.855"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221128 19:02:12.818" endtime="20221128 19:02:12.856"/>
</test>
<test id="s1-s2-s2-t16" name="Check Recon Namespace File Size Distribution Root" line="147">
<kw name="Wait For Summary">
<arg>${FILE_SIZE_DIST_URL}?path=/</arg>
<arg>\"dist\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221128 19:02:12.867" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221128 19:02:12.894" level="INFO">${rc} = 0</msg>
<msg timestamp="20221128 19:02:12.894" level="INFO">${output} = {"dist":[0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20221128 19:02:12.862" endtime="20221128 19:02:12.895"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221128 19:02:12.897" level="INFO">{"dist":[0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20221128 19:02:12.895" endtime="20221128 19:02:12.897"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221128 19:02:12.898" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221128 19:02:12.897" endtime="20221128 19:02:12.898"/>
</kw>
<status status="PASS" starttime="20221128 19:02:12.862" endtime="20221128 19:02:12.898"/>
</kw>
<msg timestamp="20221128 19:02:12.898" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221128 19:02:12.861" endtime="20221128 19:02:12.899"/>
</kw>
<msg timestamp="20221128 19:02:12.899" level="INFO">${result} = {"dist":[0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20221128 19:02:12.861" endtime="20221128 19:02:12.899"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221128 19:02:12.900" endtime="20221128 19:02:12.900"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221128 19:02:12.901" endtime="20221128 19:02:12.901"/>
</kw>
<status status="PASS" starttime="20221128 19:02:12.860" endtime="20221128 19:02:12.902"/>
</kw>
<status status="PASS" starttime="20221128 19:02:12.859" endtime="20221128 19:02:12.902"/>
</kw>
<status status="PASS" starttime="20221128 19:02:12.858" endtime="20221128 19:02:12.902"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221128 19:02:12.857" endtime="20221128 19:02:12.902"/>
</test>
<doc>Smoke test for Recon Namespace Summary Endpoint for FILE_SYSTEM_OPTIMIZED buckets.</doc>
<status status="PASS" starttime="20221128 19:01:15.085" endtime="20221128 19:02:12.904"/>
</suite>
<status status="PASS" starttime="20221128 19:00:11.340" endtime="20221128 19:02:12.908"/>
</suite>
<suite id="s1-s3" name="Loaddata" source="/opt/hadoop/smoketest/topology/loaddata.robot">
<test id="s1-s3-t1" name="Create a volume, bucket and key" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create topvol1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221128 19:02:19.537" level="INFO">Running command 'ozone sh volume create topvol1 2&gt;&amp;1'.</msg>
<msg timestamp="20221128 19:02:24.543" level="INFO">${rc} = 0</msg>
<msg timestamp="20221128 19:02:24.543" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221128 19:02:19.532" endtime="20221128 19:02:24.543"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221128 19:02:24.546" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221128 19:02:24.545" endtime="20221128 19:02:24.546"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221128 19:02:24.547" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221128 19:02:24.546" endtime="20221128 19:02:24.547"/>
</kw>
<status status="PASS" starttime="20221128 19:02:19.532" endtime="20221128 19:02:24.548"/>
</kw>
<msg timestamp="20221128 19:02:24.548" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221128 19:02:19.531" endtime="20221128 19:02:24.549"/>
</kw>
<msg timestamp="20221128 19:02:24.550" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221128 19:02:19.531" endtime="20221128 19:02:24.550"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20221128 19:02:24.550" endtime="20221128 19:02:24.551"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /topvol1/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221128 19:02:24.557" level="INFO">Running command 'ozone sh bucket create /topvol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20221128 19:02:29.659" level="INFO">${rc} = 0</msg>
<msg timestamp="20221128 19:02:29.659" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221128 19:02:24.553" endtime="20221128 19:02:29.659"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221128 19:02:29.660" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221128 19:02:29.660" endtime="20221128 19:02:29.661"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221128 19:02:29.662" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221128 19:02:29.661" endtime="20221128 19:02:29.662"/>
</kw>
<status status="PASS" starttime="20221128 19:02:24.552" endtime="20221128 19:02:29.663"/>
</kw>
<msg timestamp="20221128 19:02:29.663" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221128 19:02:24.552" endtime="20221128 19:02:29.664"/>
</kw>
<msg timestamp="20221128 19:02:29.664" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221128 19:02:24.551" endtime="20221128 19:02:29.664"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20221128 19:02:29.664" endtime="20221128 19:02:29.665"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221128 19:02:29.670" level="INFO">Running command 'ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20221128 19:02:37.898" level="INFO">${rc} = 0</msg>
<msg timestamp="20221128 19:02:37.898" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221128 19:02:29.666" endtime="20221128 19:02:37.898"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221128 19:02:37.900" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221128 19:02:37.899" endtime="20221128 19:02:37.900"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221128 19:02:37.901" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221128 19:02:37.901" endtime="20221128 19:02:37.901"/>
</kw>
<status status="PASS" starttime="20221128 19:02:29.666" endtime="20221128 19:02:37.902"/>
</kw>
<msg timestamp="20221128 19:02:37.902" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221128 19:02:29.665" endtime="20221128 19:02:37.902"/>
</kw>
<msg timestamp="20221128 19:02:37.903" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221128 19:02:29.665" endtime="20221128 19:02:37.903"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20221128 19:02:37.903" endtime="20221128 19:02:37.904"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221128 19:02:19.529" endtime="20221128 19:02:37.905"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20221128 19:02:19.463" endtime="20221128 19:02:37.907"/>
</suite>
<suite id="s1-s4" name="readdata-first-half" source="/opt/hadoop/smoketest/topology/readdata.robot">
<test id="s1-s4-t1" name="Read data from previously created key" line="27">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20221128 19:02:50.047" level="INFO">${random} = 19286</msg>
<status status="PASS" starttime="20221128 19:02:50.045" endtime="20221128 19:02:50.047"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221128 19:02:50.056" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-19286 2&gt;&amp;1'.</msg>
<msg timestamp="20221128 19:02:58.780" level="INFO">${rc} = 0</msg>
<msg timestamp="20221128 19:02:58.780" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221128 19:02:50.049" endtime="20221128 19:02:58.780"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221128 19:02:58.782" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221128 19:02:58.781" endtime="20221128 19:02:58.782"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221128 19:02:58.783" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221128 19:02:58.782" endtime="20221128 19:02:58.783"/>
</kw>
<status status="PASS" starttime="20221128 19:02:50.048" endtime="20221128 19:02:58.783"/>
</kw>
<msg timestamp="20221128 19:02:58.784" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221128 19:02:50.048" endtime="20221128 19:02:58.785"/>
</kw>
<msg timestamp="20221128 19:02:58.786" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221128 19:02:50.047" endtime="20221128 19:02:58.786"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20221128 19:02:58.786" endtime="20221128 19:02:58.787"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221128 19:02:50.044" endtime="20221128 19:02:58.787"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20221128 19:02:49.956" endtime="20221128 19:02:58.789"/>
</suite>
<suite id="s1-s5" name="readdata-second-half" source="/opt/hadoop/smoketest/topology/readdata.robot">
<test id="s1-s5-t1" name="Read data from previously created key" line="27">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20221128 19:03:58.851" level="INFO">${random} = 69635</msg>
<status status="PASS" starttime="20221128 19:03:58.850" endtime="20221128 19:03:58.851"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221128 19:03:58.858" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-69635 2&gt;&amp;1'.</msg>
<msg timestamp="20221128 19:04:28.679" level="INFO">${rc} = 0</msg>
<msg timestamp="20221128 19:04:28.679" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221128 19:03:58.853" endtime="20221128 19:04:28.679"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221128 19:04:28.680" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221128 19:04:28.680" endtime="20221128 19:04:28.681"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221128 19:04:28.681" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221128 19:04:28.681" endtime="20221128 19:04:28.681"/>
</kw>
<status status="PASS" starttime="20221128 19:03:58.852" endtime="20221128 19:04:28.682"/>
</kw>
<msg timestamp="20221128 19:04:28.682" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221128 19:03:58.852" endtime="20221128 19:04:28.683"/>
</kw>
<msg timestamp="20221128 19:04:28.684" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221128 19:03:58.851" endtime="20221128 19:04:28.684"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20221128 19:04:28.684" endtime="20221128 19:04:28.684"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221128 19:03:58.849" endtime="20221128 19:04:28.685"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20221128 19:03:58.769" endtime="20221128 19:04:28.686"/>
</suite>
<suite id="s1-s6" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s6-t1" name="Check webui static resources" line="29">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221128 18:59:13.513" endtime="20221128 18:59:13.514"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -s -I http://${SCM}:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221128 18:59:13.521" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20221128 18:59:13.656" level="INFO">${rc} = 0</msg>
<msg timestamp="20221128 18:59:13.656" level="INFO">${output} = HTTP/1.1 200 OK
Date: Mon, 28 Nov 2022 18:59:13 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Mon, 28 Nov 2022 18:30:04 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20221128 18:59:13.516" endtime="20221128 18:59:13.656"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221128 18:59:13.657" level="INFO">HTTP/1.1 200 OK
Date: Mon, 28 Nov 2022 18:59:13 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Mon, 28 Nov 2022 18:30:04 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20221128 18:59:13.657" endtime="20221128 18:59:13.658"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221128 18:59:13.658" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221128 18:59:13.658" endtime="20221128 18:59:13.658"/>
</kw>
<status status="PASS" starttime="20221128 18:59:13.515" endtime="20221128 18:59:13.659"/>
</kw>
<msg timestamp="20221128 18:59:13.659" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221128 18:59:13.515" endtime="20221128 18:59:13.660"/>
</kw>
<msg timestamp="20221128 18:59:13.661" level="INFO">${result} = HTTP/1.1 200 OK
Date: Mon, 28 Nov 2022 18:59:13 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Mon, 28 Nov 2022 18:30:04 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20221128 18:59:13.514" endtime="20221128 18:59:13.661"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221128 18:59:13.661" endtime="20221128 18:59:13.663"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221128 18:59:13.512" endtime="20221128 18:59:13.664"/>
</test>
<test id="s1-s6-t2" name="Basic Freon smoketest" line="34">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221128 18:59:13.670" endtime="20221128 18:59:13.670"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>10</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20221128 18:59:13.673" level="INFO">${random} = Wg7YkUmiRq</msg>
<status status="PASS" starttime="20221128 18:59:13.671" endtime="20221128 18:59:13.673"/>
</kw>
<kw name="Freon OCKG" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221128 18:59:13.686" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p Wg7YkUmiRq  2&gt;&amp;1'.</msg>
<msg timestamp="20221128 18:59:26.627" level="INFO">${rc} = 0</msg>
<msg timestamp="20221128 18:59:26.627" level="INFO">${output} = 2022-11-28 18:59:16,811 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-28 18:59:17,072 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221128 18:59:13.681" endtime="20221128 18:59:26.628"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221128 18:59:26.630" level="INFO">2022-11-28 18:59:16,811 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-28 18:59:17,072 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-11-28 18:59:17,087 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-11-28 18:59:17,452 [main] INFO freon.BaseFreonGenerator: Executing test with prefix Wg7YkUmiRq and number-of-tests 1
2022-11-28 18:59:17,554 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-28 18:59:18,559 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-28 18:59:19,237 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2022-11-28 18:59:19,530 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false 
2022-11-28 18:59:19,640 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-28 18:59:20,641 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-28 18:59:21,526 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-11-28 18:59:21,641 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-28 18:59:21,958 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-11-28 18:59:22,642 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-28 18:59:23,642 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-28 18:59:24,643 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-28 18:59:25,649 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-11-28 18:59:26,242 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=5838.20113, max=5838.20113, mean=5838.20113, stddev=0.0, median=5838.20113, p75=5838.20113, p95=5838.20113, p98=5838.20113, p99=5838.20113, p999=5838.20113, mean_rate=0.15410007235892176, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-11-28 18:59:26,244 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 9
2022-11-28 18:59:26,245 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-11-28 18:59:26,245 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20221128 18:59:26.628" endtime="20221128 18:59:26.630"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221128 18:59:26.631" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221128 18:59:26.630" endtime="20221128 18:59:26.631"/>
</kw>
<status status="PASS" starttime="20221128 18:59:13.680" endtime="20221128 18:59:26.632"/>
</kw>
<msg timestamp="20221128 18:59:26.632" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221128 18:59:13.679" endtime="20221128 18:59:26.635"/>
</kw>
<msg timestamp="20221128 18:59:26.635" level="INFO">${result} = 2022-11-28 18:59:16,811 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-28 18:59:17,072 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221128 18:59:13.677" endtime="20221128 18:59:26.635"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221128 18:59:26.636" endtime="20221128 18:59:26.636"/>
</kw>
<status status="PASS" starttime="20221128 18:59:13.673" endtime="20221128 18:59:26.637"/>
</kw>
<kw name="Freon OCKV" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221128 18:59:26.646" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p Wg7YkUmiRq  2&gt;&amp;1'.</msg>
<msg timestamp="20221128 18:59:37.737" level="INFO">${rc} = 0</msg>
<msg timestamp="20221128 18:59:37.737" level="INFO">${output} = 2022-11-28 18:59:30,261 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-28 18:59:30,557 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221128 18:59:26.641" endtime="20221128 18:59:37.737"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221128 18:59:37.739" level="INFO">2022-11-28 18:59:30,261 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-28 18:59:30,557 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-11-28 18:59:30,557 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-11-28 18:59:30,808 [main] INFO freon.BaseFreonGenerator: Executing test with prefix Wg7YkUmiRq and number-of-tests 1
2022-11-28 18:59:30,920 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-28 18:59:31,929 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-28 18:59:32,930 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-28 18:59:33,930 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-28 18:59:34,449 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-11-28 18:59:34,934 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-28 18:59:35,934 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-28 18:59:36,935 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-11-28 18:59:37,296 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=72.510842, max=72.510842, mean=72.510842, stddev=0.0, median=72.510842, p75=72.510842, p95=72.510842, p98=72.510842, p99=72.510842, p999=72.510842, mean_rate=0.8865470461030812, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-11-28 18:59:37,298 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 6
2022-11-28 18:59:37,299 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-11-28 18:59:37,299 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20221128 18:59:37.738" endtime="20221128 18:59:37.739"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221128 18:59:37.740" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221128 18:59:37.739" endtime="20221128 18:59:37.740"/>
</kw>
<status status="PASS" starttime="20221128 18:59:26.640" endtime="20221128 18:59:37.740"/>
</kw>
<msg timestamp="20221128 18:59:37.741" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221128 18:59:26.639" endtime="20221128 18:59:37.741"/>
</kw>
<msg timestamp="20221128 18:59:37.742" level="INFO">${result} = 2022-11-28 18:59:30,261 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-28 18:59:30,557 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221128 18:59:26.639" endtime="20221128 18:59:37.742"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221128 18:59:37.742" endtime="20221128 18:59:37.743"/>
</kw>
<status status="PASS" starttime="20221128 18:59:26.637" endtime="20221128 18:59:37.743"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221128 18:59:13.667" endtime="20221128 18:59:37.743"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20221128 18:59:13.436" endtime="20221128 18:59:37.745"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="223169"/>
</suite>
<statistics>
<total>
<stat pass="32" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="32" fail="0" skip="0" id="s1" name="ozone-topology">ozone-topology</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1" name="Cli">ozone-topology.Cli</stat>
<stat pass="23" fail="0" skip="0" id="s1-s2" name="Recon">ozone-topology.Recon</stat>
<stat pass="7" fail="0" skip="0" id="s1-s2-s1" name="Recon-Api">ozone-topology.Recon.Recon-Api</stat>
<stat pass="16" fail="0" skip="0" id="s1-s2-s2" name="Recon-Nssummary">ozone-topology.Recon.Recon-Nssummary</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3" name="Loaddata">ozone-topology.Loaddata</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="readdata-first-half">ozone-topology.readdata-first-half</stat>
<stat pass="1" fail="0" skip="0" id="s1-s5" name="readdata-second-half">ozone-topology.readdata-second-half</stat>
<stat pass="2" fail="0" skip="0" id="s1-s6" name="Basic">ozone-topology.Basic</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
