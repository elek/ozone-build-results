<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.0.1 (Python 3.8.10 on linux)" generated="20221128 18:56:53.635" rpa="false" schemaversion="3">
<suite id="s1" name="ozone-om-prepare" source="/opt/hadoop/smoketest/omha/om-prepare.robot">
<kw name="Create Specific OM data for prepare" type="SETUP">
<kw name="Freon OCKG" library="freon">
<arg>prefix=om-prepare</arg>
<arg>n=100</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221128 18:50:28.700" level="INFO">Running command 'ozone freon ockg --om-service-id=omservice -t 1 -n100 -p om-prepare  2&gt;&amp;1'.</msg>
<msg timestamp="20221128 18:50:52.321" level="INFO">${rc} = 0</msg>
<msg timestamp="20221128 18:50:52.321" level="INFO">${output} = 2022-11-28 18:50:30,870 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-28 18:50:31,107 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221128 18:50:28.693" endtime="20221128 18:50:52.322"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221128 18:50:52.324" level="INFO">2022-11-28 18:50:30,870 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-28 18:50:31,107 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-11-28 18:50:31,107 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-11-28 18:50:31,421 [main] INFO freon.BaseFreonGenerator: Executing test with prefix om-prepare and number-of-tests 100
2022-11-28 18:50:31,532 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-11-28 18:50:32,509 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2022-11-28 18:50:32,533 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-11-28 18:50:32,732 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false 
2022-11-28 18:50:33,547 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-11-28 18:50:34,381 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-11-28 18:50:34,550 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-11-28 18:50:34,701 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-11-28 18:50:35,550 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-11-28 18:50:36,551 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-11-28 18:50:37,556 [Thread-3] INFO freon.ProgressBar: Progress: 3.00 % (3 out of 100)
2022-11-28 18:50:38,557 [Thread-3] INFO freon.ProgressBar: Progress: 6.00 % (6 out of 100)
2022-11-28 18:50:39,564 [Thread-3] INFO freon.ProgressBar: Progress: 12.00 % (12 out of 100)
2022-11-28 18:50:40,564 [Thread-3] INFO freon.ProgressBar: Progress: 17.00 % (17 out of 100)
2022-11-28 18:50:41,566 [Thread-3] INFO freon.ProgressBar: Progress: 23.00 % (23 out of 100)
2022-11-28 18:50:42,567 [Thread-3] INFO freon.ProgressBar: Progress: 29.00 % (29 out of 100)
2022-11-28 18:50:43,569 [Thread-3] INFO freon.ProgressBar: Progress: 36.00 % (36 out of 100)
2022-11-28 18:50:44,575 [Thread-3] INFO freon.ProgressBar: Progress: 43.00 % (43 out of 100)
2022-11-28 18:50:45,582 [Thread-3] INFO freon.ProgressBar: Progress: 51.00 % (51 out of 100)
2022-11-28 18:50:46,582 [Thread-3] INFO freon.ProgressBar: Progress: 59.00 % (59 out of 100)
2022-11-28 18:50:47,583 [Thread-3] INFO freon.ProgressBar: Progress: 67.00 % (67 out of 100)
2022-11-28 18:50:48,585 [Thread-3] INFO freon.ProgressBar: Progress: 76.00 % (76 out of 100)
2022-11-28 18:50:49,585 [Thread-3] INFO freon.ProgressBar: Progress: 86.00 % (86 out of 100)
2022-11-28 18:50:50,586 [Thread-3] INFO freon.ProgressBar: Progress: 95.00 % (95 out of 100)
2022-11-28 18:50:51,587 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2022-11-28 18:50:51,962 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=100, min=78.258741, max=4047.945991, mean=174.95667837446626, stddev=368.8093031874634, median=127.055126, p75=157.926781, p95=228.261509, p98=333.109497, p99=501.558899, p999=4047.945991, mean_rate=5.237262387307268, m1=1.5434936633624181, m5=0.800282299182412, m15=0.6674363879196157, rate_unit=events/second, duration_unit=milliseconds
2022-11-28 18:50:51,963 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 20
2022-11-28 18:50:51,964 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-11-28 18:50:51,964 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20221128 18:50:52.322" endtime="20221128 18:50:52.324"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221128 18:50:52.325" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221128 18:50:52.324" endtime="20221128 18:50:52.325"/>
</kw>
<status status="PASS" starttime="20221128 18:50:28.693" endtime="20221128 18:50:52.325"/>
</kw>
<msg timestamp="20221128 18:50:52.326" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221128 18:50:28.693" endtime="20221128 18:50:52.329"/>
</kw>
<msg timestamp="20221128 18:50:52.331" level="INFO">${result} = 2022-11-28 18:50:30,870 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-28 18:50:31,107 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221128 18:50:28.692" endtime="20221128 18:50:52.331"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221128 18:50:52.331" endtime="20221128 18:50:52.332"/>
</kw>
<status status="PASS" starttime="20221128 18:50:28.690" endtime="20221128 18:50:52.332"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20221128 18:50:52.333" level="INFO">${random} = 45596</msg>
<status status="PASS" starttime="20221128 18:50:52.332" endtime="20221128 18:50:52.333"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20221128 18:50:52.335" level="INFO">${volume_name} = 45596-volume-for-prepare</msg>
<status status="PASS" starttime="20221128 18:50:52.333" endtime="20221128 18:50:52.335"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${bucket_name}</arg>
<arg>${random}-bucket-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20221128 18:50:52.337" level="INFO">${bucket_name} = 45596-bucket-for-prepare</msg>
<status status="PASS" starttime="20221128 18:50:52.335" endtime="20221128 18:50:52.337"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create /${volume_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221128 18:50:52.342" level="INFO">Running command 'ozone sh volume create /45596-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20221128 18:50:55.480" level="INFO">${rc} = 0</msg>
<msg timestamp="20221128 18:50:55.480" level="INFO">${output} = </msg>
<status status="PASS" starttime="20221128 18:50:52.339" endtime="20221128 18:50:55.480"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221128 18:50:55.481" level="INFO"/>
<status status="PASS" starttime="20221128 18:50:55.481" endtime="20221128 18:50:55.481"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221128 18:50:55.482" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221128 18:50:55.482" endtime="20221128 18:50:55.482"/>
</kw>
<status status="PASS" starttime="20221128 18:50:52.338" endtime="20221128 18:50:55.483"/>
</kw>
<msg timestamp="20221128 18:50:55.483" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221128 18:50:52.338" endtime="20221128 18:50:55.483"/>
</kw>
<status status="PASS" starttime="20221128 18:50:52.337" endtime="20221128 18:50:55.484"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume_name}/${bucket_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221128 18:50:55.488" level="INFO">Running command 'ozone sh bucket create /45596-volume-for-prepare/45596-bucket-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20221128 18:50:58.526" level="INFO">${rc} = 0</msg>
<msg timestamp="20221128 18:50:58.526" level="INFO">${output} = </msg>
<status status="PASS" starttime="20221128 18:50:55.485" endtime="20221128 18:50:58.526"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221128 18:50:58.527" level="INFO"/>
<status status="PASS" starttime="20221128 18:50:58.526" endtime="20221128 18:50:58.527"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221128 18:50:58.528" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221128 18:50:58.527" endtime="20221128 18:50:58.528"/>
</kw>
<status status="PASS" starttime="20221128 18:50:55.485" endtime="20221128 18:50:58.528"/>
</kw>
<msg timestamp="20221128 18:50:58.528" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221128 18:50:55.484" endtime="20221128 18:50:58.529"/>
</kw>
<status status="PASS" starttime="20221128 18:50:55.484" endtime="20221128 18:50:58.529"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221128 18:50:58.535" level="INFO">Running command 'ozone sh key put /45596-volume-for-prepare/45596-bucket-for-prepare/prepare-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20221128 18:51:05.245" level="INFO">${rc} = 0</msg>
<msg timestamp="20221128 18:51:05.246" level="INFO">${output} = </msg>
<status status="PASS" starttime="20221128 18:50:58.532" endtime="20221128 18:51:05.246"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221128 18:51:05.247" level="INFO"/>
<status status="PASS" starttime="20221128 18:51:05.246" endtime="20221128 18:51:05.247"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221128 18:51:05.248" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221128 18:51:05.247" endtime="20221128 18:51:05.248"/>
</kw>
<status status="PASS" starttime="20221128 18:50:58.531" endtime="20221128 18:51:05.248"/>
</kw>
<msg timestamp="20221128 18:51:05.248" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221128 18:50:58.530" endtime="20221128 18:51:05.249"/>
</kw>
<status status="PASS" starttime="20221128 18:50:58.529" endtime="20221128 18:51:05.249"/>
</kw>
<status status="PASS" starttime="20221128 18:50:28.690" endtime="20221128 18:51:05.249"/>
</kw>
<test id="s1-t1" name="Prepare Ozone Manager" line="39">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221128 18:51:05.252" endtime="20221128 18:51:05.252"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om prepare -id=omservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221128 18:51:05.258" level="INFO">Running command 'ozone admin om prepare -id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20221128 18:56:05.251" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20221128 18:51:05.254" endtime="20221128 18:56:05.251"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20221128 18:56:05.251" endtime="20221128 18:56:05.252"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20221128 18:56:05.252" endtime="20221128 18:56:05.252"/>
</kw>
<status status="FAIL" starttime="20221128 18:51:05.253" endtime="20221128 18:56:05.252"/>
</kw>
<msg timestamp="20221128 18:56:05.253" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20221128 18:51:05.253" endtime="20221128 18:56:05.253"/>
</kw>
<status status="FAIL" starttime="20221128 18:51:05.252" endtime="20221128 18:56:05.254"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20221128 18:56:05.254" endtime="20221128 18:56:05.254"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20221128 18:51:05.250" endtime="20221128 18:56:05.255">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-t2" name="Checks if the expected data is present in OM" line="43">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221128 18:56:05.257" endtime="20221128 18:56:05.258"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221128 18:56:05.263" level="INFO">Running command 'ozone sh key info /45596-volume-for-prepare/45596-bucket-for-prepare/prepare-key 2&gt;&amp;1'.</msg>
<msg timestamp="20221128 18:56:09.146" level="INFO">${rc} = 0</msg>
<msg timestamp="20221128 18:56:09.146" level="INFO">${output} = {
  "volumeName" : "45596-volume-for-prepare",
  "bucketName" : "45596-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17539,
  "creationTime" : "2022-11-28T18:51:02.185Z",
  "modificati...</msg>
<status status="PASS" starttime="20221128 18:56:05.260" endtime="20221128 18:56:09.146"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221128 18:56:09.147" level="INFO">{
  "volumeName" : "45596-volume-for-prepare",
  "bucketName" : "45596-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17539,
  "creationTime" : "2022-11-28T18:51:02.185Z",
  "modificationTime" : "2022-11-28T18:51:04.853Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "ozoneKeyLocations" : [ {
    "containerID" : 2,
    "localID" : 109611004723200101,
    "length" : 17539,
    "offset" : 0,
    "keyOffset" : 0
  } ]
}</msg>
<status status="PASS" starttime="20221128 18:56:09.146" endtime="20221128 18:56:09.147"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221128 18:56:09.148" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221128 18:56:09.148" endtime="20221128 18:56:09.148"/>
</kw>
<status status="PASS" starttime="20221128 18:56:05.259" endtime="20221128 18:56:09.149"/>
</kw>
<msg timestamp="20221128 18:56:09.149" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221128 18:56:05.259" endtime="20221128 18:56:09.149"/>
</kw>
<msg timestamp="20221128 18:56:09.150" level="INFO">${result} = {
  "volumeName" : "45596-volume-for-prepare",
  "bucketName" : "45596-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17539,
  "creationTime" : "2022-11-28T18:51:02.185Z",
  "modificati...</msg>
<status status="PASS" starttime="20221128 18:56:05.258" endtime="20221128 18:56:09.150"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"name\" : \"prepare-key\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221128 18:56:09.150" endtime="20221128 18:56:09.150"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221128 18:56:05.256" endtime="20221128 18:56:09.151"/>
</test>
<test id="s1-t3" name="Test write operation fails" line="47">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221128 18:56:09.153" endtime="20221128 18:56:09.154"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key2 /opt/hadoop/NOTICE.txt</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221128 18:56:09.158" level="INFO">Running command 'ozone sh key put /45596-volume-for-prepare/45596-bucket-for-prepare/prepare-key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20221128 18:56:12.297" level="INFO">${rc} = 255</msg>
<msg timestamp="20221128 18:56:12.297" level="INFO">${output} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20221128 18:56:09.155" endtime="20221128 18:56:12.297"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221128 18:56:12.301" level="INFO">NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20221128 18:56:12.298" endtime="20221128 18:56:12.301"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221128 18:56:12.302" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221128 18:56:12.301" endtime="20221128 18:56:12.302"/>
</kw>
<msg timestamp="20221128 18:56:12.303" level="INFO">${result} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20221128 18:56:09.154" endtime="20221128 18:56:12.303"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM is in prepare mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221128 18:56:12.303" endtime="20221128 18:56:12.304"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key2</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221128 18:56:12.309" level="INFO">Running command 'ozone sh key info /45596-volume-for-prepare/45596-bucket-for-prepare/prepare-key2 2&gt;&amp;1'.</msg>
<msg timestamp="20221128 18:56:15.296" level="INFO">${rc} = 255</msg>
<msg timestamp="20221128 18:56:15.296" level="INFO">${output} = KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<status status="PASS" starttime="20221128 18:56:12.306" endtime="20221128 18:56:15.296"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221128 18:56:15.298" level="INFO">KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<status status="PASS" starttime="20221128 18:56:15.297" endtime="20221128 18:56:15.298"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221128 18:56:15.299" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221128 18:56:15.298" endtime="20221128 18:56:15.299"/>
</kw>
<status status="PASS" starttime="20221128 18:56:12.305" endtime="20221128 18:56:15.299"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221128 18:56:09.152" endtime="20221128 18:56:15.300"/>
</test>
<doc>Smoke test to test preparing OMs in an OM HA cluster.</doc>
<status status="FAIL" starttime="20221128 18:50:28.611" endtime="20221128 18:56:15.302"/>
</suite>
<statistics>
<total>
<stat pass="2" fail="1" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="2" fail="1" skip="0" id="s1" name="ozone-om-prepare">ozone-om-prepare</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
