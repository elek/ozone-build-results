<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.0.1 (Python 3.8.10 on linux)" generated="20221128 19:06:50.774" rpa="false" schemaversion="3">
<suite id="s1" name="ozones3-haproxy" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-t1" name="Check webui static resources" line="29">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221128 19:06:16.341" endtime="20221128 19:06:16.341"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -s -I http://${SCM}:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221128 19:06:16.348" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20221128 19:06:16.459" level="INFO">${rc} = 0</msg>
<msg timestamp="20221128 19:06:16.459" level="INFO">${output} = HTTP/1.1 200 OK
Date: Mon, 28 Nov 2022 19:06:16 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Mon, 28 Nov 2022 18:30:04 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20221128 19:06:16.343" endtime="20221128 19:06:16.459"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221128 19:06:16.461" level="INFO">HTTP/1.1 200 OK
Date: Mon, 28 Nov 2022 19:06:16 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Mon, 28 Nov 2022 18:30:04 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20221128 19:06:16.460" endtime="20221128 19:06:16.461"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221128 19:06:16.462" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221128 19:06:16.461" endtime="20221128 19:06:16.462"/>
</kw>
<status status="PASS" starttime="20221128 19:06:16.342" endtime="20221128 19:06:16.462"/>
</kw>
<msg timestamp="20221128 19:06:16.462" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221128 19:06:16.342" endtime="20221128 19:06:16.464"/>
</kw>
<msg timestamp="20221128 19:06:16.464" level="INFO">${result} = HTTP/1.1 200 OK
Date: Mon, 28 Nov 2022 19:06:16 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Mon, 28 Nov 2022 18:30:04 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20221128 19:06:16.342" endtime="20221128 19:06:16.464"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221128 19:06:16.465" endtime="20221128 19:06:16.466"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221128 19:06:16.339" endtime="20221128 19:06:16.467"/>
</test>
<test id="s1-t2" name="Basic Freon smoketest" line="34">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221128 19:06:16.472" endtime="20221128 19:06:16.472"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>10</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20221128 19:06:16.476" level="INFO">${random} = bvsn30S3Ke</msg>
<status status="PASS" starttime="20221128 19:06:16.472" endtime="20221128 19:06:16.476"/>
</kw>
<kw name="Freon OCKG" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221128 19:06:16.484" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p bvsn30S3Ke  2&gt;&amp;1'.</msg>
<msg timestamp="20221128 19:06:25.744" level="INFO">${rc} = 0</msg>
<msg timestamp="20221128 19:06:25.744" level="INFO">${output} = 2022-11-28 19:06:18,702 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-28 19:06:18,935 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221128 19:06:16.482" endtime="20221128 19:06:25.747"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221128 19:06:25.750" level="INFO">2022-11-28 19:06:18,702 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-28 19:06:18,935 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-11-28 19:06:18,935 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-11-28 19:06:19,180 [main] INFO freon.BaseFreonGenerator: Executing test with prefix bvsn30S3Ke and number-of-tests 1
2022-11-28 19:06:19,301 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-28 19:06:20,304 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-28 19:06:20,796 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2022-11-28 19:06:20,970 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false 
2022-11-28 19:06:21,304 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-28 19:06:22,077 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-11-28 19:06:22,305 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-28 19:06:22,420 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-11-28 19:06:23,305 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-28 19:06:24,305 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-28 19:06:25,306 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-11-28 19:06:25,358 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=3430.16564, max=3430.16564, mean=3430.16564, stddev=0.0, median=3430.16564, p75=3430.16564, p95=3430.16564, p98=3430.16564, p99=3430.16564, p999=3430.16564, mean_rate=0.2305459013447527, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-11-28 19:06:25,359 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 6
2022-11-28 19:06:25,359 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-11-28 19:06:25,359 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20221128 19:06:25.748" endtime="20221128 19:06:25.750"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221128 19:06:25.751" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221128 19:06:25.750" endtime="20221128 19:06:25.751"/>
</kw>
<status status="PASS" starttime="20221128 19:06:16.481" endtime="20221128 19:06:25.751"/>
</kw>
<msg timestamp="20221128 19:06:25.751" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221128 19:06:16.480" endtime="20221128 19:06:25.753"/>
</kw>
<msg timestamp="20221128 19:06:25.754" level="INFO">${result} = 2022-11-28 19:06:18,702 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-28 19:06:18,935 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221128 19:06:16.480" endtime="20221128 19:06:25.754"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221128 19:06:25.754" endtime="20221128 19:06:25.754"/>
</kw>
<status status="PASS" starttime="20221128 19:06:16.476" endtime="20221128 19:06:25.755"/>
</kw>
<kw name="Freon OCKV" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221128 19:06:25.761" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p bvsn30S3Ke  2&gt;&amp;1'.</msg>
<msg timestamp="20221128 19:06:33.294" level="INFO">${rc} = 0</msg>
<msg timestamp="20221128 19:06:33.294" level="INFO">${output} = 2022-11-28 19:06:28,029 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-28 19:06:28,188 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221128 19:06:25.759" endtime="20221128 19:06:33.295"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221128 19:06:33.302" level="INFO">2022-11-28 19:06:28,029 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-28 19:06:28,188 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-11-28 19:06:28,188 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-11-28 19:06:28,485 [main] INFO freon.BaseFreonGenerator: Executing test with prefix bvsn30S3Ke and number-of-tests 1
2022-11-28 19:06:28,594 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-28 19:06:29,602 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-28 19:06:30,532 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-11-28 19:06:30,603 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-28 19:06:31,603 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-28 19:06:32,604 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-11-28 19:06:32,902 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=60.535059, max=60.535059, mean=60.535059, stddev=0.0, median=60.535059, p75=60.535059, p95=60.535059, p98=60.535059, p99=60.535059, p999=60.535059, mean_rate=0.9642874010654506, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-11-28 19:06:32,904 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 4
2022-11-28 19:06:32,904 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-11-28 19:06:32,904 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20221128 19:06:33.295" endtime="20221128 19:06:33.302"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221128 19:06:33.302" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221128 19:06:33.302" endtime="20221128 19:06:33.303"/>
</kw>
<status status="PASS" starttime="20221128 19:06:25.758" endtime="20221128 19:06:33.303"/>
</kw>
<msg timestamp="20221128 19:06:33.303" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221128 19:06:25.758" endtime="20221128 19:06:33.304"/>
</kw>
<msg timestamp="20221128 19:06:33.304" level="INFO">${result} = 2022-11-28 19:06:28,029 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-28 19:06:28,188 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221128 19:06:25.756" endtime="20221128 19:06:33.304"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221128 19:06:33.305" endtime="20221128 19:06:33.305"/>
</kw>
<status status="PASS" starttime="20221128 19:06:25.755" endtime="20221128 19:06:33.305"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221128 19:06:16.470" endtime="20221128 19:06:33.306"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20221128 19:06:16.241" endtime="20221128 19:06:33.308"/>
</suite>
<statistics>
<total>
<stat pass="2" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="2" fail="0" skip="0" id="s1" name="ozones3-haproxy">ozones3-haproxy</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
