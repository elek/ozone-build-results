<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.0.1 (Python 3.8.10 on linux)" generated="20221124 01:18:07.353" rpa="false" schemaversion="3">
<suite id="s1" name="ozone-om-prepare">
<suite id="s1-s1" name="Om-Cancel-Prepare" source="/opt/hadoop/smoketest/omha/om-cancel-prepare.robot">
<kw name="Generate volume and bucket names" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20221124 01:11:55.547" level="INFO">${random} = 22687</msg>
<status status="PASS" starttime="20221124 01:11:55.546" endtime="20221124 01:11:55.547"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-cancel</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20221124 01:11:55.549" level="INFO">${volume_name} = 22687-volume-for-cancel</msg>
<status status="PASS" starttime="20221124 01:11:55.547" endtime="20221124 01:11:55.549"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${bucket_name}</arg>
<arg>${random}-bucket-for-cancel</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20221124 01:11:55.550" level="INFO">${bucket_name} = 22687-bucket-for-cancel</msg>
<status status="PASS" starttime="20221124 01:11:55.549" endtime="20221124 01:11:55.550"/>
</kw>
<status status="PASS" starttime="20221124 01:11:55.546" endtime="20221124 01:11:55.551"/>
</kw>
<test id="s1-s1-t1" name="Cancel Ozone Manager Prepare" line="33">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221124 01:11:55.552" endtime="20221124 01:11:55.553"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om cancelprepare -id=omservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221124 01:11:55.559" level="INFO">Running command 'ozone admin om cancelprepare -id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20221124 01:11:58.923" level="INFO">${rc} = 0</msg>
<msg timestamp="20221124 01:11:58.923" level="INFO">${output} = Cancel prepare succeeded, cluster can now accept write requests.</msg>
<status status="PASS" starttime="20221124 01:11:55.554" endtime="20221124 01:11:58.923"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221124 01:11:58.925" level="INFO">Cancel prepare succeeded, cluster can now accept write requests.</msg>
<status status="PASS" starttime="20221124 01:11:58.923" endtime="20221124 01:11:58.925"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221124 01:11:58.926" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221124 01:11:58.925" endtime="20221124 01:11:58.926"/>
</kw>
<status status="PASS" starttime="20221124 01:11:55.554" endtime="20221124 01:11:58.926"/>
</kw>
<msg timestamp="20221124 01:11:58.926" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221124 01:11:55.553" endtime="20221124 01:11:58.928"/>
</kw>
<msg timestamp="20221124 01:11:58.928" level="INFO">${result} = Cancel prepare succeeded, cluster can now accept write requests.</msg>
<status status="PASS" starttime="20221124 01:11:55.553" endtime="20221124 01:11:58.928"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>5sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Cancel prepare succeeded</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Cancel prepare succeeded</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221124 01:11:58.929" endtime="20221124 01:11:58.929"/>
</kw>
<status status="PASS" starttime="20221124 01:11:58.928" endtime="20221124 01:11:58.930"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221124 01:11:55.551" endtime="20221124 01:11:58.930"/>
</test>
<test id="s1-s1-t2" name="Test write operations" line="37">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221124 01:11:58.932" endtime="20221124 01:11:58.933"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create /${volume_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221124 01:11:58.937" level="INFO">Running command 'ozone sh volume create /22687-volume-for-cancel 2&gt;&amp;1'.</msg>
<msg timestamp="20221124 01:12:01.859" level="INFO">${rc} = 0</msg>
<msg timestamp="20221124 01:12:01.859" level="INFO">${output} = </msg>
<status status="PASS" starttime="20221124 01:11:58.935" endtime="20221124 01:12:01.860"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221124 01:12:01.861" level="INFO"/>
<status status="PASS" starttime="20221124 01:12:01.860" endtime="20221124 01:12:01.861"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221124 01:12:01.862" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221124 01:12:01.861" endtime="20221124 01:12:01.862"/>
</kw>
<status status="PASS" starttime="20221124 01:11:58.934" endtime="20221124 01:12:01.862"/>
</kw>
<msg timestamp="20221124 01:12:01.862" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221124 01:11:58.933" endtime="20221124 01:12:01.863"/>
</kw>
<status status="PASS" starttime="20221124 01:11:58.933" endtime="20221124 01:12:01.863"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume_name}/${bucket_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221124 01:12:01.867" level="INFO">Running command 'ozone sh bucket create /22687-volume-for-cancel/22687-bucket-for-cancel 2&gt;&amp;1'.</msg>
<msg timestamp="20221124 01:12:04.790" level="INFO">${rc} = 0</msg>
<msg timestamp="20221124 01:12:04.791" level="INFO">${output} = </msg>
<status status="PASS" starttime="20221124 01:12:01.865" endtime="20221124 01:12:04.791"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221124 01:12:04.792" level="INFO"/>
<status status="PASS" starttime="20221124 01:12:04.791" endtime="20221124 01:12:04.792"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221124 01:12:04.793" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221124 01:12:04.792" endtime="20221124 01:12:04.793"/>
</kw>
<status status="PASS" starttime="20221124 01:12:01.864" endtime="20221124 01:12:04.793"/>
</kw>
<msg timestamp="20221124 01:12:04.793" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221124 01:12:01.864" endtime="20221124 01:12:04.794"/>
</kw>
<status status="PASS" starttime="20221124 01:12:01.863" endtime="20221124 01:12:04.794"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put /${volume_name}/${bucket_name}/cancel-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221124 01:12:04.800" level="INFO">Running command 'ozone sh key put /22687-volume-for-cancel/22687-bucket-for-cancel/cancel-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20221124 01:12:10.134" level="INFO">${rc} = 0</msg>
<msg timestamp="20221124 01:12:10.134" level="INFO">${output} = </msg>
<status status="PASS" starttime="20221124 01:12:04.797" endtime="20221124 01:12:10.134"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221124 01:12:10.135" level="INFO"/>
<status status="PASS" starttime="20221124 01:12:10.134" endtime="20221124 01:12:10.135"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221124 01:12:10.136" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221124 01:12:10.136" endtime="20221124 01:12:10.136"/>
</kw>
<status status="PASS" starttime="20221124 01:12:04.795" endtime="20221124 01:12:10.137"/>
</kw>
<msg timestamp="20221124 01:12:10.137" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221124 01:12:04.795" endtime="20221124 01:12:10.137"/>
</kw>
<msg timestamp="20221124 01:12:10.137" level="INFO">${result} = </msg>
<status status="PASS" starttime="20221124 01:12:04.794" endtime="20221124 01:12:10.138"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /${volume_name}/${bucket_name}/cancel-key</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221124 01:12:10.143" level="INFO">Running command 'ozone sh key info /22687-volume-for-cancel/22687-bucket-for-cancel/cancel-key 2&gt;&amp;1'.</msg>
<msg timestamp="20221124 01:12:13.724" level="INFO">${rc} = 0</msg>
<msg timestamp="20221124 01:12:13.724" level="INFO">${output} = {
  "volumeName" : "22687-volume-for-cancel",
  "bucketName" : "22687-bucket-for-cancel",
  "name" : "cancel-key",
  "dataSize" : 17539,
  "creationTime" : "2022-11-24T01:12:07.661Z",
  "modificationT...</msg>
<status status="PASS" starttime="20221124 01:12:10.140" endtime="20221124 01:12:13.724"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221124 01:12:13.726" level="INFO">{
  "volumeName" : "22687-volume-for-cancel",
  "bucketName" : "22687-bucket-for-cancel",
  "name" : "cancel-key",
  "dataSize" : 17539,
  "creationTime" : "2022-11-24T01:12:07.661Z",
  "modificationTime" : "2022-11-24T01:12:09.727Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "ozoneKeyLocations" : [ {
    "containerID" : 3,
    "localID" : 109611004723200103,
    "length" : 17539,
    "offset" : 0,
    "keyOffset" : 0
  } ]
}</msg>
<status status="PASS" starttime="20221124 01:12:13.725" endtime="20221124 01:12:13.726"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221124 01:12:13.726" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221124 01:12:13.726" endtime="20221124 01:12:13.727"/>
</kw>
<status status="PASS" starttime="20221124 01:12:10.139" endtime="20221124 01:12:13.727"/>
</kw>
<msg timestamp="20221124 01:12:13.727" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221124 01:12:10.139" endtime="20221124 01:12:13.728"/>
</kw>
<msg timestamp="20221124 01:12:13.728" level="INFO">${result} = {
  "volumeName" : "22687-volume-for-cancel",
  "bucketName" : "22687-bucket-for-cancel",
  "name" : "cancel-key",
  "dataSize" : 17539,
  "creationTime" : "2022-11-24T01:12:07.661Z",
  "modificationT...</msg>
<status status="PASS" starttime="20221124 01:12:10.138" endtime="20221124 01:12:13.728"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"name\" : \"cancel-key\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221124 01:12:13.728" endtime="20221124 01:12:13.729"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221124 01:11:58.931" endtime="20221124 01:12:13.729"/>
</test>
<doc>Smoke test for ozone manager cancel prepare</doc>
<status status="PASS" starttime="20221124 01:11:55.482" endtime="20221124 01:12:13.730"/>
</suite>
<suite id="s1-s2" name="Om-Prepare" source="/opt/hadoop/smoketest/omha/om-prepare.robot">
<kw name="Create Specific OM data for prepare" type="SETUP">
<kw name="Freon OCKG" library="freon">
<arg>prefix=om-prepare</arg>
<arg>n=100</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221124 01:12:19.123" level="INFO">Running command 'ozone freon ockg --om-service-id=omservice -t 1 -n100 -p om-prepare  2&gt;&amp;1'.</msg>
<msg timestamp="20221124 01:12:39.956" level="INFO">${rc} = 0</msg>
<msg timestamp="20221124 01:12:39.956" level="INFO">${output} = 2022-11-24 01:12:20,973 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-24 01:12:21,166 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221124 01:12:19.118" endtime="20221124 01:12:39.956"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221124 01:12:39.958" level="INFO">2022-11-24 01:12:20,973 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-24 01:12:21,166 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-11-24 01:12:21,166 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-11-24 01:12:21,382 [main] INFO freon.BaseFreonGenerator: Executing test with prefix om-prepare and number-of-tests 100
2022-11-24 01:12:21,479 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-11-24 01:12:22,488 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-11-24 01:12:23,030 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-11-24 01:12:23,360 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-11-24 01:12:23,488 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-11-24 01:12:24,489 [Thread-3] INFO freon.ProgressBar: Progress: 2.00 % (2 out of 100)
2022-11-24 01:12:25,489 [Thread-3] INFO freon.ProgressBar: Progress: 11.00 % (11 out of 100)
2022-11-24 01:12:26,490 [Thread-3] INFO freon.ProgressBar: Progress: 22.00 % (22 out of 100)
2022-11-24 01:12:27,491 [Thread-3] INFO freon.ProgressBar: Progress: 31.00 % (31 out of 100)
2022-11-24 01:12:28,491 [Thread-3] INFO freon.ProgressBar: Progress: 38.00 % (38 out of 100)
2022-11-24 01:12:29,492 [Thread-3] INFO freon.ProgressBar: Progress: 38.00 % (38 out of 100)
2022-11-24 01:12:30,492 [Thread-3] INFO freon.ProgressBar: Progress: 38.00 % (38 out of 100)
2022-11-24 01:12:31,495 [Thread-3] INFO freon.ProgressBar: Progress: 47.00 % (47 out of 100)
2022-11-24 01:12:32,497 [Thread-3] INFO freon.ProgressBar: Progress: 48.00 % (48 out of 100)
2022-11-24 01:12:33,497 [Thread-3] INFO freon.ProgressBar: Progress: 48.00 % (48 out of 100)
2022-11-24 01:12:34,498 [Thread-3] INFO freon.ProgressBar: Progress: 52.00 % (52 out of 100)
2022-11-24 01:12:35,498 [Thread-3] INFO freon.ProgressBar: Progress: 63.00 % (63 out of 100)
2022-11-24 01:12:36,502 [Thread-3] INFO freon.ProgressBar: Progress: 75.00 % (75 out of 100)
2022-11-24 01:12:37,506 [Thread-3] INFO freon.ProgressBar: Progress: 86.00 % (86 out of 100)
2022-11-24 01:12:38,510 [Thread-3] INFO freon.ProgressBar: Progress: 97.00 % (97 out of 100)
2022-11-24 01:12:39,511 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2022-11-24 01:12:39,586 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=100, min=56.927449, max=2592.668117, mean=161.23719238605534, stddev=390.4805284228669, median=93.414717, p75=108.823303, p95=138.139279, p98=2571.951036, p99=2592.668117, p999=2592.668117, mean_rate=5.785280486271337, m1=5.764812440041529, m5=5.790629257970512, m15=5.796737295371195, rate_unit=events/second, duration_unit=milliseconds
2022-11-24 01:12:39,586 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 18
2022-11-24 01:12:39,587 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-11-24 01:12:39,587 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20221124 01:12:39.957" endtime="20221124 01:12:39.958"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221124 01:12:39.958" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221124 01:12:39.958" endtime="20221124 01:12:39.958"/>
</kw>
<status status="PASS" starttime="20221124 01:12:19.118" endtime="20221124 01:12:39.959"/>
</kw>
<msg timestamp="20221124 01:12:39.959" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221124 01:12:19.117" endtime="20221124 01:12:39.961"/>
</kw>
<msg timestamp="20221124 01:12:39.961" level="INFO">${result} = 2022-11-24 01:12:20,973 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-24 01:12:21,166 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221124 01:12:19.116" endtime="20221124 01:12:39.961"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221124 01:12:39.961" endtime="20221124 01:12:39.962"/>
</kw>
<status status="PASS" starttime="20221124 01:12:19.115" endtime="20221124 01:12:39.962"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20221124 01:12:39.962" level="INFO">${random} = 64864</msg>
<status status="PASS" starttime="20221124 01:12:39.962" endtime="20221124 01:12:39.963"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20221124 01:12:39.964" level="INFO">${volume_name} = 64864-volume-for-prepare</msg>
<status status="PASS" starttime="20221124 01:12:39.963" endtime="20221124 01:12:39.965"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${bucket_name}</arg>
<arg>${random}-bucket-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20221124 01:12:39.967" level="INFO">${bucket_name} = 64864-bucket-for-prepare</msg>
<status status="PASS" starttime="20221124 01:12:39.965" endtime="20221124 01:12:39.967"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create /${volume_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221124 01:12:39.971" level="INFO">Running command 'ozone sh volume create /64864-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20221124 01:12:42.669" level="INFO">${rc} = 0</msg>
<msg timestamp="20221124 01:12:42.669" level="INFO">${output} = </msg>
<status status="PASS" starttime="20221124 01:12:39.968" endtime="20221124 01:12:42.669"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221124 01:12:42.671" level="INFO"/>
<status status="PASS" starttime="20221124 01:12:42.670" endtime="20221124 01:12:42.671"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221124 01:12:42.671" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221124 01:12:42.671" endtime="20221124 01:12:42.671"/>
</kw>
<status status="PASS" starttime="20221124 01:12:39.968" endtime="20221124 01:12:42.672"/>
</kw>
<msg timestamp="20221124 01:12:42.672" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221124 01:12:39.967" endtime="20221124 01:12:42.672"/>
</kw>
<status status="PASS" starttime="20221124 01:12:39.967" endtime="20221124 01:12:42.673"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume_name}/${bucket_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221124 01:12:42.677" level="INFO">Running command 'ozone sh bucket create /64864-volume-for-prepare/64864-bucket-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20221124 01:12:45.719" level="INFO">${rc} = 0</msg>
<msg timestamp="20221124 01:12:45.719" level="INFO">${output} = </msg>
<status status="PASS" starttime="20221124 01:12:42.675" endtime="20221124 01:12:45.719"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221124 01:12:45.721" level="INFO"/>
<status status="PASS" starttime="20221124 01:12:45.720" endtime="20221124 01:12:45.721"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221124 01:12:45.721" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221124 01:12:45.721" endtime="20221124 01:12:45.721"/>
</kw>
<status status="PASS" starttime="20221124 01:12:42.674" endtime="20221124 01:12:45.722"/>
</kw>
<msg timestamp="20221124 01:12:45.722" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221124 01:12:42.674" endtime="20221124 01:12:45.722"/>
</kw>
<status status="PASS" starttime="20221124 01:12:42.673" endtime="20221124 01:12:45.723"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221124 01:12:45.728" level="INFO">Running command 'ozone sh key put /64864-volume-for-prepare/64864-bucket-for-prepare/prepare-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20221124 01:12:51.035" level="INFO">${rc} = 0</msg>
<msg timestamp="20221124 01:12:51.035" level="INFO">${output} = </msg>
<status status="PASS" starttime="20221124 01:12:45.725" endtime="20221124 01:12:51.035"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221124 01:12:51.037" level="INFO"/>
<status status="PASS" starttime="20221124 01:12:51.036" endtime="20221124 01:12:51.037"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221124 01:12:51.037" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221124 01:12:51.037" endtime="20221124 01:12:51.038"/>
</kw>
<status status="PASS" starttime="20221124 01:12:45.724" endtime="20221124 01:12:51.038"/>
</kw>
<msg timestamp="20221124 01:12:51.038" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221124 01:12:45.724" endtime="20221124 01:12:51.039"/>
</kw>
<status status="PASS" starttime="20221124 01:12:45.723" endtime="20221124 01:12:51.039"/>
</kw>
<status status="PASS" starttime="20221124 01:12:19.115" endtime="20221124 01:12:51.039"/>
</kw>
<test id="s1-s2-t1" name="Prepare Ozone Manager" line="39">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221124 01:12:51.041" endtime="20221124 01:12:51.042"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om prepare -id=omservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221124 01:12:51.047" level="INFO">Running command 'ozone admin om prepare -id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20221124 01:12:59.503" level="INFO">${rc} = 0</msg>
<msg timestamp="20221124 01:12:59.503" level="INFO">${output} = Ozone Manager Prepare Request successfully returned with Transaction Id : [837].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], C...</msg>
<status status="PASS" starttime="20221124 01:12:51.044" endtime="20221124 01:12:59.503"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221124 01:12:59.504" level="INFO">Ozone Manager Prepare Request successfully returned with Transaction Id : [837].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [837]
OM : [om3], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [837]
OM : [om2], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [837]

OM Preparation successful! 
All OMs are prepared
No new write requests will be allowed until preparation is cancelled or upgrade/downgrade is done.</msg>
<status status="PASS" starttime="20221124 01:12:59.504" endtime="20221124 01:12:59.505"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221124 01:12:59.505" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221124 01:12:59.505" endtime="20221124 01:12:59.505"/>
</kw>
<status status="PASS" starttime="20221124 01:12:51.043" endtime="20221124 01:12:59.506"/>
</kw>
<msg timestamp="20221124 01:12:59.506" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221124 01:12:51.043" endtime="20221124 01:12:59.506"/>
</kw>
<msg timestamp="20221124 01:12:59.507" level="INFO">${result} = Ozone Manager Prepare Request successfully returned with Transaction Id : [837].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], C...</msg>
<status status="PASS" starttime="20221124 01:12:51.042" endtime="20221124 01:12:59.507"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221124 01:12:59.507" endtime="20221124 01:12:59.508"/>
</kw>
<status status="PASS" starttime="20221124 01:12:59.507" endtime="20221124 01:12:59.508"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221124 01:12:51.040" endtime="20221124 01:12:59.508"/>
</test>
<test id="s1-s2-t2" name="Checks if the expected data is present in OM" line="43">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221124 01:12:59.510" endtime="20221124 01:12:59.511"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221124 01:12:59.516" level="INFO">Running command 'ozone sh key info /64864-volume-for-prepare/64864-bucket-for-prepare/prepare-key 2&gt;&amp;1'.</msg>
<msg timestamp="20221124 01:13:02.669" level="INFO">${rc} = 0</msg>
<msg timestamp="20221124 01:13:02.669" level="INFO">${output} = {
  "volumeName" : "64864-volume-for-prepare",
  "bucketName" : "64864-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17539,
  "creationTime" : "2022-11-24T01:12:48.734Z",
  "modificati...</msg>
<status status="PASS" starttime="20221124 01:12:59.513" endtime="20221124 01:13:02.669"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221124 01:13:02.671" level="INFO">{
  "volumeName" : "64864-volume-for-prepare",
  "bucketName" : "64864-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17539,
  "creationTime" : "2022-11-24T01:12:48.734Z",
  "modificationTime" : "2022-11-24T01:12:50.671Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "ozoneKeyLocations" : [ {
    "containerID" : 4,
    "localID" : 109611004723200204,
    "length" : 17539,
    "offset" : 0,
    "keyOffset" : 0
  } ]
}</msg>
<status status="PASS" starttime="20221124 01:13:02.670" endtime="20221124 01:13:02.671"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221124 01:13:02.672" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221124 01:13:02.671" endtime="20221124 01:13:02.672"/>
</kw>
<status status="PASS" starttime="20221124 01:12:59.512" endtime="20221124 01:13:02.672"/>
</kw>
<msg timestamp="20221124 01:13:02.672" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221124 01:12:59.512" endtime="20221124 01:13:02.672"/>
</kw>
<msg timestamp="20221124 01:13:02.673" level="INFO">${result} = {
  "volumeName" : "64864-volume-for-prepare",
  "bucketName" : "64864-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17539,
  "creationTime" : "2022-11-24T01:12:48.734Z",
  "modificati...</msg>
<status status="PASS" starttime="20221124 01:12:59.511" endtime="20221124 01:13:02.673"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"name\" : \"prepare-key\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221124 01:13:02.673" endtime="20221124 01:13:02.673"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221124 01:12:59.510" endtime="20221124 01:13:02.674"/>
</test>
<test id="s1-s2-t3" name="Test write operation fails" line="47">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221124 01:13:02.676" endtime="20221124 01:13:02.676"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key2 /opt/hadoop/NOTICE.txt</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221124 01:13:02.680" level="INFO">Running command 'ozone sh key put /64864-volume-for-prepare/64864-bucket-for-prepare/prepare-key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20221124 01:13:05.874" level="INFO">${rc} = 255</msg>
<msg timestamp="20221124 01:13:05.874" level="INFO">${output} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20221124 01:13:02.677" endtime="20221124 01:13:05.874"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221124 01:13:05.876" level="INFO">NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20221124 01:13:05.875" endtime="20221124 01:13:05.876"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221124 01:13:05.876" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221124 01:13:05.876" endtime="20221124 01:13:05.876"/>
</kw>
<msg timestamp="20221124 01:13:05.877" level="INFO">${result} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20221124 01:13:02.676" endtime="20221124 01:13:05.877"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM is in prepare mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221124 01:13:05.877" endtime="20221124 01:13:05.877"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key2</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221124 01:13:05.881" level="INFO">Running command 'ozone sh key info /64864-volume-for-prepare/64864-bucket-for-prepare/prepare-key2 2&gt;&amp;1'.</msg>
<msg timestamp="20221124 01:13:08.944" level="INFO">${rc} = 255</msg>
<msg timestamp="20221124 01:13:08.944" level="INFO">${output} = KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<status status="PASS" starttime="20221124 01:13:05.878" endtime="20221124 01:13:08.944"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221124 01:13:08.945" level="INFO">KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<status status="PASS" starttime="20221124 01:13:08.945" endtime="20221124 01:13:08.946"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221124 01:13:08.946" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221124 01:13:08.946" endtime="20221124 01:13:08.946"/>
</kw>
<status status="PASS" starttime="20221124 01:13:05.878" endtime="20221124 01:13:08.947"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221124 01:13:02.675" endtime="20221124 01:13:08.947"/>
</test>
<doc>Smoke test to test preparing OMs in an OM HA cluster.</doc>
<status status="PASS" starttime="20221124 01:12:19.038" endtime="20221124 01:13:08.949"/>
</suite>
<suite id="s1-s3" name="Om-Prepared" source="/opt/hadoop/smoketest/omha/om-prepared.robot">
<test id="s1-s3-t1" name="Test create volume fails" line="26">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221124 01:13:14.300" endtime="20221124 01:13:14.301"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20221124 01:13:14.301" level="INFO">${random} = 23003</msg>
<status status="PASS" starttime="20221124 01:13:14.301" endtime="20221124 01:13:14.302"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20221124 01:13:14.303" level="INFO">${volume_name} = 23003-volume-for-prepare</msg>
<status status="PASS" starttime="20221124 01:13:14.302" endtime="20221124 01:13:14.303"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${volume_name}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221124 01:13:14.309" level="INFO">Running command 'ozone sh volume create /23003-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20221124 01:13:17.274" level="INFO">${rc} = 255</msg>
<msg timestamp="20221124 01:13:17.274" level="INFO">${output} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20221124 01:13:14.304" endtime="20221124 01:13:17.274"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221124 01:13:17.276" level="INFO">NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20221124 01:13:17.275" endtime="20221124 01:13:17.276"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221124 01:13:17.277" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221124 01:13:17.276" endtime="20221124 01:13:17.277"/>
</kw>
<msg timestamp="20221124 01:13:17.277" level="INFO">${result} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20221124 01:13:14.304" endtime="20221124 01:13:17.277"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM is in prepare mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221124 01:13:17.277" endtime="20221124 01:13:17.278"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume info /${volume_name}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221124 01:13:17.282" level="INFO">Running command 'ozone sh volume info /23003-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20221124 01:13:20.165" level="INFO">${rc} = 255</msg>
<msg timestamp="20221124 01:13:20.165" level="INFO">${output} = VOLUME_NOT_FOUND Volume 23003-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20221124 01:13:17.279" endtime="20221124 01:13:20.165"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221124 01:13:20.166" level="INFO">VOLUME_NOT_FOUND Volume 23003-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20221124 01:13:20.166" endtime="20221124 01:13:20.167"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221124 01:13:20.167" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221124 01:13:20.167" endtime="20221124 01:13:20.168"/>
</kw>
<msg timestamp="20221124 01:13:20.168" level="INFO">${result} = VOLUME_NOT_FOUND Volume 23003-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20221124 01:13:17.278" endtime="20221124 01:13:20.168"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221124 01:13:20.169" endtime="20221124 01:13:20.169"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221124 01:13:14.299" endtime="20221124 01:13:20.169"/>
</test>
<test id="s1-s3-t2" name="Test list volumes succeeds" line="34">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221124 01:13:20.172" endtime="20221124 01:13:20.173"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221124 01:13:20.177" level="INFO">Running command 'ozone sh volume list 2&gt;&amp;1'.</msg>
<msg timestamp="20221124 01:13:23.332" level="INFO">${rc} = 0</msg>
<msg timestamp="20221124 01:13:23.332" level="INFO">${output} = [ {
  "metadata" : { },
  "name" : "22687-volume-for-cancel",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2...</msg>
<status status="PASS" starttime="20221124 01:13:20.175" endtime="20221124 01:13:23.332"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221124 01:13:23.334" level="INFO">[ {
  "metadata" : { },
  "name" : "22687-volume-for-cancel",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2022-11-24T01:12:01.812Z",
  "modificationTime" : "2022-11-24T01:12:01.812Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "s3v",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 0,
  "creationTime" : "2022-11-24T01:10:35.780Z",
  "modificationTime" : "2022-11-24T01:10:35.780Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "53572-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2022-11-24T01:11:22.376Z",
  "modificationTime" : "2022-11-24T01:11:22.376Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "vol1",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2022-11-24T01:10:58.618Z",
  "modificationTime" : "2022-11-24T01:10:58.618Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "64864-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2022-11-24T01:12:42.623Z",
  "modificationTime" : "2022-11-24T01:12:42.623Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
} ]</msg>
<status status="PASS" starttime="20221124 01:13:23.333" endtime="20221124 01:13:23.334"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221124 01:13:23.335" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221124 01:13:23.334" endtime="20221124 01:13:23.335"/>
</kw>
<status status="PASS" starttime="20221124 01:13:20.174" endtime="20221124 01:13:23.335"/>
</kw>
<msg timestamp="20221124 01:13:23.336" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221124 01:13:20.173" endtime="20221124 01:13:23.337"/>
</kw>
<msg timestamp="20221124 01:13:23.338" level="INFO">${result} = [ {
  "metadata" : { },
  "name" : "22687-volume-for-cancel",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2...</msg>
<status status="PASS" starttime="20221124 01:13:20.173" endtime="20221124 01:13:23.338"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221124 01:13:20.171" endtime="20221124 01:13:23.338"/>
</test>
<doc>Smoke test to test that OMs are prepared in an OM HA cluster.</doc>
<status status="PASS" starttime="20221124 01:13:14.233" endtime="20221124 01:13:23.340"/>
</suite>
<suite id="s1-s4" name="Om-Prepared" source="/opt/hadoop/smoketest/omha/om-prepared.robot">
<test id="s1-s4-t1" name="Test create volume fails" line="26">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221124 01:14:53.276" endtime="20221124 01:14:53.276"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20221124 01:14:53.277" level="INFO">${random} = 87221</msg>
<status status="PASS" starttime="20221124 01:14:53.277" endtime="20221124 01:14:53.277"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20221124 01:14:53.279" level="INFO">${volume_name} = 87221-volume-for-prepare</msg>
<status status="PASS" starttime="20221124 01:14:53.277" endtime="20221124 01:14:53.279"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${volume_name}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221124 01:14:53.284" level="INFO">Running command 'ozone sh volume create /87221-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20221124 01:14:56.129" level="INFO">${rc} = 255</msg>
<msg timestamp="20221124 01:14:56.129" level="INFO">${output} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20221124 01:14:53.280" endtime="20221124 01:14:56.129"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221124 01:14:56.130" level="INFO">NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20221124 01:14:56.129" endtime="20221124 01:14:56.130"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221124 01:14:56.131" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221124 01:14:56.131" endtime="20221124 01:14:56.131"/>
</kw>
<msg timestamp="20221124 01:14:56.132" level="INFO">${result} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20221124 01:14:53.279" endtime="20221124 01:14:56.132"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM is in prepare mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221124 01:14:56.132" endtime="20221124 01:14:56.135"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume info /${volume_name}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221124 01:14:56.140" level="INFO">Running command 'ozone sh volume info /87221-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20221124 01:14:58.964" level="INFO">${rc} = 255</msg>
<msg timestamp="20221124 01:14:58.964" level="INFO">${output} = VOLUME_NOT_FOUND Volume 87221-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20221124 01:14:56.137" endtime="20221124 01:14:58.964"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221124 01:14:58.965" level="INFO">VOLUME_NOT_FOUND Volume 87221-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20221124 01:14:58.964" endtime="20221124 01:14:58.965"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221124 01:14:58.966" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221124 01:14:58.966" endtime="20221124 01:14:58.966"/>
</kw>
<msg timestamp="20221124 01:14:58.967" level="INFO">${result} = VOLUME_NOT_FOUND Volume 87221-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20221124 01:14:56.136" endtime="20221124 01:14:58.967"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221124 01:14:58.967" endtime="20221124 01:14:58.968"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221124 01:14:53.275" endtime="20221124 01:14:58.968"/>
</test>
<test id="s1-s4-t2" name="Test list volumes succeeds" line="34">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221124 01:14:58.971" endtime="20221124 01:14:58.971"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221124 01:14:58.977" level="INFO">Running command 'ozone sh volume list 2&gt;&amp;1'.</msg>
<msg timestamp="20221124 01:15:02.415" level="INFO">${rc} = 0</msg>
<msg timestamp="20221124 01:15:02.416" level="INFO">${output} = [ {
  "metadata" : { },
  "name" : "22687-volume-for-cancel",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2...</msg>
<status status="PASS" starttime="20221124 01:14:58.973" endtime="20221124 01:15:02.416"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221124 01:15:02.417" level="INFO">[ {
  "metadata" : { },
  "name" : "22687-volume-for-cancel",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2022-11-24T01:12:01.812Z",
  "modificationTime" : "2022-11-24T01:12:01.812Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "s3v",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 0,
  "creationTime" : "2022-11-24T01:10:35.780Z",
  "modificationTime" : "2022-11-24T01:10:35.780Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "53572-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2022-11-24T01:11:22.376Z",
  "modificationTime" : "2022-11-24T01:11:22.376Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "vol1",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2022-11-24T01:10:58.618Z",
  "modificationTime" : "2022-11-24T01:10:58.618Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "64864-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2022-11-24T01:12:42.623Z",
  "modificationTime" : "2022-11-24T01:12:42.623Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
} ]</msg>
<status status="PASS" starttime="20221124 01:15:02.416" endtime="20221124 01:15:02.417"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221124 01:15:02.418" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221124 01:15:02.418" endtime="20221124 01:15:02.418"/>
</kw>
<status status="PASS" starttime="20221124 01:14:58.973" endtime="20221124 01:15:02.419"/>
</kw>
<msg timestamp="20221124 01:15:02.419" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221124 01:14:58.972" endtime="20221124 01:15:02.420"/>
</kw>
<msg timestamp="20221124 01:15:02.421" level="INFO">${result} = [ {
  "metadata" : { },
  "name" : "22687-volume-for-cancel",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2...</msg>
<status status="PASS" starttime="20221124 01:14:58.971" endtime="20221124 01:15:02.421"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221124 01:14:58.970" endtime="20221124 01:15:02.421"/>
</test>
<doc>Smoke test to test that OMs are prepared in an OM HA cluster.</doc>
<status status="PASS" starttime="20221124 01:14:53.209" endtime="20221124 01:15:02.423"/>
</suite>
<suite id="s1-s5" name="Loaddata" source="/opt/hadoop/smoketest/topology/loaddata.robot">
<test id="s1-s5-t1" name="Create a volume, bucket and key" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create topvol1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221124 01:16:27.124" level="INFO">Running command 'ozone sh volume create topvol1 2&gt;&amp;1'.</msg>
<msg timestamp="20221124 01:16:30.555" level="INFO">${rc} = 0</msg>
<msg timestamp="20221124 01:16:30.555" level="INFO">${output} = </msg>
<status status="PASS" starttime="20221124 01:16:27.117" endtime="20221124 01:16:30.555"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221124 01:16:30.560" level="INFO"/>
<status status="PASS" starttime="20221124 01:16:30.559" endtime="20221124 01:16:30.560"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221124 01:16:30.561" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221124 01:16:30.560" endtime="20221124 01:16:30.561"/>
</kw>
<status status="PASS" starttime="20221124 01:16:27.107" endtime="20221124 01:16:30.561"/>
</kw>
<msg timestamp="20221124 01:16:30.561" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221124 01:16:27.106" endtime="20221124 01:16:30.566"/>
</kw>
<msg timestamp="20221124 01:16:30.567" level="INFO">${output} = </msg>
<status status="PASS" starttime="20221124 01:16:27.105" endtime="20221124 01:16:30.567"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20221124 01:16:30.567" endtime="20221124 01:16:30.568"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /topvol1/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221124 01:16:30.578" level="INFO">Running command 'ozone sh bucket create /topvol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20221124 01:16:34.251" level="INFO">${rc} = 0</msg>
<msg timestamp="20221124 01:16:34.251" level="INFO">${output} = </msg>
<status status="PASS" starttime="20221124 01:16:30.569" endtime="20221124 01:16:34.251"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221124 01:16:34.252" level="INFO"/>
<status status="PASS" starttime="20221124 01:16:34.252" endtime="20221124 01:16:34.252"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221124 01:16:34.253" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221124 01:16:34.253" endtime="20221124 01:16:34.253"/>
</kw>
<status status="PASS" starttime="20221124 01:16:30.569" endtime="20221124 01:16:34.254"/>
</kw>
<msg timestamp="20221124 01:16:34.254" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221124 01:16:30.568" endtime="20221124 01:16:34.254"/>
</kw>
<msg timestamp="20221124 01:16:34.255" level="INFO">${output} = </msg>
<status status="PASS" starttime="20221124 01:16:30.568" endtime="20221124 01:16:34.255"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20221124 01:16:34.255" endtime="20221124 01:16:34.255"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221124 01:16:34.260" level="INFO">Running command 'ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20221124 01:16:40.675" level="INFO">${rc} = 0</msg>
<msg timestamp="20221124 01:16:40.675" level="INFO">${output} = </msg>
<status status="PASS" starttime="20221124 01:16:34.257" endtime="20221124 01:16:40.675"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221124 01:16:40.677" level="INFO"/>
<status status="PASS" starttime="20221124 01:16:40.676" endtime="20221124 01:16:40.677"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221124 01:16:40.678" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221124 01:16:40.677" endtime="20221124 01:16:40.678"/>
</kw>
<status status="PASS" starttime="20221124 01:16:34.257" endtime="20221124 01:16:40.686"/>
</kw>
<msg timestamp="20221124 01:16:40.687" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221124 01:16:34.256" endtime="20221124 01:16:40.687"/>
</kw>
<msg timestamp="20221124 01:16:40.688" level="INFO">${output} = </msg>
<status status="PASS" starttime="20221124 01:16:34.256" endtime="20221124 01:16:40.688"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20221124 01:16:40.688" endtime="20221124 01:16:40.689"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221124 01:16:27.103" endtime="20221124 01:16:40.689"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20221124 01:16:26.939" endtime="20221124 01:16:40.691"/>
</suite>
<suite id="s1-s6" name="Readdata" source="/opt/hadoop/smoketest/topology/readdata.robot">
<test id="s1-s6-t1" name="Read data from previously created key" line="27">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20221124 01:16:46.202" level="INFO">${random} = 37308</msg>
<status status="PASS" starttime="20221124 01:16:46.202" endtime="20221124 01:16:46.203"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221124 01:16:46.208" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-37308 2&gt;&amp;1'.</msg>
<msg timestamp="20221124 01:16:51.472" level="INFO">${rc} = 0</msg>
<msg timestamp="20221124 01:16:51.472" level="INFO">${output} = </msg>
<status status="PASS" starttime="20221124 01:16:46.204" endtime="20221124 01:16:51.472"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221124 01:16:51.474" level="INFO"/>
<status status="PASS" starttime="20221124 01:16:51.473" endtime="20221124 01:16:51.474"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221124 01:16:51.475" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221124 01:16:51.474" endtime="20221124 01:16:51.475"/>
</kw>
<status status="PASS" starttime="20221124 01:16:46.204" endtime="20221124 01:16:51.475"/>
</kw>
<msg timestamp="20221124 01:16:51.475" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221124 01:16:46.204" endtime="20221124 01:16:51.477"/>
</kw>
<msg timestamp="20221124 01:16:51.477" level="INFO">${output} = </msg>
<status status="PASS" starttime="20221124 01:16:46.203" endtime="20221124 01:16:51.477"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20221124 01:16:51.477" endtime="20221124 01:16:51.478"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221124 01:16:46.201" endtime="20221124 01:16:51.478"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20221124 01:16:46.140" endtime="20221124 01:16:51.480"/>
</suite>
<suite id="s1-s7" name="Om-Prepare" source="/opt/hadoop/smoketest/omha/om-prepare.robot">
<kw name="Create Specific OM data for prepare" type="SETUP">
<kw name="Freon OCKG" library="freon">
<arg>prefix=om-prepare</arg>
<arg>n=100</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221124 01:10:55.568" level="INFO">Running command 'ozone freon ockg --om-service-id=omservice -t 1 -n100 -p om-prepare  2&gt;&amp;1'.</msg>
<msg timestamp="20221124 01:11:19.319" level="INFO">${rc} = 0</msg>
<msg timestamp="20221124 01:11:19.319" level="INFO">${output} = 2022-11-24 01:10:57,287 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-24 01:10:57,488 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221124 01:10:55.564" endtime="20221124 01:11:19.319"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221124 01:11:19.321" level="INFO">2022-11-24 01:10:57,287 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-24 01:10:57,488 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-11-24 01:10:57,491 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-11-24 01:10:57,729 [main] INFO freon.BaseFreonGenerator: Executing test with prefix om-prepare and number-of-tests 100
2022-11-24 01:10:57,829 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-11-24 01:10:58,609 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2022-11-24 01:10:58,821 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false 
2022-11-24 01:10:58,836 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-11-24 01:10:59,837 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-11-24 01:11:00,094 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-11-24 01:11:00,415 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-11-24 01:11:00,837 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-11-24 01:11:01,839 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-11-24 01:11:02,840 [Thread-3] INFO freon.ProgressBar: Progress: 4.00 % (4 out of 100)
2022-11-24 01:11:03,840 [Thread-3] INFO freon.ProgressBar: Progress: 11.00 % (11 out of 100)
2022-11-24 01:11:04,844 [Thread-3] INFO freon.ProgressBar: Progress: 17.00 % (17 out of 100)
2022-11-24 01:11:05,850 [Thread-3] INFO freon.ProgressBar: Progress: 24.00 % (24 out of 100)
2022-11-24 01:11:06,850 [Thread-3] INFO freon.ProgressBar: Progress: 32.00 % (32 out of 100)
2022-11-24 01:11:07,859 [Thread-3] INFO freon.ProgressBar: Progress: 41.00 % (41 out of 100)
2022-11-24 01:11:08,882 [Thread-3] INFO freon.ProgressBar: Progress: 47.00 % (47 out of 100)
2022-11-24 01:11:09,892 [Thread-3] INFO freon.ProgressBar: Progress: 51.00 % (51 out of 100)
2022-11-24 01:11:10,893 [Thread-3] INFO freon.ProgressBar: Progress: 58.00 % (58 out of 100)
2022-11-24 01:11:11,893 [Thread-3] INFO freon.ProgressBar: Progress: 68.00 % (68 out of 100)
2022-11-24 01:11:12,895 [Thread-3] INFO freon.ProgressBar: Progress: 76.00 % (76 out of 100)
2022-11-24 01:11:13,895 [Thread-3] INFO freon.ProgressBar: Progress: 85.00 % (85 out of 100)
2022-11-24 01:11:14,896 [Thread-3] INFO freon.ProgressBar: Progress: 90.00 % (90 out of 100)
2022-11-24 01:11:15,896 [Thread-3] INFO freon.ProgressBar: Progress: 90.00 % (90 out of 100)
2022-11-24 01:11:16,902 [Thread-3] INFO freon.ProgressBar: Progress: 91.00 % (91 out of 100)
2022-11-24 01:11:17,903 [Thread-3] INFO freon.ProgressBar: Progress: 99.00 % (99 out of 100)
2022-11-24 01:11:18,903 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2022-11-24 01:11:18,963 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=100, min=77.25273, max=2945.83067, mean=187.64342297330603, stddev=368.9052693298371, median=122.698391, p75=158.001756, p95=289.699643, p98=366.096885, p99=2583.378751, p999=2945.83067, mean_rate=4.99231672247124, m1=2.9983291228552233, m5=2.3808804863153137, m15=2.261571737340043, rate_unit=events/second, duration_unit=milliseconds
2022-11-24 01:11:18,964 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 21
2022-11-24 01:11:18,964 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-11-24 01:11:18,964 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20221124 01:11:19.320" endtime="20221124 01:11:19.321"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221124 01:11:19.321" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221124 01:11:19.321" endtime="20221124 01:11:19.322"/>
</kw>
<status status="PASS" starttime="20221124 01:10:55.563" endtime="20221124 01:11:19.322"/>
</kw>
<msg timestamp="20221124 01:11:19.322" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221124 01:10:55.563" endtime="20221124 01:11:19.324"/>
</kw>
<msg timestamp="20221124 01:11:19.324" level="INFO">${result} = 2022-11-24 01:10:57,287 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-24 01:10:57,488 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221124 01:10:55.562" endtime="20221124 01:11:19.324"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221124 01:11:19.324" endtime="20221124 01:11:19.325"/>
</kw>
<status status="PASS" starttime="20221124 01:10:55.560" endtime="20221124 01:11:19.325"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20221124 01:11:19.326" level="INFO">${random} = 53572</msg>
<status status="PASS" starttime="20221124 01:11:19.325" endtime="20221124 01:11:19.326"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20221124 01:11:19.327" level="INFO">${volume_name} = 53572-volume-for-prepare</msg>
<status status="PASS" starttime="20221124 01:11:19.326" endtime="20221124 01:11:19.327"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${bucket_name}</arg>
<arg>${random}-bucket-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20221124 01:11:19.329" level="INFO">${bucket_name} = 53572-bucket-for-prepare</msg>
<status status="PASS" starttime="20221124 01:11:19.328" endtime="20221124 01:11:19.329"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create /${volume_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221124 01:11:19.335" level="INFO">Running command 'ozone sh volume create /53572-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20221124 01:11:22.409" level="INFO">${rc} = 0</msg>
<msg timestamp="20221124 01:11:22.409" level="INFO">${output} = </msg>
<status status="PASS" starttime="20221124 01:11:19.331" endtime="20221124 01:11:22.409"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221124 01:11:22.410" level="INFO"/>
<status status="PASS" starttime="20221124 01:11:22.410" endtime="20221124 01:11:22.410"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221124 01:11:22.411" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221124 01:11:22.411" endtime="20221124 01:11:22.411"/>
</kw>
<status status="PASS" starttime="20221124 01:11:19.330" endtime="20221124 01:11:22.411"/>
</kw>
<msg timestamp="20221124 01:11:22.412" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221124 01:11:19.330" endtime="20221124 01:11:22.412"/>
</kw>
<status status="PASS" starttime="20221124 01:11:19.330" endtime="20221124 01:11:22.412"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume_name}/${bucket_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221124 01:11:22.416" level="INFO">Running command 'ozone sh bucket create /53572-volume-for-prepare/53572-bucket-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20221124 01:11:25.623" level="INFO">${rc} = 0</msg>
<msg timestamp="20221124 01:11:25.623" level="INFO">${output} = </msg>
<status status="PASS" starttime="20221124 01:11:22.414" endtime="20221124 01:11:25.623"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221124 01:11:25.624" level="INFO"/>
<status status="PASS" starttime="20221124 01:11:25.624" endtime="20221124 01:11:25.624"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221124 01:11:25.625" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221124 01:11:25.625" endtime="20221124 01:11:25.625"/>
</kw>
<status status="PASS" starttime="20221124 01:11:22.414" endtime="20221124 01:11:25.625"/>
</kw>
<msg timestamp="20221124 01:11:25.626" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221124 01:11:22.413" endtime="20221124 01:11:25.626"/>
</kw>
<status status="PASS" starttime="20221124 01:11:22.413" endtime="20221124 01:11:25.626"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221124 01:11:25.631" level="INFO">Running command 'ozone sh key put /53572-volume-for-prepare/53572-bucket-for-prepare/prepare-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20221124 01:11:31.260" level="INFO">${rc} = 0</msg>
<msg timestamp="20221124 01:11:31.260" level="INFO">${output} = </msg>
<status status="PASS" starttime="20221124 01:11:25.628" endtime="20221124 01:11:31.260"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221124 01:11:31.262" level="INFO"/>
<status status="PASS" starttime="20221124 01:11:31.261" endtime="20221124 01:11:31.262"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221124 01:11:31.262" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221124 01:11:31.262" endtime="20221124 01:11:31.262"/>
</kw>
<status status="PASS" starttime="20221124 01:11:25.628" endtime="20221124 01:11:31.263"/>
</kw>
<msg timestamp="20221124 01:11:31.263" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221124 01:11:25.627" endtime="20221124 01:11:31.263"/>
</kw>
<status status="PASS" starttime="20221124 01:11:25.627" endtime="20221124 01:11:31.264"/>
</kw>
<status status="PASS" starttime="20221124 01:10:55.560" endtime="20221124 01:11:31.264"/>
</kw>
<test id="s1-s7-t1" name="Prepare Ozone Manager" line="39">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221124 01:11:31.266" endtime="20221124 01:11:31.267"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om prepare -id=omservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221124 01:11:31.271" level="INFO">Running command 'ozone admin om prepare -id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20221124 01:11:39.763" level="INFO">${rc} = 0</msg>
<msg timestamp="20221124 01:11:39.763" level="INFO">${output} = Ozone Manager Prepare Request successfully returned with Transaction Id : [413].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], C...</msg>
<status status="PASS" starttime="20221124 01:11:31.269" endtime="20221124 01:11:39.763"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221124 01:11:39.765" level="INFO">Ozone Manager Prepare Request successfully returned with Transaction Id : [413].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [413]
OM : [om3], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [413]
OM : [om2], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [413]

OM Preparation successful! 
All OMs are prepared
No new write requests will be allowed until preparation is cancelled or upgrade/downgrade is done.</msg>
<status status="PASS" starttime="20221124 01:11:39.763" endtime="20221124 01:11:39.765"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221124 01:11:39.766" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221124 01:11:39.765" endtime="20221124 01:11:39.766"/>
</kw>
<status status="PASS" starttime="20221124 01:11:31.268" endtime="20221124 01:11:39.766"/>
</kw>
<msg timestamp="20221124 01:11:39.766" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221124 01:11:31.267" endtime="20221124 01:11:39.767"/>
</kw>
<msg timestamp="20221124 01:11:39.767" level="INFO">${result} = Ozone Manager Prepare Request successfully returned with Transaction Id : [413].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], C...</msg>
<status status="PASS" starttime="20221124 01:11:31.267" endtime="20221124 01:11:39.767"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221124 01:11:39.768" endtime="20221124 01:11:39.768"/>
</kw>
<status status="PASS" starttime="20221124 01:11:39.768" endtime="20221124 01:11:39.769"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221124 01:11:31.265" endtime="20221124 01:11:39.769"/>
</test>
<test id="s1-s7-t2" name="Checks if the expected data is present in OM" line="43">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221124 01:11:39.772" endtime="20221124 01:11:39.773"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221124 01:11:39.777" level="INFO">Running command 'ozone sh key info /53572-volume-for-prepare/53572-bucket-for-prepare/prepare-key 2&gt;&amp;1'.</msg>
<msg timestamp="20221124 01:11:43.614" level="INFO">${rc} = 0</msg>
<msg timestamp="20221124 01:11:43.614" level="INFO">${output} = {
  "volumeName" : "53572-volume-for-prepare",
  "bucketName" : "53572-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17539,
  "creationTime" : "2022-11-24T01:11:28.721Z",
  "modificati...</msg>
<status status="PASS" starttime="20221124 01:11:39.775" endtime="20221124 01:11:43.614"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221124 01:11:43.615" level="INFO">{
  "volumeName" : "53572-volume-for-prepare",
  "bucketName" : "53572-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17539,
  "creationTime" : "2022-11-24T01:11:28.721Z",
  "modificationTime" : "2022-11-24T01:11:30.869Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "ozoneKeyLocations" : [ {
    "containerID" : 1,
    "localID" : 109611004723200101,
    "length" : 17539,
    "offset" : 0,
    "keyOffset" : 0
  } ]
}</msg>
<status status="PASS" starttime="20221124 01:11:43.615" endtime="20221124 01:11:43.616"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221124 01:11:43.616" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221124 01:11:43.616" endtime="20221124 01:11:43.616"/>
</kw>
<status status="PASS" starttime="20221124 01:11:39.774" endtime="20221124 01:11:43.617"/>
</kw>
<msg timestamp="20221124 01:11:43.617" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221124 01:11:39.774" endtime="20221124 01:11:43.617"/>
</kw>
<msg timestamp="20221124 01:11:43.618" level="INFO">${result} = {
  "volumeName" : "53572-volume-for-prepare",
  "bucketName" : "53572-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17539,
  "creationTime" : "2022-11-24T01:11:28.721Z",
  "modificati...</msg>
<status status="PASS" starttime="20221124 01:11:39.773" endtime="20221124 01:11:43.618"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"name\" : \"prepare-key\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221124 01:11:43.618" endtime="20221124 01:11:43.619"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221124 01:11:39.771" endtime="20221124 01:11:43.619"/>
</test>
<test id="s1-s7-t3" name="Test write operation fails" line="47">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221124 01:11:43.621" endtime="20221124 01:11:43.621"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key2 /opt/hadoop/NOTICE.txt</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221124 01:11:43.625" level="INFO">Running command 'ozone sh key put /53572-volume-for-prepare/53572-bucket-for-prepare/prepare-key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20221124 01:11:46.920" level="INFO">${rc} = 255</msg>
<msg timestamp="20221124 01:11:46.920" level="INFO">${output} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20221124 01:11:43.622" endtime="20221124 01:11:46.921"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221124 01:11:46.922" level="INFO">NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20221124 01:11:46.921" endtime="20221124 01:11:46.923"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221124 01:11:46.923" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221124 01:11:46.923" endtime="20221124 01:11:46.923"/>
</kw>
<msg timestamp="20221124 01:11:46.924" level="INFO">${result} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20221124 01:11:43.621" endtime="20221124 01:11:46.924"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM is in prepare mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221124 01:11:46.924" endtime="20221124 01:11:46.925"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key2</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221124 01:11:46.931" level="INFO">Running command 'ozone sh key info /53572-volume-for-prepare/53572-bucket-for-prepare/prepare-key2 2&gt;&amp;1'.</msg>
<msg timestamp="20221124 01:11:50.147" level="INFO">${rc} = 255</msg>
<msg timestamp="20221124 01:11:50.147" level="INFO">${output} = KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<status status="PASS" starttime="20221124 01:11:46.926" endtime="20221124 01:11:50.147"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221124 01:11:50.149" level="INFO">KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<status status="PASS" starttime="20221124 01:11:50.148" endtime="20221124 01:11:50.149"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221124 01:11:50.150" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221124 01:11:50.149" endtime="20221124 01:11:50.150"/>
</kw>
<status status="PASS" starttime="20221124 01:11:46.925" endtime="20221124 01:11:50.150"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221124 01:11:43.620" endtime="20221124 01:11:50.151"/>
</test>
<doc>Smoke test to test preparing OMs in an OM HA cluster.</doc>
<status status="PASS" starttime="20221124 01:10:55.487" endtime="20221124 01:11:50.152"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="160237"/>
</suite>
<statistics>
<total>
<stat pass="14" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="14" fail="0" skip="0" id="s1" name="ozone-om-prepare">ozone-om-prepare</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1" name="Om-Cancel-Prepare">ozone-om-prepare.Om-Cancel-Prepare</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="Om-Prepare">ozone-om-prepare.Om-Prepare</stat>
<stat pass="2" fail="0" skip="0" id="s1-s3" name="Om-Prepared">ozone-om-prepare.Om-Prepared</stat>
<stat pass="2" fail="0" skip="0" id="s1-s4" name="Om-Prepared">ozone-om-prepare.Om-Prepared</stat>
<stat pass="1" fail="0" skip="0" id="s1-s5" name="Loaddata">ozone-om-prepare.Loaddata</stat>
<stat pass="1" fail="0" skip="0" id="s1-s6" name="Readdata">ozone-om-prepare.Readdata</stat>
<stat pass="3" fail="0" skip="0" id="s1-s7" name="Om-Prepare">ozone-om-prepare.Om-Prepare</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
