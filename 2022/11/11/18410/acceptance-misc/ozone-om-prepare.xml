<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.0.1 (Python 3.8.10 on linux)" generated="20221111 10:07:34.334" rpa="false" schemaversion="3">
<suite id="s1" name="ozone-om-prepare" source="/opt/hadoop/smoketest/omha/om-prepare.robot">
<kw name="Create Specific OM data for prepare" type="SETUP">
<kw name="Freon OCKG" library="freon">
<arg>prefix=om-prepare</arg>
<arg>n=100</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221111 10:01:35.777" level="INFO">Running command 'ozone freon ockg --om-service-id=omservice -t 1 -n100 -p om-prepare  2&gt;&amp;1'.</msg>
<msg timestamp="20221111 10:01:54.030" level="INFO">${rc} = 0</msg>
<msg timestamp="20221111 10:01:54.030" level="INFO">${output} = 2022-11-11 10:01:37,198 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-11 10:01:37,328 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221111 10:01:35.773" endtime="20221111 10:01:54.030"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221111 10:01:54.031" level="INFO">2022-11-11 10:01:37,198 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-11 10:01:37,328 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-11-11 10:01:37,328 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-11-11 10:01:37,485 [main] INFO freon.BaseFreonGenerator: Executing test with prefix om-prepare and number-of-tests 100
2022-11-11 10:01:37,565 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-11-11 10:01:38,257 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2022-11-11 10:01:38,422 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false 
2022-11-11 10:01:38,585 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-11-11 10:01:39,513 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-11-11 10:01:39,591 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-11-11 10:01:39,737 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-11-11 10:01:40,591 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-11-11 10:01:41,593 [Thread-3] INFO freon.ProgressBar: Progress: 4.00 % (4 out of 100)
2022-11-11 10:01:42,594 [Thread-3] INFO freon.ProgressBar: Progress: 12.00 % (12 out of 100)
2022-11-11 10:01:43,596 [Thread-3] INFO freon.ProgressBar: Progress: 21.00 % (21 out of 100)
2022-11-11 10:01:44,604 [Thread-3] INFO freon.ProgressBar: Progress: 24.00 % (24 out of 100)
2022-11-11 10:01:45,605 [Thread-3] INFO freon.ProgressBar: Progress: 24.00 % (24 out of 100)
2022-11-11 10:01:46,606 [Thread-3] INFO freon.ProgressBar: Progress: 26.00 % (26 out of 100)
2022-11-11 10:01:47,606 [Thread-3] INFO freon.ProgressBar: Progress: 36.00 % (36 out of 100)
2022-11-11 10:01:48,606 [Thread-3] INFO freon.ProgressBar: Progress: 47.00 % (47 out of 100)
2022-11-11 10:01:49,607 [Thread-3] INFO freon.ProgressBar: Progress: 57.00 % (57 out of 100)
2022-11-11 10:01:50,607 [Thread-3] INFO freon.ProgressBar: Progress: 68.00 % (68 out of 100)
2022-11-11 10:01:51,612 [Thread-3] INFO freon.ProgressBar: Progress: 79.00 % (79 out of 100)
2022-11-11 10:01:52,627 [Thread-3] INFO freon.ProgressBar: Progress: 92.00 % (92 out of 100)
2022-11-11 10:01:53,628 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2022-11-11 10:01:53,669 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=100, min=57.078394, max=2637.245847, mean=143.2776451815834, stddev=330.62272237170373, median=94.681391, p75=107.05749, p95=144.223287, p98=254.600175, p99=2419.073665, p999=2637.245847, mean_rate=6.6024045180283695, m1=4.786557015237434, m5=4.322092687449014, m15=4.240972570136462, rate_unit=events/second, duration_unit=milliseconds
2022-11-11 10:01:53,670 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 16
2022-11-11 10:01:53,670 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-11-11 10:01:53,670 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20221111 10:01:54.030" endtime="20221111 10:01:54.031"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221111 10:01:54.031" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221111 10:01:54.031" endtime="20221111 10:01:54.032"/>
</kw>
<status status="PASS" starttime="20221111 10:01:35.773" endtime="20221111 10:01:54.032"/>
</kw>
<msg timestamp="20221111 10:01:54.032" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221111 10:01:35.773" endtime="20221111 10:01:54.033"/>
</kw>
<msg timestamp="20221111 10:01:54.034" level="INFO">${result} = 2022-11-11 10:01:37,198 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-11 10:01:37,328 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221111 10:01:35.772" endtime="20221111 10:01:54.034"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221111 10:01:54.034" endtime="20221111 10:01:54.034"/>
</kw>
<status status="PASS" starttime="20221111 10:01:35.771" endtime="20221111 10:01:54.034"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20221111 10:01:54.035" level="INFO">${random} = 59089</msg>
<status status="PASS" starttime="20221111 10:01:54.034" endtime="20221111 10:01:54.035"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20221111 10:01:54.036" level="INFO">${volume_name} = 59089-volume-for-prepare</msg>
<status status="PASS" starttime="20221111 10:01:54.035" endtime="20221111 10:01:54.037"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${bucket_name}</arg>
<arg>${random}-bucket-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20221111 10:01:54.038" level="INFO">${bucket_name} = 59089-bucket-for-prepare</msg>
<status status="PASS" starttime="20221111 10:01:54.037" endtime="20221111 10:01:54.038"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create /${volume_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221111 10:01:54.042" level="INFO">Running command 'ozone sh volume create /59089-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20221111 10:01:56.401" level="INFO">${rc} = 0</msg>
<msg timestamp="20221111 10:01:56.401" level="INFO">${output} = </msg>
<status status="PASS" starttime="20221111 10:01:54.040" endtime="20221111 10:01:56.402"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221111 10:01:56.403" level="INFO"/>
<status status="PASS" starttime="20221111 10:01:56.402" endtime="20221111 10:01:56.403"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221111 10:01:56.403" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221111 10:01:56.403" endtime="20221111 10:01:56.403"/>
</kw>
<status status="PASS" starttime="20221111 10:01:54.039" endtime="20221111 10:01:56.403"/>
</kw>
<msg timestamp="20221111 10:01:56.403" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221111 10:01:54.039" endtime="20221111 10:01:56.404"/>
</kw>
<status status="PASS" starttime="20221111 10:01:54.038" endtime="20221111 10:01:56.404"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume_name}/${bucket_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221111 10:01:56.408" level="INFO">Running command 'ozone sh bucket create /59089-volume-for-prepare/59089-bucket-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20221111 10:01:58.667" level="INFO">${rc} = 0</msg>
<msg timestamp="20221111 10:01:58.667" level="INFO">${output} = </msg>
<status status="PASS" starttime="20221111 10:01:56.405" endtime="20221111 10:01:58.667"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221111 10:01:58.668" level="INFO"/>
<status status="PASS" starttime="20221111 10:01:58.667" endtime="20221111 10:01:58.668"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221111 10:01:58.669" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221111 10:01:58.669" endtime="20221111 10:01:58.669"/>
</kw>
<status status="PASS" starttime="20221111 10:01:56.405" endtime="20221111 10:01:58.669"/>
</kw>
<msg timestamp="20221111 10:01:58.669" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221111 10:01:56.405" endtime="20221111 10:01:58.670"/>
</kw>
<status status="PASS" starttime="20221111 10:01:56.404" endtime="20221111 10:01:58.670"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221111 10:01:58.673" level="INFO">Running command 'ozone sh key put /59089-volume-for-prepare/59089-bucket-for-prepare/prepare-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20221111 10:02:03.301" level="INFO">${rc} = 0</msg>
<msg timestamp="20221111 10:02:03.301" level="INFO">${output} = </msg>
<status status="PASS" starttime="20221111 10:01:58.671" endtime="20221111 10:02:03.301"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221111 10:02:03.302" level="INFO"/>
<status status="PASS" starttime="20221111 10:02:03.301" endtime="20221111 10:02:03.302"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221111 10:02:03.302" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221111 10:02:03.302" endtime="20221111 10:02:03.302"/>
</kw>
<status status="PASS" starttime="20221111 10:01:58.671" endtime="20221111 10:02:03.303"/>
</kw>
<msg timestamp="20221111 10:02:03.303" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221111 10:01:58.671" endtime="20221111 10:02:03.303"/>
</kw>
<status status="PASS" starttime="20221111 10:01:58.670" endtime="20221111 10:02:03.304"/>
</kw>
<status status="PASS" starttime="20221111 10:01:35.771" endtime="20221111 10:02:03.304"/>
</kw>
<test id="s1-t1" name="Prepare Ozone Manager" line="39">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221111 10:02:03.306" endtime="20221111 10:02:03.306"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om prepare -id=omservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221111 10:02:03.310" level="INFO">Running command 'ozone admin om prepare -id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20221111 10:07:03.306" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20221111 10:02:03.308" endtime="20221111 10:07:03.306"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20221111 10:07:03.306" endtime="20221111 10:07:03.306"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20221111 10:07:03.306" endtime="20221111 10:07:03.306"/>
</kw>
<status status="FAIL" starttime="20221111 10:02:03.307" endtime="20221111 10:07:03.307"/>
</kw>
<msg timestamp="20221111 10:07:03.307" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20221111 10:02:03.307" endtime="20221111 10:07:03.307"/>
</kw>
<status status="FAIL" starttime="20221111 10:02:03.306" endtime="20221111 10:07:03.308"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20221111 10:07:03.308" endtime="20221111 10:07:03.308"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20221111 10:02:03.304" endtime="20221111 10:07:03.309">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-t2" name="Checks if the expected data is present in OM" line="43">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221111 10:07:03.311" endtime="20221111 10:07:03.311"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221111 10:07:03.314" level="INFO">Running command 'ozone sh key info /59089-volume-for-prepare/59089-bucket-for-prepare/prepare-key 2&gt;&amp;1'.</msg>
<msg timestamp="20221111 10:07:06.055" level="INFO">${rc} = 0</msg>
<msg timestamp="20221111 10:07:06.055" level="INFO">${output} = {
  "volumeName" : "59089-volume-for-prepare",
  "bucketName" : "59089-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17539,
  "creationTime" : "2022-11-11T10:02:01.175Z",
  "modificati...</msg>
<status status="PASS" starttime="20221111 10:07:03.312" endtime="20221111 10:07:06.055"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221111 10:07:06.056" level="INFO">{
  "volumeName" : "59089-volume-for-prepare",
  "bucketName" : "59089-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17539,
  "creationTime" : "2022-11-11T10:02:01.175Z",
  "modificationTime" : "2022-11-11T10:02:02.908Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "ozoneKeyLocations" : [ {
    "containerID" : 3,
    "localID" : 109611004723200101,
    "length" : 17539,
    "offset" : 0,
    "keyOffset" : 0
  } ]
}</msg>
<status status="PASS" starttime="20221111 10:07:06.055" endtime="20221111 10:07:06.056"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221111 10:07:06.057" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221111 10:07:06.056" endtime="20221111 10:07:06.057"/>
</kw>
<status status="PASS" starttime="20221111 10:07:03.312" endtime="20221111 10:07:06.057"/>
</kw>
<msg timestamp="20221111 10:07:06.057" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221111 10:07:03.312" endtime="20221111 10:07:06.058"/>
</kw>
<msg timestamp="20221111 10:07:06.058" level="INFO">${result} = {
  "volumeName" : "59089-volume-for-prepare",
  "bucketName" : "59089-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17539,
  "creationTime" : "2022-11-11T10:02:01.175Z",
  "modificati...</msg>
<status status="PASS" starttime="20221111 10:07:03.311" endtime="20221111 10:07:06.058"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"name\" : \"prepare-key\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221111 10:07:06.058" endtime="20221111 10:07:06.058"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221111 10:07:03.310" endtime="20221111 10:07:06.059"/>
</test>
<test id="s1-t3" name="Test write operation fails" line="47">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221111 10:07:06.060" endtime="20221111 10:07:06.061"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key2 /opt/hadoop/NOTICE.txt</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221111 10:07:06.064" level="INFO">Running command 'ozone sh key put /59089-volume-for-prepare/59089-bucket-for-prepare/prepare-key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20221111 10:07:08.524" level="INFO">${rc} = 255</msg>
<msg timestamp="20221111 10:07:08.524" level="INFO">${output} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20221111 10:07:06.061" endtime="20221111 10:07:08.524"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221111 10:07:08.525" level="INFO">NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20221111 10:07:08.524" endtime="20221111 10:07:08.525"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221111 10:07:08.526" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221111 10:07:08.525" endtime="20221111 10:07:08.526"/>
</kw>
<msg timestamp="20221111 10:07:08.526" level="INFO">${result} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20221111 10:07:06.061" endtime="20221111 10:07:08.526"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM is in prepare mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221111 10:07:08.526" endtime="20221111 10:07:08.527"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key2</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221111 10:07:08.530" level="INFO">Running command 'ozone sh key info /59089-volume-for-prepare/59089-bucket-for-prepare/prepare-key2 2&gt;&amp;1'.</msg>
<msg timestamp="20221111 10:07:10.915" level="INFO">${rc} = 255</msg>
<msg timestamp="20221111 10:07:10.915" level="INFO">${output} = KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<status status="PASS" starttime="20221111 10:07:08.527" endtime="20221111 10:07:10.915"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221111 10:07:10.916" level="INFO">KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<status status="PASS" starttime="20221111 10:07:10.916" endtime="20221111 10:07:10.917"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221111 10:07:10.917" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221111 10:07:10.917" endtime="20221111 10:07:10.917"/>
</kw>
<status status="PASS" starttime="20221111 10:07:08.527" endtime="20221111 10:07:10.918"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221111 10:07:06.060" endtime="20221111 10:07:10.918"/>
</test>
<doc>Smoke test to test preparing OMs in an OM HA cluster.</doc>
<status status="FAIL" starttime="20221111 10:01:35.715" endtime="20221111 10:07:10.919"/>
</suite>
<statistics>
<total>
<stat pass="2" fail="1" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="2" fail="1" skip="0" id="s1" name="ozone-om-prepare">ozone-om-prepare</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
