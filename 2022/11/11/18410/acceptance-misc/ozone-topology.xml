<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.0.1 (Python 3.8.10 on linux)" generated="20221111 10:13:58.933" rpa="false" schemaversion="3">
<suite id="s1" name="ozone-topology">
<suite id="s1-s1" name="Cli" source="/opt/hadoop/smoketest/topology/cli.robot">
<test id="s1-s1-t1" name="Run printTopology" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221111 10:09:24.434" level="INFO">Running command 'ozone admin printTopology 2&gt;&amp;1'.</msg>
<msg timestamp="20221111 10:09:28.407" level="INFO">${rc} = 0</msg>
<msg timestamp="20221111 10:09:28.407" level="INFO">${output} = State = HEALTHY
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.4(ozone-topolog...</msg>
<status status="PASS" starttime="20221111 10:09:24.430" endtime="20221111 10:09:28.407"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221111 10:09:28.408" level="INFO">State = HEALTHY
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2</msg>
<status status="PASS" starttime="20221111 10:09:28.408" endtime="20221111 10:09:28.409"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221111 10:09:28.409" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221111 10:09:28.409" endtime="20221111 10:09:28.409"/>
</kw>
<status status="PASS" starttime="20221111 10:09:24.430" endtime="20221111 10:09:28.410"/>
</kw>
<msg timestamp="20221111 10:09:28.410" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221111 10:09:24.430" endtime="20221111 10:09:28.411"/>
</kw>
<msg timestamp="20221111 10:09:28.411" level="INFO">${output} = State = HEALTHY
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.4(ozone-topolog...</msg>
<status status="PASS" starttime="20221111 10:09:24.429" endtime="20221111 10:09:28.411"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
<arg>IN_SERVICE</arg>
<arg>/rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221111 10:09:28.411" endtime="20221111 10:09:28.412"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221111 10:09:24.428" endtime="20221111 10:09:28.412"/>
</test>
<test id="s1-s1-t2" name="Run printTopology -o" line="30">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology -o</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221111 10:09:28.417" level="INFO">Running command 'ozone admin printTopology -o 2&gt;&amp;1'.</msg>
<msg timestamp="20221111 10:09:32.003" level="INFO">${rc} = 0</msg>
<msg timestamp="20221111 10:09:32.003" level="INFO">${output} = State = HEALTHY
Location: /rack1
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net) IN_SERVICE
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net) IN_SERVICE
 10.5.0.5(ozone-topology_data...</msg>
<status status="PASS" starttime="20221111 10:09:28.415" endtime="20221111 10:09:32.003"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221111 10:09:32.005" level="INFO">State = HEALTHY
Location: /rack1
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net) IN_SERVICE
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net) IN_SERVICE
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net) IN_SERVICE
Location: /rack2
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net) IN_SERVICE
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net) IN_SERVICE
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net) IN_SERVICE</msg>
<status status="PASS" starttime="20221111 10:09:32.004" endtime="20221111 10:09:32.005"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221111 10:09:32.005" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221111 10:09:32.005" endtime="20221111 10:09:32.005"/>
</kw>
<status status="PASS" starttime="20221111 10:09:28.415" endtime="20221111 10:09:32.006"/>
</kw>
<msg timestamp="20221111 10:09:32.006" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221111 10:09:28.414" endtime="20221111 10:09:32.006"/>
</kw>
<msg timestamp="20221111 10:09:32.006" level="INFO">${output} = State = HEALTHY
Location: /rack1
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net) IN_SERVICE
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net) IN_SERVICE
 10.5.0.5(ozone-topology_data...</msg>
<status status="PASS" starttime="20221111 10:09:28.414" endtime="20221111 10:09:32.006"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Location: /rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221111 10:09:32.007" endtime="20221111 10:09:32.007"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net) IN_SERVICE</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221111 10:09:32.007" endtime="20221111 10:09:32.007"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221111 10:09:28.413" endtime="20221111 10:09:32.008"/>
</test>
<test id="s1-s1-t3" name="Run printTopology --operational-state IN_SERVICE" line="34">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology --operational-state IN_SERVICE</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221111 10:09:32.013" level="INFO">Running command 'ozone admin printTopology --operational-state IN_SERVICE 2&gt;&amp;1'.</msg>
<msg timestamp="20221111 10:09:35.555" level="INFO">${rc} = 0</msg>
<msg timestamp="20221111 10:09:35.555" level="INFO">${output} = State = HEALTHY
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.4(ozone-topolog...</msg>
<status status="PASS" starttime="20221111 10:09:32.011" endtime="20221111 10:09:35.555"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221111 10:09:35.557" level="INFO">State = HEALTHY
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2</msg>
<status status="PASS" starttime="20221111 10:09:35.556" endtime="20221111 10:09:35.557"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221111 10:09:35.557" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221111 10:09:35.557" endtime="20221111 10:09:35.557"/>
</kw>
<status status="PASS" starttime="20221111 10:09:32.010" endtime="20221111 10:09:35.558"/>
</kw>
<msg timestamp="20221111 10:09:35.558" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221111 10:09:32.010" endtime="20221111 10:09:35.558"/>
</kw>
<msg timestamp="20221111 10:09:35.559" level="INFO">${output} = State = HEALTHY
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.4(ozone-topolog...</msg>
<status status="PASS" starttime="20221111 10:09:32.009" endtime="20221111 10:09:35.559"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
<arg>IN_SERVICE</arg>
<arg>/rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221111 10:09:35.559" endtime="20221111 10:09:35.559"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221111 10:09:32.009" endtime="20221111 10:09:35.559"/>
</test>
<test id="s1-s1-t4" name="Run printTopology --node-state HEALTHY" line="37">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology --node-state HEALTHY</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221111 10:09:35.571" level="INFO">Running command 'ozone admin printTopology --node-state HEALTHY 2&gt;&amp;1'.</msg>
<msg timestamp="20221111 10:09:38.926" level="INFO">${rc} = 0</msg>
<msg timestamp="20221111 10:09:38.926" level="INFO">${output} = State = HEALTHY
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.4(ozone-topolog...</msg>
<status status="PASS" starttime="20221111 10:09:35.568" endtime="20221111 10:09:38.926"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221111 10:09:38.927" level="INFO">State = HEALTHY
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2</msg>
<status status="PASS" starttime="20221111 10:09:38.926" endtime="20221111 10:09:38.927"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221111 10:09:38.928" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221111 10:09:38.927" endtime="20221111 10:09:38.928"/>
</kw>
<status status="PASS" starttime="20221111 10:09:35.567" endtime="20221111 10:09:38.928"/>
</kw>
<msg timestamp="20221111 10:09:38.928" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221111 10:09:35.567" endtime="20221111 10:09:38.929"/>
</kw>
<msg timestamp="20221111 10:09:38.929" level="INFO">${output} = State = HEALTHY
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.4(ozone-topolog...</msg>
<status status="PASS" starttime="20221111 10:09:35.567" endtime="20221111 10:09:38.929"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
<arg>IN_SERVICE</arg>
<arg>/rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221111 10:09:38.929" endtime="20221111 10:09:38.930"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221111 10:09:35.560" endtime="20221111 10:09:38.930"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20221111 10:09:24.384" endtime="20221111 10:09:38.931"/>
</suite>
<suite id="s1-s2" name="Recon" source="/opt/hadoop/smoketest/recon">
<suite id="s1-s2-s1" name="Recon-Api" source="/opt/hadoop/smoketest/recon/recon-api.robot">
<test id="s1-s2-s1-t1" name="Check if Recon picks up OM data" line="61">
<kw name="Freon OCKG" library="freon" type="SETUP">
<arg>n=10</arg>
<arg>args=-s 1025 -v recon -b api</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221111 10:09:44.191" level="INFO">Running command 'ozone freon ockg  -t 1 -n10 -p ockg -s 1025 -v recon -b api 2&gt;&amp;1'.</msg>
<msg timestamp="20221111 10:09:53.709" level="INFO">${rc} = 0</msg>
<msg timestamp="20221111 10:09:53.709" level="INFO">${output} = 2022-11-11 10:09:46,371 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-11 10:09:46,544 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221111 10:09:44.188" endtime="20221111 10:09:53.709"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221111 10:09:53.710" level="INFO">2022-11-11 10:09:46,371 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-11 10:09:46,544 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-11-11 10:09:46,544 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-11-11 10:09:46,748 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockg and number-of-tests 10
2022-11-11 10:09:46,836 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2022-11-11 10:09:47,840 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2022-11-11 10:09:48,032 [main] INFO rpc.RpcClient: Creating Volume: recon, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2022-11-11 10:09:48,098 [main] INFO rpc.RpcClient: Creating Bucket: recon/api, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false 
2022-11-11 10:09:48,822 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-11-11 10:09:48,841 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2022-11-11 10:09:49,094 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-11-11 10:09:49,842 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2022-11-11 10:09:50,842 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2022-11-11 10:09:51,850 [Thread-5] INFO freon.ProgressBar: Progress: 40.00 % (4 out of 10)
2022-11-11 10:09:52,850 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (10 out of 10)
2022-11-11 10:09:53,337 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=10, min=78.947497, max=2756.487562, mean=446.12375565246464, stddev=776.314965021314, median=128.758495, p75=295.367187, p95=2756.487562, p98=2756.487562, p99=2756.487562, p999=2756.487562, mean_rate=1.9214487690516013, m1=2.0, m5=2.0, m15=2.0, rate_unit=events/second, duration_unit=milliseconds
2022-11-11 10:09:53,338 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 7
2022-11-11 10:09:53,338 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-11-11 10:09:53,338 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 10</msg>
<status status="PASS" starttime="20221111 10:09:53.709" endtime="20221111 10:09:53.710"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221111 10:09:53.711" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221111 10:09:53.710" endtime="20221111 10:09:53.711"/>
</kw>
<status status="PASS" starttime="20221111 10:09:44.188" endtime="20221111 10:09:53.711"/>
</kw>
<msg timestamp="20221111 10:09:53.712" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221111 10:09:44.187" endtime="20221111 10:09:53.713"/>
</kw>
<msg timestamp="20221111 10:09:53.713" level="INFO">${result} = 2022-11-11 10:09:46,371 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-11 10:09:46,544 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221111 10:09:44.187" endtime="20221111 10:09:53.713"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221111 10:09:53.713" endtime="20221111 10:09:53.714"/>
</kw>
<status status="PASS" starttime="20221111 10:09:44.186" endtime="20221111 10:09:53.714"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Check if Recon picks up container from OM</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221111 10:09:53.715" endtime="20221111 10:09:53.716"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221111 10:09:53.719" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20221111 10:09:53.952" level="INFO">${rc} = 0</msg>
<msg timestamp="20221111 10:09:53.952" level="INFO">${output} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221111 10:09:53.717" endtime="20221111 10:09:53.952"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221111 10:09:53.953" level="INFO">{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221111 10:09:53.952" endtime="20221111 10:09:53.953"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221111 10:09:53.954" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221111 10:09:53.953" endtime="20221111 10:09:53.954"/>
</kw>
<status status="PASS" starttime="20221111 10:09:53.716" endtime="20221111 10:09:53.954"/>
</kw>
<msg timestamp="20221111 10:09:53.954" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221111 10:09:53.716" endtime="20221111 10:09:53.955"/>
</kw>
<msg timestamp="20221111 10:09:53.955" level="INFO">${result} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221111 10:09:53.716" endtime="20221111 10:09:53.955"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221111 10:09:53.955" endtime="20221111 10:09:53.956"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221111 10:09:53.960" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20221111 10:09:53.994" level="INFO">${rc} = 0</msg>
<msg timestamp="20221111 10:09:53.994" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221111 10:09:53.957" endtime="20221111 10:09:53.994"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221111 10:09:53.995" level="INFO">[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221111 10:09:53.994" endtime="20221111 10:09:53.995"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221111 10:09:53.996" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221111 10:09:53.995" endtime="20221111 10:09:53.996"/>
</kw>
<status status="PASS" starttime="20221111 10:09:53.957" endtime="20221111 10:09:53.996"/>
</kw>
<msg timestamp="20221111 10:09:53.996" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221111 10:09:53.956" endtime="20221111 10:09:53.997"/>
</kw>
<msg timestamp="20221111 10:09:53.997" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221111 10:09:53.956" endtime="20221111 10:09:53.997"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20221111 10:09:53.998" level="FAIL">'[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20221111 10:09:53.997" endtime="20221111 10:09:53.998"/>
</kw>
<status status="FAIL" starttime="20221111 10:09:53.715" endtime="20221111 10:09:53.999"/>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221111 10:10:04.000" endtime="20221111 10:10:04.001"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221111 10:10:04.005" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20221111 10:10:04.021" level="INFO">${rc} = 0</msg>
<msg timestamp="20221111 10:10:04.021" level="INFO">${output} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221111 10:10:04.002" endtime="20221111 10:10:04.021"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221111 10:10:04.022" level="INFO">{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221111 10:10:04.021" endtime="20221111 10:10:04.022"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221111 10:10:04.023" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221111 10:10:04.022" endtime="20221111 10:10:04.023"/>
</kw>
<status status="PASS" starttime="20221111 10:10:04.002" endtime="20221111 10:10:04.023"/>
</kw>
<msg timestamp="20221111 10:10:04.023" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221111 10:10:04.001" endtime="20221111 10:10:04.024"/>
</kw>
<msg timestamp="20221111 10:10:04.024" level="INFO">${result} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221111 10:10:04.001" endtime="20221111 10:10:04.024"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221111 10:10:04.024" endtime="20221111 10:10:04.025"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221111 10:10:04.028" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20221111 10:10:04.043" level="INFO">${rc} = 0</msg>
<msg timestamp="20221111 10:10:04.043" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221111 10:10:04.026" endtime="20221111 10:10:04.043"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221111 10:10:04.044" level="INFO">[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221111 10:10:04.043" endtime="20221111 10:10:04.044"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221111 10:10:04.045" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221111 10:10:04.044" endtime="20221111 10:10:04.045"/>
</kw>
<status status="PASS" starttime="20221111 10:10:04.026" endtime="20221111 10:10:04.045"/>
</kw>
<msg timestamp="20221111 10:10:04.045" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221111 10:10:04.025" endtime="20221111 10:10:04.046"/>
</kw>
<msg timestamp="20221111 10:10:04.046" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221111 10:10:04.025" endtime="20221111 10:10:04.046"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20221111 10:10:04.047" level="FAIL">'[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20221111 10:10:04.046" endtime="20221111 10:10:04.047"/>
</kw>
<status status="FAIL" starttime="20221111 10:10:04.000" endtime="20221111 10:10:04.048"/>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221111 10:10:14.049" endtime="20221111 10:10:14.050"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221111 10:10:14.053" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20221111 10:10:14.073" level="INFO">${rc} = 0</msg>
<msg timestamp="20221111 10:10:14.073" level="INFO">${output} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221111 10:10:14.051" endtime="20221111 10:10:14.073"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221111 10:10:14.074" level="INFO">{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221111 10:10:14.074" endtime="20221111 10:10:14.074"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221111 10:10:14.075" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221111 10:10:14.075" endtime="20221111 10:10:14.075"/>
</kw>
<status status="PASS" starttime="20221111 10:10:14.050" endtime="20221111 10:10:14.075"/>
</kw>
<msg timestamp="20221111 10:10:14.075" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221111 10:10:14.050" endtime="20221111 10:10:14.076"/>
</kw>
<msg timestamp="20221111 10:10:14.076" level="INFO">${result} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221111 10:10:14.050" endtime="20221111 10:10:14.076"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221111 10:10:14.076" endtime="20221111 10:10:14.077"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221111 10:10:14.080" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20221111 10:10:14.098" level="INFO">${rc} = 0</msg>
<msg timestamp="20221111 10:10:14.098" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221111 10:10:14.078" endtime="20221111 10:10:14.098"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221111 10:10:14.099" level="INFO">[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221111 10:10:14.098" endtime="20221111 10:10:14.099"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221111 10:10:14.100" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221111 10:10:14.100" endtime="20221111 10:10:14.100"/>
</kw>
<status status="PASS" starttime="20221111 10:10:14.078" endtime="20221111 10:10:14.101"/>
</kw>
<msg timestamp="20221111 10:10:14.101" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221111 10:10:14.077" endtime="20221111 10:10:14.101"/>
</kw>
<msg timestamp="20221111 10:10:14.102" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221111 10:10:14.077" endtime="20221111 10:10:14.102"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20221111 10:10:14.103" level="FAIL">'[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20221111 10:10:14.102" endtime="20221111 10:10:14.103"/>
</kw>
<status status="FAIL" starttime="20221111 10:10:14.048" endtime="20221111 10:10:14.104"/>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221111 10:10:24.105" endtime="20221111 10:10:24.106"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221111 10:10:24.109" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20221111 10:10:24.124" level="INFO">${rc} = 0</msg>
<msg timestamp="20221111 10:10:24.124" level="INFO">${output} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221111 10:10:24.107" endtime="20221111 10:10:24.124"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221111 10:10:24.125" level="INFO">{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221111 10:10:24.125" endtime="20221111 10:10:24.125"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221111 10:10:24.126" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221111 10:10:24.126" endtime="20221111 10:10:24.126"/>
</kw>
<status status="PASS" starttime="20221111 10:10:24.106" endtime="20221111 10:10:24.126"/>
</kw>
<msg timestamp="20221111 10:10:24.126" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221111 10:10:24.106" endtime="20221111 10:10:24.127"/>
</kw>
<msg timestamp="20221111 10:10:24.127" level="INFO">${result} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221111 10:10:24.106" endtime="20221111 10:10:24.127"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221111 10:10:24.127" endtime="20221111 10:10:24.128"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221111 10:10:24.131" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20221111 10:10:24.146" level="INFO">${rc} = 0</msg>
<msg timestamp="20221111 10:10:24.146" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221111 10:10:24.129" endtime="20221111 10:10:24.146"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221111 10:10:24.147" level="INFO">[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221111 10:10:24.146" endtime="20221111 10:10:24.147"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221111 10:10:24.148" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221111 10:10:24.148" endtime="20221111 10:10:24.148"/>
</kw>
<status status="PASS" starttime="20221111 10:10:24.129" endtime="20221111 10:10:24.148"/>
</kw>
<msg timestamp="20221111 10:10:24.148" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221111 10:10:24.128" endtime="20221111 10:10:24.149"/>
</kw>
<msg timestamp="20221111 10:10:24.149" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221111 10:10:24.128" endtime="20221111 10:10:24.149"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20221111 10:10:24.150" level="FAIL">'[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20221111 10:10:24.149" endtime="20221111 10:10:24.150"/>
</kw>
<status status="FAIL" starttime="20221111 10:10:24.104" endtime="20221111 10:10:24.151"/>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221111 10:10:34.152" endtime="20221111 10:10:34.153"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221111 10:10:34.156" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20221111 10:10:34.178" level="INFO">${rc} = 0</msg>
<msg timestamp="20221111 10:10:34.178" level="INFO">${output} = {"data":{"totalCount":4,"containers":[{"ContainerID":1,"NumberOfKeys":4},{"ContainerID":2,"NumberOfKeys":2},{"ContainerID":3,"NumberOfKeys":4},{"ContainerID":4,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221111 10:10:34.154" endtime="20221111 10:10:34.178"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221111 10:10:34.180" level="INFO">{"data":{"totalCount":4,"containers":[{"ContainerID":1,"NumberOfKeys":4},{"ContainerID":2,"NumberOfKeys":2},{"ContainerID":3,"NumberOfKeys":4},{"ContainerID":4,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221111 10:10:34.179" endtime="20221111 10:10:34.180"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221111 10:10:34.181" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221111 10:10:34.180" endtime="20221111 10:10:34.181"/>
</kw>
<status status="PASS" starttime="20221111 10:10:34.154" endtime="20221111 10:10:34.181"/>
</kw>
<msg timestamp="20221111 10:10:34.181" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221111 10:10:34.153" endtime="20221111 10:10:34.182"/>
</kw>
<msg timestamp="20221111 10:10:34.182" level="INFO">${result} = {"data":{"totalCount":4,"containers":[{"ContainerID":1,"NumberOfKeys":4},{"ContainerID":2,"NumberOfKeys":2},{"ContainerID":3,"NumberOfKeys":4},{"ContainerID":4,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221111 10:10:34.153" endtime="20221111 10:10:34.182"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221111 10:10:34.182" endtime="20221111 10:10:34.183"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221111 10:10:34.187" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20221111 10:10:34.201" level="INFO">${rc} = 0</msg>
<msg timestamp="20221111 10:10:34.201" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1},{"volume":"recon","bucket":"api","fileSize":2048,"count":10}]</msg>
<status status="PASS" starttime="20221111 10:10:34.184" endtime="20221111 10:10:34.201"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221111 10:10:34.202" level="INFO">[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1},{"volume":"recon","bucket":"api","fileSize":2048,"count":10}]</msg>
<status status="PASS" starttime="20221111 10:10:34.202" endtime="20221111 10:10:34.203"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221111 10:10:34.203" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221111 10:10:34.203" endtime="20221111 10:10:34.203"/>
</kw>
<status status="PASS" starttime="20221111 10:10:34.184" endtime="20221111 10:10:34.203"/>
</kw>
<msg timestamp="20221111 10:10:34.203" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221111 10:10:34.183" endtime="20221111 10:10:34.204"/>
</kw>
<msg timestamp="20221111 10:10:34.204" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1},{"volume":"recon","bucket":"api","fileSize":2048,"count":10}]</msg>
<status status="PASS" starttime="20221111 10:10:34.183" endtime="20221111 10:10:34.204"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221111 10:10:34.205" endtime="20221111 10:10:34.205"/>
</kw>
<status status="PASS" starttime="20221111 10:10:34.152" endtime="20221111 10:10:34.205"/>
</kw>
<status status="PASS" starttime="20221111 10:09:53.714" endtime="20221111 10:10:34.205"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221111 10:09:44.185" endtime="20221111 10:10:34.205"/>
</test>
<test id="s1-s2-s1-t2" name="Check if Recon picks up DN heartbeats" line="65">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/datanodes</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221111 10:10:34.211" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/datanodes 2&gt;&amp;1'.</msg>
<msg timestamp="20221111 10:10:34.245" level="INFO">${rc} = 0</msg>
<msg timestamp="20221111 10:10:34.245" level="INFO">${output} = {"totalCount":6,"datanodes":[{"uuid":"f155614d-edc8-4bd7-9fe7-6243656edced","hostname":"ozone-topology_datanode_3_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1668161...</msg>
<status status="PASS" starttime="20221111 10:10:34.208" endtime="20221111 10:10:34.245"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221111 10:10:34.246" level="INFO">{"totalCount":6,"datanodes":[{"uuid":"f155614d-edc8-4bd7-9fe7-6243656edced","hostname":"ozone-topology_datanode_3_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1668161419978,"storageReport":{"capacity":89297309696,"used":23557,"remaining":27511500800},"pipelines":[{"pipelineID":"ea668ee0-74bc-4cd8-817f-dfa91fc192b3","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net"},{"pipelineID":"39a46a95-9409-45e4-8e35-6a53bff0f824","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net"},{"pipelineID":"2cf1a9a5-3249-4956-8b68-b877dbde31c5","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net"}],"containers":2,"openContainers":2,"leaderCount":2,"version":"1.3.0-SNAPSHOT","setupTime":1668161271537,"revision":"a13c62b60556cd003ee2149179f72029d9e35756","buildDate":"2022-11-11T09:44Z","layoutVersion":4,"networkLocation":"/rack1"},{"uuid":"0dc43dd5-dd34-40f0-98b4-02f5c2f3e86f","hostname":"ozone-topology_datanode_2_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1668161421405,"storageReport":{"capacity":89297309696,"used":21511,"remaining":27511500800},"pipelines":[{"pipelineID":"ac81ff55-7d36-4459-8bc6-2f2f026ed96e","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net"},{"pipelineID":"6db09561-7714-4d02-9fb0-2713f0f550da","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net"},{"pipelineID":"39a46a95-9409-45e4-8e35-6a53bff0f824","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net"}],"containers":2,"openContainers":2,"leaderCount":1,"version":"1.3.0-SNAPSHOT","setupTime":1668161271739,"revision":"a13c62b60556cd003ee2149179f72029d9e35756","buildDate":"2022-11-11T09:44Z","layoutVersion":4,"networkLocation":"/rack1"},{"uuid":"0be8fe12-0f23-49cb-9273-5bdf59ad82b9","hostname":"ozone-topology_datanode_5_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1668161421398,"storageReport":{"capacity":89297309696,"used":21511,"remaining":27511500800},"pipelines":[{"pipelineID":"8c621e10-3ac1-48b0-80c5-250b82385a27","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net"},{"pipelineID":"6db09561-7714-4d02-9fb0-2713f0f550da","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net"},{"pipelineID":"39a46a95-9409-45e4-8e35-6a53bff0f824","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net"}],"containers":2,"openContainers":2,"leaderCount":1,"version":"1.3.0-SNAPSHOT","setupTime":1668161273105,"revision":"a13c62b60556cd003ee2149179f72029d9e35756","buildDate":"2022-11-11T09:44Z","layoutVersion":4,"networkLocation":"/rack2"},{"uuid":"b4b90f88-8404-49ff-ac14-a1f2513821ff","hostname":"ozone-topology_datanode_1_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1668161422298,"storageReport":{"capacity":89297309696,"used":7171,"remaining":27511500800},"pipelines":[{"pipelineID":"17ea8639-ec15-4d41-b819-90854487d55f","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net"},{"pipelineID":"ea668ee0-74bc-4cd8-817f-dfa91fc192b3","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net"},{"pipelineID":"35dfa1d3-f78e-4fa9-8dae-cad784fcd866","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net"}],"containers":2,"openContainers":2,"leaderCount":2,"version":"1.3.0-SNAPSHOT","setupTime":1668161272353,"revision":"a13c62b60556cd003ee2149179f72029d9e35756","buildDate":"2022-11-11T09:44Z","layoutVersion":4,"networkLocation":"/rack1"},{"uuid":"970c6f4f-6c85-43c3-ab9a-94421f19deb9","hostname":"ozone-topology_datanode_6_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1668161422292,"storageReport":{"capacity":89297309696,"used":7171,"remaining":27511500800},"pipelines":[{"pipelineID":"ea668ee0-74bc-4cd8-817f-dfa91fc192b3","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net"},{"pipelineID":"35dfa1d3-f78e-4fa9-8dae-cad784fcd866","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net"},{"pipelineID":"e06220bd-f98f-490c-a5e3-ce6dc1139ebc","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net"}],"containers":2,"openContainers":2,"leaderCount":2,"version":"1.3.0-SNAPSHOT","setupTime":1668161273207,"revision":"a13c62b60556cd003ee2149179f72029d9e35756","buildDate":"2022-11-11T09:44Z","layoutVersion":4,"networkLocation":"/rack2"},{"uuid":"39ee61e0-eb3c-4592-8821-08df9fdd444e","hostname":"ozone-topology_datanode_4_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1668161422284,"storageReport":{"capacity":89297309696,"used":9221,"remaining":27511500800},"pipelines":[{"pipelineID":"8854a3a0-9ba1-4b6c-b92f-dceb3766a97a","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net"},{"pipelineID":"35dfa1d3-f78e-4fa9-8dae-cad784fcd866","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net"},{"pipelineID":"6db09561-7714-4d02-9fb0-2713f0f550da","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net"}],"containers":2,"openContainers":2,"leaderCount":2,"version":"1.3.0-SNAPSHOT","setupTime":1668161272540,"revision":"a13c62b60556cd003ee2149179f72029d9e35756","buildDate":"2022-11-11T09:44Z","layoutVersion":4,"networkLocation":"/rack2"}]}</msg>
<status status="PASS" starttime="20221111 10:10:34.246" endtime="20221111 10:10:34.246"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221111 10:10:34.247" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221111 10:10:34.247" endtime="20221111 10:10:34.247"/>
</kw>
<status status="PASS" starttime="20221111 10:10:34.208" endtime="20221111 10:10:34.247"/>
</kw>
<msg timestamp="20221111 10:10:34.247" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221111 10:10:34.208" endtime="20221111 10:10:34.248"/>
</kw>
<msg timestamp="20221111 10:10:34.248" level="INFO">${result} = {"totalCount":6,"datanodes":[{"uuid":"f155614d-edc8-4bd7-9fe7-6243656edced","hostname":"ozone-topology_datanode_3_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1668161...</msg>
<status status="PASS" starttime="20221111 10:10:34.207" endtime="20221111 10:10:34.248"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanodes</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221111 10:10:34.249" endtime="20221111 10:10:34.249"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221111 10:10:34.249" endtime="20221111 10:10:34.250"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221111 10:10:34.250" endtime="20221111 10:10:34.250"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221111 10:10:34.250" endtime="20221111 10:10:34.250"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/pipelines</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221111 10:10:34.254" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/pipelines 2&gt;&amp;1'.</msg>
<msg timestamp="20221111 10:10:34.279" level="INFO">${rc} = 0</msg>
<msg timestamp="20221111 10:10:34.279" level="INFO">${output} = {"totalCount":10,"pipelines":[{"pipelineId":"8854a3a0-9ba1-4b6c-b92f-dceb3766a97a","status":"OPEN","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net","datanodes":["ozone-topology_datanode_4...</msg>
<status status="PASS" starttime="20221111 10:10:34.252" endtime="20221111 10:10:34.279"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221111 10:10:34.281" level="INFO">{"totalCount":10,"pipelines":[{"pipelineId":"8854a3a0-9ba1-4b6c-b92f-dceb3766a97a","status":"OPEN","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net","datanodes":["ozone-topology_datanode_4_1.ozone-topology_net"],"lastLeaderElection":0,"duration":114904,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"ac81ff55-7d36-4459-8bc6-2f2f026ed96e","status":"OPEN","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net","datanodes":["ozone-topology_datanode_2_1.ozone-topology_net"],"lastLeaderElection":0,"duration":116385,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"8c621e10-3ac1-48b0-80c5-250b82385a27","status":"OPEN","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net","datanodes":["ozone-topology_datanode_5_1.ozone-topology_net"],"lastLeaderElection":0,"duration":114990,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"17ea8639-ec15-4d41-b819-90854487d55f","status":"OPEN","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net","datanodes":["ozone-topology_datanode_1_1.ozone-topology_net"],"lastLeaderElection":0,"duration":114963,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"ea668ee0-74bc-4cd8-817f-dfa91fc192b3","status":"OPEN","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net","datanodes":["ozone-topology_datanode_1_1.ozone-topology_net","ozone-topology_datanode_6_1.ozone-topology_net","ozone-topology_datanode_3_1.ozone-topology_net"],"lastLeaderElection":0,"duration":115016,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"THREE","containers":1},{"pipelineId":"35dfa1d3-f78e-4fa9-8dae-cad784fcd866","status":"OPEN","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net","datanodes":["ozone-topology_datanode_1_1.ozone-topology_net","ozone-topology_datanode_6_1.ozone-topology_net","ozone-topology_datanode_4_1.ozone-topology_net"],"lastLeaderElection":0,"duration":114951,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"THREE","containers":1},{"pipelineId":"6db09561-7714-4d02-9fb0-2713f0f550da","status":"OPEN","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net","datanodes":["ozone-topology_datanode_4_1.ozone-topology_net","ozone-topology_datanode_2_1.ozone-topology_net","ozone-topology_datanode_5_1.ozone-topology_net"],"lastLeaderElection":0,"duration":114977,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"THREE","containers":1},{"pipelineId":"e06220bd-f98f-490c-a5e3-ce6dc1139ebc","status":"OPEN","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net","datanodes":["ozone-topology_datanode_6_1.ozone-topology_net"],"lastLeaderElection":0,"duration":114930,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"39a46a95-9409-45e4-8e35-6a53bff0f824","status":"OPEN","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net","datanodes":["ozone-topology_datanode_3_1.ozone-topology_net","ozone-topology_datanode_5_1.ozone-topology_net","ozone-topology_datanode_2_1.ozone-topology_net"],"lastLeaderElection":0,"duration":115080,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"THREE","containers":1},{"pipelineId":"2cf1a9a5-3249-4956-8b68-b877dbde31c5","status":"OPEN","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net","datanodes":["ozone-topology_datanode_3_1.ozone-topology_net"],"lastLeaderElection":0,"duration":115044,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0}]}</msg>
<status status="PASS" starttime="20221111 10:10:34.280" endtime="20221111 10:10:34.281"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221111 10:10:34.282" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221111 10:10:34.281" endtime="20221111 10:10:34.282"/>
</kw>
<status status="PASS" starttime="20221111 10:10:34.251" endtime="20221111 10:10:34.282"/>
</kw>
<msg timestamp="20221111 10:10:34.282" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221111 10:10:34.251" endtime="20221111 10:10:34.283"/>
</kw>
<msg timestamp="20221111 10:10:34.283" level="INFO">${result} = {"totalCount":10,"pipelines":[{"pipelineId":"8854a3a0-9ba1-4b6c-b92f-dceb3766a97a","status":"OPEN","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net","datanodes":["ozone-topology_datanode_4...</msg>
<status status="PASS" starttime="20221111 10:10:34.251" endtime="20221111 10:10:34.283"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>pipelines</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221111 10:10:34.283" endtime="20221111 10:10:34.283"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221111 10:10:34.284" endtime="20221111 10:10:34.285"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OPEN</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221111 10:10:34.285" endtime="20221111 10:10:34.285"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221111 10:10:34.285" endtime="20221111 10:10:34.286"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221111 10:10:34.286" endtime="20221111 10:10:34.286"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221111 10:10:34.286" endtime="20221111 10:10:34.287"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/clusterState</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221111 10:10:34.291" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20221111 10:10:34.314" level="INFO">${rc} = 0</msg>
<msg timestamp="20221111 10:10:34.314" level="INFO">${output} = {"pipelines":10,"totalDatanodes":6,"healthyDatanodes":6,"storageReport":{"capacity":535783858176,"used":90142,"remaining":165069004800},"containers":4,"volumes":3,"buckets":2,"keys":11}</msg>
<status status="PASS" starttime="20221111 10:10:34.288" endtime="20221111 10:10:34.314"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221111 10:10:34.315" level="INFO">{"pipelines":10,"totalDatanodes":6,"healthyDatanodes":6,"storageReport":{"capacity":535783858176,"used":90142,"remaining":165069004800},"containers":4,"volumes":3,"buckets":2,"keys":11}</msg>
<status status="PASS" starttime="20221111 10:10:34.315" endtime="20221111 10:10:34.315"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221111 10:10:34.316" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221111 10:10:34.316" endtime="20221111 10:10:34.316"/>
</kw>
<status status="PASS" starttime="20221111 10:10:34.288" endtime="20221111 10:10:34.316"/>
</kw>
<msg timestamp="20221111 10:10:34.316" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221111 10:10:34.288" endtime="20221111 10:10:34.317"/>
</kw>
<msg timestamp="20221111 10:10:34.317" level="INFO">${result} = {"pipelines":10,"totalDatanodes":6,"healthyDatanodes":6,"storageReport":{"capacity":535783858176,"used":90142,"remaining":165069004800},"containers":4,"volumes":3,"buckets":2,"keys":11}</msg>
<status status="PASS" starttime="20221111 10:10:34.287" endtime="20221111 10:10:34.317"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"totalDatanodes\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221111 10:10:34.317" endtime="20221111 10:10:34.318"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"healthyDatanodes\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221111 10:10:34.318" endtime="20221111 10:10:34.318"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"pipelines\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221111 10:10:34.318" endtime="20221111 10:10:34.319"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers/1/replicaHistory</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221111 10:10:34.323" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers/1/replicaHistory 2&gt;&amp;1'.</msg>
<msg timestamp="20221111 10:10:34.342" level="INFO">${rc} = 0</msg>
<msg timestamp="20221111 10:10:34.342" level="INFO">${output} = [{"containerId":1,"datanodeUuid":"f155614d-edc8-4bd7-9fe7-6243656edced","datanodeHost":"ozone-topology_datanode_3_1.ozone-topology_net","firstSeenTime":1668161350143,"lastSeenTime":1668161350143,"last...</msg>
<status status="PASS" starttime="20221111 10:10:34.321" endtime="20221111 10:10:34.342"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221111 10:10:34.343" level="INFO">[{"containerId":1,"datanodeUuid":"f155614d-edc8-4bd7-9fe7-6243656edced","datanodeHost":"ozone-topology_datanode_3_1.ozone-topology_net","firstSeenTime":1668161350143,"lastSeenTime":1668161350143,"lastBcsId":0},{"containerId":1,"datanodeUuid":"0dc43dd5-dd34-40f0-98b4-02f5c2f3e86f","datanodeHost":"ozone-topology_datanode_2_1.ozone-topology_net","firstSeenTime":1668161350233,"lastSeenTime":1668161350233,"lastBcsId":0},{"containerId":1,"datanodeUuid":"0be8fe12-0f23-49cb-9273-5bdf59ad82b9","datanodeHost":"ozone-topology_datanode_5_1.ozone-topology_net","firstSeenTime":1668161350208,"lastSeenTime":1668161350208,"lastBcsId":0}]</msg>
<status status="PASS" starttime="20221111 10:10:34.342" endtime="20221111 10:10:34.343"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221111 10:10:34.344" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221111 10:10:34.343" endtime="20221111 10:10:34.344"/>
</kw>
<status status="PASS" starttime="20221111 10:10:34.321" endtime="20221111 10:10:34.344"/>
</kw>
<msg timestamp="20221111 10:10:34.345" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221111 10:10:34.320" endtime="20221111 10:10:34.345"/>
</kw>
<msg timestamp="20221111 10:10:34.345" level="INFO">${result} = [{"containerId":1,"datanodeUuid":"f155614d-edc8-4bd7-9fe7-6243656edced","datanodeHost":"ozone-topology_datanode_3_1.ozone-topology_net","firstSeenTime":1668161350143,"lastSeenTime":1668161350143,"last...</msg>
<status status="PASS" starttime="20221111 10:10:34.319" endtime="20221111 10:10:34.345"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"containerId\":1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221111 10:10:34.346" endtime="20221111 10:10:34.346"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221111 10:10:34.206" endtime="20221111 10:10:34.346"/>
</test>
<test id="s1-s2-s1-t3" name="Check if Recon Web UI is up" line="88">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221111 10:10:34.350" endtime="20221111 10:10:34.350"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${ENDPOINT_URL}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221111 10:10:34.355" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20221111 10:10:34.384" level="INFO">${rc} = 0</msg>
<msg timestamp="20221111 10:10:34.384" level="INFO">${output} = &lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" ...</msg>
<status status="PASS" starttime="20221111 10:10:34.352" endtime="20221111 10:10:34.384"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221111 10:10:34.386" level="INFO">&lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" content="#000000"/&gt;&lt;link rel="manifest" href="/manifest.json"/&gt;&lt;link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto:300,400,500"/&gt;&lt;title&gt;Ozone Recon&lt;/title&gt;&lt;link href="/static/css/2.7465223f.chunk.css" rel="stylesheet"&gt;&lt;link href="/static/css/main.0c211d12.chunk.css" rel="stylesheet"&gt;&lt;/head&gt;&lt;body&gt;&lt;noscript&gt;You need to enable JavaScript to run this app.&lt;/noscript&gt;&lt;div id="root"&gt;&lt;/div&gt;&lt;script&gt;!function(e){function r(r){for(var n,l,f=r[0],i=r[1],a=r[2],p=0,s=[];p&lt;f.length;p++)l=f[p],Object.prototype.hasOwnProperty.call(o,l)&amp;&amp;o[l]&amp;&amp;s.push(o[l][0]),o[l]=0;for(n in i)Object.prototype.hasOwnProperty.call(i,n)&amp;&amp;(e[n]=i[n]);for(c&amp;&amp;c(r);s.length;)s.shift()();return u.push.apply(u,a||[]),t()}function t(){for(var e,r=0;r&lt;u.length;r++){for(var t=u[r],n=!0,f=1;f&lt;t.length;f++){var i=t[f];0!==o[i]&amp;&amp;(n=!1)}n&amp;&amp;(u.splice(r--,1),e=l(l.s=t[0]))}return e}var n={},o={1:0},u=[];function l(r){if(n[r])return n[r].exports;var t=n[r]={i:r,l:!1,exports:{}};return e[r].call(t.exports,t,t.exports,l),t.l=!0,t.exports}l.m=e,l.c=n,l.d=function(e,r,t){l.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:t})},l.r=function(e){"undefined"!=typeof Symbol&amp;&amp;Symbol.toStringTag&amp;&amp;Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},l.t=function(e,r){if(1&amp;r&amp;&amp;(e=l(e)),8&amp;r)return e;if(4&amp;r&amp;&amp;"object"==typeof e&amp;&amp;e&amp;&amp;e.__esModule)return e;var t=Object.create(null);if(l.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&amp;r&amp;&amp;"string"!=typeof e)for(var n in e)l.d(t,n,function(r){return e[r]}.bind(null,n));return t},l.n=function(e){var r=e&amp;&amp;e.__esModule?function(){return e.default}:function(){return e};return l.d(r,"a",r),r},l.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},l.p="/";var f=this["webpackJsonpozone-recon"]=this["webpackJsonpozone-recon"]||[],i=f.push.bind(f);f.push=r,f=f.slice();for(var a=0;a&lt;f.length;a++)r(f[a]);var c=i;t()}([])&lt;/script&gt;&lt;script src="/static/js/2.f3fa3186.chunk.js"&gt;&lt;/script&gt;&lt;script src="/static/js/main.9ea83dd9.chunk.js"&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;</msg>
<status status="PASS" starttime="20221111 10:10:34.385" endtime="20221111 10:10:34.386"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221111 10:10:34.387" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221111 10:10:34.387" endtime="20221111 10:10:34.387"/>
</kw>
<status status="PASS" starttime="20221111 10:10:34.352" endtime="20221111 10:10:34.388"/>
</kw>
<msg timestamp="20221111 10:10:34.388" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221111 10:10:34.351" endtime="20221111 10:10:34.388"/>
</kw>
<msg timestamp="20221111 10:10:34.389" level="INFO">${result} = &lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" ...</msg>
<status status="PASS" starttime="20221111 10:10:34.351" endtime="20221111 10:10:34.389"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Ozone Recon</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221111 10:10:34.389" endtime="20221111 10:10:34.389"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221111 10:10:34.349" endtime="20221111 10:10:34.390"/>
</test>
<test id="s1-s2-s1-t4" name="Check web UI access" line="93">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221111 10:10:34.397" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20221111 10:10:34.403" level="INFO">${rc} = 0</msg>
<msg timestamp="20221111 10:10:34.404" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221111 10:10:34.394" endtime="20221111 10:10:34.404"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221111 10:10:34.405" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221111 10:10:34.404" endtime="20221111 10:10:34.405"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221111 10:10:34.406" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221111 10:10:34.405" endtime="20221111 10:10:34.406"/>
</kw>
<status status="PASS" starttime="20221111 10:10:34.394" endtime="20221111 10:10:34.406"/>
</kw>
<msg timestamp="20221111 10:10:34.406" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221111 10:10:34.393" endtime="20221111 10:10:34.407"/>
</kw>
<status status="PASS" starttime="20221111 10:10:34.393" endtime="20221111 10:10:34.407"/>
</kw>
<kw name="Check http return code">
<arg>${ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221111 10:10:34.412" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20221111 10:10:34.426" level="INFO">${rc} = 0</msg>
<msg timestamp="20221111 10:10:34.426" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221111 10:10:34.409" endtime="20221111 10:10:34.426"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221111 10:10:34.427" level="INFO">200</msg>
<status status="PASS" starttime="20221111 10:10:34.427" endtime="20221111 10:10:34.428"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221111 10:10:34.428" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221111 10:10:34.428" endtime="20221111 10:10:34.428"/>
</kw>
<status status="PASS" starttime="20221111 10:10:34.409" endtime="20221111 10:10:34.429"/>
</kw>
<msg timestamp="20221111 10:10:34.429" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221111 10:10:34.408" endtime="20221111 10:10:34.429"/>
</kw>
<msg timestamp="20221111 10:10:34.430" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221111 10:10:34.408" endtime="20221111 10:10:34.430"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221111 10:10:34.430" endtime="20221111 10:10:34.430"/>
</kw>
<status status="NOT RUN" starttime="20221111 10:10:34.430" endtime="20221111 10:10:34.430"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221111 10:10:34.431" endtime="20221111 10:10:34.431"/>
</kw>
<status status="PASS" starttime="20221111 10:10:34.430" endtime="20221111 10:10:34.431"/>
</branch>
<status status="PASS" starttime="20221111 10:10:34.430" endtime="20221111 10:10:34.431"/>
</if>
<status status="PASS" starttime="20221111 10:10:34.407" endtime="20221111 10:10:34.431"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221111 10:10:34.432" endtime="20221111 10:10:34.432"/>
</kw>
<status status="PASS" starttime="20221111 10:10:34.432" endtime="20221111 10:10:34.433"/>
</kw>
<kw name="Check http return code">
<arg>${ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221111 10:10:34.437" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20221111 10:10:34.450" level="INFO">${rc} = 0</msg>
<msg timestamp="20221111 10:10:34.450" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221111 10:10:34.434" endtime="20221111 10:10:34.450"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221111 10:10:34.452" level="INFO">200</msg>
<status status="PASS" starttime="20221111 10:10:34.451" endtime="20221111 10:10:34.452"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221111 10:10:34.452" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221111 10:10:34.452" endtime="20221111 10:10:34.452"/>
</kw>
<status status="PASS" starttime="20221111 10:10:34.434" endtime="20221111 10:10:34.453"/>
</kw>
<msg timestamp="20221111 10:10:34.453" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221111 10:10:34.434" endtime="20221111 10:10:34.453"/>
</kw>
<msg timestamp="20221111 10:10:34.454" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221111 10:10:34.433" endtime="20221111 10:10:34.454"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221111 10:10:34.454" endtime="20221111 10:10:34.454"/>
</kw>
<status status="NOT RUN" starttime="20221111 10:10:34.454" endtime="20221111 10:10:34.454"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221111 10:10:34.454" endtime="20221111 10:10:34.455"/>
</kw>
<status status="PASS" starttime="20221111 10:10:34.454" endtime="20221111 10:10:34.455"/>
</branch>
<status status="PASS" starttime="20221111 10:10:34.454" endtime="20221111 10:10:34.455"/>
</if>
<status status="PASS" starttime="20221111 10:10:34.433" endtime="20221111 10:10:34.455"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221111 10:10:34.392" endtime="20221111 10:10:34.455"/>
</test>
<test id="s1-s2-s1-t5" name="Check admin only api access" line="101">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221111 10:10:34.461" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20221111 10:10:34.465" level="INFO">${rc} = 0</msg>
<msg timestamp="20221111 10:10:34.465" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221111 10:10:34.459" endtime="20221111 10:10:34.465"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221111 10:10:34.466" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221111 10:10:34.465" endtime="20221111 10:10:34.466"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221111 10:10:34.467" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221111 10:10:34.466" endtime="20221111 10:10:34.467"/>
</kw>
<status status="PASS" starttime="20221111 10:10:34.458" endtime="20221111 10:10:34.467"/>
</kw>
<msg timestamp="20221111 10:10:34.467" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221111 10:10:34.458" endtime="20221111 10:10:34.467"/>
</kw>
<status status="PASS" starttime="20221111 10:10:34.457" endtime="20221111 10:10:34.468"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221111 10:10:34.472" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20221111 10:10:34.487" level="INFO">${rc} = 0</msg>
<msg timestamp="20221111 10:10:34.487" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221111 10:10:34.470" endtime="20221111 10:10:34.487"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221111 10:10:34.489" level="INFO">200</msg>
<status status="PASS" starttime="20221111 10:10:34.487" endtime="20221111 10:10:34.489"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221111 10:10:34.489" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221111 10:10:34.489" endtime="20221111 10:10:34.489"/>
</kw>
<status status="PASS" starttime="20221111 10:10:34.469" endtime="20221111 10:10:34.490"/>
</kw>
<msg timestamp="20221111 10:10:34.490" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221111 10:10:34.469" endtime="20221111 10:10:34.490"/>
</kw>
<msg timestamp="20221111 10:10:34.490" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221111 10:10:34.468" endtime="20221111 10:10:34.490"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221111 10:10:34.491" endtime="20221111 10:10:34.491"/>
</kw>
<status status="NOT RUN" starttime="20221111 10:10:34.491" endtime="20221111 10:10:34.491"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221111 10:10:34.491" endtime="20221111 10:10:34.492"/>
</kw>
<status status="PASS" starttime="20221111 10:10:34.491" endtime="20221111 10:10:34.492"/>
</branch>
<status status="PASS" starttime="20221111 10:10:34.491" endtime="20221111 10:10:34.492"/>
</if>
<status status="PASS" starttime="20221111 10:10:34.468" endtime="20221111 10:10:34.492"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221111 10:10:34.492" endtime="20221111 10:10:34.493"/>
</kw>
<status status="PASS" starttime="20221111 10:10:34.492" endtime="20221111 10:10:34.493"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221111 10:10:34.496" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20221111 10:10:34.514" level="INFO">${rc} = 0</msg>
<msg timestamp="20221111 10:10:34.514" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221111 10:10:34.494" endtime="20221111 10:10:34.514"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221111 10:10:34.515" level="INFO">200</msg>
<status status="PASS" starttime="20221111 10:10:34.514" endtime="20221111 10:10:34.515"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221111 10:10:34.515" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221111 10:10:34.515" endtime="20221111 10:10:34.516"/>
</kw>
<status status="PASS" starttime="20221111 10:10:34.494" endtime="20221111 10:10:34.516"/>
</kw>
<msg timestamp="20221111 10:10:34.516" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221111 10:10:34.494" endtime="20221111 10:10:34.516"/>
</kw>
<msg timestamp="20221111 10:10:34.517" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221111 10:10:34.493" endtime="20221111 10:10:34.517"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221111 10:10:34.517" endtime="20221111 10:10:34.517"/>
</kw>
<status status="NOT RUN" starttime="20221111 10:10:34.517" endtime="20221111 10:10:34.517"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221111 10:10:34.517" endtime="20221111 10:10:34.518"/>
</kw>
<status status="PASS" starttime="20221111 10:10:34.517" endtime="20221111 10:10:34.518"/>
</branch>
<status status="PASS" starttime="20221111 10:10:34.517" endtime="20221111 10:10:34.518"/>
</if>
<status status="PASS" starttime="20221111 10:10:34.493" endtime="20221111 10:10:34.519"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221111 10:10:34.519" endtime="20221111 10:10:34.520"/>
</kw>
<status status="PASS" starttime="20221111 10:10:34.519" endtime="20221111 10:10:34.520"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221111 10:10:34.524" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20221111 10:10:34.539" level="INFO">${rc} = 0</msg>
<msg timestamp="20221111 10:10:34.539" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221111 10:10:34.522" endtime="20221111 10:10:34.539"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221111 10:10:34.540" level="INFO">200</msg>
<status status="PASS" starttime="20221111 10:10:34.540" endtime="20221111 10:10:34.541"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221111 10:10:34.541" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221111 10:10:34.541" endtime="20221111 10:10:34.541"/>
</kw>
<status status="PASS" starttime="20221111 10:10:34.521" endtime="20221111 10:10:34.542"/>
</kw>
<msg timestamp="20221111 10:10:34.542" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221111 10:10:34.521" endtime="20221111 10:10:34.542"/>
</kw>
<msg timestamp="20221111 10:10:34.543" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221111 10:10:34.520" endtime="20221111 10:10:34.543"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221111 10:10:34.543" endtime="20221111 10:10:34.543"/>
</kw>
<status status="NOT RUN" starttime="20221111 10:10:34.543" endtime="20221111 10:10:34.543"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221111 10:10:34.543" endtime="20221111 10:10:34.544"/>
</kw>
<status status="PASS" starttime="20221111 10:10:34.543" endtime="20221111 10:10:34.544"/>
</branch>
<status status="PASS" starttime="20221111 10:10:34.543" endtime="20221111 10:10:34.544"/>
</if>
<status status="PASS" starttime="20221111 10:10:34.520" endtime="20221111 10:10:34.544"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221111 10:10:34.544" endtime="20221111 10:10:34.545"/>
</kw>
<status status="PASS" starttime="20221111 10:10:34.544" endtime="20221111 10:10:34.545"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221111 10:10:34.549" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20221111 10:10:34.564" level="INFO">${rc} = 0</msg>
<msg timestamp="20221111 10:10:34.564" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221111 10:10:34.547" endtime="20221111 10:10:34.564"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221111 10:10:34.565" level="INFO">200</msg>
<status status="PASS" starttime="20221111 10:10:34.564" endtime="20221111 10:10:34.565"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221111 10:10:34.566" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221111 10:10:34.565" endtime="20221111 10:10:34.566"/>
</kw>
<status status="PASS" starttime="20221111 10:10:34.546" endtime="20221111 10:10:34.566"/>
</kw>
<msg timestamp="20221111 10:10:34.566" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221111 10:10:34.546" endtime="20221111 10:10:34.567"/>
</kw>
<msg timestamp="20221111 10:10:34.567" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221111 10:10:34.545" endtime="20221111 10:10:34.567"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221111 10:10:34.567" endtime="20221111 10:10:34.567"/>
</kw>
<status status="NOT RUN" starttime="20221111 10:10:34.567" endtime="20221111 10:10:34.568"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221111 10:10:34.568" endtime="20221111 10:10:34.568"/>
</kw>
<status status="PASS" starttime="20221111 10:10:34.568" endtime="20221111 10:10:34.568"/>
</branch>
<status status="PASS" starttime="20221111 10:10:34.567" endtime="20221111 10:10:34.568"/>
</if>
<status status="PASS" starttime="20221111 10:10:34.545" endtime="20221111 10:10:34.568"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221111 10:10:34.457" endtime="20221111 10:10:34.569"/>
</test>
<test id="s1-s2-s1-t6" name="Check unhealthy, (admin) api access" line="114">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221111 10:10:34.575" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20221111 10:10:34.578" level="INFO">${rc} = 0</msg>
<msg timestamp="20221111 10:10:34.578" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221111 10:10:34.572" endtime="20221111 10:10:34.578"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221111 10:10:34.579" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221111 10:10:34.578" endtime="20221111 10:10:34.579"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221111 10:10:34.579" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221111 10:10:34.579" endtime="20221111 10:10:34.580"/>
</kw>
<status status="PASS" starttime="20221111 10:10:34.572" endtime="20221111 10:10:34.580"/>
</kw>
<msg timestamp="20221111 10:10:34.580" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221111 10:10:34.571" endtime="20221111 10:10:34.580"/>
</kw>
<status status="PASS" starttime="20221111 10:10:34.571" endtime="20221111 10:10:34.580"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221111 10:10:34.584" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20221111 10:10:34.628" level="INFO">${rc} = 0</msg>
<msg timestamp="20221111 10:10:34.628" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221111 10:10:34.582" endtime="20221111 10:10:34.628"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221111 10:10:34.629" level="INFO">200</msg>
<status status="PASS" starttime="20221111 10:10:34.628" endtime="20221111 10:10:34.630"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221111 10:10:34.631" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221111 10:10:34.630" endtime="20221111 10:10:34.631"/>
</kw>
<status status="PASS" starttime="20221111 10:10:34.582" endtime="20221111 10:10:34.631"/>
</kw>
<msg timestamp="20221111 10:10:34.632" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221111 10:10:34.582" endtime="20221111 10:10:34.632"/>
</kw>
<msg timestamp="20221111 10:10:34.632" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221111 10:10:34.581" endtime="20221111 10:10:34.632"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221111 10:10:34.633" endtime="20221111 10:10:34.633"/>
</kw>
<status status="NOT RUN" starttime="20221111 10:10:34.633" endtime="20221111 10:10:34.633"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221111 10:10:34.634" endtime="20221111 10:10:34.634"/>
</kw>
<status status="PASS" starttime="20221111 10:10:34.633" endtime="20221111 10:10:34.634"/>
</branch>
<status status="PASS" starttime="20221111 10:10:34.633" endtime="20221111 10:10:34.634"/>
</if>
<status status="PASS" starttime="20221111 10:10:34.581" endtime="20221111 10:10:34.634"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221111 10:10:34.635" endtime="20221111 10:10:34.635"/>
</kw>
<status status="PASS" starttime="20221111 10:10:34.634" endtime="20221111 10:10:34.635"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221111 10:10:34.643" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20221111 10:10:34.665" level="INFO">${rc} = 0</msg>
<msg timestamp="20221111 10:10:34.666" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221111 10:10:34.640" endtime="20221111 10:10:34.666"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221111 10:10:34.667" level="INFO">200</msg>
<status status="PASS" starttime="20221111 10:10:34.666" endtime="20221111 10:10:34.667"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221111 10:10:34.667" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221111 10:10:34.667" endtime="20221111 10:10:34.667"/>
</kw>
<status status="PASS" starttime="20221111 10:10:34.639" endtime="20221111 10:10:34.668"/>
</kw>
<msg timestamp="20221111 10:10:34.668" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221111 10:10:34.638" endtime="20221111 10:10:34.668"/>
</kw>
<msg timestamp="20221111 10:10:34.668" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221111 10:10:34.637" endtime="20221111 10:10:34.668"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221111 10:10:34.673" endtime="20221111 10:10:34.673"/>
</kw>
<status status="NOT RUN" starttime="20221111 10:10:34.672" endtime="20221111 10:10:34.673"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221111 10:10:34.673" endtime="20221111 10:10:34.674"/>
</kw>
<status status="PASS" starttime="20221111 10:10:34.673" endtime="20221111 10:10:34.674"/>
</branch>
<status status="PASS" starttime="20221111 10:10:34.672" endtime="20221111 10:10:34.674"/>
</if>
<status status="PASS" starttime="20221111 10:10:34.637" endtime="20221111 10:10:34.674"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221111 10:10:34.675" endtime="20221111 10:10:34.675"/>
</kw>
<status status="PASS" starttime="20221111 10:10:34.675" endtime="20221111 10:10:34.675"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221111 10:10:34.680" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20221111 10:10:34.700" level="INFO">${rc} = 0</msg>
<msg timestamp="20221111 10:10:34.700" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221111 10:10:34.677" endtime="20221111 10:10:34.700"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221111 10:10:34.704" level="INFO">200</msg>
<status status="PASS" starttime="20221111 10:10:34.700" endtime="20221111 10:10:34.705"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221111 10:10:34.706" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221111 10:10:34.705" endtime="20221111 10:10:34.706"/>
</kw>
<status status="PASS" starttime="20221111 10:10:34.677" endtime="20221111 10:10:34.706"/>
</kw>
<msg timestamp="20221111 10:10:34.706" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221111 10:10:34.676" endtime="20221111 10:10:34.707"/>
</kw>
<msg timestamp="20221111 10:10:34.707" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221111 10:10:34.676" endtime="20221111 10:10:34.707"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221111 10:10:34.708" endtime="20221111 10:10:34.708"/>
</kw>
<status status="NOT RUN" starttime="20221111 10:10:34.708" endtime="20221111 10:10:34.708"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221111 10:10:34.708" endtime="20221111 10:10:34.708"/>
</kw>
<status status="PASS" starttime="20221111 10:10:34.708" endtime="20221111 10:10:34.709"/>
</branch>
<status status="PASS" starttime="20221111 10:10:34.707" endtime="20221111 10:10:34.709"/>
</if>
<status status="PASS" starttime="20221111 10:10:34.676" endtime="20221111 10:10:34.709"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221111 10:10:34.709" endtime="20221111 10:10:34.710"/>
</kw>
<status status="PASS" starttime="20221111 10:10:34.709" endtime="20221111 10:10:34.710"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221111 10:10:34.715" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20221111 10:10:34.731" level="INFO">${rc} = 0</msg>
<msg timestamp="20221111 10:10:34.731" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221111 10:10:34.712" endtime="20221111 10:10:34.731"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221111 10:10:34.732" level="INFO">200</msg>
<status status="PASS" starttime="20221111 10:10:34.731" endtime="20221111 10:10:34.732"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221111 10:10:34.733" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221111 10:10:34.732" endtime="20221111 10:10:34.733"/>
</kw>
<status status="PASS" starttime="20221111 10:10:34.711" endtime="20221111 10:10:34.733"/>
</kw>
<msg timestamp="20221111 10:10:34.733" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221111 10:10:34.711" endtime="20221111 10:10:34.734"/>
</kw>
<msg timestamp="20221111 10:10:34.734" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221111 10:10:34.711" endtime="20221111 10:10:34.734"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221111 10:10:34.735" endtime="20221111 10:10:34.735"/>
</kw>
<status status="NOT RUN" starttime="20221111 10:10:34.734" endtime="20221111 10:10:34.735"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221111 10:10:34.735" endtime="20221111 10:10:34.735"/>
</kw>
<status status="PASS" starttime="20221111 10:10:34.735" endtime="20221111 10:10:34.735"/>
</branch>
<status status="PASS" starttime="20221111 10:10:34.734" endtime="20221111 10:10:34.735"/>
</if>
<status status="PASS" starttime="20221111 10:10:34.710" endtime="20221111 10:10:34.736"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221111 10:10:34.570" endtime="20221111 10:10:34.736"/>
</test>
<test id="s1-s2-s1-t7" name="Check normal api access" line="127">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221111 10:10:34.741" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20221111 10:10:34.745" level="INFO">${rc} = 0</msg>
<msg timestamp="20221111 10:10:34.746" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221111 10:10:34.739" endtime="20221111 10:10:34.746"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221111 10:10:34.747" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221111 10:10:34.746" endtime="20221111 10:10:34.747"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221111 10:10:34.747" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221111 10:10:34.747" endtime="20221111 10:10:34.748"/>
</kw>
<status status="PASS" starttime="20221111 10:10:34.739" endtime="20221111 10:10:34.748"/>
</kw>
<msg timestamp="20221111 10:10:34.748" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221111 10:10:34.738" endtime="20221111 10:10:34.748"/>
</kw>
<status status="PASS" starttime="20221111 10:10:34.738" endtime="20221111 10:10:34.749"/>
</kw>
<kw name="Check http return code">
<arg>${NON_ADMIN_API_ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221111 10:10:34.753" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20221111 10:10:34.778" level="INFO">${rc} = 0</msg>
<msg timestamp="20221111 10:10:34.778" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221111 10:10:34.751" endtime="20221111 10:10:34.778"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221111 10:10:34.780" level="INFO">200</msg>
<status status="PASS" starttime="20221111 10:10:34.779" endtime="20221111 10:10:34.780"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221111 10:10:34.781" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221111 10:10:34.780" endtime="20221111 10:10:34.781"/>
</kw>
<status status="PASS" starttime="20221111 10:10:34.750" endtime="20221111 10:10:34.781"/>
</kw>
<msg timestamp="20221111 10:10:34.781" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221111 10:10:34.750" endtime="20221111 10:10:34.782"/>
</kw>
<msg timestamp="20221111 10:10:34.782" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221111 10:10:34.749" endtime="20221111 10:10:34.782"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221111 10:10:34.783" endtime="20221111 10:10:34.783"/>
</kw>
<status status="NOT RUN" starttime="20221111 10:10:34.782" endtime="20221111 10:10:34.783"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221111 10:10:34.783" endtime="20221111 10:10:34.783"/>
</kw>
<status status="PASS" starttime="20221111 10:10:34.783" endtime="20221111 10:10:34.783"/>
</branch>
<status status="PASS" starttime="20221111 10:10:34.782" endtime="20221111 10:10:34.783"/>
</if>
<status status="PASS" starttime="20221111 10:10:34.749" endtime="20221111 10:10:34.784"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221111 10:10:34.784" endtime="20221111 10:10:34.785"/>
</kw>
<status status="PASS" starttime="20221111 10:10:34.784" endtime="20221111 10:10:34.785"/>
</kw>
<kw name="Check http return code">
<arg>${NON_ADMIN_API_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221111 10:10:34.790" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20221111 10:10:34.820" level="INFO">${rc} = 0</msg>
<msg timestamp="20221111 10:10:34.820" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221111 10:10:34.787" endtime="20221111 10:10:34.820"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221111 10:10:34.825" level="INFO">200</msg>
<status status="PASS" starttime="20221111 10:10:34.821" endtime="20221111 10:10:34.825"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221111 10:10:34.827" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221111 10:10:34.825" endtime="20221111 10:10:34.827"/>
</kw>
<status status="PASS" starttime="20221111 10:10:34.786" endtime="20221111 10:10:34.827"/>
</kw>
<msg timestamp="20221111 10:10:34.827" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221111 10:10:34.786" endtime="20221111 10:10:34.828"/>
</kw>
<msg timestamp="20221111 10:10:34.828" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221111 10:10:34.786" endtime="20221111 10:10:34.828"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221111 10:10:34.829" endtime="20221111 10:10:34.829"/>
</kw>
<status status="NOT RUN" starttime="20221111 10:10:34.829" endtime="20221111 10:10:34.829"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221111 10:10:34.829" endtime="20221111 10:10:34.830"/>
</kw>
<status status="PASS" starttime="20221111 10:10:34.829" endtime="20221111 10:10:34.830"/>
</branch>
<status status="PASS" starttime="20221111 10:10:34.829" endtime="20221111 10:10:34.830"/>
</if>
<status status="PASS" starttime="20221111 10:10:34.785" endtime="20221111 10:10:34.830"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221111 10:10:34.737" endtime="20221111 10:10:34.830"/>
</test>
<doc>Smoke test to start cluster with docker-compose environments.</doc>
<status status="PASS" starttime="20221111 10:09:44.152" endtime="20221111 10:10:34.832"/>
</suite>
<suite id="s1-s2-s2" name="Recon-Nssummary" source="/opt/hadoop/smoketest/recon/recon-nssummary.robot">
<test id="s1-s2-s2-t1" name="Check volume creation" line="99">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221111 10:10:34.846" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20221111 10:10:34.850" level="INFO">${rc} = 0</msg>
<msg timestamp="20221111 10:10:34.850" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221111 10:10:34.844" endtime="20221111 10:10:34.850"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221111 10:10:34.851" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221111 10:10:34.850" endtime="20221111 10:10:34.851"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221111 10:10:34.852" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221111 10:10:34.851" endtime="20221111 10:10:34.852"/>
</kw>
<status status="PASS" starttime="20221111 10:10:34.844" endtime="20221111 10:10:34.852"/>
</kw>
<msg timestamp="20221111 10:10:34.852" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221111 10:10:34.843" endtime="20221111 10:10:34.853"/>
</kw>
<status status="PASS" starttime="20221111 10:10:34.843" endtime="20221111 10:10:34.853"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221111 10:10:34.853" endtime="20221111 10:10:34.854"/>
</kw>
<status status="PASS" starttime="20221111 10:10:34.853" endtime="20221111 10:10:34.854"/>
</kw>
<kw name="Create volume">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20221111 10:10:34.855" level="INFO">${random} = kaqxu</msg>
<status status="PASS" starttime="20221111 10:10:34.854" endtime="20221111 10:10:34.855"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${VOLUME}</arg>
<arg>vol-${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20221111 10:10:34.855" level="INFO">${VOLUME} = vol-kaqxu</msg>
<status status="PASS" starttime="20221111 10:10:34.855" endtime="20221111 10:10:34.855"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${VOLUME}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221111 10:10:34.859" level="INFO">Running command 'ozone sh volume create /vol-kaqxu 2&gt;&amp;1'.</msg>
<msg timestamp="20221111 10:10:38.400" level="INFO">${rc} = 0</msg>
<msg timestamp="20221111 10:10:38.400" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221111 10:10:34.857" endtime="20221111 10:10:38.400"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221111 10:10:38.402" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221111 10:10:38.401" endtime="20221111 10:10:38.402"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221111 10:10:38.402" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221111 10:10:38.402" endtime="20221111 10:10:38.402"/>
</kw>
<status status="PASS" starttime="20221111 10:10:34.856" endtime="20221111 10:10:38.403"/>
</kw>
<msg timestamp="20221111 10:10:38.403" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221111 10:10:34.856" endtime="20221111 10:10:38.403"/>
</kw>
<msg timestamp="20221111 10:10:38.404" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221111 10:10:34.855" endtime="20221111 10:10:38.404"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20221111 10:10:38.404" endtime="20221111 10:10:38.404"/>
</kw>
<status status="PASS" starttime="20221111 10:10:34.854" endtime="20221111 10:10:38.404"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221111 10:10:34.842" endtime="20221111 10:10:38.405"/>
</test>
<test id="s1-s2-s2-t2" name="Check bucket creation" line="104">
<kw name="Create bucket">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20221111 10:10:38.407" level="INFO">${random} = wfssl</msg>
<status status="PASS" starttime="20221111 10:10:38.407" endtime="20221111 10:10:38.408"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<arg>buc-${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20221111 10:10:38.408" level="INFO">${BUCKET} = buc-wfssl</msg>
<status status="PASS" starttime="20221111 10:10:38.408" endtime="20221111 10:10:38.408"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create -l ${BUCKET_LAYOUT} /${VOLUME}/${BUCKET}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221111 10:10:38.412" level="INFO">Running command 'ozone sh bucket create -l FILE_SYSTEM_OPTIMIZED /vol-kaqxu/buc-wfssl 2&gt;&amp;1'.</msg>
<msg timestamp="20221111 10:10:42.219" level="INFO">${rc} = 0</msg>
<msg timestamp="20221111 10:10:42.219" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221111 10:10:38.410" endtime="20221111 10:10:42.219"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221111 10:10:42.220" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221111 10:10:42.220" endtime="20221111 10:10:42.221"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221111 10:10:42.221" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221111 10:10:42.221" endtime="20221111 10:10:42.221"/>
</kw>
<status status="PASS" starttime="20221111 10:10:38.409" endtime="20221111 10:10:42.222"/>
</kw>
<msg timestamp="20221111 10:10:42.222" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221111 10:10:38.409" endtime="20221111 10:10:42.222"/>
</kw>
<msg timestamp="20221111 10:10:42.222" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221111 10:10:38.408" endtime="20221111 10:10:42.222"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20221111 10:10:42.223" endtime="20221111 10:10:42.223"/>
</kw>
<status status="PASS" starttime="20221111 10:10:38.407" endtime="20221111 10:10:42.223"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221111 10:10:38.406" endtime="20221111 10:10:42.223"/>
</test>
<test id="s1-s2-s2-t3" name="Check keys creation" line="107">
<kw name="Create keys">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put /${VOLUME}/${BUCKET}/file1 README.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221111 10:10:42.230" level="INFO">Running command 'ozone sh key put /vol-kaqxu/buc-wfssl/file1 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20221111 10:10:47.888" level="INFO">${rc} = 0</msg>
<msg timestamp="20221111 10:10:47.888" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221111 10:10:42.227" endtime="20221111 10:10:47.888"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221111 10:10:47.889" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221111 10:10:47.889" endtime="20221111 10:10:47.889"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221111 10:10:47.890" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221111 10:10:47.890" endtime="20221111 10:10:47.890"/>
</kw>
<status status="PASS" starttime="20221111 10:10:42.227" endtime="20221111 10:10:47.890"/>
</kw>
<msg timestamp="20221111 10:10:47.890" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221111 10:10:42.226" endtime="20221111 10:10:47.891"/>
</kw>
<msg timestamp="20221111 10:10:47.891" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221111 10:10:42.226" endtime="20221111 10:10:47.891"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20221111 10:10:47.891" endtime="20221111 10:10:47.892"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put /${VOLUME}/${BUCKET}/dir1/dir2/file2 HISTORY.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221111 10:10:47.895" level="INFO">Running command 'ozone sh key put /vol-kaqxu/buc-wfssl/dir1/dir2/file2 HISTORY.md 2&gt;&amp;1'.</msg>
<msg timestamp="20221111 10:10:53.935" level="INFO">${rc} = 0</msg>
<msg timestamp="20221111 10:10:53.935" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221111 10:10:47.893" endtime="20221111 10:10:53.935"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221111 10:10:53.936" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221111 10:10:53.935" endtime="20221111 10:10:53.936"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221111 10:10:53.937" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221111 10:10:53.937" endtime="20221111 10:10:53.937"/>
</kw>
<status status="PASS" starttime="20221111 10:10:47.892" endtime="20221111 10:10:53.937"/>
</kw>
<msg timestamp="20221111 10:10:53.938" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221111 10:10:47.892" endtime="20221111 10:10:53.938"/>
</kw>
<msg timestamp="20221111 10:10:53.938" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221111 10:10:47.892" endtime="20221111 10:10:53.938"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20221111 10:10:53.939" endtime="20221111 10:10:53.939"/>
</kw>
<status status="PASS" starttime="20221111 10:10:42.225" endtime="20221111 10:10:53.939"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221111 10:10:42.225" endtime="20221111 10:10:53.940"/>
</test>
<test id="s1-s2-s2-t4" name="Check Summary api access" line="110">
<kw name="Check Access">
<arg>${SUMMARY_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221111 10:10:53.947" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20221111 10:10:53.950" level="INFO">${rc} = 0</msg>
<msg timestamp="20221111 10:10:53.950" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221111 10:10:53.943" endtime="20221111 10:10:53.950"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221111 10:10:53.951" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221111 10:10:53.951" endtime="20221111 10:10:53.951"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221111 10:10:53.952" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221111 10:10:53.952" endtime="20221111 10:10:53.952"/>
</kw>
<status status="PASS" starttime="20221111 10:10:53.943" endtime="20221111 10:10:53.952"/>
</kw>
<msg timestamp="20221111 10:10:53.952" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221111 10:10:53.943" endtime="20221111 10:10:53.953"/>
</kw>
<status status="PASS" starttime="20221111 10:10:53.942" endtime="20221111 10:10:53.953"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221111 10:10:53.957" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221111 10:10:53.987" level="INFO">${rc} = 0</msg>
<msg timestamp="20221111 10:10:53.987" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221111 10:10:53.955" endtime="20221111 10:10:53.987"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221111 10:10:53.989" level="INFO">200</msg>
<status status="PASS" starttime="20221111 10:10:53.988" endtime="20221111 10:10:53.989"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221111 10:10:53.989" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221111 10:10:53.989" endtime="20221111 10:10:53.990"/>
</kw>
<status status="PASS" starttime="20221111 10:10:53.954" endtime="20221111 10:10:53.990"/>
</kw>
<msg timestamp="20221111 10:10:53.990" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221111 10:10:53.954" endtime="20221111 10:10:53.992"/>
</kw>
<msg timestamp="20221111 10:10:53.993" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221111 10:10:53.954" endtime="20221111 10:10:53.993"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221111 10:10:53.993" endtime="20221111 10:10:53.993"/>
</kw>
<status status="NOT RUN" starttime="20221111 10:10:53.993" endtime="20221111 10:10:53.993"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221111 10:10:53.993" endtime="20221111 10:10:53.994"/>
</kw>
<status status="PASS" starttime="20221111 10:10:53.993" endtime="20221111 10:10:53.994"/>
</branch>
<status status="PASS" starttime="20221111 10:10:53.993" endtime="20221111 10:10:53.994"/>
</if>
<status status="PASS" starttime="20221111 10:10:53.953" endtime="20221111 10:10:53.994"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221111 10:10:53.995" endtime="20221111 10:10:53.995"/>
</kw>
<status status="PASS" starttime="20221111 10:10:53.994" endtime="20221111 10:10:53.995"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221111 10:10:53.999" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221111 10:10:54.015" level="INFO">${rc} = 0</msg>
<msg timestamp="20221111 10:10:54.015" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221111 10:10:53.997" endtime="20221111 10:10:54.015"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221111 10:10:54.018" level="INFO">200</msg>
<status status="PASS" starttime="20221111 10:10:54.017" endtime="20221111 10:10:54.018"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221111 10:10:54.018" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221111 10:10:54.018" endtime="20221111 10:10:54.018"/>
</kw>
<status status="PASS" starttime="20221111 10:10:53.997" endtime="20221111 10:10:54.019"/>
</kw>
<msg timestamp="20221111 10:10:54.019" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221111 10:10:53.996" endtime="20221111 10:10:54.019"/>
</kw>
<msg timestamp="20221111 10:10:54.020" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221111 10:10:53.996" endtime="20221111 10:10:54.020"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221111 10:10:54.020" endtime="20221111 10:10:54.020"/>
</kw>
<status status="NOT RUN" starttime="20221111 10:10:54.020" endtime="20221111 10:10:54.020"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221111 10:10:54.020" endtime="20221111 10:10:54.021"/>
</kw>
<status status="PASS" starttime="20221111 10:10:54.020" endtime="20221111 10:10:54.021"/>
</branch>
<status status="PASS" starttime="20221111 10:10:54.020" endtime="20221111 10:10:54.021"/>
</if>
<status status="PASS" starttime="20221111 10:10:53.995" endtime="20221111 10:10:54.021"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221111 10:10:54.022" endtime="20221111 10:10:54.022"/>
</kw>
<status status="PASS" starttime="20221111 10:10:54.021" endtime="20221111 10:10:54.022"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221111 10:10:54.026" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221111 10:10:54.041" level="INFO">${rc} = 0</msg>
<msg timestamp="20221111 10:10:54.041" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221111 10:10:54.024" endtime="20221111 10:10:54.041"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221111 10:10:54.043" level="INFO">200</msg>
<status status="PASS" starttime="20221111 10:10:54.041" endtime="20221111 10:10:54.043"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221111 10:10:54.043" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221111 10:10:54.043" endtime="20221111 10:10:54.043"/>
</kw>
<status status="PASS" starttime="20221111 10:10:54.023" endtime="20221111 10:10:54.044"/>
</kw>
<msg timestamp="20221111 10:10:54.044" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221111 10:10:54.023" endtime="20221111 10:10:54.044"/>
</kw>
<msg timestamp="20221111 10:10:54.045" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221111 10:10:54.023" endtime="20221111 10:10:54.045"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221111 10:10:54.045" endtime="20221111 10:10:54.045"/>
</kw>
<status status="NOT RUN" starttime="20221111 10:10:54.045" endtime="20221111 10:10:54.045"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221111 10:10:54.045" endtime="20221111 10:10:54.046"/>
</kw>
<status status="PASS" starttime="20221111 10:10:54.045" endtime="20221111 10:10:54.046"/>
</branch>
<status status="PASS" starttime="20221111 10:10:54.045" endtime="20221111 10:10:54.046"/>
</if>
<status status="PASS" starttime="20221111 10:10:54.022" endtime="20221111 10:10:54.046"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221111 10:10:54.047" endtime="20221111 10:10:54.047"/>
</kw>
<status status="PASS" starttime="20221111 10:10:54.046" endtime="20221111 10:10:54.047"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221111 10:10:54.051" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221111 10:10:54.067" level="INFO">${rc} = 0</msg>
<msg timestamp="20221111 10:10:54.067" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221111 10:10:54.049" endtime="20221111 10:10:54.067"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221111 10:10:54.068" level="INFO">200</msg>
<status status="PASS" starttime="20221111 10:10:54.067" endtime="20221111 10:10:54.068"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221111 10:10:54.069" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221111 10:10:54.068" endtime="20221111 10:10:54.069"/>
</kw>
<status status="PASS" starttime="20221111 10:10:54.048" endtime="20221111 10:10:54.069"/>
</kw>
<msg timestamp="20221111 10:10:54.069" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221111 10:10:54.048" endtime="20221111 10:10:54.070"/>
</kw>
<msg timestamp="20221111 10:10:54.070" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221111 10:10:54.048" endtime="20221111 10:10:54.070"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221111 10:10:54.071" endtime="20221111 10:10:54.071"/>
</kw>
<status status="NOT RUN" starttime="20221111 10:10:54.071" endtime="20221111 10:10:54.071"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221111 10:10:54.071" endtime="20221111 10:10:54.071"/>
</kw>
<status status="PASS" starttime="20221111 10:10:54.071" endtime="20221111 10:10:54.072"/>
</branch>
<status status="PASS" starttime="20221111 10:10:54.070" endtime="20221111 10:10:54.072"/>
</if>
<status status="PASS" starttime="20221111 10:10:54.047" endtime="20221111 10:10:54.072"/>
</kw>
<status status="PASS" starttime="20221111 10:10:53.942" endtime="20221111 10:10:54.072"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221111 10:10:53.940" endtime="20221111 10:10:54.072"/>
</test>
<test id="s1-s2-s2-t5" name="Check Disk Usage api access" line="113">
<kw name="Check Access">
<arg>${DISK_USAGE_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221111 10:10:54.078" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20221111 10:10:54.081" level="INFO">${rc} = 0</msg>
<msg timestamp="20221111 10:10:54.081" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221111 10:10:54.076" endtime="20221111 10:10:54.082"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221111 10:10:54.083" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221111 10:10:54.082" endtime="20221111 10:10:54.083"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221111 10:10:54.083" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221111 10:10:54.083" endtime="20221111 10:10:54.084"/>
</kw>
<status status="PASS" starttime="20221111 10:10:54.075" endtime="20221111 10:10:54.084"/>
</kw>
<msg timestamp="20221111 10:10:54.084" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221111 10:10:54.075" endtime="20221111 10:10:54.085"/>
</kw>
<status status="PASS" starttime="20221111 10:10:54.075" endtime="20221111 10:10:54.085"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221111 10:10:54.089" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221111 10:10:54.110" level="INFO">${rc} = 0</msg>
<msg timestamp="20221111 10:10:54.110" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221111 10:10:54.087" endtime="20221111 10:10:54.110"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221111 10:10:54.112" level="INFO">200</msg>
<status status="PASS" starttime="20221111 10:10:54.110" endtime="20221111 10:10:54.112"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221111 10:10:54.113" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221111 10:10:54.112" endtime="20221111 10:10:54.113"/>
</kw>
<status status="PASS" starttime="20221111 10:10:54.086" endtime="20221111 10:10:54.113"/>
</kw>
<msg timestamp="20221111 10:10:54.113" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221111 10:10:54.086" endtime="20221111 10:10:54.114"/>
</kw>
<msg timestamp="20221111 10:10:54.114" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221111 10:10:54.085" endtime="20221111 10:10:54.114"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221111 10:10:54.115" endtime="20221111 10:10:54.115"/>
</kw>
<status status="NOT RUN" starttime="20221111 10:10:54.114" endtime="20221111 10:10:54.115"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221111 10:10:54.115" endtime="20221111 10:10:54.115"/>
</kw>
<status status="PASS" starttime="20221111 10:10:54.115" endtime="20221111 10:10:54.115"/>
</branch>
<status status="PASS" starttime="20221111 10:10:54.114" endtime="20221111 10:10:54.115"/>
</if>
<status status="PASS" starttime="20221111 10:10:54.085" endtime="20221111 10:10:54.115"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221111 10:10:54.116" endtime="20221111 10:10:54.116"/>
</kw>
<status status="PASS" starttime="20221111 10:10:54.116" endtime="20221111 10:10:54.117"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221111 10:10:54.121" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221111 10:10:54.137" level="INFO">${rc} = 0</msg>
<msg timestamp="20221111 10:10:54.137" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221111 10:10:54.118" endtime="20221111 10:10:54.137"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221111 10:10:54.138" level="INFO">200</msg>
<status status="PASS" starttime="20221111 10:10:54.138" endtime="20221111 10:10:54.138"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221111 10:10:54.139" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221111 10:10:54.139" endtime="20221111 10:10:54.139"/>
</kw>
<status status="PASS" starttime="20221111 10:10:54.118" endtime="20221111 10:10:54.139"/>
</kw>
<msg timestamp="20221111 10:10:54.140" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221111 10:10:54.118" endtime="20221111 10:10:54.140"/>
</kw>
<msg timestamp="20221111 10:10:54.140" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221111 10:10:54.117" endtime="20221111 10:10:54.140"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221111 10:10:54.141" endtime="20221111 10:10:54.141"/>
</kw>
<status status="NOT RUN" starttime="20221111 10:10:54.141" endtime="20221111 10:10:54.141"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221111 10:10:54.141" endtime="20221111 10:10:54.142"/>
</kw>
<status status="PASS" starttime="20221111 10:10:54.141" endtime="20221111 10:10:54.142"/>
</branch>
<status status="PASS" starttime="20221111 10:10:54.141" endtime="20221111 10:10:54.142"/>
</if>
<status status="PASS" starttime="20221111 10:10:54.117" endtime="20221111 10:10:54.142"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221111 10:10:54.142" endtime="20221111 10:10:54.143"/>
</kw>
<status status="PASS" starttime="20221111 10:10:54.142" endtime="20221111 10:10:54.143"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221111 10:10:54.147" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221111 10:10:54.161" level="INFO">${rc} = 0</msg>
<msg timestamp="20221111 10:10:54.162" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221111 10:10:54.145" endtime="20221111 10:10:54.162"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221111 10:10:54.163" level="INFO">200</msg>
<status status="PASS" starttime="20221111 10:10:54.162" endtime="20221111 10:10:54.163"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221111 10:10:54.163" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221111 10:10:54.163" endtime="20221111 10:10:54.164"/>
</kw>
<status status="PASS" starttime="20221111 10:10:54.144" endtime="20221111 10:10:54.164"/>
</kw>
<msg timestamp="20221111 10:10:54.164" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221111 10:10:54.144" endtime="20221111 10:10:54.164"/>
</kw>
<msg timestamp="20221111 10:10:54.165" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221111 10:10:54.143" endtime="20221111 10:10:54.165"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221111 10:10:54.165" endtime="20221111 10:10:54.165"/>
</kw>
<status status="NOT RUN" starttime="20221111 10:10:54.165" endtime="20221111 10:10:54.165"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221111 10:10:54.165" endtime="20221111 10:10:54.166"/>
</kw>
<status status="PASS" starttime="20221111 10:10:54.165" endtime="20221111 10:10:54.166"/>
</branch>
<status status="PASS" starttime="20221111 10:10:54.165" endtime="20221111 10:10:54.166"/>
</if>
<status status="PASS" starttime="20221111 10:10:54.143" endtime="20221111 10:10:54.166"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221111 10:10:54.167" endtime="20221111 10:10:54.167"/>
</kw>
<status status="PASS" starttime="20221111 10:10:54.166" endtime="20221111 10:10:54.167"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221111 10:10:54.171" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221111 10:10:54.186" level="INFO">${rc} = 0</msg>
<msg timestamp="20221111 10:10:54.186" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221111 10:10:54.169" endtime="20221111 10:10:54.186"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221111 10:10:54.187" level="INFO">200</msg>
<status status="PASS" starttime="20221111 10:10:54.186" endtime="20221111 10:10:54.187"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221111 10:10:54.188" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221111 10:10:54.187" endtime="20221111 10:10:54.188"/>
</kw>
<status status="PASS" starttime="20221111 10:10:54.169" endtime="20221111 10:10:54.188"/>
</kw>
<msg timestamp="20221111 10:10:54.188" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221111 10:10:54.168" endtime="20221111 10:10:54.189"/>
</kw>
<msg timestamp="20221111 10:10:54.189" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221111 10:10:54.168" endtime="20221111 10:10:54.189"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221111 10:10:54.190" endtime="20221111 10:10:54.190"/>
</kw>
<status status="NOT RUN" starttime="20221111 10:10:54.190" endtime="20221111 10:10:54.190"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221111 10:10:54.190" endtime="20221111 10:10:54.190"/>
</kw>
<status status="PASS" starttime="20221111 10:10:54.190" endtime="20221111 10:10:54.190"/>
</branch>
<status status="PASS" starttime="20221111 10:10:54.189" endtime="20221111 10:10:54.190"/>
</if>
<status status="PASS" starttime="20221111 10:10:54.167" endtime="20221111 10:10:54.191"/>
</kw>
<status status="PASS" starttime="20221111 10:10:54.074" endtime="20221111 10:10:54.191"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221111 10:10:54.073" endtime="20221111 10:10:54.191"/>
</test>
<test id="s1-s2-s2-t6" name="Check Quota Usage api access" line="116">
<kw name="Check Access">
<arg>${QUOTA_USAGE_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221111 10:10:54.197" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20221111 10:10:54.200" level="INFO">${rc} = 0</msg>
<msg timestamp="20221111 10:10:54.200" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221111 10:10:54.195" endtime="20221111 10:10:54.200"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221111 10:10:54.202" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221111 10:10:54.201" endtime="20221111 10:10:54.202"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221111 10:10:54.202" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221111 10:10:54.202" endtime="20221111 10:10:54.202"/>
</kw>
<status status="PASS" starttime="20221111 10:10:54.194" endtime="20221111 10:10:54.203"/>
</kw>
<msg timestamp="20221111 10:10:54.203" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221111 10:10:54.194" endtime="20221111 10:10:54.203"/>
</kw>
<status status="PASS" starttime="20221111 10:10:54.194" endtime="20221111 10:10:54.204"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221111 10:10:54.208" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221111 10:10:54.224" level="INFO">${rc} = 0</msg>
<msg timestamp="20221111 10:10:54.224" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221111 10:10:54.206" endtime="20221111 10:10:54.224"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221111 10:10:54.225" level="INFO">200</msg>
<status status="PASS" starttime="20221111 10:10:54.224" endtime="20221111 10:10:54.225"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221111 10:10:54.226" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221111 10:10:54.225" endtime="20221111 10:10:54.226"/>
</kw>
<status status="PASS" starttime="20221111 10:10:54.205" endtime="20221111 10:10:54.226"/>
</kw>
<msg timestamp="20221111 10:10:54.226" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221111 10:10:54.205" endtime="20221111 10:10:54.227"/>
</kw>
<msg timestamp="20221111 10:10:54.227" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221111 10:10:54.204" endtime="20221111 10:10:54.227"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221111 10:10:54.228" endtime="20221111 10:10:54.228"/>
</kw>
<status status="NOT RUN" starttime="20221111 10:10:54.228" endtime="20221111 10:10:54.228"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221111 10:10:54.228" endtime="20221111 10:10:54.228"/>
</kw>
<status status="PASS" starttime="20221111 10:10:54.228" endtime="20221111 10:10:54.228"/>
</branch>
<status status="PASS" starttime="20221111 10:10:54.227" endtime="20221111 10:10:54.228"/>
</if>
<status status="PASS" starttime="20221111 10:10:54.204" endtime="20221111 10:10:54.229"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221111 10:10:54.229" endtime="20221111 10:10:54.229"/>
</kw>
<status status="PASS" starttime="20221111 10:10:54.229" endtime="20221111 10:10:54.230"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221111 10:10:54.234" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221111 10:10:54.249" level="INFO">${rc} = 0</msg>
<msg timestamp="20221111 10:10:54.249" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221111 10:10:54.231" endtime="20221111 10:10:54.250"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221111 10:10:54.251" level="INFO">200</msg>
<status status="PASS" starttime="20221111 10:10:54.250" endtime="20221111 10:10:54.251"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221111 10:10:54.251" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221111 10:10:54.251" endtime="20221111 10:10:54.251"/>
</kw>
<status status="PASS" starttime="20221111 10:10:54.231" endtime="20221111 10:10:54.252"/>
</kw>
<msg timestamp="20221111 10:10:54.252" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221111 10:10:54.231" endtime="20221111 10:10:54.252"/>
</kw>
<msg timestamp="20221111 10:10:54.253" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221111 10:10:54.230" endtime="20221111 10:10:54.253"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221111 10:10:54.253" endtime="20221111 10:10:54.253"/>
</kw>
<status status="NOT RUN" starttime="20221111 10:10:54.253" endtime="20221111 10:10:54.253"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221111 10:10:54.253" endtime="20221111 10:10:54.254"/>
</kw>
<status status="PASS" starttime="20221111 10:10:54.253" endtime="20221111 10:10:54.254"/>
</branch>
<status status="PASS" starttime="20221111 10:10:54.253" endtime="20221111 10:10:54.254"/>
</if>
<status status="PASS" starttime="20221111 10:10:54.230" endtime="20221111 10:10:54.254"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221111 10:10:54.255" endtime="20221111 10:10:54.255"/>
</kw>
<status status="PASS" starttime="20221111 10:10:54.254" endtime="20221111 10:10:54.255"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221111 10:10:54.259" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221111 10:10:54.285" level="INFO">${rc} = 0</msg>
<msg timestamp="20221111 10:10:54.285" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221111 10:10:54.257" endtime="20221111 10:10:54.285"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221111 10:10:54.286" level="INFO">200</msg>
<status status="PASS" starttime="20221111 10:10:54.285" endtime="20221111 10:10:54.286"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221111 10:10:54.287" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221111 10:10:54.286" endtime="20221111 10:10:54.287"/>
</kw>
<status status="PASS" starttime="20221111 10:10:54.256" endtime="20221111 10:10:54.287"/>
</kw>
<msg timestamp="20221111 10:10:54.287" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221111 10:10:54.256" endtime="20221111 10:10:54.288"/>
</kw>
<msg timestamp="20221111 10:10:54.288" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221111 10:10:54.256" endtime="20221111 10:10:54.288"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221111 10:10:54.289" endtime="20221111 10:10:54.289"/>
</kw>
<status status="NOT RUN" starttime="20221111 10:10:54.288" endtime="20221111 10:10:54.289"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221111 10:10:54.289" endtime="20221111 10:10:54.289"/>
</kw>
<status status="PASS" starttime="20221111 10:10:54.289" endtime="20221111 10:10:54.289"/>
</branch>
<status status="PASS" starttime="20221111 10:10:54.288" endtime="20221111 10:10:54.289"/>
</if>
<status status="PASS" starttime="20221111 10:10:54.255" endtime="20221111 10:10:54.289"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221111 10:10:54.290" endtime="20221111 10:10:54.290"/>
</kw>
<status status="PASS" starttime="20221111 10:10:54.290" endtime="20221111 10:10:54.291"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221111 10:10:54.294" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221111 10:10:54.308" level="INFO">${rc} = 0</msg>
<msg timestamp="20221111 10:10:54.308" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221111 10:10:54.292" endtime="20221111 10:10:54.308"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221111 10:10:54.309" level="INFO">200</msg>
<status status="PASS" starttime="20221111 10:10:54.309" endtime="20221111 10:10:54.309"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221111 10:10:54.310" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221111 10:10:54.310" endtime="20221111 10:10:54.310"/>
</kw>
<status status="PASS" starttime="20221111 10:10:54.292" endtime="20221111 10:10:54.310"/>
</kw>
<msg timestamp="20221111 10:10:54.311" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221111 10:10:54.292" endtime="20221111 10:10:54.311"/>
</kw>
<msg timestamp="20221111 10:10:54.311" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221111 10:10:54.291" endtime="20221111 10:10:54.311"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221111 10:10:54.312" endtime="20221111 10:10:54.312"/>
</kw>
<status status="NOT RUN" starttime="20221111 10:10:54.312" endtime="20221111 10:10:54.312"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221111 10:10:54.312" endtime="20221111 10:10:54.312"/>
</kw>
<status status="PASS" starttime="20221111 10:10:54.312" endtime="20221111 10:10:54.312"/>
</branch>
<status status="PASS" starttime="20221111 10:10:54.311" endtime="20221111 10:10:54.312"/>
</if>
<status status="PASS" starttime="20221111 10:10:54.291" endtime="20221111 10:10:54.313"/>
</kw>
<status status="PASS" starttime="20221111 10:10:54.193" endtime="20221111 10:10:54.313"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221111 10:10:54.192" endtime="20221111 10:10:54.313"/>
</test>
<test id="s1-s2-s2-t7" name="Check File Size Distribution api access" line="119">
<kw name="Check Access">
<arg>${FILE_SIZE_DIST_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221111 10:10:54.319" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20221111 10:10:54.322" level="INFO">${rc} = 0</msg>
<msg timestamp="20221111 10:10:54.322" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221111 10:10:54.317" endtime="20221111 10:10:54.322"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221111 10:10:54.323" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221111 10:10:54.323" endtime="20221111 10:10:54.323"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221111 10:10:54.324" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221111 10:10:54.323" endtime="20221111 10:10:54.324"/>
</kw>
<status status="PASS" starttime="20221111 10:10:54.316" endtime="20221111 10:10:54.324"/>
</kw>
<msg timestamp="20221111 10:10:54.324" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221111 10:10:54.316" endtime="20221111 10:10:54.325"/>
</kw>
<status status="PASS" starttime="20221111 10:10:54.315" endtime="20221111 10:10:54.325"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221111 10:10:54.328" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221111 10:10:54.352" level="INFO">${rc} = 0</msg>
<msg timestamp="20221111 10:10:54.352" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221111 10:10:54.327" endtime="20221111 10:10:54.352"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221111 10:10:54.354" level="INFO">200</msg>
<status status="PASS" starttime="20221111 10:10:54.353" endtime="20221111 10:10:54.354"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221111 10:10:54.354" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221111 10:10:54.354" endtime="20221111 10:10:54.355"/>
</kw>
<status status="PASS" starttime="20221111 10:10:54.326" endtime="20221111 10:10:54.355"/>
</kw>
<msg timestamp="20221111 10:10:54.355" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221111 10:10:54.326" endtime="20221111 10:10:54.356"/>
</kw>
<msg timestamp="20221111 10:10:54.356" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221111 10:10:54.326" endtime="20221111 10:10:54.356"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221111 10:10:54.357" endtime="20221111 10:10:54.357"/>
</kw>
<status status="NOT RUN" starttime="20221111 10:10:54.356" endtime="20221111 10:10:54.357"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221111 10:10:54.357" endtime="20221111 10:10:54.357"/>
</kw>
<status status="PASS" starttime="20221111 10:10:54.357" endtime="20221111 10:10:54.357"/>
</branch>
<status status="PASS" starttime="20221111 10:10:54.356" endtime="20221111 10:10:54.357"/>
</if>
<status status="PASS" starttime="20221111 10:10:54.325" endtime="20221111 10:10:54.358"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221111 10:10:54.358" endtime="20221111 10:10:54.359"/>
</kw>
<status status="PASS" starttime="20221111 10:10:54.358" endtime="20221111 10:10:54.359"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221111 10:10:54.363" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221111 10:10:54.378" level="INFO">${rc} = 0</msg>
<msg timestamp="20221111 10:10:54.378" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221111 10:10:54.361" endtime="20221111 10:10:54.378"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221111 10:10:54.379" level="INFO">200</msg>
<status status="PASS" starttime="20221111 10:10:54.378" endtime="20221111 10:10:54.379"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221111 10:10:54.380" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221111 10:10:54.379" endtime="20221111 10:10:54.380"/>
</kw>
<status status="PASS" starttime="20221111 10:10:54.360" endtime="20221111 10:10:54.380"/>
</kw>
<msg timestamp="20221111 10:10:54.380" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221111 10:10:54.360" endtime="20221111 10:10:54.381"/>
</kw>
<msg timestamp="20221111 10:10:54.381" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221111 10:10:54.359" endtime="20221111 10:10:54.381"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221111 10:10:54.382" endtime="20221111 10:10:54.382"/>
</kw>
<status status="NOT RUN" starttime="20221111 10:10:54.382" endtime="20221111 10:10:54.382"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221111 10:10:54.382" endtime="20221111 10:10:54.383"/>
</kw>
<status status="PASS" starttime="20221111 10:10:54.382" endtime="20221111 10:10:54.383"/>
</branch>
<status status="PASS" starttime="20221111 10:10:54.381" endtime="20221111 10:10:54.383"/>
</if>
<status status="PASS" starttime="20221111 10:10:54.359" endtime="20221111 10:10:54.383"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221111 10:10:54.383" endtime="20221111 10:10:54.384"/>
</kw>
<status status="PASS" starttime="20221111 10:10:54.383" endtime="20221111 10:10:54.384"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221111 10:10:54.389" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221111 10:10:54.405" level="INFO">${rc} = 0</msg>
<msg timestamp="20221111 10:10:54.405" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221111 10:10:54.386" endtime="20221111 10:10:54.406"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221111 10:10:54.407" level="INFO">200</msg>
<status status="PASS" starttime="20221111 10:10:54.406" endtime="20221111 10:10:54.407"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221111 10:10:54.407" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221111 10:10:54.407" endtime="20221111 10:10:54.407"/>
</kw>
<status status="PASS" starttime="20221111 10:10:54.386" endtime="20221111 10:10:54.408"/>
</kw>
<msg timestamp="20221111 10:10:54.408" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221111 10:10:54.385" endtime="20221111 10:10:54.408"/>
</kw>
<msg timestamp="20221111 10:10:54.408" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221111 10:10:54.385" endtime="20221111 10:10:54.408"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221111 10:10:54.409" endtime="20221111 10:10:54.409"/>
</kw>
<status status="NOT RUN" starttime="20221111 10:10:54.409" endtime="20221111 10:10:54.409"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221111 10:10:54.409" endtime="20221111 10:10:54.409"/>
</kw>
<status status="PASS" starttime="20221111 10:10:54.409" endtime="20221111 10:10:54.409"/>
</branch>
<status status="PASS" starttime="20221111 10:10:54.408" endtime="20221111 10:10:54.409"/>
</if>
<status status="PASS" starttime="20221111 10:10:54.384" endtime="20221111 10:10:54.410"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221111 10:10:54.410" endtime="20221111 10:10:54.410"/>
</kw>
<status status="PASS" starttime="20221111 10:10:54.410" endtime="20221111 10:10:54.411"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221111 10:10:54.414" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221111 10:10:54.429" level="INFO">${rc} = 0</msg>
<msg timestamp="20221111 10:10:54.429" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221111 10:10:54.412" endtime="20221111 10:10:54.429"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221111 10:10:54.431" level="INFO">200</msg>
<status status="PASS" starttime="20221111 10:10:54.429" endtime="20221111 10:10:54.431"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221111 10:10:54.431" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221111 10:10:54.431" endtime="20221111 10:10:54.431"/>
</kw>
<status status="PASS" starttime="20221111 10:10:54.412" endtime="20221111 10:10:54.432"/>
</kw>
<msg timestamp="20221111 10:10:54.432" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221111 10:10:54.411" endtime="20221111 10:10:54.432"/>
</kw>
<msg timestamp="20221111 10:10:54.433" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221111 10:10:54.411" endtime="20221111 10:10:54.433"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221111 10:10:54.433" endtime="20221111 10:10:54.433"/>
</kw>
<status status="NOT RUN" starttime="20221111 10:10:54.433" endtime="20221111 10:10:54.433"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221111 10:10:54.434" endtime="20221111 10:10:54.434"/>
</kw>
<status status="PASS" starttime="20221111 10:10:54.433" endtime="20221111 10:10:54.434"/>
</branch>
<status status="PASS" starttime="20221111 10:10:54.433" endtime="20221111 10:10:54.434"/>
</if>
<status status="PASS" starttime="20221111 10:10:54.411" endtime="20221111 10:10:54.434"/>
</kw>
<status status="PASS" starttime="20221111 10:10:54.315" endtime="20221111 10:10:54.434"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221111 10:10:54.314" endtime="20221111 10:10:54.435"/>
</test>
<test id="s1-s2-s2-t8" name="Check Recon Namespace Summary Root" line="122">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/</arg>
<arg>ROOT</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221111 10:10:54.441" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221111 10:10:54.457" level="INFO">${rc} = 0</msg>
<msg timestamp="20221111 10:10:54.457" level="INFO">${output} = {"type":"ROOT","numVolume":3,"numBucket":2,"numDir":0,"numKey":0,"status":"OK"}</msg>
<status status="PASS" starttime="20221111 10:10:54.439" endtime="20221111 10:10:54.458"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221111 10:10:54.459" level="INFO">{"type":"ROOT","numVolume":3,"numBucket":2,"numDir":0,"numKey":0,"status":"OK"}</msg>
<status status="PASS" starttime="20221111 10:10:54.458" endtime="20221111 10:10:54.459"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221111 10:10:54.459" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221111 10:10:54.459" endtime="20221111 10:10:54.459"/>
</kw>
<status status="PASS" starttime="20221111 10:10:54.438" endtime="20221111 10:10:54.460"/>
</kw>
<msg timestamp="20221111 10:10:54.460" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221111 10:10:54.438" endtime="20221111 10:10:54.461"/>
</kw>
<msg timestamp="20221111 10:10:54.461" level="INFO">${result} = {"type":"ROOT","numVolume":3,"numBucket":2,"numDir":0,"numKey":0,"status":"OK"}</msg>
<status status="PASS" starttime="20221111 10:10:54.438" endtime="20221111 10:10:54.461"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221111 10:10:54.461" endtime="20221111 10:10:54.462"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221111 10:10:54.462" endtime="20221111 10:10:54.462"/>
</kw>
<status status="PASS" starttime="20221111 10:10:54.437" endtime="20221111 10:10:54.463"/>
</kw>
<status status="PASS" starttime="20221111 10:10:54.437" endtime="20221111 10:10:54.463"/>
</kw>
<status status="PASS" starttime="20221111 10:10:54.436" endtime="20221111 10:10:54.463"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221111 10:10:54.435" endtime="20221111 10:10:54.463"/>
</test>
<test id="s1-s2-s2-t9" name="Check Recon Namespace Summary Volume" line="125">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}</arg>
<arg>VOLUME</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221111 10:10:54.470" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-kaqxu 2&gt;&amp;1'.</msg>
<msg timestamp="20221111 10:10:54.486" level="INFO">${rc} = 0</msg>
<msg timestamp="20221111 10:10:54.486" level="INFO">${output} = {"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221111 10:10:54.468" endtime="20221111 10:10:54.486"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221111 10:10:54.487" level="INFO">{"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221111 10:10:54.487" endtime="20221111 10:10:54.488"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221111 10:10:54.488" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221111 10:10:54.488" endtime="20221111 10:10:54.488"/>
</kw>
<status status="PASS" starttime="20221111 10:10:54.468" endtime="20221111 10:10:54.489"/>
</kw>
<msg timestamp="20221111 10:10:54.489" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221111 10:10:54.467" endtime="20221111 10:10:54.489"/>
</kw>
<msg timestamp="20221111 10:10:54.490" level="INFO">${result} = {"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221111 10:10:54.467" endtime="20221111 10:10:54.490"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20221111 10:10:54.491" level="FAIL">'{"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20221111 10:10:54.490" endtime="20221111 10:10:54.491"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221111 10:10:54.491" endtime="20221111 10:10:54.491"/>
</kw>
<status status="FAIL" starttime="20221111 10:10:54.466" endtime="20221111 10:10:54.492"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221111 10:11:04.497" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-kaqxu 2&gt;&amp;1'.</msg>
<msg timestamp="20221111 10:11:04.512" level="INFO">${rc} = 0</msg>
<msg timestamp="20221111 10:11:04.512" level="INFO">${output} = {"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221111 10:11:04.495" endtime="20221111 10:11:04.512"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221111 10:11:04.513" level="INFO">{"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221111 10:11:04.512" endtime="20221111 10:11:04.513"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221111 10:11:04.514" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221111 10:11:04.514" endtime="20221111 10:11:04.514"/>
</kw>
<status status="PASS" starttime="20221111 10:11:04.494" endtime="20221111 10:11:04.514"/>
</kw>
<msg timestamp="20221111 10:11:04.514" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221111 10:11:04.494" endtime="20221111 10:11:04.515"/>
</kw>
<msg timestamp="20221111 10:11:04.515" level="INFO">${result} = {"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221111 10:11:04.493" endtime="20221111 10:11:04.515"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20221111 10:11:04.516" level="FAIL">'{"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20221111 10:11:04.516" endtime="20221111 10:11:04.517"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221111 10:11:04.517" endtime="20221111 10:11:04.517"/>
</kw>
<status status="FAIL" starttime="20221111 10:11:04.493" endtime="20221111 10:11:04.518"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221111 10:11:14.523" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-kaqxu 2&gt;&amp;1'.</msg>
<msg timestamp="20221111 10:11:14.537" level="INFO">${rc} = 0</msg>
<msg timestamp="20221111 10:11:14.537" level="INFO">${output} = {"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221111 10:11:14.521" endtime="20221111 10:11:14.537"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221111 10:11:14.538" level="INFO">{"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221111 10:11:14.537" endtime="20221111 10:11:14.538"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221111 10:11:14.539" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221111 10:11:14.538" endtime="20221111 10:11:14.539"/>
</kw>
<status status="PASS" starttime="20221111 10:11:14.520" endtime="20221111 10:11:14.539"/>
</kw>
<msg timestamp="20221111 10:11:14.539" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221111 10:11:14.520" endtime="20221111 10:11:14.540"/>
</kw>
<msg timestamp="20221111 10:11:14.540" level="INFO">${result} = {"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221111 10:11:14.519" endtime="20221111 10:11:14.540"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20221111 10:11:14.541" level="FAIL">'{"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20221111 10:11:14.540" endtime="20221111 10:11:14.541"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221111 10:11:14.542" endtime="20221111 10:11:14.542"/>
</kw>
<status status="FAIL" starttime="20221111 10:11:14.518" endtime="20221111 10:11:14.542"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221111 10:11:24.547" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-kaqxu 2&gt;&amp;1'.</msg>
<msg timestamp="20221111 10:11:24.563" level="INFO">${rc} = 0</msg>
<msg timestamp="20221111 10:11:24.563" level="INFO">${output} = {"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221111 10:11:24.545" endtime="20221111 10:11:24.563"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221111 10:11:24.565" level="INFO">{"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221111 10:11:24.564" endtime="20221111 10:11:24.565"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221111 10:11:24.565" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221111 10:11:24.565" endtime="20221111 10:11:24.565"/>
</kw>
<status status="PASS" starttime="20221111 10:11:24.544" endtime="20221111 10:11:24.566"/>
</kw>
<msg timestamp="20221111 10:11:24.566" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221111 10:11:24.544" endtime="20221111 10:11:24.566"/>
</kw>
<msg timestamp="20221111 10:11:24.567" level="INFO">${result} = {"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221111 10:11:24.544" endtime="20221111 10:11:24.567"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20221111 10:11:24.568" level="FAIL">'{"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20221111 10:11:24.567" endtime="20221111 10:11:24.568"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221111 10:11:24.568" endtime="20221111 10:11:24.568"/>
</kw>
<status status="FAIL" starttime="20221111 10:11:24.543" endtime="20221111 10:11:24.569"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221111 10:11:34.574" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-kaqxu 2&gt;&amp;1'.</msg>
<msg timestamp="20221111 10:11:34.591" level="INFO">${rc} = 0</msg>
<msg timestamp="20221111 10:11:34.591" level="INFO">${output} = {"type":"VOLUME","numVolume":-1,"numBucket":1,"numDir":2,"numKey":2,"status":"OK"}</msg>
<status status="PASS" starttime="20221111 10:11:34.572" endtime="20221111 10:11:34.591"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221111 10:11:34.593" level="INFO">{"type":"VOLUME","numVolume":-1,"numBucket":1,"numDir":2,"numKey":2,"status":"OK"}</msg>
<status status="PASS" starttime="20221111 10:11:34.592" endtime="20221111 10:11:34.593"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221111 10:11:34.593" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221111 10:11:34.593" endtime="20221111 10:11:34.593"/>
</kw>
<status status="PASS" starttime="20221111 10:11:34.571" endtime="20221111 10:11:34.594"/>
</kw>
<msg timestamp="20221111 10:11:34.594" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221111 10:11:34.571" endtime="20221111 10:11:34.594"/>
</kw>
<msg timestamp="20221111 10:11:34.594" level="INFO">${result} = {"type":"VOLUME","numVolume":-1,"numBucket":1,"numDir":2,"numKey":2,"status":"OK"}</msg>
<status status="PASS" starttime="20221111 10:11:34.570" endtime="20221111 10:11:34.594"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221111 10:11:34.595" endtime="20221111 10:11:34.595"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221111 10:11:34.595" endtime="20221111 10:11:34.595"/>
</kw>
<status status="PASS" starttime="20221111 10:11:34.569" endtime="20221111 10:11:34.595"/>
</kw>
<status status="PASS" starttime="20221111 10:10:54.466" endtime="20221111 10:11:34.595"/>
</kw>
<status status="PASS" starttime="20221111 10:10:54.465" endtime="20221111 10:11:34.596"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221111 10:10:54.464" endtime="20221111 10:11:34.596"/>
</test>
<test id="s1-s2-s2-t10" name="Check Recon Namespace Summary Bucket" line="128">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}</arg>
<arg>BUCKET</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221111 10:11:34.603" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-kaqxu/buc-wfssl 2&gt;&amp;1'.</msg>
<msg timestamp="20221111 10:11:34.619" level="INFO">${rc} = 0</msg>
<msg timestamp="20221111 10:11:34.620" level="INFO">${output} = {"type":"BUCKET","numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2,"status":"OK"}</msg>
<status status="PASS" starttime="20221111 10:11:34.600" endtime="20221111 10:11:34.620"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221111 10:11:34.621" level="INFO">{"type":"BUCKET","numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2,"status":"OK"}</msg>
<status status="PASS" starttime="20221111 10:11:34.620" endtime="20221111 10:11:34.621"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221111 10:11:34.622" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221111 10:11:34.621" endtime="20221111 10:11:34.622"/>
</kw>
<status status="PASS" starttime="20221111 10:11:34.600" endtime="20221111 10:11:34.622"/>
</kw>
<msg timestamp="20221111 10:11:34.622" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221111 10:11:34.600" endtime="20221111 10:11:34.623"/>
</kw>
<msg timestamp="20221111 10:11:34.623" level="INFO">${result} = {"type":"BUCKET","numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2,"status":"OK"}</msg>
<status status="PASS" starttime="20221111 10:11:34.599" endtime="20221111 10:11:34.623"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221111 10:11:34.623" endtime="20221111 10:11:34.624"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221111 10:11:34.624" endtime="20221111 10:11:34.624"/>
</kw>
<status status="PASS" starttime="20221111 10:11:34.599" endtime="20221111 10:11:34.624"/>
</kw>
<status status="PASS" starttime="20221111 10:11:34.598" endtime="20221111 10:11:34.624"/>
</kw>
<status status="PASS" starttime="20221111 10:11:34.597" endtime="20221111 10:11:34.625"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221111 10:11:34.597" endtime="20221111 10:11:34.625"/>
</test>
<test id="s1-s2-s2-t11" name="Check Recon Namespace Summary Key" line="131">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/file1</arg>
<arg>KEY</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221111 10:11:34.631" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-kaqxu/buc-wfssl/file1 2&gt;&amp;1'.</msg>
<msg timestamp="20221111 10:11:34.647" level="INFO">${rc} = 0</msg>
<msg timestamp="20221111 10:11:34.647" level="INFO">${output} = {"type":"KEY","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"OK"}</msg>
<status status="PASS" starttime="20221111 10:11:34.629" endtime="20221111 10:11:34.647"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221111 10:11:34.648" level="INFO">{"type":"KEY","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"OK"}</msg>
<status status="PASS" starttime="20221111 10:11:34.648" endtime="20221111 10:11:34.649"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221111 10:11:34.649" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221111 10:11:34.649" endtime="20221111 10:11:34.649"/>
</kw>
<status status="PASS" starttime="20221111 10:11:34.629" endtime="20221111 10:11:34.649"/>
</kw>
<msg timestamp="20221111 10:11:34.650" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221111 10:11:34.629" endtime="20221111 10:11:34.653"/>
</kw>
<msg timestamp="20221111 10:11:34.653" level="INFO">${result} = {"type":"KEY","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"OK"}</msg>
<status status="PASS" starttime="20221111 10:11:34.628" endtime="20221111 10:11:34.653"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221111 10:11:34.654" endtime="20221111 10:11:34.654"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221111 10:11:34.654" endtime="20221111 10:11:34.654"/>
</kw>
<status status="PASS" starttime="20221111 10:11:34.628" endtime="20221111 10:11:34.655"/>
</kw>
<status status="PASS" starttime="20221111 10:11:34.627" endtime="20221111 10:11:34.655"/>
</kw>
<status status="PASS" starttime="20221111 10:11:34.626" endtime="20221111 10:11:34.655"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221111 10:11:34.626" endtime="20221111 10:11:34.655"/>
</test>
<test id="s1-s2-s2-t12" name="Check Recon Namespace Summary Directory" line="134">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET_LAYOUT}' == 'LEGACY'</arg>
<arg>Wait For Summary</arg>
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2/</arg>
<arg>DIRECTORY</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221111 10:11:34.657" endtime="20221111 10:11:34.658"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET_LAYOUT}' == 'FILE_SYSTEM_OPTIMIZED'</arg>
<arg>Wait For Summary</arg>
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2</arg>
<arg>DIRECTORY</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2</arg>
<arg>DIRECTORY</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221111 10:11:34.664" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-kaqxu/buc-wfssl/dir1/dir2 2&gt;&amp;1'.</msg>
<msg timestamp="20221111 10:11:34.679" level="INFO">${rc} = 0</msg>
<msg timestamp="20221111 10:11:34.679" level="INFO">${output} = {"type":"DIRECTORY","numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1,"status":"OK"}</msg>
<status status="PASS" starttime="20221111 10:11:34.662" endtime="20221111 10:11:34.679"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221111 10:11:34.681" level="INFO">{"type":"DIRECTORY","numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1,"status":"OK"}</msg>
<status status="PASS" starttime="20221111 10:11:34.680" endtime="20221111 10:11:34.681"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221111 10:11:34.682" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221111 10:11:34.681" endtime="20221111 10:11:34.682"/>
</kw>
<status status="PASS" starttime="20221111 10:11:34.661" endtime="20221111 10:11:34.682"/>
</kw>
<msg timestamp="20221111 10:11:34.682" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221111 10:11:34.661" endtime="20221111 10:11:34.683"/>
</kw>
<msg timestamp="20221111 10:11:34.683" level="INFO">${result} = {"type":"DIRECTORY","numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1,"status":"OK"}</msg>
<status status="PASS" starttime="20221111 10:11:34.660" endtime="20221111 10:11:34.683"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221111 10:11:34.683" endtime="20221111 10:11:34.683"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221111 10:11:34.684" endtime="20221111 10:11:34.684"/>
</kw>
<status status="PASS" starttime="20221111 10:11:34.660" endtime="20221111 10:11:34.684"/>
</kw>
<status status="PASS" starttime="20221111 10:11:34.659" endtime="20221111 10:11:34.684"/>
</kw>
<status status="PASS" starttime="20221111 10:11:34.658" endtime="20221111 10:11:34.684"/>
</kw>
<status status="PASS" starttime="20221111 10:11:34.658" endtime="20221111 10:11:34.684"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221111 10:11:34.656" endtime="20221111 10:11:34.685"/>
</test>
<test id="s1-s2-s2-t13" name="Check Recon Namespace Disk Usage" line="138">
<kw name="Wait For Summary">
<arg>${DISK_USAGE_URL}?path=/${VOLUME}/${BUCKET}&amp;files=true&amp;replica=true</arg>
<arg>\"sizeWithReplica\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221111 10:11:34.691" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/du?path=/vol-kaqxu/buc-wfssl&amp;files=true&amp;replica=true 2&gt;&amp;1'.</msg>
<msg timestamp="20221111 10:11:34.707" level="INFO">${rc} = 0</msg>
<msg timestamp="20221111 10:11:34.707" level="INFO">${output} = {"status":"OK","path":"/vol-kaqxu/buc-wfssl","size":9917,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-kaqxu/buc-wfssl/dir1","size":6038,"sizeWithReplica":-1,"isKey":fals...</msg>
<status status="PASS" starttime="20221111 10:11:34.689" endtime="20221111 10:11:34.707"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221111 10:11:34.709" level="INFO">{"status":"OK","path":"/vol-kaqxu/buc-wfssl","size":9917,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-kaqxu/buc-wfssl/dir1","size":6038,"sizeWithReplica":-1,"isKey":false}],"sizeDirectKey":3879}</msg>
<status status="PASS" starttime="20221111 10:11:34.708" endtime="20221111 10:11:34.709"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221111 10:11:34.710" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221111 10:11:34.709" endtime="20221111 10:11:34.710"/>
</kw>
<status status="PASS" starttime="20221111 10:11:34.688" endtime="20221111 10:11:34.710"/>
</kw>
<msg timestamp="20221111 10:11:34.710" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221111 10:11:34.688" endtime="20221111 10:11:34.711"/>
</kw>
<msg timestamp="20221111 10:11:34.711" level="INFO">${result} = {"status":"OK","path":"/vol-kaqxu/buc-wfssl","size":9917,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-kaqxu/buc-wfssl/dir1","size":6038,"sizeWithReplica":-1,"isKey":fals...</msg>
<status status="PASS" starttime="20221111 10:11:34.688" endtime="20221111 10:11:34.711"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221111 10:11:34.711" endtime="20221111 10:11:34.712"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221111 10:11:34.712" endtime="20221111 10:11:34.712"/>
</kw>
<status status="PASS" starttime="20221111 10:11:34.687" endtime="20221111 10:11:34.712"/>
</kw>
<status status="PASS" starttime="20221111 10:11:34.687" endtime="20221111 10:11:34.712"/>
</kw>
<status status="PASS" starttime="20221111 10:11:34.686" endtime="20221111 10:11:34.713"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221111 10:11:34.685" endtime="20221111 10:11:34.713"/>
</test>
<test id="s1-s2-s2-t14" name="Check Recon Namespace Volume Quota Usage" line="141">
<kw name="Wait For Summary">
<arg>${QUOTA_USAGE_URL}?path=/${VOLUME}</arg>
<arg>\"used\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221111 10:11:34.720" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/quota?path=/vol-kaqxu 2&gt;&amp;1'.</msg>
<msg timestamp="20221111 10:11:34.734" level="INFO">${rc} = 0</msg>
<msg timestamp="20221111 10:11:34.734" level="INFO">${output} = {"allowed":-1,"used":9917,"status":"OK"}</msg>
<status status="PASS" starttime="20221111 10:11:34.718" endtime="20221111 10:11:34.734"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221111 10:11:34.735" level="INFO">{"allowed":-1,"used":9917,"status":"OK"}</msg>
<status status="PASS" starttime="20221111 10:11:34.735" endtime="20221111 10:11:34.736"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221111 10:11:34.736" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221111 10:11:34.736" endtime="20221111 10:11:34.737"/>
</kw>
<status status="PASS" starttime="20221111 10:11:34.717" endtime="20221111 10:11:34.737"/>
</kw>
<msg timestamp="20221111 10:11:34.737" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221111 10:11:34.717" endtime="20221111 10:11:34.738"/>
</kw>
<msg timestamp="20221111 10:11:34.738" level="INFO">${result} = {"allowed":-1,"used":9917,"status":"OK"}</msg>
<status status="PASS" starttime="20221111 10:11:34.716" endtime="20221111 10:11:34.738"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221111 10:11:34.738" endtime="20221111 10:11:34.738"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221111 10:11:34.738" endtime="20221111 10:11:34.739"/>
</kw>
<status status="PASS" starttime="20221111 10:11:34.716" endtime="20221111 10:11:34.739"/>
</kw>
<status status="PASS" starttime="20221111 10:11:34.715" endtime="20221111 10:11:34.739"/>
</kw>
<status status="PASS" starttime="20221111 10:11:34.714" endtime="20221111 10:11:34.739"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221111 10:11:34.714" endtime="20221111 10:11:34.739"/>
</test>
<test id="s1-s2-s2-t15" name="Check Recon Namespace Bucket Quota Usage" line="144">
<kw name="Wait For Summary">
<arg>${QUOTA_USAGE_URL}?path=/${VOLUME}/${BUCKET}</arg>
<arg>\"used\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221111 10:11:34.746" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/quota?path=/vol-kaqxu/buc-wfssl 2&gt;&amp;1'.</msg>
<msg timestamp="20221111 10:11:34.759" level="INFO">${rc} = 0</msg>
<msg timestamp="20221111 10:11:34.759" level="INFO">${output} = {"allowed":-1,"used":9917,"status":"OK"}</msg>
<status status="PASS" starttime="20221111 10:11:34.744" endtime="20221111 10:11:34.759"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221111 10:11:34.760" level="INFO">{"allowed":-1,"used":9917,"status":"OK"}</msg>
<status status="PASS" starttime="20221111 10:11:34.760" endtime="20221111 10:11:34.761"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221111 10:11:34.761" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221111 10:11:34.761" endtime="20221111 10:11:34.761"/>
</kw>
<status status="PASS" starttime="20221111 10:11:34.743" endtime="20221111 10:11:34.762"/>
</kw>
<msg timestamp="20221111 10:11:34.762" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221111 10:11:34.743" endtime="20221111 10:11:34.762"/>
</kw>
<msg timestamp="20221111 10:11:34.763" level="INFO">${result} = {"allowed":-1,"used":9917,"status":"OK"}</msg>
<status status="PASS" starttime="20221111 10:11:34.743" endtime="20221111 10:11:34.763"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221111 10:11:34.763" endtime="20221111 10:11:34.763"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221111 10:11:34.763" endtime="20221111 10:11:34.764"/>
</kw>
<status status="PASS" starttime="20221111 10:11:34.742" endtime="20221111 10:11:34.764"/>
</kw>
<status status="PASS" starttime="20221111 10:11:34.742" endtime="20221111 10:11:34.764"/>
</kw>
<status status="PASS" starttime="20221111 10:11:34.741" endtime="20221111 10:11:34.764"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221111 10:11:34.740" endtime="20221111 10:11:34.764"/>
</test>
<test id="s1-s2-s2-t16" name="Check Recon Namespace File Size Distribution Root" line="147">
<kw name="Wait For Summary">
<arg>${FILE_SIZE_DIST_URL}?path=/</arg>
<arg>\"dist\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221111 10:11:34.772" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221111 10:11:34.786" level="INFO">${rc} = 0</msg>
<msg timestamp="20221111 10:11:34.786" level="INFO">${output} = {"dist":[0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20221111 10:11:34.770" endtime="20221111 10:11:34.786"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221111 10:11:34.787" level="INFO">{"dist":[0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20221111 10:11:34.786" endtime="20221111 10:11:34.787"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221111 10:11:34.788" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221111 10:11:34.787" endtime="20221111 10:11:34.788"/>
</kw>
<status status="PASS" starttime="20221111 10:11:34.769" endtime="20221111 10:11:34.788"/>
</kw>
<msg timestamp="20221111 10:11:34.788" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221111 10:11:34.768" endtime="20221111 10:11:34.789"/>
</kw>
<msg timestamp="20221111 10:11:34.789" level="INFO">${result} = {"dist":[0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20221111 10:11:34.768" endtime="20221111 10:11:34.789"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221111 10:11:34.789" endtime="20221111 10:11:34.790"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221111 10:11:34.790" endtime="20221111 10:11:34.790"/>
</kw>
<status status="PASS" starttime="20221111 10:11:34.767" endtime="20221111 10:11:34.790"/>
</kw>
<status status="PASS" starttime="20221111 10:11:34.767" endtime="20221111 10:11:34.790"/>
</kw>
<status status="PASS" starttime="20221111 10:11:34.766" endtime="20221111 10:11:34.790"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221111 10:11:34.765" endtime="20221111 10:11:34.791"/>
</test>
<doc>Smoke test for Recon Namespace Summary Endpoint for FILE_SYSTEM_OPTIMIZED buckets.</doc>
<status status="PASS" starttime="20221111 10:10:34.834" endtime="20221111 10:11:34.792"/>
</suite>
<status status="PASS" starttime="20221111 10:09:44.130" endtime="20221111 10:11:34.795"/>
</suite>
<suite id="s1-s3" name="Loaddata" source="/opt/hadoop/smoketest/topology/loaddata.robot">
<test id="s1-s3-t1" name="Create a volume, bucket and key" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create topvol1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221111 10:11:39.676" level="INFO">Running command 'ozone sh volume create topvol1 2&gt;&amp;1'.</msg>
<msg timestamp="20221111 10:11:43.138" level="INFO">${rc} = 0</msg>
<msg timestamp="20221111 10:11:43.138" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221111 10:11:39.672" endtime="20221111 10:11:43.138"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221111 10:11:43.139" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221111 10:11:43.138" endtime="20221111 10:11:43.139"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221111 10:11:43.139" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221111 10:11:43.139" endtime="20221111 10:11:43.140"/>
</kw>
<status status="PASS" starttime="20221111 10:11:39.672" endtime="20221111 10:11:43.140"/>
</kw>
<msg timestamp="20221111 10:11:43.140" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221111 10:11:39.672" endtime="20221111 10:11:43.141"/>
</kw>
<msg timestamp="20221111 10:11:43.141" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221111 10:11:39.671" endtime="20221111 10:11:43.141"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20221111 10:11:43.141" endtime="20221111 10:11:43.142"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /topvol1/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221111 10:11:43.145" level="INFO">Running command 'ozone sh bucket create /topvol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20221111 10:11:46.725" level="INFO">${rc} = 0</msg>
<msg timestamp="20221111 10:11:46.725" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221111 10:11:43.143" endtime="20221111 10:11:46.725"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221111 10:11:46.727" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221111 10:11:46.726" endtime="20221111 10:11:46.727"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221111 10:11:46.727" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221111 10:11:46.727" endtime="20221111 10:11:46.727"/>
</kw>
<status status="PASS" starttime="20221111 10:11:43.143" endtime="20221111 10:11:46.728"/>
</kw>
<msg timestamp="20221111 10:11:46.728" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221111 10:11:43.143" endtime="20221111 10:11:46.728"/>
</kw>
<msg timestamp="20221111 10:11:46.729" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221111 10:11:43.142" endtime="20221111 10:11:46.729"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20221111 10:11:46.729" endtime="20221111 10:11:46.729"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221111 10:11:46.733" level="INFO">Running command 'ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20221111 10:11:53.087" level="INFO">${rc} = 0</msg>
<msg timestamp="20221111 10:11:53.087" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221111 10:11:46.731" endtime="20221111 10:11:53.087"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221111 10:11:53.088" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221111 10:11:53.087" endtime="20221111 10:11:53.088"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221111 10:11:53.089" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221111 10:11:53.088" endtime="20221111 10:11:53.089"/>
</kw>
<status status="PASS" starttime="20221111 10:11:46.730" endtime="20221111 10:11:53.089"/>
</kw>
<msg timestamp="20221111 10:11:53.089" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221111 10:11:46.730" endtime="20221111 10:11:53.090"/>
</kw>
<msg timestamp="20221111 10:11:53.090" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221111 10:11:46.729" endtime="20221111 10:11:53.090"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20221111 10:11:53.090" endtime="20221111 10:11:53.091"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221111 10:11:39.670" endtime="20221111 10:11:53.091"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20221111 10:11:39.626" endtime="20221111 10:11:53.092"/>
</suite>
<suite id="s1-s4" name="readdata-first-half" source="/opt/hadoop/smoketest/topology/readdata.robot">
<test id="s1-s4-t1" name="Read data from previously created key" line="27">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20221111 10:12:02.658" level="INFO">${random} = 24642</msg>
<status status="PASS" starttime="20221111 10:12:02.658" endtime="20221111 10:12:02.658"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221111 10:12:02.663" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-24642 2&gt;&amp;1'.</msg>
<msg timestamp="20221111 10:12:07.944" level="INFO">${rc} = 0</msg>
<msg timestamp="20221111 10:12:07.944" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221111 10:12:02.660" endtime="20221111 10:12:07.944"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221111 10:12:07.945" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221111 10:12:07.944" endtime="20221111 10:12:07.945"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221111 10:12:07.946" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221111 10:12:07.946" endtime="20221111 10:12:07.946"/>
</kw>
<status status="PASS" starttime="20221111 10:12:02.659" endtime="20221111 10:12:07.946"/>
</kw>
<msg timestamp="20221111 10:12:07.946" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221111 10:12:02.659" endtime="20221111 10:12:07.948"/>
</kw>
<msg timestamp="20221111 10:12:07.948" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221111 10:12:02.658" endtime="20221111 10:12:07.948"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20221111 10:12:07.948" endtime="20221111 10:12:07.948"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221111 10:12:02.657" endtime="20221111 10:12:07.949"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20221111 10:12:02.598" endtime="20221111 10:12:07.950"/>
</suite>
<suite id="s1-s5" name="readdata-second-half" source="/opt/hadoop/smoketest/topology/readdata.robot">
<test id="s1-s5-t1" name="Read data from previously created key" line="27">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20221111 10:12:48.765" level="INFO">${random} = 04109</msg>
<status status="PASS" starttime="20221111 10:12:48.764" endtime="20221111 10:12:48.765"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221111 10:12:48.775" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-04109 2&gt;&amp;1'.</msg>
<msg timestamp="20221111 10:13:42.979" level="INFO">${rc} = 0</msg>
<msg timestamp="20221111 10:13:42.979" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221111 10:12:48.766" endtime="20221111 10:13:42.979"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221111 10:13:42.980" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221111 10:13:42.980" endtime="20221111 10:13:42.980"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221111 10:13:42.981" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221111 10:13:42.981" endtime="20221111 10:13:42.981"/>
</kw>
<status status="PASS" starttime="20221111 10:12:48.766" endtime="20221111 10:13:42.981"/>
</kw>
<msg timestamp="20221111 10:13:42.981" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221111 10:12:48.765" endtime="20221111 10:13:42.983"/>
</kw>
<msg timestamp="20221111 10:13:42.983" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221111 10:12:48.765" endtime="20221111 10:13:42.983"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20221111 10:13:42.983" endtime="20221111 10:13:42.983"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221111 10:12:48.763" endtime="20221111 10:13:42.984"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20221111 10:12:48.719" endtime="20221111 10:13:42.985"/>
</suite>
<suite id="s1-s6" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s6-t1" name="Check webui static resources" line="29">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221111 10:08:58.967" endtime="20221111 10:08:58.967"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -s -I http://${SCM}:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221111 10:08:58.974" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20221111 10:08:59.161" level="INFO">${rc} = 0</msg>
<msg timestamp="20221111 10:08:59.161" level="INFO">${output} = HTTP/1.1 200 OK
Date: Fri, 11 Nov 2022 10:08:59 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Fri, 11 Nov 2022 09:44:08 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20221111 10:08:58.969" endtime="20221111 10:08:59.161"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221111 10:08:59.162" level="INFO">HTTP/1.1 200 OK
Date: Fri, 11 Nov 2022 10:08:59 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Fri, 11 Nov 2022 09:44:08 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20221111 10:08:59.161" endtime="20221111 10:08:59.162"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221111 10:08:59.163" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221111 10:08:59.163" endtime="20221111 10:08:59.163"/>
</kw>
<status status="PASS" starttime="20221111 10:08:58.968" endtime="20221111 10:08:59.165"/>
</kw>
<msg timestamp="20221111 10:08:59.165" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221111 10:08:58.968" endtime="20221111 10:08:59.167"/>
</kw>
<msg timestamp="20221111 10:08:59.168" level="INFO">${result} = HTTP/1.1 200 OK
Date: Fri, 11 Nov 2022 10:08:59 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Fri, 11 Nov 2022 09:44:08 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20221111 10:08:58.968" endtime="20221111 10:08:59.168"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221111 10:08:59.168" endtime="20221111 10:08:59.170"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221111 10:08:58.966" endtime="20221111 10:08:59.170"/>
</test>
<test id="s1-s6-t2" name="Basic Freon smoketest" line="34">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221111 10:08:59.176" endtime="20221111 10:08:59.177"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>10</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20221111 10:08:59.177" level="INFO">${random} = qF8U0IDDPS</msg>
<status status="PASS" starttime="20221111 10:08:59.177" endtime="20221111 10:08:59.177"/>
</kw>
<kw name="Freon OCKG" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221111 10:08:59.187" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p qF8U0IDDPS  2&gt;&amp;1'.</msg>
<msg timestamp="20221111 10:09:11.999" level="INFO">${rc} = 0</msg>
<msg timestamp="20221111 10:09:11.999" level="INFO">${output} = 2022-11-11 10:09:02,470 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-11 10:09:02,569 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221111 10:08:59.185" endtime="20221111 10:09:11.999"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221111 10:09:12.001" level="INFO">2022-11-11 10:09:02,470 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-11 10:09:02,569 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-11-11 10:09:02,569 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-11-11 10:09:02,780 [main] INFO freon.BaseFreonGenerator: Executing test with prefix qF8U0IDDPS and number-of-tests 1
2022-11-11 10:09:02,916 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-11 10:09:03,925 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-11 10:09:04,926 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-11 10:09:05,926 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-11 10:09:06,926 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-11 10:09:07,269 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2022-11-11 10:09:07,474 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false 
2022-11-11 10:09:07,928 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-11 10:09:08,539 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-11-11 10:09:08,819 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-11-11 10:09:08,928 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-11 10:09:09,928 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-11 10:09:10,929 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-11-11 10:09:11,629 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=3308.851465, max=3308.851465, mean=3308.851465, stddev=0.0, median=3308.851465, p75=3308.851465, p95=3308.851465, p98=3308.851465, p99=3308.851465, p999=3308.851465, mean_rate=0.2438950759510205, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-11-11 10:09:11,631 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 9
2022-11-11 10:09:11,632 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-11-11 10:09:11,632 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20221111 10:09:12.000" endtime="20221111 10:09:12.001"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221111 10:09:12.002" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221111 10:09:12.001" endtime="20221111 10:09:12.002"/>
</kw>
<status status="PASS" starttime="20221111 10:08:59.184" endtime="20221111 10:09:12.002"/>
</kw>
<msg timestamp="20221111 10:09:12.002" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221111 10:08:59.184" endtime="20221111 10:09:12.002"/>
</kw>
<msg timestamp="20221111 10:09:12.003" level="INFO">${result} = 2022-11-11 10:09:02,470 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-11 10:09:02,569 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221111 10:08:59.182" endtime="20221111 10:09:12.003"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221111 10:09:12.003" endtime="20221111 10:09:12.003"/>
</kw>
<status status="PASS" starttime="20221111 10:08:59.177" endtime="20221111 10:09:12.003"/>
</kw>
<kw name="Freon OCKV" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221111 10:09:12.008" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p qF8U0IDDPS  2&gt;&amp;1'.</msg>
<msg timestamp="20221111 10:09:19.379" level="INFO">${rc} = 0</msg>
<msg timestamp="20221111 10:09:19.379" level="INFO">${output} = 2022-11-11 10:09:14,236 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-11 10:09:14,336 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221111 10:09:12.006" endtime="20221111 10:09:19.379"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221111 10:09:19.381" level="INFO">2022-11-11 10:09:14,236 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-11 10:09:14,336 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-11-11 10:09:14,336 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-11-11 10:09:14,509 [main] INFO freon.BaseFreonGenerator: Executing test with prefix qF8U0IDDPS and number-of-tests 1
2022-11-11 10:09:14,576 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-11 10:09:15,582 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-11 10:09:16,582 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-11 10:09:16,624 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-11-11 10:09:17,583 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-11 10:09:18,583 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-11-11 10:09:19,016 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=123.148001, max=123.148001, mean=123.148001, stddev=0.0, median=123.148001, p75=123.148001, p95=123.148001, p98=123.148001, p99=123.148001, p999=123.148001, mean_rate=0.9190385666621578, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-11-11 10:09:19,017 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 4
2022-11-11 10:09:19,018 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-11-11 10:09:19,018 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20221111 10:09:19.380" endtime="20221111 10:09:19.381"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221111 10:09:19.381" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221111 10:09:19.381" endtime="20221111 10:09:19.381"/>
</kw>
<status status="PASS" starttime="20221111 10:09:12.006" endtime="20221111 10:09:19.382"/>
</kw>
<msg timestamp="20221111 10:09:19.382" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221111 10:09:12.005" endtime="20221111 10:09:19.382"/>
</kw>
<msg timestamp="20221111 10:09:19.382" level="INFO">${result} = 2022-11-11 10:09:14,236 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-11 10:09:14,336 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221111 10:09:12.005" endtime="20221111 10:09:19.383"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221111 10:09:19.383" endtime="20221111 10:09:19.383"/>
</kw>
<status status="PASS" starttime="20221111 10:09:12.004" endtime="20221111 10:09:19.383"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221111 10:08:59.174" endtime="20221111 10:09:19.383"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20221111 10:08:58.901" endtime="20221111 10:09:19.385"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="218780"/>
</suite>
<statistics>
<total>
<stat pass="32" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="32" fail="0" skip="0" id="s1" name="ozone-topology">ozone-topology</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1" name="Cli">ozone-topology.Cli</stat>
<stat pass="23" fail="0" skip="0" id="s1-s2" name="Recon">ozone-topology.Recon</stat>
<stat pass="7" fail="0" skip="0" id="s1-s2-s1" name="Recon-Api">ozone-topology.Recon.Recon-Api</stat>
<stat pass="16" fail="0" skip="0" id="s1-s2-s2" name="Recon-Nssummary">ozone-topology.Recon.Recon-Nssummary</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3" name="Loaddata">ozone-topology.Loaddata</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="readdata-first-half">ozone-topology.readdata-first-half</stat>
<stat pass="1" fail="0" skip="0" id="s1-s5" name="readdata-second-half">ozone-topology.readdata-second-half</stat>
<stat pass="2" fail="0" skip="0" id="s1-s6" name="Basic">ozone-topology.Basic</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
