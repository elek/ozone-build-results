<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.0.1 (Python 3.8.10 on linux)" generated="20221111 10:23:28.025" rpa="false" schemaversion="3">
<suite id="s1" name="restart">
<suite id="s1-s1" name="Validate" source="/opt/hadoop/smoketest/freon/validate.robot">
<test id="s1-s1-t1" name="Ozone Client Key Validator" line="25">
<kw name="Freon OCKV" library="freon">
<arg>prefix=ockg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221111 10:20:31.015" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p ockgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20221111 10:20:36.785" level="INFO">${rc} = 0</msg>
<msg timestamp="20221111 10:20:36.785" level="INFO">${output} = 2022-11-11 10:20:32,850 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-11 10:20:32,974 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221111 10:20:31.012" endtime="20221111 10:20:36.785"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221111 10:20:36.786" level="INFO">2022-11-11 10:20:32,850 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-11 10:20:32,974 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-11-11 10:20:32,974 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-11-11 10:20:33,144 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpre and number-of-tests 1
2022-11-11 10:20:33,237 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-11 10:20:34,247 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-11 10:20:34,540 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-11-11 10:20:35,247 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-11 10:20:36,248 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-11-11 10:20:36,427 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=63.985499, max=63.985499, mean=63.985499, stddev=0.0, median=63.985499, p75=63.985499, p95=63.985499, p98=63.985499, p99=63.985499, p999=63.985499, mean_rate=0.968817750091326, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-11-11 10:20:36,428 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2022-11-11 10:20:36,428 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-11-11 10:20:36,428 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20221111 10:20:36.785" endtime="20221111 10:20:36.786"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221111 10:20:36.786" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221111 10:20:36.786" endtime="20221111 10:20:36.786"/>
</kw>
<status status="PASS" starttime="20221111 10:20:31.011" endtime="20221111 10:20:36.787"/>
</kw>
<msg timestamp="20221111 10:20:36.787" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221111 10:20:31.011" endtime="20221111 10:20:36.788"/>
</kw>
<msg timestamp="20221111 10:20:36.788" level="INFO">${result} = 2022-11-11 10:20:32,850 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-11 10:20:32,974 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221111 10:20:31.011" endtime="20221111 10:20:36.788"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221111 10:20:36.788" endtime="20221111 10:20:36.789"/>
</kw>
<status status="PASS" starttime="20221111 10:20:31.009" endtime="20221111 10:20:36.789"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221111 10:20:31.008" endtime="20221111 10:20:36.789"/>
</test>
<doc>Test freon data validation commands</doc>
<status status="PASS" starttime="20221111 10:20:30.966" endtime="20221111 10:20:36.791"/>
</suite>
<suite id="s1-s2" name="Generate-Chunk" source="/opt/hadoop/smoketest/freon/generate-chunk.robot">
<test id="s1-s2-t1" name="DN Chunk Generator" line="25">
<kw name="Freon DCG" library="freon">
<arg>prefix=dcg${PREFIX}</arg>
<arg>n=100</arg>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20221111 10:20:41.337" endtime="20221111 10:20:41.338"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon dcg -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221111 10:20:41.342" level="INFO">Running command 'ozone freon dcg -t 1 -n100 -p dcgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20221111 10:20:48.149" level="INFO">${rc} = 0</msg>
<msg timestamp="20221111 10:20:48.149" level="INFO">${output} = 2022-11-11 10:20:42,819 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-11 10:20:42,952 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221111 10:20:41.339" endtime="20221111 10:20:48.149"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221111 10:20:48.150" level="INFO">2022-11-11 10:20:42,819 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-11 10:20:42,952 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-11-11 10:20:42,952 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-11-11 10:20:43,656 [main] INFO freon.BaseFreonGenerator: Executing test with prefix dcgpre and number-of-tests 100
2022-11-11 10:20:43,695 [Thread-4] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-11-11 10:20:44,261 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-11-11 10:20:44,514 [pool-3-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-11-11 10:20:44,695 [Thread-4] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-11-11 10:20:45,696 [Thread-4] INFO freon.ProgressBar: Progress: 20.00 % (20 out of 100)
2022-11-11 10:20:46,696 [Thread-4] INFO freon.ProgressBar: Progress: 63.00 % (63 out of 100)
2022-11-11 10:20:47,697 [Thread-4] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2022-11-11 10:20:47,800 [shutdown-hook-0] INFO metrics: type=TIMER, name=chunk-write, count=100, min=9.9545, max=687.953253, mean=29.1351507336708, stddev=66.09216314177748, median=21.287005, p75=26.891806, p95=35.434908, p98=41.5724, p99=41.5724, p999=687.953253, mean_rate=29.51917440673835, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-11-11 10:20:47,801 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 4
2022-11-11 10:20:47,802 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-11-11 10:20:47,802 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20221111 10:20:48.149" endtime="20221111 10:20:48.150"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221111 10:20:48.151" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221111 10:20:48.150" endtime="20221111 10:20:48.151"/>
</kw>
<status status="PASS" starttime="20221111 10:20:41.339" endtime="20221111 10:20:48.151"/>
</kw>
<msg timestamp="20221111 10:20:48.151" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221111 10:20:41.338" endtime="20221111 10:20:48.152"/>
</kw>
<msg timestamp="20221111 10:20:48.152" level="INFO">${result} = 2022-11-11 10:20:42,819 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-11 10:20:42,952 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221111 10:20:41.338" endtime="20221111 10:20:48.153"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221111 10:20:48.153" endtime="20221111 10:20:48.153"/>
</kw>
<status status="PASS" starttime="20221111 10:20:41.336" endtime="20221111 10:20:48.153"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221111 10:20:41.335" endtime="20221111 10:20:48.153"/>
</test>
<doc>Test freon chunk generation commands</doc>
<status status="PASS" starttime="20221111 10:20:41.292" endtime="20221111 10:20:48.155"/>
</suite>
<suite id="s1-s3" name="Validate-Chunk" source="/opt/hadoop/smoketest/freon/validate-chunk.robot">
<test id="s1-s3-t1" name="DN Chunk Validator" line="25">
<kw name="Freon DCV" library="freon">
<arg>prefix=dcg${PREFIX}</arg>
<arg>n=100</arg>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20221111 10:20:52.617" endtime="20221111 10:20:52.617"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon dcv -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221111 10:20:52.622" level="INFO">Running command 'ozone freon dcv -t 1 -n100 -p dcgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20221111 10:20:58.134" level="INFO">${rc} = 0</msg>
<msg timestamp="20221111 10:20:58.135" level="INFO">${output} = 2022-11-11 10:20:54,268 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-11 10:20:54,437 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221111 10:20:52.618" endtime="20221111 10:20:58.135"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221111 10:20:58.136" level="INFO">2022-11-11 10:20:54,268 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-11 10:20:54,437 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-11-11 10:20:54,437 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-11-11 10:20:54,629 [main] INFO freon.BaseFreonGenerator: Executing test with prefix dcgpre and number-of-tests 100
2022-11-11 10:20:54,730 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-11-11 10:20:55,195 [main] INFO freon.DatanodeChunkValidator: Using pipeline PipelineID=a1a6b813-9cdd-4139-a28f-c4fa0c5f5f19
2022-11-11 10:20:55,728 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-11-11 10:20:55,737 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-11-11 10:20:55,958 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-11-11 10:20:56,740 [Thread-3] INFO freon.ProgressBar: Progress: 37.00 % (37 out of 100)
2022-11-11 10:20:57,740 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2022-11-11 10:20:57,776 [shutdown-hook-0] INFO metrics: type=TIMER, name=chunk-validate, count=100, min=1.7452, max=23.245007, mean=3.734201129999999, stddev=3.080127547478999, median=2.460901, p75=4.207601, p95=9.108703, p98=12.045403, p99=14.244304, p999=23.245007, mean_rate=79.22784064799195, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-11-11 10:20:57,776 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2022-11-11 10:20:57,776 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-11-11 10:20:57,776 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20221111 10:20:58.135" endtime="20221111 10:20:58.136"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221111 10:20:58.136" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221111 10:20:58.136" endtime="20221111 10:20:58.137"/>
</kw>
<status status="PASS" starttime="20221111 10:20:52.618" endtime="20221111 10:20:58.137"/>
</kw>
<msg timestamp="20221111 10:20:58.137" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221111 10:20:52.618" endtime="20221111 10:20:58.138"/>
</kw>
<msg timestamp="20221111 10:20:58.139" level="INFO">${result} = 2022-11-11 10:20:54,268 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-11 10:20:54,437 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221111 10:20:52.617" endtime="20221111 10:20:58.139"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221111 10:20:58.139" endtime="20221111 10:20:58.139"/>
</kw>
<status status="PASS" starttime="20221111 10:20:52.615" endtime="20221111 10:20:58.139"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221111 10:20:52.615" endtime="20221111 10:20:58.140"/>
</test>
<doc>Test freon chunk validation commands</doc>
<status status="PASS" starttime="20221111 10:20:52.572" endtime="20221111 10:20:58.141"/>
</suite>
<suite id="s1-s4" name="Validate" source="/opt/hadoop/smoketest/freon/validate.robot">
<test id="s1-s4-t1" name="Ozone Client Key Validator" line="25">
<kw name="Freon OCKV" library="freon">
<arg>prefix=ockg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221111 10:22:07.065" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p ockgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20221111 10:22:12.849" level="INFO">${rc} = 0</msg>
<msg timestamp="20221111 10:22:12.849" level="INFO">${output} = 2022-11-11 10:22:08,661 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-11 10:22:08,840 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221111 10:22:07.062" endtime="20221111 10:22:12.849"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221111 10:22:12.850" level="INFO">2022-11-11 10:22:08,661 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-11 10:22:08,840 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-11-11 10:22:08,840 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-11-11 10:22:09,029 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpre and number-of-tests 1
2022-11-11 10:22:09,095 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-11 10:22:10,102 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-11 10:22:10,677 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-11-11 10:22:11,103 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-11 10:22:12,103 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-11-11 10:22:12,505 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=49.033401, max=49.033401, mean=49.033401, stddev=0.0, median=49.033401, p75=49.033401, p95=49.033401, p98=49.033401, p99=49.033401, p999=49.033401, mean_rate=0.9730813470939595, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-11-11 10:22:12,506 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2022-11-11 10:22:12,506 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-11-11 10:22:12,506 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20221111 10:22:12.850" endtime="20221111 10:22:12.851"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221111 10:22:12.851" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221111 10:22:12.851" endtime="20221111 10:22:12.851"/>
</kw>
<status status="PASS" starttime="20221111 10:22:07.061" endtime="20221111 10:22:12.851"/>
</kw>
<msg timestamp="20221111 10:22:12.852" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221111 10:22:07.061" endtime="20221111 10:22:12.853"/>
</kw>
<msg timestamp="20221111 10:22:12.853" level="INFO">${result} = 2022-11-11 10:22:08,661 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-11 10:22:08,840 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221111 10:22:07.060" endtime="20221111 10:22:12.853"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221111 10:22:12.853" endtime="20221111 10:22:12.854"/>
</kw>
<status status="PASS" starttime="20221111 10:22:07.059" endtime="20221111 10:22:12.854"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221111 10:22:07.058" endtime="20221111 10:22:12.854"/>
</test>
<doc>Test freon data validation commands</doc>
<status status="PASS" starttime="20221111 10:22:07.014" endtime="20221111 10:22:12.855"/>
</suite>
<suite id="s1-s5" name="Validate-Chunk" source="/opt/hadoop/smoketest/freon/validate-chunk.robot">
<test id="s1-s5-t1" name="DN Chunk Validator" line="25">
<kw name="Freon DCV" library="freon">
<arg>prefix=dcg${PREFIX}</arg>
<arg>n=100</arg>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20221111 10:22:17.547" endtime="20221111 10:22:17.547"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon dcv -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221111 10:22:17.552" level="INFO">Running command 'ozone freon dcv -t 1 -n100 -p dcgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20221111 10:22:22.909" level="INFO">${rc} = 0</msg>
<msg timestamp="20221111 10:22:22.909" level="INFO">${output} = 2022-11-11 10:22:19,101 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-11 10:22:19,249 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221111 10:22:17.549" endtime="20221111 10:22:22.909"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221111 10:22:22.910" level="INFO">2022-11-11 10:22:19,101 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-11 10:22:19,249 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-11-11 10:22:19,250 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-11-11 10:22:19,404 [main] INFO freon.BaseFreonGenerator: Executing test with prefix dcgpre and number-of-tests 100
2022-11-11 10:22:19,464 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-11-11 10:22:19,906 [main] INFO freon.DatanodeChunkValidator: Using pipeline PipelineID=a1a6b813-9cdd-4139-a28f-c4fa0c5f5f19
2022-11-11 10:22:20,374 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-11-11 10:22:20,472 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-11-11 10:22:20,632 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-11-11 10:22:21,473 [Thread-3] INFO freon.ProgressBar: Progress: 18.00 % (18 out of 100)
2022-11-11 10:22:22,474 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2022-11-11 10:22:22,566 [shutdown-hook-0] INFO metrics: type=TIMER, name=chunk-validate, count=100, min=1.9536, max=13.3241, mean=4.61991509, stddev=2.3916778894902175, median=3.976, p75=5.574701, p95=9.6177, p98=11.6376, p99=12.5455, p999=13.3241, mean_rate=81.54880597689858, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-11-11 10:22:22,566 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2022-11-11 10:22:22,566 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-11-11 10:22:22,567 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20221111 10:22:22.909" endtime="20221111 10:22:22.910"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221111 10:22:22.910" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221111 10:22:22.910" endtime="20221111 10:22:22.911"/>
</kw>
<status status="PASS" starttime="20221111 10:22:17.548" endtime="20221111 10:22:22.911"/>
</kw>
<msg timestamp="20221111 10:22:22.911" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221111 10:22:17.548" endtime="20221111 10:22:22.912"/>
</kw>
<msg timestamp="20221111 10:22:22.912" level="INFO">${result} = 2022-11-11 10:22:19,101 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-11 10:22:19,249 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221111 10:22:17.548" endtime="20221111 10:22:22.912"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221111 10:22:22.913" endtime="20221111 10:22:22.913"/>
</kw>
<status status="PASS" starttime="20221111 10:22:17.546" endtime="20221111 10:22:22.913"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221111 10:22:17.545" endtime="20221111 10:22:22.913"/>
</test>
<doc>Test freon chunk validation commands</doc>
<status status="PASS" starttime="20221111 10:22:17.502" endtime="20221111 10:22:22.915"/>
</suite>
<suite id="s1-s6" name="Generate" source="/opt/hadoop/smoketest/freon/generate.robot">
<test id="s1-s6-t1" name="Ozone Client Key Generator" line="25">
<kw name="Freon OCKG" library="freon">
<arg>prefix=ockg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221111 10:22:27.370" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p ockgpost  2&gt;&amp;1'.</msg>
<msg timestamp="20221111 10:22:33.192" level="INFO">${rc} = 0</msg>
<msg timestamp="20221111 10:22:33.193" level="INFO">${output} = 2022-11-11 10:22:28,797 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-11 10:22:28,943 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221111 10:22:27.366" endtime="20221111 10:22:33.193"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221111 10:22:33.194" level="INFO">2022-11-11 10:22:28,797 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-11 10:22:28,943 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-11-11 10:22:28,944 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-11-11 10:22:29,105 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpost and number-of-tests 1
2022-11-11 10:22:29,170 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-11 10:22:30,175 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-11 10:22:30,895 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-11-11 10:22:31,147 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-11-11 10:22:31,176 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-11 10:22:32,176 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-11-11 10:22:32,840 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=2285.025426, max=2285.025426, mean=2285.025426, stddev=0.0, median=2285.025426, p75=2285.025426, p95=2285.025426, p98=2285.025426, p99=2285.025426, p999=2285.025426, mean_rate=0.32929424340247715, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-11-11 10:22:32,841 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 4
2022-11-11 10:22:32,841 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-11-11 10:22:32,841 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20221111 10:22:33.193" endtime="20221111 10:22:33.194"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221111 10:22:33.194" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221111 10:22:33.194" endtime="20221111 10:22:33.194"/>
</kw>
<status status="PASS" starttime="20221111 10:22:27.366" endtime="20221111 10:22:33.195"/>
</kw>
<msg timestamp="20221111 10:22:33.195" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221111 10:22:27.366" endtime="20221111 10:22:33.196"/>
</kw>
<msg timestamp="20221111 10:22:33.196" level="INFO">${result} = 2022-11-11 10:22:28,797 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-11 10:22:28,943 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221111 10:22:27.365" endtime="20221111 10:22:33.196"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221111 10:22:33.196" endtime="20221111 10:22:33.197"/>
</kw>
<status status="PASS" starttime="20221111 10:22:27.364" endtime="20221111 10:22:33.197"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221111 10:22:27.363" endtime="20221111 10:22:33.197"/>
</test>
<test id="s1-s6-t2" name="OM Key Generator" line="28">
<kw name="Freon OMKG" library="freon">
<arg>prefix=omkg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon omkg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221111 10:22:33.203" level="INFO">Running command 'ozone freon omkg  -t 1 -n1 -p omkgpost  2&gt;&amp;1'.</msg>
<msg timestamp="20221111 10:22:37.067" level="INFO">${rc} = 0</msg>
<msg timestamp="20221111 10:22:37.067" level="INFO">${output} = 2022-11-11 10:22:34,719 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-11 10:22:34,923 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221111 10:22:33.201" endtime="20221111 10:22:37.067"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221111 10:22:37.069" level="INFO">2022-11-11 10:22:34,719 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-11 10:22:34,923 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-11-11 10:22:34,923 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-11-11 10:22:35,149 [main] INFO freon.BaseFreonGenerator: Executing test with prefix omkgpost and number-of-tests 1
2022-11-11 10:22:35,254 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-11 10:22:36,261 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-11-11 10:22:37,012 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=78.593197, max=78.593197, mean=78.593197, stddev=0.0, median=78.593197, p75=78.593197, p95=78.593197, p98=78.593197, p99=78.593197, p999=78.593197, mean_rate=0.9851252383952588, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-11-11 10:22:37,013 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2022-11-11 10:22:37,013 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-11-11 10:22:37,014 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20221111 10:22:37.068" endtime="20221111 10:22:37.069"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221111 10:22:37.069" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221111 10:22:37.069" endtime="20221111 10:22:37.069"/>
</kw>
<status status="PASS" starttime="20221111 10:22:33.201" endtime="20221111 10:22:37.070"/>
</kw>
<msg timestamp="20221111 10:22:37.070" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221111 10:22:33.201" endtime="20221111 10:22:37.070"/>
</kw>
<msg timestamp="20221111 10:22:37.070" level="INFO">${result} = 2022-11-11 10:22:34,719 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-11 10:22:34,923 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221111 10:22:33.200" endtime="20221111 10:22:37.070"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221111 10:22:37.071" endtime="20221111 10:22:37.071"/>
</kw>
<status status="PASS" starttime="20221111 10:22:33.199" endtime="20221111 10:22:37.071"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221111 10:22:33.198" endtime="20221111 10:22:37.071"/>
</test>
<test id="s1-s6-t3" name="OM Bucket Generator" line="31">
<kw name="Freon OMBG" library="freon">
<arg>prefix=ombg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ombg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221111 10:22:37.078" level="INFO">Running command 'ozone freon ombg  -t 1 -n1 -p ombgpost  2&gt;&amp;1'.</msg>
<msg timestamp="20221111 10:22:40.623" level="INFO">${rc} = 0</msg>
<msg timestamp="20221111 10:22:40.623" level="INFO">${output} = 2022-11-11 10:22:38,551 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-11 10:22:38,689 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221111 10:22:37.076" endtime="20221111 10:22:40.623"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221111 10:22:40.624" level="INFO">2022-11-11 10:22:38,551 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-11 10:22:38,689 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-11-11 10:22:38,689 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-11-11 10:22:38,883 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ombgpost and number-of-tests 1
2022-11-11 10:22:38,963 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-11 10:22:39,964 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-11-11 10:22:40,586 [shutdown-hook-0] INFO metrics: type=TIMER, name=bucket-create, count=1, min=16.7807, max=16.7807, mean=16.7807, stddev=0.0, median=16.7807, p75=16.7807, p95=16.7807, p98=16.7807, p99=16.7807, p999=16.7807, mean_rate=0.9869659217613421, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-11-11 10:22:40,587 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2022-11-11 10:22:40,587 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-11-11 10:22:40,587 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20221111 10:22:40.624" endtime="20221111 10:22:40.625"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221111 10:22:40.625" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221111 10:22:40.625" endtime="20221111 10:22:40.625"/>
</kw>
<status status="PASS" starttime="20221111 10:22:37.076" endtime="20221111 10:22:40.625"/>
</kw>
<msg timestamp="20221111 10:22:40.626" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221111 10:22:37.075" endtime="20221111 10:22:40.626"/>
</kw>
<msg timestamp="20221111 10:22:40.626" level="INFO">${result} = 2022-11-11 10:22:38,551 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-11 10:22:38,689 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221111 10:22:37.075" endtime="20221111 10:22:40.626"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221111 10:22:40.626" endtime="20221111 10:22:40.627"/>
</kw>
<status status="PASS" starttime="20221111 10:22:37.073" endtime="20221111 10:22:40.627"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221111 10:22:37.072" endtime="20221111 10:22:40.627"/>
</test>
<doc>Test freon data generation commands</doc>
<status status="PASS" starttime="20221111 10:22:27.320" endtime="20221111 10:22:40.629"/>
</suite>
<suite id="s1-s7" name="Validate" source="/opt/hadoop/smoketest/freon/validate.robot">
<test id="s1-s7-t1" name="Ozone Client Key Validator" line="25">
<kw name="Freon OCKV" library="freon">
<arg>prefix=ockg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221111 10:22:45.020" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p ockgpost  2&gt;&amp;1'.</msg>
<msg timestamp="20221111 10:22:50.498" level="INFO">${rc} = 0</msg>
<msg timestamp="20221111 10:22:50.499" level="INFO">${output} = 2022-11-11 10:22:46,537 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-11 10:22:46,646 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221111 10:22:45.017" endtime="20221111 10:22:50.499"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221111 10:22:50.500" level="INFO">2022-11-11 10:22:46,537 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-11 10:22:46,646 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-11-11 10:22:46,646 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-11-11 10:22:46,867 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpost and number-of-tests 1
2022-11-11 10:22:46,950 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-11 10:22:47,958 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-11 10:22:48,115 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-11-11 10:22:48,958 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-11 10:22:49,959 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-11-11 10:22:50,046 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=37.3065, max=37.3065, mean=37.3065, stddev=0.0, median=37.3065, p75=37.3065, p95=37.3065, p98=37.3065, p99=37.3065, p999=37.3065, mean_rate=0.9250644973006276, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-11-11 10:22:50,048 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2022-11-11 10:22:50,049 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-11-11 10:22:50,049 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20221111 10:22:50.499" endtime="20221111 10:22:50.500"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221111 10:22:50.500" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221111 10:22:50.500" endtime="20221111 10:22:50.500"/>
</kw>
<status status="PASS" starttime="20221111 10:22:45.017" endtime="20221111 10:22:50.501"/>
</kw>
<msg timestamp="20221111 10:22:50.501" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221111 10:22:45.017" endtime="20221111 10:22:50.502"/>
</kw>
<msg timestamp="20221111 10:22:50.502" level="INFO">${result} = 2022-11-11 10:22:46,537 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-11 10:22:46,646 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221111 10:22:45.016" endtime="20221111 10:22:50.502"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221111 10:22:50.502" endtime="20221111 10:22:50.503"/>
</kw>
<status status="PASS" starttime="20221111 10:22:45.015" endtime="20221111 10:22:50.503"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221111 10:22:45.014" endtime="20221111 10:22:50.503"/>
</test>
<doc>Test freon data validation commands</doc>
<status status="PASS" starttime="20221111 10:22:44.965" endtime="20221111 10:22:50.505"/>
</suite>
<suite id="s1-s8" name="Generate-Chunk" source="/opt/hadoop/smoketest/freon/generate-chunk.robot">
<test id="s1-s8-t1" name="DN Chunk Generator" line="25">
<kw name="Freon DCG" library="freon">
<arg>prefix=dcg${PREFIX}</arg>
<arg>n=100</arg>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20221111 10:22:55.128" endtime="20221111 10:22:55.129"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon dcg -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221111 10:22:55.134" level="INFO">Running command 'ozone freon dcg -t 1 -n100 -p dcgpost  2&gt;&amp;1'.</msg>
<msg timestamp="20221111 10:23:02.773" level="INFO">${rc} = 0</msg>
<msg timestamp="20221111 10:23:02.773" level="INFO">${output} = 2022-11-11 10:22:56,852 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-11 10:22:56,998 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221111 10:22:55.130" endtime="20221111 10:23:02.773"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221111 10:23:02.775" level="INFO">2022-11-11 10:22:56,852 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-11 10:22:56,998 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-11-11 10:22:56,998 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-11-11 10:22:57,729 [main] INFO freon.BaseFreonGenerator: Executing test with prefix dcgpost and number-of-tests 100
2022-11-11 10:22:57,761 [Thread-4] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-11-11 10:22:58,179 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-11-11 10:22:58,431 [pool-3-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-11-11 10:22:58,765 [Thread-4] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-11-11 10:22:59,766 [Thread-4] INFO freon.ProgressBar: Progress: 33.00 % (33 out of 100)
2022-11-11 10:23:00,767 [Thread-4] INFO freon.ProgressBar: Progress: 69.00 % (69 out of 100)
2022-11-11 10:23:01,767 [Thread-4] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2022-11-11 10:23:02,426 [shutdown-hook-0] INFO metrics: type=TIMER, name=chunk-write, count=100, min=13.0061, max=629.647979, mean=31.928347554387287, stddev=60.49214668591864, median=25.072199, p75=29.523199, p95=41.129199, p98=95.332297, p99=95.332297, p999=629.647979, mean_rate=24.402769873974812, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-11-11 10:23:02,427 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 5
2022-11-11 10:23:02,427 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-11-11 10:23:02,427 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20221111 10:23:02.774" endtime="20221111 10:23:02.775"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221111 10:23:02.775" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221111 10:23:02.775" endtime="20221111 10:23:02.776"/>
</kw>
<status status="PASS" starttime="20221111 10:22:55.130" endtime="20221111 10:23:02.776"/>
</kw>
<msg timestamp="20221111 10:23:02.776" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221111 10:22:55.129" endtime="20221111 10:23:02.777"/>
</kw>
<msg timestamp="20221111 10:23:02.778" level="INFO">${result} = 2022-11-11 10:22:56,852 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-11 10:22:56,998 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221111 10:22:55.129" endtime="20221111 10:23:02.778"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221111 10:23:02.778" endtime="20221111 10:23:02.778"/>
</kw>
<status status="PASS" starttime="20221111 10:22:55.127" endtime="20221111 10:23:02.779"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221111 10:22:55.126" endtime="20221111 10:23:02.779"/>
</test>
<doc>Test freon chunk generation commands</doc>
<status status="PASS" starttime="20221111 10:22:55.083" endtime="20221111 10:23:02.780"/>
</suite>
<suite id="s1-s9" name="Validate-Chunk" source="/opt/hadoop/smoketest/freon/validate-chunk.robot">
<test id="s1-s9-t1" name="DN Chunk Validator" line="25">
<kw name="Freon DCV" library="freon">
<arg>prefix=dcg${PREFIX}</arg>
<arg>n=100</arg>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20221111 10:23:07.423" endtime="20221111 10:23:07.423"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon dcv -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221111 10:23:07.428" level="INFO">Running command 'ozone freon dcv -t 1 -n100 -p dcgpost  2&gt;&amp;1'.</msg>
<msg timestamp="20221111 10:23:12.776" level="INFO">${rc} = 0</msg>
<msg timestamp="20221111 10:23:12.776" level="INFO">${output} = 2022-11-11 10:23:08,889 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-11 10:23:09,037 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221111 10:23:07.425" endtime="20221111 10:23:12.776"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221111 10:23:12.778" level="INFO">2022-11-11 10:23:08,889 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-11 10:23:09,037 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-11-11 10:23:09,037 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-11-11 10:23:09,251 [main] INFO freon.BaseFreonGenerator: Executing test with prefix dcgpost and number-of-tests 100
2022-11-11 10:23:09,331 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-11-11 10:23:09,748 [main] INFO freon.DatanodeChunkValidator: Using pipeline PipelineID=a1a6b813-9cdd-4139-a28f-c4fa0c5f5f19
2022-11-11 10:23:10,310 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-11-11 10:23:10,333 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-11-11 10:23:10,564 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-11-11 10:23:11,336 [Thread-3] INFO freon.ProgressBar: Progress: 40.00 % (40 out of 100)
2022-11-11 10:23:12,336 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2022-11-11 10:23:12,420 [shutdown-hook-0] INFO metrics: type=TIMER, name=chunk-validate, count=100, min=1.7484, max=9.8035, mean=3.7106779700000008, stddev=1.7970347722603222, median=3.1954, p75=4.5215, p95=7.439599, p98=8.7223, p99=9.2539, p999=9.8035, mean_rate=78.0595019185078, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-11-11 10:23:12,422 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2022-11-11 10:23:12,422 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-11-11 10:23:12,423 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20221111 10:23:12.777" endtime="20221111 10:23:12.778"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221111 10:23:12.778" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221111 10:23:12.778" endtime="20221111 10:23:12.778"/>
</kw>
<status status="PASS" starttime="20221111 10:23:07.424" endtime="20221111 10:23:12.779"/>
</kw>
<msg timestamp="20221111 10:23:12.779" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221111 10:23:07.424" endtime="20221111 10:23:12.780"/>
</kw>
<msg timestamp="20221111 10:23:12.780" level="INFO">${result} = 2022-11-11 10:23:08,889 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-11 10:23:09,037 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221111 10:23:07.423" endtime="20221111 10:23:12.780"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221111 10:23:12.780" endtime="20221111 10:23:12.781"/>
</kw>
<status status="PASS" starttime="20221111 10:23:07.422" endtime="20221111 10:23:12.781"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221111 10:23:07.421" endtime="20221111 10:23:12.781"/>
</test>
<doc>Test freon chunk validation commands</doc>
<status status="PASS" starttime="20221111 10:23:07.377" endtime="20221111 10:23:12.782"/>
</suite>
<suite id="s1-s10" name="Generate" source="/opt/hadoop/smoketest/freon/generate.robot">
<test id="s1-s10-t1" name="Ozone Client Key Generator" line="25">
<kw name="Freon OCKG" library="freon">
<arg>prefix=ockg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221111 10:20:09.160" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p ockgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20221111 10:20:18.425" level="INFO">${rc} = 0</msg>
<msg timestamp="20221111 10:20:18.425" level="INFO">${output} = 2022-11-11 10:20:11,125 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-11 10:20:11,322 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221111 10:20:09.154" endtime="20221111 10:20:18.425"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221111 10:20:18.426" level="INFO">2022-11-11 10:20:11,125 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-11 10:20:11,322 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-11-11 10:20:11,322 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-11-11 10:20:11,691 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpre and number-of-tests 1
2022-11-11 10:20:11,793 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-11 10:20:12,794 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-11 10:20:13,794 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-11 10:20:14,795 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-11 10:20:14,891 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2022-11-11 10:20:14,982 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false 
2022-11-11 10:20:15,742 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-11-11 10:20:15,795 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-11 10:20:16,035 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-11-11 10:20:16,796 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-11 10:20:17,796 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-11-11 10:20:18,073 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=2260.290644, max=2260.290644, mean=2260.290644, stddev=0.0, median=2260.290644, p75=2260.290644, p95=2260.290644, p98=2260.290644, p99=2260.290644, p999=2260.290644, mean_rate=0.3273287071829669, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-11-11 10:20:18,073 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 6
2022-11-11 10:20:18,074 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-11-11 10:20:18,074 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20221111 10:20:18.426" endtime="20221111 10:20:18.426"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221111 10:20:18.427" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221111 10:20:18.427" endtime="20221111 10:20:18.427"/>
</kw>
<status status="PASS" starttime="20221111 10:20:09.153" endtime="20221111 10:20:18.428"/>
</kw>
<msg timestamp="20221111 10:20:18.428" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221111 10:20:09.153" endtime="20221111 10:20:18.429"/>
</kw>
<msg timestamp="20221111 10:20:18.429" level="INFO">${result} = 2022-11-11 10:20:11,125 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-11 10:20:11,322 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221111 10:20:09.147" endtime="20221111 10:20:18.429"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221111 10:20:18.430" endtime="20221111 10:20:18.430"/>
</kw>
<status status="PASS" starttime="20221111 10:20:09.135" endtime="20221111 10:20:18.430"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221111 10:20:09.134" endtime="20221111 10:20:18.431"/>
</test>
<test id="s1-s10-t2" name="OM Key Generator" line="28">
<kw name="Freon OMKG" library="freon">
<arg>prefix=omkg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon omkg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221111 10:20:18.438" level="INFO">Running command 'ozone freon omkg  -t 1 -n1 -p omkgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20221111 10:20:22.533" level="INFO">${rc} = 0</msg>
<msg timestamp="20221111 10:20:22.533" level="INFO">${output} = 2022-11-11 10:20:20,212 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-11 10:20:20,410 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221111 10:20:18.435" endtime="20221111 10:20:22.533"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221111 10:20:22.535" level="INFO">2022-11-11 10:20:20,212 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-11 10:20:20,410 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-11-11 10:20:20,410 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-11-11 10:20:20,618 [main] INFO freon.BaseFreonGenerator: Executing test with prefix omkgpre and number-of-tests 1
2022-11-11 10:20:20,738 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-11 10:20:21,743 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-11-11 10:20:22,487 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=91.692671, max=91.692671, mean=91.692671, stddev=0.0, median=91.692671, p75=91.692671, p95=91.692671, p98=91.692671, p99=91.692671, p999=91.692671, mean_rate=0.9860492976253513, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-11-11 10:20:22,487 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2022-11-11 10:20:22,487 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-11-11 10:20:22,487 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20221111 10:20:22.534" endtime="20221111 10:20:22.535"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221111 10:20:22.535" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221111 10:20:22.535" endtime="20221111 10:20:22.535"/>
</kw>
<status status="PASS" starttime="20221111 10:20:18.435" endtime="20221111 10:20:22.536"/>
</kw>
<msg timestamp="20221111 10:20:22.536" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221111 10:20:18.434" endtime="20221111 10:20:22.536"/>
</kw>
<msg timestamp="20221111 10:20:22.537" level="INFO">${result} = 2022-11-11 10:20:20,212 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-11 10:20:20,410 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221111 10:20:18.434" endtime="20221111 10:20:22.537"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221111 10:20:22.537" endtime="20221111 10:20:22.537"/>
</kw>
<status status="PASS" starttime="20221111 10:20:18.432" endtime="20221111 10:20:22.537"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221111 10:20:18.431" endtime="20221111 10:20:22.538"/>
</test>
<test id="s1-s10-t3" name="OM Bucket Generator" line="31">
<kw name="Freon OMBG" library="freon">
<arg>prefix=ombg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ombg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221111 10:20:22.544" level="INFO">Running command 'ozone freon ombg  -t 1 -n1 -p ombgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20221111 10:20:26.495" level="INFO">${rc} = 0</msg>
<msg timestamp="20221111 10:20:26.495" level="INFO">${output} = 2022-11-11 10:20:24,468 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-11 10:20:24,616 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221111 10:20:22.542" endtime="20221111 10:20:26.495"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221111 10:20:26.496" level="INFO">2022-11-11 10:20:24,468 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-11 10:20:24,616 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-11-11 10:20:24,616 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-11-11 10:20:24,794 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ombgpre and number-of-tests 1
2022-11-11 10:20:24,859 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-11 10:20:25,865 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-11-11 10:20:26,448 [shutdown-hook-0] INFO metrics: type=TIMER, name=bucket-create, count=1, min=20.214499, max=20.214499, mean=20.214499, stddev=0.0, median=20.214499, p75=20.214499, p95=20.214499, p98=20.214499, p99=20.214499, p999=20.214499, mean_rate=0.9793370958863896, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-11-11 10:20:26,449 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2022-11-11 10:20:26,449 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-11-11 10:20:26,449 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20221111 10:20:26.495" endtime="20221111 10:20:26.496"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221111 10:20:26.497" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221111 10:20:26.496" endtime="20221111 10:20:26.497"/>
</kw>
<status status="PASS" starttime="20221111 10:20:22.542" endtime="20221111 10:20:26.497"/>
</kw>
<msg timestamp="20221111 10:20:26.497" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221111 10:20:22.541" endtime="20221111 10:20:26.498"/>
</kw>
<msg timestamp="20221111 10:20:26.498" level="INFO">${result} = 2022-11-11 10:20:24,468 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-11 10:20:24,616 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221111 10:20:22.540" endtime="20221111 10:20:26.498"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221111 10:20:26.498" endtime="20221111 10:20:26.499"/>
</kw>
<status status="PASS" starttime="20221111 10:20:22.539" endtime="20221111 10:20:26.499"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221111 10:20:22.538" endtime="20221111 10:20:26.499"/>
</test>
<doc>Test freon data generation commands</doc>
<status status="PASS" starttime="20221111 10:20:09.074" endtime="20221111 10:20:26.501"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="78889"/>
</suite>
<statistics>
<total>
<stat pass="14" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="14" fail="0" skip="0" id="s1" name="restart">restart</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Validate">restart.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Generate-Chunk">restart.Generate-Chunk</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3" name="Validate-Chunk">restart.Validate-Chunk</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="Validate">restart.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s5" name="Validate-Chunk">restart.Validate-Chunk</stat>
<stat pass="3" fail="0" skip="0" id="s1-s6" name="Generate">restart.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s7" name="Validate">restart.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s8" name="Generate-Chunk">restart.Generate-Chunk</stat>
<stat pass="1" fail="0" skip="0" id="s1-s9" name="Validate-Chunk">restart.Validate-Chunk</stat>
<stat pass="3" fail="0" skip="0" id="s1-s10" name="Generate">restart.Generate</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
