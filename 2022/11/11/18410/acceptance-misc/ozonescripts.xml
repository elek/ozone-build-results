<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.0.1 (Python 3.8.10 on linux)" generated="20221111 10:19:11.084" rpa="false" schemaversion="3">
<suite id="s1" name="ozonescripts">
<suite id="s1-s1" name="Pipeline" source="/opt/hadoop/smoketest/admincli/pipeline.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221111 10:17:24.859" endtime="20221111 10:17:24.859"/>
</kw>
<test id="s1-s1-t1" name="Create pipeline" line="28">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin pipeline create</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221111 10:17:24.865" level="INFO">Running command 'ozone admin pipeline create 2&gt;&amp;1'.</msg>
<msg timestamp="20221111 10:17:27.306" level="INFO">${rc} = 0</msg>
<msg timestamp="20221111 10:17:27.306" level="INFO">${output} = PipelineID=5c9a53fb-88d9-46ce-97cf-67e8bc9e5ad8 is created. Pipeline[ Id: 5c9a53fb-88d9-46ce-97cf-67e8bc9e5ad8, Nodes: 40d81517-0395-4fe7-b8c3-467d93fe2b98{ip: 172.20.0.3, host: ozonescripts_datanode_...</msg>
<status status="PASS" starttime="20221111 10:17:24.862" endtime="20221111 10:17:27.306"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221111 10:17:27.307" level="INFO">PipelineID=5c9a53fb-88d9-46ce-97cf-67e8bc9e5ad8 is created. Pipeline[ Id: 5c9a53fb-88d9-46ce-97cf-67e8bc9e5ad8, Nodes: 40d81517-0395-4fe7-b8c3-467d93fe2b98{ip: 172.20.0.3, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, ReplicationConfig: STANDALONE/ONE, State:OPEN, leaderId:, CreationTimestamp2022-11-11T10:17:27.169Z[UTC]]</msg>
<status status="PASS" starttime="20221111 10:17:27.306" endtime="20221111 10:17:27.307"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221111 10:17:27.308" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221111 10:17:27.307" endtime="20221111 10:17:27.308"/>
</kw>
<status status="PASS" starttime="20221111 10:17:24.861" endtime="20221111 10:17:27.308"/>
</kw>
<msg timestamp="20221111 10:17:27.308" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221111 10:17:24.861" endtime="20221111 10:17:27.309"/>
</kw>
<msg timestamp="20221111 10:17:27.310" level="INFO">${output} = PipelineID=5c9a53fb-88d9-46ce-97cf-67e8bc9e5ad8 is created. Pipeline[ Id: 5c9a53fb-88d9-46ce-97cf-67e8bc9e5ad8, Nodes: 40d81517-0395-4fe7-b8c3-467d93fe2b98{ip: 172.20.0.3, host: ozonescripts_datanode_...</msg>
<status status="PASS" starttime="20221111 10:17:24.861" endtime="20221111 10:17:27.310"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>is created.</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221111 10:17:27.310" endtime="20221111 10:17:27.310"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>STANDALONE/ONE</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221111 10:17:27.310" endtime="20221111 10:17:27.311"/>
</kw>
<kw name="Execute" library="os">
<var>${pipeline}</var>
<arg>echo "${output}" | grep 'is created' | cut -f1 -d' ' | cut -f2 -d'='</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221111 10:17:27.314" level="INFO">Running command 'echo "PipelineID=5c9a53fb-88d9-46ce-97cf-67e8bc9e5ad8 is created. Pipeline[ Id: 5c9a53fb-88d9-46ce-97cf-67e8bc9e5ad8, Nodes: 40d81517-0395-4fe7-b8c3-467d93fe2b98{ip: 172.20.0.3, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, ReplicationConfig: STANDALONE/ONE, State:OPEN, leaderId:, CreationTimestamp2022-11-11T10:17:27.169Z[UTC]]" | grep 'is created' | cut -f1 -d' ' | cut -f2 -d'=' 2&gt;&amp;1'.</msg>
<msg timestamp="20221111 10:17:27.318" level="INFO">${rc} = 0</msg>
<msg timestamp="20221111 10:17:27.318" level="INFO">${output} = 5c9a53fb-88d9-46ce-97cf-67e8bc9e5ad8</msg>
<status status="PASS" starttime="20221111 10:17:27.312" endtime="20221111 10:17:27.318"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221111 10:17:27.319" level="INFO">5c9a53fb-88d9-46ce-97cf-67e8bc9e5ad8</msg>
<status status="PASS" starttime="20221111 10:17:27.318" endtime="20221111 10:17:27.319"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221111 10:17:27.320" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221111 10:17:27.319" endtime="20221111 10:17:27.320"/>
</kw>
<status status="PASS" starttime="20221111 10:17:27.312" endtime="20221111 10:17:27.320"/>
</kw>
<msg timestamp="20221111 10:17:27.320" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221111 10:17:27.311" endtime="20221111 10:17:27.321"/>
</kw>
<msg timestamp="20221111 10:17:27.321" level="INFO">${pipeline} = 5c9a53fb-88d9-46ce-97cf-67e8bc9e5ad8</msg>
<status status="PASS" starttime="20221111 10:17:27.311" endtime="20221111 10:17:27.321"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PIPELINE}</arg>
<arg>${pipeline}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20221111 10:17:27.321" level="INFO">${PIPELINE} = 5c9a53fb-88d9-46ce-97cf-67e8bc9e5ad8</msg>
<status status="PASS" starttime="20221111 10:17:27.321" endtime="20221111 10:17:27.321"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221111 10:17:24.860" endtime="20221111 10:17:27.322"/>
</test>
<test id="s1-s1-t2" name="List pipelines" line="35">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin pipeline list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221111 10:17:27.327" level="INFO">Running command 'ozone admin pipeline list 2&gt;&amp;1'.</msg>
<msg timestamp="20221111 10:17:29.715" level="INFO">${rc} = 0</msg>
<msg timestamp="20221111 10:17:29.715" level="INFO">${output} = Pipeline[ Id: 5c9a53fb-88d9-46ce-97cf-67e8bc9e5ad8, Nodes: 40d81517-0395-4fe7-b8c3-467d93fe2b98{ip: 172.20.0.3, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858...</msg>
<status status="PASS" starttime="20221111 10:17:27.325" endtime="20221111 10:17:29.715"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221111 10:17:29.716" level="INFO">Pipeline[ Id: 5c9a53fb-88d9-46ce-97cf-67e8bc9e5ad8, Nodes: 40d81517-0395-4fe7-b8c3-467d93fe2b98{ip: 172.20.0.3, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, ReplicationConfig: STANDALONE/ONE, State:OPEN, leaderId:, CreationTimestamp2022-11-11T10:17:27.169Z[UTC]]
Pipeline[ Id: fcf80588-33d8-4ec2-8cdf-56c90898f43d, Nodes: 40d81517-0395-4fe7-b8c3-467d93fe2b98{ip: 172.20.0.3, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, ReplicationConfig: RATIS/ONE, State:OPEN, leaderId:40d81517-0395-4fe7-b8c3-467d93fe2b98, CreationTimestamp2022-11-11T10:16:50.471Z[UTC]]</msg>
<status status="PASS" starttime="20221111 10:17:29.715" endtime="20221111 10:17:29.716"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221111 10:17:29.717" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221111 10:17:29.716" endtime="20221111 10:17:29.717"/>
</kw>
<status status="PASS" starttime="20221111 10:17:27.324" endtime="20221111 10:17:29.717"/>
</kw>
<msg timestamp="20221111 10:17:29.717" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221111 10:17:27.324" endtime="20221111 10:17:29.717"/>
</kw>
<msg timestamp="20221111 10:17:29.718" level="INFO">${output} = Pipeline[ Id: 5c9a53fb-88d9-46ce-97cf-67e8bc9e5ad8, Nodes: 40d81517-0395-4fe7-b8c3-467d93fe2b98{ip: 172.20.0.3, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858...</msg>
<status status="PASS" starttime="20221111 10:17:27.323" endtime="20221111 10:17:29.718"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>STANDALONE/ONE</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221111 10:17:29.718" endtime="20221111 10:17:29.718"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221111 10:17:27.323" endtime="20221111 10:17:29.718"/>
</test>
<test id="s1-s1-t3" name="List pipelines with explicit host" line="39">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin pipeline list --scm ${SCM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221111 10:17:29.723" level="INFO">Running command 'ozone admin pipeline list --scm scm 2&gt;&amp;1'.</msg>
<msg timestamp="20221111 10:17:32.075" level="INFO">${rc} = 0</msg>
<msg timestamp="20221111 10:17:32.075" level="INFO">${output} = Pipeline[ Id: 5c9a53fb-88d9-46ce-97cf-67e8bc9e5ad8, Nodes: 40d81517-0395-4fe7-b8c3-467d93fe2b98{ip: 172.20.0.3, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858...</msg>
<status status="PASS" starttime="20221111 10:17:29.721" endtime="20221111 10:17:32.075"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221111 10:17:32.077" level="INFO">Pipeline[ Id: 5c9a53fb-88d9-46ce-97cf-67e8bc9e5ad8, Nodes: 40d81517-0395-4fe7-b8c3-467d93fe2b98{ip: 172.20.0.3, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, ReplicationConfig: STANDALONE/ONE, State:OPEN, leaderId:, CreationTimestamp2022-11-11T10:17:27.169Z[UTC]]
Pipeline[ Id: fcf80588-33d8-4ec2-8cdf-56c90898f43d, Nodes: 40d81517-0395-4fe7-b8c3-467d93fe2b98{ip: 172.20.0.3, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, ReplicationConfig: RATIS/ONE, State:OPEN, leaderId:40d81517-0395-4fe7-b8c3-467d93fe2b98, CreationTimestamp2022-11-11T10:16:50.471Z[UTC]]</msg>
<status status="PASS" starttime="20221111 10:17:32.076" endtime="20221111 10:17:32.077"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221111 10:17:32.077" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221111 10:17:32.077" endtime="20221111 10:17:32.077"/>
</kw>
<status status="PASS" starttime="20221111 10:17:29.721" endtime="20221111 10:17:32.078"/>
</kw>
<msg timestamp="20221111 10:17:32.078" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221111 10:17:29.721" endtime="20221111 10:17:32.078"/>
</kw>
<msg timestamp="20221111 10:17:32.078" level="INFO">${output} = Pipeline[ Id: 5c9a53fb-88d9-46ce-97cf-67e8bc9e5ad8, Nodes: 40d81517-0395-4fe7-b8c3-467d93fe2b98{ip: 172.20.0.3, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858...</msg>
<status status="PASS" starttime="20221111 10:17:29.720" endtime="20221111 10:17:32.078"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>STANDALONE/ONE</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221111 10:17:32.079" endtime="20221111 10:17:32.079"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221111 10:17:29.719" endtime="20221111 10:17:32.079"/>
</test>
<test id="s1-s1-t4" name="Deactivate pipeline" line="43">
<kw name="Execute" library="os">
<arg>ozone admin pipeline deactivate "${PIPELINE}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221111 10:17:32.084" level="INFO">Running command 'ozone admin pipeline deactivate "5c9a53fb-88d9-46ce-97cf-67e8bc9e5ad8" 2&gt;&amp;1'.</msg>
<msg timestamp="20221111 10:17:34.561" level="INFO">${rc} = 0</msg>
<msg timestamp="20221111 10:17:34.562" level="INFO">${output} = </msg>
<status status="PASS" starttime="20221111 10:17:32.082" endtime="20221111 10:17:34.562"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221111 10:17:34.563" level="INFO"/>
<status status="PASS" starttime="20221111 10:17:34.562" endtime="20221111 10:17:34.563"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221111 10:17:34.564" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221111 10:17:34.563" endtime="20221111 10:17:34.564"/>
</kw>
<status status="PASS" starttime="20221111 10:17:32.082" endtime="20221111 10:17:34.564"/>
</kw>
<msg timestamp="20221111 10:17:34.564" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221111 10:17:32.082" endtime="20221111 10:17:34.564"/>
</kw>
<status status="PASS" starttime="20221111 10:17:32.081" endtime="20221111 10:17:34.565"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin pipeline list | grep "${PIPELINE}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221111 10:17:34.568" level="INFO">Running command 'ozone admin pipeline list | grep "5c9a53fb-88d9-46ce-97cf-67e8bc9e5ad8" 2&gt;&amp;1'.</msg>
<msg timestamp="20221111 10:17:36.875" level="INFO">${rc} = 0</msg>
<msg timestamp="20221111 10:17:36.875" level="INFO">${output} = Pipeline[ Id: 5c9a53fb-88d9-46ce-97cf-67e8bc9e5ad8, Nodes: 40d81517-0395-4fe7-b8c3-467d93fe2b98{ip: 172.20.0.3, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858...</msg>
<status status="PASS" starttime="20221111 10:17:34.566" endtime="20221111 10:17:36.875"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221111 10:17:36.876" level="INFO">Pipeline[ Id: 5c9a53fb-88d9-46ce-97cf-67e8bc9e5ad8, Nodes: 40d81517-0395-4fe7-b8c3-467d93fe2b98{ip: 172.20.0.3, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, ReplicationConfig: STANDALONE/ONE, State:DORMANT, leaderId:, CreationTimestamp2022-11-11T10:17:27.169Z[UTC]]</msg>
<status status="PASS" starttime="20221111 10:17:36.875" endtime="20221111 10:17:36.876"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221111 10:17:36.877" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221111 10:17:36.876" endtime="20221111 10:17:36.877"/>
</kw>
<status status="PASS" starttime="20221111 10:17:34.566" endtime="20221111 10:17:36.877"/>
</kw>
<msg timestamp="20221111 10:17:36.877" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221111 10:17:34.565" endtime="20221111 10:17:36.878"/>
</kw>
<msg timestamp="20221111 10:17:36.878" level="INFO">${output} = Pipeline[ Id: 5c9a53fb-88d9-46ce-97cf-67e8bc9e5ad8, Nodes: 40d81517-0395-4fe7-b8c3-467d93fe2b98{ip: 172.20.0.3, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858...</msg>
<status status="PASS" starttime="20221111 10:17:34.565" endtime="20221111 10:17:36.878"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>DORMANT</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221111 10:17:36.878" endtime="20221111 10:17:36.878"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221111 10:17:32.080" endtime="20221111 10:17:36.878"/>
</test>
<test id="s1-s1-t5" name="Activate pipeline" line="48">
<kw name="Execute" library="os">
<arg>ozone admin pipeline activate "${PIPELINE}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221111 10:17:36.883" level="INFO">Running command 'ozone admin pipeline activate "5c9a53fb-88d9-46ce-97cf-67e8bc9e5ad8" 2&gt;&amp;1'.</msg>
<msg timestamp="20221111 10:17:39.039" level="INFO">${rc} = 0</msg>
<msg timestamp="20221111 10:17:39.039" level="INFO">${output} = </msg>
<status status="PASS" starttime="20221111 10:17:36.881" endtime="20221111 10:17:39.039"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221111 10:17:39.040" level="INFO"/>
<status status="PASS" starttime="20221111 10:17:39.040" endtime="20221111 10:17:39.040"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221111 10:17:39.041" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221111 10:17:39.041" endtime="20221111 10:17:39.041"/>
</kw>
<status status="PASS" starttime="20221111 10:17:36.881" endtime="20221111 10:17:39.042"/>
</kw>
<msg timestamp="20221111 10:17:39.042" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221111 10:17:36.881" endtime="20221111 10:17:39.042"/>
</kw>
<status status="PASS" starttime="20221111 10:17:36.880" endtime="20221111 10:17:39.042"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin pipeline list | grep "${PIPELINE}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221111 10:17:39.045" level="INFO">Running command 'ozone admin pipeline list | grep "5c9a53fb-88d9-46ce-97cf-67e8bc9e5ad8" 2&gt;&amp;1'.</msg>
<msg timestamp="20221111 10:17:41.462" level="INFO">${rc} = 0</msg>
<msg timestamp="20221111 10:17:41.462" level="INFO">${output} = Pipeline[ Id: 5c9a53fb-88d9-46ce-97cf-67e8bc9e5ad8, Nodes: 40d81517-0395-4fe7-b8c3-467d93fe2b98{ip: 172.20.0.3, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858...</msg>
<status status="PASS" starttime="20221111 10:17:39.044" endtime="20221111 10:17:41.462"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221111 10:17:41.463" level="INFO">Pipeline[ Id: 5c9a53fb-88d9-46ce-97cf-67e8bc9e5ad8, Nodes: 40d81517-0395-4fe7-b8c3-467d93fe2b98{ip: 172.20.0.3, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, ReplicationConfig: STANDALONE/ONE, State:OPEN, leaderId:, CreationTimestamp2022-11-11T10:17:27.169Z[UTC]]</msg>
<status status="PASS" starttime="20221111 10:17:41.462" endtime="20221111 10:17:41.463"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221111 10:17:41.464" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221111 10:17:41.463" endtime="20221111 10:17:41.464"/>
</kw>
<status status="PASS" starttime="20221111 10:17:39.043" endtime="20221111 10:17:41.464"/>
</kw>
<msg timestamp="20221111 10:17:41.464" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221111 10:17:39.043" endtime="20221111 10:17:41.464"/>
</kw>
<msg timestamp="20221111 10:17:41.465" level="INFO">${output} = Pipeline[ Id: 5c9a53fb-88d9-46ce-97cf-67e8bc9e5ad8, Nodes: 40d81517-0395-4fe7-b8c3-467d93fe2b98{ip: 172.20.0.3, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858...</msg>
<status status="PASS" starttime="20221111 10:17:39.042" endtime="20221111 10:17:41.465"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>OPEN</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221111 10:17:41.465" endtime="20221111 10:17:41.465"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221111 10:17:36.879" endtime="20221111 10:17:41.466"/>
</test>
<test id="s1-s1-t6" name="Close pipeline" line="53">
<kw name="Execute" library="os">
<arg>ozone admin pipeline close "${PIPELINE}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221111 10:17:41.470" level="INFO">Running command 'ozone admin pipeline close "5c9a53fb-88d9-46ce-97cf-67e8bc9e5ad8" 2&gt;&amp;1'.</msg>
<msg timestamp="20221111 10:17:43.718" level="INFO">${rc} = 0</msg>
<msg timestamp="20221111 10:17:43.718" level="INFO">${output} = </msg>
<status status="PASS" starttime="20221111 10:17:41.468" endtime="20221111 10:17:43.718"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221111 10:17:43.719" level="INFO"/>
<status status="PASS" starttime="20221111 10:17:43.718" endtime="20221111 10:17:43.719"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221111 10:17:43.719" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221111 10:17:43.719" endtime="20221111 10:17:43.720"/>
</kw>
<status status="PASS" starttime="20221111 10:17:41.468" endtime="20221111 10:17:43.720"/>
</kw>
<msg timestamp="20221111 10:17:43.720" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221111 10:17:41.468" endtime="20221111 10:17:43.720"/>
</kw>
<status status="PASS" starttime="20221111 10:17:41.467" endtime="20221111 10:17:43.721"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin pipeline list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221111 10:17:43.724" level="INFO">Running command 'ozone admin pipeline list 2&gt;&amp;1'.</msg>
<msg timestamp="20221111 10:17:46.061" level="INFO">${rc} = 0</msg>
<msg timestamp="20221111 10:17:46.061" level="INFO">${output} = Pipeline[ Id: 5c9a53fb-88d9-46ce-97cf-67e8bc9e5ad8, Nodes: 40d81517-0395-4fe7-b8c3-467d93fe2b98{ip: 172.20.0.3, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858...</msg>
<status status="PASS" starttime="20221111 10:17:43.722" endtime="20221111 10:17:46.061"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221111 10:17:46.062" level="INFO">Pipeline[ Id: 5c9a53fb-88d9-46ce-97cf-67e8bc9e5ad8, Nodes: 40d81517-0395-4fe7-b8c3-467d93fe2b98{ip: 172.20.0.3, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, ReplicationConfig: STANDALONE/ONE, State:CLOSED, leaderId:, CreationTimestamp2022-11-11T10:17:27.169Z[UTC]]
Pipeline[ Id: fcf80588-33d8-4ec2-8cdf-56c90898f43d, Nodes: 40d81517-0395-4fe7-b8c3-467d93fe2b98{ip: 172.20.0.3, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, ReplicationConfig: RATIS/ONE, State:OPEN, leaderId:40d81517-0395-4fe7-b8c3-467d93fe2b98, CreationTimestamp2022-11-11T10:16:50.471Z[UTC]]</msg>
<status status="PASS" starttime="20221111 10:17:46.061" endtime="20221111 10:17:46.062"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221111 10:17:46.063" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221111 10:17:46.062" endtime="20221111 10:17:46.063"/>
</kw>
<status status="PASS" starttime="20221111 10:17:43.721" endtime="20221111 10:17:46.063"/>
</kw>
<msg timestamp="20221111 10:17:46.063" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221111 10:17:43.721" endtime="20221111 10:17:46.064"/>
</kw>
<msg timestamp="20221111 10:17:46.064" level="INFO">${output} = Pipeline[ Id: 5c9a53fb-88d9-46ce-97cf-67e8bc9e5ad8, Nodes: 40d81517-0395-4fe7-b8c3-467d93fe2b98{ip: 172.20.0.3, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858...</msg>
<status status="PASS" starttime="20221111 10:17:43.721" endtime="20221111 10:17:46.064"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${PIPELINE}' not in '''${output}'''</arg>
<arg>Pipeline already scrubbed</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20221111 10:17:46.064" endtime="20221111 10:17:46.064"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${output}</arg>
<arg>${PIPELINE}.*CLOSED</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20221111 10:17:46.064" endtime="20221111 10:17:46.065"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221111 10:17:41.466" endtime="20221111 10:17:46.065"/>
</test>
<test id="s1-s1-t7" name="Incomplete command" line="59">
<kw name="Execute And Ignore Error" library="os">
<var>${output}</var>
<arg>ozone admin pipeline</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221111 10:17:46.069" level="INFO">Running command 'ozone admin pipeline 2&gt;&amp;1'.</msg>
<msg timestamp="20221111 10:17:48.029" level="INFO">${rc} = 255</msg>
<msg timestamp="20221111 10:17:48.029" level="INFO">${output} = Incomplete command
Usage: ozone admin pipeline [-hV] [COMMAND]
Pipeline specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
Com...</msg>
<status status="PASS" starttime="20221111 10:17:46.067" endtime="20221111 10:17:48.030"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221111 10:17:48.031" level="INFO">Incomplete command
Usage: ozone admin pipeline [-hV] [COMMAND]
Pipeline specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
Commands:
  list        List all active pipelines
  activate    Activates the given Pipeline
  deactivate  Deactivates the given Pipeline
  create      create pipeline
  close       Close pipeline</msg>
<status status="PASS" starttime="20221111 10:17:48.030" endtime="20221111 10:17:48.031"/>
</kw>
<msg timestamp="20221111 10:17:48.031" level="INFO">${output} = Incomplete command
Usage: ozone admin pipeline [-hV] [COMMAND]
Pipeline specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
Com...</msg>
<status status="PASS" starttime="20221111 10:17:46.067" endtime="20221111 10:17:48.031"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Incomplete command</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221111 10:17:48.031" endtime="20221111 10:17:48.032"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>close</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221111 10:17:48.032" endtime="20221111 10:17:48.032"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>create</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221111 10:17:48.032" endtime="20221111 10:17:48.032"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>deactivate</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221111 10:17:48.032" endtime="20221111 10:17:48.033"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>list</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221111 10:17:48.033" endtime="20221111 10:17:48.033"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221111 10:17:46.066" endtime="20221111 10:17:48.033"/>
</test>
<doc>Test ozone admin pipeline command</doc>
<status status="PASS" starttime="20221111 10:17:24.815" endtime="20221111 10:17:48.035"/>
</suite>
<suite id="s1-s2" name="Single Node" source="/opt/hadoop/smoketest/basic/single_node.robot">
<test id="s1-s2-t1" name="Basic Freon smoketest for one datanode" line="25">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221111 10:17:07.875" endtime="20221111 10:17:07.875"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>10</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20221111 10:17:07.876" level="INFO">${random} = obClhMB8L6</msg>
<status status="PASS" starttime="20221111 10:17:07.875" endtime="20221111 10:17:07.876"/>
</kw>
<kw name="Freon OCKG" library="freon">
<arg>prefix=${random}</arg>
<arg>args=--replication ONE --replication-type RATIS</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221111 10:17:07.881" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p obClhMB8L6 --replication ONE --replication-type RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20221111 10:17:16.116" level="INFO">${rc} = 0</msg>
<msg timestamp="20221111 10:17:16.117" level="INFO">${output} = 2022-11-11 10:17:09,297 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-11 10:17:09,461 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221111 10:17:07.878" endtime="20221111 10:17:16.117"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221111 10:17:16.118" level="INFO">2022-11-11 10:17:09,297 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-11 10:17:09,461 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-11-11 10:17:09,462 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-11-11 10:17:09,657 [main] INFO freon.BaseFreonGenerator: Executing test with prefix obClhMB8L6 and number-of-tests 1
2022-11-11 10:17:09,722 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-11 10:17:10,733 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-11 10:17:11,734 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-11 10:17:12,734 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-11 10:17:12,791 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2022-11-11 10:17:12,904 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false 
2022-11-11 10:17:13,614 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-11-11 10:17:13,735 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-11 10:17:13,909 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-11-11 10:17:14,735 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-11 10:17:15,735 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-11-11 10:17:15,767 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=1916.64534, max=1916.64534, mean=1916.64534, stddev=0.0, median=1916.64534, p75=1916.64534, p95=1916.64534, p98=1916.64534, p99=1916.64534, p999=1916.64534, mean_rate=0.35358304429849435, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-11-11 10:17:15,768 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 6
2022-11-11 10:17:15,768 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-11-11 10:17:15,768 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20221111 10:17:16.117" endtime="20221111 10:17:16.118"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221111 10:17:16.119" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221111 10:17:16.118" endtime="20221111 10:17:16.119"/>
</kw>
<status status="PASS" starttime="20221111 10:17:07.877" endtime="20221111 10:17:16.119"/>
</kw>
<msg timestamp="20221111 10:17:16.119" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221111 10:17:07.877" endtime="20221111 10:17:16.120"/>
</kw>
<msg timestamp="20221111 10:17:16.121" level="INFO">${result} = 2022-11-11 10:17:09,297 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-11 10:17:09,461 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221111 10:17:07.876" endtime="20221111 10:17:16.121"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221111 10:17:16.121" endtime="20221111 10:17:16.121"/>
</kw>
<status status="PASS" starttime="20221111 10:17:07.876" endtime="20221111 10:17:16.122"/>
</kw>
<kw name="Freon OCKV" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221111 10:17:16.127" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p obClhMB8L6  2&gt;&amp;1'.</msg>
<msg timestamp="20221111 10:17:21.498" level="INFO">${rc} = 0</msg>
<msg timestamp="20221111 10:17:21.498" level="INFO">${output} = 2022-11-11 10:17:17,680 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-11 10:17:17,808 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221111 10:17:16.124" endtime="20221111 10:17:21.498"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221111 10:17:21.499" level="INFO">2022-11-11 10:17:17,680 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-11 10:17:17,808 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-11-11 10:17:17,808 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-11-11 10:17:17,976 [main] INFO freon.BaseFreonGenerator: Executing test with prefix obClhMB8L6 and number-of-tests 1
2022-11-11 10:17:18,041 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-11 10:17:19,044 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-11 10:17:19,378 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-11-11 10:17:20,046 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-11 10:17:21,046 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-11-11 10:17:21,149 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=40.388193, max=40.388193, mean=40.388193, stddev=0.0, median=40.388193, p75=40.388193, p95=40.388193, p98=40.388193, p99=40.388193, p999=40.388193, mean_rate=0.9755799328569598, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-11-11 10:17:21,150 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2022-11-11 10:17:21,154 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-11-11 10:17:21,154 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20221111 10:17:21.499" endtime="20221111 10:17:21.500"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221111 10:17:21.500" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221111 10:17:21.500" endtime="20221111 10:17:21.500"/>
</kw>
<status status="PASS" starttime="20221111 10:17:16.124" endtime="20221111 10:17:21.501"/>
</kw>
<msg timestamp="20221111 10:17:21.501" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221111 10:17:16.124" endtime="20221111 10:17:21.501"/>
</kw>
<msg timestamp="20221111 10:17:21.502" level="INFO">${result} = 2022-11-11 10:17:17,680 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-11 10:17:17,808 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221111 10:17:16.123" endtime="20221111 10:17:21.502"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221111 10:17:21.502" endtime="20221111 10:17:21.502"/>
</kw>
<status status="PASS" starttime="20221111 10:17:16.122" endtime="20221111 10:17:21.502"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221111 10:17:07.874" endtime="20221111 10:17:21.503"/>
</test>
<doc>Smoketest for one datanode</doc>
<status status="PASS" starttime="20221111 10:17:07.818" endtime="20221111 10:17:21.504"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="36906"/>
</suite>
<statistics>
<total>
<stat pass="8" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="8" fail="0" skip="0" id="s1" name="ozonescripts">ozonescripts</stat>
<stat pass="7" fail="0" skip="0" id="s1-s1" name="Pipeline">ozonescripts.Pipeline</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Single Node">ozonescripts.Single Node</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
