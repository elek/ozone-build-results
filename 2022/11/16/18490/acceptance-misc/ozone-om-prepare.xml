<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.0.1 (Python 3.8.10 on linux)" generated="20221116 09:27:46.156" rpa="false" schemaversion="3">
<suite id="s1" name="ozone-om-prepare" source="/opt/hadoop/smoketest/omha/om-prepare.robot">
<kw name="Create Specific OM data for prepare" type="SETUP">
<kw name="Freon OCKG" library="freon">
<arg>prefix=om-prepare</arg>
<arg>n=100</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221116 09:20:33.073" level="INFO">Running command 'ozone freon ockg --om-service-id=omservice -t 1 -n100 -p om-prepare  2&gt;&amp;1'.</msg>
<msg timestamp="20221116 09:20:55.178" level="INFO">${rc} = 0</msg>
<msg timestamp="20221116 09:20:55.178" level="INFO">${output} = 2022-11-16 09:20:35,089 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-16 09:20:35,329 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221116 09:20:33.068" endtime="20221116 09:20:55.178"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221116 09:20:55.179" level="INFO">2022-11-16 09:20:35,089 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-16 09:20:35,329 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-11-16 09:20:35,330 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-11-16 09:20:35,599 [main] INFO freon.BaseFreonGenerator: Executing test with prefix om-prepare and number-of-tests 100
2022-11-16 09:20:35,727 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-11-16 09:20:36,557 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2022-11-16 09:20:36,743 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-11-16 09:20:36,927 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false 
2022-11-16 09:20:37,743 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-11-16 09:20:38,473 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-11-16 09:20:38,743 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-11-16 09:20:38,907 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-11-16 09:20:39,744 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-11-16 09:20:40,744 [Thread-3] INFO freon.ProgressBar: Progress: 1.00 % (1 out of 100)
2022-11-16 09:20:41,745 [Thread-3] INFO freon.ProgressBar: Progress: 5.00 % (5 out of 100)
2022-11-16 09:20:42,745 [Thread-3] INFO freon.ProgressBar: Progress: 11.00 % (11 out of 100)
2022-11-16 09:20:43,746 [Thread-3] INFO freon.ProgressBar: Progress: 18.00 % (18 out of 100)
2022-11-16 09:20:44,748 [Thread-3] INFO freon.ProgressBar: Progress: 24.00 % (24 out of 100)
2022-11-16 09:20:45,749 [Thread-3] INFO freon.ProgressBar: Progress: 31.00 % (31 out of 100)
2022-11-16 09:20:46,750 [Thread-3] INFO freon.ProgressBar: Progress: 38.00 % (38 out of 100)
2022-11-16 09:20:47,751 [Thread-3] INFO freon.ProgressBar: Progress: 46.00 % (46 out of 100)
2022-11-16 09:20:48,751 [Thread-3] INFO freon.ProgressBar: Progress: 53.00 % (53 out of 100)
2022-11-16 09:20:49,752 [Thread-3] INFO freon.ProgressBar: Progress: 62.00 % (62 out of 100)
2022-11-16 09:20:50,753 [Thread-3] INFO freon.ProgressBar: Progress: 70.00 % (70 out of 100)
2022-11-16 09:20:51,753 [Thread-3] INFO freon.ProgressBar: Progress: 79.00 % (79 out of 100)
2022-11-16 09:20:52,754 [Thread-3] INFO freon.ProgressBar: Progress: 89.00 % (89 out of 100)
2022-11-16 09:20:53,763 [Thread-3] INFO freon.ProgressBar: Progress: 97.00 % (97 out of 100)
2022-11-16 09:20:54,764 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2022-11-16 09:20:54,818 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=100, min=79.180073, max=3534.722049, mean=163.5814700967903, stddev=321.87475788008123, median=127.875544, p75=150.299797, p95=200.489764, p98=208.304586, p99=356.269579, p999=3534.722049, mean_rate=5.644011945778172, m1=2.3409365051096307, m5=1.6001730220469035, m15=1.4674241106059642, rate_unit=events/second, duration_unit=milliseconds
2022-11-16 09:20:54,819 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 19
2022-11-16 09:20:54,819 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-11-16 09:20:54,819 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20221116 09:20:55.179" endtime="20221116 09:20:55.180"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221116 09:20:55.180" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221116 09:20:55.180" endtime="20221116 09:20:55.180"/>
</kw>
<status status="PASS" starttime="20221116 09:20:33.068" endtime="20221116 09:20:55.181"/>
</kw>
<msg timestamp="20221116 09:20:55.181" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221116 09:20:33.068" endtime="20221116 09:20:55.182"/>
</kw>
<msg timestamp="20221116 09:20:55.183" level="INFO">${result} = 2022-11-16 09:20:35,089 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-16 09:20:35,329 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221116 09:20:33.067" endtime="20221116 09:20:55.183"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221116 09:20:55.183" endtime="20221116 09:20:55.184"/>
</kw>
<status status="PASS" starttime="20221116 09:20:33.065" endtime="20221116 09:20:55.184"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20221116 09:20:55.184" level="INFO">${random} = 80273</msg>
<status status="PASS" starttime="20221116 09:20:55.184" endtime="20221116 09:20:55.184"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20221116 09:20:55.186" level="INFO">${volume_name} = 80273-volume-for-prepare</msg>
<status status="PASS" starttime="20221116 09:20:55.185" endtime="20221116 09:20:55.186"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${bucket_name}</arg>
<arg>${random}-bucket-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20221116 09:20:55.189" level="INFO">${bucket_name} = 80273-bucket-for-prepare</msg>
<status status="PASS" starttime="20221116 09:20:55.186" endtime="20221116 09:20:55.189"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create /${volume_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221116 09:20:55.195" level="INFO">Running command 'ozone sh volume create /80273-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20221116 09:20:58.569" level="INFO">${rc} = 0</msg>
<msg timestamp="20221116 09:20:58.569" level="INFO">${output} = </msg>
<status status="PASS" starttime="20221116 09:20:55.191" endtime="20221116 09:20:58.569"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221116 09:20:58.570" level="INFO"/>
<status status="PASS" starttime="20221116 09:20:58.569" endtime="20221116 09:20:58.570"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221116 09:20:58.571" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221116 09:20:58.570" endtime="20221116 09:20:58.571"/>
</kw>
<status status="PASS" starttime="20221116 09:20:55.190" endtime="20221116 09:20:58.571"/>
</kw>
<msg timestamp="20221116 09:20:58.572" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221116 09:20:55.190" endtime="20221116 09:20:58.572"/>
</kw>
<status status="PASS" starttime="20221116 09:20:55.189" endtime="20221116 09:20:58.572"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume_name}/${bucket_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221116 09:20:58.577" level="INFO">Running command 'ozone sh bucket create /80273-volume-for-prepare/80273-bucket-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20221116 09:21:01.750" level="INFO">${rc} = 0</msg>
<msg timestamp="20221116 09:21:01.750" level="INFO">${output} = </msg>
<status status="PASS" starttime="20221116 09:20:58.574" endtime="20221116 09:21:01.750"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221116 09:21:01.755" level="INFO"/>
<status status="PASS" starttime="20221116 09:21:01.754" endtime="20221116 09:21:01.755"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221116 09:21:01.756" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221116 09:21:01.756" endtime="20221116 09:21:01.756"/>
</kw>
<status status="PASS" starttime="20221116 09:20:58.573" endtime="20221116 09:21:01.757"/>
</kw>
<msg timestamp="20221116 09:21:01.757" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221116 09:20:58.573" endtime="20221116 09:21:01.757"/>
</kw>
<status status="PASS" starttime="20221116 09:20:58.572" endtime="20221116 09:21:01.757"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221116 09:21:01.762" level="INFO">Running command 'ozone sh key put /80273-volume-for-prepare/80273-bucket-for-prepare/prepare-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20221116 09:21:08.110" level="INFO">${rc} = 0</msg>
<msg timestamp="20221116 09:21:08.110" level="INFO">${output} = </msg>
<status status="PASS" starttime="20221116 09:21:01.759" endtime="20221116 09:21:08.110"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221116 09:21:08.112" level="INFO"/>
<status status="PASS" starttime="20221116 09:21:08.111" endtime="20221116 09:21:08.112"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221116 09:21:08.112" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221116 09:21:08.112" endtime="20221116 09:21:08.112"/>
</kw>
<status status="PASS" starttime="20221116 09:21:01.759" endtime="20221116 09:21:08.113"/>
</kw>
<msg timestamp="20221116 09:21:08.113" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221116 09:21:01.758" endtime="20221116 09:21:08.113"/>
</kw>
<status status="PASS" starttime="20221116 09:21:01.758" endtime="20221116 09:21:08.113"/>
</kw>
<status status="PASS" starttime="20221116 09:20:33.065" endtime="20221116 09:21:08.114"/>
</kw>
<test id="s1-t1" name="Prepare Ozone Manager" line="39">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221116 09:21:08.116" endtime="20221116 09:21:08.116"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om prepare -id=omservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221116 09:21:08.121" level="INFO">Running command 'ozone admin om prepare -id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20221116 09:26:08.115" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20221116 09:21:08.118" endtime="20221116 09:26:08.116"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20221116 09:26:08.116" endtime="20221116 09:26:08.116"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20221116 09:26:08.116" endtime="20221116 09:26:08.116"/>
</kw>
<status status="FAIL" starttime="20221116 09:21:08.117" endtime="20221116 09:26:08.117"/>
</kw>
<msg timestamp="20221116 09:26:08.117" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20221116 09:21:08.117" endtime="20221116 09:26:08.117"/>
</kw>
<status status="FAIL" starttime="20221116 09:21:08.117" endtime="20221116 09:26:08.118"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20221116 09:26:08.118" endtime="20221116 09:26:08.118"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20221116 09:21:08.114" endtime="20221116 09:26:08.119">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-t2" name="Checks if the expected data is present in OM" line="43">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221116 09:26:08.121" endtime="20221116 09:26:08.122"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221116 09:26:08.127" level="INFO">Running command 'ozone sh key info /80273-volume-for-prepare/80273-bucket-for-prepare/prepare-key 2&gt;&amp;1'.</msg>
<msg timestamp="20221116 09:26:11.832" level="INFO">${rc} = 0</msg>
<msg timestamp="20221116 09:26:11.832" level="INFO">${output} = {
  "volumeName" : "80273-volume-for-prepare",
  "bucketName" : "80273-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17539,
  "creationTime" : "2022-11-16T09:21:05.015Z",
  "modificati...</msg>
<status status="PASS" starttime="20221116 09:26:08.124" endtime="20221116 09:26:11.832"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221116 09:26:11.834" level="INFO">{
  "volumeName" : "80273-volume-for-prepare",
  "bucketName" : "80273-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17539,
  "creationTime" : "2022-11-16T09:21:05.015Z",
  "modificationTime" : "2022-11-16T09:21:07.703Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "ozoneKeyLocations" : [ {
    "containerID" : 4,
    "localID" : 109611004723200101,
    "length" : 17539,
    "offset" : 0,
    "keyOffset" : 0
  } ]
}</msg>
<status status="PASS" starttime="20221116 09:26:11.833" endtime="20221116 09:26:11.834"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221116 09:26:11.835" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221116 09:26:11.834" endtime="20221116 09:26:11.835"/>
</kw>
<status status="PASS" starttime="20221116 09:26:08.123" endtime="20221116 09:26:11.836"/>
</kw>
<msg timestamp="20221116 09:26:11.836" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221116 09:26:08.123" endtime="20221116 09:26:11.836"/>
</kw>
<msg timestamp="20221116 09:26:11.837" level="INFO">${result} = {
  "volumeName" : "80273-volume-for-prepare",
  "bucketName" : "80273-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17539,
  "creationTime" : "2022-11-16T09:21:05.015Z",
  "modificati...</msg>
<status status="PASS" starttime="20221116 09:26:08.122" endtime="20221116 09:26:11.837"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"name\" : \"prepare-key\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221116 09:26:11.837" endtime="20221116 09:26:11.837"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221116 09:26:08.121" endtime="20221116 09:26:11.838"/>
</test>
<test id="s1-t3" name="Test write operation fails" line="47">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221116 09:26:11.840" endtime="20221116 09:26:11.841"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key2 /opt/hadoop/NOTICE.txt</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221116 09:26:11.844" level="INFO">Running command 'ozone sh key put /80273-volume-for-prepare/80273-bucket-for-prepare/prepare-key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20221116 09:26:15.858" level="INFO">${rc} = 255</msg>
<msg timestamp="20221116 09:26:15.858" level="INFO">${output} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20221116 09:26:11.841" endtime="20221116 09:26:15.858"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221116 09:26:15.859" level="INFO">NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20221116 09:26:15.858" endtime="20221116 09:26:15.860"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221116 09:26:15.860" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221116 09:26:15.860" endtime="20221116 09:26:15.860"/>
</kw>
<msg timestamp="20221116 09:26:15.861" level="INFO">${result} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20221116 09:26:11.841" endtime="20221116 09:26:15.861"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM is in prepare mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221116 09:26:15.861" endtime="20221116 09:26:15.861"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key2</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221116 09:26:15.866" level="INFO">Running command 'ozone sh key info /80273-volume-for-prepare/80273-bucket-for-prepare/prepare-key2 2&gt;&amp;1'.</msg>
<msg timestamp="20221116 09:26:19.076" level="INFO">${rc} = 255</msg>
<msg timestamp="20221116 09:26:19.076" level="INFO">${output} = KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<status status="PASS" starttime="20221116 09:26:15.863" endtime="20221116 09:26:19.076"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221116 09:26:19.078" level="INFO">KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<status status="PASS" starttime="20221116 09:26:19.076" endtime="20221116 09:26:19.078"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221116 09:26:19.079" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221116 09:26:19.079" endtime="20221116 09:26:19.080"/>
</kw>
<status status="PASS" starttime="20221116 09:26:15.862" endtime="20221116 09:26:19.080"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221116 09:26:11.839" endtime="20221116 09:26:19.080"/>
</test>
<doc>Smoke test to test preparing OMs in an OM HA cluster.</doc>
<status status="FAIL" starttime="20221116 09:20:33.001" endtime="20221116 09:26:19.082"/>
</suite>
<statistics>
<total>
<stat pass="2" fail="1" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="2" fail="1" skip="0" id="s1" name="ozone-om-prepare">ozone-om-prepare</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
