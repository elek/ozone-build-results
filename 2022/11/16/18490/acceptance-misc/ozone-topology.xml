<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.0.1 (Python 3.8.10 on linux)" generated="20221116 09:35:48.235" rpa="false" schemaversion="3">
<suite id="s1" name="ozone-topology">
<suite id="s1-s1" name="Cli" source="/opt/hadoop/smoketest/topology/cli.robot">
<test id="s1-s1-t1" name="Run printTopology" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221116 09:30:26.897" level="INFO">Running command 'ozone admin printTopology 2&gt;&amp;1'.</msg>
<msg timestamp="20221116 09:30:32.212" level="INFO">${rc} = 0</msg>
<msg timestamp="20221116 09:30:32.212" level="INFO">${output} = State = HEALTHY
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.5(ozone-topolog...</msg>
<status status="PASS" starttime="20221116 09:30:26.892" endtime="20221116 09:30:32.212"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221116 09:30:32.214" level="INFO">State = HEALTHY
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1</msg>
<status status="PASS" starttime="20221116 09:30:32.213" endtime="20221116 09:30:32.214"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221116 09:30:32.215" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221116 09:30:32.214" endtime="20221116 09:30:32.215"/>
</kw>
<status status="PASS" starttime="20221116 09:30:26.891" endtime="20221116 09:30:32.215"/>
</kw>
<msg timestamp="20221116 09:30:32.216" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221116 09:30:26.891" endtime="20221116 09:30:32.218"/>
</kw>
<msg timestamp="20221116 09:30:32.218" level="INFO">${output} = State = HEALTHY
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.5(ozone-topolog...</msg>
<status status="PASS" starttime="20221116 09:30:26.890" endtime="20221116 09:30:32.218"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
<arg>IN_SERVICE</arg>
<arg>/rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221116 09:30:32.219" endtime="20221116 09:30:32.219"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221116 09:30:26.889" endtime="20221116 09:30:32.220"/>
</test>
<test id="s1-s1-t2" name="Run printTopology -o" line="30">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology -o</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221116 09:30:32.227" level="INFO">Running command 'ozone admin printTopology -o 2&gt;&amp;1'.</msg>
<msg timestamp="20221116 09:30:37.273" level="INFO">${rc} = 0</msg>
<msg timestamp="20221116 09:30:37.273" level="INFO">${output} = State = HEALTHY
Location: /rack1
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net) IN_SERVICE
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net) IN_SERVICE
 10.5.0.4(ozone-topology_data...</msg>
<status status="PASS" starttime="20221116 09:30:32.223" endtime="20221116 09:30:37.273"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221116 09:30:37.275" level="INFO">State = HEALTHY
Location: /rack1
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net) IN_SERVICE
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net) IN_SERVICE
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net) IN_SERVICE
Location: /rack2
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net) IN_SERVICE
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net) IN_SERVICE
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net) IN_SERVICE</msg>
<status status="PASS" starttime="20221116 09:30:37.274" endtime="20221116 09:30:37.275"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221116 09:30:37.276" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221116 09:30:37.275" endtime="20221116 09:30:37.276"/>
</kw>
<status status="PASS" starttime="20221116 09:30:32.223" endtime="20221116 09:30:37.276"/>
</kw>
<msg timestamp="20221116 09:30:37.276" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221116 09:30:32.222" endtime="20221116 09:30:37.277"/>
</kw>
<msg timestamp="20221116 09:30:37.277" level="INFO">${output} = State = HEALTHY
Location: /rack1
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net) IN_SERVICE
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net) IN_SERVICE
 10.5.0.4(ozone-topology_data...</msg>
<status status="PASS" starttime="20221116 09:30:32.222" endtime="20221116 09:30:37.277"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Location: /rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221116 09:30:37.277" endtime="20221116 09:30:37.278"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net) IN_SERVICE</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221116 09:30:37.278" endtime="20221116 09:30:37.278"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221116 09:30:32.221" endtime="20221116 09:30:37.279"/>
</test>
<test id="s1-s1-t3" name="Run printTopology --operational-state IN_SERVICE" line="34">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology --operational-state IN_SERVICE</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221116 09:30:37.288" level="INFO">Running command 'ozone admin printTopology --operational-state IN_SERVICE 2&gt;&amp;1'.</msg>
<msg timestamp="20221116 09:30:42.065" level="INFO">${rc} = 0</msg>
<msg timestamp="20221116 09:30:42.065" level="INFO">${output} = State = HEALTHY
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.5(ozone-topolog...</msg>
<status status="PASS" starttime="20221116 09:30:37.284" endtime="20221116 09:30:42.065"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221116 09:30:42.071" level="INFO">State = HEALTHY
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1</msg>
<status status="PASS" starttime="20221116 09:30:42.065" endtime="20221116 09:30:42.072"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221116 09:30:42.073" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221116 09:30:42.072" endtime="20221116 09:30:42.073"/>
</kw>
<status status="PASS" starttime="20221116 09:30:37.283" endtime="20221116 09:30:42.073"/>
</kw>
<msg timestamp="20221116 09:30:42.073" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221116 09:30:37.282" endtime="20221116 09:30:42.074"/>
</kw>
<msg timestamp="20221116 09:30:42.074" level="INFO">${output} = State = HEALTHY
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.5(ozone-topolog...</msg>
<status status="PASS" starttime="20221116 09:30:37.282" endtime="20221116 09:30:42.074"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
<arg>IN_SERVICE</arg>
<arg>/rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221116 09:30:42.074" endtime="20221116 09:30:42.075"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221116 09:30:37.281" endtime="20221116 09:30:42.075"/>
</test>
<test id="s1-s1-t4" name="Run printTopology --node-state HEALTHY" line="37">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology --node-state HEALTHY</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221116 09:30:42.084" level="INFO">Running command 'ozone admin printTopology --node-state HEALTHY 2&gt;&amp;1'.</msg>
<msg timestamp="20221116 09:30:46.961" level="INFO">${rc} = 0</msg>
<msg timestamp="20221116 09:30:46.961" level="INFO">${output} = State = HEALTHY
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.5(ozone-topolog...</msg>
<status status="PASS" starttime="20221116 09:30:42.080" endtime="20221116 09:30:46.961"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221116 09:30:46.963" level="INFO">State = HEALTHY
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1</msg>
<status status="PASS" starttime="20221116 09:30:46.962" endtime="20221116 09:30:46.963"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221116 09:30:46.964" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221116 09:30:46.963" endtime="20221116 09:30:46.964"/>
</kw>
<status status="PASS" starttime="20221116 09:30:42.078" endtime="20221116 09:30:46.965"/>
</kw>
<msg timestamp="20221116 09:30:46.965" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221116 09:30:42.078" endtime="20221116 09:30:46.965"/>
</kw>
<msg timestamp="20221116 09:30:46.966" level="INFO">${output} = State = HEALTHY
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.5(ozone-topolog...</msg>
<status status="PASS" starttime="20221116 09:30:42.077" endtime="20221116 09:30:46.966"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
<arg>IN_SERVICE</arg>
<arg>/rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221116 09:30:46.966" endtime="20221116 09:30:46.967"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221116 09:30:42.076" endtime="20221116 09:30:46.967"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20221116 09:30:26.837" endtime="20221116 09:30:46.970"/>
</suite>
<suite id="s1-s2" name="Recon" source="/opt/hadoop/smoketest/recon">
<suite id="s1-s2-s1" name="Recon-Api" source="/opt/hadoop/smoketest/recon/recon-api.robot">
<test id="s1-s2-s1-t1" name="Check if Recon picks up OM data" line="61">
<kw name="Freon OCKG" library="freon" type="SETUP">
<arg>n=10</arg>
<arg>args=-s 1025 -v recon -b api</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221116 09:30:53.691" level="INFO">Running command 'ozone freon ockg  -t 1 -n10 -p ockg -s 1025 -v recon -b api 2&gt;&amp;1'.</msg>
<msg timestamp="20221116 09:31:05.792" level="INFO">${rc} = 0</msg>
<msg timestamp="20221116 09:31:05.792" level="INFO">${output} = 2022-11-16 09:30:56,668 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-16 09:30:56,837 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221116 09:30:53.686" endtime="20221116 09:31:05.792"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221116 09:31:05.794" level="INFO">2022-11-16 09:30:56,668 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-16 09:30:56,837 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-11-16 09:30:56,838 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-11-16 09:30:57,059 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockg and number-of-tests 10
2022-11-16 09:30:57,188 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2022-11-16 09:30:58,194 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2022-11-16 09:30:58,841 [main] INFO rpc.RpcClient: Creating Volume: recon, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2022-11-16 09:30:58,898 [main] INFO rpc.RpcClient: Creating Bucket: recon/api, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false 
2022-11-16 09:30:59,194 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2022-11-16 09:30:59,836 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-11-16 09:31:00,200 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2022-11-16 09:31:00,474 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-11-16 09:31:01,200 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2022-11-16 09:31:02,201 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2022-11-16 09:31:03,201 [Thread-5] INFO freon.ProgressBar: Progress: 30.00 % (3 out of 10)
2022-11-16 09:31:04,202 [Thread-5] INFO freon.ProgressBar: Progress: 60.00 % (6 out of 10)
2022-11-16 09:31:05,203 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (10 out of 10)
2022-11-16 09:31:05,403 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=10, min=150.694095, max=3835.616164, mean=579.8229547301197, stddev=1078.2455693959384, median=187.691536, p75=252.347505, p95=3835.616164, p98=3835.616164, p99=3835.616164, p999=3835.616164, mean_rate=1.5469409517801995, m1=1.0, m5=1.0, m15=1.0, rate_unit=events/second, duration_unit=milliseconds
2022-11-16 09:31:05,404 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 8
2022-11-16 09:31:05,404 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-11-16 09:31:05,405 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 10</msg>
<status status="PASS" starttime="20221116 09:31:05.793" endtime="20221116 09:31:05.794"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221116 09:31:05.795" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221116 09:31:05.794" endtime="20221116 09:31:05.795"/>
</kw>
<status status="PASS" starttime="20221116 09:30:53.685" endtime="20221116 09:31:05.795"/>
</kw>
<msg timestamp="20221116 09:31:05.796" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221116 09:30:53.685" endtime="20221116 09:31:05.797"/>
</kw>
<msg timestamp="20221116 09:31:05.798" level="INFO">${result} = 2022-11-16 09:30:56,668 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-16 09:30:56,837 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221116 09:30:53.684" endtime="20221116 09:31:05.798"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221116 09:31:05.798" endtime="20221116 09:31:05.798"/>
</kw>
<status status="PASS" starttime="20221116 09:30:53.681" endtime="20221116 09:31:05.799"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Check if Recon picks up container from OM</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221116 09:31:05.800" endtime="20221116 09:31:05.801"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221116 09:31:05.806" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20221116 09:31:06.102" level="INFO">${rc} = 0</msg>
<msg timestamp="20221116 09:31:06.102" level="INFO">${output} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221116 09:31:05.802" endtime="20221116 09:31:06.103"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221116 09:31:06.104" level="INFO">{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221116 09:31:06.103" endtime="20221116 09:31:06.105"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221116 09:31:06.105" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221116 09:31:06.105" endtime="20221116 09:31:06.106"/>
</kw>
<status status="PASS" starttime="20221116 09:31:05.802" endtime="20221116 09:31:06.106"/>
</kw>
<msg timestamp="20221116 09:31:06.106" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221116 09:31:05.801" endtime="20221116 09:31:06.107"/>
</kw>
<msg timestamp="20221116 09:31:06.108" level="INFO">${result} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221116 09:31:05.801" endtime="20221116 09:31:06.108"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221116 09:31:06.108" endtime="20221116 09:31:06.109"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221116 09:31:06.115" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20221116 09:31:06.158" level="INFO">${rc} = 0</msg>
<msg timestamp="20221116 09:31:06.158" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221116 09:31:06.111" endtime="20221116 09:31:06.158"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221116 09:31:06.160" level="INFO">[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221116 09:31:06.159" endtime="20221116 09:31:06.160"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221116 09:31:06.160" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221116 09:31:06.160" endtime="20221116 09:31:06.160"/>
</kw>
<status status="PASS" starttime="20221116 09:31:06.110" endtime="20221116 09:31:06.161"/>
</kw>
<msg timestamp="20221116 09:31:06.161" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221116 09:31:06.110" endtime="20221116 09:31:06.163"/>
</kw>
<msg timestamp="20221116 09:31:06.163" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221116 09:31:06.109" endtime="20221116 09:31:06.163"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20221116 09:31:06.165" level="FAIL">'[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20221116 09:31:06.164" endtime="20221116 09:31:06.165"/>
</kw>
<status status="FAIL" starttime="20221116 09:31:05.799" endtime="20221116 09:31:06.167"/>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221116 09:31:16.168" endtime="20221116 09:31:16.169"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221116 09:31:16.176" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20221116 09:31:16.194" level="INFO">${rc} = 0</msg>
<msg timestamp="20221116 09:31:16.194" level="INFO">${output} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221116 09:31:16.171" endtime="20221116 09:31:16.194"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221116 09:31:16.196" level="INFO">{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221116 09:31:16.195" endtime="20221116 09:31:16.196"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221116 09:31:16.197" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221116 09:31:16.197" endtime="20221116 09:31:16.197"/>
</kw>
<status status="PASS" starttime="20221116 09:31:16.170" endtime="20221116 09:31:16.198"/>
</kw>
<msg timestamp="20221116 09:31:16.198" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221116 09:31:16.169" endtime="20221116 09:31:16.198"/>
</kw>
<msg timestamp="20221116 09:31:16.199" level="INFO">${result} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221116 09:31:16.169" endtime="20221116 09:31:16.199"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221116 09:31:16.199" endtime="20221116 09:31:16.200"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221116 09:31:16.205" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20221116 09:31:16.228" level="INFO">${rc} = 0</msg>
<msg timestamp="20221116 09:31:16.228" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221116 09:31:16.202" endtime="20221116 09:31:16.228"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221116 09:31:16.230" level="INFO">[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221116 09:31:16.229" endtime="20221116 09:31:16.230"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221116 09:31:16.231" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221116 09:31:16.230" endtime="20221116 09:31:16.231"/>
</kw>
<status status="PASS" starttime="20221116 09:31:16.201" endtime="20221116 09:31:16.232"/>
</kw>
<msg timestamp="20221116 09:31:16.232" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221116 09:31:16.201" endtime="20221116 09:31:16.232"/>
</kw>
<msg timestamp="20221116 09:31:16.233" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221116 09:31:16.200" endtime="20221116 09:31:16.233"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20221116 09:31:16.234" level="FAIL">'[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20221116 09:31:16.233" endtime="20221116 09:31:16.234"/>
</kw>
<status status="FAIL" starttime="20221116 09:31:16.167" endtime="20221116 09:31:16.235"/>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221116 09:31:26.237" endtime="20221116 09:31:26.238"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221116 09:31:26.243" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20221116 09:31:26.268" level="INFO">${rc} = 0</msg>
<msg timestamp="20221116 09:31:26.268" level="INFO">${output} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221116 09:31:26.239" endtime="20221116 09:31:26.268"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221116 09:31:26.270" level="INFO">{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221116 09:31:26.269" endtime="20221116 09:31:26.270"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221116 09:31:26.270" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221116 09:31:26.270" endtime="20221116 09:31:26.270"/>
</kw>
<status status="PASS" starttime="20221116 09:31:26.239" endtime="20221116 09:31:26.271"/>
</kw>
<msg timestamp="20221116 09:31:26.271" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221116 09:31:26.239" endtime="20221116 09:31:26.271"/>
</kw>
<msg timestamp="20221116 09:31:26.272" level="INFO">${result} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221116 09:31:26.238" endtime="20221116 09:31:26.272"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221116 09:31:26.272" endtime="20221116 09:31:26.273"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221116 09:31:26.279" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20221116 09:31:26.299" level="INFO">${rc} = 0</msg>
<msg timestamp="20221116 09:31:26.299" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221116 09:31:26.275" endtime="20221116 09:31:26.299"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221116 09:31:26.301" level="INFO">[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221116 09:31:26.300" endtime="20221116 09:31:26.301"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221116 09:31:26.302" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221116 09:31:26.301" endtime="20221116 09:31:26.302"/>
</kw>
<status status="PASS" starttime="20221116 09:31:26.275" endtime="20221116 09:31:26.302"/>
</kw>
<msg timestamp="20221116 09:31:26.302" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221116 09:31:26.274" endtime="20221116 09:31:26.303"/>
</kw>
<msg timestamp="20221116 09:31:26.304" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221116 09:31:26.273" endtime="20221116 09:31:26.304"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20221116 09:31:26.305" level="FAIL">'[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20221116 09:31:26.304" endtime="20221116 09:31:26.305"/>
</kw>
<status status="FAIL" starttime="20221116 09:31:26.236" endtime="20221116 09:31:26.306"/>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221116 09:31:36.308" endtime="20221116 09:31:36.308"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221116 09:31:36.313" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20221116 09:31:36.334" level="INFO">${rc} = 0</msg>
<msg timestamp="20221116 09:31:36.334" level="INFO">${output} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221116 09:31:36.310" endtime="20221116 09:31:36.334"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221116 09:31:36.336" level="INFO">{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221116 09:31:36.335" endtime="20221116 09:31:36.336"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221116 09:31:36.337" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221116 09:31:36.336" endtime="20221116 09:31:36.337"/>
</kw>
<status status="PASS" starttime="20221116 09:31:36.309" endtime="20221116 09:31:36.337"/>
</kw>
<msg timestamp="20221116 09:31:36.338" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221116 09:31:36.309" endtime="20221116 09:31:36.338"/>
</kw>
<msg timestamp="20221116 09:31:36.339" level="INFO">${result} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221116 09:31:36.308" endtime="20221116 09:31:36.339"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221116 09:31:36.339" endtime="20221116 09:31:36.339"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221116 09:31:36.347" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20221116 09:31:36.371" level="INFO">${rc} = 0</msg>
<msg timestamp="20221116 09:31:36.371" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221116 09:31:36.341" endtime="20221116 09:31:36.372"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221116 09:31:36.374" level="INFO">[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221116 09:31:36.373" endtime="20221116 09:31:36.374"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221116 09:31:36.375" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221116 09:31:36.374" endtime="20221116 09:31:36.375"/>
</kw>
<status status="PASS" starttime="20221116 09:31:36.341" endtime="20221116 09:31:36.376"/>
</kw>
<msg timestamp="20221116 09:31:36.376" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221116 09:31:36.340" endtime="20221116 09:31:36.377"/>
</kw>
<msg timestamp="20221116 09:31:36.377" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221116 09:31:36.340" endtime="20221116 09:31:36.377"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20221116 09:31:36.378" level="FAIL">'[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20221116 09:31:36.377" endtime="20221116 09:31:36.378"/>
</kw>
<status status="FAIL" starttime="20221116 09:31:36.307" endtime="20221116 09:31:36.379"/>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221116 09:31:46.381" endtime="20221116 09:31:46.382"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221116 09:31:46.387" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20221116 09:31:46.408" level="INFO">${rc} = 0</msg>
<msg timestamp="20221116 09:31:46.409" level="INFO">${output} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221116 09:31:46.384" endtime="20221116 09:31:46.409"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221116 09:31:46.411" level="INFO">{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221116 09:31:46.409" endtime="20221116 09:31:46.411"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221116 09:31:46.412" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221116 09:31:46.411" endtime="20221116 09:31:46.413"/>
</kw>
<status status="PASS" starttime="20221116 09:31:46.383" endtime="20221116 09:31:46.413"/>
</kw>
<msg timestamp="20221116 09:31:46.413" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221116 09:31:46.382" endtime="20221116 09:31:46.414"/>
</kw>
<msg timestamp="20221116 09:31:46.414" level="INFO">${result} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221116 09:31:46.382" endtime="20221116 09:31:46.414"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221116 09:31:46.414" endtime="20221116 09:31:46.415"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221116 09:31:46.420" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20221116 09:31:46.439" level="INFO">${rc} = 0</msg>
<msg timestamp="20221116 09:31:46.439" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221116 09:31:46.417" endtime="20221116 09:31:46.439"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221116 09:31:46.441" level="INFO">[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221116 09:31:46.440" endtime="20221116 09:31:46.441"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221116 09:31:46.443" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221116 09:31:46.442" endtime="20221116 09:31:46.443"/>
</kw>
<status status="PASS" starttime="20221116 09:31:46.416" endtime="20221116 09:31:46.444"/>
</kw>
<msg timestamp="20221116 09:31:46.444" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221116 09:31:46.416" endtime="20221116 09:31:46.444"/>
</kw>
<msg timestamp="20221116 09:31:46.445" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221116 09:31:46.415" endtime="20221116 09:31:46.445"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20221116 09:31:46.446" level="FAIL">'[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20221116 09:31:46.445" endtime="20221116 09:31:46.446"/>
</kw>
<status status="FAIL" starttime="20221116 09:31:46.380" endtime="20221116 09:31:46.447"/>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221116 09:31:56.449" endtime="20221116 09:31:56.449"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221116 09:31:56.455" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20221116 09:31:56.475" level="INFO">${rc} = 0</msg>
<msg timestamp="20221116 09:31:56.475" level="INFO">${output} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221116 09:31:56.451" endtime="20221116 09:31:56.475"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221116 09:31:56.478" level="INFO">{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221116 09:31:56.476" endtime="20221116 09:31:56.478"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221116 09:31:56.479" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221116 09:31:56.479" endtime="20221116 09:31:56.479"/>
</kw>
<status status="PASS" starttime="20221116 09:31:56.450" endtime="20221116 09:31:56.479"/>
</kw>
<msg timestamp="20221116 09:31:56.480" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221116 09:31:56.450" endtime="20221116 09:31:56.480"/>
</kw>
<msg timestamp="20221116 09:31:56.480" level="INFO">${result} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221116 09:31:56.450" endtime="20221116 09:31:56.480"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221116 09:31:56.481" endtime="20221116 09:31:56.481"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221116 09:31:56.492" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20221116 09:31:56.511" level="INFO">${rc} = 0</msg>
<msg timestamp="20221116 09:31:56.511" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221116 09:31:56.483" endtime="20221116 09:31:56.511"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221116 09:31:56.512" level="INFO">[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221116 09:31:56.512" endtime="20221116 09:31:56.513"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221116 09:31:56.513" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221116 09:31:56.513" endtime="20221116 09:31:56.514"/>
</kw>
<status status="PASS" starttime="20221116 09:31:56.482" endtime="20221116 09:31:56.514"/>
</kw>
<msg timestamp="20221116 09:31:56.514" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221116 09:31:56.482" endtime="20221116 09:31:56.515"/>
</kw>
<msg timestamp="20221116 09:31:56.515" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221116 09:31:56.481" endtime="20221116 09:31:56.516"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20221116 09:31:56.517" level="FAIL">'[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20221116 09:31:56.516" endtime="20221116 09:31:56.517"/>
</kw>
<status status="FAIL" starttime="20221116 09:31:56.448" endtime="20221116 09:31:56.519"/>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221116 09:32:06.521" endtime="20221116 09:32:06.522"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221116 09:32:06.527" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20221116 09:32:06.552" level="INFO">${rc} = 0</msg>
<msg timestamp="20221116 09:32:06.552" level="INFO">${output} = {"data":{"totalCount":3,"containers":[{"ContainerID":1,"NumberOfKeys":4},{"ContainerID":2,"NumberOfKeys":4},{"ContainerID":3,"NumberOfKeys":3}]}}</msg>
<status status="PASS" starttime="20221116 09:32:06.523" endtime="20221116 09:32:06.552"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221116 09:32:06.554" level="INFO">{"data":{"totalCount":3,"containers":[{"ContainerID":1,"NumberOfKeys":4},{"ContainerID":2,"NumberOfKeys":4},{"ContainerID":3,"NumberOfKeys":3}]}}</msg>
<status status="PASS" starttime="20221116 09:32:06.553" endtime="20221116 09:32:06.554"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221116 09:32:06.554" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221116 09:32:06.554" endtime="20221116 09:32:06.555"/>
</kw>
<status status="PASS" starttime="20221116 09:32:06.523" endtime="20221116 09:32:06.555"/>
</kw>
<msg timestamp="20221116 09:32:06.555" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221116 09:32:06.522" endtime="20221116 09:32:06.558"/>
</kw>
<msg timestamp="20221116 09:32:06.558" level="INFO">${result} = {"data":{"totalCount":3,"containers":[{"ContainerID":1,"NumberOfKeys":4},{"ContainerID":2,"NumberOfKeys":4},{"ContainerID":3,"NumberOfKeys":3}]}}</msg>
<status status="PASS" starttime="20221116 09:32:06.522" endtime="20221116 09:32:06.558"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221116 09:32:06.558" endtime="20221116 09:32:06.559"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221116 09:32:06.565" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20221116 09:32:06.584" level="INFO">${rc} = 0</msg>
<msg timestamp="20221116 09:32:06.584" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1},{"volume":"recon","bucket":"api","fileSize":2048,"count":10}]</msg>
<status status="PASS" starttime="20221116 09:32:06.561" endtime="20221116 09:32:06.584"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221116 09:32:06.586" level="INFO">[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1},{"volume":"recon","bucket":"api","fileSize":2048,"count":10}]</msg>
<status status="PASS" starttime="20221116 09:32:06.584" endtime="20221116 09:32:06.586"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221116 09:32:06.587" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221116 09:32:06.586" endtime="20221116 09:32:06.587"/>
</kw>
<status status="PASS" starttime="20221116 09:32:06.560" endtime="20221116 09:32:06.587"/>
</kw>
<msg timestamp="20221116 09:32:06.587" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221116 09:32:06.560" endtime="20221116 09:32:06.588"/>
</kw>
<msg timestamp="20221116 09:32:06.588" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1},{"volume":"recon","bucket":"api","fileSize":2048,"count":10}]</msg>
<status status="PASS" starttime="20221116 09:32:06.559" endtime="20221116 09:32:06.588"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221116 09:32:06.589" endtime="20221116 09:32:06.589"/>
</kw>
<status status="PASS" starttime="20221116 09:32:06.520" endtime="20221116 09:32:06.589"/>
</kw>
<status status="PASS" starttime="20221116 09:31:05.799" endtime="20221116 09:32:06.589"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221116 09:30:53.679" endtime="20221116 09:32:06.590"/>
</test>
<test id="s1-s2-s1-t2" name="Check if Recon picks up DN heartbeats" line="65">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/datanodes</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221116 09:32:06.598" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/datanodes 2&gt;&amp;1'.</msg>
<msg timestamp="20221116 09:32:06.666" level="INFO">${rc} = 0</msg>
<msg timestamp="20221116 09:32:06.667" level="INFO">${output} = {"totalCount":6,"datanodes":[{"uuid":"75ebd22d-80d0-4912-a8eb-d6bd95b4b7d2","hostname":"ozone-topology_datanode_1_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1668591...</msg>
<status status="PASS" starttime="20221116 09:32:06.594" endtime="20221116 09:32:06.667"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221116 09:32:06.668" level="INFO">{"totalCount":6,"datanodes":[{"uuid":"75ebd22d-80d0-4912-a8eb-d6bd95b4b7d2","hostname":"ozone-topology_datanode_1_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1668591123515,"storageReport":{"capacity":89297309696,"used":11271,"remaining":27212632064},"pipelines":[{"pipelineID":"de423a58-864a-42f1-b8b8-dd58a935e9e0","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net"},{"pipelineID":"85373b61-abf5-4c75-830e-21ede595981b","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net"},{"pipelineID":"7d8572f9-3afe-41eb-953c-4379e801f903","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net"}],"containers":2,"openContainers":2,"leaderCount":1,"version":"1.3.0-SNAPSHOT","setupTime":1668590888667,"revision":"b46f961b59a994ccab89a7806d815e53e5def8c0","buildDate":"2022-11-16T09:06Z","layoutVersion":4,"networkLocation":"/rack1"},{"uuid":"4f3af55b-f06f-49a1-8a23-7b3480ac7f70","hostname":"ozone-topology_datanode_5_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1668591121799,"storageReport":{"capacity":89297309696,"used":21511,"remaining":27212632064},"pipelines":[{"pipelineID":"e3a4d4f0-24f2-43d4-8c5e-152e2513b362","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net"},{"pipelineID":"de423a58-864a-42f1-b8b8-dd58a935e9e0","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net"},{"pipelineID":"d34b398a-f4f2-4503-970b-8b12d36f2b82","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net"}],"containers":2,"openContainers":2,"leaderCount":2,"version":"1.3.0-SNAPSHOT","setupTime":1668590889274,"revision":"b46f961b59a994ccab89a7806d815e53e5def8c0","buildDate":"2022-11-16T09:06Z","layoutVersion":4,"networkLocation":"/rack2"},{"uuid":"9d00fbf2-fea8-429c-976d-c01a8cc9b77d","hostname":"ozone-topology_datanode_4_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1668591123519,"storageReport":{"capacity":89297309696,"used":11271,"remaining":27212632064},"pipelines":[{"pipelineID":"de423a58-864a-42f1-b8b8-dd58a935e9e0","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net"},{"pipelineID":"7d8572f9-3afe-41eb-953c-4379e801f903","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net"},{"pipelineID":"cfa94ea1-cacb-40e5-a9ab-47a60b48bb2d","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net"}],"containers":2,"openContainers":2,"leaderCount":2,"version":"1.3.0-SNAPSHOT","setupTime":1668590889715,"revision":"b46f961b59a994ccab89a7806d815e53e5def8c0","buildDate":"2022-11-16T09:06Z","layoutVersion":4,"networkLocation":"/rack2"},{"uuid":"c9b44257-edd4-4463-a855-1f94dd90058c","hostname":"ozone-topology_datanode_6_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1668591098051,"storageReport":{"capacity":89297309696,"used":14336,"remaining":27803607040},"pipelines":[{"pipelineID":"e3a4d4f0-24f2-43d4-8c5e-152e2513b362","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net"},{"pipelineID":"6ee9d1b3-9c42-4e43-a152-11be885a350a","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net"},{"pipelineID":"643af4b0-1b06-4f9c-b23e-2898c3b55eed","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net"}],"containers":1,"openContainers":1,"leaderCount":1,"version":"1.3.0-SNAPSHOT","setupTime":1668590889790,"revision":"b46f961b59a994ccab89a7806d815e53e5def8c0","buildDate":"2022-11-16T09:06Z","layoutVersion":4,"networkLocation":"/rack2"},{"uuid":"c2521899-2273-433f-afbe-e579deee31b2","hostname":"ozone-topology_datanode_3_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1668591097599,"storageReport":{"capacity":89297309696,"used":14336,"remaining":27803639808},"pipelines":[{"pipelineID":"e3a4d4f0-24f2-43d4-8c5e-152e2513b362","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net"},{"pipelineID":"6ee9d1b3-9c42-4e43-a152-11be885a350a","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net"},{"pipelineID":"a3ff8215-a334-437b-9011-db9dcb95bd67","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net"}],"containers":1,"openContainers":1,"leaderCount":2,"version":"1.3.0-SNAPSHOT","setupTime":1668590889720,"revision":"b46f961b59a994ccab89a7806d815e53e5def8c0","buildDate":"2022-11-16T09:06Z","layoutVersion":4,"networkLocation":"/rack1"},{"uuid":"a32319b8-a117-44cb-98c5-1972fb61b2cf","hostname":"ozone-topology_datanode_2_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1668591123776,"storageReport":{"capacity":89297309696,"used":7171,"remaining":27212632064},"pipelines":[{"pipelineID":"6ee9d1b3-9c42-4e43-a152-11be885a350a","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net"},{"pipelineID":"7d8572f9-3afe-41eb-953c-4379e801f903","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net"},{"pipelineID":"dbf1ecc4-945a-4b9b-a7d8-9f1768543b21","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net"}],"containers":1,"openContainers":1,"leaderCount":2,"version":"1.3.0-SNAPSHOT","setupTime":1668590890580,"revision":"b46f961b59a994ccab89a7806d815e53e5def8c0","buildDate":"2022-11-16T09:06Z","layoutVersion":4,"networkLocation":"/rack1"}]}</msg>
<status status="PASS" starttime="20221116 09:32:06.667" endtime="20221116 09:32:06.669"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221116 09:32:06.669" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221116 09:32:06.669" endtime="20221116 09:32:06.669"/>
</kw>
<status status="PASS" starttime="20221116 09:32:06.593" endtime="20221116 09:32:06.670"/>
</kw>
<msg timestamp="20221116 09:32:06.670" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221116 09:32:06.593" endtime="20221116 09:32:06.670"/>
</kw>
<msg timestamp="20221116 09:32:06.671" level="INFO">${result} = {"totalCount":6,"datanodes":[{"uuid":"75ebd22d-80d0-4912-a8eb-d6bd95b4b7d2","hostname":"ozone-topology_datanode_1_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1668591...</msg>
<status status="PASS" starttime="20221116 09:32:06.592" endtime="20221116 09:32:06.671"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanodes</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221116 09:32:06.671" endtime="20221116 09:32:06.671"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221116 09:32:06.672" endtime="20221116 09:32:06.672"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221116 09:32:06.672" endtime="20221116 09:32:06.673"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221116 09:32:06.673" endtime="20221116 09:32:06.673"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/pipelines</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221116 09:32:06.680" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/pipelines 2&gt;&amp;1'.</msg>
<msg timestamp="20221116 09:32:06.714" level="INFO">${rc} = 0</msg>
<msg timestamp="20221116 09:32:06.714" level="INFO">${output} = {"totalCount":10,"pipelines":[{"pipelineId":"e3a4d4f0-24f2-43d4-8c5e-152e2513b362","status":"OPEN","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net","datanodes":["ozone-topology_datanode_6...</msg>
<status status="PASS" starttime="20221116 09:32:06.677" endtime="20221116 09:32:06.714"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221116 09:32:06.717" level="INFO">{"totalCount":10,"pipelines":[{"pipelineId":"e3a4d4f0-24f2-43d4-8c5e-152e2513b362","status":"OPEN","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net","datanodes":["ozone-topology_datanode_6_1.ozone-topology_net","ozone-topology_datanode_3_1.ozone-topology_net","ozone-topology_datanode_5_1.ozone-topology_net"],"lastLeaderElection":0,"duration":177310,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"THREE","containers":1},{"pipelineId":"de423a58-864a-42f1-b8b8-dd58a935e9e0","status":"OPEN","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net","datanodes":["ozone-topology_datanode_5_1.ozone-topology_net","ozone-topology_datanode_1_1.ozone-topology_net","ozone-topology_datanode_4_1.ozone-topology_net"],"lastLeaderElection":0,"duration":177481,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"THREE","containers":1},{"pipelineId":"d34b398a-f4f2-4503-970b-8b12d36f2b82","status":"OPEN","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net","datanodes":["ozone-topology_datanode_5_1.ozone-topology_net"],"lastLeaderElection":0,"duration":177398,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"6ee9d1b3-9c42-4e43-a152-11be885a350a","status":"OPEN","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net","datanodes":["ozone-topology_datanode_6_1.ozone-topology_net","ozone-topology_datanode_3_1.ozone-topology_net","ozone-topology_datanode_2_1.ozone-topology_net"],"lastLeaderElection":0,"duration":177139,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"THREE","containers":0},{"pipelineId":"a3ff8215-a334-437b-9011-db9dcb95bd67","status":"OPEN","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net","datanodes":["ozone-topology_datanode_3_1.ozone-topology_net"],"lastLeaderElection":0,"duration":177087,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"85373b61-abf5-4c75-830e-21ede595981b","status":"OPEN","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net","datanodes":["ozone-topology_datanode_1_1.ozone-topology_net"],"lastLeaderElection":0,"duration":177262,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"643af4b0-1b06-4f9c-b23e-2898c3b55eed","status":"OPEN","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net","datanodes":["ozone-topology_datanode_6_1.ozone-topology_net"],"lastLeaderElection":0,"duration":180197,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"7d8572f9-3afe-41eb-953c-4379e801f903","status":"OPEN","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net","datanodes":["ozone-topology_datanode_2_1.ozone-topology_net","ozone-topology_datanode_4_1.ozone-topology_net","ozone-topology_datanode_1_1.ozone-topology_net"],"lastLeaderElection":0,"duration":177198,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"THREE","containers":1},{"pipelineId":"dbf1ecc4-945a-4b9b-a7d8-9f1768543b21","status":"OPEN","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net","datanodes":["ozone-topology_datanode_2_1.ozone-topology_net"],"lastLeaderElection":0,"duration":177026,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"cfa94ea1-cacb-40e5-a9ab-47a60b48bb2d","status":"OPEN","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net","datanodes":["ozone-topology_datanode_4_1.ozone-topology_net"],"lastLeaderElection":0,"duration":177155,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0}]}</msg>
<status status="PASS" starttime="20221116 09:32:06.715" endtime="20221116 09:32:06.717"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221116 09:32:06.719" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221116 09:32:06.717" endtime="20221116 09:32:06.719"/>
</kw>
<status status="PASS" starttime="20221116 09:32:06.675" endtime="20221116 09:32:06.720"/>
</kw>
<msg timestamp="20221116 09:32:06.720" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221116 09:32:06.675" endtime="20221116 09:32:06.720"/>
</kw>
<msg timestamp="20221116 09:32:06.720" level="INFO">${result} = {"totalCount":10,"pipelines":[{"pipelineId":"e3a4d4f0-24f2-43d4-8c5e-152e2513b362","status":"OPEN","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net","datanodes":["ozone-topology_datanode_6...</msg>
<status status="PASS" starttime="20221116 09:32:06.673" endtime="20221116 09:32:06.721"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>pipelines</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221116 09:32:06.721" endtime="20221116 09:32:06.721"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221116 09:32:06.721" endtime="20221116 09:32:06.722"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OPEN</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221116 09:32:06.722" endtime="20221116 09:32:06.722"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221116 09:32:06.722" endtime="20221116 09:32:06.723"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221116 09:32:06.723" endtime="20221116 09:32:06.723"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221116 09:32:06.724" endtime="20221116 09:32:06.724"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/clusterState</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221116 09:32:06.730" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20221116 09:32:06.798" level="INFO">${rc} = 0</msg>
<msg timestamp="20221116 09:32:06.798" level="INFO">${output} = {"pipelines":10,"totalDatanodes":6,"healthyDatanodes":6,"storageReport":{"capacity":535783858176,"used":79896,"remaining":164457775104},"containers":3,"missingContainers":0,"volumes":3,"buckets":2,"ke...</msg>
<status status="PASS" starttime="20221116 09:32:06.726" endtime="20221116 09:32:06.798"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221116 09:32:06.801" level="INFO">{"pipelines":10,"totalDatanodes":6,"healthyDatanodes":6,"storageReport":{"capacity":535783858176,"used":79896,"remaining":164457775104},"containers":3,"missingContainers":0,"volumes":3,"buckets":2,"keys":11}</msg>
<status status="PASS" starttime="20221116 09:32:06.800" endtime="20221116 09:32:06.802"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221116 09:32:06.802" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221116 09:32:06.802" endtime="20221116 09:32:06.804"/>
</kw>
<status status="PASS" starttime="20221116 09:32:06.725" endtime="20221116 09:32:06.804"/>
</kw>
<msg timestamp="20221116 09:32:06.804" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221116 09:32:06.725" endtime="20221116 09:32:06.805"/>
</kw>
<msg timestamp="20221116 09:32:06.805" level="INFO">${result} = {"pipelines":10,"totalDatanodes":6,"healthyDatanodes":6,"storageReport":{"capacity":535783858176,"used":79896,"remaining":164457775104},"containers":3,"missingContainers":0,"volumes":3,"buckets":2,"ke...</msg>
<status status="PASS" starttime="20221116 09:32:06.724" endtime="20221116 09:32:06.805"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"totalDatanodes\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221116 09:32:06.805" endtime="20221116 09:32:06.806"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"healthyDatanodes\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221116 09:32:06.806" endtime="20221116 09:32:06.807"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"pipelines\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221116 09:32:06.807" endtime="20221116 09:32:06.812"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers/1/replicaHistory</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221116 09:32:06.818" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers/1/replicaHistory 2&gt;&amp;1'.</msg>
<msg timestamp="20221116 09:32:06.852" level="INFO">${rc} = 0</msg>
<msg timestamp="20221116 09:32:06.852" level="INFO">${output} = [{"containerId":1,"datanodeUuid":"4f3af55b-f06f-49a1-8a23-7b3480ac7f70","datanodeHost":"ozone-topology_datanode_5_1.ozone-topology_net","firstSeenTime":1668591008175,"lastSeenTime":1668591008175,"last...</msg>
<status status="PASS" starttime="20221116 09:32:06.814" endtime="20221116 09:32:06.852"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221116 09:32:06.853" level="INFO">[{"containerId":1,"datanodeUuid":"4f3af55b-f06f-49a1-8a23-7b3480ac7f70","datanodeHost":"ozone-topology_datanode_5_1.ozone-topology_net","firstSeenTime":1668591008175,"lastSeenTime":1668591008175,"lastBcsId":0},{"containerId":1,"datanodeUuid":"c9b44257-edd4-4463-a855-1f94dd90058c","datanodeHost":"ozone-topology_datanode_6_1.ozone-topology_net","firstSeenTime":1668591008174,"lastSeenTime":1668591008174,"lastBcsId":0},{"containerId":1,"datanodeUuid":"c2521899-2273-433f-afbe-e579deee31b2","datanodeHost":"ozone-topology_datanode_3_1.ozone-topology_net","firstSeenTime":1668591007867,"lastSeenTime":1668591007867,"lastBcsId":0}]</msg>
<status status="PASS" starttime="20221116 09:32:06.852" endtime="20221116 09:32:06.854"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221116 09:32:06.855" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221116 09:32:06.854" endtime="20221116 09:32:06.855"/>
</kw>
<status status="PASS" starttime="20221116 09:32:06.814" endtime="20221116 09:32:06.860"/>
</kw>
<msg timestamp="20221116 09:32:06.861" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221116 09:32:06.813" endtime="20221116 09:32:06.861"/>
</kw>
<msg timestamp="20221116 09:32:06.862" level="INFO">${result} = [{"containerId":1,"datanodeUuid":"4f3af55b-f06f-49a1-8a23-7b3480ac7f70","datanodeHost":"ozone-topology_datanode_5_1.ozone-topology_net","firstSeenTime":1668591008175,"lastSeenTime":1668591008175,"last...</msg>
<status status="PASS" starttime="20221116 09:32:06.812" endtime="20221116 09:32:06.862"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"containerId\":1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221116 09:32:06.862" endtime="20221116 09:32:06.863"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221116 09:32:06.591" endtime="20221116 09:32:06.864"/>
</test>
<test id="s1-s2-s1-t3" name="Check if Recon Web UI is up" line="88">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221116 09:32:06.867" endtime="20221116 09:32:06.868"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${ENDPOINT_URL}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221116 09:32:06.875" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20221116 09:32:06.910" level="INFO">${rc} = 0</msg>
<msg timestamp="20221116 09:32:06.910" level="INFO">${output} = &lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" ...</msg>
<status status="PASS" starttime="20221116 09:32:06.871" endtime="20221116 09:32:06.910"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221116 09:32:06.912" level="INFO">&lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" content="#000000"/&gt;&lt;link rel="manifest" href="/manifest.json"/&gt;&lt;link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto:300,400,500"/&gt;&lt;title&gt;Ozone Recon&lt;/title&gt;&lt;link href="/static/css/2.7465223f.chunk.css" rel="stylesheet"&gt;&lt;link href="/static/css/main.0c211d12.chunk.css" rel="stylesheet"&gt;&lt;/head&gt;&lt;body&gt;&lt;noscript&gt;You need to enable JavaScript to run this app.&lt;/noscript&gt;&lt;div id="root"&gt;&lt;/div&gt;&lt;script&gt;!function(e){function r(r){for(var n,l,f=r[0],i=r[1],a=r[2],p=0,s=[];p&lt;f.length;p++)l=f[p],Object.prototype.hasOwnProperty.call(o,l)&amp;&amp;o[l]&amp;&amp;s.push(o[l][0]),o[l]=0;for(n in i)Object.prototype.hasOwnProperty.call(i,n)&amp;&amp;(e[n]=i[n]);for(c&amp;&amp;c(r);s.length;)s.shift()();return u.push.apply(u,a||[]),t()}function t(){for(var e,r=0;r&lt;u.length;r++){for(var t=u[r],n=!0,f=1;f&lt;t.length;f++){var i=t[f];0!==o[i]&amp;&amp;(n=!1)}n&amp;&amp;(u.splice(r--,1),e=l(l.s=t[0]))}return e}var n={},o={1:0},u=[];function l(r){if(n[r])return n[r].exports;var t=n[r]={i:r,l:!1,exports:{}};return e[r].call(t.exports,t,t.exports,l),t.l=!0,t.exports}l.m=e,l.c=n,l.d=function(e,r,t){l.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:t})},l.r=function(e){"undefined"!=typeof Symbol&amp;&amp;Symbol.toStringTag&amp;&amp;Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},l.t=function(e,r){if(1&amp;r&amp;&amp;(e=l(e)),8&amp;r)return e;if(4&amp;r&amp;&amp;"object"==typeof e&amp;&amp;e&amp;&amp;e.__esModule)return e;var t=Object.create(null);if(l.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&amp;r&amp;&amp;"string"!=typeof e)for(var n in e)l.d(t,n,function(r){return e[r]}.bind(null,n));return t},l.n=function(e){var r=e&amp;&amp;e.__esModule?function(){return e.default}:function(){return e};return l.d(r,"a",r),r},l.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},l.p="/";var f=this["webpackJsonpozone-recon"]=this["webpackJsonpozone-recon"]||[],i=f.push.bind(f);f.push=r,f=f.slice();for(var a=0;a&lt;f.length;a++)r(f[a]);var c=i;t()}([])&lt;/script&gt;&lt;script src="/static/js/2.f3fa3186.chunk.js"&gt;&lt;/script&gt;&lt;script src="/static/js/main.9ea83dd9.chunk.js"&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;</msg>
<status status="PASS" starttime="20221116 09:32:06.911" endtime="20221116 09:32:06.912"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221116 09:32:06.913" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221116 09:32:06.912" endtime="20221116 09:32:06.913"/>
</kw>
<status status="PASS" starttime="20221116 09:32:06.870" endtime="20221116 09:32:06.913"/>
</kw>
<msg timestamp="20221116 09:32:06.913" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221116 09:32:06.870" endtime="20221116 09:32:06.914"/>
</kw>
<msg timestamp="20221116 09:32:06.914" level="INFO">${result} = &lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" ...</msg>
<status status="PASS" starttime="20221116 09:32:06.868" endtime="20221116 09:32:06.914"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Ozone Recon</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221116 09:32:06.914" endtime="20221116 09:32:06.915"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221116 09:32:06.866" endtime="20221116 09:32:06.916"/>
</test>
<test id="s1-s2-s1-t4" name="Check web UI access" line="93">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221116 09:32:06.927" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20221116 09:32:06.929" level="INFO">${rc} = 0</msg>
<msg timestamp="20221116 09:32:06.929" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221116 09:32:06.919" endtime="20221116 09:32:06.929"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221116 09:32:06.931" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221116 09:32:06.930" endtime="20221116 09:32:06.931"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221116 09:32:06.932" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221116 09:32:06.931" endtime="20221116 09:32:06.932"/>
</kw>
<status status="PASS" starttime="20221116 09:32:06.918" endtime="20221116 09:32:06.932"/>
</kw>
<msg timestamp="20221116 09:32:06.932" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221116 09:32:06.918" endtime="20221116 09:32:06.933"/>
</kw>
<status status="PASS" starttime="20221116 09:32:06.917" endtime="20221116 09:32:06.933"/>
</kw>
<kw name="Check http return code">
<arg>${ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221116 09:32:06.941" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20221116 09:32:06.955" level="INFO">${rc} = 0</msg>
<msg timestamp="20221116 09:32:06.955" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221116 09:32:06.936" endtime="20221116 09:32:06.955"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221116 09:32:06.957" level="INFO">200</msg>
<status status="PASS" starttime="20221116 09:32:06.956" endtime="20221116 09:32:06.957"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221116 09:32:06.959" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221116 09:32:06.958" endtime="20221116 09:32:06.959"/>
</kw>
<status status="PASS" starttime="20221116 09:32:06.935" endtime="20221116 09:32:06.959"/>
</kw>
<msg timestamp="20221116 09:32:06.959" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221116 09:32:06.934" endtime="20221116 09:32:06.961"/>
</kw>
<msg timestamp="20221116 09:32:06.962" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221116 09:32:06.934" endtime="20221116 09:32:06.962"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221116 09:32:06.963" endtime="20221116 09:32:06.963"/>
</kw>
<status status="NOT RUN" starttime="20221116 09:32:06.962" endtime="20221116 09:32:06.963"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221116 09:32:06.963" endtime="20221116 09:32:06.965"/>
</kw>
<status status="PASS" starttime="20221116 09:32:06.963" endtime="20221116 09:32:06.965"/>
</branch>
<status status="PASS" starttime="20221116 09:32:06.962" endtime="20221116 09:32:06.965"/>
</if>
<status status="PASS" starttime="20221116 09:32:06.933" endtime="20221116 09:32:06.965"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221116 09:32:06.966" endtime="20221116 09:32:06.966"/>
</kw>
<status status="PASS" starttime="20221116 09:32:06.965" endtime="20221116 09:32:06.967"/>
</kw>
<kw name="Check http return code">
<arg>${ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221116 09:32:06.974" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20221116 09:32:06.991" level="INFO">${rc} = 0</msg>
<msg timestamp="20221116 09:32:06.991" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221116 09:32:06.971" endtime="20221116 09:32:06.991"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221116 09:32:06.993" level="INFO">200</msg>
<status status="PASS" starttime="20221116 09:32:06.992" endtime="20221116 09:32:06.993"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221116 09:32:06.994" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221116 09:32:06.993" endtime="20221116 09:32:06.994"/>
</kw>
<status status="PASS" starttime="20221116 09:32:06.970" endtime="20221116 09:32:06.994"/>
</kw>
<msg timestamp="20221116 09:32:06.994" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221116 09:32:06.969" endtime="20221116 09:32:06.995"/>
</kw>
<msg timestamp="20221116 09:32:06.995" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221116 09:32:06.969" endtime="20221116 09:32:06.995"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221116 09:32:06.996" endtime="20221116 09:32:06.996"/>
</kw>
<status status="NOT RUN" starttime="20221116 09:32:06.996" endtime="20221116 09:32:06.996"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221116 09:32:06.997" endtime="20221116 09:32:06.997"/>
</kw>
<status status="PASS" starttime="20221116 09:32:06.996" endtime="20221116 09:32:06.997"/>
</branch>
<status status="PASS" starttime="20221116 09:32:06.996" endtime="20221116 09:32:06.997"/>
</if>
<status status="PASS" starttime="20221116 09:32:06.967" endtime="20221116 09:32:06.997"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221116 09:32:06.917" endtime="20221116 09:32:06.998"/>
</test>
<test id="s1-s2-s1-t5" name="Check admin only api access" line="101">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221116 09:32:07.009" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20221116 09:32:07.016" level="INFO">${rc} = 0</msg>
<msg timestamp="20221116 09:32:07.016" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221116 09:32:07.005" endtime="20221116 09:32:07.016"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221116 09:32:07.018" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221116 09:32:07.016" endtime="20221116 09:32:07.018"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221116 09:32:07.019" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221116 09:32:07.018" endtime="20221116 09:32:07.019"/>
</kw>
<status status="PASS" starttime="20221116 09:32:07.004" endtime="20221116 09:32:07.019"/>
</kw>
<msg timestamp="20221116 09:32:07.019" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221116 09:32:07.004" endtime="20221116 09:32:07.020"/>
</kw>
<status status="PASS" starttime="20221116 09:32:07.002" endtime="20221116 09:32:07.020"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221116 09:32:07.026" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20221116 09:32:07.045" level="INFO">${rc} = 0</msg>
<msg timestamp="20221116 09:32:07.045" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221116 09:32:07.023" endtime="20221116 09:32:07.045"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221116 09:32:07.047" level="INFO">200</msg>
<status status="PASS" starttime="20221116 09:32:07.046" endtime="20221116 09:32:07.047"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221116 09:32:07.048" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221116 09:32:07.047" endtime="20221116 09:32:07.048"/>
</kw>
<status status="PASS" starttime="20221116 09:32:07.022" endtime="20221116 09:32:07.048"/>
</kw>
<msg timestamp="20221116 09:32:07.049" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221116 09:32:07.022" endtime="20221116 09:32:07.049"/>
</kw>
<msg timestamp="20221116 09:32:07.049" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221116 09:32:07.021" endtime="20221116 09:32:07.049"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221116 09:32:07.050" endtime="20221116 09:32:07.050"/>
</kw>
<status status="NOT RUN" starttime="20221116 09:32:07.050" endtime="20221116 09:32:07.050"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221116 09:32:07.050" endtime="20221116 09:32:07.051"/>
</kw>
<status status="PASS" starttime="20221116 09:32:07.050" endtime="20221116 09:32:07.051"/>
</branch>
<status status="PASS" starttime="20221116 09:32:07.050" endtime="20221116 09:32:07.051"/>
</if>
<status status="PASS" starttime="20221116 09:32:07.021" endtime="20221116 09:32:07.051"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221116 09:32:07.052" endtime="20221116 09:32:07.052"/>
</kw>
<status status="PASS" starttime="20221116 09:32:07.051" endtime="20221116 09:32:07.052"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221116 09:32:07.058" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20221116 09:32:07.081" level="INFO">${rc} = 0</msg>
<msg timestamp="20221116 09:32:07.085" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221116 09:32:07.054" endtime="20221116 09:32:07.085"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221116 09:32:07.087" level="INFO">200</msg>
<status status="PASS" starttime="20221116 09:32:07.086" endtime="20221116 09:32:07.087"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221116 09:32:07.088" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221116 09:32:07.087" endtime="20221116 09:32:07.088"/>
</kw>
<status status="PASS" starttime="20221116 09:32:07.054" endtime="20221116 09:32:07.089"/>
</kw>
<msg timestamp="20221116 09:32:07.089" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221116 09:32:07.053" endtime="20221116 09:32:07.089"/>
</kw>
<msg timestamp="20221116 09:32:07.090" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221116 09:32:07.053" endtime="20221116 09:32:07.090"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221116 09:32:07.091" endtime="20221116 09:32:07.091"/>
</kw>
<status status="NOT RUN" starttime="20221116 09:32:07.090" endtime="20221116 09:32:07.091"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221116 09:32:07.091" endtime="20221116 09:32:07.092"/>
</kw>
<status status="PASS" starttime="20221116 09:32:07.091" endtime="20221116 09:32:07.092"/>
</branch>
<status status="PASS" starttime="20221116 09:32:07.090" endtime="20221116 09:32:07.092"/>
</if>
<status status="PASS" starttime="20221116 09:32:07.052" endtime="20221116 09:32:07.092"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221116 09:32:07.093" endtime="20221116 09:32:07.093"/>
</kw>
<status status="PASS" starttime="20221116 09:32:07.092" endtime="20221116 09:32:07.093"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221116 09:32:07.100" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20221116 09:32:07.126" level="INFO">${rc} = 0</msg>
<msg timestamp="20221116 09:32:07.126" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221116 09:32:07.096" endtime="20221116 09:32:07.126"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221116 09:32:07.128" level="INFO">200</msg>
<status status="PASS" starttime="20221116 09:32:07.127" endtime="20221116 09:32:07.128"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221116 09:32:07.129" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221116 09:32:07.129" endtime="20221116 09:32:07.129"/>
</kw>
<status status="PASS" starttime="20221116 09:32:07.095" endtime="20221116 09:32:07.130"/>
</kw>
<msg timestamp="20221116 09:32:07.130" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221116 09:32:07.095" endtime="20221116 09:32:07.131"/>
</kw>
<msg timestamp="20221116 09:32:07.131" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221116 09:32:07.094" endtime="20221116 09:32:07.131"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221116 09:32:07.132" endtime="20221116 09:32:07.132"/>
</kw>
<status status="NOT RUN" starttime="20221116 09:32:07.131" endtime="20221116 09:32:07.132"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221116 09:32:07.132" endtime="20221116 09:32:07.133"/>
</kw>
<status status="PASS" starttime="20221116 09:32:07.132" endtime="20221116 09:32:07.133"/>
</branch>
<status status="PASS" starttime="20221116 09:32:07.131" endtime="20221116 09:32:07.133"/>
</if>
<status status="PASS" starttime="20221116 09:32:07.093" endtime="20221116 09:32:07.133"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221116 09:32:07.134" endtime="20221116 09:32:07.134"/>
</kw>
<status status="PASS" starttime="20221116 09:32:07.133" endtime="20221116 09:32:07.134"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221116 09:32:07.141" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20221116 09:32:07.158" level="INFO">${rc} = 0</msg>
<msg timestamp="20221116 09:32:07.158" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221116 09:32:07.136" endtime="20221116 09:32:07.158"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221116 09:32:07.160" level="INFO">200</msg>
<status status="PASS" starttime="20221116 09:32:07.159" endtime="20221116 09:32:07.160"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221116 09:32:07.161" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221116 09:32:07.160" endtime="20221116 09:32:07.161"/>
</kw>
<status status="PASS" starttime="20221116 09:32:07.136" endtime="20221116 09:32:07.161"/>
</kw>
<msg timestamp="20221116 09:32:07.161" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221116 09:32:07.135" endtime="20221116 09:32:07.163"/>
</kw>
<msg timestamp="20221116 09:32:07.164" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221116 09:32:07.135" endtime="20221116 09:32:07.164"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221116 09:32:07.165" endtime="20221116 09:32:07.165"/>
</kw>
<status status="NOT RUN" starttime="20221116 09:32:07.164" endtime="20221116 09:32:07.165"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221116 09:32:07.165" endtime="20221116 09:32:07.166"/>
</kw>
<status status="PASS" starttime="20221116 09:32:07.165" endtime="20221116 09:32:07.166"/>
</branch>
<status status="PASS" starttime="20221116 09:32:07.164" endtime="20221116 09:32:07.166"/>
</if>
<status status="PASS" starttime="20221116 09:32:07.134" endtime="20221116 09:32:07.166"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221116 09:32:06.999" endtime="20221116 09:32:07.167"/>
</test>
<test id="s1-s2-s1-t6" name="Check unhealthy, (admin) api access" line="114">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221116 09:32:07.175" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20221116 09:32:07.179" level="INFO">${rc} = 0</msg>
<msg timestamp="20221116 09:32:07.179" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221116 09:32:07.171" endtime="20221116 09:32:07.180"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221116 09:32:07.181" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221116 09:32:07.180" endtime="20221116 09:32:07.181"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221116 09:32:07.182" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221116 09:32:07.181" endtime="20221116 09:32:07.182"/>
</kw>
<status status="PASS" starttime="20221116 09:32:07.170" endtime="20221116 09:32:07.182"/>
</kw>
<msg timestamp="20221116 09:32:07.182" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221116 09:32:07.170" endtime="20221116 09:32:07.183"/>
</kw>
<status status="PASS" starttime="20221116 09:32:07.169" endtime="20221116 09:32:07.183"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221116 09:32:07.188" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20221116 09:32:07.253" level="INFO">${rc} = 0</msg>
<msg timestamp="20221116 09:32:07.253" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221116 09:32:07.185" endtime="20221116 09:32:07.254"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221116 09:32:07.255" level="INFO">200</msg>
<status status="PASS" starttime="20221116 09:32:07.254" endtime="20221116 09:32:07.255"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221116 09:32:07.256" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221116 09:32:07.255" endtime="20221116 09:32:07.256"/>
</kw>
<status status="PASS" starttime="20221116 09:32:07.185" endtime="20221116 09:32:07.257"/>
</kw>
<msg timestamp="20221116 09:32:07.257" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221116 09:32:07.184" endtime="20221116 09:32:07.257"/>
</kw>
<msg timestamp="20221116 09:32:07.258" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221116 09:32:07.184" endtime="20221116 09:32:07.258"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221116 09:32:07.259" endtime="20221116 09:32:07.259"/>
</kw>
<status status="NOT RUN" starttime="20221116 09:32:07.258" endtime="20221116 09:32:07.259"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221116 09:32:07.259" endtime="20221116 09:32:07.259"/>
</kw>
<status status="PASS" starttime="20221116 09:32:07.259" endtime="20221116 09:32:07.259"/>
</branch>
<status status="PASS" starttime="20221116 09:32:07.258" endtime="20221116 09:32:07.259"/>
</if>
<status status="PASS" starttime="20221116 09:32:07.183" endtime="20221116 09:32:07.260"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221116 09:32:07.261" endtime="20221116 09:32:07.261"/>
</kw>
<status status="PASS" starttime="20221116 09:32:07.260" endtime="20221116 09:32:07.261"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221116 09:32:07.276" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20221116 09:32:07.300" level="INFO">${rc} = 0</msg>
<msg timestamp="20221116 09:32:07.301" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221116 09:32:07.265" endtime="20221116 09:32:07.301"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221116 09:32:07.303" level="INFO">200</msg>
<status status="PASS" starttime="20221116 09:32:07.302" endtime="20221116 09:32:07.303"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221116 09:32:07.305" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221116 09:32:07.304" endtime="20221116 09:32:07.305"/>
</kw>
<status status="PASS" starttime="20221116 09:32:07.264" endtime="20221116 09:32:07.306"/>
</kw>
<msg timestamp="20221116 09:32:07.306" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221116 09:32:07.263" endtime="20221116 09:32:07.307"/>
</kw>
<msg timestamp="20221116 09:32:07.307" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221116 09:32:07.262" endtime="20221116 09:32:07.308"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221116 09:32:07.309" endtime="20221116 09:32:07.309"/>
</kw>
<status status="NOT RUN" starttime="20221116 09:32:07.308" endtime="20221116 09:32:07.309"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221116 09:32:07.310" endtime="20221116 09:32:07.310"/>
</kw>
<status status="PASS" starttime="20221116 09:32:07.309" endtime="20221116 09:32:07.310"/>
</branch>
<status status="PASS" starttime="20221116 09:32:07.308" endtime="20221116 09:32:07.310"/>
</if>
<status status="PASS" starttime="20221116 09:32:07.261" endtime="20221116 09:32:07.311"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221116 09:32:07.311" endtime="20221116 09:32:07.312"/>
</kw>
<status status="PASS" starttime="20221116 09:32:07.311" endtime="20221116 09:32:07.312"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221116 09:32:07.318" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20221116 09:32:07.336" level="INFO">${rc} = 0</msg>
<msg timestamp="20221116 09:32:07.336" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221116 09:32:07.315" endtime="20221116 09:32:07.336"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221116 09:32:07.338" level="INFO">200</msg>
<status status="PASS" starttime="20221116 09:32:07.337" endtime="20221116 09:32:07.338"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221116 09:32:07.338" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221116 09:32:07.338" endtime="20221116 09:32:07.339"/>
</kw>
<status status="PASS" starttime="20221116 09:32:07.314" endtime="20221116 09:32:07.339"/>
</kw>
<msg timestamp="20221116 09:32:07.339" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221116 09:32:07.314" endtime="20221116 09:32:07.340"/>
</kw>
<msg timestamp="20221116 09:32:07.341" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221116 09:32:07.313" endtime="20221116 09:32:07.341"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221116 09:32:07.341" endtime="20221116 09:32:07.341"/>
</kw>
<status status="NOT RUN" starttime="20221116 09:32:07.341" endtime="20221116 09:32:07.342"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221116 09:32:07.342" endtime="20221116 09:32:07.342"/>
</kw>
<status status="PASS" starttime="20221116 09:32:07.342" endtime="20221116 09:32:07.342"/>
</branch>
<status status="PASS" starttime="20221116 09:32:07.341" endtime="20221116 09:32:07.342"/>
</if>
<status status="PASS" starttime="20221116 09:32:07.312" endtime="20221116 09:32:07.343"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221116 09:32:07.344" endtime="20221116 09:32:07.344"/>
</kw>
<status status="PASS" starttime="20221116 09:32:07.343" endtime="20221116 09:32:07.344"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221116 09:32:07.350" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20221116 09:32:07.379" level="INFO">${rc} = 0</msg>
<msg timestamp="20221116 09:32:07.379" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221116 09:32:07.346" endtime="20221116 09:32:07.379"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221116 09:32:07.381" level="INFO">200</msg>
<status status="PASS" starttime="20221116 09:32:07.380" endtime="20221116 09:32:07.381"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221116 09:32:07.382" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221116 09:32:07.381" endtime="20221116 09:32:07.382"/>
</kw>
<status status="PASS" starttime="20221116 09:32:07.346" endtime="20221116 09:32:07.383"/>
</kw>
<msg timestamp="20221116 09:32:07.383" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221116 09:32:07.346" endtime="20221116 09:32:07.383"/>
</kw>
<msg timestamp="20221116 09:32:07.384" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221116 09:32:07.345" endtime="20221116 09:32:07.384"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221116 09:32:07.385" endtime="20221116 09:32:07.385"/>
</kw>
<status status="NOT RUN" starttime="20221116 09:32:07.384" endtime="20221116 09:32:07.385"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221116 09:32:07.385" endtime="20221116 09:32:07.385"/>
</kw>
<status status="PASS" starttime="20221116 09:32:07.385" endtime="20221116 09:32:07.386"/>
</branch>
<status status="PASS" starttime="20221116 09:32:07.384" endtime="20221116 09:32:07.386"/>
</if>
<status status="PASS" starttime="20221116 09:32:07.344" endtime="20221116 09:32:07.386"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221116 09:32:07.168" endtime="20221116 09:32:07.386"/>
</test>
<test id="s1-s2-s1-t7" name="Check normal api access" line="127">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221116 09:32:07.394" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20221116 09:32:07.404" level="INFO">${rc} = 0</msg>
<msg timestamp="20221116 09:32:07.405" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221116 09:32:07.390" endtime="20221116 09:32:07.405"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221116 09:32:07.406" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221116 09:32:07.405" endtime="20221116 09:32:07.406"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221116 09:32:07.407" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221116 09:32:07.406" endtime="20221116 09:32:07.407"/>
</kw>
<status status="PASS" starttime="20221116 09:32:07.390" endtime="20221116 09:32:07.407"/>
</kw>
<msg timestamp="20221116 09:32:07.408" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221116 09:32:07.390" endtime="20221116 09:32:07.409"/>
</kw>
<status status="PASS" starttime="20221116 09:32:07.389" endtime="20221116 09:32:07.409"/>
</kw>
<kw name="Check http return code">
<arg>${NON_ADMIN_API_ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221116 09:32:07.416" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20221116 09:32:07.456" level="INFO">${rc} = 0</msg>
<msg timestamp="20221116 09:32:07.456" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221116 09:32:07.412" endtime="20221116 09:32:07.456"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221116 09:32:07.457" level="INFO">200</msg>
<status status="PASS" starttime="20221116 09:32:07.456" endtime="20221116 09:32:07.458"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221116 09:32:07.459" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221116 09:32:07.458" endtime="20221116 09:32:07.459"/>
</kw>
<status status="PASS" starttime="20221116 09:32:07.411" endtime="20221116 09:32:07.460"/>
</kw>
<msg timestamp="20221116 09:32:07.460" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221116 09:32:07.411" endtime="20221116 09:32:07.461"/>
</kw>
<msg timestamp="20221116 09:32:07.461" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221116 09:32:07.410" endtime="20221116 09:32:07.461"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221116 09:32:07.462" endtime="20221116 09:32:07.462"/>
</kw>
<status status="NOT RUN" starttime="20221116 09:32:07.462" endtime="20221116 09:32:07.462"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221116 09:32:07.462" endtime="20221116 09:32:07.463"/>
</kw>
<status status="PASS" starttime="20221116 09:32:07.462" endtime="20221116 09:32:07.463"/>
</branch>
<status status="PASS" starttime="20221116 09:32:07.461" endtime="20221116 09:32:07.463"/>
</if>
<status status="PASS" starttime="20221116 09:32:07.409" endtime="20221116 09:32:07.463"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221116 09:32:07.465" endtime="20221116 09:32:07.465"/>
</kw>
<status status="PASS" starttime="20221116 09:32:07.464" endtime="20221116 09:32:07.465"/>
</kw>
<kw name="Check http return code">
<arg>${NON_ADMIN_API_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221116 09:32:07.473" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20221116 09:32:07.505" level="INFO">${rc} = 0</msg>
<msg timestamp="20221116 09:32:07.506" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221116 09:32:07.468" endtime="20221116 09:32:07.506"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221116 09:32:07.513" level="INFO">200</msg>
<status status="PASS" starttime="20221116 09:32:07.506" endtime="20221116 09:32:07.513"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221116 09:32:07.514" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221116 09:32:07.514" endtime="20221116 09:32:07.514"/>
</kw>
<status status="PASS" starttime="20221116 09:32:07.467" endtime="20221116 09:32:07.515"/>
</kw>
<msg timestamp="20221116 09:32:07.515" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221116 09:32:07.467" endtime="20221116 09:32:07.516"/>
</kw>
<msg timestamp="20221116 09:32:07.516" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221116 09:32:07.466" endtime="20221116 09:32:07.516"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221116 09:32:07.517" endtime="20221116 09:32:07.517"/>
</kw>
<status status="NOT RUN" starttime="20221116 09:32:07.516" endtime="20221116 09:32:07.517"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221116 09:32:07.517" endtime="20221116 09:32:07.518"/>
</kw>
<status status="PASS" starttime="20221116 09:32:07.517" endtime="20221116 09:32:07.518"/>
</branch>
<status status="PASS" starttime="20221116 09:32:07.516" endtime="20221116 09:32:07.518"/>
</if>
<status status="PASS" starttime="20221116 09:32:07.465" endtime="20221116 09:32:07.518"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221116 09:32:07.388" endtime="20221116 09:32:07.518"/>
</test>
<doc>Smoke test to start cluster with docker-compose environments.</doc>
<status status="PASS" starttime="20221116 09:30:53.634" endtime="20221116 09:32:07.524"/>
</suite>
<suite id="s1-s2-s2" name="Recon-Nssummary" source="/opt/hadoop/smoketest/recon/recon-nssummary.robot">
<test id="s1-s2-s2-t1" name="Check volume creation" line="99">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221116 09:32:07.543" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20221116 09:32:07.548" level="INFO">${rc} = 0</msg>
<msg timestamp="20221116 09:32:07.548" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221116 09:32:07.540" endtime="20221116 09:32:07.548"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221116 09:32:07.550" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221116 09:32:07.549" endtime="20221116 09:32:07.550"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221116 09:32:07.552" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221116 09:32:07.551" endtime="20221116 09:32:07.552"/>
</kw>
<status status="PASS" starttime="20221116 09:32:07.539" endtime="20221116 09:32:07.552"/>
</kw>
<msg timestamp="20221116 09:32:07.552" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221116 09:32:07.539" endtime="20221116 09:32:07.553"/>
</kw>
<status status="PASS" starttime="20221116 09:32:07.538" endtime="20221116 09:32:07.553"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221116 09:32:07.554" endtime="20221116 09:32:07.555"/>
</kw>
<status status="PASS" starttime="20221116 09:32:07.554" endtime="20221116 09:32:07.555"/>
</kw>
<kw name="Create volume">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20221116 09:32:07.556" level="INFO">${random} = jsaeq</msg>
<status status="PASS" starttime="20221116 09:32:07.556" endtime="20221116 09:32:07.556"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${VOLUME}</arg>
<arg>vol-${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20221116 09:32:07.557" level="INFO">${VOLUME} = vol-jsaeq</msg>
<status status="PASS" starttime="20221116 09:32:07.557" endtime="20221116 09:32:07.557"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${VOLUME}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221116 09:32:07.563" level="INFO">Running command 'ozone sh volume create /vol-jsaeq 2&gt;&amp;1'.</msg>
<msg timestamp="20221116 09:32:12.838" level="INFO">${rc} = 0</msg>
<msg timestamp="20221116 09:32:12.838" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221116 09:32:07.559" endtime="20221116 09:32:12.838"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221116 09:32:12.840" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221116 09:32:12.839" endtime="20221116 09:32:12.840"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221116 09:32:12.841" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221116 09:32:12.840" endtime="20221116 09:32:12.841"/>
</kw>
<status status="PASS" starttime="20221116 09:32:07.558" endtime="20221116 09:32:12.841"/>
</kw>
<msg timestamp="20221116 09:32:12.841" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221116 09:32:07.558" endtime="20221116 09:32:12.842"/>
</kw>
<msg timestamp="20221116 09:32:12.842" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221116 09:32:07.557" endtime="20221116 09:32:12.842"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20221116 09:32:12.842" endtime="20221116 09:32:12.843"/>
</kw>
<status status="PASS" starttime="20221116 09:32:07.555" endtime="20221116 09:32:12.843"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221116 09:32:07.537" endtime="20221116 09:32:12.843"/>
</test>
<test id="s1-s2-s2-t2" name="Check bucket creation" line="104">
<kw name="Create bucket">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20221116 09:32:12.846" level="INFO">${random} = jylzr</msg>
<status status="PASS" starttime="20221116 09:32:12.846" endtime="20221116 09:32:12.846"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<arg>buc-${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20221116 09:32:12.847" level="INFO">${BUCKET} = buc-jylzr</msg>
<status status="PASS" starttime="20221116 09:32:12.847" endtime="20221116 09:32:12.847"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create -l ${BUCKET_LAYOUT} /${VOLUME}/${BUCKET}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221116 09:32:12.852" level="INFO">Running command 'ozone sh bucket create -l FILE_SYSTEM_OPTIMIZED /vol-jsaeq/buc-jylzr 2&gt;&amp;1'.</msg>
<msg timestamp="20221116 09:32:17.608" level="INFO">${rc} = 0</msg>
<msg timestamp="20221116 09:32:17.608" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221116 09:32:12.849" endtime="20221116 09:32:17.608"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221116 09:32:17.610" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221116 09:32:17.609" endtime="20221116 09:32:17.610"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221116 09:32:17.611" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221116 09:32:17.610" endtime="20221116 09:32:17.611"/>
</kw>
<status status="PASS" starttime="20221116 09:32:12.848" endtime="20221116 09:32:17.611"/>
</kw>
<msg timestamp="20221116 09:32:17.611" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221116 09:32:12.848" endtime="20221116 09:32:17.612"/>
</kw>
<msg timestamp="20221116 09:32:17.612" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221116 09:32:12.847" endtime="20221116 09:32:17.612"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20221116 09:32:17.612" endtime="20221116 09:32:17.613"/>
</kw>
<status status="PASS" starttime="20221116 09:32:12.845" endtime="20221116 09:32:17.613"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221116 09:32:12.844" endtime="20221116 09:32:17.613"/>
</test>
<test id="s1-s2-s2-t3" name="Check keys creation" line="107">
<kw name="Create keys">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put /${VOLUME}/${BUCKET}/file1 README.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221116 09:32:17.621" level="INFO">Running command 'ozone sh key put /vol-jsaeq/buc-jylzr/file1 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20221116 09:32:26.220" level="INFO">${rc} = 0</msg>
<msg timestamp="20221116 09:32:26.220" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221116 09:32:17.618" endtime="20221116 09:32:26.220"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221116 09:32:26.221" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221116 09:32:26.220" endtime="20221116 09:32:26.221"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221116 09:32:26.222" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221116 09:32:26.222" endtime="20221116 09:32:26.222"/>
</kw>
<status status="PASS" starttime="20221116 09:32:17.617" endtime="20221116 09:32:26.223"/>
</kw>
<msg timestamp="20221116 09:32:26.223" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221116 09:32:17.617" endtime="20221116 09:32:26.224"/>
</kw>
<msg timestamp="20221116 09:32:26.224" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221116 09:32:17.616" endtime="20221116 09:32:26.224"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20221116 09:32:26.225" endtime="20221116 09:32:26.225"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put /${VOLUME}/${BUCKET}/dir1/dir2/file2 HISTORY.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221116 09:32:26.230" level="INFO">Running command 'ozone sh key put /vol-jsaeq/buc-jylzr/dir1/dir2/file2 HISTORY.md 2&gt;&amp;1'.</msg>
<msg timestamp="20221116 09:32:34.319" level="INFO">${rc} = 0</msg>
<msg timestamp="20221116 09:32:34.319" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221116 09:32:26.227" endtime="20221116 09:32:34.319"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221116 09:32:34.322" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221116 09:32:34.320" endtime="20221116 09:32:34.322"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221116 09:32:34.323" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221116 09:32:34.322" endtime="20221116 09:32:34.324"/>
</kw>
<status status="PASS" starttime="20221116 09:32:26.226" endtime="20221116 09:32:34.324"/>
</kw>
<msg timestamp="20221116 09:32:34.324" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221116 09:32:26.226" endtime="20221116 09:32:34.325"/>
</kw>
<msg timestamp="20221116 09:32:34.325" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221116 09:32:26.225" endtime="20221116 09:32:34.325"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20221116 09:32:34.325" endtime="20221116 09:32:34.326"/>
</kw>
<status status="PASS" starttime="20221116 09:32:17.615" endtime="20221116 09:32:34.326"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221116 09:32:17.614" endtime="20221116 09:32:34.326"/>
</test>
<test id="s1-s2-s2-t4" name="Check Summary api access" line="110">
<kw name="Check Access">
<arg>${SUMMARY_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221116 09:32:34.335" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20221116 09:32:34.340" level="INFO">${rc} = 0</msg>
<msg timestamp="20221116 09:32:34.340" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221116 09:32:34.331" endtime="20221116 09:32:34.340"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221116 09:32:34.341" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221116 09:32:34.340" endtime="20221116 09:32:34.341"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221116 09:32:34.342" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221116 09:32:34.342" endtime="20221116 09:32:34.343"/>
</kw>
<status status="PASS" starttime="20221116 09:32:34.330" endtime="20221116 09:32:34.343"/>
</kw>
<msg timestamp="20221116 09:32:34.343" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221116 09:32:34.330" endtime="20221116 09:32:34.344"/>
</kw>
<status status="PASS" starttime="20221116 09:32:34.329" endtime="20221116 09:32:34.344"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221116 09:32:34.349" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221116 09:32:34.386" level="INFO">${rc} = 0</msg>
<msg timestamp="20221116 09:32:34.387" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221116 09:32:34.346" endtime="20221116 09:32:34.387"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221116 09:32:34.388" level="INFO">200</msg>
<status status="PASS" starttime="20221116 09:32:34.387" endtime="20221116 09:32:34.388"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221116 09:32:34.389" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221116 09:32:34.388" endtime="20221116 09:32:34.389"/>
</kw>
<status status="PASS" starttime="20221116 09:32:34.345" endtime="20221116 09:32:34.389"/>
</kw>
<msg timestamp="20221116 09:32:34.389" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221116 09:32:34.345" endtime="20221116 09:32:34.391"/>
</kw>
<msg timestamp="20221116 09:32:34.392" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221116 09:32:34.345" endtime="20221116 09:32:34.392"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221116 09:32:34.392" endtime="20221116 09:32:34.393"/>
</kw>
<status status="NOT RUN" starttime="20221116 09:32:34.392" endtime="20221116 09:32:34.393"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221116 09:32:34.393" endtime="20221116 09:32:34.393"/>
</kw>
<status status="PASS" starttime="20221116 09:32:34.393" endtime="20221116 09:32:34.393"/>
</branch>
<status status="PASS" starttime="20221116 09:32:34.392" endtime="20221116 09:32:34.393"/>
</if>
<status status="PASS" starttime="20221116 09:32:34.344" endtime="20221116 09:32:34.394"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221116 09:32:34.394" endtime="20221116 09:32:34.395"/>
</kw>
<status status="PASS" starttime="20221116 09:32:34.394" endtime="20221116 09:32:34.395"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221116 09:32:34.401" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221116 09:32:34.418" level="INFO">${rc} = 0</msg>
<msg timestamp="20221116 09:32:34.418" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221116 09:32:34.397" endtime="20221116 09:32:34.418"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221116 09:32:34.422" level="INFO">200</msg>
<status status="PASS" starttime="20221116 09:32:34.420" endtime="20221116 09:32:34.422"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221116 09:32:34.423" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221116 09:32:34.422" endtime="20221116 09:32:34.424"/>
</kw>
<status status="PASS" starttime="20221116 09:32:34.396" endtime="20221116 09:32:34.424"/>
</kw>
<msg timestamp="20221116 09:32:34.424" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221116 09:32:34.396" endtime="20221116 09:32:34.425"/>
</kw>
<msg timestamp="20221116 09:32:34.425" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221116 09:32:34.396" endtime="20221116 09:32:34.425"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221116 09:32:34.426" endtime="20221116 09:32:34.426"/>
</kw>
<status status="NOT RUN" starttime="20221116 09:32:34.426" endtime="20221116 09:32:34.426"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221116 09:32:34.426" endtime="20221116 09:32:34.427"/>
</kw>
<status status="PASS" starttime="20221116 09:32:34.426" endtime="20221116 09:32:34.427"/>
</branch>
<status status="PASS" starttime="20221116 09:32:34.425" endtime="20221116 09:32:34.427"/>
</if>
<status status="PASS" starttime="20221116 09:32:34.395" endtime="20221116 09:32:34.427"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221116 09:32:34.428" endtime="20221116 09:32:34.428"/>
</kw>
<status status="PASS" starttime="20221116 09:32:34.427" endtime="20221116 09:32:34.428"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221116 09:32:34.435" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221116 09:32:34.459" level="INFO">${rc} = 0</msg>
<msg timestamp="20221116 09:32:34.459" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221116 09:32:34.431" endtime="20221116 09:32:34.459"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221116 09:32:34.463" level="INFO">200</msg>
<status status="PASS" starttime="20221116 09:32:34.461" endtime="20221116 09:32:34.463"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221116 09:32:34.464" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221116 09:32:34.463" endtime="20221116 09:32:34.464"/>
</kw>
<status status="PASS" starttime="20221116 09:32:34.431" endtime="20221116 09:32:34.464"/>
</kw>
<msg timestamp="20221116 09:32:34.465" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221116 09:32:34.430" endtime="20221116 09:32:34.465"/>
</kw>
<msg timestamp="20221116 09:32:34.466" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221116 09:32:34.429" endtime="20221116 09:32:34.466"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221116 09:32:34.467" endtime="20221116 09:32:34.467"/>
</kw>
<status status="NOT RUN" starttime="20221116 09:32:34.466" endtime="20221116 09:32:34.467"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221116 09:32:34.467" endtime="20221116 09:32:34.468"/>
</kw>
<status status="PASS" starttime="20221116 09:32:34.467" endtime="20221116 09:32:34.468"/>
</branch>
<status status="PASS" starttime="20221116 09:32:34.466" endtime="20221116 09:32:34.468"/>
</if>
<status status="PASS" starttime="20221116 09:32:34.429" endtime="20221116 09:32:34.468"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221116 09:32:34.469" endtime="20221116 09:32:34.469"/>
</kw>
<status status="PASS" starttime="20221116 09:32:34.468" endtime="20221116 09:32:34.469"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221116 09:32:34.476" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221116 09:32:34.496" level="INFO">${rc} = 0</msg>
<msg timestamp="20221116 09:32:34.496" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221116 09:32:34.473" endtime="20221116 09:32:34.496"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221116 09:32:34.498" level="INFO">200</msg>
<status status="PASS" starttime="20221116 09:32:34.497" endtime="20221116 09:32:34.498"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221116 09:32:34.499" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221116 09:32:34.499" endtime="20221116 09:32:34.499"/>
</kw>
<status status="PASS" starttime="20221116 09:32:34.472" endtime="20221116 09:32:34.500"/>
</kw>
<msg timestamp="20221116 09:32:34.500" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221116 09:32:34.472" endtime="20221116 09:32:34.501"/>
</kw>
<msg timestamp="20221116 09:32:34.501" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221116 09:32:34.471" endtime="20221116 09:32:34.501"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221116 09:32:34.502" endtime="20221116 09:32:34.502"/>
</kw>
<status status="NOT RUN" starttime="20221116 09:32:34.502" endtime="20221116 09:32:34.502"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221116 09:32:34.503" endtime="20221116 09:32:34.503"/>
</kw>
<status status="PASS" starttime="20221116 09:32:34.503" endtime="20221116 09:32:34.503"/>
</branch>
<status status="PASS" starttime="20221116 09:32:34.502" endtime="20221116 09:32:34.503"/>
</if>
<status status="PASS" starttime="20221116 09:32:34.470" endtime="20221116 09:32:34.507"/>
</kw>
<status status="PASS" starttime="20221116 09:32:34.328" endtime="20221116 09:32:34.507"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221116 09:32:34.327" endtime="20221116 09:32:34.508"/>
</test>
<test id="s1-s2-s2-t5" name="Check Disk Usage api access" line="113">
<kw name="Check Access">
<arg>${DISK_USAGE_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221116 09:32:34.518" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20221116 09:32:34.524" level="INFO">${rc} = 0</msg>
<msg timestamp="20221116 09:32:34.524" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221116 09:32:34.514" endtime="20221116 09:32:34.524"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221116 09:32:34.526" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221116 09:32:34.525" endtime="20221116 09:32:34.526"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221116 09:32:34.527" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221116 09:32:34.526" endtime="20221116 09:32:34.527"/>
</kw>
<status status="PASS" starttime="20221116 09:32:34.513" endtime="20221116 09:32:34.528"/>
</kw>
<msg timestamp="20221116 09:32:34.528" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221116 09:32:34.512" endtime="20221116 09:32:34.529"/>
</kw>
<status status="PASS" starttime="20221116 09:32:34.512" endtime="20221116 09:32:34.529"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221116 09:32:34.536" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221116 09:32:34.565" level="INFO">${rc} = 0</msg>
<msg timestamp="20221116 09:32:34.565" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221116 09:32:34.533" endtime="20221116 09:32:34.565"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221116 09:32:34.567" level="INFO">200</msg>
<status status="PASS" starttime="20221116 09:32:34.566" endtime="20221116 09:32:34.567"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221116 09:32:34.568" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221116 09:32:34.567" endtime="20221116 09:32:34.569"/>
</kw>
<status status="PASS" starttime="20221116 09:32:34.532" endtime="20221116 09:32:34.569"/>
</kw>
<msg timestamp="20221116 09:32:34.569" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221116 09:32:34.532" endtime="20221116 09:32:34.570"/>
</kw>
<msg timestamp="20221116 09:32:34.571" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221116 09:32:34.530" endtime="20221116 09:32:34.572"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221116 09:32:34.572" endtime="20221116 09:32:34.572"/>
</kw>
<status status="NOT RUN" starttime="20221116 09:32:34.572" endtime="20221116 09:32:34.572"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221116 09:32:34.573" endtime="20221116 09:32:34.573"/>
</kw>
<status status="PASS" starttime="20221116 09:32:34.572" endtime="20221116 09:32:34.573"/>
</branch>
<status status="PASS" starttime="20221116 09:32:34.572" endtime="20221116 09:32:34.573"/>
</if>
<status status="PASS" starttime="20221116 09:32:34.529" endtime="20221116 09:32:34.573"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221116 09:32:34.574" endtime="20221116 09:32:34.575"/>
</kw>
<status status="PASS" starttime="20221116 09:32:34.574" endtime="20221116 09:32:34.575"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221116 09:32:34.581" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221116 09:32:34.600" level="INFO">${rc} = 0</msg>
<msg timestamp="20221116 09:32:34.600" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221116 09:32:34.577" endtime="20221116 09:32:34.600"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221116 09:32:34.602" level="INFO">200</msg>
<status status="PASS" starttime="20221116 09:32:34.601" endtime="20221116 09:32:34.602"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221116 09:32:34.603" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221116 09:32:34.603" endtime="20221116 09:32:34.603"/>
</kw>
<status status="PASS" starttime="20221116 09:32:34.577" endtime="20221116 09:32:34.604"/>
</kw>
<msg timestamp="20221116 09:32:34.604" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221116 09:32:34.576" endtime="20221116 09:32:34.604"/>
</kw>
<msg timestamp="20221116 09:32:34.605" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221116 09:32:34.576" endtime="20221116 09:32:34.605"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221116 09:32:34.613" endtime="20221116 09:32:34.613"/>
</kw>
<status status="NOT RUN" starttime="20221116 09:32:34.612" endtime="20221116 09:32:34.613"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221116 09:32:34.613" endtime="20221116 09:32:34.613"/>
</kw>
<status status="PASS" starttime="20221116 09:32:34.613" endtime="20221116 09:32:34.613"/>
</branch>
<status status="PASS" starttime="20221116 09:32:34.612" endtime="20221116 09:32:34.613"/>
</if>
<status status="PASS" starttime="20221116 09:32:34.575" endtime="20221116 09:32:34.614"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221116 09:32:34.614" endtime="20221116 09:32:34.615"/>
</kw>
<status status="PASS" starttime="20221116 09:32:34.614" endtime="20221116 09:32:34.615"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221116 09:32:34.622" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221116 09:32:34.640" level="INFO">${rc} = 0</msg>
<msg timestamp="20221116 09:32:34.641" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221116 09:32:34.617" endtime="20221116 09:32:34.641"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221116 09:32:34.643" level="INFO">200</msg>
<status status="PASS" starttime="20221116 09:32:34.641" endtime="20221116 09:32:34.644"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221116 09:32:34.644" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221116 09:32:34.644" endtime="20221116 09:32:34.644"/>
</kw>
<status status="PASS" starttime="20221116 09:32:34.616" endtime="20221116 09:32:34.645"/>
</kw>
<msg timestamp="20221116 09:32:34.645" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221116 09:32:34.616" endtime="20221116 09:32:34.646"/>
</kw>
<msg timestamp="20221116 09:32:34.646" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221116 09:32:34.616" endtime="20221116 09:32:34.646"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221116 09:32:34.647" endtime="20221116 09:32:34.647"/>
</kw>
<status status="NOT RUN" starttime="20221116 09:32:34.647" endtime="20221116 09:32:34.647"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221116 09:32:34.647" endtime="20221116 09:32:34.648"/>
</kw>
<status status="PASS" starttime="20221116 09:32:34.647" endtime="20221116 09:32:34.648"/>
</branch>
<status status="PASS" starttime="20221116 09:32:34.646" endtime="20221116 09:32:34.648"/>
</if>
<status status="PASS" starttime="20221116 09:32:34.615" endtime="20221116 09:32:34.648"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221116 09:32:34.649" endtime="20221116 09:32:34.649"/>
</kw>
<status status="PASS" starttime="20221116 09:32:34.648" endtime="20221116 09:32:34.649"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221116 09:32:34.655" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221116 09:32:34.674" level="INFO">${rc} = 0</msg>
<msg timestamp="20221116 09:32:34.674" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221116 09:32:34.651" endtime="20221116 09:32:34.674"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221116 09:32:34.675" level="INFO">200</msg>
<status status="PASS" starttime="20221116 09:32:34.674" endtime="20221116 09:32:34.675"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221116 09:32:34.676" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221116 09:32:34.676" endtime="20221116 09:32:34.676"/>
</kw>
<status status="PASS" starttime="20221116 09:32:34.651" endtime="20221116 09:32:34.677"/>
</kw>
<msg timestamp="20221116 09:32:34.677" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221116 09:32:34.650" endtime="20221116 09:32:34.677"/>
</kw>
<msg timestamp="20221116 09:32:34.678" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221116 09:32:34.650" endtime="20221116 09:32:34.678"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221116 09:32:34.678" endtime="20221116 09:32:34.678"/>
</kw>
<status status="NOT RUN" starttime="20221116 09:32:34.678" endtime="20221116 09:32:34.678"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221116 09:32:34.678" endtime="20221116 09:32:34.679"/>
</kw>
<status status="PASS" starttime="20221116 09:32:34.678" endtime="20221116 09:32:34.679"/>
</branch>
<status status="PASS" starttime="20221116 09:32:34.678" endtime="20221116 09:32:34.679"/>
</if>
<status status="PASS" starttime="20221116 09:32:34.649" endtime="20221116 09:32:34.679"/>
</kw>
<status status="PASS" starttime="20221116 09:32:34.510" endtime="20221116 09:32:34.679"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221116 09:32:34.509" endtime="20221116 09:32:34.680"/>
</test>
<test id="s1-s2-s2-t6" name="Check Quota Usage api access" line="116">
<kw name="Check Access">
<arg>${QUOTA_USAGE_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221116 09:32:34.688" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20221116 09:32:34.693" level="INFO">${rc} = 0</msg>
<msg timestamp="20221116 09:32:34.693" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221116 09:32:34.685" endtime="20221116 09:32:34.693"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221116 09:32:34.694" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221116 09:32:34.693" endtime="20221116 09:32:34.694"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221116 09:32:34.695" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221116 09:32:34.694" endtime="20221116 09:32:34.695"/>
</kw>
<status status="PASS" starttime="20221116 09:32:34.684" endtime="20221116 09:32:34.695"/>
</kw>
<msg timestamp="20221116 09:32:34.695" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221116 09:32:34.684" endtime="20221116 09:32:34.696"/>
</kw>
<status status="PASS" starttime="20221116 09:32:34.683" endtime="20221116 09:32:34.696"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221116 09:32:34.703" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221116 09:32:34.723" level="INFO">${rc} = 0</msg>
<msg timestamp="20221116 09:32:34.723" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221116 09:32:34.699" endtime="20221116 09:32:34.723"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221116 09:32:34.725" level="INFO">200</msg>
<status status="PASS" starttime="20221116 09:32:34.724" endtime="20221116 09:32:34.725"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221116 09:32:34.726" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221116 09:32:34.725" endtime="20221116 09:32:34.726"/>
</kw>
<status status="PASS" starttime="20221116 09:32:34.698" endtime="20221116 09:32:34.726"/>
</kw>
<msg timestamp="20221116 09:32:34.726" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221116 09:32:34.698" endtime="20221116 09:32:34.727"/>
</kw>
<msg timestamp="20221116 09:32:34.728" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221116 09:32:34.697" endtime="20221116 09:32:34.728"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221116 09:32:34.729" endtime="20221116 09:32:34.729"/>
</kw>
<status status="NOT RUN" starttime="20221116 09:32:34.728" endtime="20221116 09:32:34.729"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221116 09:32:34.729" endtime="20221116 09:32:34.730"/>
</kw>
<status status="PASS" starttime="20221116 09:32:34.729" endtime="20221116 09:32:34.730"/>
</branch>
<status status="PASS" starttime="20221116 09:32:34.728" endtime="20221116 09:32:34.730"/>
</if>
<status status="PASS" starttime="20221116 09:32:34.696" endtime="20221116 09:32:34.730"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221116 09:32:34.730" endtime="20221116 09:32:34.731"/>
</kw>
<status status="PASS" starttime="20221116 09:32:34.730" endtime="20221116 09:32:34.731"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221116 09:32:34.738" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221116 09:32:34.776" level="INFO">${rc} = 0</msg>
<msg timestamp="20221116 09:32:34.776" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221116 09:32:34.734" endtime="20221116 09:32:34.777"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221116 09:32:34.778" level="INFO">200</msg>
<status status="PASS" starttime="20221116 09:32:34.777" endtime="20221116 09:32:34.779"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221116 09:32:34.781" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221116 09:32:34.779" endtime="20221116 09:32:34.781"/>
</kw>
<status status="PASS" starttime="20221116 09:32:34.733" endtime="20221116 09:32:34.781"/>
</kw>
<msg timestamp="20221116 09:32:34.781" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221116 09:32:34.733" endtime="20221116 09:32:34.783"/>
</kw>
<msg timestamp="20221116 09:32:34.784" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221116 09:32:34.732" endtime="20221116 09:32:34.784"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221116 09:32:34.785" endtime="20221116 09:32:34.785"/>
</kw>
<status status="NOT RUN" starttime="20221116 09:32:34.785" endtime="20221116 09:32:34.785"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221116 09:32:34.787" endtime="20221116 09:32:34.788"/>
</kw>
<status status="PASS" starttime="20221116 09:32:34.785" endtime="20221116 09:32:34.788"/>
</branch>
<status status="PASS" starttime="20221116 09:32:34.785" endtime="20221116 09:32:34.789"/>
</if>
<status status="PASS" starttime="20221116 09:32:34.731" endtime="20221116 09:32:34.789"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221116 09:32:34.790" endtime="20221116 09:32:34.791"/>
</kw>
<status status="PASS" starttime="20221116 09:32:34.789" endtime="20221116 09:32:34.791"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221116 09:32:34.802" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221116 09:32:34.823" level="INFO">${rc} = 0</msg>
<msg timestamp="20221116 09:32:34.823" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221116 09:32:34.796" endtime="20221116 09:32:34.823"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221116 09:32:34.825" level="INFO">200</msg>
<status status="PASS" starttime="20221116 09:32:34.824" endtime="20221116 09:32:34.825"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221116 09:32:34.827" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221116 09:32:34.826" endtime="20221116 09:32:34.827"/>
</kw>
<status status="PASS" starttime="20221116 09:32:34.795" endtime="20221116 09:32:34.829"/>
</kw>
<msg timestamp="20221116 09:32:34.829" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221116 09:32:34.795" endtime="20221116 09:32:34.830"/>
</kw>
<msg timestamp="20221116 09:32:34.831" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221116 09:32:34.793" endtime="20221116 09:32:34.831"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221116 09:32:34.832" endtime="20221116 09:32:34.832"/>
</kw>
<status status="NOT RUN" starttime="20221116 09:32:34.832" endtime="20221116 09:32:34.833"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221116 09:32:34.833" endtime="20221116 09:32:34.833"/>
</kw>
<status status="PASS" starttime="20221116 09:32:34.833" endtime="20221116 09:32:34.833"/>
</branch>
<status status="PASS" starttime="20221116 09:32:34.832" endtime="20221116 09:32:34.833"/>
</if>
<status status="PASS" starttime="20221116 09:32:34.792" endtime="20221116 09:32:34.834"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221116 09:32:34.836" endtime="20221116 09:32:34.837"/>
</kw>
<status status="PASS" starttime="20221116 09:32:34.834" endtime="20221116 09:32:34.837"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221116 09:32:34.845" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221116 09:32:34.877" level="INFO">${rc} = 0</msg>
<msg timestamp="20221116 09:32:34.878" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221116 09:32:34.841" endtime="20221116 09:32:34.878"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221116 09:32:34.880" level="INFO">200</msg>
<status status="PASS" starttime="20221116 09:32:34.879" endtime="20221116 09:32:34.880"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221116 09:32:34.881" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221116 09:32:34.880" endtime="20221116 09:32:34.881"/>
</kw>
<status status="PASS" starttime="20221116 09:32:34.840" endtime="20221116 09:32:34.881"/>
</kw>
<msg timestamp="20221116 09:32:34.881" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221116 09:32:34.840" endtime="20221116 09:32:34.882"/>
</kw>
<msg timestamp="20221116 09:32:34.882" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221116 09:32:34.839" endtime="20221116 09:32:34.882"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221116 09:32:34.883" endtime="20221116 09:32:34.883"/>
</kw>
<status status="NOT RUN" starttime="20221116 09:32:34.883" endtime="20221116 09:32:34.883"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221116 09:32:34.883" endtime="20221116 09:32:34.884"/>
</kw>
<status status="PASS" starttime="20221116 09:32:34.883" endtime="20221116 09:32:34.884"/>
</branch>
<status status="PASS" starttime="20221116 09:32:34.882" endtime="20221116 09:32:34.884"/>
</if>
<status status="PASS" starttime="20221116 09:32:34.837" endtime="20221116 09:32:34.884"/>
</kw>
<status status="PASS" starttime="20221116 09:32:34.682" endtime="20221116 09:32:34.884"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221116 09:32:34.681" endtime="20221116 09:32:34.884"/>
</test>
<test id="s1-s2-s2-t7" name="Check File Size Distribution api access" line="119">
<kw name="Check Access">
<arg>${FILE_SIZE_DIST_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221116 09:32:34.892" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20221116 09:32:34.897" level="INFO">${rc} = 0</msg>
<msg timestamp="20221116 09:32:34.897" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221116 09:32:34.889" endtime="20221116 09:32:34.897"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221116 09:32:34.899" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221116 09:32:34.898" endtime="20221116 09:32:34.899"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221116 09:32:34.901" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221116 09:32:34.900" endtime="20221116 09:32:34.902"/>
</kw>
<status status="PASS" starttime="20221116 09:32:34.888" endtime="20221116 09:32:34.902"/>
</kw>
<msg timestamp="20221116 09:32:34.902" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221116 09:32:34.888" endtime="20221116 09:32:34.903"/>
</kw>
<status status="PASS" starttime="20221116 09:32:34.887" endtime="20221116 09:32:34.903"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221116 09:32:34.912" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221116 09:32:34.942" level="INFO">${rc} = 0</msg>
<msg timestamp="20221116 09:32:34.942" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221116 09:32:34.907" endtime="20221116 09:32:34.942"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221116 09:32:34.943" level="INFO">200</msg>
<status status="PASS" starttime="20221116 09:32:34.942" endtime="20221116 09:32:34.943"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221116 09:32:34.944" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221116 09:32:34.944" endtime="20221116 09:32:34.944"/>
</kw>
<status status="PASS" starttime="20221116 09:32:34.905" endtime="20221116 09:32:34.944"/>
</kw>
<msg timestamp="20221116 09:32:34.945" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221116 09:32:34.905" endtime="20221116 09:32:34.945"/>
</kw>
<msg timestamp="20221116 09:32:34.945" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221116 09:32:34.904" endtime="20221116 09:32:34.945"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221116 09:32:34.946" endtime="20221116 09:32:34.946"/>
</kw>
<status status="NOT RUN" starttime="20221116 09:32:34.946" endtime="20221116 09:32:34.946"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221116 09:32:34.946" endtime="20221116 09:32:34.948"/>
</kw>
<status status="PASS" starttime="20221116 09:32:34.946" endtime="20221116 09:32:34.948"/>
</branch>
<status status="PASS" starttime="20221116 09:32:34.946" endtime="20221116 09:32:34.948"/>
</if>
<status status="PASS" starttime="20221116 09:32:34.903" endtime="20221116 09:32:34.948"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221116 09:32:34.949" endtime="20221116 09:32:34.950"/>
</kw>
<status status="PASS" starttime="20221116 09:32:34.948" endtime="20221116 09:32:34.950"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221116 09:32:34.960" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221116 09:32:34.984" level="INFO">${rc} = 0</msg>
<msg timestamp="20221116 09:32:34.984" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221116 09:32:34.953" endtime="20221116 09:32:34.984"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221116 09:32:34.987" level="INFO">200</msg>
<status status="PASS" starttime="20221116 09:32:34.986" endtime="20221116 09:32:34.987"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221116 09:32:34.988" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221116 09:32:34.987" endtime="20221116 09:32:34.988"/>
</kw>
<status status="PASS" starttime="20221116 09:32:34.952" endtime="20221116 09:32:34.989"/>
</kw>
<msg timestamp="20221116 09:32:34.989" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221116 09:32:34.951" endtime="20221116 09:32:34.991"/>
</kw>
<msg timestamp="20221116 09:32:34.991" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221116 09:32:34.951" endtime="20221116 09:32:34.992"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221116 09:32:34.992" endtime="20221116 09:32:34.992"/>
</kw>
<status status="NOT RUN" starttime="20221116 09:32:34.992" endtime="20221116 09:32:34.992"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221116 09:32:34.992" endtime="20221116 09:32:34.993"/>
</kw>
<status status="PASS" starttime="20221116 09:32:34.992" endtime="20221116 09:32:34.993"/>
</branch>
<status status="PASS" starttime="20221116 09:32:34.992" endtime="20221116 09:32:34.993"/>
</if>
<status status="PASS" starttime="20221116 09:32:34.950" endtime="20221116 09:32:34.993"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221116 09:32:34.994" endtime="20221116 09:32:34.994"/>
</kw>
<status status="PASS" starttime="20221116 09:32:34.993" endtime="20221116 09:32:34.994"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221116 09:32:35.000" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221116 09:32:35.022" level="INFO">${rc} = 0</msg>
<msg timestamp="20221116 09:32:35.022" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221116 09:32:34.996" endtime="20221116 09:32:35.022"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221116 09:32:35.023" level="INFO">200</msg>
<status status="PASS" starttime="20221116 09:32:35.022" endtime="20221116 09:32:35.024"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221116 09:32:35.024" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221116 09:32:35.024" endtime="20221116 09:32:35.024"/>
</kw>
<status status="PASS" starttime="20221116 09:32:34.996" endtime="20221116 09:32:35.025"/>
</kw>
<msg timestamp="20221116 09:32:35.025" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221116 09:32:34.996" endtime="20221116 09:32:35.026"/>
</kw>
<msg timestamp="20221116 09:32:35.026" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221116 09:32:34.995" endtime="20221116 09:32:35.026"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221116 09:32:35.026" endtime="20221116 09:32:35.027"/>
</kw>
<status status="NOT RUN" starttime="20221116 09:32:35.026" endtime="20221116 09:32:35.027"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221116 09:32:35.027" endtime="20221116 09:32:35.027"/>
</kw>
<status status="PASS" starttime="20221116 09:32:35.027" endtime="20221116 09:32:35.027"/>
</branch>
<status status="PASS" starttime="20221116 09:32:35.026" endtime="20221116 09:32:35.027"/>
</if>
<status status="PASS" starttime="20221116 09:32:34.994" endtime="20221116 09:32:35.028"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221116 09:32:35.028" endtime="20221116 09:32:35.029"/>
</kw>
<status status="PASS" starttime="20221116 09:32:35.028" endtime="20221116 09:32:35.029"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221116 09:32:35.035" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221116 09:32:35.056" level="INFO">${rc} = 0</msg>
<msg timestamp="20221116 09:32:35.056" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221116 09:32:35.031" endtime="20221116 09:32:35.056"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221116 09:32:35.058" level="INFO">200</msg>
<status status="PASS" starttime="20221116 09:32:35.057" endtime="20221116 09:32:35.058"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221116 09:32:35.059" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221116 09:32:35.058" endtime="20221116 09:32:35.059"/>
</kw>
<status status="PASS" starttime="20221116 09:32:35.031" endtime="20221116 09:32:35.059"/>
</kw>
<msg timestamp="20221116 09:32:35.059" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221116 09:32:35.030" endtime="20221116 09:32:35.061"/>
</kw>
<msg timestamp="20221116 09:32:35.061" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221116 09:32:35.029" endtime="20221116 09:32:35.061"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221116 09:32:35.062" endtime="20221116 09:32:35.062"/>
</kw>
<status status="NOT RUN" starttime="20221116 09:32:35.062" endtime="20221116 09:32:35.062"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221116 09:32:35.062" endtime="20221116 09:32:35.063"/>
</kw>
<status status="PASS" starttime="20221116 09:32:35.062" endtime="20221116 09:32:35.063"/>
</branch>
<status status="PASS" starttime="20221116 09:32:35.061" endtime="20221116 09:32:35.063"/>
</if>
<status status="PASS" starttime="20221116 09:32:35.029" endtime="20221116 09:32:35.063"/>
</kw>
<status status="PASS" starttime="20221116 09:32:34.887" endtime="20221116 09:32:35.063"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221116 09:32:34.886" endtime="20221116 09:32:35.063"/>
</test>
<test id="s1-s2-s2-t8" name="Check Recon Namespace Summary Root" line="122">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/</arg>
<arg>ROOT</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221116 09:32:35.074" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221116 09:32:35.093" level="INFO">${rc} = 0</msg>
<msg timestamp="20221116 09:32:35.093" level="INFO">${output} = {"type":"ROOT","numVolume":3,"numBucket":2,"numDir":0,"numKey":0,"status":"OK"}</msg>
<status status="PASS" starttime="20221116 09:32:35.070" endtime="20221116 09:32:35.093"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221116 09:32:35.095" level="INFO">{"type":"ROOT","numVolume":3,"numBucket":2,"numDir":0,"numKey":0,"status":"OK"}</msg>
<status status="PASS" starttime="20221116 09:32:35.094" endtime="20221116 09:32:35.095"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221116 09:32:35.096" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221116 09:32:35.095" endtime="20221116 09:32:35.096"/>
</kw>
<status status="PASS" starttime="20221116 09:32:35.069" endtime="20221116 09:32:35.096"/>
</kw>
<msg timestamp="20221116 09:32:35.096" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221116 09:32:35.069" endtime="20221116 09:32:35.097"/>
</kw>
<msg timestamp="20221116 09:32:35.098" level="INFO">${result} = {"type":"ROOT","numVolume":3,"numBucket":2,"numDir":0,"numKey":0,"status":"OK"}</msg>
<status status="PASS" starttime="20221116 09:32:35.068" endtime="20221116 09:32:35.098"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221116 09:32:35.098" endtime="20221116 09:32:35.102"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221116 09:32:35.102" endtime="20221116 09:32:35.102"/>
</kw>
<status status="PASS" starttime="20221116 09:32:35.067" endtime="20221116 09:32:35.103"/>
</kw>
<status status="PASS" starttime="20221116 09:32:35.067" endtime="20221116 09:32:35.103"/>
</kw>
<status status="PASS" starttime="20221116 09:32:35.066" endtime="20221116 09:32:35.103"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221116 09:32:35.065" endtime="20221116 09:32:35.103"/>
</test>
<test id="s1-s2-s2-t9" name="Check Recon Namespace Summary Volume" line="125">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}</arg>
<arg>VOLUME</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221116 09:32:35.119" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-jsaeq 2&gt;&amp;1'.</msg>
<msg timestamp="20221116 09:32:35.138" level="INFO">${rc} = 0</msg>
<msg timestamp="20221116 09:32:35.138" level="INFO">${output} = {"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221116 09:32:35.115" endtime="20221116 09:32:35.138"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221116 09:32:35.139" level="INFO">{"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221116 09:32:35.139" endtime="20221116 09:32:35.140"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221116 09:32:35.140" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221116 09:32:35.140" endtime="20221116 09:32:35.140"/>
</kw>
<status status="PASS" starttime="20221116 09:32:35.114" endtime="20221116 09:32:35.141"/>
</kw>
<msg timestamp="20221116 09:32:35.141" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221116 09:32:35.113" endtime="20221116 09:32:35.141"/>
</kw>
<msg timestamp="20221116 09:32:35.142" level="INFO">${result} = {"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221116 09:32:35.111" endtime="20221116 09:32:35.142"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20221116 09:32:35.145" level="FAIL">'{"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20221116 09:32:35.144" endtime="20221116 09:32:35.145"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221116 09:32:35.145" endtime="20221116 09:32:35.145"/>
</kw>
<status status="FAIL" starttime="20221116 09:32:35.110" endtime="20221116 09:32:35.146"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221116 09:32:45.153" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-jsaeq 2&gt;&amp;1'.</msg>
<msg timestamp="20221116 09:32:45.170" level="INFO">${rc} = 0</msg>
<msg timestamp="20221116 09:32:45.170" level="INFO">${output} = {"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221116 09:32:45.150" endtime="20221116 09:32:45.170"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221116 09:32:45.172" level="INFO">{"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221116 09:32:45.171" endtime="20221116 09:32:45.172"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221116 09:32:45.173" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221116 09:32:45.172" endtime="20221116 09:32:45.173"/>
</kw>
<status status="PASS" starttime="20221116 09:32:45.149" endtime="20221116 09:32:45.173"/>
</kw>
<msg timestamp="20221116 09:32:45.173" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221116 09:32:45.148" endtime="20221116 09:32:45.174"/>
</kw>
<msg timestamp="20221116 09:32:45.174" level="INFO">${result} = {"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221116 09:32:45.148" endtime="20221116 09:32:45.174"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20221116 09:32:45.176" level="FAIL">'{"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20221116 09:32:45.175" endtime="20221116 09:32:45.176"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221116 09:32:45.177" endtime="20221116 09:32:45.177"/>
</kw>
<status status="FAIL" starttime="20221116 09:32:45.147" endtime="20221116 09:32:45.178"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221116 09:32:55.185" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-jsaeq 2&gt;&amp;1'.</msg>
<msg timestamp="20221116 09:32:55.204" level="INFO">${rc} = 0</msg>
<msg timestamp="20221116 09:32:55.204" level="INFO">${output} = {"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221116 09:32:55.181" endtime="20221116 09:32:55.204"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221116 09:32:55.206" level="INFO">{"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221116 09:32:55.205" endtime="20221116 09:32:55.206"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221116 09:32:55.207" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221116 09:32:55.206" endtime="20221116 09:32:55.207"/>
</kw>
<status status="PASS" starttime="20221116 09:32:55.180" endtime="20221116 09:32:55.208"/>
</kw>
<msg timestamp="20221116 09:32:55.208" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221116 09:32:55.180" endtime="20221116 09:32:55.208"/>
</kw>
<msg timestamp="20221116 09:32:55.209" level="INFO">${result} = {"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221116 09:32:55.179" endtime="20221116 09:32:55.209"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20221116 09:32:55.210" level="FAIL">'{"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20221116 09:32:55.209" endtime="20221116 09:32:55.210"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221116 09:32:55.211" endtime="20221116 09:32:55.211"/>
</kw>
<status status="FAIL" starttime="20221116 09:32:55.178" endtime="20221116 09:32:55.212"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221116 09:33:05.225" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-jsaeq 2&gt;&amp;1'.</msg>
<msg timestamp="20221116 09:33:05.251" level="INFO">${rc} = 0</msg>
<msg timestamp="20221116 09:33:05.252" level="INFO">${output} = {"type":"VOLUME","numVolume":-1,"numBucket":1,"numDir":2,"numKey":2,"status":"OK"}</msg>
<status status="PASS" starttime="20221116 09:33:05.221" endtime="20221116 09:33:05.252"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221116 09:33:05.254" level="INFO">{"type":"VOLUME","numVolume":-1,"numBucket":1,"numDir":2,"numKey":2,"status":"OK"}</msg>
<status status="PASS" starttime="20221116 09:33:05.252" endtime="20221116 09:33:05.254"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221116 09:33:05.255" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221116 09:33:05.254" endtime="20221116 09:33:05.255"/>
</kw>
<status status="PASS" starttime="20221116 09:33:05.220" endtime="20221116 09:33:05.256"/>
</kw>
<msg timestamp="20221116 09:33:05.256" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221116 09:33:05.220" endtime="20221116 09:33:05.257"/>
</kw>
<msg timestamp="20221116 09:33:05.257" level="INFO">${result} = {"type":"VOLUME","numVolume":-1,"numBucket":1,"numDir":2,"numKey":2,"status":"OK"}</msg>
<status status="PASS" starttime="20221116 09:33:05.219" endtime="20221116 09:33:05.257"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221116 09:33:05.257" endtime="20221116 09:33:05.257"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221116 09:33:05.258" endtime="20221116 09:33:05.258"/>
</kw>
<status status="PASS" starttime="20221116 09:33:05.218" endtime="20221116 09:33:05.258"/>
</kw>
<status status="PASS" starttime="20221116 09:32:35.110" endtime="20221116 09:33:05.258"/>
</kw>
<status status="PASS" starttime="20221116 09:32:35.107" endtime="20221116 09:33:05.258"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221116 09:32:35.106" endtime="20221116 09:33:05.259"/>
</test>
<test id="s1-s2-s2-t10" name="Check Recon Namespace Summary Bucket" line="128">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}</arg>
<arg>BUCKET</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221116 09:33:05.268" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-jsaeq/buc-jylzr 2&gt;&amp;1'.</msg>
<msg timestamp="20221116 09:33:05.297" level="INFO">${rc} = 0</msg>
<msg timestamp="20221116 09:33:05.297" level="INFO">${output} = {"type":"BUCKET","numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2,"status":"OK"}</msg>
<status status="PASS" starttime="20221116 09:33:05.265" endtime="20221116 09:33:05.297"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221116 09:33:05.299" level="INFO">{"type":"BUCKET","numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2,"status":"OK"}</msg>
<status status="PASS" starttime="20221116 09:33:05.298" endtime="20221116 09:33:05.299"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221116 09:33:05.300" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221116 09:33:05.300" endtime="20221116 09:33:05.300"/>
</kw>
<status status="PASS" starttime="20221116 09:33:05.264" endtime="20221116 09:33:05.301"/>
</kw>
<msg timestamp="20221116 09:33:05.301" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221116 09:33:05.264" endtime="20221116 09:33:05.301"/>
</kw>
<msg timestamp="20221116 09:33:05.302" level="INFO">${result} = {"type":"BUCKET","numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2,"status":"OK"}</msg>
<status status="PASS" starttime="20221116 09:33:05.263" endtime="20221116 09:33:05.302"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221116 09:33:05.302" endtime="20221116 09:33:05.302"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221116 09:33:05.303" endtime="20221116 09:33:05.303"/>
</kw>
<status status="PASS" starttime="20221116 09:33:05.262" endtime="20221116 09:33:05.304"/>
</kw>
<status status="PASS" starttime="20221116 09:33:05.262" endtime="20221116 09:33:05.304"/>
</kw>
<status status="PASS" starttime="20221116 09:33:05.261" endtime="20221116 09:33:05.304"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221116 09:33:05.260" endtime="20221116 09:33:05.304"/>
</test>
<test id="s1-s2-s2-t11" name="Check Recon Namespace Summary Key" line="131">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/file1</arg>
<arg>KEY</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221116 09:33:05.314" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-jsaeq/buc-jylzr/file1 2&gt;&amp;1'.</msg>
<msg timestamp="20221116 09:33:05.333" level="INFO">${rc} = 0</msg>
<msg timestamp="20221116 09:33:05.333" level="INFO">${output} = {"type":"KEY","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"OK"}</msg>
<status status="PASS" starttime="20221116 09:33:05.310" endtime="20221116 09:33:05.333"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221116 09:33:05.335" level="INFO">{"type":"KEY","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"OK"}</msg>
<status status="PASS" starttime="20221116 09:33:05.334" endtime="20221116 09:33:05.336"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221116 09:33:05.336" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221116 09:33:05.336" endtime="20221116 09:33:05.337"/>
</kw>
<status status="PASS" starttime="20221116 09:33:05.310" endtime="20221116 09:33:05.337"/>
</kw>
<msg timestamp="20221116 09:33:05.337" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221116 09:33:05.310" endtime="20221116 09:33:05.338"/>
</kw>
<msg timestamp="20221116 09:33:05.338" level="INFO">${result} = {"type":"KEY","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"OK"}</msg>
<status status="PASS" starttime="20221116 09:33:05.309" endtime="20221116 09:33:05.338"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221116 09:33:05.338" endtime="20221116 09:33:05.339"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221116 09:33:05.340" endtime="20221116 09:33:05.340"/>
</kw>
<status status="PASS" starttime="20221116 09:33:05.308" endtime="20221116 09:33:05.340"/>
</kw>
<status status="PASS" starttime="20221116 09:33:05.308" endtime="20221116 09:33:05.340"/>
</kw>
<status status="PASS" starttime="20221116 09:33:05.307" endtime="20221116 09:33:05.340"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221116 09:33:05.306" endtime="20221116 09:33:05.341"/>
</test>
<test id="s1-s2-s2-t12" name="Check Recon Namespace Summary Directory" line="134">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET_LAYOUT}' == 'LEGACY'</arg>
<arg>Wait For Summary</arg>
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2/</arg>
<arg>DIRECTORY</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221116 09:33:05.342" endtime="20221116 09:33:05.343"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET_LAYOUT}' == 'FILE_SYSTEM_OPTIMIZED'</arg>
<arg>Wait For Summary</arg>
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2</arg>
<arg>DIRECTORY</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2</arg>
<arg>DIRECTORY</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221116 09:33:05.351" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-jsaeq/buc-jylzr/dir1/dir2 2&gt;&amp;1'.</msg>
<msg timestamp="20221116 09:33:05.375" level="INFO">${rc} = 0</msg>
<msg timestamp="20221116 09:33:05.375" level="INFO">${output} = {"type":"DIRECTORY","numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1,"status":"OK"}</msg>
<status status="PASS" starttime="20221116 09:33:05.348" endtime="20221116 09:33:05.375"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221116 09:33:05.377" level="INFO">{"type":"DIRECTORY","numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1,"status":"OK"}</msg>
<status status="PASS" starttime="20221116 09:33:05.376" endtime="20221116 09:33:05.377"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221116 09:33:05.380" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221116 09:33:05.377" endtime="20221116 09:33:05.380"/>
</kw>
<status status="PASS" starttime="20221116 09:33:05.347" endtime="20221116 09:33:05.381"/>
</kw>
<msg timestamp="20221116 09:33:05.381" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221116 09:33:05.347" endtime="20221116 09:33:05.382"/>
</kw>
<msg timestamp="20221116 09:33:05.382" level="INFO">${result} = {"type":"DIRECTORY","numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1,"status":"OK"}</msg>
<status status="PASS" starttime="20221116 09:33:05.346" endtime="20221116 09:33:05.382"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221116 09:33:05.383" endtime="20221116 09:33:05.383"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221116 09:33:05.384" endtime="20221116 09:33:05.384"/>
</kw>
<status status="PASS" starttime="20221116 09:33:05.346" endtime="20221116 09:33:05.385"/>
</kw>
<status status="PASS" starttime="20221116 09:33:05.345" endtime="20221116 09:33:05.385"/>
</kw>
<status status="PASS" starttime="20221116 09:33:05.345" endtime="20221116 09:33:05.385"/>
</kw>
<status status="PASS" starttime="20221116 09:33:05.343" endtime="20221116 09:33:05.385"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221116 09:33:05.342" endtime="20221116 09:33:05.387"/>
</test>
<test id="s1-s2-s2-t13" name="Check Recon Namespace Disk Usage" line="138">
<kw name="Wait For Summary">
<arg>${DISK_USAGE_URL}?path=/${VOLUME}/${BUCKET}&amp;files=true&amp;replica=true</arg>
<arg>\"sizeWithReplica\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221116 09:33:05.401" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/du?path=/vol-jsaeq/buc-jylzr&amp;files=true&amp;replica=true 2&gt;&amp;1'.</msg>
<msg timestamp="20221116 09:33:05.420" level="INFO">${rc} = 0</msg>
<msg timestamp="20221116 09:33:05.420" level="INFO">${output} = {"status":"OK","path":"/vol-jsaeq/buc-jylzr","size":9917,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-jsaeq/buc-jylzr/dir1","size":6038,"sizeWithReplica":-1,"isKey":fals...</msg>
<status status="PASS" starttime="20221116 09:33:05.395" endtime="20221116 09:33:05.420"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221116 09:33:05.421" level="INFO">{"status":"OK","path":"/vol-jsaeq/buc-jylzr","size":9917,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-jsaeq/buc-jylzr/dir1","size":6038,"sizeWithReplica":-1,"isKey":false}],"sizeDirectKey":3879}</msg>
<status status="PASS" starttime="20221116 09:33:05.421" endtime="20221116 09:33:05.422"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221116 09:33:05.422" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221116 09:33:05.422" endtime="20221116 09:33:05.422"/>
</kw>
<status status="PASS" starttime="20221116 09:33:05.395" endtime="20221116 09:33:05.423"/>
</kw>
<msg timestamp="20221116 09:33:05.423" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221116 09:33:05.395" endtime="20221116 09:33:05.423"/>
</kw>
<msg timestamp="20221116 09:33:05.424" level="INFO">${result} = {"status":"OK","path":"/vol-jsaeq/buc-jylzr","size":9917,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-jsaeq/buc-jylzr/dir1","size":6038,"sizeWithReplica":-1,"isKey":fals...</msg>
<status status="PASS" starttime="20221116 09:33:05.394" endtime="20221116 09:33:05.424"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221116 09:33:05.424" endtime="20221116 09:33:05.424"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221116 09:33:05.425" endtime="20221116 09:33:05.425"/>
</kw>
<status status="PASS" starttime="20221116 09:33:05.394" endtime="20221116 09:33:05.425"/>
</kw>
<status status="PASS" starttime="20221116 09:33:05.393" endtime="20221116 09:33:05.426"/>
</kw>
<status status="PASS" starttime="20221116 09:33:05.392" endtime="20221116 09:33:05.426"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221116 09:33:05.391" endtime="20221116 09:33:05.426"/>
</test>
<test id="s1-s2-s2-t14" name="Check Recon Namespace Volume Quota Usage" line="141">
<kw name="Wait For Summary">
<arg>${QUOTA_USAGE_URL}?path=/${VOLUME}</arg>
<arg>\"used\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221116 09:33:05.436" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/quota?path=/vol-jsaeq 2&gt;&amp;1'.</msg>
<msg timestamp="20221116 09:33:05.454" level="INFO">${rc} = 0</msg>
<msg timestamp="20221116 09:33:05.455" level="INFO">${output} = {"allowed":-1,"used":9917,"status":"OK"}</msg>
<status status="PASS" starttime="20221116 09:33:05.433" endtime="20221116 09:33:05.455"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221116 09:33:05.456" level="INFO">{"allowed":-1,"used":9917,"status":"OK"}</msg>
<status status="PASS" starttime="20221116 09:33:05.455" endtime="20221116 09:33:05.457"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221116 09:33:05.457" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221116 09:33:05.457" endtime="20221116 09:33:05.458"/>
</kw>
<status status="PASS" starttime="20221116 09:33:05.432" endtime="20221116 09:33:05.458"/>
</kw>
<msg timestamp="20221116 09:33:05.458" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221116 09:33:05.432" endtime="20221116 09:33:05.459"/>
</kw>
<msg timestamp="20221116 09:33:05.459" level="INFO">${result} = {"allowed":-1,"used":9917,"status":"OK"}</msg>
<status status="PASS" starttime="20221116 09:33:05.432" endtime="20221116 09:33:05.459"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221116 09:33:05.459" endtime="20221116 09:33:05.460"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221116 09:33:05.460" endtime="20221116 09:33:05.461"/>
</kw>
<status status="PASS" starttime="20221116 09:33:05.431" endtime="20221116 09:33:05.461"/>
</kw>
<status status="PASS" starttime="20221116 09:33:05.431" endtime="20221116 09:33:05.461"/>
</kw>
<status status="PASS" starttime="20221116 09:33:05.430" endtime="20221116 09:33:05.462"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221116 09:33:05.429" endtime="20221116 09:33:05.462"/>
</test>
<test id="s1-s2-s2-t15" name="Check Recon Namespace Bucket Quota Usage" line="144">
<kw name="Wait For Summary">
<arg>${QUOTA_USAGE_URL}?path=/${VOLUME}/${BUCKET}</arg>
<arg>\"used\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221116 09:33:05.475" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/quota?path=/vol-jsaeq/buc-jylzr 2&gt;&amp;1'.</msg>
<msg timestamp="20221116 09:33:05.496" level="INFO">${rc} = 0</msg>
<msg timestamp="20221116 09:33:05.496" level="INFO">${output} = {"allowed":-1,"used":9917,"status":"OK"}</msg>
<status status="PASS" starttime="20221116 09:33:05.468" endtime="20221116 09:33:05.496"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221116 09:33:05.498" level="INFO">{"allowed":-1,"used":9917,"status":"OK"}</msg>
<status status="PASS" starttime="20221116 09:33:05.496" endtime="20221116 09:33:05.498"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221116 09:33:05.499" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221116 09:33:05.498" endtime="20221116 09:33:05.499"/>
</kw>
<status status="PASS" starttime="20221116 09:33:05.467" endtime="20221116 09:33:05.499"/>
</kw>
<msg timestamp="20221116 09:33:05.500" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221116 09:33:05.467" endtime="20221116 09:33:05.500"/>
</kw>
<msg timestamp="20221116 09:33:05.501" level="INFO">${result} = {"allowed":-1,"used":9917,"status":"OK"}</msg>
<status status="PASS" starttime="20221116 09:33:05.466" endtime="20221116 09:33:05.501"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221116 09:33:05.501" endtime="20221116 09:33:05.501"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221116 09:33:05.502" endtime="20221116 09:33:05.502"/>
</kw>
<status status="PASS" starttime="20221116 09:33:05.466" endtime="20221116 09:33:05.502"/>
</kw>
<status status="PASS" starttime="20221116 09:33:05.465" endtime="20221116 09:33:05.502"/>
</kw>
<status status="PASS" starttime="20221116 09:33:05.464" endtime="20221116 09:33:05.503"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221116 09:33:05.463" endtime="20221116 09:33:05.503"/>
</test>
<test id="s1-s2-s2-t16" name="Check Recon Namespace File Size Distribution Root" line="147">
<kw name="Wait For Summary">
<arg>${FILE_SIZE_DIST_URL}?path=/</arg>
<arg>\"dist\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221116 09:33:05.513" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221116 09:33:05.530" level="INFO">${rc} = 0</msg>
<msg timestamp="20221116 09:33:05.530" level="INFO">${output} = {"dist":[0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20221116 09:33:05.509" endtime="20221116 09:33:05.531"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221116 09:33:05.533" level="INFO">{"dist":[0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20221116 09:33:05.532" endtime="20221116 09:33:05.533"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221116 09:33:05.534" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221116 09:33:05.534" endtime="20221116 09:33:05.534"/>
</kw>
<status status="PASS" starttime="20221116 09:33:05.509" endtime="20221116 09:33:05.535"/>
</kw>
<msg timestamp="20221116 09:33:05.535" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221116 09:33:05.508" endtime="20221116 09:33:05.536"/>
</kw>
<msg timestamp="20221116 09:33:05.536" level="INFO">${result} = {"dist":[0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20221116 09:33:05.507" endtime="20221116 09:33:05.536"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221116 09:33:05.536" endtime="20221116 09:33:05.537"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221116 09:33:05.537" endtime="20221116 09:33:05.538"/>
</kw>
<status status="PASS" starttime="20221116 09:33:05.507" endtime="20221116 09:33:05.538"/>
</kw>
<status status="PASS" starttime="20221116 09:33:05.506" endtime="20221116 09:33:05.538"/>
</kw>
<status status="PASS" starttime="20221116 09:33:05.505" endtime="20221116 09:33:05.538"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221116 09:33:05.504" endtime="20221116 09:33:05.539"/>
</test>
<doc>Smoke test for Recon Namespace Summary Endpoint for FILE_SYSTEM_OPTIMIZED buckets.</doc>
<status status="PASS" starttime="20221116 09:32:07.527" endtime="20221116 09:33:05.540"/>
</suite>
<status status="PASS" starttime="20221116 09:30:53.599" endtime="20221116 09:33:05.544"/>
</suite>
<suite id="s1-s3" name="Loaddata" source="/opt/hadoop/smoketest/topology/loaddata.robot">
<test id="s1-s3-t1" name="Create a volume, bucket and key" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create topvol1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221116 09:33:12.047" level="INFO">Running command 'ozone sh volume create topvol1 2&gt;&amp;1'.</msg>
<msg timestamp="20221116 09:33:16.924" level="INFO">${rc} = 0</msg>
<msg timestamp="20221116 09:33:16.924" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221116 09:33:12.042" endtime="20221116 09:33:16.924"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221116 09:33:16.926" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221116 09:33:16.925" endtime="20221116 09:33:16.926"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221116 09:33:16.926" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221116 09:33:16.926" endtime="20221116 09:33:16.926"/>
</kw>
<status status="PASS" starttime="20221116 09:33:12.041" endtime="20221116 09:33:16.927"/>
</kw>
<msg timestamp="20221116 09:33:16.927" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221116 09:33:12.041" endtime="20221116 09:33:16.928"/>
</kw>
<msg timestamp="20221116 09:33:16.928" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221116 09:33:12.040" endtime="20221116 09:33:16.928"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20221116 09:33:16.929" endtime="20221116 09:33:16.929"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /topvol1/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221116 09:33:16.934" level="INFO">Running command 'ozone sh bucket create /topvol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20221116 09:33:21.563" level="INFO">${rc} = 0</msg>
<msg timestamp="20221116 09:33:21.563" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221116 09:33:16.931" endtime="20221116 09:33:21.563"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221116 09:33:21.564" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221116 09:33:21.563" endtime="20221116 09:33:21.564"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221116 09:33:21.565" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221116 09:33:21.565" endtime="20221116 09:33:21.565"/>
</kw>
<status status="PASS" starttime="20221116 09:33:16.930" endtime="20221116 09:33:21.566"/>
</kw>
<msg timestamp="20221116 09:33:21.566" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221116 09:33:16.930" endtime="20221116 09:33:21.566"/>
</kw>
<msg timestamp="20221116 09:33:21.567" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221116 09:33:16.929" endtime="20221116 09:33:21.567"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20221116 09:33:21.567" endtime="20221116 09:33:21.567"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221116 09:33:21.573" level="INFO">Running command 'ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20221116 09:33:29.026" level="INFO">${rc} = 0</msg>
<msg timestamp="20221116 09:33:29.026" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221116 09:33:21.569" endtime="20221116 09:33:29.027"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221116 09:33:29.028" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221116 09:33:29.027" endtime="20221116 09:33:29.028"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221116 09:33:29.029" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221116 09:33:29.028" endtime="20221116 09:33:29.029"/>
</kw>
<status status="PASS" starttime="20221116 09:33:21.568" endtime="20221116 09:33:29.029"/>
</kw>
<msg timestamp="20221116 09:33:29.029" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221116 09:33:21.568" endtime="20221116 09:33:29.030"/>
</kw>
<msg timestamp="20221116 09:33:29.030" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221116 09:33:21.567" endtime="20221116 09:33:29.030"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20221116 09:33:29.030" endtime="20221116 09:33:29.030"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221116 09:33:12.039" endtime="20221116 09:33:29.031"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20221116 09:33:11.985" endtime="20221116 09:33:29.033"/>
</suite>
<suite id="s1-s4" name="readdata-first-half" source="/opt/hadoop/smoketest/topology/readdata.robot">
<test id="s1-s4-t1" name="Read data from previously created key" line="27">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20221116 09:33:40.111" level="INFO">${random} = 30550</msg>
<status status="PASS" starttime="20221116 09:33:40.110" endtime="20221116 09:33:40.111"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221116 09:33:40.118" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-30550 2&gt;&amp;1'.</msg>
<msg timestamp="20221116 09:33:47.495" level="INFO">${rc} = 0</msg>
<msg timestamp="20221116 09:33:47.496" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221116 09:33:40.113" endtime="20221116 09:33:47.496"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221116 09:33:47.497" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221116 09:33:47.496" endtime="20221116 09:33:47.497"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221116 09:33:47.498" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221116 09:33:47.497" endtime="20221116 09:33:47.498"/>
</kw>
<status status="PASS" starttime="20221116 09:33:40.113" endtime="20221116 09:33:47.498"/>
</kw>
<msg timestamp="20221116 09:33:47.498" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221116 09:33:40.112" endtime="20221116 09:33:47.500"/>
</kw>
<msg timestamp="20221116 09:33:47.500" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221116 09:33:40.112" endtime="20221116 09:33:47.500"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20221116 09:33:47.500" endtime="20221116 09:33:47.501"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221116 09:33:40.109" endtime="20221116 09:33:47.501"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20221116 09:33:40.054" endtime="20221116 09:33:47.502"/>
</suite>
<suite id="s1-s5" name="readdata-second-half" source="/opt/hadoop/smoketest/topology/readdata.robot">
<test id="s1-s5-t1" name="Read data from previously created key" line="27">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20221116 09:34:49.988" level="INFO">${random} = 70890</msg>
<status status="PASS" starttime="20221116 09:34:49.988" endtime="20221116 09:34:49.989"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221116 09:34:49.997" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-70890 2&gt;&amp;1'.</msg>
<msg timestamp="20221116 09:35:30.244" level="INFO">${rc} = 0</msg>
<msg timestamp="20221116 09:35:30.244" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221116 09:34:49.990" endtime="20221116 09:35:30.244"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221116 09:35:30.246" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221116 09:35:30.245" endtime="20221116 09:35:30.246"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221116 09:35:30.246" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221116 09:35:30.246" endtime="20221116 09:35:30.247"/>
</kw>
<status status="PASS" starttime="20221116 09:34:49.990" endtime="20221116 09:35:30.247"/>
</kw>
<msg timestamp="20221116 09:35:30.247" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221116 09:34:49.989" endtime="20221116 09:35:30.249"/>
</kw>
<msg timestamp="20221116 09:35:30.249" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221116 09:34:49.989" endtime="20221116 09:35:30.249"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20221116 09:35:30.249" endtime="20221116 09:35:30.250"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221116 09:34:49.987" endtime="20221116 09:35:30.250"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20221116 09:34:49.929" endtime="20221116 09:35:30.252"/>
</suite>
<suite id="s1-s6" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s6-t1" name="Check webui static resources" line="29">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221116 09:29:55.434" endtime="20221116 09:29:55.435"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -s -I http://${SCM}:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221116 09:29:55.442" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20221116 09:29:55.562" level="INFO">${rc} = 0</msg>
<msg timestamp="20221116 09:29:55.562" level="INFO">${output} = HTTP/1.1 200 OK
Date: Wed, 16 Nov 2022 09:29:55 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Wed, 16 Nov 2022 09:06:22 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20221116 09:29:55.436" endtime="20221116 09:29:55.562"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221116 09:29:55.564" level="INFO">HTTP/1.1 200 OK
Date: Wed, 16 Nov 2022 09:29:55 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Wed, 16 Nov 2022 09:06:22 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20221116 09:29:55.563" endtime="20221116 09:29:55.564"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221116 09:29:55.565" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221116 09:29:55.564" endtime="20221116 09:29:55.565"/>
</kw>
<status status="PASS" starttime="20221116 09:29:55.436" endtime="20221116 09:29:55.565"/>
</kw>
<msg timestamp="20221116 09:29:55.565" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221116 09:29:55.436" endtime="20221116 09:29:55.567"/>
</kw>
<msg timestamp="20221116 09:29:55.567" level="INFO">${result} = HTTP/1.1 200 OK
Date: Wed, 16 Nov 2022 09:29:55 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Wed, 16 Nov 2022 09:06:22 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20221116 09:29:55.435" endtime="20221116 09:29:55.568"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221116 09:29:55.568" endtime="20221116 09:29:55.569"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221116 09:29:55.433" endtime="20221116 09:29:55.570"/>
</test>
<test id="s1-s6-t2" name="Basic Freon smoketest" line="34">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221116 09:29:55.576" endtime="20221116 09:29:55.576"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>10</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20221116 09:29:55.580" level="INFO">${random} = SpwDEr2ApW</msg>
<status status="PASS" starttime="20221116 09:29:55.578" endtime="20221116 09:29:55.580"/>
</kw>
<kw name="Freon OCKG" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221116 09:29:55.595" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p SpwDEr2ApW  2&gt;&amp;1'.</msg>
<msg timestamp="20221116 09:30:10.068" level="INFO">${rc} = 0</msg>
<msg timestamp="20221116 09:30:10.068" level="INFO">${output} = 2022-11-16 09:30:00,894 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-16 09:30:01,177 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221116 09:29:55.592" endtime="20221116 09:30:10.068"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221116 09:30:10.069" level="INFO">2022-11-16 09:30:00,894 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-16 09:30:01,177 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-11-16 09:30:01,177 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-11-16 09:30:01,440 [main] INFO freon.BaseFreonGenerator: Executing test with prefix SpwDEr2ApW and number-of-tests 1
2022-11-16 09:30:01,572 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-16 09:30:02,581 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-16 09:30:03,547 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2022-11-16 09:30:03,582 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-16 09:30:03,780 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false 
2022-11-16 09:30:04,582 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-16 09:30:05,583 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-16 09:30:05,683 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-11-16 09:30:06,165 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-11-16 09:30:06,584 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-16 09:30:07,584 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-16 09:30:08,585 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-16 09:30:09,585 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-11-16 09:30:09,695 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=4989.493443, max=4989.493443, mean=4989.493443, stddev=0.0, median=4989.493443, p75=4989.493443, p95=4989.493443, p98=4989.493443, p99=4989.493443, p999=4989.493443, mean_rate=0.17184988447771304, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-11-16 09:30:09,696 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 8
2022-11-16 09:30:09,697 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-11-16 09:30:09,697 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20221116 09:30:10.068" endtime="20221116 09:30:10.070"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221116 09:30:10.071" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221116 09:30:10.070" endtime="20221116 09:30:10.071"/>
</kw>
<status status="PASS" starttime="20221116 09:29:55.591" endtime="20221116 09:30:10.071"/>
</kw>
<msg timestamp="20221116 09:30:10.071" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221116 09:29:55.584" endtime="20221116 09:30:10.072"/>
</kw>
<msg timestamp="20221116 09:30:10.072" level="INFO">${result} = 2022-11-16 09:30:00,894 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-16 09:30:01,177 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221116 09:29:55.583" endtime="20221116 09:30:10.072"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221116 09:30:10.073" endtime="20221116 09:30:10.073"/>
</kw>
<status status="PASS" starttime="20221116 09:29:55.580" endtime="20221116 09:30:10.073"/>
</kw>
<kw name="Freon OCKV" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221116 09:30:10.080" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p SpwDEr2ApW  2&gt;&amp;1'.</msg>
<msg timestamp="20221116 09:30:20.014" level="INFO">${rc} = 0</msg>
<msg timestamp="20221116 09:30:20.014" level="INFO">${output} = 2022-11-16 09:30:13,094 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-16 09:30:13,290 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221116 09:30:10.077" endtime="20221116 09:30:20.014"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221116 09:30:20.016" level="INFO">2022-11-16 09:30:13,094 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-16 09:30:13,290 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-11-16 09:30:13,290 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-11-16 09:30:13,533 [main] INFO freon.BaseFreonGenerator: Executing test with prefix SpwDEr2ApW and number-of-tests 1
2022-11-16 09:30:13,640 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-16 09:30:14,646 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-16 09:30:15,648 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-16 09:30:16,649 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-16 09:30:16,842 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-11-16 09:30:17,672 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-16 09:30:18,673 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-11-16 09:30:19,619 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=73.018967, max=73.018967, mean=73.018967, stddev=0.0, median=73.018967, p75=73.018967, p95=73.018967, p98=73.018967, p99=73.018967, p999=73.018967, mean_rate=0.9237264016470619, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-11-16 09:30:19,620 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 6
2022-11-16 09:30:19,620 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-11-16 09:30:19,620 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20221116 09:30:20.015" endtime="20221116 09:30:20.016"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221116 09:30:20.017" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221116 09:30:20.016" endtime="20221116 09:30:20.017"/>
</kw>
<status status="PASS" starttime="20221116 09:30:10.076" endtime="20221116 09:30:20.017"/>
</kw>
<msg timestamp="20221116 09:30:20.017" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221116 09:30:10.076" endtime="20221116 09:30:20.018"/>
</kw>
<msg timestamp="20221116 09:30:20.018" level="INFO">${result} = 2022-11-16 09:30:13,094 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-16 09:30:13,290 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221116 09:30:10.075" endtime="20221116 09:30:20.018"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221116 09:30:20.018" endtime="20221116 09:30:20.019"/>
</kw>
<status status="PASS" starttime="20221116 09:30:10.073" endtime="20221116 09:30:20.019"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221116 09:29:55.573" endtime="20221116 09:30:20.019"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20221116 09:29:55.359" endtime="20221116 09:30:20.021"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="241559"/>
</suite>
<statistics>
<total>
<stat pass="32" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="32" fail="0" skip="0" id="s1" name="ozone-topology">ozone-topology</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1" name="Cli">ozone-topology.Cli</stat>
<stat pass="23" fail="0" skip="0" id="s1-s2" name="Recon">ozone-topology.Recon</stat>
<stat pass="7" fail="0" skip="0" id="s1-s2-s1" name="Recon-Api">ozone-topology.Recon.Recon-Api</stat>
<stat pass="16" fail="0" skip="0" id="s1-s2-s2" name="Recon-Nssummary">ozone-topology.Recon.Recon-Nssummary</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3" name="Loaddata">ozone-topology.Loaddata</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="readdata-first-half">ozone-topology.readdata-first-half</stat>
<stat pass="1" fail="0" skip="0" id="s1-s5" name="readdata-second-half">ozone-topology.readdata-second-half</stat>
<stat pass="2" fail="0" skip="0" id="s1-s6" name="Basic">ozone-topology.Basic</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
