<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.0.1 (Python 3.8.10 on linux)" generated="20221127 12:43:23.671" rpa="false" schemaversion="3">
<suite id="s1" name="ozone-topology">
<suite id="s1-s1" name="Cli" source="/opt/hadoop/smoketest/topology/cli.robot">
<test id="s1-s1-t1" name="Run printTopology" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221127 12:39:15.367" level="INFO">Running command 'ozone admin printTopology 2&gt;&amp;1'.</msg>
<msg timestamp="20221127 12:39:19.857" level="INFO">${rc} = 0</msg>
<msg timestamp="20221127 12:39:19.857" level="INFO">${output} = State = HEALTHY
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.6(ozone-topolog...</msg>
<status status="PASS" starttime="20221127 12:39:15.356" endtime="20221127 12:39:19.857"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221127 12:39:19.858" level="INFO">State = HEALTHY
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2</msg>
<status status="PASS" starttime="20221127 12:39:19.857" endtime="20221127 12:39:19.858"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221127 12:39:19.859" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221127 12:39:19.858" endtime="20221127 12:39:19.860"/>
</kw>
<status status="PASS" starttime="20221127 12:39:15.355" endtime="20221127 12:39:19.860"/>
</kw>
<msg timestamp="20221127 12:39:19.860" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221127 12:39:15.355" endtime="20221127 12:39:19.861"/>
</kw>
<msg timestamp="20221127 12:39:19.862" level="INFO">${output} = State = HEALTHY
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.6(ozone-topolog...</msg>
<status status="PASS" starttime="20221127 12:39:15.354" endtime="20221127 12:39:19.862"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
<arg>IN_SERVICE</arg>
<arg>/rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221127 12:39:19.862" endtime="20221127 12:39:19.863"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221127 12:39:15.352" endtime="20221127 12:39:19.863"/>
</test>
<test id="s1-s1-t2" name="Run printTopology -o" line="30">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology -o</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221127 12:39:19.868" level="INFO">Running command 'ozone admin printTopology -o 2&gt;&amp;1'.</msg>
<msg timestamp="20221127 12:39:23.566" level="INFO">${rc} = 0</msg>
<msg timestamp="20221127 12:39:23.566" level="INFO">${output} = State = HEALTHY
Location: /rack1
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net) IN_SERVICE
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net) IN_SERVICE
 10.5.0.4(ozone-topology_data...</msg>
<status status="PASS" starttime="20221127 12:39:19.866" endtime="20221127 12:39:23.566"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221127 12:39:23.568" level="INFO">State = HEALTHY
Location: /rack1
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net) IN_SERVICE
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net) IN_SERVICE
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net) IN_SERVICE
Location: /rack2
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net) IN_SERVICE
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net) IN_SERVICE
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net) IN_SERVICE</msg>
<status status="PASS" starttime="20221127 12:39:23.567" endtime="20221127 12:39:23.568"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221127 12:39:23.568" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221127 12:39:23.568" endtime="20221127 12:39:23.569"/>
</kw>
<status status="PASS" starttime="20221127 12:39:19.865" endtime="20221127 12:39:23.569"/>
</kw>
<msg timestamp="20221127 12:39:23.569" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221127 12:39:19.865" endtime="20221127 12:39:23.569"/>
</kw>
<msg timestamp="20221127 12:39:23.570" level="INFO">${output} = State = HEALTHY
Location: /rack1
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net) IN_SERVICE
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net) IN_SERVICE
 10.5.0.4(ozone-topology_data...</msg>
<status status="PASS" starttime="20221127 12:39:19.865" endtime="20221127 12:39:23.570"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Location: /rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221127 12:39:23.570" endtime="20221127 12:39:23.570"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net) IN_SERVICE</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221127 12:39:23.570" endtime="20221127 12:39:23.571"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221127 12:39:19.864" endtime="20221127 12:39:23.571"/>
</test>
<test id="s1-s1-t3" name="Run printTopology --operational-state IN_SERVICE" line="34">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology --operational-state IN_SERVICE</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221127 12:39:23.577" level="INFO">Running command 'ozone admin printTopology --operational-state IN_SERVICE 2&gt;&amp;1'.</msg>
<msg timestamp="20221127 12:39:27.296" level="INFO">${rc} = 0</msg>
<msg timestamp="20221127 12:39:27.296" level="INFO">${output} = State = HEALTHY
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.6(ozone-topolog...</msg>
<status status="PASS" starttime="20221127 12:39:23.575" endtime="20221127 12:39:27.296"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221127 12:39:27.297" level="INFO">State = HEALTHY
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2</msg>
<status status="PASS" starttime="20221127 12:39:27.296" endtime="20221127 12:39:27.297"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221127 12:39:27.298" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221127 12:39:27.297" endtime="20221127 12:39:27.298"/>
</kw>
<status status="PASS" starttime="20221127 12:39:23.574" endtime="20221127 12:39:27.298"/>
</kw>
<msg timestamp="20221127 12:39:27.298" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221127 12:39:23.574" endtime="20221127 12:39:27.299"/>
</kw>
<msg timestamp="20221127 12:39:27.299" level="INFO">${output} = State = HEALTHY
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.6(ozone-topolog...</msg>
<status status="PASS" starttime="20221127 12:39:23.573" endtime="20221127 12:39:27.299"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
<arg>IN_SERVICE</arg>
<arg>/rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221127 12:39:27.299" endtime="20221127 12:39:27.300"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221127 12:39:23.572" endtime="20221127 12:39:27.300"/>
</test>
<test id="s1-s1-t4" name="Run printTopology --node-state HEALTHY" line="37">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology --node-state HEALTHY</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221127 12:39:27.307" level="INFO">Running command 'ozone admin printTopology --node-state HEALTHY 2&gt;&amp;1'.</msg>
<msg timestamp="20221127 12:39:31.028" level="INFO">${rc} = 0</msg>
<msg timestamp="20221127 12:39:31.028" level="INFO">${output} = State = HEALTHY
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.6(ozone-topolog...</msg>
<status status="PASS" starttime="20221127 12:39:27.304" endtime="20221127 12:39:31.028"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221127 12:39:31.030" level="INFO">State = HEALTHY
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2</msg>
<status status="PASS" starttime="20221127 12:39:31.029" endtime="20221127 12:39:31.030"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221127 12:39:31.031" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221127 12:39:31.030" endtime="20221127 12:39:31.031"/>
</kw>
<status status="PASS" starttime="20221127 12:39:27.303" endtime="20221127 12:39:31.031"/>
</kw>
<msg timestamp="20221127 12:39:31.031" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221127 12:39:27.303" endtime="20221127 12:39:31.031"/>
</kw>
<msg timestamp="20221127 12:39:31.032" level="INFO">${output} = State = HEALTHY
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.6(ozone-topolog...</msg>
<status status="PASS" starttime="20221127 12:39:27.302" endtime="20221127 12:39:31.032"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
<arg>IN_SERVICE</arg>
<arg>/rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221127 12:39:31.032" endtime="20221127 12:39:31.032"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221127 12:39:27.301" endtime="20221127 12:39:31.033"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20221127 12:39:15.258" endtime="20221127 12:39:31.034"/>
</suite>
<suite id="s1-s2" name="Recon" source="/opt/hadoop/smoketest/recon">
<suite id="s1-s2-s1" name="Recon-Api" source="/opt/hadoop/smoketest/recon/recon-api.robot">
<test id="s1-s2-s1-t1" name="Check if Recon picks up OM data" line="61">
<kw name="Freon OCKG" library="freon" type="SETUP">
<arg>n=10</arg>
<arg>args=-s 1025 -v recon -b api</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221127 12:39:36.592" level="INFO">Running command 'ozone freon ockg  -t 1 -n10 -p ockg -s 1025 -v recon -b api 2&gt;&amp;1'.</msg>
<msg timestamp="20221127 12:39:46.630" level="INFO">${rc} = 0</msg>
<msg timestamp="20221127 12:39:46.630" level="INFO">${output} = 2022-11-27 12:39:38,648 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-27 12:39:38,830 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221127 12:39:36.588" endtime="20221127 12:39:46.630"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221127 12:39:46.635" level="INFO">2022-11-27 12:39:38,648 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-27 12:39:38,830 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-11-27 12:39:38,833 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-11-27 12:39:39,045 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockg and number-of-tests 10
2022-11-27 12:39:39,151 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2022-11-27 12:39:40,155 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2022-11-27 12:39:40,372 [main] INFO rpc.RpcClient: Creating Volume: recon, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2022-11-27 12:39:40,430 [main] INFO rpc.RpcClient: Creating Bucket: recon/api, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false 
2022-11-27 12:39:41,155 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2022-11-27 12:39:41,183 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-11-27 12:39:41,556 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-11-27 12:39:42,156 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2022-11-27 12:39:43,156 [Thread-5] INFO freon.ProgressBar: Progress: 30.00 % (3 out of 10)
2022-11-27 12:39:44,158 [Thread-5] INFO freon.ProgressBar: Progress: 60.00 % (6 out of 10)
2022-11-27 12:39:45,159 [Thread-5] INFO freon.ProgressBar: Progress: 90.00 % (9 out of 10)
2022-11-27 12:39:46,160 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (10 out of 10)
2022-11-27 12:39:46,279 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=10, min=94.626052, max=1878.458906, mean=464.9570779439482, stddev=555.8299817976458, median=168.92557, p75=609.16809, p95=1878.458906, p98=1878.458906, p99=1878.458906, p999=1878.458906, mean_rate=1.7295739407784176, m1=2.0, m5=2.0, m15=2.0, rate_unit=events/second, duration_unit=milliseconds
2022-11-27 12:39:46,280 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 7
2022-11-27 12:39:46,280 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-11-27 12:39:46,280 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 10</msg>
<status status="PASS" starttime="20221127 12:39:46.633" endtime="20221127 12:39:46.636"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221127 12:39:46.636" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221127 12:39:46.636" endtime="20221127 12:39:46.637"/>
</kw>
<status status="PASS" starttime="20221127 12:39:36.587" endtime="20221127 12:39:46.637"/>
</kw>
<msg timestamp="20221127 12:39:46.637" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221127 12:39:36.587" endtime="20221127 12:39:46.638"/>
</kw>
<msg timestamp="20221127 12:39:46.639" level="INFO">${result} = 2022-11-27 12:39:38,648 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-27 12:39:38,830 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221127 12:39:36.586" endtime="20221127 12:39:46.639"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221127 12:39:46.639" endtime="20221127 12:39:46.639"/>
</kw>
<status status="PASS" starttime="20221127 12:39:36.586" endtime="20221127 12:39:46.639"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Check if Recon picks up container from OM</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221127 12:39:46.641" endtime="20221127 12:39:46.641"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221127 12:39:46.645" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20221127 12:39:46.893" level="INFO">${rc} = 0</msg>
<msg timestamp="20221127 12:39:46.893" level="INFO">${output} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221127 12:39:46.642" endtime="20221127 12:39:46.893"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221127 12:39:46.895" level="INFO">{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221127 12:39:46.893" endtime="20221127 12:39:46.895"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221127 12:39:46.896" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221127 12:39:46.895" endtime="20221127 12:39:46.896"/>
</kw>
<status status="PASS" starttime="20221127 12:39:46.642" endtime="20221127 12:39:46.896"/>
</kw>
<msg timestamp="20221127 12:39:46.897" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221127 12:39:46.642" endtime="20221127 12:39:46.899"/>
</kw>
<msg timestamp="20221127 12:39:46.899" level="INFO">${result} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221127 12:39:46.641" endtime="20221127 12:39:46.899"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221127 12:39:46.900" endtime="20221127 12:39:46.900"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221127 12:39:46.909" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20221127 12:39:46.943" level="INFO">${rc} = 0</msg>
<msg timestamp="20221127 12:39:46.943" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221127 12:39:46.902" endtime="20221127 12:39:46.943"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221127 12:39:46.944" level="INFO">[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221127 12:39:46.944" endtime="20221127 12:39:46.944"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221127 12:39:46.945" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221127 12:39:46.944" endtime="20221127 12:39:46.945"/>
</kw>
<status status="PASS" starttime="20221127 12:39:46.902" endtime="20221127 12:39:46.946"/>
</kw>
<msg timestamp="20221127 12:39:46.946" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221127 12:39:46.902" endtime="20221127 12:39:46.947"/>
</kw>
<msg timestamp="20221127 12:39:46.947" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221127 12:39:46.901" endtime="20221127 12:39:46.947"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20221127 12:39:46.948" level="FAIL">'[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20221127 12:39:46.947" endtime="20221127 12:39:46.948"/>
</kw>
<status status="FAIL" starttime="20221127 12:39:46.640" endtime="20221127 12:39:46.949"/>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221127 12:39:56.951" endtime="20221127 12:39:56.951"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221127 12:39:56.957" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20221127 12:39:56.975" level="INFO">${rc} = 0</msg>
<msg timestamp="20221127 12:39:56.975" level="INFO">${output} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221127 12:39:56.953" endtime="20221127 12:39:56.975"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221127 12:39:56.976" level="INFO">{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221127 12:39:56.975" endtime="20221127 12:39:56.976"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221127 12:39:56.977" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221127 12:39:56.976" endtime="20221127 12:39:56.977"/>
</kw>
<status status="PASS" starttime="20221127 12:39:56.952" endtime="20221127 12:39:56.977"/>
</kw>
<msg timestamp="20221127 12:39:56.977" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221127 12:39:56.952" endtime="20221127 12:39:56.977"/>
</kw>
<msg timestamp="20221127 12:39:56.978" level="INFO">${result} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221127 12:39:56.951" endtime="20221127 12:39:56.978"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221127 12:39:56.978" endtime="20221127 12:39:56.978"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221127 12:39:56.983" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20221127 12:39:57.002" level="INFO">${rc} = 0</msg>
<msg timestamp="20221127 12:39:57.003" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221127 12:39:56.980" endtime="20221127 12:39:57.003"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221127 12:39:57.004" level="INFO">[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221127 12:39:57.003" endtime="20221127 12:39:57.004"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221127 12:39:57.005" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221127 12:39:57.004" endtime="20221127 12:39:57.005"/>
</kw>
<status status="PASS" starttime="20221127 12:39:56.979" endtime="20221127 12:39:57.005"/>
</kw>
<msg timestamp="20221127 12:39:57.005" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221127 12:39:56.979" endtime="20221127 12:39:57.006"/>
</kw>
<msg timestamp="20221127 12:39:57.006" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221127 12:39:56.979" endtime="20221127 12:39:57.006"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20221127 12:39:57.007" level="FAIL">'[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20221127 12:39:57.006" endtime="20221127 12:39:57.007"/>
</kw>
<status status="FAIL" starttime="20221127 12:39:56.950" endtime="20221127 12:39:57.008"/>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221127 12:40:07.009" endtime="20221127 12:40:07.010"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221127 12:40:07.014" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20221127 12:40:07.032" level="INFO">${rc} = 0</msg>
<msg timestamp="20221127 12:40:07.032" level="INFO">${output} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221127 12:40:07.011" endtime="20221127 12:40:07.032"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221127 12:40:07.033" level="INFO">{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221127 12:40:07.032" endtime="20221127 12:40:07.033"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221127 12:40:07.034" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221127 12:40:07.034" endtime="20221127 12:40:07.034"/>
</kw>
<status status="PASS" starttime="20221127 12:40:07.011" endtime="20221127 12:40:07.035"/>
</kw>
<msg timestamp="20221127 12:40:07.035" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221127 12:40:07.011" endtime="20221127 12:40:07.035"/>
</kw>
<msg timestamp="20221127 12:40:07.035" level="INFO">${result} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221127 12:40:07.010" endtime="20221127 12:40:07.035"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221127 12:40:07.036" endtime="20221127 12:40:07.036"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221127 12:40:07.041" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20221127 12:40:07.057" level="INFO">${rc} = 0</msg>
<msg timestamp="20221127 12:40:07.057" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221127 12:40:07.038" endtime="20221127 12:40:07.057"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221127 12:40:07.058" level="INFO">[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221127 12:40:07.057" endtime="20221127 12:40:07.058"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221127 12:40:07.059" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221127 12:40:07.059" endtime="20221127 12:40:07.059"/>
</kw>
<status status="PASS" starttime="20221127 12:40:07.037" endtime="20221127 12:40:07.060"/>
</kw>
<msg timestamp="20221127 12:40:07.060" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221127 12:40:07.037" endtime="20221127 12:40:07.060"/>
</kw>
<msg timestamp="20221127 12:40:07.060" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221127 12:40:07.036" endtime="20221127 12:40:07.060"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20221127 12:40:07.062" level="FAIL">'[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20221127 12:40:07.061" endtime="20221127 12:40:07.062"/>
</kw>
<status status="FAIL" starttime="20221127 12:40:07.008" endtime="20221127 12:40:07.063"/>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221127 12:40:17.064" endtime="20221127 12:40:17.065"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221127 12:40:17.070" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20221127 12:40:17.094" level="INFO">${rc} = 0</msg>
<msg timestamp="20221127 12:40:17.094" level="INFO">${output} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221127 12:40:17.067" endtime="20221127 12:40:17.094"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221127 12:40:17.096" level="INFO">{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221127 12:40:17.095" endtime="20221127 12:40:17.096"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221127 12:40:17.097" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221127 12:40:17.097" endtime="20221127 12:40:17.097"/>
</kw>
<status status="PASS" starttime="20221127 12:40:17.065" endtime="20221127 12:40:17.098"/>
</kw>
<msg timestamp="20221127 12:40:17.098" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221127 12:40:17.065" endtime="20221127 12:40:17.102"/>
</kw>
<msg timestamp="20221127 12:40:17.103" level="INFO">${result} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221127 12:40:17.065" endtime="20221127 12:40:17.103"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221127 12:40:17.103" endtime="20221127 12:40:17.105"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221127 12:40:17.117" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20221127 12:40:17.175" level="INFO">${rc} = 0</msg>
<msg timestamp="20221127 12:40:17.175" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221127 12:40:17.109" endtime="20221127 12:40:17.175"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221127 12:40:17.179" level="INFO">[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221127 12:40:17.175" endtime="20221127 12:40:17.179"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221127 12:40:17.188" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221127 12:40:17.179" endtime="20221127 12:40:17.188"/>
</kw>
<status status="PASS" starttime="20221127 12:40:17.109" endtime="20221127 12:40:17.188"/>
</kw>
<msg timestamp="20221127 12:40:17.188" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221127 12:40:17.106" endtime="20221127 12:40:17.189"/>
</kw>
<msg timestamp="20221127 12:40:17.189" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221127 12:40:17.105" endtime="20221127 12:40:17.189"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20221127 12:40:17.208" level="FAIL">'[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20221127 12:40:17.189" endtime="20221127 12:40:17.209"/>
</kw>
<status status="FAIL" starttime="20221127 12:40:17.063" endtime="20221127 12:40:17.210"/>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221127 12:40:27.212" endtime="20221127 12:40:27.212"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221127 12:40:27.217" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20221127 12:40:27.237" level="INFO">${rc} = 0</msg>
<msg timestamp="20221127 12:40:27.237" level="INFO">${output} = {"data":{"totalCount":4,"containers":[{"ContainerID":1,"NumberOfKeys":6},{"ContainerID":2,"NumberOfKeys":2},{"ContainerID":3,"NumberOfKeys":2},{"ContainerID":4,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221127 12:40:27.214" endtime="20221127 12:40:27.237"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221127 12:40:27.239" level="INFO">{"data":{"totalCount":4,"containers":[{"ContainerID":1,"NumberOfKeys":6},{"ContainerID":2,"NumberOfKeys":2},{"ContainerID":3,"NumberOfKeys":2},{"ContainerID":4,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221127 12:40:27.237" endtime="20221127 12:40:27.239"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221127 12:40:27.239" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221127 12:40:27.239" endtime="20221127 12:40:27.240"/>
</kw>
<status status="PASS" starttime="20221127 12:40:27.213" endtime="20221127 12:40:27.240"/>
</kw>
<msg timestamp="20221127 12:40:27.240" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221127 12:40:27.213" endtime="20221127 12:40:27.241"/>
</kw>
<msg timestamp="20221127 12:40:27.241" level="INFO">${result} = {"data":{"totalCount":4,"containers":[{"ContainerID":1,"NumberOfKeys":6},{"ContainerID":2,"NumberOfKeys":2},{"ContainerID":3,"NumberOfKeys":2},{"ContainerID":4,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221127 12:40:27.212" endtime="20221127 12:40:27.241"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221127 12:40:27.241" endtime="20221127 12:40:27.242"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221127 12:40:27.246" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20221127 12:40:27.264" level="INFO">${rc} = 0</msg>
<msg timestamp="20221127 12:40:27.264" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1},{"volume":"recon","bucket":"api","fileSize":2048,"count":10}]</msg>
<status status="PASS" starttime="20221127 12:40:27.243" endtime="20221127 12:40:27.264"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221127 12:40:27.265" level="INFO">[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1},{"volume":"recon","bucket":"api","fileSize":2048,"count":10}]</msg>
<status status="PASS" starttime="20221127 12:40:27.265" endtime="20221127 12:40:27.266"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221127 12:40:27.266" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221127 12:40:27.266" endtime="20221127 12:40:27.267"/>
</kw>
<status status="PASS" starttime="20221127 12:40:27.243" endtime="20221127 12:40:27.267"/>
</kw>
<msg timestamp="20221127 12:40:27.267" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221127 12:40:27.243" endtime="20221127 12:40:27.268"/>
</kw>
<msg timestamp="20221127 12:40:27.268" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1},{"volume":"recon","bucket":"api","fileSize":2048,"count":10}]</msg>
<status status="PASS" starttime="20221127 12:40:27.242" endtime="20221127 12:40:27.268"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221127 12:40:27.268" endtime="20221127 12:40:27.268"/>
</kw>
<status status="PASS" starttime="20221127 12:40:27.211" endtime="20221127 12:40:27.269"/>
</kw>
<status status="PASS" starttime="20221127 12:39:46.640" endtime="20221127 12:40:27.269"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221127 12:39:36.585" endtime="20221127 12:40:27.269"/>
</test>
<test id="s1-s2-s1-t2" name="Check if Recon picks up DN heartbeats" line="65">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/datanodes</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221127 12:40:27.276" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/datanodes 2&gt;&amp;1'.</msg>
<msg timestamp="20221127 12:40:27.316" level="INFO">${rc} = 0</msg>
<msg timestamp="20221127 12:40:27.316" level="INFO">${output} = {"totalCount":6,"datanodes":[{"uuid":"dfb5aaa2-941d-4033-9346-2e54beb5326e","hostname":"ozone-topology_datanode_5_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1669552...</msg>
<status status="PASS" starttime="20221127 12:40:27.273" endtime="20221127 12:40:27.317"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221127 12:40:27.318" level="INFO">{"totalCount":6,"datanodes":[{"uuid":"dfb5aaa2-941d-4033-9346-2e54beb5326e","hostname":"ozone-topology_datanode_5_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1669552812806,"storageReport":{"capacity":89297309696,"used":21511,"remaining":29141340160},"pipelines":[{"pipelineID":"82e00b8e-3b3e-456d-9da8-56420e1a7ac9","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net"},{"pipelineID":"0bfadfbb-62e9-40ab-99dc-e68d13847f63","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net"},{"pipelineID":"eaffacc1-b739-45dc-9d96-59ec91ca1af1","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net"}],"containers":2,"openContainers":2,"leaderCount":2,"version":"1.3.0-SNAPSHOT","setupTime":1669552654140,"revision":"7f3f28c54e68fc52b40e8a413d1e67c746e79856","buildDate":"2022-11-27T12:13Z","layoutVersion":4,"networkLocation":"/rack2"},{"uuid":"7c316cb9-36b0-4714-a4ff-87036ddccd3f","hostname":"ozone-topology_datanode_4_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1669552814447,"storageReport":{"capacity":89297309696,"used":8196,"remaining":29141340160},"pipelines":[{"pipelineID":"736aec26-0aac-417d-8569-6a952e3816ea","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net"},{"pipelineID":"82e00b8e-3b3e-456d-9da8-56420e1a7ac9","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net"},{"pipelineID":"6af3ae27-7a1b-45e1-bf54-d9b39d81cf3d","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net"}],"containers":2,"openContainers":2,"leaderCount":1,"version":"1.3.0-SNAPSHOT","setupTime":1669552657238,"revision":"7f3f28c54e68fc52b40e8a413d1e67c746e79856","buildDate":"2022-11-27T12:13Z","layoutVersion":4,"networkLocation":"/rack2"},{"uuid":"de1506f1-f5ae-4061-add2-157b1cb522e1","hostname":"ozone-topology_datanode_3_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1669552814469,"storageReport":{"capacity":89297309696,"used":8196,"remaining":29141340160},"pipelines":[{"pipelineID":"504056e6-70c6-4be3-931d-d7298ec39af4","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net"},{"pipelineID":"82e00b8e-3b3e-456d-9da8-56420e1a7ac9","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net"},{"pipelineID":"6af3ae27-7a1b-45e1-bf54-d9b39d81cf3d","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net"}],"containers":2,"openContainers":2,"leaderCount":1,"version":"1.3.0-SNAPSHOT","setupTime":1669552656403,"revision":"7f3f28c54e68fc52b40e8a413d1e67c746e79856","buildDate":"2022-11-27T12:13Z","layoutVersion":4,"networkLocation":"/rack1"},{"uuid":"6c8140ba-701c-42be-af58-b220d94a29dc","hostname":"ozone-topology_datanode_6_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1669552815026,"storageReport":{"capacity":89297309696,"used":20486,"remaining":29141340160},"pipelines":[{"pipelineID":"ac1e1835-26fa-47db-9280-d8c9cf891e9b","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net"},{"pipelineID":"0bfadfbb-62e9-40ab-99dc-e68d13847f63","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net"},{"pipelineID":"1cd0ebf4-45d0-420f-94f5-f06022c76014","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net"}],"containers":2,"openContainers":2,"leaderCount":2,"version":"1.3.0-SNAPSHOT","setupTime":1669552656914,"revision":"7f3f28c54e68fc52b40e8a413d1e67c746e79856","buildDate":"2022-11-27T12:13Z","layoutVersion":4,"networkLocation":"/rack2"},{"uuid":"d15502e7-cc9e-48c0-8267-0c047e2743a5","hostname":"ozone-topology_datanode_2_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1669552815056,"storageReport":{"capacity":89297309696,"used":24582,"remaining":29141340160},"pipelines":[{"pipelineID":"ac1e1835-26fa-47db-9280-d8c9cf891e9b","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net"},{"pipelineID":"0bfadfbb-62e9-40ab-99dc-e68d13847f63","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net"},{"pipelineID":"9ff27d70-8510-4406-b66b-554f4b10f346","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net"}],"containers":2,"openContainers":2,"leaderCount":2,"version":"1.3.0-SNAPSHOT","setupTime":1669552654449,"revision":"7f3f28c54e68fc52b40e8a413d1e67c746e79856","buildDate":"2022-11-27T12:13Z","layoutVersion":4,"networkLocation":"/rack1"},{"uuid":"5a02562c-c52c-4f75-b473-25d3d02cf9a4","hostname":"ozone-topology_datanode_1_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1669552815056,"storageReport":{"capacity":89297309696,"used":7171,"remaining":29141340160},"pipelines":[{"pipelineID":"ac1e1835-26fa-47db-9280-d8c9cf891e9b","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net"},{"pipelineID":"6af3ae27-7a1b-45e1-bf54-d9b39d81cf3d","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net"},{"pipelineID":"8c7ea80b-813e-406e-8889-7a68f05ea8d0","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net"}],"containers":2,"openContainers":2,"leaderCount":2,"version":"1.3.0-SNAPSHOT","setupTime":1669552656319,"revision":"7f3f28c54e68fc52b40e8a413d1e67c746e79856","buildDate":"2022-11-27T12:13Z","layoutVersion":4,"networkLocation":"/rack1"}]}</msg>
<status status="PASS" starttime="20221127 12:40:27.317" endtime="20221127 12:40:27.318"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221127 12:40:27.319" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221127 12:40:27.319" endtime="20221127 12:40:27.319"/>
</kw>
<status status="PASS" starttime="20221127 12:40:27.272" endtime="20221127 12:40:27.320"/>
</kw>
<msg timestamp="20221127 12:40:27.320" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221127 12:40:27.272" endtime="20221127 12:40:27.320"/>
</kw>
<msg timestamp="20221127 12:40:27.320" level="INFO">${result} = {"totalCount":6,"datanodes":[{"uuid":"dfb5aaa2-941d-4033-9346-2e54beb5326e","hostname":"ozone-topology_datanode_5_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1669552...</msg>
<status status="PASS" starttime="20221127 12:40:27.271" endtime="20221127 12:40:27.320"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanodes</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221127 12:40:27.321" endtime="20221127 12:40:27.321"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221127 12:40:27.321" endtime="20221127 12:40:27.321"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221127 12:40:27.322" endtime="20221127 12:40:27.322"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221127 12:40:27.322" endtime="20221127 12:40:27.322"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/pipelines</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221127 12:40:27.327" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/pipelines 2&gt;&amp;1'.</msg>
<msg timestamp="20221127 12:40:27.357" level="INFO">${rc} = 0</msg>
<msg timestamp="20221127 12:40:27.357" level="INFO">${output} = {"totalCount":10,"pipelines":[{"pipelineId":"504056e6-70c6-4be3-931d-d7298ec39af4","status":"OPEN","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net","datanodes":["ozone-topology_datanode_3...</msg>
<status status="PASS" starttime="20221127 12:40:27.324" endtime="20221127 12:40:27.357"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221127 12:40:27.358" level="INFO">{"totalCount":10,"pipelines":[{"pipelineId":"504056e6-70c6-4be3-931d-d7298ec39af4","status":"OPEN","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net","datanodes":["ozone-topology_datanode_3_1.ozone-topology_net"],"lastLeaderElection":0,"duration":122019,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"ac1e1835-26fa-47db-9280-d8c9cf891e9b","status":"OPEN","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net","datanodes":["ozone-topology_datanode_6_1.ozone-topology_net","ozone-topology_datanode_2_1.ozone-topology_net","ozone-topology_datanode_1_1.ozone-topology_net"],"lastLeaderElection":0,"duration":119198,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"THREE","containers":1},{"pipelineId":"736aec26-0aac-417d-8569-6a952e3816ea","status":"OPEN","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net","datanodes":["ozone-topology_datanode_4_1.ozone-topology_net"],"lastLeaderElection":0,"duration":119629,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"82e00b8e-3b3e-456d-9da8-56420e1a7ac9","status":"OPEN","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net","datanodes":["ozone-topology_datanode_5_1.ozone-topology_net","ozone-topology_datanode_3_1.ozone-topology_net","ozone-topology_datanode_4_1.ozone-topology_net"],"lastLeaderElection":0,"duration":120001,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"THREE","containers":1},{"pipelineId":"0bfadfbb-62e9-40ab-99dc-e68d13847f63","status":"OPEN","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net","datanodes":["ozone-topology_datanode_6_1.ozone-topology_net","ozone-topology_datanode_2_1.ozone-topology_net","ozone-topology_datanode_5_1.ozone-topology_net"],"lastLeaderElection":0,"duration":119865,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"THREE","containers":1},{"pipelineId":"6af3ae27-7a1b-45e1-bf54-d9b39d81cf3d","status":"OPEN","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net","datanodes":["ozone-topology_datanode_1_1.ozone-topology_net","ozone-topology_datanode_4_1.ozone-topology_net","ozone-topology_datanode_3_1.ozone-topology_net"],"lastLeaderElection":0,"duration":119444,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"THREE","containers":1},{"pipelineId":"9ff27d70-8510-4406-b66b-554f4b10f346","status":"OPEN","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net","datanodes":["ozone-topology_datanode_2_1.ozone-topology_net"],"lastLeaderElection":0,"duration":119093,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"eaffacc1-b739-45dc-9d96-59ec91ca1af1","status":"OPEN","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net","datanodes":["ozone-topology_datanode_5_1.ozone-topology_net"],"lastLeaderElection":0,"duration":119934,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"8c7ea80b-813e-406e-8889-7a68f05ea8d0","status":"OPEN","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net","datanodes":["ozone-topology_datanode_1_1.ozone-topology_net"],"lastLeaderElection":0,"duration":119001,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"1cd0ebf4-45d0-420f-94f5-f06022c76014","status":"OPEN","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net","datanodes":["ozone-topology_datanode_6_1.ozone-topology_net"],"lastLeaderElection":0,"duration":119365,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0}]}</msg>
<status status="PASS" starttime="20221127 12:40:27.357" endtime="20221127 12:40:27.358"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221127 12:40:27.359" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221127 12:40:27.359" endtime="20221127 12:40:27.359"/>
</kw>
<status status="PASS" starttime="20221127 12:40:27.324" endtime="20221127 12:40:27.360"/>
</kw>
<msg timestamp="20221127 12:40:27.360" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221127 12:40:27.323" endtime="20221127 12:40:27.360"/>
</kw>
<msg timestamp="20221127 12:40:27.360" level="INFO">${result} = {"totalCount":10,"pipelines":[{"pipelineId":"504056e6-70c6-4be3-931d-d7298ec39af4","status":"OPEN","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net","datanodes":["ozone-topology_datanode_3...</msg>
<status status="PASS" starttime="20221127 12:40:27.323" endtime="20221127 12:40:27.361"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>pipelines</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221127 12:40:27.361" endtime="20221127 12:40:27.361"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221127 12:40:27.361" endtime="20221127 12:40:27.362"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OPEN</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221127 12:40:27.362" endtime="20221127 12:40:27.363"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221127 12:40:27.364" endtime="20221127 12:40:27.375"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221127 12:40:27.375" endtime="20221127 12:40:27.375"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221127 12:40:27.375" endtime="20221127 12:40:27.376"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/clusterState</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221127 12:40:27.387" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20221127 12:40:27.459" level="INFO">${rc} = 0</msg>
<msg timestamp="20221127 12:40:27.459" level="INFO">${output} = {"pipelines":10,"totalDatanodes":6,"healthyDatanodes":6,"storageReport":{"capacity":535783858176,"used":90142,"remaining":174848040960},"containers":4,"missingContainers":0,"volumes":3,"buckets":2,"ke...</msg>
<status status="PASS" starttime="20221127 12:40:27.384" endtime="20221127 12:40:27.459"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221127 12:40:27.460" level="INFO">{"pipelines":10,"totalDatanodes":6,"healthyDatanodes":6,"storageReport":{"capacity":535783858176,"used":90142,"remaining":174848040960},"containers":4,"missingContainers":0,"volumes":3,"buckets":2,"keys":11}</msg>
<status status="PASS" starttime="20221127 12:40:27.459" endtime="20221127 12:40:27.460"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221127 12:40:27.461" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221127 12:40:27.460" endtime="20221127 12:40:27.461"/>
</kw>
<status status="PASS" starttime="20221127 12:40:27.383" endtime="20221127 12:40:27.461"/>
</kw>
<msg timestamp="20221127 12:40:27.461" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221127 12:40:27.383" endtime="20221127 12:40:27.461"/>
</kw>
<msg timestamp="20221127 12:40:27.462" level="INFO">${result} = {"pipelines":10,"totalDatanodes":6,"healthyDatanodes":6,"storageReport":{"capacity":535783858176,"used":90142,"remaining":174848040960},"containers":4,"missingContainers":0,"volumes":3,"buckets":2,"ke...</msg>
<status status="PASS" starttime="20221127 12:40:27.382" endtime="20221127 12:40:27.462"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"totalDatanodes\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221127 12:40:27.462" endtime="20221127 12:40:27.462"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"healthyDatanodes\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221127 12:40:27.463" endtime="20221127 12:40:27.463"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"pipelines\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221127 12:40:27.463" endtime="20221127 12:40:27.464"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers/1/replicaHistory</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221127 12:40:27.468" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers/1/replicaHistory 2&gt;&amp;1'.</msg>
<msg timestamp="20221127 12:40:27.488" level="INFO">${rc} = 0</msg>
<msg timestamp="20221127 12:40:27.488" level="INFO">${output} = [{"containerId":1,"datanodeUuid":"dfb5aaa2-941d-4033-9346-2e54beb5326e","datanodeHost":"ozone-topology_datanode_5_1.ozone-topology_net","firstSeenTime":1669552736074,"lastSeenTime":1669552739005,"last...</msg>
<status status="PASS" starttime="20221127 12:40:27.466" endtime="20221127 12:40:27.488"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221127 12:40:27.490" level="INFO">[{"containerId":1,"datanodeUuid":"dfb5aaa2-941d-4033-9346-2e54beb5326e","datanodeHost":"ozone-topology_datanode_5_1.ozone-topology_net","firstSeenTime":1669552736074,"lastSeenTime":1669552739005,"lastBcsId":2},{"containerId":1,"datanodeUuid":"6c8140ba-701c-42be-af58-b220d94a29dc","datanodeHost":"ozone-topology_datanode_6_1.ozone-topology_net","firstSeenTime":1669552735754,"lastSeenTime":1669552735754,"lastBcsId":0},{"containerId":1,"datanodeUuid":"d15502e7-cc9e-48c0-8267-0c047e2743a5","datanodeHost":"ozone-topology_datanode_2_1.ozone-topology_net","firstSeenTime":1669552735907,"lastSeenTime":1669552738671,"lastBcsId":0}]</msg>
<status status="PASS" starttime="20221127 12:40:27.489" endtime="20221127 12:40:27.490"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221127 12:40:27.491" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221127 12:40:27.490" endtime="20221127 12:40:27.491"/>
</kw>
<status status="PASS" starttime="20221127 12:40:27.465" endtime="20221127 12:40:27.491"/>
</kw>
<msg timestamp="20221127 12:40:27.492" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221127 12:40:27.465" endtime="20221127 12:40:27.492"/>
</kw>
<msg timestamp="20221127 12:40:27.492" level="INFO">${result} = [{"containerId":1,"datanodeUuid":"dfb5aaa2-941d-4033-9346-2e54beb5326e","datanodeHost":"ozone-topology_datanode_5_1.ozone-topology_net","firstSeenTime":1669552736074,"lastSeenTime":1669552739005,"last...</msg>
<status status="PASS" starttime="20221127 12:40:27.464" endtime="20221127 12:40:27.493"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"containerId\":1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221127 12:40:27.493" endtime="20221127 12:40:27.493"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221127 12:40:27.271" endtime="20221127 12:40:27.494"/>
</test>
<test id="s1-s2-s1-t3" name="Check if Recon Web UI is up" line="88">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221127 12:40:27.496" endtime="20221127 12:40:27.496"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${ENDPOINT_URL}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221127 12:40:27.501" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20221127 12:40:27.521" level="INFO">${rc} = 0</msg>
<msg timestamp="20221127 12:40:27.521" level="INFO">${output} = &lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" ...</msg>
<status status="PASS" starttime="20221127 12:40:27.498" endtime="20221127 12:40:27.521"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221127 12:40:27.522" level="INFO">&lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" content="#000000"/&gt;&lt;link rel="manifest" href="/manifest.json"/&gt;&lt;link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto:300,400,500"/&gt;&lt;title&gt;Ozone Recon&lt;/title&gt;&lt;link href="/static/css/2.7465223f.chunk.css" rel="stylesheet"&gt;&lt;link href="/static/css/main.0c211d12.chunk.css" rel="stylesheet"&gt;&lt;/head&gt;&lt;body&gt;&lt;noscript&gt;You need to enable JavaScript to run this app.&lt;/noscript&gt;&lt;div id="root"&gt;&lt;/div&gt;&lt;script&gt;!function(e){function r(r){for(var n,l,f=r[0],i=r[1],a=r[2],p=0,s=[];p&lt;f.length;p++)l=f[p],Object.prototype.hasOwnProperty.call(o,l)&amp;&amp;o[l]&amp;&amp;s.push(o[l][0]),o[l]=0;for(n in i)Object.prototype.hasOwnProperty.call(i,n)&amp;&amp;(e[n]=i[n]);for(c&amp;&amp;c(r);s.length;)s.shift()();return u.push.apply(u,a||[]),t()}function t(){for(var e,r=0;r&lt;u.length;r++){for(var t=u[r],n=!0,f=1;f&lt;t.length;f++){var i=t[f];0!==o[i]&amp;&amp;(n=!1)}n&amp;&amp;(u.splice(r--,1),e=l(l.s=t[0]))}return e}var n={},o={1:0},u=[];function l(r){if(n[r])return n[r].exports;var t=n[r]={i:r,l:!1,exports:{}};return e[r].call(t.exports,t,t.exports,l),t.l=!0,t.exports}l.m=e,l.c=n,l.d=function(e,r,t){l.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:t})},l.r=function(e){"undefined"!=typeof Symbol&amp;&amp;Symbol.toStringTag&amp;&amp;Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},l.t=function(e,r){if(1&amp;r&amp;&amp;(e=l(e)),8&amp;r)return e;if(4&amp;r&amp;&amp;"object"==typeof e&amp;&amp;e&amp;&amp;e.__esModule)return e;var t=Object.create(null);if(l.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&amp;r&amp;&amp;"string"!=typeof e)for(var n in e)l.d(t,n,function(r){return e[r]}.bind(null,n));return t},l.n=function(e){var r=e&amp;&amp;e.__esModule?function(){return e.default}:function(){return e};return l.d(r,"a",r),r},l.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},l.p="/";var f=this["webpackJsonpozone-recon"]=this["webpackJsonpozone-recon"]||[],i=f.push.bind(f);f.push=r,f=f.slice();for(var a=0;a&lt;f.length;a++)r(f[a]);var c=i;t()}([])&lt;/script&gt;&lt;script src="/static/js/2.f3fa3186.chunk.js"&gt;&lt;/script&gt;&lt;script src="/static/js/main.885ac5d8.chunk.js"&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;</msg>
<status status="PASS" starttime="20221127 12:40:27.521" endtime="20221127 12:40:27.522"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221127 12:40:27.523" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221127 12:40:27.522" endtime="20221127 12:40:27.523"/>
</kw>
<status status="PASS" starttime="20221127 12:40:27.497" endtime="20221127 12:40:27.524"/>
</kw>
<msg timestamp="20221127 12:40:27.524" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221127 12:40:27.497" endtime="20221127 12:40:27.524"/>
</kw>
<msg timestamp="20221127 12:40:27.525" level="INFO">${result} = &lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" ...</msg>
<status status="PASS" starttime="20221127 12:40:27.496" endtime="20221127 12:40:27.525"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Ozone Recon</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221127 12:40:27.525" endtime="20221127 12:40:27.525"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221127 12:40:27.495" endtime="20221127 12:40:27.527"/>
</test>
<test id="s1-s2-s1-t4" name="Check web UI access" line="93">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221127 12:40:27.533" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20221127 12:40:27.538" level="INFO">${rc} = 0</msg>
<msg timestamp="20221127 12:40:27.538" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221127 12:40:27.531" endtime="20221127 12:40:27.538"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221127 12:40:27.539" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221127 12:40:27.539" endtime="20221127 12:40:27.540"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221127 12:40:27.540" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221127 12:40:27.540" endtime="20221127 12:40:27.540"/>
</kw>
<status status="PASS" starttime="20221127 12:40:27.530" endtime="20221127 12:40:27.541"/>
</kw>
<msg timestamp="20221127 12:40:27.541" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221127 12:40:27.530" endtime="20221127 12:40:27.541"/>
</kw>
<status status="PASS" starttime="20221127 12:40:27.529" endtime="20221127 12:40:27.541"/>
</kw>
<kw name="Check http return code">
<arg>${ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221127 12:40:27.547" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20221127 12:40:27.561" level="INFO">${rc} = 0</msg>
<msg timestamp="20221127 12:40:27.561" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221127 12:40:27.544" endtime="20221127 12:40:27.561"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221127 12:40:27.562" level="INFO">200</msg>
<status status="PASS" starttime="20221127 12:40:27.561" endtime="20221127 12:40:27.562"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221127 12:40:27.563" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221127 12:40:27.563" endtime="20221127 12:40:27.564"/>
</kw>
<status status="PASS" starttime="20221127 12:40:27.544" endtime="20221127 12:40:27.564"/>
</kw>
<msg timestamp="20221127 12:40:27.564" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221127 12:40:27.543" endtime="20221127 12:40:27.565"/>
</kw>
<msg timestamp="20221127 12:40:27.565" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221127 12:40:27.543" endtime="20221127 12:40:27.565"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221127 12:40:27.565" endtime="20221127 12:40:27.565"/>
</kw>
<status status="NOT RUN" starttime="20221127 12:40:27.565" endtime="20221127 12:40:27.566"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221127 12:40:27.566" endtime="20221127 12:40:27.566"/>
</kw>
<status status="PASS" starttime="20221127 12:40:27.566" endtime="20221127 12:40:27.566"/>
</branch>
<status status="PASS" starttime="20221127 12:40:27.565" endtime="20221127 12:40:27.566"/>
</if>
<status status="PASS" starttime="20221127 12:40:27.542" endtime="20221127 12:40:27.567"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221127 12:40:27.567" endtime="20221127 12:40:27.568"/>
</kw>
<status status="PASS" starttime="20221127 12:40:27.567" endtime="20221127 12:40:27.568"/>
</kw>
<kw name="Check http return code">
<arg>${ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221127 12:40:27.572" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20221127 12:40:27.586" level="INFO">${rc} = 0</msg>
<msg timestamp="20221127 12:40:27.586" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221127 12:40:27.570" endtime="20221127 12:40:27.586"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221127 12:40:27.587" level="INFO">200</msg>
<status status="PASS" starttime="20221127 12:40:27.586" endtime="20221127 12:40:27.587"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221127 12:40:27.588" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221127 12:40:27.587" endtime="20221127 12:40:27.588"/>
</kw>
<status status="PASS" starttime="20221127 12:40:27.569" endtime="20221127 12:40:27.588"/>
</kw>
<msg timestamp="20221127 12:40:27.588" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221127 12:40:27.569" endtime="20221127 12:40:27.589"/>
</kw>
<msg timestamp="20221127 12:40:27.589" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221127 12:40:27.569" endtime="20221127 12:40:27.589"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221127 12:40:27.589" endtime="20221127 12:40:27.589"/>
</kw>
<status status="NOT RUN" starttime="20221127 12:40:27.589" endtime="20221127 12:40:27.589"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221127 12:40:27.590" endtime="20221127 12:40:27.590"/>
</kw>
<status status="PASS" starttime="20221127 12:40:27.590" endtime="20221127 12:40:27.590"/>
</branch>
<status status="PASS" starttime="20221127 12:40:27.589" endtime="20221127 12:40:27.590"/>
</if>
<status status="PASS" starttime="20221127 12:40:27.568" endtime="20221127 12:40:27.590"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221127 12:40:27.528" endtime="20221127 12:40:27.591"/>
</test>
<test id="s1-s2-s1-t5" name="Check admin only api access" line="101">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221127 12:40:27.597" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20221127 12:40:27.600" level="INFO">${rc} = 0</msg>
<msg timestamp="20221127 12:40:27.600" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221127 12:40:27.594" endtime="20221127 12:40:27.600"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221127 12:40:27.602" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221127 12:40:27.601" endtime="20221127 12:40:27.602"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221127 12:40:27.602" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221127 12:40:27.602" endtime="20221127 12:40:27.602"/>
</kw>
<status status="PASS" starttime="20221127 12:40:27.594" endtime="20221127 12:40:27.603"/>
</kw>
<msg timestamp="20221127 12:40:27.603" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221127 12:40:27.593" endtime="20221127 12:40:27.603"/>
</kw>
<status status="PASS" starttime="20221127 12:40:27.593" endtime="20221127 12:40:27.604"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221127 12:40:27.608" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20221127 12:40:27.625" level="INFO">${rc} = 0</msg>
<msg timestamp="20221127 12:40:27.625" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221127 12:40:27.606" endtime="20221127 12:40:27.625"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221127 12:40:27.626" level="INFO">200</msg>
<status status="PASS" starttime="20221127 12:40:27.625" endtime="20221127 12:40:27.626"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221127 12:40:27.627" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221127 12:40:27.626" endtime="20221127 12:40:27.627"/>
</kw>
<status status="PASS" starttime="20221127 12:40:27.605" endtime="20221127 12:40:27.627"/>
</kw>
<msg timestamp="20221127 12:40:27.628" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221127 12:40:27.605" endtime="20221127 12:40:27.628"/>
</kw>
<msg timestamp="20221127 12:40:27.628" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221127 12:40:27.604" endtime="20221127 12:40:27.628"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221127 12:40:27.629" endtime="20221127 12:40:27.629"/>
</kw>
<status status="NOT RUN" starttime="20221127 12:40:27.629" endtime="20221127 12:40:27.629"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221127 12:40:27.629" endtime="20221127 12:40:27.629"/>
</kw>
<status status="PASS" starttime="20221127 12:40:27.629" endtime="20221127 12:40:27.630"/>
</branch>
<status status="PASS" starttime="20221127 12:40:27.628" endtime="20221127 12:40:27.630"/>
</if>
<status status="PASS" starttime="20221127 12:40:27.604" endtime="20221127 12:40:27.630"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221127 12:40:27.630" endtime="20221127 12:40:27.631"/>
</kw>
<status status="PASS" starttime="20221127 12:40:27.630" endtime="20221127 12:40:27.631"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221127 12:40:27.635" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20221127 12:40:27.651" level="INFO">${rc} = 0</msg>
<msg timestamp="20221127 12:40:27.651" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221127 12:40:27.633" endtime="20221127 12:40:27.651"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221127 12:40:27.652" level="INFO">200</msg>
<status status="PASS" starttime="20221127 12:40:27.652" endtime="20221127 12:40:27.653"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221127 12:40:27.653" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221127 12:40:27.653" endtime="20221127 12:40:27.653"/>
</kw>
<status status="PASS" starttime="20221127 12:40:27.632" endtime="20221127 12:40:27.654"/>
</kw>
<msg timestamp="20221127 12:40:27.654" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221127 12:40:27.632" endtime="20221127 12:40:27.654"/>
</kw>
<msg timestamp="20221127 12:40:27.655" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221127 12:40:27.632" endtime="20221127 12:40:27.655"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221127 12:40:27.655" endtime="20221127 12:40:27.656"/>
</kw>
<status status="NOT RUN" starttime="20221127 12:40:27.655" endtime="20221127 12:40:27.656"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221127 12:40:27.656" endtime="20221127 12:40:27.656"/>
</kw>
<status status="PASS" starttime="20221127 12:40:27.656" endtime="20221127 12:40:27.656"/>
</branch>
<status status="PASS" starttime="20221127 12:40:27.655" endtime="20221127 12:40:27.657"/>
</if>
<status status="PASS" starttime="20221127 12:40:27.631" endtime="20221127 12:40:27.657"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221127 12:40:27.657" endtime="20221127 12:40:27.658"/>
</kw>
<status status="PASS" starttime="20221127 12:40:27.657" endtime="20221127 12:40:27.658"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221127 12:40:27.662" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20221127 12:40:27.680" level="INFO">${rc} = 0</msg>
<msg timestamp="20221127 12:40:27.680" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221127 12:40:27.660" endtime="20221127 12:40:27.680"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221127 12:40:27.681" level="INFO">200</msg>
<status status="PASS" starttime="20221127 12:40:27.681" endtime="20221127 12:40:27.681"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221127 12:40:27.682" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221127 12:40:27.682" endtime="20221127 12:40:27.682"/>
</kw>
<status status="PASS" starttime="20221127 12:40:27.659" endtime="20221127 12:40:27.682"/>
</kw>
<msg timestamp="20221127 12:40:27.682" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221127 12:40:27.659" endtime="20221127 12:40:27.683"/>
</kw>
<msg timestamp="20221127 12:40:27.683" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221127 12:40:27.658" endtime="20221127 12:40:27.683"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221127 12:40:27.684" endtime="20221127 12:40:27.684"/>
</kw>
<status status="NOT RUN" starttime="20221127 12:40:27.684" endtime="20221127 12:40:27.684"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221127 12:40:27.684" endtime="20221127 12:40:27.685"/>
</kw>
<status status="PASS" starttime="20221127 12:40:27.684" endtime="20221127 12:40:27.685"/>
</branch>
<status status="PASS" starttime="20221127 12:40:27.683" endtime="20221127 12:40:27.685"/>
</if>
<status status="PASS" starttime="20221127 12:40:27.658" endtime="20221127 12:40:27.685"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221127 12:40:27.685" endtime="20221127 12:40:27.686"/>
</kw>
<status status="PASS" starttime="20221127 12:40:27.685" endtime="20221127 12:40:27.686"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221127 12:40:27.690" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20221127 12:40:27.708" level="INFO">${rc} = 0</msg>
<msg timestamp="20221127 12:40:27.708" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221127 12:40:27.688" endtime="20221127 12:40:27.708"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221127 12:40:27.709" level="INFO">200</msg>
<status status="PASS" starttime="20221127 12:40:27.709" endtime="20221127 12:40:27.709"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221127 12:40:27.710" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221127 12:40:27.709" endtime="20221127 12:40:27.710"/>
</kw>
<status status="PASS" starttime="20221127 12:40:27.687" endtime="20221127 12:40:27.710"/>
</kw>
<msg timestamp="20221127 12:40:27.710" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221127 12:40:27.687" endtime="20221127 12:40:27.711"/>
</kw>
<msg timestamp="20221127 12:40:27.711" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221127 12:40:27.687" endtime="20221127 12:40:27.711"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221127 12:40:27.712" endtime="20221127 12:40:27.712"/>
</kw>
<status status="NOT RUN" starttime="20221127 12:40:27.712" endtime="20221127 12:40:27.712"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221127 12:40:27.712" endtime="20221127 12:40:27.712"/>
</kw>
<status status="PASS" starttime="20221127 12:40:27.712" endtime="20221127 12:40:27.712"/>
</branch>
<status status="PASS" starttime="20221127 12:40:27.711" endtime="20221127 12:40:27.712"/>
</if>
<status status="PASS" starttime="20221127 12:40:27.686" endtime="20221127 12:40:27.713"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221127 12:40:27.592" endtime="20221127 12:40:27.713"/>
</test>
<test id="s1-s2-s1-t6" name="Check unhealthy, (admin) api access" line="114">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221127 12:40:27.719" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20221127 12:40:27.722" level="INFO">${rc} = 0</msg>
<msg timestamp="20221127 12:40:27.722" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221127 12:40:27.717" endtime="20221127 12:40:27.723"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221127 12:40:27.723" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221127 12:40:27.723" endtime="20221127 12:40:27.724"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221127 12:40:27.724" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221127 12:40:27.724" endtime="20221127 12:40:27.724"/>
</kw>
<status status="PASS" starttime="20221127 12:40:27.716" endtime="20221127 12:40:27.725"/>
</kw>
<msg timestamp="20221127 12:40:27.725" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221127 12:40:27.716" endtime="20221127 12:40:27.725"/>
</kw>
<status status="PASS" starttime="20221127 12:40:27.715" endtime="20221127 12:40:27.725"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221127 12:40:27.729" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20221127 12:40:27.791" level="INFO">${rc} = 0</msg>
<msg timestamp="20221127 12:40:27.791" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221127 12:40:27.727" endtime="20221127 12:40:27.791"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221127 12:40:27.793" level="INFO">200</msg>
<status status="PASS" starttime="20221127 12:40:27.791" endtime="20221127 12:40:27.793"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221127 12:40:27.794" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221127 12:40:27.793" endtime="20221127 12:40:27.794"/>
</kw>
<status status="PASS" starttime="20221127 12:40:27.727" endtime="20221127 12:40:27.794"/>
</kw>
<msg timestamp="20221127 12:40:27.794" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221127 12:40:27.727" endtime="20221127 12:40:27.795"/>
</kw>
<msg timestamp="20221127 12:40:27.795" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221127 12:40:27.726" endtime="20221127 12:40:27.795"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221127 12:40:27.795" endtime="20221127 12:40:27.796"/>
</kw>
<status status="NOT RUN" starttime="20221127 12:40:27.795" endtime="20221127 12:40:27.796"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221127 12:40:27.796" endtime="20221127 12:40:27.796"/>
</kw>
<status status="PASS" starttime="20221127 12:40:27.796" endtime="20221127 12:40:27.796"/>
</branch>
<status status="PASS" starttime="20221127 12:40:27.795" endtime="20221127 12:40:27.796"/>
</if>
<status status="PASS" starttime="20221127 12:40:27.725" endtime="20221127 12:40:27.796"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221127 12:40:27.797" endtime="20221127 12:40:27.797"/>
</kw>
<status status="PASS" starttime="20221127 12:40:27.796" endtime="20221127 12:40:27.797"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221127 12:40:27.802" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20221127 12:40:27.823" level="INFO">${rc} = 0</msg>
<msg timestamp="20221127 12:40:27.824" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221127 12:40:27.799" endtime="20221127 12:40:27.824"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221127 12:40:27.825" level="INFO">200</msg>
<status status="PASS" starttime="20221127 12:40:27.824" endtime="20221127 12:40:27.825"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221127 12:40:27.826" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221127 12:40:27.825" endtime="20221127 12:40:27.826"/>
</kw>
<status status="PASS" starttime="20221127 12:40:27.799" endtime="20221127 12:40:27.826"/>
</kw>
<msg timestamp="20221127 12:40:27.826" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221127 12:40:27.799" endtime="20221127 12:40:27.827"/>
</kw>
<msg timestamp="20221127 12:40:27.827" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221127 12:40:27.798" endtime="20221127 12:40:27.827"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221127 12:40:27.828" endtime="20221127 12:40:27.828"/>
</kw>
<status status="NOT RUN" starttime="20221127 12:40:27.828" endtime="20221127 12:40:27.828"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221127 12:40:27.828" endtime="20221127 12:40:27.829"/>
</kw>
<status status="PASS" starttime="20221127 12:40:27.828" endtime="20221127 12:40:27.829"/>
</branch>
<status status="PASS" starttime="20221127 12:40:27.827" endtime="20221127 12:40:27.829"/>
</if>
<status status="PASS" starttime="20221127 12:40:27.797" endtime="20221127 12:40:27.829"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221127 12:40:27.830" endtime="20221127 12:40:27.830"/>
</kw>
<status status="PASS" starttime="20221127 12:40:27.829" endtime="20221127 12:40:27.830"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221127 12:40:27.835" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20221127 12:40:27.851" level="INFO">${rc} = 0</msg>
<msg timestamp="20221127 12:40:27.851" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221127 12:40:27.832" endtime="20221127 12:40:27.851"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221127 12:40:27.853" level="INFO">200</msg>
<status status="PASS" starttime="20221127 12:40:27.852" endtime="20221127 12:40:27.853"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221127 12:40:27.854" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221127 12:40:27.853" endtime="20221127 12:40:27.854"/>
</kw>
<status status="PASS" starttime="20221127 12:40:27.832" endtime="20221127 12:40:27.854"/>
</kw>
<msg timestamp="20221127 12:40:27.854" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221127 12:40:27.832" endtime="20221127 12:40:27.855"/>
</kw>
<msg timestamp="20221127 12:40:27.855" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221127 12:40:27.831" endtime="20221127 12:40:27.855"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221127 12:40:27.856" endtime="20221127 12:40:27.856"/>
</kw>
<status status="NOT RUN" starttime="20221127 12:40:27.856" endtime="20221127 12:40:27.856"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221127 12:40:27.856" endtime="20221127 12:40:27.857"/>
</kw>
<status status="PASS" starttime="20221127 12:40:27.856" endtime="20221127 12:40:27.857"/>
</branch>
<status status="PASS" starttime="20221127 12:40:27.855" endtime="20221127 12:40:27.857"/>
</if>
<status status="PASS" starttime="20221127 12:40:27.831" endtime="20221127 12:40:27.857"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221127 12:40:27.858" endtime="20221127 12:40:27.858"/>
</kw>
<status status="PASS" starttime="20221127 12:40:27.857" endtime="20221127 12:40:27.858"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221127 12:40:27.864" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20221127 12:40:27.884" level="INFO">${rc} = 0</msg>
<msg timestamp="20221127 12:40:27.884" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221127 12:40:27.861" endtime="20221127 12:40:27.884"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221127 12:40:27.885" level="INFO">200</msg>
<status status="PASS" starttime="20221127 12:40:27.885" endtime="20221127 12:40:27.886"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221127 12:40:27.887" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221127 12:40:27.886" endtime="20221127 12:40:27.887"/>
</kw>
<status status="PASS" starttime="20221127 12:40:27.860" endtime="20221127 12:40:27.887"/>
</kw>
<msg timestamp="20221127 12:40:27.887" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221127 12:40:27.860" endtime="20221127 12:40:27.888"/>
</kw>
<msg timestamp="20221127 12:40:27.888" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221127 12:40:27.859" endtime="20221127 12:40:27.888"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221127 12:40:27.889" endtime="20221127 12:40:27.889"/>
</kw>
<status status="NOT RUN" starttime="20221127 12:40:27.889" endtime="20221127 12:40:27.889"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221127 12:40:27.889" endtime="20221127 12:40:27.890"/>
</kw>
<status status="PASS" starttime="20221127 12:40:27.889" endtime="20221127 12:40:27.890"/>
</branch>
<status status="PASS" starttime="20221127 12:40:27.888" endtime="20221127 12:40:27.890"/>
</if>
<status status="PASS" starttime="20221127 12:40:27.858" endtime="20221127 12:40:27.890"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221127 12:40:27.714" endtime="20221127 12:40:27.891"/>
</test>
<test id="s1-s2-s1-t7" name="Check normal api access" line="127">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221127 12:40:27.897" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20221127 12:40:27.901" level="INFO">${rc} = 0</msg>
<msg timestamp="20221127 12:40:27.901" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221127 12:40:27.894" endtime="20221127 12:40:27.901"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221127 12:40:27.902" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221127 12:40:27.902" endtime="20221127 12:40:27.903"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221127 12:40:27.903" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221127 12:40:27.903" endtime="20221127 12:40:27.903"/>
</kw>
<status status="PASS" starttime="20221127 12:40:27.894" endtime="20221127 12:40:27.904"/>
</kw>
<msg timestamp="20221127 12:40:27.904" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221127 12:40:27.893" endtime="20221127 12:40:27.904"/>
</kw>
<status status="PASS" starttime="20221127 12:40:27.893" endtime="20221127 12:40:27.904"/>
</kw>
<kw name="Check http return code">
<arg>${NON_ADMIN_API_ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221127 12:40:27.909" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20221127 12:40:27.941" level="INFO">${rc} = 0</msg>
<msg timestamp="20221127 12:40:27.941" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221127 12:40:27.907" endtime="20221127 12:40:27.941"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221127 12:40:27.942" level="INFO">200</msg>
<status status="PASS" starttime="20221127 12:40:27.941" endtime="20221127 12:40:27.942"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221127 12:40:27.943" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221127 12:40:27.942" endtime="20221127 12:40:27.943"/>
</kw>
<status status="PASS" starttime="20221127 12:40:27.906" endtime="20221127 12:40:27.943"/>
</kw>
<msg timestamp="20221127 12:40:27.943" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221127 12:40:27.906" endtime="20221127 12:40:27.944"/>
</kw>
<msg timestamp="20221127 12:40:27.945" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221127 12:40:27.905" endtime="20221127 12:40:27.945"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221127 12:40:27.945" endtime="20221127 12:40:27.945"/>
</kw>
<status status="NOT RUN" starttime="20221127 12:40:27.945" endtime="20221127 12:40:27.945"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221127 12:40:27.945" endtime="20221127 12:40:27.946"/>
</kw>
<status status="PASS" starttime="20221127 12:40:27.945" endtime="20221127 12:40:27.946"/>
</branch>
<status status="PASS" starttime="20221127 12:40:27.945" endtime="20221127 12:40:27.946"/>
</if>
<status status="PASS" starttime="20221127 12:40:27.904" endtime="20221127 12:40:27.946"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221127 12:40:27.947" endtime="20221127 12:40:27.947"/>
</kw>
<status status="PASS" starttime="20221127 12:40:27.946" endtime="20221127 12:40:27.947"/>
</kw>
<kw name="Check http return code">
<arg>${NON_ADMIN_API_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221127 12:40:27.952" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20221127 12:40:27.977" level="INFO">${rc} = 0</msg>
<msg timestamp="20221127 12:40:27.977" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221127 12:40:27.949" endtime="20221127 12:40:27.977"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221127 12:40:27.979" level="INFO">200</msg>
<status status="PASS" starttime="20221127 12:40:27.978" endtime="20221127 12:40:27.979"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221127 12:40:27.979" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221127 12:40:27.979" endtime="20221127 12:40:27.979"/>
</kw>
<status status="PASS" starttime="20221127 12:40:27.949" endtime="20221127 12:40:27.980"/>
</kw>
<msg timestamp="20221127 12:40:27.980" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221127 12:40:27.949" endtime="20221127 12:40:27.980"/>
</kw>
<msg timestamp="20221127 12:40:27.981" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221127 12:40:27.948" endtime="20221127 12:40:27.981"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221127 12:40:27.981" endtime="20221127 12:40:27.981"/>
</kw>
<status status="NOT RUN" starttime="20221127 12:40:27.981" endtime="20221127 12:40:27.981"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221127 12:40:27.982" endtime="20221127 12:40:27.982"/>
</kw>
<status status="PASS" starttime="20221127 12:40:27.981" endtime="20221127 12:40:27.982"/>
</branch>
<status status="PASS" starttime="20221127 12:40:27.981" endtime="20221127 12:40:27.982"/>
</if>
<status status="PASS" starttime="20221127 12:40:27.948" endtime="20221127 12:40:27.982"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221127 12:40:27.892" endtime="20221127 12:40:27.982"/>
</test>
<doc>Smoke test to start cluster with docker-compose environments.</doc>
<status status="PASS" starttime="20221127 12:39:36.549" endtime="20221127 12:40:27.985"/>
</suite>
<suite id="s1-s2-s2" name="Recon-Nssummary" source="/opt/hadoop/smoketest/recon/recon-nssummary.robot">
<test id="s1-s2-s2-t1" name="Check volume creation" line="99">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221127 12:40:28.001" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20221127 12:40:28.004" level="INFO">${rc} = 0</msg>
<msg timestamp="20221127 12:40:28.005" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221127 12:40:27.998" endtime="20221127 12:40:28.005"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221127 12:40:28.006" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221127 12:40:28.005" endtime="20221127 12:40:28.006"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221127 12:40:28.007" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221127 12:40:28.006" endtime="20221127 12:40:28.007"/>
</kw>
<status status="PASS" starttime="20221127 12:40:27.998" endtime="20221127 12:40:28.007"/>
</kw>
<msg timestamp="20221127 12:40:28.007" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221127 12:40:27.997" endtime="20221127 12:40:28.008"/>
</kw>
<status status="PASS" starttime="20221127 12:40:27.997" endtime="20221127 12:40:28.008"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221127 12:40:28.008" endtime="20221127 12:40:28.009"/>
</kw>
<status status="PASS" starttime="20221127 12:40:28.008" endtime="20221127 12:40:28.009"/>
</kw>
<kw name="Create volume">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20221127 12:40:28.010" level="INFO">${random} = izkyr</msg>
<status status="PASS" starttime="20221127 12:40:28.010" endtime="20221127 12:40:28.010"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${VOLUME}</arg>
<arg>vol-${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20221127 12:40:28.011" level="INFO">${VOLUME} = vol-izkyr</msg>
<status status="PASS" starttime="20221127 12:40:28.010" endtime="20221127 12:40:28.011"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${VOLUME}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221127 12:40:28.015" level="INFO">Running command 'ozone sh volume create /vol-izkyr 2&gt;&amp;1'.</msg>
<msg timestamp="20221127 12:40:31.841" level="INFO">${rc} = 0</msg>
<msg timestamp="20221127 12:40:31.841" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221127 12:40:28.012" endtime="20221127 12:40:31.841"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221127 12:40:31.843" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221127 12:40:31.842" endtime="20221127 12:40:31.843"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221127 12:40:31.843" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221127 12:40:31.843" endtime="20221127 12:40:31.843"/>
</kw>
<status status="PASS" starttime="20221127 12:40:28.012" endtime="20221127 12:40:31.847"/>
</kw>
<msg timestamp="20221127 12:40:31.847" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221127 12:40:28.011" endtime="20221127 12:40:31.847"/>
</kw>
<msg timestamp="20221127 12:40:31.848" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221127 12:40:28.011" endtime="20221127 12:40:31.848"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20221127 12:40:31.848" endtime="20221127 12:40:31.848"/>
</kw>
<status status="PASS" starttime="20221127 12:40:28.009" endtime="20221127 12:40:31.849"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221127 12:40:27.996" endtime="20221127 12:40:31.849"/>
</test>
<test id="s1-s2-s2-t2" name="Check bucket creation" line="104">
<kw name="Create bucket">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20221127 12:40:31.852" level="INFO">${random} = nmcrl</msg>
<status status="PASS" starttime="20221127 12:40:31.852" endtime="20221127 12:40:31.852"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<arg>buc-${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20221127 12:40:31.853" level="INFO">${BUCKET} = buc-nmcrl</msg>
<status status="PASS" starttime="20221127 12:40:31.853" endtime="20221127 12:40:31.853"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create -l ${BUCKET_LAYOUT} /${VOLUME}/${BUCKET}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221127 12:40:31.858" level="INFO">Running command 'ozone sh bucket create -l FILE_SYSTEM_OPTIMIZED /vol-izkyr/buc-nmcrl 2&gt;&amp;1'.</msg>
<msg timestamp="20221127 12:40:35.891" level="INFO">${rc} = 0</msg>
<msg timestamp="20221127 12:40:35.891" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221127 12:40:31.855" endtime="20221127 12:40:35.891"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221127 12:40:35.892" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221127 12:40:35.891" endtime="20221127 12:40:35.892"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221127 12:40:35.893" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221127 12:40:35.893" endtime="20221127 12:40:35.893"/>
</kw>
<status status="PASS" starttime="20221127 12:40:31.854" endtime="20221127 12:40:35.894"/>
</kw>
<msg timestamp="20221127 12:40:35.894" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221127 12:40:31.854" endtime="20221127 12:40:35.894"/>
</kw>
<msg timestamp="20221127 12:40:35.895" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221127 12:40:31.853" endtime="20221127 12:40:35.895"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20221127 12:40:35.895" endtime="20221127 12:40:35.895"/>
</kw>
<status status="PASS" starttime="20221127 12:40:31.851" endtime="20221127 12:40:35.895"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221127 12:40:31.850" endtime="20221127 12:40:35.896"/>
</test>
<test id="s1-s2-s2-t3" name="Check keys creation" line="107">
<kw name="Create keys">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put /${VOLUME}/${BUCKET}/file1 README.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221127 12:40:35.902" level="INFO">Running command 'ozone sh key put /vol-izkyr/buc-nmcrl/file1 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20221127 12:40:42.446" level="INFO">${rc} = 0</msg>
<msg timestamp="20221127 12:40:42.446" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221127 12:40:35.900" endtime="20221127 12:40:42.446"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221127 12:40:42.447" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221127 12:40:42.446" endtime="20221127 12:40:42.447"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221127 12:40:42.448" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221127 12:40:42.447" endtime="20221127 12:40:42.448"/>
</kw>
<status status="PASS" starttime="20221127 12:40:35.899" endtime="20221127 12:40:42.448"/>
</kw>
<msg timestamp="20221127 12:40:42.448" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221127 12:40:35.899" endtime="20221127 12:40:42.449"/>
</kw>
<msg timestamp="20221127 12:40:42.449" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221127 12:40:35.898" endtime="20221127 12:40:42.449"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20221127 12:40:42.449" endtime="20221127 12:40:42.450"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put /${VOLUME}/${BUCKET}/dir1/dir2/file2 HISTORY.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221127 12:40:42.454" level="INFO">Running command 'ozone sh key put /vol-izkyr/buc-nmcrl/dir1/dir2/file2 HISTORY.md 2&gt;&amp;1'.</msg>
<msg timestamp="20221127 12:40:49.529" level="INFO">${rc} = 0</msg>
<msg timestamp="20221127 12:40:49.529" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221127 12:40:42.451" endtime="20221127 12:40:49.529"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221127 12:40:49.530" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221127 12:40:49.529" endtime="20221127 12:40:49.530"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221127 12:40:49.531" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221127 12:40:49.530" endtime="20221127 12:40:49.531"/>
</kw>
<status status="PASS" starttime="20221127 12:40:42.451" endtime="20221127 12:40:49.531"/>
</kw>
<msg timestamp="20221127 12:40:49.531" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221127 12:40:42.450" endtime="20221127 12:40:49.532"/>
</kw>
<msg timestamp="20221127 12:40:49.532" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221127 12:40:42.450" endtime="20221127 12:40:49.532"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20221127 12:40:49.532" endtime="20221127 12:40:49.533"/>
</kw>
<status status="PASS" starttime="20221127 12:40:35.897" endtime="20221127 12:40:49.533"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221127 12:40:35.897" endtime="20221127 12:40:49.533"/>
</test>
<test id="s1-s2-s2-t4" name="Check Summary api access" line="110">
<kw name="Check Access">
<arg>${SUMMARY_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221127 12:40:49.540" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20221127 12:40:49.544" level="INFO">${rc} = 0</msg>
<msg timestamp="20221127 12:40:49.544" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221127 12:40:49.537" endtime="20221127 12:40:49.544"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221127 12:40:49.546" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221127 12:40:49.545" endtime="20221127 12:40:49.546"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221127 12:40:49.546" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221127 12:40:49.546" endtime="20221127 12:40:49.547"/>
</kw>
<status status="PASS" starttime="20221127 12:40:49.536" endtime="20221127 12:40:49.547"/>
</kw>
<msg timestamp="20221127 12:40:49.547" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221127 12:40:49.536" endtime="20221127 12:40:49.547"/>
</kw>
<status status="PASS" starttime="20221127 12:40:49.535" endtime="20221127 12:40:49.548"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221127 12:40:49.552" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221127 12:40:49.598" level="INFO">${rc} = 0</msg>
<msg timestamp="20221127 12:40:49.598" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221127 12:40:49.550" endtime="20221127 12:40:49.598"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221127 12:40:49.600" level="INFO">200</msg>
<status status="PASS" starttime="20221127 12:40:49.599" endtime="20221127 12:40:49.600"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221127 12:40:49.601" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221127 12:40:49.600" endtime="20221127 12:40:49.601"/>
</kw>
<status status="PASS" starttime="20221127 12:40:49.549" endtime="20221127 12:40:49.601"/>
</kw>
<msg timestamp="20221127 12:40:49.601" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221127 12:40:49.549" endtime="20221127 12:40:49.602"/>
</kw>
<msg timestamp="20221127 12:40:49.602" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221127 12:40:49.548" endtime="20221127 12:40:49.602"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221127 12:40:49.603" endtime="20221127 12:40:49.603"/>
</kw>
<status status="NOT RUN" starttime="20221127 12:40:49.603" endtime="20221127 12:40:49.603"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221127 12:40:49.603" endtime="20221127 12:40:49.603"/>
</kw>
<status status="PASS" starttime="20221127 12:40:49.603" endtime="20221127 12:40:49.604"/>
</branch>
<status status="PASS" starttime="20221127 12:40:49.602" endtime="20221127 12:40:49.604"/>
</if>
<status status="PASS" starttime="20221127 12:40:49.548" endtime="20221127 12:40:49.604"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221127 12:40:49.604" endtime="20221127 12:40:49.605"/>
</kw>
<status status="PASS" starttime="20221127 12:40:49.604" endtime="20221127 12:40:49.605"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221127 12:40:49.609" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221127 12:40:49.626" level="INFO">${rc} = 0</msg>
<msg timestamp="20221127 12:40:49.626" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221127 12:40:49.607" endtime="20221127 12:40:49.626"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221127 12:40:49.628" level="INFO">200</msg>
<status status="PASS" starttime="20221127 12:40:49.627" endtime="20221127 12:40:49.628"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221127 12:40:49.629" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221127 12:40:49.628" endtime="20221127 12:40:49.629"/>
</kw>
<status status="PASS" starttime="20221127 12:40:49.606" endtime="20221127 12:40:49.629"/>
</kw>
<msg timestamp="20221127 12:40:49.629" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221127 12:40:49.606" endtime="20221127 12:40:49.630"/>
</kw>
<msg timestamp="20221127 12:40:49.630" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221127 12:40:49.605" endtime="20221127 12:40:49.630"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221127 12:40:49.631" endtime="20221127 12:40:49.631"/>
</kw>
<status status="NOT RUN" starttime="20221127 12:40:49.631" endtime="20221127 12:40:49.631"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221127 12:40:49.631" endtime="20221127 12:40:49.632"/>
</kw>
<status status="PASS" starttime="20221127 12:40:49.631" endtime="20221127 12:40:49.632"/>
</branch>
<status status="PASS" starttime="20221127 12:40:49.630" endtime="20221127 12:40:49.632"/>
</if>
<status status="PASS" starttime="20221127 12:40:49.605" endtime="20221127 12:40:49.632"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221127 12:40:49.632" endtime="20221127 12:40:49.633"/>
</kw>
<status status="PASS" starttime="20221127 12:40:49.632" endtime="20221127 12:40:49.633"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221127 12:40:49.638" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221127 12:40:49.664" level="INFO">${rc} = 0</msg>
<msg timestamp="20221127 12:40:49.664" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221127 12:40:49.635" endtime="20221127 12:40:49.664"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221127 12:40:49.667" level="INFO">200</msg>
<status status="PASS" starttime="20221127 12:40:49.665" endtime="20221127 12:40:49.667"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221127 12:40:49.668" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221127 12:40:49.667" endtime="20221127 12:40:49.668"/>
</kw>
<status status="PASS" starttime="20221127 12:40:49.635" endtime="20221127 12:40:49.668"/>
</kw>
<msg timestamp="20221127 12:40:49.668" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221127 12:40:49.634" endtime="20221127 12:40:49.669"/>
</kw>
<msg timestamp="20221127 12:40:49.669" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221127 12:40:49.634" endtime="20221127 12:40:49.669"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221127 12:40:49.670" endtime="20221127 12:40:49.670"/>
</kw>
<status status="NOT RUN" starttime="20221127 12:40:49.670" endtime="20221127 12:40:49.670"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221127 12:40:49.670" endtime="20221127 12:40:49.671"/>
</kw>
<status status="PASS" starttime="20221127 12:40:49.670" endtime="20221127 12:40:49.671"/>
</branch>
<status status="PASS" starttime="20221127 12:40:49.669" endtime="20221127 12:40:49.671"/>
</if>
<status status="PASS" starttime="20221127 12:40:49.633" endtime="20221127 12:40:49.671"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221127 12:40:49.672" endtime="20221127 12:40:49.672"/>
</kw>
<status status="PASS" starttime="20221127 12:40:49.671" endtime="20221127 12:40:49.672"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221127 12:40:49.678" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221127 12:40:49.698" level="INFO">${rc} = 0</msg>
<msg timestamp="20221127 12:40:49.698" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221127 12:40:49.674" endtime="20221127 12:40:49.698"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221127 12:40:49.700" level="INFO">200</msg>
<status status="PASS" starttime="20221127 12:40:49.699" endtime="20221127 12:40:49.700"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221127 12:40:49.700" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221127 12:40:49.700" endtime="20221127 12:40:49.700"/>
</kw>
<status status="PASS" starttime="20221127 12:40:49.674" endtime="20221127 12:40:49.701"/>
</kw>
<msg timestamp="20221127 12:40:49.701" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221127 12:40:49.673" endtime="20221127 12:40:49.701"/>
</kw>
<msg timestamp="20221127 12:40:49.702" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221127 12:40:49.673" endtime="20221127 12:40:49.702"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221127 12:40:49.702" endtime="20221127 12:40:49.702"/>
</kw>
<status status="NOT RUN" starttime="20221127 12:40:49.702" endtime="20221127 12:40:49.703"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221127 12:40:49.703" endtime="20221127 12:40:49.703"/>
</kw>
<status status="PASS" starttime="20221127 12:40:49.703" endtime="20221127 12:40:49.703"/>
</branch>
<status status="PASS" starttime="20221127 12:40:49.702" endtime="20221127 12:40:49.703"/>
</if>
<status status="PASS" starttime="20221127 12:40:49.672" endtime="20221127 12:40:49.703"/>
</kw>
<status status="PASS" starttime="20221127 12:40:49.535" endtime="20221127 12:40:49.704"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221127 12:40:49.534" endtime="20221127 12:40:49.704"/>
</test>
<test id="s1-s2-s2-t5" name="Check Disk Usage api access" line="113">
<kw name="Check Access">
<arg>${DISK_USAGE_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221127 12:40:49.710" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20221127 12:40:49.714" level="INFO">${rc} = 0</msg>
<msg timestamp="20221127 12:40:49.714" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221127 12:40:49.708" endtime="20221127 12:40:49.714"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221127 12:40:49.715" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221127 12:40:49.714" endtime="20221127 12:40:49.715"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221127 12:40:49.715" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221127 12:40:49.715" endtime="20221127 12:40:49.715"/>
</kw>
<status status="PASS" starttime="20221127 12:40:49.707" endtime="20221127 12:40:49.716"/>
</kw>
<msg timestamp="20221127 12:40:49.716" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221127 12:40:49.707" endtime="20221127 12:40:49.716"/>
</kw>
<status status="PASS" starttime="20221127 12:40:49.706" endtime="20221127 12:40:49.717"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221127 12:40:49.721" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221127 12:40:49.750" level="INFO">${rc} = 0</msg>
<msg timestamp="20221127 12:40:49.750" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221127 12:40:49.719" endtime="20221127 12:40:49.750"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221127 12:40:49.752" level="INFO">200</msg>
<status status="PASS" starttime="20221127 12:40:49.751" endtime="20221127 12:40:49.752"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221127 12:40:49.753" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221127 12:40:49.752" endtime="20221127 12:40:49.753"/>
</kw>
<status status="PASS" starttime="20221127 12:40:49.718" endtime="20221127 12:40:49.753"/>
</kw>
<msg timestamp="20221127 12:40:49.753" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221127 12:40:49.718" endtime="20221127 12:40:49.754"/>
</kw>
<msg timestamp="20221127 12:40:49.754" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221127 12:40:49.717" endtime="20221127 12:40:49.754"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221127 12:40:49.755" endtime="20221127 12:40:49.755"/>
</kw>
<status status="NOT RUN" starttime="20221127 12:40:49.754" endtime="20221127 12:40:49.755"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221127 12:40:49.755" endtime="20221127 12:40:49.755"/>
</kw>
<status status="PASS" starttime="20221127 12:40:49.755" endtime="20221127 12:40:49.755"/>
</branch>
<status status="PASS" starttime="20221127 12:40:49.754" endtime="20221127 12:40:49.755"/>
</if>
<status status="PASS" starttime="20221127 12:40:49.717" endtime="20221127 12:40:49.755"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221127 12:40:49.756" endtime="20221127 12:40:49.757"/>
</kw>
<status status="PASS" starttime="20221127 12:40:49.756" endtime="20221127 12:40:49.757"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221127 12:40:49.763" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221127 12:40:49.781" level="INFO">${rc} = 0</msg>
<msg timestamp="20221127 12:40:49.781" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221127 12:40:49.759" endtime="20221127 12:40:49.781"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221127 12:40:49.783" level="INFO">200</msg>
<status status="PASS" starttime="20221127 12:40:49.782" endtime="20221127 12:40:49.783"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221127 12:40:49.784" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221127 12:40:49.783" endtime="20221127 12:40:49.784"/>
</kw>
<status status="PASS" starttime="20221127 12:40:49.759" endtime="20221127 12:40:49.784"/>
</kw>
<msg timestamp="20221127 12:40:49.784" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221127 12:40:49.759" endtime="20221127 12:40:49.785"/>
</kw>
<msg timestamp="20221127 12:40:49.785" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221127 12:40:49.758" endtime="20221127 12:40:49.785"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221127 12:40:49.786" endtime="20221127 12:40:49.786"/>
</kw>
<status status="NOT RUN" starttime="20221127 12:40:49.786" endtime="20221127 12:40:49.786"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221127 12:40:49.787" endtime="20221127 12:40:49.787"/>
</kw>
<status status="PASS" starttime="20221127 12:40:49.786" endtime="20221127 12:40:49.788"/>
</branch>
<status status="PASS" starttime="20221127 12:40:49.785" endtime="20221127 12:40:49.788"/>
</if>
<status status="PASS" starttime="20221127 12:40:49.758" endtime="20221127 12:40:49.788"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221127 12:40:49.788" endtime="20221127 12:40:49.789"/>
</kw>
<status status="PASS" starttime="20221127 12:40:49.788" endtime="20221127 12:40:49.789"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221127 12:40:49.794" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221127 12:40:49.816" level="INFO">${rc} = 0</msg>
<msg timestamp="20221127 12:40:49.816" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221127 12:40:49.791" endtime="20221127 12:40:49.816"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221127 12:40:49.819" level="INFO">200</msg>
<status status="PASS" starttime="20221127 12:40:49.818" endtime="20221127 12:40:49.819"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221127 12:40:49.820" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221127 12:40:49.819" endtime="20221127 12:40:49.820"/>
</kw>
<status status="PASS" starttime="20221127 12:40:49.791" endtime="20221127 12:40:49.820"/>
</kw>
<msg timestamp="20221127 12:40:49.820" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221127 12:40:49.790" endtime="20221127 12:40:49.821"/>
</kw>
<msg timestamp="20221127 12:40:49.821" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221127 12:40:49.790" endtime="20221127 12:40:49.821"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221127 12:40:49.822" endtime="20221127 12:40:49.822"/>
</kw>
<status status="NOT RUN" starttime="20221127 12:40:49.821" endtime="20221127 12:40:49.822"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221127 12:40:49.822" endtime="20221127 12:40:49.822"/>
</kw>
<status status="PASS" starttime="20221127 12:40:49.822" endtime="20221127 12:40:49.822"/>
</branch>
<status status="PASS" starttime="20221127 12:40:49.821" endtime="20221127 12:40:49.822"/>
</if>
<status status="PASS" starttime="20221127 12:40:49.789" endtime="20221127 12:40:49.822"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221127 12:40:49.823" endtime="20221127 12:40:49.823"/>
</kw>
<status status="PASS" starttime="20221127 12:40:49.823" endtime="20221127 12:40:49.823"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221127 12:40:49.828" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221127 12:40:49.856" level="INFO">${rc} = 0</msg>
<msg timestamp="20221127 12:40:49.856" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221127 12:40:49.825" endtime="20221127 12:40:49.856"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221127 12:40:49.857" level="INFO">200</msg>
<status status="PASS" starttime="20221127 12:40:49.856" endtime="20221127 12:40:49.857"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221127 12:40:49.858" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221127 12:40:49.858" endtime="20221127 12:40:49.859"/>
</kw>
<status status="PASS" starttime="20221127 12:40:49.825" endtime="20221127 12:40:49.859"/>
</kw>
<msg timestamp="20221127 12:40:49.859" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221127 12:40:49.824" endtime="20221127 12:40:49.860"/>
</kw>
<msg timestamp="20221127 12:40:49.860" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221127 12:40:49.824" endtime="20221127 12:40:49.860"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221127 12:40:49.861" endtime="20221127 12:40:49.861"/>
</kw>
<status status="NOT RUN" starttime="20221127 12:40:49.861" endtime="20221127 12:40:49.861"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221127 12:40:49.861" endtime="20221127 12:40:49.861"/>
</kw>
<status status="PASS" starttime="20221127 12:40:49.861" endtime="20221127 12:40:49.861"/>
</branch>
<status status="PASS" starttime="20221127 12:40:49.860" endtime="20221127 12:40:49.861"/>
</if>
<status status="PASS" starttime="20221127 12:40:49.824" endtime="20221127 12:40:49.862"/>
</kw>
<status status="PASS" starttime="20221127 12:40:49.706" endtime="20221127 12:40:49.862"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221127 12:40:49.705" endtime="20221127 12:40:49.862"/>
</test>
<test id="s1-s2-s2-t6" name="Check Quota Usage api access" line="116">
<kw name="Check Access">
<arg>${QUOTA_USAGE_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221127 12:40:49.868" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20221127 12:40:49.872" level="INFO">${rc} = 0</msg>
<msg timestamp="20221127 12:40:49.872" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221127 12:40:49.866" endtime="20221127 12:40:49.872"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221127 12:40:49.873" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221127 12:40:49.873" endtime="20221127 12:40:49.873"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221127 12:40:49.874" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221127 12:40:49.874" endtime="20221127 12:40:49.874"/>
</kw>
<status status="PASS" starttime="20221127 12:40:49.865" endtime="20221127 12:40:49.875"/>
</kw>
<msg timestamp="20221127 12:40:49.875" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221127 12:40:49.865" endtime="20221127 12:40:49.875"/>
</kw>
<status status="PASS" starttime="20221127 12:40:49.865" endtime="20221127 12:40:49.875"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221127 12:40:49.880" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221127 12:40:49.897" level="INFO">${rc} = 0</msg>
<msg timestamp="20221127 12:40:49.898" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221127 12:40:49.877" endtime="20221127 12:40:49.898"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221127 12:40:49.899" level="INFO">200</msg>
<status status="PASS" starttime="20221127 12:40:49.898" endtime="20221127 12:40:49.899"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221127 12:40:49.900" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221127 12:40:49.900" endtime="20221127 12:40:49.901"/>
</kw>
<status status="PASS" starttime="20221127 12:40:49.877" endtime="20221127 12:40:49.901"/>
</kw>
<msg timestamp="20221127 12:40:49.901" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221127 12:40:49.877" endtime="20221127 12:40:49.902"/>
</kw>
<msg timestamp="20221127 12:40:49.902" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221127 12:40:49.876" endtime="20221127 12:40:49.902"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221127 12:40:49.903" endtime="20221127 12:40:49.903"/>
</kw>
<status status="NOT RUN" starttime="20221127 12:40:49.903" endtime="20221127 12:40:49.903"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221127 12:40:49.903" endtime="20221127 12:40:49.904"/>
</kw>
<status status="PASS" starttime="20221127 12:40:49.903" endtime="20221127 12:40:49.904"/>
</branch>
<status status="PASS" starttime="20221127 12:40:49.902" endtime="20221127 12:40:49.904"/>
</if>
<status status="PASS" starttime="20221127 12:40:49.875" endtime="20221127 12:40:49.904"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221127 12:40:49.905" endtime="20221127 12:40:49.905"/>
</kw>
<status status="PASS" starttime="20221127 12:40:49.904" endtime="20221127 12:40:49.905"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221127 12:40:49.911" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221127 12:40:49.925" level="INFO">${rc} = 0</msg>
<msg timestamp="20221127 12:40:49.925" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221127 12:40:49.907" endtime="20221127 12:40:49.925"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221127 12:40:49.927" level="INFO">200</msg>
<status status="PASS" starttime="20221127 12:40:49.926" endtime="20221127 12:40:49.927"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221127 12:40:49.927" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221127 12:40:49.927" endtime="20221127 12:40:49.928"/>
</kw>
<status status="PASS" starttime="20221127 12:40:49.907" endtime="20221127 12:40:49.928"/>
</kw>
<msg timestamp="20221127 12:40:49.928" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221127 12:40:49.906" endtime="20221127 12:40:49.929"/>
</kw>
<msg timestamp="20221127 12:40:49.929" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221127 12:40:49.906" endtime="20221127 12:40:49.929"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221127 12:40:49.930" endtime="20221127 12:40:49.930"/>
</kw>
<status status="NOT RUN" starttime="20221127 12:40:49.929" endtime="20221127 12:40:49.930"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221127 12:40:49.930" endtime="20221127 12:40:49.930"/>
</kw>
<status status="PASS" starttime="20221127 12:40:49.930" endtime="20221127 12:40:49.930"/>
</branch>
<status status="PASS" starttime="20221127 12:40:49.929" endtime="20221127 12:40:49.930"/>
</if>
<status status="PASS" starttime="20221127 12:40:49.905" endtime="20221127 12:40:49.931"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221127 12:40:49.931" endtime="20221127 12:40:49.932"/>
</kw>
<status status="PASS" starttime="20221127 12:40:49.931" endtime="20221127 12:40:49.932"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221127 12:40:49.936" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221127 12:40:49.951" level="INFO">${rc} = 0</msg>
<msg timestamp="20221127 12:40:49.952" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221127 12:40:49.933" endtime="20221127 12:40:49.952"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221127 12:40:49.953" level="INFO">200</msg>
<status status="PASS" starttime="20221127 12:40:49.952" endtime="20221127 12:40:49.953"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221127 12:40:49.953" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221127 12:40:49.953" endtime="20221127 12:40:49.953"/>
</kw>
<status status="PASS" starttime="20221127 12:40:49.933" endtime="20221127 12:40:49.954"/>
</kw>
<msg timestamp="20221127 12:40:49.954" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221127 12:40:49.933" endtime="20221127 12:40:49.955"/>
</kw>
<msg timestamp="20221127 12:40:49.955" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221127 12:40:49.932" endtime="20221127 12:40:49.955"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221127 12:40:49.956" endtime="20221127 12:40:49.956"/>
</kw>
<status status="NOT RUN" starttime="20221127 12:40:49.955" endtime="20221127 12:40:49.956"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221127 12:40:49.956" endtime="20221127 12:40:49.956"/>
</kw>
<status status="PASS" starttime="20221127 12:40:49.956" endtime="20221127 12:40:49.956"/>
</branch>
<status status="PASS" starttime="20221127 12:40:49.955" endtime="20221127 12:40:49.956"/>
</if>
<status status="PASS" starttime="20221127 12:40:49.932" endtime="20221127 12:40:49.956"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221127 12:40:49.957" endtime="20221127 12:40:49.957"/>
</kw>
<status status="PASS" starttime="20221127 12:40:49.957" endtime="20221127 12:40:49.957"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221127 12:40:49.962" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221127 12:40:49.977" level="INFO">${rc} = 0</msg>
<msg timestamp="20221127 12:40:49.977" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221127 12:40:49.960" endtime="20221127 12:40:49.977"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221127 12:40:49.978" level="INFO">200</msg>
<status status="PASS" starttime="20221127 12:40:49.977" endtime="20221127 12:40:49.979"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221127 12:40:49.979" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221127 12:40:49.979" endtime="20221127 12:40:49.979"/>
</kw>
<status status="PASS" starttime="20221127 12:40:49.959" endtime="20221127 12:40:49.980"/>
</kw>
<msg timestamp="20221127 12:40:49.980" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221127 12:40:49.959" endtime="20221127 12:40:49.981"/>
</kw>
<msg timestamp="20221127 12:40:49.981" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221127 12:40:49.958" endtime="20221127 12:40:49.981"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221127 12:40:49.982" endtime="20221127 12:40:49.982"/>
</kw>
<status status="NOT RUN" starttime="20221127 12:40:49.981" endtime="20221127 12:40:49.982"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221127 12:40:49.982" endtime="20221127 12:40:49.982"/>
</kw>
<status status="PASS" starttime="20221127 12:40:49.982" endtime="20221127 12:40:49.982"/>
</branch>
<status status="PASS" starttime="20221127 12:40:49.981" endtime="20221127 12:40:49.983"/>
</if>
<status status="PASS" starttime="20221127 12:40:49.958" endtime="20221127 12:40:49.983"/>
</kw>
<status status="PASS" starttime="20221127 12:40:49.864" endtime="20221127 12:40:49.983"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221127 12:40:49.863" endtime="20221127 12:40:49.983"/>
</test>
<test id="s1-s2-s2-t7" name="Check File Size Distribution api access" line="119">
<kw name="Check Access">
<arg>${FILE_SIZE_DIST_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221127 12:40:49.991" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20221127 12:40:49.995" level="INFO">${rc} = 0</msg>
<msg timestamp="20221127 12:40:49.995" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221127 12:40:49.988" endtime="20221127 12:40:49.995"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221127 12:40:49.996" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221127 12:40:49.995" endtime="20221127 12:40:49.996"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221127 12:40:49.997" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221127 12:40:49.996" endtime="20221127 12:40:49.997"/>
</kw>
<status status="PASS" starttime="20221127 12:40:49.987" endtime="20221127 12:40:49.997"/>
</kw>
<msg timestamp="20221127 12:40:49.997" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221127 12:40:49.986" endtime="20221127 12:40:49.998"/>
</kw>
<status status="PASS" starttime="20221127 12:40:49.986" endtime="20221127 12:40:49.998"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221127 12:40:50.003" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221127 12:40:50.028" level="INFO">${rc} = 0</msg>
<msg timestamp="20221127 12:40:50.028" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221127 12:40:50.000" endtime="20221127 12:40:50.029"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221127 12:40:50.030" level="INFO">200</msg>
<status status="PASS" starttime="20221127 12:40:50.029" endtime="20221127 12:40:50.030"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221127 12:40:50.031" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221127 12:40:50.030" endtime="20221127 12:40:50.031"/>
</kw>
<status status="PASS" starttime="20221127 12:40:50.000" endtime="20221127 12:40:50.032"/>
</kw>
<msg timestamp="20221127 12:40:50.032" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221127 12:40:49.999" endtime="20221127 12:40:50.032"/>
</kw>
<msg timestamp="20221127 12:40:50.033" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221127 12:40:49.999" endtime="20221127 12:40:50.033"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221127 12:40:50.033" endtime="20221127 12:40:50.033"/>
</kw>
<status status="NOT RUN" starttime="20221127 12:40:50.033" endtime="20221127 12:40:50.033"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221127 12:40:50.033" endtime="20221127 12:40:50.034"/>
</kw>
<status status="PASS" starttime="20221127 12:40:50.033" endtime="20221127 12:40:50.034"/>
</branch>
<status status="PASS" starttime="20221127 12:40:50.033" endtime="20221127 12:40:50.034"/>
</if>
<status status="PASS" starttime="20221127 12:40:49.998" endtime="20221127 12:40:50.034"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221127 12:40:50.034" endtime="20221127 12:40:50.035"/>
</kw>
<status status="PASS" starttime="20221127 12:40:50.034" endtime="20221127 12:40:50.035"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221127 12:40:50.039" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221127 12:40:50.055" level="INFO">${rc} = 0</msg>
<msg timestamp="20221127 12:40:50.055" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221127 12:40:50.037" endtime="20221127 12:40:50.055"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221127 12:40:50.056" level="INFO">200</msg>
<status status="PASS" starttime="20221127 12:40:50.056" endtime="20221127 12:40:50.056"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221127 12:40:50.057" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221127 12:40:50.056" endtime="20221127 12:40:50.057"/>
</kw>
<status status="PASS" starttime="20221127 12:40:50.036" endtime="20221127 12:40:50.057"/>
</kw>
<msg timestamp="20221127 12:40:50.057" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221127 12:40:50.036" endtime="20221127 12:40:50.058"/>
</kw>
<msg timestamp="20221127 12:40:50.058" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221127 12:40:50.036" endtime="20221127 12:40:50.058"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221127 12:40:50.059" endtime="20221127 12:40:50.059"/>
</kw>
<status status="NOT RUN" starttime="20221127 12:40:50.058" endtime="20221127 12:40:50.059"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221127 12:40:50.059" endtime="20221127 12:40:50.059"/>
</kw>
<status status="PASS" starttime="20221127 12:40:50.059" endtime="20221127 12:40:50.059"/>
</branch>
<status status="PASS" starttime="20221127 12:40:50.058" endtime="20221127 12:40:50.059"/>
</if>
<status status="PASS" starttime="20221127 12:40:50.035" endtime="20221127 12:40:50.059"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221127 12:40:50.060" endtime="20221127 12:40:50.060"/>
</kw>
<status status="PASS" starttime="20221127 12:40:50.060" endtime="20221127 12:40:50.060"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221127 12:40:50.066" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221127 12:40:50.081" level="INFO">${rc} = 0</msg>
<msg timestamp="20221127 12:40:50.081" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221127 12:40:50.063" endtime="20221127 12:40:50.081"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221127 12:40:50.082" level="INFO">200</msg>
<status status="PASS" starttime="20221127 12:40:50.081" endtime="20221127 12:40:50.083"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221127 12:40:50.083" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221127 12:40:50.083" endtime="20221127 12:40:50.083"/>
</kw>
<status status="PASS" starttime="20221127 12:40:50.062" endtime="20221127 12:40:50.084"/>
</kw>
<msg timestamp="20221127 12:40:50.084" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221127 12:40:50.061" endtime="20221127 12:40:50.084"/>
</kw>
<msg timestamp="20221127 12:40:50.085" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221127 12:40:50.061" endtime="20221127 12:40:50.085"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221127 12:40:50.085" endtime="20221127 12:40:50.085"/>
</kw>
<status status="NOT RUN" starttime="20221127 12:40:50.085" endtime="20221127 12:40:50.085"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221127 12:40:50.085" endtime="20221127 12:40:50.086"/>
</kw>
<status status="PASS" starttime="20221127 12:40:50.085" endtime="20221127 12:40:50.086"/>
</branch>
<status status="PASS" starttime="20221127 12:40:50.085" endtime="20221127 12:40:50.086"/>
</if>
<status status="PASS" starttime="20221127 12:40:50.061" endtime="20221127 12:40:50.086"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221127 12:40:50.087" endtime="20221127 12:40:50.087"/>
</kw>
<status status="PASS" starttime="20221127 12:40:50.086" endtime="20221127 12:40:50.087"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221127 12:40:50.091" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221127 12:40:50.108" level="INFO">${rc} = 0</msg>
<msg timestamp="20221127 12:40:50.108" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221127 12:40:50.089" endtime="20221127 12:40:50.108"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221127 12:40:50.109" level="INFO">200</msg>
<status status="PASS" starttime="20221127 12:40:50.108" endtime="20221127 12:40:50.109"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221127 12:40:50.110" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221127 12:40:50.110" endtime="20221127 12:40:50.110"/>
</kw>
<status status="PASS" starttime="20221127 12:40:50.088" endtime="20221127 12:40:50.111"/>
</kw>
<msg timestamp="20221127 12:40:50.111" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221127 12:40:50.088" endtime="20221127 12:40:50.111"/>
</kw>
<msg timestamp="20221127 12:40:50.112" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221127 12:40:50.088" endtime="20221127 12:40:50.112"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221127 12:40:50.112" endtime="20221127 12:40:50.112"/>
</kw>
<status status="NOT RUN" starttime="20221127 12:40:50.112" endtime="20221127 12:40:50.112"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221127 12:40:50.113" endtime="20221127 12:40:50.113"/>
</kw>
<status status="PASS" starttime="20221127 12:40:50.112" endtime="20221127 12:40:50.113"/>
</branch>
<status status="PASS" starttime="20221127 12:40:50.112" endtime="20221127 12:40:50.113"/>
</if>
<status status="PASS" starttime="20221127 12:40:50.087" endtime="20221127 12:40:50.114"/>
</kw>
<status status="PASS" starttime="20221127 12:40:49.985" endtime="20221127 12:40:50.114"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221127 12:40:49.984" endtime="20221127 12:40:50.114"/>
</test>
<test id="s1-s2-s2-t8" name="Check Recon Namespace Summary Root" line="122">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/</arg>
<arg>ROOT</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221127 12:40:50.122" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221127 12:40:50.138" level="INFO">${rc} = 0</msg>
<msg timestamp="20221127 12:40:50.138" level="INFO">${output} = {"type":"ROOT","numVolume":3,"numBucket":2,"numDir":0,"numKey":0,"status":"OK"}</msg>
<status status="PASS" starttime="20221127 12:40:50.119" endtime="20221127 12:40:50.138"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221127 12:40:50.140" level="INFO">{"type":"ROOT","numVolume":3,"numBucket":2,"numDir":0,"numKey":0,"status":"OK"}</msg>
<status status="PASS" starttime="20221127 12:40:50.139" endtime="20221127 12:40:50.140"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221127 12:40:50.141" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221127 12:40:50.140" endtime="20221127 12:40:50.141"/>
</kw>
<status status="PASS" starttime="20221127 12:40:50.119" endtime="20221127 12:40:50.141"/>
</kw>
<msg timestamp="20221127 12:40:50.141" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221127 12:40:50.118" endtime="20221127 12:40:50.142"/>
</kw>
<msg timestamp="20221127 12:40:50.142" level="INFO">${result} = {"type":"ROOT","numVolume":3,"numBucket":2,"numDir":0,"numKey":0,"status":"OK"}</msg>
<status status="PASS" starttime="20221127 12:40:50.118" endtime="20221127 12:40:50.142"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221127 12:40:50.142" endtime="20221127 12:40:50.143"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221127 12:40:50.143" endtime="20221127 12:40:50.143"/>
</kw>
<status status="PASS" starttime="20221127 12:40:50.117" endtime="20221127 12:40:50.144"/>
</kw>
<status status="PASS" starttime="20221127 12:40:50.117" endtime="20221127 12:40:50.144"/>
</kw>
<status status="PASS" starttime="20221127 12:40:50.116" endtime="20221127 12:40:50.144"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221127 12:40:50.116" endtime="20221127 12:40:50.145"/>
</test>
<test id="s1-s2-s2-t9" name="Check Recon Namespace Summary Volume" line="125">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}</arg>
<arg>VOLUME</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221127 12:40:50.152" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-izkyr 2&gt;&amp;1'.</msg>
<msg timestamp="20221127 12:40:50.171" level="INFO">${rc} = 0</msg>
<msg timestamp="20221127 12:40:50.171" level="INFO">${output} = {"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221127 12:40:50.150" endtime="20221127 12:40:50.171"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221127 12:40:50.172" level="INFO">{"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221127 12:40:50.171" endtime="20221127 12:40:50.172"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221127 12:40:50.173" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221127 12:40:50.172" endtime="20221127 12:40:50.173"/>
</kw>
<status status="PASS" starttime="20221127 12:40:50.149" endtime="20221127 12:40:50.173"/>
</kw>
<msg timestamp="20221127 12:40:50.173" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221127 12:40:50.149" endtime="20221127 12:40:50.176"/>
</kw>
<msg timestamp="20221127 12:40:50.177" level="INFO">${result} = {"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221127 12:40:50.148" endtime="20221127 12:40:50.177"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20221127 12:40:50.178" level="FAIL">'{"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20221127 12:40:50.177" endtime="20221127 12:40:50.178"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221127 12:40:50.179" endtime="20221127 12:40:50.179"/>
</kw>
<status status="FAIL" starttime="20221127 12:40:50.147" endtime="20221127 12:40:50.179"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221127 12:41:00.185" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-izkyr 2&gt;&amp;1'.</msg>
<msg timestamp="20221127 12:41:00.201" level="INFO">${rc} = 0</msg>
<msg timestamp="20221127 12:41:00.201" level="INFO">${output} = {"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221127 12:41:00.182" endtime="20221127 12:41:00.201"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221127 12:41:00.203" level="INFO">{"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221127 12:41:00.202" endtime="20221127 12:41:00.203"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221127 12:41:00.203" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221127 12:41:00.203" endtime="20221127 12:41:00.203"/>
</kw>
<status status="PASS" starttime="20221127 12:41:00.181" endtime="20221127 12:41:00.204"/>
</kw>
<msg timestamp="20221127 12:41:00.204" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221127 12:41:00.181" endtime="20221127 12:41:00.205"/>
</kw>
<msg timestamp="20221127 12:41:00.205" level="INFO">${result} = {"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221127 12:41:00.181" endtime="20221127 12:41:00.205"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20221127 12:41:00.206" level="FAIL">'{"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20221127 12:41:00.205" endtime="20221127 12:41:00.206"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221127 12:41:00.207" endtime="20221127 12:41:00.207"/>
</kw>
<status status="FAIL" starttime="20221127 12:41:00.180" endtime="20221127 12:41:00.207"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221127 12:41:10.214" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-izkyr 2&gt;&amp;1'.</msg>
<msg timestamp="20221127 12:41:10.231" level="INFO">${rc} = 0</msg>
<msg timestamp="20221127 12:41:10.231" level="INFO">${output} = {"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221127 12:41:10.211" endtime="20221127 12:41:10.231"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221127 12:41:10.232" level="INFO">{"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221127 12:41:10.231" endtime="20221127 12:41:10.232"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221127 12:41:10.233" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221127 12:41:10.233" endtime="20221127 12:41:10.233"/>
</kw>
<status status="PASS" starttime="20221127 12:41:10.210" endtime="20221127 12:41:10.233"/>
</kw>
<msg timestamp="20221127 12:41:10.234" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221127 12:41:10.209" endtime="20221127 12:41:10.234"/>
</kw>
<msg timestamp="20221127 12:41:10.234" level="INFO">${result} = {"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221127 12:41:10.209" endtime="20221127 12:41:10.234"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20221127 12:41:10.236" level="FAIL">'{"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20221127 12:41:10.235" endtime="20221127 12:41:10.236"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221127 12:41:10.236" endtime="20221127 12:41:10.236"/>
</kw>
<status status="FAIL" starttime="20221127 12:41:10.208" endtime="20221127 12:41:10.237"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221127 12:41:20.243" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-izkyr 2&gt;&amp;1'.</msg>
<msg timestamp="20221127 12:41:20.267" level="INFO">${rc} = 0</msg>
<msg timestamp="20221127 12:41:20.267" level="INFO">${output} = {"type":"VOLUME","numVolume":-1,"numBucket":1,"numDir":2,"numKey":2,"status":"OK"}</msg>
<status status="PASS" starttime="20221127 12:41:20.240" endtime="20221127 12:41:20.267"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221127 12:41:20.268" level="INFO">{"type":"VOLUME","numVolume":-1,"numBucket":1,"numDir":2,"numKey":2,"status":"OK"}</msg>
<status status="PASS" starttime="20221127 12:41:20.267" endtime="20221127 12:41:20.268"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221127 12:41:20.269" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221127 12:41:20.269" endtime="20221127 12:41:20.269"/>
</kw>
<status status="PASS" starttime="20221127 12:41:20.240" endtime="20221127 12:41:20.270"/>
</kw>
<msg timestamp="20221127 12:41:20.270" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221127 12:41:20.239" endtime="20221127 12:41:20.270"/>
</kw>
<msg timestamp="20221127 12:41:20.271" level="INFO">${result} = {"type":"VOLUME","numVolume":-1,"numBucket":1,"numDir":2,"numKey":2,"status":"OK"}</msg>
<status status="PASS" starttime="20221127 12:41:20.239" endtime="20221127 12:41:20.271"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221127 12:41:20.271" endtime="20221127 12:41:20.272"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221127 12:41:20.272" endtime="20221127 12:41:20.272"/>
</kw>
<status status="PASS" starttime="20221127 12:41:20.238" endtime="20221127 12:41:20.273"/>
</kw>
<status status="PASS" starttime="20221127 12:40:50.147" endtime="20221127 12:41:20.273"/>
</kw>
<status status="PASS" starttime="20221127 12:40:50.146" endtime="20221127 12:41:20.273"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221127 12:40:50.145" endtime="20221127 12:41:20.273"/>
</test>
<test id="s1-s2-s2-t10" name="Check Recon Namespace Summary Bucket" line="128">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}</arg>
<arg>BUCKET</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221127 12:41:20.282" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-izkyr/buc-nmcrl 2&gt;&amp;1'.</msg>
<msg timestamp="20221127 12:41:20.307" level="INFO">${rc} = 0</msg>
<msg timestamp="20221127 12:41:20.307" level="INFO">${output} = {"type":"BUCKET","numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2,"status":"OK"}</msg>
<status status="PASS" starttime="20221127 12:41:20.279" endtime="20221127 12:41:20.307"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221127 12:41:20.309" level="INFO">{"type":"BUCKET","numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2,"status":"OK"}</msg>
<status status="PASS" starttime="20221127 12:41:20.308" endtime="20221127 12:41:20.309"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221127 12:41:20.310" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221127 12:41:20.309" endtime="20221127 12:41:20.311"/>
</kw>
<status status="PASS" starttime="20221127 12:41:20.279" endtime="20221127 12:41:20.311"/>
</kw>
<msg timestamp="20221127 12:41:20.311" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221127 12:41:20.278" endtime="20221127 12:41:20.312"/>
</kw>
<msg timestamp="20221127 12:41:20.312" level="INFO">${result} = {"type":"BUCKET","numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2,"status":"OK"}</msg>
<status status="PASS" starttime="20221127 12:41:20.278" endtime="20221127 12:41:20.312"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221127 12:41:20.312" endtime="20221127 12:41:20.313"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221127 12:41:20.313" endtime="20221127 12:41:20.313"/>
</kw>
<status status="PASS" starttime="20221127 12:41:20.277" endtime="20221127 12:41:20.314"/>
</kw>
<status status="PASS" starttime="20221127 12:41:20.277" endtime="20221127 12:41:20.314"/>
</kw>
<status status="PASS" starttime="20221127 12:41:20.276" endtime="20221127 12:41:20.314"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221127 12:41:20.275" endtime="20221127 12:41:20.314"/>
</test>
<test id="s1-s2-s2-t11" name="Check Recon Namespace Summary Key" line="131">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/file1</arg>
<arg>KEY</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221127 12:41:20.322" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-izkyr/buc-nmcrl/file1 2&gt;&amp;1'.</msg>
<msg timestamp="20221127 12:41:20.344" level="INFO">${rc} = 0</msg>
<msg timestamp="20221127 12:41:20.344" level="INFO">${output} = {"type":"KEY","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"OK"}</msg>
<status status="PASS" starttime="20221127 12:41:20.320" endtime="20221127 12:41:20.344"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221127 12:41:20.347" level="INFO">{"type":"KEY","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"OK"}</msg>
<status status="PASS" starttime="20221127 12:41:20.346" endtime="20221127 12:41:20.347"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221127 12:41:20.347" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221127 12:41:20.347" endtime="20221127 12:41:20.348"/>
</kw>
<status status="PASS" starttime="20221127 12:41:20.319" endtime="20221127 12:41:20.348"/>
</kw>
<msg timestamp="20221127 12:41:20.348" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221127 12:41:20.319" endtime="20221127 12:41:20.348"/>
</kw>
<msg timestamp="20221127 12:41:20.349" level="INFO">${result} = {"type":"KEY","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"OK"}</msg>
<status status="PASS" starttime="20221127 12:41:20.318" endtime="20221127 12:41:20.349"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221127 12:41:20.349" endtime="20221127 12:41:20.349"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221127 12:41:20.349" endtime="20221127 12:41:20.350"/>
</kw>
<status status="PASS" starttime="20221127 12:41:20.318" endtime="20221127 12:41:20.350"/>
</kw>
<status status="PASS" starttime="20221127 12:41:20.317" endtime="20221127 12:41:20.350"/>
</kw>
<status status="PASS" starttime="20221127 12:41:20.316" endtime="20221127 12:41:20.350"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221127 12:41:20.315" endtime="20221127 12:41:20.350"/>
</test>
<test id="s1-s2-s2-t12" name="Check Recon Namespace Summary Directory" line="134">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET_LAYOUT}' == 'LEGACY'</arg>
<arg>Wait For Summary</arg>
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2/</arg>
<arg>DIRECTORY</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221127 12:41:20.353" endtime="20221127 12:41:20.353"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET_LAYOUT}' == 'FILE_SYSTEM_OPTIMIZED'</arg>
<arg>Wait For Summary</arg>
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2</arg>
<arg>DIRECTORY</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2</arg>
<arg>DIRECTORY</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221127 12:41:20.360" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-izkyr/buc-nmcrl/dir1/dir2 2&gt;&amp;1'.</msg>
<msg timestamp="20221127 12:41:20.379" level="INFO">${rc} = 0</msg>
<msg timestamp="20221127 12:41:20.379" level="INFO">${output} = {"type":"DIRECTORY","numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1,"status":"OK"}</msg>
<status status="PASS" starttime="20221127 12:41:20.356" endtime="20221127 12:41:20.379"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221127 12:41:20.381" level="INFO">{"type":"DIRECTORY","numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1,"status":"OK"}</msg>
<status status="PASS" starttime="20221127 12:41:20.380" endtime="20221127 12:41:20.381"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221127 12:41:20.381" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221127 12:41:20.381" endtime="20221127 12:41:20.381"/>
</kw>
<status status="PASS" starttime="20221127 12:41:20.356" endtime="20221127 12:41:20.382"/>
</kw>
<msg timestamp="20221127 12:41:20.382" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221127 12:41:20.356" endtime="20221127 12:41:20.383"/>
</kw>
<msg timestamp="20221127 12:41:20.383" level="INFO">${result} = {"type":"DIRECTORY","numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1,"status":"OK"}</msg>
<status status="PASS" starttime="20221127 12:41:20.355" endtime="20221127 12:41:20.383"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221127 12:41:20.383" endtime="20221127 12:41:20.383"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221127 12:41:20.384" endtime="20221127 12:41:20.384"/>
</kw>
<status status="PASS" starttime="20221127 12:41:20.355" endtime="20221127 12:41:20.384"/>
</kw>
<status status="PASS" starttime="20221127 12:41:20.354" endtime="20221127 12:41:20.384"/>
</kw>
<status status="PASS" starttime="20221127 12:41:20.354" endtime="20221127 12:41:20.385"/>
</kw>
<status status="PASS" starttime="20221127 12:41:20.353" endtime="20221127 12:41:20.385"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221127 12:41:20.352" endtime="20221127 12:41:20.385"/>
</test>
<test id="s1-s2-s2-t13" name="Check Recon Namespace Disk Usage" line="138">
<kw name="Wait For Summary">
<arg>${DISK_USAGE_URL}?path=/${VOLUME}/${BUCKET}&amp;files=true&amp;replica=true</arg>
<arg>\"sizeWithReplica\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221127 12:41:20.393" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/du?path=/vol-izkyr/buc-nmcrl&amp;files=true&amp;replica=true 2&gt;&amp;1'.</msg>
<msg timestamp="20221127 12:41:20.409" level="INFO">${rc} = 0</msg>
<msg timestamp="20221127 12:41:20.409" level="INFO">${output} = {"status":"OK","path":"/vol-izkyr/buc-nmcrl","size":9917,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-izkyr/buc-nmcrl/dir1","size":6038,"sizeWithReplica":-1,"isKey":fals...</msg>
<status status="PASS" starttime="20221127 12:41:20.390" endtime="20221127 12:41:20.409"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221127 12:41:20.410" level="INFO">{"status":"OK","path":"/vol-izkyr/buc-nmcrl","size":9917,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-izkyr/buc-nmcrl/dir1","size":6038,"sizeWithReplica":-1,"isKey":false}],"sizeDirectKey":3879}</msg>
<status status="PASS" starttime="20221127 12:41:20.409" endtime="20221127 12:41:20.410"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221127 12:41:20.411" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221127 12:41:20.411" endtime="20221127 12:41:20.411"/>
</kw>
<status status="PASS" starttime="20221127 12:41:20.390" endtime="20221127 12:41:20.412"/>
</kw>
<msg timestamp="20221127 12:41:20.412" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221127 12:41:20.390" endtime="20221127 12:41:20.413"/>
</kw>
<msg timestamp="20221127 12:41:20.413" level="INFO">${result} = {"status":"OK","path":"/vol-izkyr/buc-nmcrl","size":9917,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-izkyr/buc-nmcrl/dir1","size":6038,"sizeWithReplica":-1,"isKey":fals...</msg>
<status status="PASS" starttime="20221127 12:41:20.389" endtime="20221127 12:41:20.413"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221127 12:41:20.413" endtime="20221127 12:41:20.414"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221127 12:41:20.414" endtime="20221127 12:41:20.414"/>
</kw>
<status status="PASS" starttime="20221127 12:41:20.389" endtime="20221127 12:41:20.415"/>
</kw>
<status status="PASS" starttime="20221127 12:41:20.388" endtime="20221127 12:41:20.415"/>
</kw>
<status status="PASS" starttime="20221127 12:41:20.387" endtime="20221127 12:41:20.415"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221127 12:41:20.386" endtime="20221127 12:41:20.415"/>
</test>
<test id="s1-s2-s2-t14" name="Check Recon Namespace Volume Quota Usage" line="141">
<kw name="Wait For Summary">
<arg>${QUOTA_USAGE_URL}?path=/${VOLUME}</arg>
<arg>\"used\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221127 12:41:20.424" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/quota?path=/vol-izkyr 2&gt;&amp;1'.</msg>
<msg timestamp="20221127 12:41:20.443" level="INFO">${rc} = 0</msg>
<msg timestamp="20221127 12:41:20.444" level="INFO">${output} = {"allowed":-1,"used":9917,"status":"OK"}</msg>
<status status="PASS" starttime="20221127 12:41:20.421" endtime="20221127 12:41:20.444"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221127 12:41:20.445" level="INFO">{"allowed":-1,"used":9917,"status":"OK"}</msg>
<status status="PASS" starttime="20221127 12:41:20.444" endtime="20221127 12:41:20.445"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221127 12:41:20.447" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221127 12:41:20.445" endtime="20221127 12:41:20.447"/>
</kw>
<status status="PASS" starttime="20221127 12:41:20.420" endtime="20221127 12:41:20.447"/>
</kw>
<msg timestamp="20221127 12:41:20.447" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221127 12:41:20.420" endtime="20221127 12:41:20.448"/>
</kw>
<msg timestamp="20221127 12:41:20.448" level="INFO">${result} = {"allowed":-1,"used":9917,"status":"OK"}</msg>
<status status="PASS" starttime="20221127 12:41:20.419" endtime="20221127 12:41:20.448"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221127 12:41:20.449" endtime="20221127 12:41:20.449"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221127 12:41:20.449" endtime="20221127 12:41:20.450"/>
</kw>
<status status="PASS" starttime="20221127 12:41:20.419" endtime="20221127 12:41:20.450"/>
</kw>
<status status="PASS" starttime="20221127 12:41:20.418" endtime="20221127 12:41:20.450"/>
</kw>
<status status="PASS" starttime="20221127 12:41:20.418" endtime="20221127 12:41:20.450"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221127 12:41:20.417" endtime="20221127 12:41:20.450"/>
</test>
<test id="s1-s2-s2-t15" name="Check Recon Namespace Bucket Quota Usage" line="144">
<kw name="Wait For Summary">
<arg>${QUOTA_USAGE_URL}?path=/${VOLUME}/${BUCKET}</arg>
<arg>\"used\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221127 12:41:20.458" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/quota?path=/vol-izkyr/buc-nmcrl 2&gt;&amp;1'.</msg>
<msg timestamp="20221127 12:41:20.475" level="INFO">${rc} = 0</msg>
<msg timestamp="20221127 12:41:20.475" level="INFO">${output} = {"allowed":-1,"used":9917,"status":"OK"}</msg>
<status status="PASS" starttime="20221127 12:41:20.456" endtime="20221127 12:41:20.476"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221127 12:41:20.477" level="INFO">{"allowed":-1,"used":9917,"status":"OK"}</msg>
<status status="PASS" starttime="20221127 12:41:20.476" endtime="20221127 12:41:20.477"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221127 12:41:20.478" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221127 12:41:20.477" endtime="20221127 12:41:20.478"/>
</kw>
<status status="PASS" starttime="20221127 12:41:20.455" endtime="20221127 12:41:20.478"/>
</kw>
<msg timestamp="20221127 12:41:20.478" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221127 12:41:20.455" endtime="20221127 12:41:20.479"/>
</kw>
<msg timestamp="20221127 12:41:20.479" level="INFO">${result} = {"allowed":-1,"used":9917,"status":"OK"}</msg>
<status status="PASS" starttime="20221127 12:41:20.454" endtime="20221127 12:41:20.479"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221127 12:41:20.480" endtime="20221127 12:41:20.480"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221127 12:41:20.480" endtime="20221127 12:41:20.481"/>
</kw>
<status status="PASS" starttime="20221127 12:41:20.453" endtime="20221127 12:41:20.481"/>
</kw>
<status status="PASS" starttime="20221127 12:41:20.453" endtime="20221127 12:41:20.481"/>
</kw>
<status status="PASS" starttime="20221127 12:41:20.452" endtime="20221127 12:41:20.481"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221127 12:41:20.451" endtime="20221127 12:41:20.481"/>
</test>
<test id="s1-s2-s2-t16" name="Check Recon Namespace File Size Distribution Root" line="147">
<kw name="Wait For Summary">
<arg>${FILE_SIZE_DIST_URL}?path=/</arg>
<arg>\"dist\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221127 12:41:20.490" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221127 12:41:20.506" level="INFO">${rc} = 0</msg>
<msg timestamp="20221127 12:41:20.506" level="INFO">${output} = {"dist":[0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20221127 12:41:20.486" endtime="20221127 12:41:20.506"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221127 12:41:20.507" level="INFO">{"dist":[0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20221127 12:41:20.507" endtime="20221127 12:41:20.508"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221127 12:41:20.508" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221127 12:41:20.508" endtime="20221127 12:41:20.508"/>
</kw>
<status status="PASS" starttime="20221127 12:41:20.485" endtime="20221127 12:41:20.509"/>
</kw>
<msg timestamp="20221127 12:41:20.509" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221127 12:41:20.485" endtime="20221127 12:41:20.509"/>
</kw>
<msg timestamp="20221127 12:41:20.509" level="INFO">${result} = {"dist":[0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20221127 12:41:20.485" endtime="20221127 12:41:20.509"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221127 12:41:20.509" endtime="20221127 12:41:20.510"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221127 12:41:20.510" endtime="20221127 12:41:20.510"/>
</kw>
<status status="PASS" starttime="20221127 12:41:20.484" endtime="20221127 12:41:20.511"/>
</kw>
<status status="PASS" starttime="20221127 12:41:20.484" endtime="20221127 12:41:20.511"/>
</kw>
<status status="PASS" starttime="20221127 12:41:20.483" endtime="20221127 12:41:20.511"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221127 12:41:20.482" endtime="20221127 12:41:20.511"/>
</test>
<doc>Smoke test for Recon Namespace Summary Endpoint for FILE_SYSTEM_OPTIMIZED buckets.</doc>
<status status="PASS" starttime="20221127 12:40:27.987" endtime="20221127 12:41:20.512"/>
</suite>
<status status="PASS" starttime="20221127 12:39:36.525" endtime="20221127 12:41:20.515"/>
</suite>
<suite id="s1-s3" name="Loaddata" source="/opt/hadoop/smoketest/topology/loaddata.robot">
<test id="s1-s3-t1" name="Create a volume, bucket and key" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create topvol1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221127 12:41:26.045" level="INFO">Running command 'ozone sh volume create topvol1 2&gt;&amp;1'.</msg>
<msg timestamp="20221127 12:41:29.867" level="INFO">${rc} = 0</msg>
<msg timestamp="20221127 12:41:29.867" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221127 12:41:26.040" endtime="20221127 12:41:29.867"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221127 12:41:29.869" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221127 12:41:29.868" endtime="20221127 12:41:29.869"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221127 12:41:29.869" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221127 12:41:29.869" endtime="20221127 12:41:29.870"/>
</kw>
<status status="PASS" starttime="20221127 12:41:26.040" endtime="20221127 12:41:29.870"/>
</kw>
<msg timestamp="20221127 12:41:29.870" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221127 12:41:26.040" endtime="20221127 12:41:29.871"/>
</kw>
<msg timestamp="20221127 12:41:29.871" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221127 12:41:26.039" endtime="20221127 12:41:29.871"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20221127 12:41:29.872" endtime="20221127 12:41:29.872"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /topvol1/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221127 12:41:29.876" level="INFO">Running command 'ozone sh bucket create /topvol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20221127 12:41:33.255" level="INFO">${rc} = 0</msg>
<msg timestamp="20221127 12:41:33.255" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221127 12:41:29.874" endtime="20221127 12:41:33.255"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221127 12:41:33.256" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221127 12:41:33.255" endtime="20221127 12:41:33.256"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221127 12:41:33.257" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221127 12:41:33.256" endtime="20221127 12:41:33.257"/>
</kw>
<status status="PASS" starttime="20221127 12:41:29.873" endtime="20221127 12:41:33.257"/>
</kw>
<msg timestamp="20221127 12:41:33.257" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221127 12:41:29.873" endtime="20221127 12:41:33.258"/>
</kw>
<msg timestamp="20221127 12:41:33.258" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221127 12:41:29.872" endtime="20221127 12:41:33.258"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20221127 12:41:33.258" endtime="20221127 12:41:33.259"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221127 12:41:33.267" level="INFO">Running command 'ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20221127 12:41:39.881" level="INFO">${rc} = 0</msg>
<msg timestamp="20221127 12:41:39.881" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221127 12:41:33.260" endtime="20221127 12:41:39.882"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221127 12:41:39.883" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221127 12:41:39.882" endtime="20221127 12:41:39.883"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221127 12:41:39.884" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221127 12:41:39.883" endtime="20221127 12:41:39.884"/>
</kw>
<status status="PASS" starttime="20221127 12:41:33.259" endtime="20221127 12:41:39.884"/>
</kw>
<msg timestamp="20221127 12:41:39.884" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221127 12:41:33.259" endtime="20221127 12:41:39.885"/>
</kw>
<msg timestamp="20221127 12:41:39.885" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221127 12:41:33.259" endtime="20221127 12:41:39.885"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20221127 12:41:39.885" endtime="20221127 12:41:39.885"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221127 12:41:26.038" endtime="20221127 12:41:39.886"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20221127 12:41:25.993" endtime="20221127 12:41:39.887"/>
</suite>
<suite id="s1-s4" name="readdata-first-half" source="/opt/hadoop/smoketest/topology/readdata.robot">
<test id="s1-s4-t1" name="Read data from previously created key" line="27">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20221127 12:41:49.570" level="INFO">${random} = 94211</msg>
<status status="PASS" starttime="20221127 12:41:49.569" endtime="20221127 12:41:49.570"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221127 12:41:49.575" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-94211 2&gt;&amp;1'.</msg>
<msg timestamp="20221127 12:41:55.563" level="INFO">${rc} = 0</msg>
<msg timestamp="20221127 12:41:55.563" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221127 12:41:49.571" endtime="20221127 12:41:55.563"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221127 12:41:55.565" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221127 12:41:55.564" endtime="20221127 12:41:55.565"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221127 12:41:55.565" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221127 12:41:55.565" endtime="20221127 12:41:55.565"/>
</kw>
<status status="PASS" starttime="20221127 12:41:49.571" endtime="20221127 12:41:55.566"/>
</kw>
<msg timestamp="20221127 12:41:55.566" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221127 12:41:49.571" endtime="20221127 12:41:55.567"/>
</kw>
<msg timestamp="20221127 12:41:55.568" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221127 12:41:49.570" endtime="20221127 12:41:55.568"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20221127 12:41:55.568" endtime="20221127 12:41:55.568"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221127 12:41:49.568" endtime="20221127 12:41:55.568"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20221127 12:41:49.521" endtime="20221127 12:41:55.570"/>
</suite>
<suite id="s1-s5" name="readdata-second-half" source="/opt/hadoop/smoketest/topology/readdata.robot">
<test id="s1-s5-t1" name="Read data from previously created key" line="27">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20221127 12:42:39.906" level="INFO">${random} = 88077</msg>
<status status="PASS" starttime="20221127 12:42:39.906" endtime="20221127 12:42:39.906"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221127 12:42:39.912" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-88077 2&gt;&amp;1'.</msg>
<msg timestamp="20221127 12:43:07.417" level="INFO">${rc} = 0</msg>
<msg timestamp="20221127 12:43:07.417" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221127 12:42:39.908" endtime="20221127 12:43:07.417"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221127 12:43:07.419" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221127 12:43:07.418" endtime="20221127 12:43:07.419"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221127 12:43:07.420" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221127 12:43:07.419" endtime="20221127 12:43:07.420"/>
</kw>
<status status="PASS" starttime="20221127 12:42:39.907" endtime="20221127 12:43:07.420"/>
</kw>
<msg timestamp="20221127 12:43:07.420" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221127 12:42:39.907" endtime="20221127 12:43:07.422"/>
</kw>
<msg timestamp="20221127 12:43:07.422" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221127 12:42:39.906" endtime="20221127 12:43:07.422"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20221127 12:43:07.422" endtime="20221127 12:43:07.423"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221127 12:42:39.905" endtime="20221127 12:43:07.423"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20221127 12:42:39.859" endtime="20221127 12:43:07.425"/>
</suite>
<suite id="s1-s6" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s6-t1" name="Check webui static resources" line="29">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221127 12:38:45.665" endtime="20221127 12:38:45.667"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -s -I http://${SCM}:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221127 12:38:45.676" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20221127 12:38:46.067" level="INFO">${rc} = 0</msg>
<msg timestamp="20221127 12:38:46.067" level="INFO">${output} = HTTP/1.1 200 OK
Date: Sun, 27 Nov 2022 12:38:45 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Sun, 27 Nov 2022 12:13:10 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20221127 12:38:45.669" endtime="20221127 12:38:46.067"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221127 12:38:46.069" level="INFO">HTTP/1.1 200 OK
Date: Sun, 27 Nov 2022 12:38:45 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Sun, 27 Nov 2022 12:13:10 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20221127 12:38:46.068" endtime="20221127 12:38:46.069"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221127 12:38:46.072" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221127 12:38:46.070" endtime="20221127 12:38:46.072"/>
</kw>
<status status="PASS" starttime="20221127 12:38:45.668" endtime="20221127 12:38:46.072"/>
</kw>
<msg timestamp="20221127 12:38:46.072" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221127 12:38:45.668" endtime="20221127 12:38:46.075"/>
</kw>
<msg timestamp="20221127 12:38:46.075" level="INFO">${result} = HTTP/1.1 200 OK
Date: Sun, 27 Nov 2022 12:38:45 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Sun, 27 Nov 2022 12:13:10 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20221127 12:38:45.668" endtime="20221127 12:38:46.075"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221127 12:38:46.075" endtime="20221127 12:38:46.077"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221127 12:38:45.663" endtime="20221127 12:38:46.077"/>
</test>
<test id="s1-s6-t2" name="Basic Freon smoketest" line="34">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221127 12:38:46.088" endtime="20221127 12:38:46.088"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>10</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20221127 12:38:46.096" level="INFO">${random} = zIiCMRCpbd</msg>
<status status="PASS" starttime="20221127 12:38:46.095" endtime="20221127 12:38:46.096"/>
</kw>
<kw name="Freon OCKG" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221127 12:38:46.133" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p zIiCMRCpbd  2&gt;&amp;1'.</msg>
<msg timestamp="20221127 12:38:58.553" level="INFO">${rc} = 0</msg>
<msg timestamp="20221127 12:38:58.553" level="INFO">${output} = 2022-11-27 12:38:49,011 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-27 12:38:49,187 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221127 12:38:46.117" endtime="20221127 12:38:58.553"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221127 12:38:58.559" level="INFO">2022-11-27 12:38:49,011 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-27 12:38:49,187 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-11-27 12:38:49,187 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-11-27 12:38:49,401 [main] INFO freon.BaseFreonGenerator: Executing test with prefix zIiCMRCpbd and number-of-tests 1
2022-11-27 12:38:49,506 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-27 12:38:50,507 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-27 12:38:51,508 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-27 12:38:52,494 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2022-11-27 12:38:52,508 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-27 12:38:52,737 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false 
2022-11-27 12:38:53,509 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-27 12:38:54,106 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-11-27 12:38:54,408 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-11-27 12:38:54,509 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-27 12:38:55,510 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-27 12:38:56,528 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-27 12:38:57,529 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-11-27 12:38:58,140 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=4031.961266, max=4031.961266, mean=4031.961266, stddev=0.0, median=4031.961266, p75=4031.961266, p95=4031.961266, p98=4031.961266, p99=4031.961266, p999=4031.961266, mean_rate=0.18863093088678343, m1=0.2, m5=0.2, m15=0.2, rate_unit=events/second, duration_unit=milliseconds
2022-11-27 12:38:58,141 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 9
2022-11-27 12:38:58,152 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-11-27 12:38:58,152 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20221127 12:38:58.555" endtime="20221127 12:38:58.560"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221127 12:38:58.565" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221127 12:38:58.561" endtime="20221127 12:38:58.565"/>
</kw>
<status status="PASS" starttime="20221127 12:38:46.114" endtime="20221127 12:38:58.565"/>
</kw>
<msg timestamp="20221127 12:38:58.565" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221127 12:38:46.110" endtime="20221127 12:38:58.568"/>
</kw>
<msg timestamp="20221127 12:38:58.568" level="INFO">${result} = 2022-11-27 12:38:49,011 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-27 12:38:49,187 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221127 12:38:46.109" endtime="20221127 12:38:58.568"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221127 12:38:58.569" endtime="20221127 12:38:58.570"/>
</kw>
<status status="PASS" starttime="20221127 12:38:46.096" endtime="20221127 12:38:58.571"/>
</kw>
<kw name="Freon OCKV" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221127 12:38:58.590" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p zIiCMRCpbd  2&gt;&amp;1'.</msg>
<msg timestamp="20221127 12:39:09.710" level="INFO">${rc} = 0</msg>
<msg timestamp="20221127 12:39:09.710" level="INFO">${output} = 2022-11-27 12:39:02,743 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-27 12:39:02,931 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221127 12:38:58.582" endtime="20221127 12:39:09.710"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221127 12:39:09.712" level="INFO">2022-11-27 12:39:02,743 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-27 12:39:02,931 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-11-27 12:39:02,932 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-11-27 12:39:03,627 [main] INFO freon.BaseFreonGenerator: Executing test with prefix zIiCMRCpbd and number-of-tests 1
2022-11-27 12:39:04,195 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-27 12:39:05,208 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-27 12:39:06,214 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-27 12:39:06,982 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-11-27 12:39:07,214 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-27 12:39:08,215 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-27 12:39:09,216 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-11-27 12:39:09,350 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=61.231911, max=61.231911, mean=61.231911, stddev=0.0, median=61.231911, p75=61.231911, p95=61.231911, p98=61.231911, p99=61.231911, p999=61.231911, mean_rate=0.8492896845973026, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-11-27 12:39:09,353 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 5
2022-11-27 12:39:09,353 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-11-27 12:39:09,353 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20221127 12:39:09.711" endtime="20221127 12:39:09.712"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221127 12:39:09.712" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221127 12:39:09.712" endtime="20221127 12:39:09.712"/>
</kw>
<status status="PASS" starttime="20221127 12:38:58.578" endtime="20221127 12:39:09.713"/>
</kw>
<msg timestamp="20221127 12:39:09.713" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221127 12:38:58.578" endtime="20221127 12:39:09.713"/>
</kw>
<msg timestamp="20221127 12:39:09.714" level="INFO">${result} = 2022-11-27 12:39:02,743 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-27 12:39:02,931 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221127 12:38:58.575" endtime="20221127 12:39:09.714"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221127 12:39:09.714" endtime="20221127 12:39:09.714"/>
</kw>
<status status="PASS" starttime="20221127 12:38:58.571" endtime="20221127 12:39:09.714"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221127 12:38:46.083" endtime="20221127 12:39:09.714"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20221127 12:38:45.550" endtime="20221127 12:39:09.716"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="191441"/>
</suite>
<statistics>
<total>
<stat pass="32" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="32" fail="0" skip="0" id="s1" name="ozone-topology">ozone-topology</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1" name="Cli">ozone-topology.Cli</stat>
<stat pass="23" fail="0" skip="0" id="s1-s2" name="Recon">ozone-topology.Recon</stat>
<stat pass="7" fail="0" skip="0" id="s1-s2-s1" name="Recon-Api">ozone-topology.Recon.Recon-Api</stat>
<stat pass="16" fail="0" skip="0" id="s1-s2-s2" name="Recon-Nssummary">ozone-topology.Recon.Recon-Nssummary</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3" name="Loaddata">ozone-topology.Loaddata</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="readdata-first-half">ozone-topology.readdata-first-half</stat>
<stat pass="1" fail="0" skip="0" id="s1-s5" name="readdata-second-half">ozone-topology.readdata-second-half</stat>
<stat pass="2" fail="0" skip="0" id="s1-s6" name="Basic">ozone-topology.Basic</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
