<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.0.1 (Python 3.8.10 on linux)" generated="20221127 12:53:15.997" rpa="false" schemaversion="3">
<suite id="s1" name="restart">
<suite id="s1-s1" name="Validate" source="/opt/hadoop/smoketest/freon/validate.robot">
<test id="s1-s1-t1" name="Ozone Client Key Validator" line="25">
<kw name="Freon OCKV" library="freon">
<arg>prefix=ockg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221127 12:50:10.021" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p ockgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20221127 12:50:15.710" level="INFO">${rc} = 0</msg>
<msg timestamp="20221127 12:50:15.710" level="INFO">${output} = 2022-11-27 12:50:11,470 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-27 12:50:11,588 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221127 12:50:10.017" endtime="20221127 12:50:15.710"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221127 12:50:15.711" level="INFO">2022-11-27 12:50:11,470 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-27 12:50:11,588 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-11-27 12:50:11,589 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-11-27 12:50:11,753 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpre and number-of-tests 1
2022-11-27 12:50:11,861 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-27 12:50:12,866 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-27 12:50:13,348 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-11-27 12:50:13,867 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-27 12:50:14,867 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-11-27 12:50:15,342 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=49.671351, max=49.671351, mean=49.671351, stddev=0.0, median=49.671351, p75=49.671351, p95=49.671351, p98=49.671351, p99=49.671351, p999=49.671351, mean_rate=0.9722872645941464, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-11-27 12:50:15,343 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2022-11-27 12:50:15,343 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-11-27 12:50:15,343 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20221127 12:50:15.711" endtime="20221127 12:50:15.712"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221127 12:50:15.712" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221127 12:50:15.712" endtime="20221127 12:50:15.712"/>
</kw>
<status status="PASS" starttime="20221127 12:50:10.017" endtime="20221127 12:50:15.712"/>
</kw>
<msg timestamp="20221127 12:50:15.713" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221127 12:50:10.017" endtime="20221127 12:50:15.714"/>
</kw>
<msg timestamp="20221127 12:50:15.714" level="INFO">${result} = 2022-11-27 12:50:11,470 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-27 12:50:11,588 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221127 12:50:10.016" endtime="20221127 12:50:15.714"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221127 12:50:15.715" endtime="20221127 12:50:15.715"/>
</kw>
<status status="PASS" starttime="20221127 12:50:10.015" endtime="20221127 12:50:15.715"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221127 12:50:10.014" endtime="20221127 12:50:15.715"/>
</test>
<doc>Test freon data validation commands</doc>
<status status="PASS" starttime="20221127 12:50:09.968" endtime="20221127 12:50:15.717"/>
</suite>
<suite id="s1-s2" name="Generate-Chunk" source="/opt/hadoop/smoketest/freon/generate-chunk.robot">
<test id="s1-s2-t1" name="DN Chunk Generator" line="25">
<kw name="Freon DCG" library="freon">
<arg>prefix=dcg${PREFIX}</arg>
<arg>n=100</arg>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20221127 12:50:20.573" endtime="20221127 12:50:20.573"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon dcg -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221127 12:50:20.579" level="INFO">Running command 'ozone freon dcg -t 1 -n100 -p dcgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20221127 12:50:29.058" level="INFO">${rc} = 0</msg>
<msg timestamp="20221127 12:50:29.058" level="INFO">${output} = 2022-11-27 12:50:22,257 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-27 12:50:22,604 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221127 12:50:20.575" endtime="20221127 12:50:29.058"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221127 12:50:29.060" level="INFO">2022-11-27 12:50:22,257 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-27 12:50:22,604 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-11-27 12:50:22,604 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-11-27 12:50:23,626 [main] INFO freon.BaseFreonGenerator: Executing test with prefix dcgpre and number-of-tests 100
2022-11-27 12:50:23,662 [Thread-4] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-11-27 12:50:24,255 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-11-27 12:50:24,558 [pool-3-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-11-27 12:50:24,669 [Thread-4] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-11-27 12:50:25,670 [Thread-4] INFO freon.ProgressBar: Progress: 10.00 % (10 out of 100)
2022-11-27 12:50:26,671 [Thread-4] INFO freon.ProgressBar: Progress: 46.00 % (46 out of 100)
2022-11-27 12:50:27,671 [Thread-4] INFO freon.ProgressBar: Progress: 91.00 % (91 out of 100)
2022-11-27 12:50:28,672 [Thread-4] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2022-11-27 12:50:28,705 [shutdown-hook-0] INFO metrics: type=TIMER, name=chunk-write, count=100, min=11.958807, max=827.388997, mean=33.02659269711228, stddev=79.57328096932625, median=24.526924, p75=29.551486, p95=39.438948, p98=49.75016, p99=58.004353, p999=827.388997, mean_rate=23.34962619736361, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-11-27 12:50:28,706 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 5
2022-11-27 12:50:28,706 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-11-27 12:50:28,706 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20221127 12:50:29.059" endtime="20221127 12:50:29.060"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221127 12:50:29.061" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221127 12:50:29.060" endtime="20221127 12:50:29.061"/>
</kw>
<status status="PASS" starttime="20221127 12:50:20.574" endtime="20221127 12:50:29.061"/>
</kw>
<msg timestamp="20221127 12:50:29.061" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221127 12:50:20.574" endtime="20221127 12:50:29.062"/>
</kw>
<msg timestamp="20221127 12:50:29.063" level="INFO">${result} = 2022-11-27 12:50:22,257 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-27 12:50:22,604 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221127 12:50:20.574" endtime="20221127 12:50:29.063"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221127 12:50:29.063" endtime="20221127 12:50:29.063"/>
</kw>
<status status="PASS" starttime="20221127 12:50:20.572" endtime="20221127 12:50:29.064"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221127 12:50:20.571" endtime="20221127 12:50:29.064"/>
</test>
<doc>Test freon chunk generation commands</doc>
<status status="PASS" starttime="20221127 12:50:20.526" endtime="20221127 12:50:29.066"/>
</suite>
<suite id="s1-s3" name="Validate-Chunk" source="/opt/hadoop/smoketest/freon/validate-chunk.robot">
<test id="s1-s3-t1" name="DN Chunk Validator" line="25">
<kw name="Freon DCV" library="freon">
<arg>prefix=dcg${PREFIX}</arg>
<arg>n=100</arg>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20221127 12:50:34.011" endtime="20221127 12:50:34.011"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon dcv -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221127 12:50:34.017" level="INFO">Running command 'ozone freon dcv -t 1 -n100 -p dcgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20221127 12:50:39.413" level="INFO">${rc} = 0</msg>
<msg timestamp="20221127 12:50:39.413" level="INFO">${output} = 2022-11-27 12:50:35,608 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-27 12:50:35,746 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221127 12:50:34.013" endtime="20221127 12:50:39.413"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221127 12:50:39.414" level="INFO">2022-11-27 12:50:35,608 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-27 12:50:35,746 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-11-27 12:50:35,746 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-11-27 12:50:35,920 [main] INFO freon.BaseFreonGenerator: Executing test with prefix dcgpre and number-of-tests 100
2022-11-27 12:50:36,000 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-11-27 12:50:36,540 [main] INFO freon.DatanodeChunkValidator: Using pipeline PipelineID=de6031d7-dae6-4983-88fa-3c06768c8dfa
2022-11-27 12:50:37,008 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-11-27 12:50:37,081 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-11-27 12:50:37,328 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-11-27 12:50:38,008 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-11-27 12:50:39,009 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2022-11-27 12:50:39,057 [shutdown-hook-0] INFO metrics: type=TIMER, name=chunk-validate, count=100, min=1.612128, max=14.435246, mean=4.21826007, stddev=2.5414994178379, median=3.49986, p75=4.837383, p95=9.017054, p98=12.787919, p99=12.935922, p999=14.435246, mean_rate=95.89895585801845, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-11-27 12:50:39,058 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2022-11-27 12:50:39,058 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-11-27 12:50:39,058 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20221127 12:50:39.414" endtime="20221127 12:50:39.414"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221127 12:50:39.415" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221127 12:50:39.415" endtime="20221127 12:50:39.415"/>
</kw>
<status status="PASS" starttime="20221127 12:50:34.012" endtime="20221127 12:50:39.415"/>
</kw>
<msg timestamp="20221127 12:50:39.415" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221127 12:50:34.012" endtime="20221127 12:50:39.417"/>
</kw>
<msg timestamp="20221127 12:50:39.417" level="INFO">${result} = 2022-11-27 12:50:35,608 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-27 12:50:35,746 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221127 12:50:34.012" endtime="20221127 12:50:39.417"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221127 12:50:39.417" endtime="20221127 12:50:39.417"/>
</kw>
<status status="PASS" starttime="20221127 12:50:34.010" endtime="20221127 12:50:39.418"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221127 12:50:34.009" endtime="20221127 12:50:39.418"/>
</test>
<doc>Test freon chunk validation commands</doc>
<status status="PASS" starttime="20221127 12:50:33.963" endtime="20221127 12:50:39.419"/>
</suite>
<suite id="s1-s4" name="Validate" source="/opt/hadoop/smoketest/freon/validate.robot">
<test id="s1-s4-t1" name="Ozone Client Key Validator" line="25">
<kw name="Freon OCKV" library="freon">
<arg>prefix=ockg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221127 12:51:51.016" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p ockgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20221127 12:51:57.001" level="INFO">${rc} = 0</msg>
<msg timestamp="20221127 12:51:57.002" level="INFO">${output} = 2022-11-27 12:51:52,603 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-27 12:51:52,768 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221127 12:51:51.012" endtime="20221127 12:51:57.002"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221127 12:51:57.003" level="INFO">2022-11-27 12:51:52,603 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-27 12:51:52,768 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-11-27 12:51:52,768 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-11-27 12:51:52,938 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpre and number-of-tests 1
2022-11-27 12:51:53,014 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-27 12:51:54,021 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-27 12:51:54,721 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-11-27 12:51:55,022 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-27 12:51:56,022 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-11-27 12:51:56,647 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=36.913227, max=36.913227, mean=36.913227, stddev=0.0, median=36.913227, p75=36.913227, p95=36.913227, p98=36.913227, p99=36.913227, p999=36.913227, mean_rate=0.9701718520022128, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-11-27 12:51:56,647 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 4
2022-11-27 12:51:56,649 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-11-27 12:51:56,649 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20221127 12:51:57.002" endtime="20221127 12:51:57.003"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221127 12:51:57.004" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221127 12:51:57.003" endtime="20221127 12:51:57.004"/>
</kw>
<status status="PASS" starttime="20221127 12:51:51.011" endtime="20221127 12:51:57.004"/>
</kw>
<msg timestamp="20221127 12:51:57.004" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221127 12:51:51.011" endtime="20221127 12:51:57.005"/>
</kw>
<msg timestamp="20221127 12:51:57.006" level="INFO">${result} = 2022-11-27 12:51:52,603 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-27 12:51:52,768 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221127 12:51:51.010" endtime="20221127 12:51:57.006"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221127 12:51:57.006" endtime="20221127 12:51:57.006"/>
</kw>
<status status="PASS" starttime="20221127 12:51:51.009" endtime="20221127 12:51:57.007"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221127 12:51:51.008" endtime="20221127 12:51:57.007"/>
</test>
<doc>Test freon data validation commands</doc>
<status status="PASS" starttime="20221127 12:51:50.963" endtime="20221127 12:51:57.008"/>
</suite>
<suite id="s1-s5" name="Validate-Chunk" source="/opt/hadoop/smoketest/freon/validate-chunk.robot">
<test id="s1-s5-t1" name="DN Chunk Validator" line="25">
<kw name="Freon DCV" library="freon">
<arg>prefix=dcg${PREFIX}</arg>
<arg>n=100</arg>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20221127 12:52:02.361" endtime="20221127 12:52:02.361"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon dcv -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221127 12:52:02.366" level="INFO">Running command 'ozone freon dcv -t 1 -n100 -p dcgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20221127 12:52:07.943" level="INFO">${rc} = 0</msg>
<msg timestamp="20221127 12:52:07.943" level="INFO">${output} = 2022-11-27 12:52:04,047 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-27 12:52:04,194 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221127 12:52:02.362" endtime="20221127 12:52:07.943"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221127 12:52:07.944" level="INFO">2022-11-27 12:52:04,047 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-27 12:52:04,194 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-11-27 12:52:04,194 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-11-27 12:52:04,379 [main] INFO freon.BaseFreonGenerator: Executing test with prefix dcgpre and number-of-tests 100
2022-11-27 12:52:04,443 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-11-27 12:52:04,940 [main] INFO freon.DatanodeChunkValidator: Using pipeline PipelineID=de6031d7-dae6-4983-88fa-3c06768c8dfa
2022-11-27 12:52:05,432 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-11-27 12:52:05,444 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-11-27 12:52:05,729 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-11-27 12:52:06,445 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-11-27 12:52:07,445 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2022-11-27 12:52:07,578 [shutdown-hook-0] INFO metrics: type=TIMER, name=chunk-validate, count=100, min=2.285739, max=39.514867, mean=4.746786013529204, stddev=4.094551858543786, median=3.898266, p75=4.812981, p95=9.031353, p98=12.280708, p99=17.570696, p999=39.514867, mean_rate=95.15076142888694, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-11-27 12:52:07,578 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2022-11-27 12:52:07,579 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-11-27 12:52:07,579 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20221127 12:52:07.943" endtime="20221127 12:52:07.944"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221127 12:52:07.945" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221127 12:52:07.945" endtime="20221127 12:52:07.945"/>
</kw>
<status status="PASS" starttime="20221127 12:52:02.362" endtime="20221127 12:52:07.945"/>
</kw>
<msg timestamp="20221127 12:52:07.946" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221127 12:52:02.362" endtime="20221127 12:52:07.947"/>
</kw>
<msg timestamp="20221127 12:52:07.947" level="INFO">${result} = 2022-11-27 12:52:04,047 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-27 12:52:04,194 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221127 12:52:02.361" endtime="20221127 12:52:07.947"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221127 12:52:07.947" endtime="20221127 12:52:07.948"/>
</kw>
<status status="PASS" starttime="20221127 12:52:02.359" endtime="20221127 12:52:07.948"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221127 12:52:02.358" endtime="20221127 12:52:07.948"/>
</test>
<doc>Test freon chunk validation commands</doc>
<status status="PASS" starttime="20221127 12:52:02.314" endtime="20221127 12:52:07.950"/>
</suite>
<suite id="s1-s6" name="Generate" source="/opt/hadoop/smoketest/freon/generate.robot">
<test id="s1-s6-t1" name="Ozone Client Key Generator" line="25">
<kw name="Freon OCKG" library="freon">
<arg>prefix=ockg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221127 12:52:12.920" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p ockgpost  2&gt;&amp;1'.</msg>
<msg timestamp="20221127 12:52:19.260" level="INFO">${rc} = 0</msg>
<msg timestamp="20221127 12:52:19.260" level="INFO">${output} = 2022-11-27 12:52:14,408 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-27 12:52:14,626 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221127 12:52:12.916" endtime="20221127 12:52:19.260"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221127 12:52:19.262" level="INFO">2022-11-27 12:52:14,408 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-27 12:52:14,626 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-11-27 12:52:14,626 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-11-27 12:52:14,807 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpost and number-of-tests 1
2022-11-27 12:52:14,863 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-27 12:52:15,871 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-27 12:52:16,712 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-11-27 12:52:16,872 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-27 12:52:17,022 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-11-27 12:52:17,873 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-27 12:52:18,874 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-11-27 12:52:18,914 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=2424.870851, max=2424.870851, mean=2424.870851, stddev=0.0, median=2424.870851, p75=2424.870851, p95=2424.870851, p98=2424.870851, p99=2424.870851, p999=2424.870851, mean_rate=0.3068966967031957, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-11-27 12:52:18,914 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 4
2022-11-27 12:52:18,914 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-11-27 12:52:18,914 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20221127 12:52:19.261" endtime="20221127 12:52:19.262"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221127 12:52:19.262" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221127 12:52:19.262" endtime="20221127 12:52:19.262"/>
</kw>
<status status="PASS" starttime="20221127 12:52:12.916" endtime="20221127 12:52:19.263"/>
</kw>
<msg timestamp="20221127 12:52:19.263" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221127 12:52:12.916" endtime="20221127 12:52:19.264"/>
</kw>
<msg timestamp="20221127 12:52:19.264" level="INFO">${result} = 2022-11-27 12:52:14,408 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-27 12:52:14,626 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221127 12:52:12.915" endtime="20221127 12:52:19.264"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221127 12:52:19.264" endtime="20221127 12:52:19.265"/>
</kw>
<status status="PASS" starttime="20221127 12:52:12.914" endtime="20221127 12:52:19.265"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221127 12:52:12.913" endtime="20221127 12:52:19.265"/>
</test>
<test id="s1-s6-t2" name="OM Key Generator" line="28">
<kw name="Freon OMKG" library="freon">
<arg>prefix=omkg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon omkg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221127 12:52:19.272" level="INFO">Running command 'ozone freon omkg  -t 1 -n1 -p omkgpost  2&gt;&amp;1'.</msg>
<msg timestamp="20221127 12:52:22.931" level="INFO">${rc} = 0</msg>
<msg timestamp="20221127 12:52:22.931" level="INFO">${output} = 2022-11-27 12:52:20,732 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-27 12:52:20,902 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221127 12:52:19.269" endtime="20221127 12:52:22.931"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221127 12:52:22.933" level="INFO">2022-11-27 12:52:20,732 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-27 12:52:20,902 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-11-27 12:52:20,902 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-11-27 12:52:21,079 [main] INFO freon.BaseFreonGenerator: Executing test with prefix omkgpost and number-of-tests 1
2022-11-27 12:52:21,170 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-27 12:52:22,174 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-11-27 12:52:22,879 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=75.10766, max=75.10766, mean=75.10766, stddev=0.0, median=75.10766, p75=75.10766, p95=75.10766, p98=75.10766, p99=75.10766, p999=75.10766, mean_rate=0.9796982817127681, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-11-27 12:52:22,880 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2022-11-27 12:52:22,880 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-11-27 12:52:22,880 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20221127 12:52:22.932" endtime="20221127 12:52:22.933"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221127 12:52:22.933" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221127 12:52:22.933" endtime="20221127 12:52:22.934"/>
</kw>
<status status="PASS" starttime="20221127 12:52:19.269" endtime="20221127 12:52:22.934"/>
</kw>
<msg timestamp="20221127 12:52:22.934" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221127 12:52:19.269" endtime="20221127 12:52:22.934"/>
</kw>
<msg timestamp="20221127 12:52:22.935" level="INFO">${result} = 2022-11-27 12:52:20,732 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-27 12:52:20,902 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221127 12:52:19.268" endtime="20221127 12:52:22.935"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221127 12:52:22.935" endtime="20221127 12:52:22.935"/>
</kw>
<status status="PASS" starttime="20221127 12:52:19.267" endtime="20221127 12:52:22.935"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221127 12:52:19.266" endtime="20221127 12:52:22.936"/>
</test>
<test id="s1-s6-t3" name="OM Bucket Generator" line="31">
<kw name="Freon OMBG" library="freon">
<arg>prefix=ombg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ombg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221127 12:52:22.942" level="INFO">Running command 'ozone freon ombg  -t 1 -n1 -p ombgpost  2&gt;&amp;1'.</msg>
<msg timestamp="20221127 12:52:26.731" level="INFO">${rc} = 0</msg>
<msg timestamp="20221127 12:52:26.731" level="INFO">${output} = 2022-11-27 12:52:24,507 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-27 12:52:24,684 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221127 12:52:22.940" endtime="20221127 12:52:26.731"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221127 12:52:26.732" level="INFO">2022-11-27 12:52:24,507 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-27 12:52:24,684 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-11-27 12:52:24,684 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-11-27 12:52:24,855 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ombgpost and number-of-tests 1
2022-11-27 12:52:24,917 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-27 12:52:25,922 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-11-27 12:52:26,672 [shutdown-hook-0] INFO metrics: type=TIMER, name=bucket-create, count=1, min=19.789132, max=19.789132, mean=19.789132, stddev=0.0, median=19.789132, p75=19.789132, p95=19.789132, p98=19.789132, p99=19.789132, p999=19.789132, mean_rate=0.979416845885911, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-11-27 12:52:26,672 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2022-11-27 12:52:26,673 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-11-27 12:52:26,673 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20221127 12:52:26.731" endtime="20221127 12:52:26.732"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221127 12:52:26.733" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221127 12:52:26.732" endtime="20221127 12:52:26.733"/>
</kw>
<status status="PASS" starttime="20221127 12:52:22.939" endtime="20221127 12:52:26.733"/>
</kw>
<msg timestamp="20221127 12:52:26.733" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221127 12:52:22.939" endtime="20221127 12:52:26.734"/>
</kw>
<msg timestamp="20221127 12:52:26.734" level="INFO">${result} = 2022-11-27 12:52:24,507 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-27 12:52:24,684 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221127 12:52:22.938" endtime="20221127 12:52:26.734"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221127 12:52:26.734" endtime="20221127 12:52:26.735"/>
</kw>
<status status="PASS" starttime="20221127 12:52:22.937" endtime="20221127 12:52:26.735"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221127 12:52:22.936" endtime="20221127 12:52:26.735"/>
</test>
<doc>Test freon data generation commands</doc>
<status status="PASS" starttime="20221127 12:52:12.868" endtime="20221127 12:52:26.737"/>
</suite>
<suite id="s1-s7" name="Validate" source="/opt/hadoop/smoketest/freon/validate.robot">
<test id="s1-s7-t1" name="Ozone Client Key Validator" line="25">
<kw name="Freon OCKV" library="freon">
<arg>prefix=ockg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221127 12:52:31.710" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p ockgpost  2&gt;&amp;1'.</msg>
<msg timestamp="20221127 12:52:37.406" level="INFO">${rc} = 0</msg>
<msg timestamp="20221127 12:52:37.406" level="INFO">${output} = 2022-11-27 12:52:33,181 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-27 12:52:33,375 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221127 12:52:31.706" endtime="20221127 12:52:37.406"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221127 12:52:37.407" level="INFO">2022-11-27 12:52:33,181 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-27 12:52:33,375 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-11-27 12:52:33,375 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-11-27 12:52:33,555 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpost and number-of-tests 1
2022-11-27 12:52:33,632 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-27 12:52:34,636 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-27 12:52:34,784 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-11-27 12:52:35,637 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-27 12:52:36,637 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-11-27 12:52:37,045 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=31.692334, max=31.692334, mean=31.692334, stddev=0.0, median=31.692334, p75=31.692334, p95=31.692334, p98=31.692334, p99=31.692334, p999=31.692334, mean_rate=0.9700341154596182, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-11-27 12:52:37,046 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2022-11-27 12:52:37,046 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-11-27 12:52:37,046 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20221127 12:52:37.406" endtime="20221127 12:52:37.407"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221127 12:52:37.408" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221127 12:52:37.408" endtime="20221127 12:52:37.408"/>
</kw>
<status status="PASS" starttime="20221127 12:52:31.706" endtime="20221127 12:52:37.409"/>
</kw>
<msg timestamp="20221127 12:52:37.409" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221127 12:52:31.705" endtime="20221127 12:52:37.410"/>
</kw>
<msg timestamp="20221127 12:52:37.410" level="INFO">${result} = 2022-11-27 12:52:33,181 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-27 12:52:33,375 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221127 12:52:31.705" endtime="20221127 12:52:37.410"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221127 12:52:37.410" endtime="20221127 12:52:37.411"/>
</kw>
<status status="PASS" starttime="20221127 12:52:31.703" endtime="20221127 12:52:37.411"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221127 12:52:31.702" endtime="20221127 12:52:37.411"/>
</test>
<doc>Test freon data validation commands</doc>
<status status="PASS" starttime="20221127 12:52:31.655" endtime="20221127 12:52:37.413"/>
</suite>
<suite id="s1-s8" name="Generate-Chunk" source="/opt/hadoop/smoketest/freon/generate-chunk.robot">
<test id="s1-s8-t1" name="DN Chunk Generator" line="25">
<kw name="Freon DCG" library="freon">
<arg>prefix=dcg${PREFIX}</arg>
<arg>n=100</arg>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20221127 12:52:42.299" endtime="20221127 12:52:42.299"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon dcg -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221127 12:52:42.305" level="INFO">Running command 'ozone freon dcg -t 1 -n100 -p dcgpost  2&gt;&amp;1'.</msg>
<msg timestamp="20221127 12:52:49.945" level="INFO">${rc} = 0</msg>
<msg timestamp="20221127 12:52:49.945" level="INFO">${output} = 2022-11-27 12:52:43,831 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-27 12:52:43,984 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221127 12:52:42.301" endtime="20221127 12:52:49.945"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221127 12:52:49.946" level="INFO">2022-11-27 12:52:43,831 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-27 12:52:43,984 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-11-27 12:52:43,984 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-11-27 12:52:44,733 [main] INFO freon.BaseFreonGenerator: Executing test with prefix dcgpost and number-of-tests 100
2022-11-27 12:52:44,772 [Thread-4] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-11-27 12:52:45,335 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-11-27 12:52:45,628 [pool-3-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-11-27 12:52:45,774 [Thread-4] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-11-27 12:52:46,775 [Thread-4] INFO freon.ProgressBar: Progress: 13.00 % (13 out of 100)
2022-11-27 12:52:47,775 [Thread-4] INFO freon.ProgressBar: Progress: 53.00 % (53 out of 100)
2022-11-27 12:52:48,776 [Thread-4] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2022-11-27 12:52:49,573 [shutdown-hook-0] INFO metrics: type=TIMER, name=chunk-write, count=100, min=12.834614, max=804.686514, mean=30.598502195585116, stddev=77.45641944291611, median=21.813464, p75=26.291538, p95=37.667028, p98=40.546276, p99=58.245571, p999=804.686514, mean_rate=24.589924319722705, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-11-27 12:52:49,574 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 5
2022-11-27 12:52:49,574 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-11-27 12:52:49,574 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20221127 12:52:49.945" endtime="20221127 12:52:49.946"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221127 12:52:49.947" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221127 12:52:49.946" endtime="20221127 12:52:49.947"/>
</kw>
<status status="PASS" starttime="20221127 12:52:42.300" endtime="20221127 12:52:49.947"/>
</kw>
<msg timestamp="20221127 12:52:49.947" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221127 12:52:42.300" endtime="20221127 12:52:49.948"/>
</kw>
<msg timestamp="20221127 12:52:49.949" level="INFO">${result} = 2022-11-27 12:52:43,831 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-27 12:52:43,984 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221127 12:52:42.299" endtime="20221127 12:52:49.949"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221127 12:52:49.949" endtime="20221127 12:52:49.949"/>
</kw>
<status status="PASS" starttime="20221127 12:52:42.297" endtime="20221127 12:52:49.949"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221127 12:52:42.296" endtime="20221127 12:52:49.950"/>
</test>
<doc>Test freon chunk generation commands</doc>
<status status="PASS" starttime="20221127 12:52:42.250" endtime="20221127 12:52:49.951"/>
</suite>
<suite id="s1-s9" name="Validate-Chunk" source="/opt/hadoop/smoketest/freon/validate-chunk.robot">
<test id="s1-s9-t1" name="DN Chunk Validator" line="25">
<kw name="Freon DCV" library="freon">
<arg>prefix=dcg${PREFIX}</arg>
<arg>n=100</arg>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20221127 12:52:54.776" endtime="20221127 12:52:54.777"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon dcv -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221127 12:52:54.782" level="INFO">Running command 'ozone freon dcv -t 1 -n100 -p dcgpost  2&gt;&amp;1'.</msg>
<msg timestamp="20221127 12:53:00.213" level="INFO">${rc} = 0</msg>
<msg timestamp="20221127 12:53:00.214" level="INFO">${output} = 2022-11-27 12:52:56,372 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-27 12:52:56,515 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221127 12:52:54.778" endtime="20221127 12:53:00.214"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221127 12:53:00.215" level="INFO">2022-11-27 12:52:56,372 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-27 12:52:56,515 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-11-27 12:52:56,515 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-11-27 12:52:56,696 [main] INFO freon.BaseFreonGenerator: Executing test with prefix dcgpost and number-of-tests 100
2022-11-27 12:52:56,772 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-11-27 12:52:57,285 [main] INFO freon.DatanodeChunkValidator: Using pipeline PipelineID=de6031d7-dae6-4983-88fa-3c06768c8dfa
2022-11-27 12:52:57,780 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-11-27 12:52:57,807 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-11-27 12:52:58,066 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-11-27 12:52:58,781 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-11-27 12:52:59,782 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2022-11-27 12:52:59,849 [shutdown-hook-0] INFO metrics: type=TIMER, name=chunk-validate, count=100, min=1.84903, max=22.862283, mean=3.7205341951669824, stddev=2.9001938932686446, median=2.836647, p75=4.225571, p95=7.348024, p98=9.426258, p99=19.216023, p999=22.862283, mean_rate=92.74726187684476, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-11-27 12:52:59,850 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2022-11-27 12:52:59,850 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-11-27 12:52:59,850 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20221127 12:53:00.214" endtime="20221127 12:53:00.215"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221127 12:53:00.216" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221127 12:53:00.215" endtime="20221127 12:53:00.216"/>
</kw>
<status status="PASS" starttime="20221127 12:52:54.778" endtime="20221127 12:53:00.216"/>
</kw>
<msg timestamp="20221127 12:53:00.216" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221127 12:52:54.777" endtime="20221127 12:53:00.217"/>
</kw>
<msg timestamp="20221127 12:53:00.218" level="INFO">${result} = 2022-11-27 12:52:56,372 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-27 12:52:56,515 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221127 12:52:54.777" endtime="20221127 12:53:00.218"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221127 12:53:00.218" endtime="20221127 12:53:00.218"/>
</kw>
<status status="PASS" starttime="20221127 12:52:54.775" endtime="20221127 12:53:00.219"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221127 12:52:54.774" endtime="20221127 12:53:00.219"/>
</test>
<doc>Test freon chunk validation commands</doc>
<status status="PASS" starttime="20221127 12:52:54.731" endtime="20221127 12:53:00.220"/>
</suite>
<suite id="s1-s10" name="Generate" source="/opt/hadoop/smoketest/freon/generate.robot">
<test id="s1-s10-t1" name="Ozone Client Key Generator" line="25">
<kw name="Freon OCKG" library="freon">
<arg>prefix=ockg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221127 12:49:49.772" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p ockgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20221127 12:49:57.104" level="INFO">${rc} = 0</msg>
<msg timestamp="20221127 12:49:57.104" level="INFO">${output} = 2022-11-27 12:49:51,240 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-27 12:49:51,448 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221127 12:49:49.767" endtime="20221127 12:49:57.104"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221127 12:49:57.106" level="INFO">2022-11-27 12:49:51,240 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-27 12:49:51,448 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-11-27 12:49:51,449 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-11-27 12:49:51,610 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpre and number-of-tests 1
2022-11-27 12:49:51,707 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-27 12:49:52,713 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-27 12:49:52,805 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2022-11-27 12:49:52,933 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false 
2022-11-27 12:49:53,713 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-27 12:49:53,965 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-11-27 12:49:54,279 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-11-27 12:49:54,714 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-27 12:49:55,715 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-27 12:49:56,715 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-11-27 12:49:56,755 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=2774.230338, max=2774.230338, mean=2774.230338, stddev=0.0, median=2774.230338, p75=2774.230338, p95=2774.230338, p98=2774.230338, p99=2774.230338, p999=2774.230338, mean_rate=0.2641768024172981, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-11-27 12:49:56,756 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 5
2022-11-27 12:49:56,756 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-11-27 12:49:56,756 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20221127 12:49:57.105" endtime="20221127 12:49:57.106"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221127 12:49:57.106" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221127 12:49:57.106" endtime="20221127 12:49:57.106"/>
</kw>
<status status="PASS" starttime="20221127 12:49:49.767" endtime="20221127 12:49:57.107"/>
</kw>
<msg timestamp="20221127 12:49:57.107" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221127 12:49:49.767" endtime="20221127 12:49:57.108"/>
</kw>
<msg timestamp="20221127 12:49:57.108" level="INFO">${result} = 2022-11-27 12:49:51,240 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-27 12:49:51,448 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221127 12:49:49.766" endtime="20221127 12:49:57.108"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221127 12:49:57.108" endtime="20221127 12:49:57.109"/>
</kw>
<status status="PASS" starttime="20221127 12:49:49.765" endtime="20221127 12:49:57.109"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221127 12:49:49.764" endtime="20221127 12:49:57.109"/>
</test>
<test id="s1-s10-t2" name="OM Key Generator" line="28">
<kw name="Freon OMKG" library="freon">
<arg>prefix=omkg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon omkg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221127 12:49:57.117" level="INFO">Running command 'ozone freon omkg  -t 1 -n1 -p omkgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20221127 12:50:00.983" level="INFO">${rc} = 0</msg>
<msg timestamp="20221127 12:50:00.983" level="INFO">${output} = 2022-11-27 12:49:58,809 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-27 12:49:58,933 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221127 12:49:57.114" endtime="20221127 12:50:00.983"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221127 12:50:00.984" level="INFO">2022-11-27 12:49:58,809 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-27 12:49:58,933 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-11-27 12:49:58,933 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-11-27 12:49:59,098 [main] INFO freon.BaseFreonGenerator: Executing test with prefix omkgpre and number-of-tests 1
2022-11-27 12:49:59,200 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-27 12:50:00,203 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-11-27 12:50:00,926 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=103.54978, max=103.54978, mean=103.54978, stddev=0.0, median=103.54978, p75=103.54978, p95=103.54978, p98=103.54978, p99=103.54978, p999=103.54978, mean_rate=0.9802103047874351, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-11-27 12:50:00,927 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2022-11-27 12:50:00,927 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-11-27 12:50:00,927 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20221127 12:50:00.983" endtime="20221127 12:50:00.985"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221127 12:50:00.985" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221127 12:50:00.985" endtime="20221127 12:50:00.985"/>
</kw>
<status status="PASS" starttime="20221127 12:49:57.114" endtime="20221127 12:50:00.986"/>
</kw>
<msg timestamp="20221127 12:50:00.986" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221127 12:49:57.113" endtime="20221127 12:50:00.986"/>
</kw>
<msg timestamp="20221127 12:50:00.986" level="INFO">${result} = 2022-11-27 12:49:58,809 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-27 12:49:58,933 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221127 12:49:57.113" endtime="20221127 12:50:00.986"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221127 12:50:00.987" endtime="20221127 12:50:00.987"/>
</kw>
<status status="PASS" starttime="20221127 12:49:57.111" endtime="20221127 12:50:00.987"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221127 12:49:57.110" endtime="20221127 12:50:00.987"/>
</test>
<test id="s1-s10-t3" name="OM Bucket Generator" line="31">
<kw name="Freon OMBG" library="freon">
<arg>prefix=ombg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ombg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221127 12:50:00.994" level="INFO">Running command 'ozone freon ombg  -t 1 -n1 -p ombgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20221127 12:50:05.035" level="INFO">${rc} = 0</msg>
<msg timestamp="20221127 12:50:05.035" level="INFO">${output} = 2022-11-27 12:50:02,715 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-27 12:50:02,918 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221127 12:50:00.992" endtime="20221127 12:50:05.035"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221127 12:50:05.036" level="INFO">2022-11-27 12:50:02,715 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-27 12:50:02,918 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-11-27 12:50:02,919 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-11-27 12:50:03,166 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ombgpre and number-of-tests 1
2022-11-27 12:50:03,247 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-27 12:50:04,249 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-11-27 12:50:04,984 [shutdown-hook-0] INFO metrics: type=TIMER, name=bucket-create, count=1, min=21.11386, max=21.11386, mean=21.11386, stddev=0.0, median=21.11386, p75=21.11386, p95=21.11386, p98=21.11386, p99=21.11386, p999=21.11386, mean_rate=0.9853559434579583, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-11-27 12:50:04,985 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2022-11-27 12:50:04,985 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-11-27 12:50:04,985 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20221127 12:50:05.035" endtime="20221127 12:50:05.036"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221127 12:50:05.037" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221127 12:50:05.036" endtime="20221127 12:50:05.037"/>
</kw>
<status status="PASS" starttime="20221127 12:50:00.991" endtime="20221127 12:50:05.037"/>
</kw>
<msg timestamp="20221127 12:50:05.037" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221127 12:50:00.991" endtime="20221127 12:50:05.038"/>
</kw>
<msg timestamp="20221127 12:50:05.038" level="INFO">${result} = 2022-11-27 12:50:02,715 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-27 12:50:02,918 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221127 12:50:00.990" endtime="20221127 12:50:05.038"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221127 12:50:05.038" endtime="20221127 12:50:05.039"/>
</kw>
<status status="PASS" starttime="20221127 12:50:00.989" endtime="20221127 12:50:05.039"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221127 12:50:00.988" endtime="20221127 12:50:05.039"/>
</test>
<doc>Test freon data generation commands</doc>
<status status="PASS" starttime="20221127 12:49:49.720" endtime="20221127 12:50:05.040"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="79563"/>
</suite>
<statistics>
<total>
<stat pass="14" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="14" fail="0" skip="0" id="s1" name="restart">restart</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Validate">restart.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Generate-Chunk">restart.Generate-Chunk</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3" name="Validate-Chunk">restart.Validate-Chunk</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="Validate">restart.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s5" name="Validate-Chunk">restart.Validate-Chunk</stat>
<stat pass="3" fail="0" skip="0" id="s1-s6" name="Generate">restart.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s7" name="Validate">restart.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s8" name="Generate-Chunk">restart.Generate-Chunk</stat>
<stat pass="1" fail="0" skip="0" id="s1-s9" name="Validate-Chunk">restart.Validate-Chunk</stat>
<stat pass="3" fail="0" skip="0" id="s1-s10" name="Generate">restart.Generate</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
