<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.0.1 (Python 3.8.10 on linux)" generated="20221127 12:45:04.019" rpa="false" schemaversion="3">
<suite id="s1" name="ozones3-haproxy" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-t1" name="Check webui static resources" line="29">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221127 12:44:35.920" endtime="20221127 12:44:35.920"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -s -I http://${SCM}:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221127 12:44:35.925" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20221127 12:44:36.011" level="INFO">${rc} = 0</msg>
<msg timestamp="20221127 12:44:36.011" level="INFO">${output} = HTTP/1.1 200 OK
Date: Sun, 27 Nov 2022 12:44:35 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Sun, 27 Nov 2022 12:13:10 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20221127 12:44:35.921" endtime="20221127 12:44:36.011"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221127 12:44:36.012" level="INFO">HTTP/1.1 200 OK
Date: Sun, 27 Nov 2022 12:44:35 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Sun, 27 Nov 2022 12:13:10 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20221127 12:44:36.011" endtime="20221127 12:44:36.012"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221127 12:44:36.013" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221127 12:44:36.012" endtime="20221127 12:44:36.013"/>
</kw>
<status status="PASS" starttime="20221127 12:44:35.921" endtime="20221127 12:44:36.013"/>
</kw>
<msg timestamp="20221127 12:44:36.013" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221127 12:44:35.921" endtime="20221127 12:44:36.015"/>
</kw>
<msg timestamp="20221127 12:44:36.016" level="INFO">${result} = HTTP/1.1 200 OK
Date: Sun, 27 Nov 2022 12:44:35 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Sun, 27 Nov 2022 12:13:10 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20221127 12:44:35.920" endtime="20221127 12:44:36.016"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221127 12:44:36.016" endtime="20221127 12:44:36.016"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221127 12:44:35.919" endtime="20221127 12:44:36.017"/>
</test>
<test id="s1-t2" name="Basic Freon smoketest" line="34">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221127 12:44:36.018" endtime="20221127 12:44:36.019"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>10</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20221127 12:44:36.019" level="INFO">${random} = nkStChi3eO</msg>
<status status="PASS" starttime="20221127 12:44:36.019" endtime="20221127 12:44:36.019"/>
</kw>
<kw name="Freon OCKG" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221127 12:44:36.025" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p nkStChi3eO  2&gt;&amp;1'.</msg>
<msg timestamp="20221127 12:44:42.411" level="INFO">${rc} = 0</msg>
<msg timestamp="20221127 12:44:42.412" level="INFO">${output} = 2022-11-27 12:44:37,400 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-27 12:44:37,501 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221127 12:44:36.022" endtime="20221127 12:44:42.412"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221127 12:44:42.413" level="INFO">2022-11-27 12:44:37,400 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-27 12:44:37,501 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-11-27 12:44:37,501 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-11-27 12:44:37,664 [main] INFO freon.BaseFreonGenerator: Executing test with prefix nkStChi3eO and number-of-tests 1
2022-11-27 12:44:37,747 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-27 12:44:38,755 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-27 12:44:38,841 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2022-11-27 12:44:38,938 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false 
2022-11-27 12:44:39,755 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-27 12:44:39,816 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-11-27 12:44:40,142 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-11-27 12:44:40,756 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-27 12:44:41,757 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-11-27 12:44:42,051 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=2512.094804, max=2512.094804, mean=2512.094804, stddev=0.0, median=2512.094804, p75=2512.094804, p95=2512.094804, p98=2512.094804, p99=2512.094804, p999=2512.094804, mean_rate=0.3251345341350209, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-11-27 12:44:42,054 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 4
2022-11-27 12:44:42,062 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-11-27 12:44:42,062 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20221127 12:44:42.412" endtime="20221127 12:44:42.413"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221127 12:44:42.414" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221127 12:44:42.413" endtime="20221127 12:44:42.414"/>
</kw>
<status status="PASS" starttime="20221127 12:44:36.022" endtime="20221127 12:44:42.414"/>
</kw>
<msg timestamp="20221127 12:44:42.414" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221127 12:44:36.022" endtime="20221127 12:44:42.415"/>
</kw>
<msg timestamp="20221127 12:44:42.415" level="INFO">${result} = 2022-11-27 12:44:37,400 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-27 12:44:37,501 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221127 12:44:36.021" endtime="20221127 12:44:42.415"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221127 12:44:42.415" endtime="20221127 12:44:42.416"/>
</kw>
<status status="PASS" starttime="20221127 12:44:36.020" endtime="20221127 12:44:42.416"/>
</kw>
<kw name="Freon OCKV" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221127 12:44:42.422" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p nkStChi3eO  2&gt;&amp;1'.</msg>
<msg timestamp="20221127 12:44:48.107" level="INFO">${rc} = 0</msg>
<msg timestamp="20221127 12:44:48.107" level="INFO">${output} = 2022-11-27 12:44:44,033 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-27 12:44:44,158 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221127 12:44:42.419" endtime="20221127 12:44:48.107"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221127 12:44:48.108" level="INFO">2022-11-27 12:44:44,033 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-27 12:44:44,158 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-11-27 12:44:44,158 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-11-27 12:44:44,317 [main] INFO freon.BaseFreonGenerator: Executing test with prefix nkStChi3eO and number-of-tests 1
2022-11-27 12:44:44,391 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-27 12:44:45,393 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-27 12:44:45,803 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-11-27 12:44:46,411 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-11-27 12:44:47,412 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-11-27 12:44:47,747 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=38.333787, max=38.333787, mean=38.333787, stddev=0.0, median=38.333787, p75=38.333787, p95=38.333787, p98=38.333787, p99=38.333787, p999=38.333787, mean_rate=0.950879963002554, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-11-27 12:44:47,748 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2022-11-27 12:44:47,748 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-11-27 12:44:47,748 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20221127 12:44:48.108" endtime="20221127 12:44:48.108"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221127 12:44:48.109" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221127 12:44:48.109" endtime="20221127 12:44:48.109"/>
</kw>
<status status="PASS" starttime="20221127 12:44:42.419" endtime="20221127 12:44:48.109"/>
</kw>
<msg timestamp="20221127 12:44:48.109" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221127 12:44:42.418" endtime="20221127 12:44:48.110"/>
</kw>
<msg timestamp="20221127 12:44:48.110" level="INFO">${result} = 2022-11-27 12:44:44,033 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-11-27 12:44:44,158 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221127 12:44:42.417" endtime="20221127 12:44:48.110"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221127 12:44:48.110" endtime="20221127 12:44:48.111"/>
</kw>
<status status="PASS" starttime="20221127 12:44:42.416" endtime="20221127 12:44:48.111"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221127 12:44:36.017" endtime="20221127 12:44:48.111"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20221127 12:44:35.867" endtime="20221127 12:44:48.113"/>
</suite>
<statistics>
<total>
<stat pass="2" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="2" fail="0" skip="0" id="s1" name="ozones3-haproxy">ozones3-haproxy</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
