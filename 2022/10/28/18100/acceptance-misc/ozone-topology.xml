<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.0 (Python 3.8.10 on linux)" generated="20221028 04:13:45.837" rpa="false" schemaversion="3">
<suite id="s1" name="ozone-topology">
<suite id="s1-s1" name="Cli" source="/opt/hadoop/smoketest/topology/cli.robot">
<test id="s1-s1-t1" name="Run printTopology" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221028 04:09:03.931" level="INFO">Running command 'ozone admin printTopology 2&gt;&amp;1'.</msg>
<msg timestamp="20221028 04:09:07.049" level="INFO">${rc} = 0</msg>
<msg timestamp="20221028 04:09:07.050" level="INFO">${output} = State = HEALTHY
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.6(ozone-topolog...</msg>
<status status="PASS" starttime="20221028 04:09:03.927" endtime="20221028 04:09:07.050"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221028 04:09:07.051" level="INFO">State = HEALTHY
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1</msg>
<status status="PASS" starttime="20221028 04:09:07.050" endtime="20221028 04:09:07.051"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221028 04:09:07.052" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221028 04:09:07.051" endtime="20221028 04:09:07.052"/>
</kw>
<status status="PASS" starttime="20221028 04:09:03.926" endtime="20221028 04:09:07.052"/>
</kw>
<msg timestamp="20221028 04:09:07.052" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221028 04:09:03.926" endtime="20221028 04:09:07.053"/>
</kw>
<msg timestamp="20221028 04:09:07.054" level="INFO">${output} = State = HEALTHY
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.6(ozone-topolog...</msg>
<status status="PASS" starttime="20221028 04:09:03.926" endtime="20221028 04:09:07.054"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
<arg>IN_SERVICE</arg>
<arg>/rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221028 04:09:07.054" endtime="20221028 04:09:07.054"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221028 04:09:03.925" endtime="20221028 04:09:07.054"/>
</test>
<test id="s1-s1-t2" name="Run printTopology -o" line="30">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology -o</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221028 04:09:07.059" level="INFO">Running command 'ozone admin printTopology -o 2&gt;&amp;1'.</msg>
<msg timestamp="20221028 04:09:10.540" level="INFO">${rc} = 0</msg>
<msg timestamp="20221028 04:09:10.540" level="INFO">${output} = State = HEALTHY
Location: /rack1
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net) IN_SERVICE
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net) IN_SERVICE
 10.5.0.5(ozone-topology_data...</msg>
<status status="PASS" starttime="20221028 04:09:07.057" endtime="20221028 04:09:10.540"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221028 04:09:10.541" level="INFO">State = HEALTHY
Location: /rack1
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net) IN_SERVICE
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net) IN_SERVICE
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net) IN_SERVICE
Location: /rack2
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net) IN_SERVICE
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net) IN_SERVICE
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net) IN_SERVICE</msg>
<status status="PASS" starttime="20221028 04:09:10.541" endtime="20221028 04:09:10.541"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221028 04:09:10.542" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221028 04:09:10.542" endtime="20221028 04:09:10.542"/>
</kw>
<status status="PASS" starttime="20221028 04:09:07.056" endtime="20221028 04:09:10.542"/>
</kw>
<msg timestamp="20221028 04:09:10.542" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221028 04:09:07.056" endtime="20221028 04:09:10.543"/>
</kw>
<msg timestamp="20221028 04:09:10.543" level="INFO">${output} = State = HEALTHY
Location: /rack1
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net) IN_SERVICE
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net) IN_SERVICE
 10.5.0.5(ozone-topology_data...</msg>
<status status="PASS" starttime="20221028 04:09:07.056" endtime="20221028 04:09:10.543"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Location: /rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221028 04:09:10.543" endtime="20221028 04:09:10.543"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net) IN_SERVICE</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221028 04:09:10.544" endtime="20221028 04:09:10.546"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221028 04:09:07.055" endtime="20221028 04:09:10.546"/>
</test>
<test id="s1-s1-t3" name="Run printTopology --operational-state IN_SERVICE" line="34">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology --operational-state IN_SERVICE</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221028 04:09:10.557" level="INFO">Running command 'ozone admin printTopology --operational-state IN_SERVICE 2&gt;&amp;1'.</msg>
<msg timestamp="20221028 04:09:14.132" level="INFO">${rc} = 0</msg>
<msg timestamp="20221028 04:09:14.132" level="INFO">${output} = State = HEALTHY
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.6(ozone-topolog...</msg>
<status status="PASS" starttime="20221028 04:09:10.552" endtime="20221028 04:09:14.132"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221028 04:09:14.133" level="INFO">State = HEALTHY
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1</msg>
<status status="PASS" starttime="20221028 04:09:14.133" endtime="20221028 04:09:14.133"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221028 04:09:14.135" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221028 04:09:14.134" endtime="20221028 04:09:14.135"/>
</kw>
<status status="PASS" starttime="20221028 04:09:10.551" endtime="20221028 04:09:14.135"/>
</kw>
<msg timestamp="20221028 04:09:14.135" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221028 04:09:10.551" endtime="20221028 04:09:14.135"/>
</kw>
<msg timestamp="20221028 04:09:14.136" level="INFO">${output} = State = HEALTHY
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.6(ozone-topolog...</msg>
<status status="PASS" starttime="20221028 04:09:10.550" endtime="20221028 04:09:14.136"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
<arg>IN_SERVICE</arg>
<arg>/rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221028 04:09:14.136" endtime="20221028 04:09:14.136"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221028 04:09:10.548" endtime="20221028 04:09:14.136"/>
</test>
<test id="s1-s1-t4" name="Run printTopology --node-state HEALTHY" line="37">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology --node-state HEALTHY</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221028 04:09:14.142" level="INFO">Running command 'ozone admin printTopology --node-state HEALTHY 2&gt;&amp;1'.</msg>
<msg timestamp="20221028 04:09:17.233" level="INFO">${rc} = 0</msg>
<msg timestamp="20221028 04:09:17.233" level="INFO">${output} = State = HEALTHY
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.6(ozone-topolog...</msg>
<status status="PASS" starttime="20221028 04:09:14.140" endtime="20221028 04:09:17.233"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221028 04:09:17.234" level="INFO">State = HEALTHY
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1</msg>
<status status="PASS" starttime="20221028 04:09:17.234" endtime="20221028 04:09:17.235"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221028 04:09:17.235" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221028 04:09:17.235" endtime="20221028 04:09:17.237"/>
</kw>
<status status="PASS" starttime="20221028 04:09:14.139" endtime="20221028 04:09:17.237"/>
</kw>
<msg timestamp="20221028 04:09:17.237" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221028 04:09:14.139" endtime="20221028 04:09:17.237"/>
</kw>
<msg timestamp="20221028 04:09:17.238" level="INFO">${output} = State = HEALTHY
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.6(ozone-topolog...</msg>
<status status="PASS" starttime="20221028 04:09:14.138" endtime="20221028 04:09:17.238"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
<arg>IN_SERVICE</arg>
<arg>/rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221028 04:09:17.238" endtime="20221028 04:09:17.238"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221028 04:09:14.138" endtime="20221028 04:09:17.238"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20221028 04:09:03.872" endtime="20221028 04:09:17.240"/>
</suite>
<suite id="s1-s2" name="Recon" source="/opt/hadoop/smoketest/recon">
<suite id="s1-s2-s1" name="Recon-Api" source="/opt/hadoop/smoketest/recon/recon-api.robot">
<test id="s1-s2-s1-t1" name="Check if Recon picks up OM data" line="61">
<kw name="Freon OCKG" library="freon" type="SETUP">
<arg>n=10</arg>
<arg>args=-s 1025 -v recon -b api</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221028 04:09:22.212" level="INFO">Running command 'ozone freon ockg  -t 1 -n10 -p ockg -s 1025 -v recon -b api 2&gt;&amp;1'.</msg>
<msg timestamp="20221028 04:09:30.222" level="INFO">${rc} = 0</msg>
<msg timestamp="20221028 04:09:30.222" level="INFO">${output} = 2022-10-28 04:09:24,130 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-28 04:09:24,286 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221028 04:09:22.209" endtime="20221028 04:09:30.222"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221028 04:09:30.223" level="INFO">2022-10-28 04:09:24,130 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-28 04:09:24,286 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-10-28 04:09:24,286 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-10-28 04:09:24,484 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockg and number-of-tests 10
2022-10-28 04:09:24,576 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2022-10-28 04:09:25,583 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2022-10-28 04:09:25,685 [main] INFO rpc.RpcClient: Creating Volume: recon, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2022-10-28 04:09:25,729 [main] INFO rpc.RpcClient: Creating Bucket: recon/api, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false 
2022-10-28 04:09:26,285 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-10-28 04:09:26,580 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-10-28 04:09:26,583 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2022-10-28 04:09:27,584 [Thread-5] INFO freon.ProgressBar: Progress: 10.00 % (1 out of 10)
2022-10-28 04:09:28,588 [Thread-5] INFO freon.ProgressBar: Progress: 60.00 % (6 out of 10)
2022-10-28 04:09:29,588 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (10 out of 10)
2022-10-28 04:09:29,873 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=10, min=97.640735, max=1517.886671, mean=367.2932515786754, stddev=440.36260319435326, median=127.694, p75=655.084015, p95=1517.886671, p98=1517.886671, p99=1517.886671, p999=1517.886671, mean_rate=2.4389998681823006, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-10-28 04:09:29,873 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 5
2022-10-28 04:09:29,874 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-10-28 04:09:29,874 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 10</msg>
<status status="PASS" starttime="20221028 04:09:30.223" endtime="20221028 04:09:30.223"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221028 04:09:30.224" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221028 04:09:30.224" endtime="20221028 04:09:30.224"/>
</kw>
<status status="PASS" starttime="20221028 04:09:22.208" endtime="20221028 04:09:30.224"/>
</kw>
<msg timestamp="20221028 04:09:30.224" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221028 04:09:22.208" endtime="20221028 04:09:30.226"/>
</kw>
<msg timestamp="20221028 04:09:30.226" level="INFO">${result} = 2022-10-28 04:09:24,130 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-28 04:09:24,286 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221028 04:09:22.207" endtime="20221028 04:09:30.226"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221028 04:09:30.226" endtime="20221028 04:09:30.227"/>
</kw>
<status status="PASS" starttime="20221028 04:09:22.207" endtime="20221028 04:09:30.227"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Check if Recon picks up container from OM</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221028 04:09:30.228" endtime="20221028 04:09:30.228"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221028 04:09:30.232" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20221028 04:09:30.434" level="INFO">${rc} = 0</msg>
<msg timestamp="20221028 04:09:30.434" level="INFO">${output} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221028 04:09:30.230" endtime="20221028 04:09:30.434"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221028 04:09:30.435" level="INFO">{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221028 04:09:30.434" endtime="20221028 04:09:30.435"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221028 04:09:30.436" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221028 04:09:30.436" endtime="20221028 04:09:30.436"/>
</kw>
<status status="PASS" starttime="20221028 04:09:30.229" endtime="20221028 04:09:30.436"/>
</kw>
<msg timestamp="20221028 04:09:30.436" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221028 04:09:30.229" endtime="20221028 04:09:30.437"/>
</kw>
<msg timestamp="20221028 04:09:30.437" level="INFO">${result} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221028 04:09:30.228" endtime="20221028 04:09:30.437"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221028 04:09:30.438" endtime="20221028 04:09:30.438"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221028 04:09:30.444" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20221028 04:09:30.474" level="INFO">${rc} = 0</msg>
<msg timestamp="20221028 04:09:30.475" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221028 04:09:30.442" endtime="20221028 04:09:30.475"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221028 04:09:30.476" level="INFO">[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221028 04:09:30.475" endtime="20221028 04:09:30.476"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221028 04:09:30.476" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221028 04:09:30.476" endtime="20221028 04:09:30.477"/>
</kw>
<status status="PASS" starttime="20221028 04:09:30.442" endtime="20221028 04:09:30.477"/>
</kw>
<msg timestamp="20221028 04:09:30.477" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221028 04:09:30.439" endtime="20221028 04:09:30.477"/>
</kw>
<msg timestamp="20221028 04:09:30.478" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221028 04:09:30.438" endtime="20221028 04:09:30.478"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20221028 04:09:30.478" level="FAIL">'[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20221028 04:09:30.478" endtime="20221028 04:09:30.479"/>
</kw>
<status status="FAIL" starttime="20221028 04:09:30.227" endtime="20221028 04:09:30.479"/>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221028 04:09:40.481" endtime="20221028 04:09:40.481"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221028 04:09:40.486" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20221028 04:09:40.502" level="INFO">${rc} = 0</msg>
<msg timestamp="20221028 04:09:40.502" level="INFO">${output} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221028 04:09:40.482" endtime="20221028 04:09:40.502"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221028 04:09:40.503" level="INFO">{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221028 04:09:40.503" endtime="20221028 04:09:40.503"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221028 04:09:40.504" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221028 04:09:40.504" endtime="20221028 04:09:40.504"/>
</kw>
<status status="PASS" starttime="20221028 04:09:40.482" endtime="20221028 04:09:40.505"/>
</kw>
<msg timestamp="20221028 04:09:40.505" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221028 04:09:40.482" endtime="20221028 04:09:40.505"/>
</kw>
<msg timestamp="20221028 04:09:40.505" level="INFO">${result} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221028 04:09:40.481" endtime="20221028 04:09:40.505"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221028 04:09:40.506" endtime="20221028 04:09:40.506"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221028 04:09:40.509" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20221028 04:09:40.525" level="INFO">${rc} = 0</msg>
<msg timestamp="20221028 04:09:40.525" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221028 04:09:40.507" endtime="20221028 04:09:40.525"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221028 04:09:40.526" level="INFO">[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221028 04:09:40.526" endtime="20221028 04:09:40.526"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221028 04:09:40.527" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221028 04:09:40.527" endtime="20221028 04:09:40.527"/>
</kw>
<status status="PASS" starttime="20221028 04:09:40.507" endtime="20221028 04:09:40.527"/>
</kw>
<msg timestamp="20221028 04:09:40.527" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221028 04:09:40.507" endtime="20221028 04:09:40.528"/>
</kw>
<msg timestamp="20221028 04:09:40.528" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221028 04:09:40.506" endtime="20221028 04:09:40.528"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20221028 04:09:40.529" level="FAIL">'[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20221028 04:09:40.528" endtime="20221028 04:09:40.529"/>
</kw>
<status status="FAIL" starttime="20221028 04:09:40.480" endtime="20221028 04:09:40.530"/>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221028 04:09:50.531" endtime="20221028 04:09:50.531"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221028 04:09:50.535" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20221028 04:09:50.550" level="INFO">${rc} = 0</msg>
<msg timestamp="20221028 04:09:50.550" level="INFO">${output} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221028 04:09:50.533" endtime="20221028 04:09:50.550"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221028 04:09:50.551" level="INFO">{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221028 04:09:50.550" endtime="20221028 04:09:50.551"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221028 04:09:50.552" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221028 04:09:50.552" endtime="20221028 04:09:50.552"/>
</kw>
<status status="PASS" starttime="20221028 04:09:50.532" endtime="20221028 04:09:50.553"/>
</kw>
<msg timestamp="20221028 04:09:50.553" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221028 04:09:50.532" endtime="20221028 04:09:50.553"/>
</kw>
<msg timestamp="20221028 04:09:50.554" level="INFO">${result} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221028 04:09:50.532" endtime="20221028 04:09:50.554"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221028 04:09:50.554" endtime="20221028 04:09:50.554"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221028 04:09:50.558" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20221028 04:09:50.572" level="INFO">${rc} = 0</msg>
<msg timestamp="20221028 04:09:50.573" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221028 04:09:50.556" endtime="20221028 04:09:50.573"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221028 04:09:50.574" level="INFO">[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221028 04:09:50.573" endtime="20221028 04:09:50.574"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221028 04:09:50.574" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221028 04:09:50.574" endtime="20221028 04:09:50.574"/>
</kw>
<status status="PASS" starttime="20221028 04:09:50.555" endtime="20221028 04:09:50.575"/>
</kw>
<msg timestamp="20221028 04:09:50.575" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221028 04:09:50.555" endtime="20221028 04:09:50.575"/>
</kw>
<msg timestamp="20221028 04:09:50.575" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221028 04:09:50.554" endtime="20221028 04:09:50.575"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20221028 04:09:50.577" level="FAIL">'[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20221028 04:09:50.576" endtime="20221028 04:09:50.577"/>
</kw>
<status status="FAIL" starttime="20221028 04:09:50.530" endtime="20221028 04:09:50.578"/>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221028 04:10:00.579" endtime="20221028 04:10:00.579"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221028 04:10:00.583" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20221028 04:10:00.598" level="INFO">${rc} = 0</msg>
<msg timestamp="20221028 04:10:00.598" level="INFO">${output} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221028 04:10:00.580" endtime="20221028 04:10:00.598"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221028 04:10:00.601" level="INFO">{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221028 04:10:00.601" endtime="20221028 04:10:00.602"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221028 04:10:00.602" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221028 04:10:00.602" endtime="20221028 04:10:00.602"/>
</kw>
<status status="PASS" starttime="20221028 04:10:00.580" endtime="20221028 04:10:00.602"/>
</kw>
<msg timestamp="20221028 04:10:00.603" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221028 04:10:00.580" endtime="20221028 04:10:00.603"/>
</kw>
<msg timestamp="20221028 04:10:00.604" level="INFO">${result} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221028 04:10:00.579" endtime="20221028 04:10:00.604"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221028 04:10:00.604" endtime="20221028 04:10:00.604"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221028 04:10:00.608" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20221028 04:10:00.623" level="INFO">${rc} = 0</msg>
<msg timestamp="20221028 04:10:00.623" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221028 04:10:00.606" endtime="20221028 04:10:00.623"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221028 04:10:00.625" level="INFO">[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221028 04:10:00.624" endtime="20221028 04:10:00.625"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221028 04:10:00.625" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221028 04:10:00.625" endtime="20221028 04:10:00.625"/>
</kw>
<status status="PASS" starttime="20221028 04:10:00.605" endtime="20221028 04:10:00.626"/>
</kw>
<msg timestamp="20221028 04:10:00.626" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221028 04:10:00.605" endtime="20221028 04:10:00.626"/>
</kw>
<msg timestamp="20221028 04:10:00.627" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221028 04:10:00.604" endtime="20221028 04:10:00.627"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20221028 04:10:00.628" level="FAIL">'[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20221028 04:10:00.627" endtime="20221028 04:10:00.628"/>
</kw>
<status status="FAIL" starttime="20221028 04:10:00.578" endtime="20221028 04:10:00.629"/>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221028 04:10:10.630" endtime="20221028 04:10:10.631"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221028 04:10:10.634" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20221028 04:10:10.651" level="INFO">${rc} = 0</msg>
<msg timestamp="20221028 04:10:10.651" level="INFO">${output} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221028 04:10:10.632" endtime="20221028 04:10:10.651"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221028 04:10:10.653" level="INFO">{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221028 04:10:10.652" endtime="20221028 04:10:10.653"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221028 04:10:10.654" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221028 04:10:10.653" endtime="20221028 04:10:10.654"/>
</kw>
<status status="PASS" starttime="20221028 04:10:10.632" endtime="20221028 04:10:10.654"/>
</kw>
<msg timestamp="20221028 04:10:10.654" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221028 04:10:10.631" endtime="20221028 04:10:10.655"/>
</kw>
<msg timestamp="20221028 04:10:10.655" level="INFO">${result} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221028 04:10:10.631" endtime="20221028 04:10:10.655"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221028 04:10:10.655" endtime="20221028 04:10:10.655"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221028 04:10:10.659" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20221028 04:10:10.676" level="INFO">${rc} = 0</msg>
<msg timestamp="20221028 04:10:10.676" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221028 04:10:10.657" endtime="20221028 04:10:10.676"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221028 04:10:10.677" level="INFO">[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221028 04:10:10.676" endtime="20221028 04:10:10.677"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221028 04:10:10.678" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221028 04:10:10.677" endtime="20221028 04:10:10.678"/>
</kw>
<status status="PASS" starttime="20221028 04:10:10.656" endtime="20221028 04:10:10.678"/>
</kw>
<msg timestamp="20221028 04:10:10.678" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221028 04:10:10.656" endtime="20221028 04:10:10.679"/>
</kw>
<msg timestamp="20221028 04:10:10.679" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221028 04:10:10.655" endtime="20221028 04:10:10.679"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20221028 04:10:10.680" level="FAIL">'[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20221028 04:10:10.679" endtime="20221028 04:10:10.680"/>
</kw>
<status status="FAIL" starttime="20221028 04:10:10.629" endtime="20221028 04:10:10.680"/>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221028 04:10:20.681" endtime="20221028 04:10:20.682"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221028 04:10:20.686" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20221028 04:10:20.702" level="INFO">${rc} = 0</msg>
<msg timestamp="20221028 04:10:20.702" level="INFO">${output} = {"data":{"totalCount":3,"containers":[{"ContainerID":1,"NumberOfKeys":3},{"ContainerID":2,"NumberOfKeys":6},{"ContainerID":3,"NumberOfKeys":2}]}}</msg>
<status status="PASS" starttime="20221028 04:10:20.683" endtime="20221028 04:10:20.702"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221028 04:10:20.703" level="INFO">{"data":{"totalCount":3,"containers":[{"ContainerID":1,"NumberOfKeys":3},{"ContainerID":2,"NumberOfKeys":6},{"ContainerID":3,"NumberOfKeys":2}]}}</msg>
<status status="PASS" starttime="20221028 04:10:20.703" endtime="20221028 04:10:20.703"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221028 04:10:20.704" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221028 04:10:20.704" endtime="20221028 04:10:20.704"/>
</kw>
<status status="PASS" starttime="20221028 04:10:20.683" endtime="20221028 04:10:20.705"/>
</kw>
<msg timestamp="20221028 04:10:20.705" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221028 04:10:20.682" endtime="20221028 04:10:20.705"/>
</kw>
<msg timestamp="20221028 04:10:20.705" level="INFO">${result} = {"data":{"totalCount":3,"containers":[{"ContainerID":1,"NumberOfKeys":3},{"ContainerID":2,"NumberOfKeys":6},{"ContainerID":3,"NumberOfKeys":2}]}}</msg>
<status status="PASS" starttime="20221028 04:10:20.682" endtime="20221028 04:10:20.705"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221028 04:10:20.706" endtime="20221028 04:10:20.706"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221028 04:10:20.710" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20221028 04:10:20.725" level="INFO">${rc} = 0</msg>
<msg timestamp="20221028 04:10:20.725" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1},{"volume":"recon","bucket":"api","fileSize":2048,"count":10}]</msg>
<status status="PASS" starttime="20221028 04:10:20.707" endtime="20221028 04:10:20.725"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221028 04:10:20.726" level="INFO">[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1},{"volume":"recon","bucket":"api","fileSize":2048,"count":10}]</msg>
<status status="PASS" starttime="20221028 04:10:20.725" endtime="20221028 04:10:20.726"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221028 04:10:20.726" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221028 04:10:20.726" endtime="20221028 04:10:20.726"/>
</kw>
<status status="PASS" starttime="20221028 04:10:20.707" endtime="20221028 04:10:20.727"/>
</kw>
<msg timestamp="20221028 04:10:20.727" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221028 04:10:20.707" endtime="20221028 04:10:20.727"/>
</kw>
<msg timestamp="20221028 04:10:20.727" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1},{"volume":"recon","bucket":"api","fileSize":2048,"count":10}]</msg>
<status status="PASS" starttime="20221028 04:10:20.706" endtime="20221028 04:10:20.728"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221028 04:10:20.728" endtime="20221028 04:10:20.728"/>
</kw>
<status status="PASS" starttime="20221028 04:10:20.681" endtime="20221028 04:10:20.728"/>
</kw>
<status status="PASS" starttime="20221028 04:09:30.227" endtime="20221028 04:10:20.728"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221028 04:09:22.206" endtime="20221028 04:10:20.729"/>
</test>
<test id="s1-s2-s1-t2" name="Check if Recon picks up DN heartbeats" line="65">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/datanodes</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221028 04:10:20.734" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/datanodes 2&gt;&amp;1'.</msg>
<msg timestamp="20221028 04:10:20.768" level="INFO">${rc} = 0</msg>
<msg timestamp="20221028 04:10:20.768" level="INFO">${output} = {"totalCount":6,"datanodes":[{"uuid":"c65d711e-0748-4fd3-917b-feb5e6f23cd4","hostname":"ozone-topology_datanode_3_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1666930...</msg>
<status status="PASS" starttime="20221028 04:10:20.732" endtime="20221028 04:10:20.768"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221028 04:10:20.769" level="INFO">{"totalCount":6,"datanodes":[{"uuid":"c65d711e-0748-4fd3-917b-feb5e6f23cd4","hostname":"ozone-topology_datanode_3_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1666930197502,"storageReport":{"capacity":89297309696,"used":22536,"remaining":30406422528},"pipelines":[{"pipelineID":"49cbe45d-ffc7-4190-bae0-01bbd8e538bf","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net"},{"pipelineID":"5e6484fa-59d8-4b91-8073-d21da304476d","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net"},{"pipelineID":"314c5f4d-451d-446e-90ad-1f3df71e5988","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net"}],"containers":2,"openContainers":2,"leaderCount":2,"version":"1.3.0-SNAPSHOT","setupTime":1666930052402,"revision":"30d1a4e359de6cf5d1393a2a922a1a04f5ff6a52","buildDate":"2022-10-28T03:43Z","layoutVersion":4,"networkLocation":"/rack1"},{"uuid":"b18b5089-86c4-4d2f-bad4-5ace56355f20","hostname":"ozone-topology_datanode_5_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1666930197602,"storageReport":{"capacity":89297309696,"used":14336,"remaining":30450499584},"pipelines":[{"pipelineID":"5e6484fa-59d8-4b91-8073-d21da304476d","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net"},{"pipelineID":"92eb9485-bfb5-452e-b6d0-1565b293e877","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net"},{"pipelineID":"314c5f4d-451d-446e-90ad-1f3df71e5988","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net"}],"containers":2,"openContainers":2,"leaderCount":2,"version":"1.3.0-SNAPSHOT","setupTime":1666930053401,"revision":"30d1a4e359de6cf5d1393a2a922a1a04f5ff6a52","buildDate":"2022-10-28T03:43Z","layoutVersion":4,"networkLocation":"/rack2"},{"uuid":"700de315-2798-43fd-ade2-3ba6b4298828","hostname":"ozone-topology_datanode_2_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1666930198840,"storageReport":{"capacity":89297309696,"used":18436,"remaining":30406422528},"pipelines":[{"pipelineID":"314c5f4d-451d-446e-90ad-1f3df71e5988","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net"},{"pipelineID":"c51e3150-fbd5-4df4-9429-e210e3d9ba46","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net"},{"pipelineID":"f83d1afc-c88e-45e2-ae25-1ff9dfda36c2","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net"}],"containers":2,"openContainers":2,"leaderCount":2,"version":"1.3.0-SNAPSHOT","setupTime":1666930054517,"revision":"30d1a4e359de6cf5d1393a2a922a1a04f5ff6a52","buildDate":"2022-10-28T03:43Z","layoutVersion":4,"networkLocation":"/rack1"},{"uuid":"eac9a5a7-4191-4f35-8d56-de94406cdebe","hostname":"ozone-topology_datanode_4_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1666930198786,"storageReport":{"capacity":89297309696,"used":16392,"remaining":30406422528},"pipelines":[{"pipelineID":"5e6484fa-59d8-4b91-8073-d21da304476d","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net"},{"pipelineID":"f83d1afc-c88e-45e2-ae25-1ff9dfda36c2","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net"},{"pipelineID":"a8e7f094-42cf-4194-82d6-a1b35fb2c8d4","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net"}],"containers":2,"openContainers":2,"leaderCount":1,"version":"1.3.0-SNAPSHOT","setupTime":1666930053187,"revision":"30d1a4e359de6cf5d1393a2a922a1a04f5ff6a52","buildDate":"2022-10-28T03:43Z","layoutVersion":4,"networkLocation":"/rack2"},{"uuid":"26b5afbf-3990-4c77-a453-bc68bf2a2356","hostname":"ozone-topology_datanode_1_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1666930199072,"storageReport":{"capacity":89297309696,"used":4096,"remaining":30450626560},"pipelines":[{"pipelineID":"bce3b147-c60b-47fc-87be-da88fd5fd172","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net"},{"pipelineID":"f83d1afc-c88e-45e2-ae25-1ff9dfda36c2","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net"}],"containers":1,"openContainers":1,"leaderCount":1,"version":"1.3.0-SNAPSHOT","setupTime":1666930054125,"revision":"30d1a4e359de6cf5d1393a2a922a1a04f5ff6a52","buildDate":"2022-10-28T03:43Z","layoutVersion":4,"networkLocation":"/rack1"},{"uuid":"d0c7aec0-9a0b-4a26-bbef-afee4129da7c","hostname":"ozone-topology_datanode_6_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1666930200121,"storageReport":{"capacity":89297309696,"used":4096,"remaining":30406422528},"pipelines":[{"pipelineID":"a59818ba-da99-40fa-b335-b4be7155e498","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net"}],"containers":0,"openContainers":0,"leaderCount":1,"version":"1.3.0-SNAPSHOT","setupTime":1666930054175,"revision":"30d1a4e359de6cf5d1393a2a922a1a04f5ff6a52","buildDate":"2022-10-28T03:43Z","layoutVersion":4,"networkLocation":"/rack2"}]}</msg>
<status status="PASS" starttime="20221028 04:10:20.768" endtime="20221028 04:10:20.769"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221028 04:10:20.770" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221028 04:10:20.769" endtime="20221028 04:10:20.770"/>
</kw>
<status status="PASS" starttime="20221028 04:10:20.731" endtime="20221028 04:10:20.771"/>
</kw>
<msg timestamp="20221028 04:10:20.771" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221028 04:10:20.731" endtime="20221028 04:10:20.772"/>
</kw>
<msg timestamp="20221028 04:10:20.772" level="INFO">${result} = {"totalCount":6,"datanodes":[{"uuid":"c65d711e-0748-4fd3-917b-feb5e6f23cd4","hostname":"ozone-topology_datanode_3_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1666930...</msg>
<status status="PASS" starttime="20221028 04:10:20.730" endtime="20221028 04:10:20.772"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanodes</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221028 04:10:20.772" endtime="20221028 04:10:20.773"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221028 04:10:20.773" endtime="20221028 04:10:20.773"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221028 04:10:20.773" endtime="20221028 04:10:20.774"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221028 04:10:20.774" endtime="20221028 04:10:20.774"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/pipelines</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221028 04:10:20.778" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/pipelines 2&gt;&amp;1'.</msg>
<msg timestamp="20221028 04:10:20.837" level="INFO">${rc} = 0</msg>
<msg timestamp="20221028 04:10:20.837" level="INFO">${output} = {"totalCount":9,"pipelines":[{"pipelineId":"49cbe45d-ffc7-4190-bae0-01bbd8e538bf","status":"OPEN","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net","datanodes":["ozone-topology_datanode_3_...</msg>
<status status="PASS" starttime="20221028 04:10:20.776" endtime="20221028 04:10:20.837"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221028 04:10:20.839" level="INFO">{"totalCount":9,"pipelines":[{"pipelineId":"49cbe45d-ffc7-4190-bae0-01bbd8e538bf","status":"OPEN","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net","datanodes":["ozone-topology_datanode_3_1.ozone-topology_net"],"lastLeaderElection":0,"duration":121415,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"5e6484fa-59d8-4b91-8073-d21da304476d","status":"OPEN","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net","datanodes":["ozone-topology_datanode_4_1.ozone-topology_net","ozone-topology_datanode_3_1.ozone-topology_net","ozone-topology_datanode_5_1.ozone-topology_net"],"lastLeaderElection":0,"duration":121354,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"THREE","containers":1},{"pipelineId":"92eb9485-bfb5-452e-b6d0-1565b293e877","status":"OPEN","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net","datanodes":["ozone-topology_datanode_5_1.ozone-topology_net"],"lastLeaderElection":0,"duration":121577,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"314c5f4d-451d-446e-90ad-1f3df71e5988","status":"OPEN","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net","datanodes":["ozone-topology_datanode_3_1.ozone-topology_net","ozone-topology_datanode_5_1.ozone-topology_net","ozone-topology_datanode_2_1.ozone-topology_net"],"lastLeaderElection":0,"duration":121379,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"THREE","containers":1},{"pipelineId":"a59818ba-da99-40fa-b335-b4be7155e498","status":"OPEN","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net","datanodes":["ozone-topology_datanode_6_1.ozone-topology_net"],"lastLeaderElection":0,"duration":120521,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"bce3b147-c60b-47fc-87be-da88fd5fd172","status":"OPEN","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net","datanodes":["ozone-topology_datanode_1_1.ozone-topology_net"],"lastLeaderElection":0,"duration":121010,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"c51e3150-fbd5-4df4-9429-e210e3d9ba46","status":"OPEN","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net","datanodes":["ozone-topology_datanode_2_1.ozone-topology_net"],"lastLeaderElection":0,"duration":122091,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"f83d1afc-c88e-45e2-ae25-1ff9dfda36c2","status":"OPEN","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net","datanodes":["ozone-topology_datanode_1_1.ozone-topology_net","ozone-topology_datanode_4_1.ozone-topology_net","ozone-topology_datanode_2_1.ozone-topology_net"],"lastLeaderElection":0,"duration":121001,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"THREE","containers":1},{"pipelineId":"a8e7f094-42cf-4194-82d6-a1b35fb2c8d4","status":"OPEN","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net","datanodes":["ozone-topology_datanode_4_1.ozone-topology_net"],"lastLeaderElection":0,"duration":121540,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0}]}</msg>
<status status="PASS" starttime="20221028 04:10:20.838" endtime="20221028 04:10:20.839"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221028 04:10:20.839" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221028 04:10:20.839" endtime="20221028 04:10:20.840"/>
</kw>
<status status="PASS" starttime="20221028 04:10:20.775" endtime="20221028 04:10:20.840"/>
</kw>
<msg timestamp="20221028 04:10:20.840" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221028 04:10:20.775" endtime="20221028 04:10:20.841"/>
</kw>
<msg timestamp="20221028 04:10:20.841" level="INFO">${result} = {"totalCount":9,"pipelines":[{"pipelineId":"49cbe45d-ffc7-4190-bae0-01bbd8e538bf","status":"OPEN","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net","datanodes":["ozone-topology_datanode_3_...</msg>
<status status="PASS" starttime="20221028 04:10:20.774" endtime="20221028 04:10:20.841"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>pipelines</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221028 04:10:20.841" endtime="20221028 04:10:20.841"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221028 04:10:20.841" endtime="20221028 04:10:20.842"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OPEN</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221028 04:10:20.842" endtime="20221028 04:10:20.842"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221028 04:10:20.842" endtime="20221028 04:10:20.843"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221028 04:10:20.843" endtime="20221028 04:10:20.843"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221028 04:10:20.843" endtime="20221028 04:10:20.844"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/clusterState</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221028 04:10:20.850" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20221028 04:10:20.874" level="INFO">${rc} = 0</msg>
<msg timestamp="20221028 04:10:20.874" level="INFO">${output} = {"pipelines":9,"totalDatanodes":6,"healthyDatanodes":6,"storageReport":{"capacity":535783858176,"used":79892,"remaining":182526816256},"containers":3,"volumes":3,"buckets":2,"keys":11}</msg>
<status status="PASS" starttime="20221028 04:10:20.848" endtime="20221028 04:10:20.874"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221028 04:10:20.875" level="INFO">{"pipelines":9,"totalDatanodes":6,"healthyDatanodes":6,"storageReport":{"capacity":535783858176,"used":79892,"remaining":182526816256},"containers":3,"volumes":3,"buckets":2,"keys":11}</msg>
<status status="PASS" starttime="20221028 04:10:20.875" endtime="20221028 04:10:20.876"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221028 04:10:20.876" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221028 04:10:20.876" endtime="20221028 04:10:20.876"/>
</kw>
<status status="PASS" starttime="20221028 04:10:20.847" endtime="20221028 04:10:20.877"/>
</kw>
<msg timestamp="20221028 04:10:20.877" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221028 04:10:20.847" endtime="20221028 04:10:20.877"/>
</kw>
<msg timestamp="20221028 04:10:20.877" level="INFO">${result} = {"pipelines":9,"totalDatanodes":6,"healthyDatanodes":6,"storageReport":{"capacity":535783858176,"used":79892,"remaining":182526816256},"containers":3,"volumes":3,"buckets":2,"keys":11}</msg>
<status status="PASS" starttime="20221028 04:10:20.844" endtime="20221028 04:10:20.877"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"totalDatanodes\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221028 04:10:20.877" endtime="20221028 04:10:20.878"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"healthyDatanodes\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221028 04:10:20.878" endtime="20221028 04:10:20.878"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"pipelines\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221028 04:10:20.878" endtime="20221028 04:10:20.879"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers/1/replicaHistory</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221028 04:10:20.883" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers/1/replicaHistory 2&gt;&amp;1'.</msg>
<msg timestamp="20221028 04:10:20.901" level="INFO">${rc} = 0</msg>
<msg timestamp="20221028 04:10:20.901" level="INFO">${output} = [{"containerId":1,"datanodeUuid":"c65d711e-0748-4fd3-917b-feb5e6f23cd4","datanodeHost":"ozone-topology_datanode_3_1.ozone-topology_net","firstSeenTime":1666930129590,"lastSeenTime":1666930129590,"last...</msg>
<status status="PASS" starttime="20221028 04:10:20.880" endtime="20221028 04:10:20.901"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221028 04:10:20.902" level="INFO">[{"containerId":1,"datanodeUuid":"c65d711e-0748-4fd3-917b-feb5e6f23cd4","datanodeHost":"ozone-topology_datanode_3_1.ozone-topology_net","firstSeenTime":1666930129590,"lastSeenTime":1666930129590,"lastBcsId":0},{"containerId":1,"datanodeUuid":"b18b5089-86c4-4d2f-bad4-5ace56355f20","datanodeHost":"ozone-topology_datanode_5_1.ozone-topology_net","firstSeenTime":1666930129722,"lastSeenTime":1666930129722,"lastBcsId":0},{"containerId":1,"datanodeUuid":"700de315-2798-43fd-ade2-3ba6b4298828","datanodeHost":"ozone-topology_datanode_2_1.ozone-topology_net","firstSeenTime":1666930129780,"lastSeenTime":1666930131173,"lastBcsId":0}]</msg>
<status status="PASS" starttime="20221028 04:10:20.901" endtime="20221028 04:10:20.902"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221028 04:10:20.903" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221028 04:10:20.902" endtime="20221028 04:10:20.903"/>
</kw>
<status status="PASS" starttime="20221028 04:10:20.880" endtime="20221028 04:10:20.903"/>
</kw>
<msg timestamp="20221028 04:10:20.903" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221028 04:10:20.879" endtime="20221028 04:10:20.904"/>
</kw>
<msg timestamp="20221028 04:10:20.904" level="INFO">${result} = [{"containerId":1,"datanodeUuid":"c65d711e-0748-4fd3-917b-feb5e6f23cd4","datanodeHost":"ozone-topology_datanode_3_1.ozone-topology_net","firstSeenTime":1666930129590,"lastSeenTime":1666930129590,"last...</msg>
<status status="PASS" starttime="20221028 04:10:20.879" endtime="20221028 04:10:20.904"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"containerId\":1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221028 04:10:20.904" endtime="20221028 04:10:20.904"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221028 04:10:20.730" endtime="20221028 04:10:20.906"/>
</test>
<test id="s1-s2-s1-t3" name="Check if Recon Web UI is up" line="88">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221028 04:10:20.908" endtime="20221028 04:10:20.909"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${ENDPOINT_URL}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221028 04:10:20.913" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20221028 04:10:20.931" level="INFO">${rc} = 0</msg>
<msg timestamp="20221028 04:10:20.931" level="INFO">${output} = &lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" ...</msg>
<status status="PASS" starttime="20221028 04:10:20.910" endtime="20221028 04:10:20.931"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221028 04:10:20.933" level="INFO">&lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" content="#000000"/&gt;&lt;link rel="manifest" href="/manifest.json"/&gt;&lt;link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto:300,400,500"/&gt;&lt;title&gt;Ozone Recon&lt;/title&gt;&lt;link href="/static/css/2.7465223f.chunk.css" rel="stylesheet"&gt;&lt;link href="/static/css/main.0c211d12.chunk.css" rel="stylesheet"&gt;&lt;/head&gt;&lt;body&gt;&lt;noscript&gt;You need to enable JavaScript to run this app.&lt;/noscript&gt;&lt;div id="root"&gt;&lt;/div&gt;&lt;script&gt;!function(e){function r(r){for(var n,l,f=r[0],i=r[1],a=r[2],p=0,s=[];p&lt;f.length;p++)l=f[p],Object.prototype.hasOwnProperty.call(o,l)&amp;&amp;o[l]&amp;&amp;s.push(o[l][0]),o[l]=0;for(n in i)Object.prototype.hasOwnProperty.call(i,n)&amp;&amp;(e[n]=i[n]);for(c&amp;&amp;c(r);s.length;)s.shift()();return u.push.apply(u,a||[]),t()}function t(){for(var e,r=0;r&lt;u.length;r++){for(var t=u[r],n=!0,f=1;f&lt;t.length;f++){var i=t[f];0!==o[i]&amp;&amp;(n=!1)}n&amp;&amp;(u.splice(r--,1),e=l(l.s=t[0]))}return e}var n={},o={1:0},u=[];function l(r){if(n[r])return n[r].exports;var t=n[r]={i:r,l:!1,exports:{}};return e[r].call(t.exports,t,t.exports,l),t.l=!0,t.exports}l.m=e,l.c=n,l.d=function(e,r,t){l.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:t})},l.r=function(e){"undefined"!=typeof Symbol&amp;&amp;Symbol.toStringTag&amp;&amp;Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},l.t=function(e,r){if(1&amp;r&amp;&amp;(e=l(e)),8&amp;r)return e;if(4&amp;r&amp;&amp;"object"==typeof e&amp;&amp;e&amp;&amp;e.__esModule)return e;var t=Object.create(null);if(l.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&amp;r&amp;&amp;"string"!=typeof e)for(var n in e)l.d(t,n,function(r){return e[r]}.bind(null,n));return t},l.n=function(e){var r=e&amp;&amp;e.__esModule?function(){return e.default}:function(){return e};return l.d(r,"a",r),r},l.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},l.p="/";var f=this["webpackJsonpozone-recon"]=this["webpackJsonpozone-recon"]||[],i=f.push.bind(f);f.push=r,f=f.slice();for(var a=0;a&lt;f.length;a++)r(f[a]);var c=i;t()}([])&lt;/script&gt;&lt;script src="/static/js/2.b419f50e.chunk.js"&gt;&lt;/script&gt;&lt;script src="/static/js/main.a64cbf5a.chunk.js"&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;</msg>
<status status="PASS" starttime="20221028 04:10:20.932" endtime="20221028 04:10:20.933"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221028 04:10:20.933" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221028 04:10:20.933" endtime="20221028 04:10:20.933"/>
</kw>
<status status="PASS" starttime="20221028 04:10:20.910" endtime="20221028 04:10:20.934"/>
</kw>
<msg timestamp="20221028 04:10:20.934" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221028 04:10:20.909" endtime="20221028 04:10:20.934"/>
</kw>
<msg timestamp="20221028 04:10:20.935" level="INFO">${result} = &lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" ...</msg>
<status status="PASS" starttime="20221028 04:10:20.909" endtime="20221028 04:10:20.935"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Ozone Recon</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221028 04:10:20.935" endtime="20221028 04:10:20.935"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221028 04:10:20.907" endtime="20221028 04:10:20.935"/>
</test>
<test id="s1-s2-s1-t4" name="Check web UI access" line="93">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221028 04:10:20.942" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20221028 04:10:20.946" level="INFO">${rc} = 0</msg>
<msg timestamp="20221028 04:10:20.947" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221028 04:10:20.940" endtime="20221028 04:10:20.947"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221028 04:10:20.948" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221028 04:10:20.947" endtime="20221028 04:10:20.948"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221028 04:10:20.949" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221028 04:10:20.948" endtime="20221028 04:10:20.949"/>
</kw>
<status status="PASS" starttime="20221028 04:10:20.939" endtime="20221028 04:10:20.949"/>
</kw>
<msg timestamp="20221028 04:10:20.949" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221028 04:10:20.939" endtime="20221028 04:10:20.950"/>
</kw>
<status status="PASS" starttime="20221028 04:10:20.939" endtime="20221028 04:10:20.950"/>
</kw>
<kw name="Check http return code">
<arg>${ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221028 04:10:20.954" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20221028 04:10:20.968" level="INFO">${rc} = 0</msg>
<msg timestamp="20221028 04:10:20.968" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221028 04:10:20.952" endtime="20221028 04:10:20.968"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221028 04:10:20.969" level="INFO">200</msg>
<status status="PASS" starttime="20221028 04:10:20.968" endtime="20221028 04:10:20.969"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221028 04:10:20.971" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221028 04:10:20.969" endtime="20221028 04:10:20.971"/>
</kw>
<status status="PASS" starttime="20221028 04:10:20.951" endtime="20221028 04:10:20.972"/>
</kw>
<msg timestamp="20221028 04:10:20.972" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221028 04:10:20.951" endtime="20221028 04:10:20.972"/>
</kw>
<msg timestamp="20221028 04:10:20.973" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221028 04:10:20.950" endtime="20221028 04:10:20.973"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221028 04:10:20.973" endtime="20221028 04:10:20.973"/>
</kw>
<status status="NOT RUN" starttime="20221028 04:10:20.973" endtime="20221028 04:10:20.973"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221028 04:10:20.973" endtime="20221028 04:10:20.974"/>
</kw>
<status status="PASS" starttime="20221028 04:10:20.973" endtime="20221028 04:10:20.974"/>
</branch>
<status status="PASS" starttime="20221028 04:10:20.973" endtime="20221028 04:10:20.974"/>
</if>
<status status="PASS" starttime="20221028 04:10:20.950" endtime="20221028 04:10:20.974"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221028 04:10:20.975" endtime="20221028 04:10:20.975"/>
</kw>
<status status="PASS" starttime="20221028 04:10:20.974" endtime="20221028 04:10:20.975"/>
</kw>
<kw name="Check http return code">
<arg>${ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221028 04:10:20.979" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20221028 04:10:21.001" level="INFO">${rc} = 0</msg>
<msg timestamp="20221028 04:10:21.002" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221028 04:10:20.977" endtime="20221028 04:10:21.002"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221028 04:10:21.003" level="INFO">200</msg>
<status status="PASS" starttime="20221028 04:10:21.002" endtime="20221028 04:10:21.003"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221028 04:10:21.004" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221028 04:10:21.003" endtime="20221028 04:10:21.004"/>
</kw>
<status status="PASS" starttime="20221028 04:10:20.976" endtime="20221028 04:10:21.004"/>
</kw>
<msg timestamp="20221028 04:10:21.004" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221028 04:10:20.976" endtime="20221028 04:10:21.006"/>
</kw>
<msg timestamp="20221028 04:10:21.006" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221028 04:10:20.976" endtime="20221028 04:10:21.006"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221028 04:10:21.007" endtime="20221028 04:10:21.007"/>
</kw>
<status status="NOT RUN" starttime="20221028 04:10:21.007" endtime="20221028 04:10:21.007"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221028 04:10:21.007" endtime="20221028 04:10:21.007"/>
</kw>
<status status="PASS" starttime="20221028 04:10:21.007" endtime="20221028 04:10:21.007"/>
</branch>
<status status="PASS" starttime="20221028 04:10:21.006" endtime="20221028 04:10:21.007"/>
</if>
<status status="PASS" starttime="20221028 04:10:20.975" endtime="20221028 04:10:21.007"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221028 04:10:20.938" endtime="20221028 04:10:21.008"/>
</test>
<test id="s1-s2-s1-t5" name="Check admin only api access" line="101">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221028 04:10:21.014" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20221028 04:10:21.018" level="INFO">${rc} = 0</msg>
<msg timestamp="20221028 04:10:21.018" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221028 04:10:21.012" endtime="20221028 04:10:21.018"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221028 04:10:21.019" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221028 04:10:21.019" endtime="20221028 04:10:21.019"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221028 04:10:21.020" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221028 04:10:21.020" endtime="20221028 04:10:21.020"/>
</kw>
<status status="PASS" starttime="20221028 04:10:21.011" endtime="20221028 04:10:21.020"/>
</kw>
<msg timestamp="20221028 04:10:21.020" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221028 04:10:21.011" endtime="20221028 04:10:21.021"/>
</kw>
<status status="PASS" starttime="20221028 04:10:21.010" endtime="20221028 04:10:21.021"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221028 04:10:21.026" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20221028 04:10:21.042" level="INFO">${rc} = 0</msg>
<msg timestamp="20221028 04:10:21.042" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221028 04:10:21.023" endtime="20221028 04:10:21.042"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221028 04:10:21.043" level="INFO">200</msg>
<status status="PASS" starttime="20221028 04:10:21.043" endtime="20221028 04:10:21.044"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221028 04:10:21.044" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221028 04:10:21.044" endtime="20221028 04:10:21.044"/>
</kw>
<status status="PASS" starttime="20221028 04:10:21.023" endtime="20221028 04:10:21.045"/>
</kw>
<msg timestamp="20221028 04:10:21.045" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221028 04:10:21.023" endtime="20221028 04:10:21.045"/>
</kw>
<msg timestamp="20221028 04:10:21.045" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221028 04:10:21.022" endtime="20221028 04:10:21.045"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221028 04:10:21.046" endtime="20221028 04:10:21.046"/>
</kw>
<status status="NOT RUN" starttime="20221028 04:10:21.046" endtime="20221028 04:10:21.046"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221028 04:10:21.046" endtime="20221028 04:10:21.047"/>
</kw>
<status status="PASS" starttime="20221028 04:10:21.046" endtime="20221028 04:10:21.047"/>
</branch>
<status status="PASS" starttime="20221028 04:10:21.045" endtime="20221028 04:10:21.047"/>
</if>
<status status="PASS" starttime="20221028 04:10:21.021" endtime="20221028 04:10:21.047"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221028 04:10:21.048" endtime="20221028 04:10:21.048"/>
</kw>
<status status="PASS" starttime="20221028 04:10:21.047" endtime="20221028 04:10:21.048"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221028 04:10:21.052" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20221028 04:10:21.067" level="INFO">${rc} = 0</msg>
<msg timestamp="20221028 04:10:21.067" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221028 04:10:21.050" endtime="20221028 04:10:21.067"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221028 04:10:21.068" level="INFO">200</msg>
<status status="PASS" starttime="20221028 04:10:21.067" endtime="20221028 04:10:21.068"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221028 04:10:21.069" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221028 04:10:21.068" endtime="20221028 04:10:21.069"/>
</kw>
<status status="PASS" starttime="20221028 04:10:21.049" endtime="20221028 04:10:21.069"/>
</kw>
<msg timestamp="20221028 04:10:21.069" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221028 04:10:21.049" endtime="20221028 04:10:21.070"/>
</kw>
<msg timestamp="20221028 04:10:21.070" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221028 04:10:21.049" endtime="20221028 04:10:21.070"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221028 04:10:21.071" endtime="20221028 04:10:21.071"/>
</kw>
<status status="NOT RUN" starttime="20221028 04:10:21.070" endtime="20221028 04:10:21.071"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221028 04:10:21.071" endtime="20221028 04:10:21.071"/>
</kw>
<status status="PASS" starttime="20221028 04:10:21.071" endtime="20221028 04:10:21.071"/>
</branch>
<status status="PASS" starttime="20221028 04:10:21.070" endtime="20221028 04:10:21.071"/>
</if>
<status status="PASS" starttime="20221028 04:10:21.048" endtime="20221028 04:10:21.072"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221028 04:10:21.072" endtime="20221028 04:10:21.072"/>
</kw>
<status status="PASS" starttime="20221028 04:10:21.072" endtime="20221028 04:10:21.073"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221028 04:10:21.077" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20221028 04:10:21.092" level="INFO">${rc} = 0</msg>
<msg timestamp="20221028 04:10:21.092" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221028 04:10:21.074" endtime="20221028 04:10:21.092"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221028 04:10:21.093" level="INFO">200</msg>
<status status="PASS" starttime="20221028 04:10:21.092" endtime="20221028 04:10:21.093"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221028 04:10:21.094" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221028 04:10:21.093" endtime="20221028 04:10:21.094"/>
</kw>
<status status="PASS" starttime="20221028 04:10:21.074" endtime="20221028 04:10:21.094"/>
</kw>
<msg timestamp="20221028 04:10:21.094" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221028 04:10:21.074" endtime="20221028 04:10:21.095"/>
</kw>
<msg timestamp="20221028 04:10:21.095" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221028 04:10:21.073" endtime="20221028 04:10:21.095"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221028 04:10:21.095" endtime="20221028 04:10:21.096"/>
</kw>
<status status="NOT RUN" starttime="20221028 04:10:21.095" endtime="20221028 04:10:21.096"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221028 04:10:21.096" endtime="20221028 04:10:21.096"/>
</kw>
<status status="PASS" starttime="20221028 04:10:21.096" endtime="20221028 04:10:21.096"/>
</branch>
<status status="PASS" starttime="20221028 04:10:21.095" endtime="20221028 04:10:21.096"/>
</if>
<status status="PASS" starttime="20221028 04:10:21.073" endtime="20221028 04:10:21.096"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221028 04:10:21.097" endtime="20221028 04:10:21.097"/>
</kw>
<status status="PASS" starttime="20221028 04:10:21.097" endtime="20221028 04:10:21.097"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221028 04:10:21.102" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20221028 04:10:21.116" level="INFO">${rc} = 0</msg>
<msg timestamp="20221028 04:10:21.117" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221028 04:10:21.100" endtime="20221028 04:10:21.117"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221028 04:10:21.118" level="INFO">200</msg>
<status status="PASS" starttime="20221028 04:10:21.117" endtime="20221028 04:10:21.118"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221028 04:10:21.118" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221028 04:10:21.118" endtime="20221028 04:10:21.118"/>
</kw>
<status status="PASS" starttime="20221028 04:10:21.099" endtime="20221028 04:10:21.119"/>
</kw>
<msg timestamp="20221028 04:10:21.119" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221028 04:10:21.099" endtime="20221028 04:10:21.119"/>
</kw>
<msg timestamp="20221028 04:10:21.119" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221028 04:10:21.098" endtime="20221028 04:10:21.120"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221028 04:10:21.120" endtime="20221028 04:10:21.120"/>
</kw>
<status status="NOT RUN" starttime="20221028 04:10:21.120" endtime="20221028 04:10:21.120"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221028 04:10:21.120" endtime="20221028 04:10:21.121"/>
</kw>
<status status="PASS" starttime="20221028 04:10:21.120" endtime="20221028 04:10:21.121"/>
</branch>
<status status="PASS" starttime="20221028 04:10:21.120" endtime="20221028 04:10:21.121"/>
</if>
<status status="PASS" starttime="20221028 04:10:21.098" endtime="20221028 04:10:21.121"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221028 04:10:21.009" endtime="20221028 04:10:21.121"/>
</test>
<test id="s1-s2-s1-t6" name="Check unhealthy, (admin) api access" line="114">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221028 04:10:21.126" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20221028 04:10:21.129" level="INFO">${rc} = 0</msg>
<msg timestamp="20221028 04:10:21.129" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221028 04:10:21.123" endtime="20221028 04:10:21.129"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221028 04:10:21.130" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221028 04:10:21.129" endtime="20221028 04:10:21.130"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221028 04:10:21.130" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221028 04:10:21.130" endtime="20221028 04:10:21.131"/>
</kw>
<status status="PASS" starttime="20221028 04:10:21.123" endtime="20221028 04:10:21.131"/>
</kw>
<msg timestamp="20221028 04:10:21.131" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221028 04:10:21.123" endtime="20221028 04:10:21.131"/>
</kw>
<status status="PASS" starttime="20221028 04:10:21.122" endtime="20221028 04:10:21.131"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221028 04:10:21.135" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20221028 04:10:21.190" level="INFO">${rc} = 0</msg>
<msg timestamp="20221028 04:10:21.190" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221028 04:10:21.134" endtime="20221028 04:10:21.190"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221028 04:10:21.192" level="INFO">200</msg>
<status status="PASS" starttime="20221028 04:10:21.191" endtime="20221028 04:10:21.192"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221028 04:10:21.192" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221028 04:10:21.192" endtime="20221028 04:10:21.192"/>
</kw>
<status status="PASS" starttime="20221028 04:10:21.133" endtime="20221028 04:10:21.193"/>
</kw>
<msg timestamp="20221028 04:10:21.193" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221028 04:10:21.133" endtime="20221028 04:10:21.193"/>
</kw>
<msg timestamp="20221028 04:10:21.193" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221028 04:10:21.132" endtime="20221028 04:10:21.193"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221028 04:10:21.195" endtime="20221028 04:10:21.195"/>
</kw>
<status status="NOT RUN" starttime="20221028 04:10:21.194" endtime="20221028 04:10:21.195"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221028 04:10:21.195" endtime="20221028 04:10:21.195"/>
</kw>
<status status="PASS" starttime="20221028 04:10:21.195" endtime="20221028 04:10:21.195"/>
</branch>
<status status="PASS" starttime="20221028 04:10:21.194" endtime="20221028 04:10:21.195"/>
</if>
<status status="PASS" starttime="20221028 04:10:21.132" endtime="20221028 04:10:21.196"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221028 04:10:21.196" endtime="20221028 04:10:21.196"/>
</kw>
<status status="PASS" starttime="20221028 04:10:21.196" endtime="20221028 04:10:21.197"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221028 04:10:21.202" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20221028 04:10:21.220" level="INFO">${rc} = 0</msg>
<msg timestamp="20221028 04:10:21.220" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221028 04:10:21.199" endtime="20221028 04:10:21.220"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221028 04:10:21.222" level="INFO">200</msg>
<status status="PASS" starttime="20221028 04:10:21.221" endtime="20221028 04:10:21.222"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221028 04:10:21.222" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221028 04:10:21.222" endtime="20221028 04:10:21.222"/>
</kw>
<status status="PASS" starttime="20221028 04:10:21.199" endtime="20221028 04:10:21.223"/>
</kw>
<msg timestamp="20221028 04:10:21.223" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221028 04:10:21.198" endtime="20221028 04:10:21.224"/>
</kw>
<msg timestamp="20221028 04:10:21.224" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221028 04:10:21.198" endtime="20221028 04:10:21.224"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221028 04:10:21.224" endtime="20221028 04:10:21.224"/>
</kw>
<status status="NOT RUN" starttime="20221028 04:10:21.224" endtime="20221028 04:10:21.225"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221028 04:10:21.225" endtime="20221028 04:10:21.225"/>
</kw>
<status status="PASS" starttime="20221028 04:10:21.225" endtime="20221028 04:10:21.225"/>
</branch>
<status status="PASS" starttime="20221028 04:10:21.224" endtime="20221028 04:10:21.225"/>
</if>
<status status="PASS" starttime="20221028 04:10:21.197" endtime="20221028 04:10:21.225"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221028 04:10:21.226" endtime="20221028 04:10:21.226"/>
</kw>
<status status="PASS" starttime="20221028 04:10:21.225" endtime="20221028 04:10:21.227"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221028 04:10:21.231" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20221028 04:10:21.253" level="INFO">${rc} = 0</msg>
<msg timestamp="20221028 04:10:21.253" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221028 04:10:21.229" endtime="20221028 04:10:21.253"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221028 04:10:21.255" level="INFO">200</msg>
<status status="PASS" starttime="20221028 04:10:21.254" endtime="20221028 04:10:21.255"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221028 04:10:21.255" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221028 04:10:21.255" endtime="20221028 04:10:21.255"/>
</kw>
<status status="PASS" starttime="20221028 04:10:21.228" endtime="20221028 04:10:21.256"/>
</kw>
<msg timestamp="20221028 04:10:21.256" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221028 04:10:21.228" endtime="20221028 04:10:21.256"/>
</kw>
<msg timestamp="20221028 04:10:21.258" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221028 04:10:21.227" endtime="20221028 04:10:21.258"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221028 04:10:21.258" endtime="20221028 04:10:21.258"/>
</kw>
<status status="NOT RUN" starttime="20221028 04:10:21.258" endtime="20221028 04:10:21.258"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221028 04:10:21.259" endtime="20221028 04:10:21.259"/>
</kw>
<status status="PASS" starttime="20221028 04:10:21.258" endtime="20221028 04:10:21.259"/>
</branch>
<status status="PASS" starttime="20221028 04:10:21.258" endtime="20221028 04:10:21.259"/>
</if>
<status status="PASS" starttime="20221028 04:10:21.227" endtime="20221028 04:10:21.259"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221028 04:10:21.260" endtime="20221028 04:10:21.260"/>
</kw>
<status status="PASS" starttime="20221028 04:10:21.259" endtime="20221028 04:10:21.260"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221028 04:10:21.265" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20221028 04:10:21.291" level="INFO">${rc} = 0</msg>
<msg timestamp="20221028 04:10:21.291" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221028 04:10:21.262" endtime="20221028 04:10:21.291"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221028 04:10:21.292" level="INFO">200</msg>
<status status="PASS" starttime="20221028 04:10:21.292" endtime="20221028 04:10:21.292"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221028 04:10:21.293" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221028 04:10:21.293" endtime="20221028 04:10:21.293"/>
</kw>
<status status="PASS" starttime="20221028 04:10:21.262" endtime="20221028 04:10:21.293"/>
</kw>
<msg timestamp="20221028 04:10:21.293" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221028 04:10:21.261" endtime="20221028 04:10:21.294"/>
</kw>
<msg timestamp="20221028 04:10:21.294" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221028 04:10:21.261" endtime="20221028 04:10:21.294"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221028 04:10:21.295" endtime="20221028 04:10:21.295"/>
</kw>
<status status="NOT RUN" starttime="20221028 04:10:21.294" endtime="20221028 04:10:21.295"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221028 04:10:21.295" endtime="20221028 04:10:21.295"/>
</kw>
<status status="PASS" starttime="20221028 04:10:21.295" endtime="20221028 04:10:21.295"/>
</branch>
<status status="PASS" starttime="20221028 04:10:21.294" endtime="20221028 04:10:21.295"/>
</if>
<status status="PASS" starttime="20221028 04:10:21.261" endtime="20221028 04:10:21.296"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221028 04:10:21.122" endtime="20221028 04:10:21.296"/>
</test>
<test id="s1-s2-s1-t7" name="Check normal api access" line="127">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221028 04:10:21.301" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20221028 04:10:21.305" level="INFO">${rc} = 0</msg>
<msg timestamp="20221028 04:10:21.305" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221028 04:10:21.299" endtime="20221028 04:10:21.305"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221028 04:10:21.306" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221028 04:10:21.306" endtime="20221028 04:10:21.307"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221028 04:10:21.307" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221028 04:10:21.307" endtime="20221028 04:10:21.307"/>
</kw>
<status status="PASS" starttime="20221028 04:10:21.298" endtime="20221028 04:10:21.307"/>
</kw>
<msg timestamp="20221028 04:10:21.307" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221028 04:10:21.298" endtime="20221028 04:10:21.308"/>
</kw>
<status status="PASS" starttime="20221028 04:10:21.297" endtime="20221028 04:10:21.308"/>
</kw>
<kw name="Check http return code">
<arg>${NON_ADMIN_API_ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221028 04:10:21.312" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20221028 04:10:21.338" level="INFO">${rc} = 0</msg>
<msg timestamp="20221028 04:10:21.339" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221028 04:10:21.310" endtime="20221028 04:10:21.339"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221028 04:10:21.340" level="INFO">200</msg>
<status status="PASS" starttime="20221028 04:10:21.339" endtime="20221028 04:10:21.340"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221028 04:10:21.341" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221028 04:10:21.340" endtime="20221028 04:10:21.341"/>
</kw>
<status status="PASS" starttime="20221028 04:10:21.310" endtime="20221028 04:10:21.341"/>
</kw>
<msg timestamp="20221028 04:10:21.341" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221028 04:10:21.309" endtime="20221028 04:10:21.341"/>
</kw>
<msg timestamp="20221028 04:10:21.342" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221028 04:10:21.309" endtime="20221028 04:10:21.342"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221028 04:10:21.342" endtime="20221028 04:10:21.342"/>
</kw>
<status status="NOT RUN" starttime="20221028 04:10:21.342" endtime="20221028 04:10:21.342"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221028 04:10:21.342" endtime="20221028 04:10:21.343"/>
</kw>
<status status="PASS" starttime="20221028 04:10:21.342" endtime="20221028 04:10:21.343"/>
</branch>
<status status="PASS" starttime="20221028 04:10:21.342" endtime="20221028 04:10:21.343"/>
</if>
<status status="PASS" starttime="20221028 04:10:21.308" endtime="20221028 04:10:21.343"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221028 04:10:21.343" endtime="20221028 04:10:21.344"/>
</kw>
<status status="PASS" starttime="20221028 04:10:21.343" endtime="20221028 04:10:21.344"/>
</kw>
<kw name="Check http return code">
<arg>${NON_ADMIN_API_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221028 04:10:21.348" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20221028 04:10:21.368" level="INFO">${rc} = 0</msg>
<msg timestamp="20221028 04:10:21.368" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221028 04:10:21.346" endtime="20221028 04:10:21.368"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221028 04:10:21.369" level="INFO">200</msg>
<status status="PASS" starttime="20221028 04:10:21.368" endtime="20221028 04:10:21.369"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221028 04:10:21.370" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221028 04:10:21.369" endtime="20221028 04:10:21.370"/>
</kw>
<status status="PASS" starttime="20221028 04:10:21.345" endtime="20221028 04:10:21.370"/>
</kw>
<msg timestamp="20221028 04:10:21.370" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221028 04:10:21.345" endtime="20221028 04:10:21.370"/>
</kw>
<msg timestamp="20221028 04:10:21.371" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221028 04:10:21.344" endtime="20221028 04:10:21.371"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221028 04:10:21.371" endtime="20221028 04:10:21.371"/>
</kw>
<status status="NOT RUN" starttime="20221028 04:10:21.371" endtime="20221028 04:10:21.371"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221028 04:10:21.371" endtime="20221028 04:10:21.372"/>
</kw>
<status status="PASS" starttime="20221028 04:10:21.371" endtime="20221028 04:10:21.372"/>
</branch>
<status status="PASS" starttime="20221028 04:10:21.371" endtime="20221028 04:10:21.372"/>
</if>
<status status="PASS" starttime="20221028 04:10:21.344" endtime="20221028 04:10:21.372"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221028 04:10:21.297" endtime="20221028 04:10:21.372"/>
</test>
<doc>Smoke test to start cluster with docker-compose environments.</doc>
<status status="PASS" starttime="20221028 04:09:22.173" endtime="20221028 04:10:21.373"/>
</suite>
<suite id="s1-s2-s2" name="Recon-Nssummary" source="/opt/hadoop/smoketest/recon/recon-nssummary.robot">
<test id="s1-s2-s2-t1" name="Check volume creation" line="99">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221028 04:10:21.387" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20221028 04:10:21.390" level="INFO">${rc} = 0</msg>
<msg timestamp="20221028 04:10:21.390" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221028 04:10:21.385" endtime="20221028 04:10:21.390"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221028 04:10:21.391" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221028 04:10:21.390" endtime="20221028 04:10:21.391"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221028 04:10:21.392" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221028 04:10:21.391" endtime="20221028 04:10:21.392"/>
</kw>
<status status="PASS" starttime="20221028 04:10:21.384" endtime="20221028 04:10:21.392"/>
</kw>
<msg timestamp="20221028 04:10:21.392" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221028 04:10:21.384" endtime="20221028 04:10:21.393"/>
</kw>
<status status="PASS" starttime="20221028 04:10:21.383" endtime="20221028 04:10:21.393"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221028 04:10:21.393" endtime="20221028 04:10:21.394"/>
</kw>
<status status="PASS" starttime="20221028 04:10:21.393" endtime="20221028 04:10:21.394"/>
</kw>
<kw name="Create volume">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20221028 04:10:21.394" level="INFO">${random} = nxaks</msg>
<status status="PASS" starttime="20221028 04:10:21.394" endtime="20221028 04:10:21.394"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${VOLUME}</arg>
<arg>vol-${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20221028 04:10:21.395" level="INFO">${VOLUME} = vol-nxaks</msg>
<status status="PASS" starttime="20221028 04:10:21.395" endtime="20221028 04:10:21.395"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${VOLUME}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221028 04:10:21.398" level="INFO">Running command 'ozone sh volume create /vol-nxaks 2&gt;&amp;1'.</msg>
<msg timestamp="20221028 04:10:24.703" level="INFO">${rc} = 0</msg>
<msg timestamp="20221028 04:10:24.703" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221028 04:10:21.396" endtime="20221028 04:10:24.703"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221028 04:10:24.705" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221028 04:10:24.704" endtime="20221028 04:10:24.705"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221028 04:10:24.705" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221028 04:10:24.705" endtime="20221028 04:10:24.705"/>
</kw>
<status status="PASS" starttime="20221028 04:10:21.396" endtime="20221028 04:10:24.706"/>
</kw>
<msg timestamp="20221028 04:10:24.706" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221028 04:10:21.396" endtime="20221028 04:10:24.706"/>
</kw>
<msg timestamp="20221028 04:10:24.706" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221028 04:10:21.395" endtime="20221028 04:10:24.706"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20221028 04:10:24.706" endtime="20221028 04:10:24.707"/>
</kw>
<status status="PASS" starttime="20221028 04:10:21.394" endtime="20221028 04:10:24.707"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221028 04:10:21.383" endtime="20221028 04:10:24.707"/>
</test>
<test id="s1-s2-s2-t2" name="Check bucket creation" line="104">
<kw name="Create bucket">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20221028 04:10:24.710" level="INFO">${random} = oqray</msg>
<status status="PASS" starttime="20221028 04:10:24.709" endtime="20221028 04:10:24.710"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<arg>buc-${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20221028 04:10:24.710" level="INFO">${BUCKET} = buc-oqray</msg>
<status status="PASS" starttime="20221028 04:10:24.710" endtime="20221028 04:10:24.710"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create -l ${BUCKET_LAYOUT} /${VOLUME}/${BUCKET}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221028 04:10:24.714" level="INFO">Running command 'ozone sh bucket create -l FILE_SYSTEM_OPTIMIZED /vol-nxaks/buc-oqray 2&gt;&amp;1'.</msg>
<msg timestamp="20221028 04:10:27.971" level="INFO">${rc} = 0</msg>
<msg timestamp="20221028 04:10:27.971" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221028 04:10:24.712" endtime="20221028 04:10:27.971"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221028 04:10:27.972" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221028 04:10:27.971" endtime="20221028 04:10:27.972"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221028 04:10:27.973" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221028 04:10:27.972" endtime="20221028 04:10:27.973"/>
</kw>
<status status="PASS" starttime="20221028 04:10:24.711" endtime="20221028 04:10:27.973"/>
</kw>
<msg timestamp="20221028 04:10:27.973" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221028 04:10:24.711" endtime="20221028 04:10:27.974"/>
</kw>
<msg timestamp="20221028 04:10:27.974" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221028 04:10:24.710" endtime="20221028 04:10:27.974"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20221028 04:10:27.974" endtime="20221028 04:10:27.974"/>
</kw>
<status status="PASS" starttime="20221028 04:10:24.709" endtime="20221028 04:10:27.975"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221028 04:10:24.708" endtime="20221028 04:10:27.975"/>
</test>
<test id="s1-s2-s2-t3" name="Check keys creation" line="107">
<kw name="Create keys">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put /${VOLUME}/${BUCKET}/file1 README.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221028 04:10:27.982" level="INFO">Running command 'ozone sh key put /vol-nxaks/buc-oqray/file1 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20221028 04:10:33.669" level="INFO">${rc} = 0</msg>
<msg timestamp="20221028 04:10:33.669" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221028 04:10:27.979" endtime="20221028 04:10:33.669"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221028 04:10:33.670" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221028 04:10:33.669" endtime="20221028 04:10:33.670"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221028 04:10:33.671" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221028 04:10:33.670" endtime="20221028 04:10:33.671"/>
</kw>
<status status="PASS" starttime="20221028 04:10:27.978" endtime="20221028 04:10:33.671"/>
</kw>
<msg timestamp="20221028 04:10:33.671" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221028 04:10:27.977" endtime="20221028 04:10:33.672"/>
</kw>
<msg timestamp="20221028 04:10:33.672" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221028 04:10:27.977" endtime="20221028 04:10:33.672"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20221028 04:10:33.672" endtime="20221028 04:10:33.672"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put /${VOLUME}/${BUCKET}/dir1/dir2/file2 HISTORY.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221028 04:10:33.677" level="INFO">Running command 'ozone sh key put /vol-nxaks/buc-oqray/dir1/dir2/file2 HISTORY.md 2&gt;&amp;1'.</msg>
<msg timestamp="20221028 04:10:39.210" level="INFO">${rc} = 0</msg>
<msg timestamp="20221028 04:10:39.210" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221028 04:10:33.674" endtime="20221028 04:10:39.211"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221028 04:10:39.212" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221028 04:10:39.211" endtime="20221028 04:10:39.212"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221028 04:10:39.212" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221028 04:10:39.212" endtime="20221028 04:10:39.212"/>
</kw>
<status status="PASS" starttime="20221028 04:10:33.674" endtime="20221028 04:10:39.213"/>
</kw>
<msg timestamp="20221028 04:10:39.213" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221028 04:10:33.673" endtime="20221028 04:10:39.213"/>
</kw>
<msg timestamp="20221028 04:10:39.213" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221028 04:10:33.673" endtime="20221028 04:10:39.214"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20221028 04:10:39.214" endtime="20221028 04:10:39.214"/>
</kw>
<status status="PASS" starttime="20221028 04:10:27.976" endtime="20221028 04:10:39.214"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221028 04:10:27.976" endtime="20221028 04:10:39.214"/>
</test>
<test id="s1-s2-s2-t4" name="Check Summary api access" line="110">
<kw name="Check Access">
<arg>${SUMMARY_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221028 04:10:39.220" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20221028 04:10:39.223" level="INFO">${rc} = 0</msg>
<msg timestamp="20221028 04:10:39.223" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221028 04:10:39.218" endtime="20221028 04:10:39.224"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221028 04:10:39.224" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221028 04:10:39.224" endtime="20221028 04:10:39.225"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221028 04:10:39.225" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221028 04:10:39.225" endtime="20221028 04:10:39.225"/>
</kw>
<status status="PASS" starttime="20221028 04:10:39.217" endtime="20221028 04:10:39.225"/>
</kw>
<msg timestamp="20221028 04:10:39.225" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221028 04:10:39.217" endtime="20221028 04:10:39.226"/>
</kw>
<status status="PASS" starttime="20221028 04:10:39.217" endtime="20221028 04:10:39.226"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221028 04:10:39.230" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221028 04:10:39.258" level="INFO">${rc} = 0</msg>
<msg timestamp="20221028 04:10:39.258" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221028 04:10:39.228" endtime="20221028 04:10:39.258"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221028 04:10:39.260" level="INFO">200</msg>
<status status="PASS" starttime="20221028 04:10:39.258" endtime="20221028 04:10:39.260"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221028 04:10:39.260" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221028 04:10:39.260" endtime="20221028 04:10:39.260"/>
</kw>
<status status="PASS" starttime="20221028 04:10:39.228" endtime="20221028 04:10:39.261"/>
</kw>
<msg timestamp="20221028 04:10:39.261" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221028 04:10:39.227" endtime="20221028 04:10:39.261"/>
</kw>
<msg timestamp="20221028 04:10:39.261" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221028 04:10:39.227" endtime="20221028 04:10:39.262"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221028 04:10:39.262" endtime="20221028 04:10:39.262"/>
</kw>
<status status="NOT RUN" starttime="20221028 04:10:39.262" endtime="20221028 04:10:39.262"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221028 04:10:39.262" endtime="20221028 04:10:39.263"/>
</kw>
<status status="PASS" starttime="20221028 04:10:39.262" endtime="20221028 04:10:39.263"/>
</branch>
<status status="PASS" starttime="20221028 04:10:39.262" endtime="20221028 04:10:39.263"/>
</if>
<status status="PASS" starttime="20221028 04:10:39.226" endtime="20221028 04:10:39.263"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221028 04:10:39.263" endtime="20221028 04:10:39.264"/>
</kw>
<status status="PASS" starttime="20221028 04:10:39.263" endtime="20221028 04:10:39.264"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221028 04:10:39.267" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221028 04:10:39.281" level="INFO">${rc} = 0</msg>
<msg timestamp="20221028 04:10:39.281" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221028 04:10:39.265" endtime="20221028 04:10:39.281"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221028 04:10:39.283" level="INFO">200</msg>
<status status="PASS" starttime="20221028 04:10:39.282" endtime="20221028 04:10:39.283"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221028 04:10:39.283" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221028 04:10:39.283" endtime="20221028 04:10:39.283"/>
</kw>
<status status="PASS" starttime="20221028 04:10:39.265" endtime="20221028 04:10:39.284"/>
</kw>
<msg timestamp="20221028 04:10:39.284" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221028 04:10:39.265" endtime="20221028 04:10:39.284"/>
</kw>
<msg timestamp="20221028 04:10:39.285" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221028 04:10:39.264" endtime="20221028 04:10:39.285"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221028 04:10:39.285" endtime="20221028 04:10:39.285"/>
</kw>
<status status="NOT RUN" starttime="20221028 04:10:39.285" endtime="20221028 04:10:39.285"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221028 04:10:39.285" endtime="20221028 04:10:39.286"/>
</kw>
<status status="PASS" starttime="20221028 04:10:39.285" endtime="20221028 04:10:39.286"/>
</branch>
<status status="PASS" starttime="20221028 04:10:39.285" endtime="20221028 04:10:39.286"/>
</if>
<status status="PASS" starttime="20221028 04:10:39.264" endtime="20221028 04:10:39.286"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221028 04:10:39.286" endtime="20221028 04:10:39.287"/>
</kw>
<status status="PASS" starttime="20221028 04:10:39.286" endtime="20221028 04:10:39.287"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221028 04:10:39.291" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221028 04:10:39.307" level="INFO">${rc} = 0</msg>
<msg timestamp="20221028 04:10:39.307" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221028 04:10:39.288" endtime="20221028 04:10:39.307"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221028 04:10:39.308" level="INFO">200</msg>
<status status="PASS" starttime="20221028 04:10:39.307" endtime="20221028 04:10:39.308"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221028 04:10:39.309" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221028 04:10:39.308" endtime="20221028 04:10:39.309"/>
</kw>
<status status="PASS" starttime="20221028 04:10:39.288" endtime="20221028 04:10:39.309"/>
</kw>
<msg timestamp="20221028 04:10:39.309" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221028 04:10:39.288" endtime="20221028 04:10:39.310"/>
</kw>
<msg timestamp="20221028 04:10:39.310" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221028 04:10:39.287" endtime="20221028 04:10:39.310"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221028 04:10:39.310" endtime="20221028 04:10:39.310"/>
</kw>
<status status="NOT RUN" starttime="20221028 04:10:39.310" endtime="20221028 04:10:39.311"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221028 04:10:39.311" endtime="20221028 04:10:39.311"/>
</kw>
<status status="PASS" starttime="20221028 04:10:39.311" endtime="20221028 04:10:39.311"/>
</branch>
<status status="PASS" starttime="20221028 04:10:39.310" endtime="20221028 04:10:39.311"/>
</if>
<status status="PASS" starttime="20221028 04:10:39.287" endtime="20221028 04:10:39.311"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221028 04:10:39.312" endtime="20221028 04:10:39.313"/>
</kw>
<status status="PASS" starttime="20221028 04:10:39.312" endtime="20221028 04:10:39.313"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221028 04:10:39.317" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221028 04:10:39.331" level="INFO">${rc} = 0</msg>
<msg timestamp="20221028 04:10:39.331" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221028 04:10:39.315" endtime="20221028 04:10:39.331"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221028 04:10:39.333" level="INFO">200</msg>
<status status="PASS" starttime="20221028 04:10:39.332" endtime="20221028 04:10:39.333"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221028 04:10:39.333" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221028 04:10:39.333" endtime="20221028 04:10:39.333"/>
</kw>
<status status="PASS" starttime="20221028 04:10:39.314" endtime="20221028 04:10:39.334"/>
</kw>
<msg timestamp="20221028 04:10:39.334" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221028 04:10:39.314" endtime="20221028 04:10:39.334"/>
</kw>
<msg timestamp="20221028 04:10:39.334" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221028 04:10:39.313" endtime="20221028 04:10:39.334"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221028 04:10:39.335" endtime="20221028 04:10:39.335"/>
</kw>
<status status="NOT RUN" starttime="20221028 04:10:39.335" endtime="20221028 04:10:39.335"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221028 04:10:39.335" endtime="20221028 04:10:39.336"/>
</kw>
<status status="PASS" starttime="20221028 04:10:39.335" endtime="20221028 04:10:39.336"/>
</branch>
<status status="PASS" starttime="20221028 04:10:39.334" endtime="20221028 04:10:39.336"/>
</if>
<status status="PASS" starttime="20221028 04:10:39.313" endtime="20221028 04:10:39.336"/>
</kw>
<status status="PASS" starttime="20221028 04:10:39.216" endtime="20221028 04:10:39.336"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221028 04:10:39.215" endtime="20221028 04:10:39.336"/>
</test>
<test id="s1-s2-s2-t5" name="Check Disk Usage api access" line="113">
<kw name="Check Access">
<arg>${DISK_USAGE_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221028 04:10:39.342" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20221028 04:10:39.345" level="INFO">${rc} = 0</msg>
<msg timestamp="20221028 04:10:39.345" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221028 04:10:39.340" endtime="20221028 04:10:39.345"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221028 04:10:39.346" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221028 04:10:39.346" endtime="20221028 04:10:39.346"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221028 04:10:39.347" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221028 04:10:39.347" endtime="20221028 04:10:39.347"/>
</kw>
<status status="PASS" starttime="20221028 04:10:39.339" endtime="20221028 04:10:39.347"/>
</kw>
<msg timestamp="20221028 04:10:39.347" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221028 04:10:39.339" endtime="20221028 04:10:39.348"/>
</kw>
<status status="PASS" starttime="20221028 04:10:39.339" endtime="20221028 04:10:39.348"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221028 04:10:39.352" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221028 04:10:39.373" level="INFO">${rc} = 0</msg>
<msg timestamp="20221028 04:10:39.373" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221028 04:10:39.350" endtime="20221028 04:10:39.373"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221028 04:10:39.374" level="INFO">200</msg>
<status status="PASS" starttime="20221028 04:10:39.374" endtime="20221028 04:10:39.374"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221028 04:10:39.375" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221028 04:10:39.374" endtime="20221028 04:10:39.375"/>
</kw>
<status status="PASS" starttime="20221028 04:10:39.349" endtime="20221028 04:10:39.375"/>
</kw>
<msg timestamp="20221028 04:10:39.376" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221028 04:10:39.349" endtime="20221028 04:10:39.376"/>
</kw>
<msg timestamp="20221028 04:10:39.376" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221028 04:10:39.349" endtime="20221028 04:10:39.376"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221028 04:10:39.377" endtime="20221028 04:10:39.377"/>
</kw>
<status status="NOT RUN" starttime="20221028 04:10:39.377" endtime="20221028 04:10:39.377"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221028 04:10:39.377" endtime="20221028 04:10:39.378"/>
</kw>
<status status="PASS" starttime="20221028 04:10:39.377" endtime="20221028 04:10:39.378"/>
</branch>
<status status="PASS" starttime="20221028 04:10:39.377" endtime="20221028 04:10:39.378"/>
</if>
<status status="PASS" starttime="20221028 04:10:39.348" endtime="20221028 04:10:39.378"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221028 04:10:39.378" endtime="20221028 04:10:39.379"/>
</kw>
<status status="PASS" starttime="20221028 04:10:39.378" endtime="20221028 04:10:39.379"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221028 04:10:39.383" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221028 04:10:39.398" level="INFO">${rc} = 0</msg>
<msg timestamp="20221028 04:10:39.398" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221028 04:10:39.381" endtime="20221028 04:10:39.398"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221028 04:10:39.399" level="INFO">200</msg>
<status status="PASS" starttime="20221028 04:10:39.399" endtime="20221028 04:10:39.399"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221028 04:10:39.400" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221028 04:10:39.400" endtime="20221028 04:10:39.400"/>
</kw>
<status status="PASS" starttime="20221028 04:10:39.380" endtime="20221028 04:10:39.400"/>
</kw>
<msg timestamp="20221028 04:10:39.401" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221028 04:10:39.380" endtime="20221028 04:10:39.401"/>
</kw>
<msg timestamp="20221028 04:10:39.401" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221028 04:10:39.379" endtime="20221028 04:10:39.401"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221028 04:10:39.402" endtime="20221028 04:10:39.402"/>
</kw>
<status status="NOT RUN" starttime="20221028 04:10:39.402" endtime="20221028 04:10:39.402"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221028 04:10:39.402" endtime="20221028 04:10:39.403"/>
</kw>
<status status="PASS" starttime="20221028 04:10:39.402" endtime="20221028 04:10:39.403"/>
</branch>
<status status="PASS" starttime="20221028 04:10:39.402" endtime="20221028 04:10:39.403"/>
</if>
<status status="PASS" starttime="20221028 04:10:39.379" endtime="20221028 04:10:39.403"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221028 04:10:39.404" endtime="20221028 04:10:39.404"/>
</kw>
<status status="PASS" starttime="20221028 04:10:39.403" endtime="20221028 04:10:39.404"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221028 04:10:39.408" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221028 04:10:39.422" level="INFO">${rc} = 0</msg>
<msg timestamp="20221028 04:10:39.422" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221028 04:10:39.406" endtime="20221028 04:10:39.422"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221028 04:10:39.423" level="INFO">200</msg>
<status status="PASS" starttime="20221028 04:10:39.423" endtime="20221028 04:10:39.423"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221028 04:10:39.424" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221028 04:10:39.423" endtime="20221028 04:10:39.424"/>
</kw>
<status status="PASS" starttime="20221028 04:10:39.406" endtime="20221028 04:10:39.425"/>
</kw>
<msg timestamp="20221028 04:10:39.425" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221028 04:10:39.405" endtime="20221028 04:10:39.425"/>
</kw>
<msg timestamp="20221028 04:10:39.425" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221028 04:10:39.405" endtime="20221028 04:10:39.425"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221028 04:10:39.426" endtime="20221028 04:10:39.426"/>
</kw>
<status status="NOT RUN" starttime="20221028 04:10:39.426" endtime="20221028 04:10:39.426"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221028 04:10:39.426" endtime="20221028 04:10:39.426"/>
</kw>
<status status="PASS" starttime="20221028 04:10:39.426" endtime="20221028 04:10:39.427"/>
</branch>
<status status="PASS" starttime="20221028 04:10:39.426" endtime="20221028 04:10:39.427"/>
</if>
<status status="PASS" starttime="20221028 04:10:39.404" endtime="20221028 04:10:39.427"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221028 04:10:39.427" endtime="20221028 04:10:39.428"/>
</kw>
<status status="PASS" starttime="20221028 04:10:39.427" endtime="20221028 04:10:39.428"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221028 04:10:39.431" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221028 04:10:39.446" level="INFO">${rc} = 0</msg>
<msg timestamp="20221028 04:10:39.446" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221028 04:10:39.429" endtime="20221028 04:10:39.446"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221028 04:10:39.447" level="INFO">200</msg>
<status status="PASS" starttime="20221028 04:10:39.446" endtime="20221028 04:10:39.447"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221028 04:10:39.447" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221028 04:10:39.447" endtime="20221028 04:10:39.447"/>
</kw>
<status status="PASS" starttime="20221028 04:10:39.429" endtime="20221028 04:10:39.448"/>
</kw>
<msg timestamp="20221028 04:10:39.448" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221028 04:10:39.429" endtime="20221028 04:10:39.448"/>
</kw>
<msg timestamp="20221028 04:10:39.449" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221028 04:10:39.428" endtime="20221028 04:10:39.449"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221028 04:10:39.449" endtime="20221028 04:10:39.449"/>
</kw>
<status status="NOT RUN" starttime="20221028 04:10:39.449" endtime="20221028 04:10:39.449"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221028 04:10:39.449" endtime="20221028 04:10:39.450"/>
</kw>
<status status="PASS" starttime="20221028 04:10:39.449" endtime="20221028 04:10:39.450"/>
</branch>
<status status="PASS" starttime="20221028 04:10:39.449" endtime="20221028 04:10:39.450"/>
</if>
<status status="PASS" starttime="20221028 04:10:39.428" endtime="20221028 04:10:39.451"/>
</kw>
<status status="PASS" starttime="20221028 04:10:39.338" endtime="20221028 04:10:39.451"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221028 04:10:39.337" endtime="20221028 04:10:39.451"/>
</test>
<test id="s1-s2-s2-t6" name="Check Quota Usage api access" line="116">
<kw name="Check Access">
<arg>${QUOTA_USAGE_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221028 04:10:39.458" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20221028 04:10:39.461" level="INFO">${rc} = 0</msg>
<msg timestamp="20221028 04:10:39.461" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221028 04:10:39.455" endtime="20221028 04:10:39.461"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221028 04:10:39.462" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221028 04:10:39.461" endtime="20221028 04:10:39.462"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221028 04:10:39.462" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221028 04:10:39.462" endtime="20221028 04:10:39.462"/>
</kw>
<status status="PASS" starttime="20221028 04:10:39.455" endtime="20221028 04:10:39.463"/>
</kw>
<msg timestamp="20221028 04:10:39.463" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221028 04:10:39.454" endtime="20221028 04:10:39.463"/>
</kw>
<status status="PASS" starttime="20221028 04:10:39.454" endtime="20221028 04:10:39.463"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221028 04:10:39.467" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221028 04:10:39.488" level="INFO">${rc} = 0</msg>
<msg timestamp="20221028 04:10:39.488" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221028 04:10:39.465" endtime="20221028 04:10:39.488"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221028 04:10:39.490" level="INFO">200</msg>
<status status="PASS" starttime="20221028 04:10:39.489" endtime="20221028 04:10:39.490"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221028 04:10:39.491" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221028 04:10:39.490" endtime="20221028 04:10:39.491"/>
</kw>
<status status="PASS" starttime="20221028 04:10:39.465" endtime="20221028 04:10:39.491"/>
</kw>
<msg timestamp="20221028 04:10:39.491" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221028 04:10:39.465" endtime="20221028 04:10:39.492"/>
</kw>
<msg timestamp="20221028 04:10:39.492" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221028 04:10:39.464" endtime="20221028 04:10:39.492"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221028 04:10:39.492" endtime="20221028 04:10:39.492"/>
</kw>
<status status="NOT RUN" starttime="20221028 04:10:39.492" endtime="20221028 04:10:39.492"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221028 04:10:39.492" endtime="20221028 04:10:39.493"/>
</kw>
<status status="PASS" starttime="20221028 04:10:39.492" endtime="20221028 04:10:39.493"/>
</branch>
<status status="PASS" starttime="20221028 04:10:39.492" endtime="20221028 04:10:39.493"/>
</if>
<status status="PASS" starttime="20221028 04:10:39.463" endtime="20221028 04:10:39.493"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221028 04:10:39.494" endtime="20221028 04:10:39.494"/>
</kw>
<status status="PASS" starttime="20221028 04:10:39.493" endtime="20221028 04:10:39.494"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221028 04:10:39.498" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221028 04:10:39.512" level="INFO">${rc} = 0</msg>
<msg timestamp="20221028 04:10:39.512" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221028 04:10:39.496" endtime="20221028 04:10:39.512"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221028 04:10:39.513" level="INFO">200</msg>
<status status="PASS" starttime="20221028 04:10:39.512" endtime="20221028 04:10:39.513"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221028 04:10:39.514" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221028 04:10:39.513" endtime="20221028 04:10:39.514"/>
</kw>
<status status="PASS" starttime="20221028 04:10:39.495" endtime="20221028 04:10:39.514"/>
</kw>
<msg timestamp="20221028 04:10:39.514" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221028 04:10:39.495" endtime="20221028 04:10:39.515"/>
</kw>
<msg timestamp="20221028 04:10:39.515" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221028 04:10:39.495" endtime="20221028 04:10:39.515"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221028 04:10:39.516" endtime="20221028 04:10:39.516"/>
</kw>
<status status="NOT RUN" starttime="20221028 04:10:39.515" endtime="20221028 04:10:39.516"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221028 04:10:39.516" endtime="20221028 04:10:39.516"/>
</kw>
<status status="PASS" starttime="20221028 04:10:39.516" endtime="20221028 04:10:39.516"/>
</branch>
<status status="PASS" starttime="20221028 04:10:39.515" endtime="20221028 04:10:39.516"/>
</if>
<status status="PASS" starttime="20221028 04:10:39.494" endtime="20221028 04:10:39.517"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221028 04:10:39.517" endtime="20221028 04:10:39.517"/>
</kw>
<status status="PASS" starttime="20221028 04:10:39.517" endtime="20221028 04:10:39.518"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221028 04:10:39.522" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221028 04:10:39.536" level="INFO">${rc} = 0</msg>
<msg timestamp="20221028 04:10:39.536" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221028 04:10:39.519" endtime="20221028 04:10:39.536"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221028 04:10:39.537" level="INFO">200</msg>
<status status="PASS" starttime="20221028 04:10:39.537" endtime="20221028 04:10:39.537"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221028 04:10:39.538" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221028 04:10:39.537" endtime="20221028 04:10:39.538"/>
</kw>
<status status="PASS" starttime="20221028 04:10:39.519" endtime="20221028 04:10:39.538"/>
</kw>
<msg timestamp="20221028 04:10:39.538" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221028 04:10:39.519" endtime="20221028 04:10:39.539"/>
</kw>
<msg timestamp="20221028 04:10:39.539" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221028 04:10:39.518" endtime="20221028 04:10:39.539"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221028 04:10:39.539" endtime="20221028 04:10:39.539"/>
</kw>
<status status="NOT RUN" starttime="20221028 04:10:39.539" endtime="20221028 04:10:39.539"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221028 04:10:39.540" endtime="20221028 04:10:39.540"/>
</kw>
<status status="PASS" starttime="20221028 04:10:39.540" endtime="20221028 04:10:39.540"/>
</branch>
<status status="PASS" starttime="20221028 04:10:39.539" endtime="20221028 04:10:39.540"/>
</if>
<status status="PASS" starttime="20221028 04:10:39.518" endtime="20221028 04:10:39.540"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221028 04:10:39.541" endtime="20221028 04:10:39.541"/>
</kw>
<status status="PASS" starttime="20221028 04:10:39.540" endtime="20221028 04:10:39.541"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221028 04:10:39.545" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221028 04:10:39.562" level="INFO">${rc} = 0</msg>
<msg timestamp="20221028 04:10:39.562" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221028 04:10:39.543" endtime="20221028 04:10:39.562"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221028 04:10:39.563" level="INFO">200</msg>
<status status="PASS" starttime="20221028 04:10:39.562" endtime="20221028 04:10:39.563"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221028 04:10:39.563" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221028 04:10:39.563" endtime="20221028 04:10:39.564"/>
</kw>
<status status="PASS" starttime="20221028 04:10:39.542" endtime="20221028 04:10:39.564"/>
</kw>
<msg timestamp="20221028 04:10:39.564" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221028 04:10:39.542" endtime="20221028 04:10:39.564"/>
</kw>
<msg timestamp="20221028 04:10:39.565" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221028 04:10:39.542" endtime="20221028 04:10:39.565"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221028 04:10:39.565" endtime="20221028 04:10:39.565"/>
</kw>
<status status="NOT RUN" starttime="20221028 04:10:39.565" endtime="20221028 04:10:39.565"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221028 04:10:39.566" endtime="20221028 04:10:39.566"/>
</kw>
<status status="PASS" starttime="20221028 04:10:39.565" endtime="20221028 04:10:39.566"/>
</branch>
<status status="PASS" starttime="20221028 04:10:39.565" endtime="20221028 04:10:39.566"/>
</if>
<status status="PASS" starttime="20221028 04:10:39.541" endtime="20221028 04:10:39.566"/>
</kw>
<status status="PASS" starttime="20221028 04:10:39.453" endtime="20221028 04:10:39.566"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221028 04:10:39.452" endtime="20221028 04:10:39.567"/>
</test>
<test id="s1-s2-s2-t7" name="Check File Size Distribution api access" line="119">
<kw name="Check Access">
<arg>${FILE_SIZE_DIST_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221028 04:10:39.574" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20221028 04:10:39.577" level="INFO">${rc} = 0</msg>
<msg timestamp="20221028 04:10:39.577" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221028 04:10:39.570" endtime="20221028 04:10:39.577"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221028 04:10:39.578" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221028 04:10:39.577" endtime="20221028 04:10:39.578"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221028 04:10:39.579" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221028 04:10:39.578" endtime="20221028 04:10:39.579"/>
</kw>
<status status="PASS" starttime="20221028 04:10:39.569" endtime="20221028 04:10:39.579"/>
</kw>
<msg timestamp="20221028 04:10:39.579" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221028 04:10:39.569" endtime="20221028 04:10:39.580"/>
</kw>
<status status="PASS" starttime="20221028 04:10:39.569" endtime="20221028 04:10:39.580"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221028 04:10:39.584" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221028 04:10:39.604" level="INFO">${rc} = 0</msg>
<msg timestamp="20221028 04:10:39.604" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221028 04:10:39.582" endtime="20221028 04:10:39.604"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221028 04:10:39.606" level="INFO">200</msg>
<status status="PASS" starttime="20221028 04:10:39.605" endtime="20221028 04:10:39.606"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221028 04:10:39.606" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221028 04:10:39.606" endtime="20221028 04:10:39.606"/>
</kw>
<status status="PASS" starttime="20221028 04:10:39.581" endtime="20221028 04:10:39.607"/>
</kw>
<msg timestamp="20221028 04:10:39.607" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221028 04:10:39.581" endtime="20221028 04:10:39.607"/>
</kw>
<msg timestamp="20221028 04:10:39.608" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221028 04:10:39.580" endtime="20221028 04:10:39.608"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221028 04:10:39.608" endtime="20221028 04:10:39.608"/>
</kw>
<status status="NOT RUN" starttime="20221028 04:10:39.608" endtime="20221028 04:10:39.608"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221028 04:10:39.608" endtime="20221028 04:10:39.609"/>
</kw>
<status status="PASS" starttime="20221028 04:10:39.608" endtime="20221028 04:10:39.609"/>
</branch>
<status status="PASS" starttime="20221028 04:10:39.608" endtime="20221028 04:10:39.609"/>
</if>
<status status="PASS" starttime="20221028 04:10:39.580" endtime="20221028 04:10:39.609"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221028 04:10:39.610" endtime="20221028 04:10:39.610"/>
</kw>
<status status="PASS" starttime="20221028 04:10:39.609" endtime="20221028 04:10:39.610"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221028 04:10:39.614" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221028 04:10:39.629" level="INFO">${rc} = 0</msg>
<msg timestamp="20221028 04:10:39.629" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221028 04:10:39.612" endtime="20221028 04:10:39.629"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221028 04:10:39.630" level="INFO">200</msg>
<status status="PASS" starttime="20221028 04:10:39.629" endtime="20221028 04:10:39.630"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221028 04:10:39.630" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221028 04:10:39.630" endtime="20221028 04:10:39.630"/>
</kw>
<status status="PASS" starttime="20221028 04:10:39.611" endtime="20221028 04:10:39.631"/>
</kw>
<msg timestamp="20221028 04:10:39.631" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221028 04:10:39.611" endtime="20221028 04:10:39.631"/>
</kw>
<msg timestamp="20221028 04:10:39.632" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221028 04:10:39.611" endtime="20221028 04:10:39.632"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221028 04:10:39.632" endtime="20221028 04:10:39.632"/>
</kw>
<status status="NOT RUN" starttime="20221028 04:10:39.632" endtime="20221028 04:10:39.632"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221028 04:10:39.632" endtime="20221028 04:10:39.633"/>
</kw>
<status status="PASS" starttime="20221028 04:10:39.632" endtime="20221028 04:10:39.633"/>
</branch>
<status status="PASS" starttime="20221028 04:10:39.632" endtime="20221028 04:10:39.633"/>
</if>
<status status="PASS" starttime="20221028 04:10:39.610" endtime="20221028 04:10:39.633"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221028 04:10:39.633" endtime="20221028 04:10:39.634"/>
</kw>
<status status="PASS" starttime="20221028 04:10:39.633" endtime="20221028 04:10:39.634"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221028 04:10:39.637" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221028 04:10:39.650" level="INFO">${rc} = 0</msg>
<msg timestamp="20221028 04:10:39.650" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221028 04:10:39.635" endtime="20221028 04:10:39.650"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221028 04:10:39.651" level="INFO">200</msg>
<status status="PASS" starttime="20221028 04:10:39.651" endtime="20221028 04:10:39.651"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221028 04:10:39.652" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221028 04:10:39.651" endtime="20221028 04:10:39.652"/>
</kw>
<status status="PASS" starttime="20221028 04:10:39.635" endtime="20221028 04:10:39.652"/>
</kw>
<msg timestamp="20221028 04:10:39.652" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221028 04:10:39.635" endtime="20221028 04:10:39.653"/>
</kw>
<msg timestamp="20221028 04:10:39.653" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221028 04:10:39.634" endtime="20221028 04:10:39.653"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221028 04:10:39.654" endtime="20221028 04:10:39.654"/>
</kw>
<status status="NOT RUN" starttime="20221028 04:10:39.653" endtime="20221028 04:10:39.654"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221028 04:10:39.654" endtime="20221028 04:10:39.654"/>
</kw>
<status status="PASS" starttime="20221028 04:10:39.654" endtime="20221028 04:10:39.654"/>
</branch>
<status status="PASS" starttime="20221028 04:10:39.653" endtime="20221028 04:10:39.654"/>
</if>
<status status="PASS" starttime="20221028 04:10:39.634" endtime="20221028 04:10:39.654"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221028 04:10:39.655" endtime="20221028 04:10:39.655"/>
</kw>
<status status="PASS" starttime="20221028 04:10:39.655" endtime="20221028 04:10:39.655"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221028 04:10:39.660" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221028 04:10:39.673" level="INFO">${rc} = 0</msg>
<msg timestamp="20221028 04:10:39.673" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221028 04:10:39.658" endtime="20221028 04:10:39.673"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221028 04:10:39.674" level="INFO">200</msg>
<status status="PASS" starttime="20221028 04:10:39.674" endtime="20221028 04:10:39.674"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221028 04:10:39.675" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221028 04:10:39.674" endtime="20221028 04:10:39.675"/>
</kw>
<status status="PASS" starttime="20221028 04:10:39.657" endtime="20221028 04:10:39.675"/>
</kw>
<msg timestamp="20221028 04:10:39.675" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221028 04:10:39.656" endtime="20221028 04:10:39.676"/>
</kw>
<msg timestamp="20221028 04:10:39.676" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221028 04:10:39.656" endtime="20221028 04:10:39.676"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221028 04:10:39.677" endtime="20221028 04:10:39.677"/>
</kw>
<status status="NOT RUN" starttime="20221028 04:10:39.677" endtime="20221028 04:10:39.677"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221028 04:10:39.677" endtime="20221028 04:10:39.677"/>
</kw>
<status status="PASS" starttime="20221028 04:10:39.677" endtime="20221028 04:10:39.677"/>
</branch>
<status status="PASS" starttime="20221028 04:10:39.676" endtime="20221028 04:10:39.677"/>
</if>
<status status="PASS" starttime="20221028 04:10:39.656" endtime="20221028 04:10:39.678"/>
</kw>
<status status="PASS" starttime="20221028 04:10:39.568" endtime="20221028 04:10:39.678"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221028 04:10:39.567" endtime="20221028 04:10:39.678"/>
</test>
<test id="s1-s2-s2-t8" name="Check Recon Namespace Summary Root" line="122">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/</arg>
<arg>ROOT</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221028 04:10:39.684" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221028 04:10:39.698" level="INFO">${rc} = 0</msg>
<msg timestamp="20221028 04:10:39.698" level="INFO">${output} = {"type":"ROOT","numVolume":3,"numBucket":2,"numDir":0,"numKey":0,"status":"OK"}</msg>
<status status="PASS" starttime="20221028 04:10:39.682" endtime="20221028 04:10:39.699"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221028 04:10:39.700" level="INFO">{"type":"ROOT","numVolume":3,"numBucket":2,"numDir":0,"numKey":0,"status":"OK"}</msg>
<status status="PASS" starttime="20221028 04:10:39.699" endtime="20221028 04:10:39.700"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221028 04:10:39.700" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221028 04:10:39.700" endtime="20221028 04:10:39.700"/>
</kw>
<status status="PASS" starttime="20221028 04:10:39.682" endtime="20221028 04:10:39.701"/>
</kw>
<msg timestamp="20221028 04:10:39.701" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221028 04:10:39.681" endtime="20221028 04:10:39.701"/>
</kw>
<msg timestamp="20221028 04:10:39.701" level="INFO">${result} = {"type":"ROOT","numVolume":3,"numBucket":2,"numDir":0,"numKey":0,"status":"OK"}</msg>
<status status="PASS" starttime="20221028 04:10:39.681" endtime="20221028 04:10:39.701"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221028 04:10:39.702" endtime="20221028 04:10:39.702"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221028 04:10:39.702" endtime="20221028 04:10:39.702"/>
</kw>
<status status="PASS" starttime="20221028 04:10:39.680" endtime="20221028 04:10:39.703"/>
</kw>
<status status="PASS" starttime="20221028 04:10:39.680" endtime="20221028 04:10:39.703"/>
</kw>
<status status="PASS" starttime="20221028 04:10:39.679" endtime="20221028 04:10:39.703"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221028 04:10:39.679" endtime="20221028 04:10:39.703"/>
</test>
<test id="s1-s2-s2-t9" name="Check Recon Namespace Summary Volume" line="125">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}</arg>
<arg>VOLUME</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221028 04:10:39.710" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-nxaks 2&gt;&amp;1'.</msg>
<msg timestamp="20221028 04:10:39.724" level="INFO">${rc} = 0</msg>
<msg timestamp="20221028 04:10:39.724" level="INFO">${output} = {"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221028 04:10:39.707" endtime="20221028 04:10:39.724"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221028 04:10:39.725" level="INFO">{"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221028 04:10:39.724" endtime="20221028 04:10:39.725"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221028 04:10:39.726" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221028 04:10:39.725" endtime="20221028 04:10:39.726"/>
</kw>
<status status="PASS" starttime="20221028 04:10:39.707" endtime="20221028 04:10:39.726"/>
</kw>
<msg timestamp="20221028 04:10:39.726" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221028 04:10:39.707" endtime="20221028 04:10:39.727"/>
</kw>
<msg timestamp="20221028 04:10:39.727" level="INFO">${result} = {"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221028 04:10:39.706" endtime="20221028 04:10:39.727"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20221028 04:10:39.728" level="FAIL">'{"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20221028 04:10:39.727" endtime="20221028 04:10:39.728"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221028 04:10:39.728" endtime="20221028 04:10:39.728"/>
</kw>
<status status="FAIL" starttime="20221028 04:10:39.706" endtime="20221028 04:10:39.729"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221028 04:10:49.734" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-nxaks 2&gt;&amp;1'.</msg>
<msg timestamp="20221028 04:10:49.749" level="INFO">${rc} = 0</msg>
<msg timestamp="20221028 04:10:49.749" level="INFO">${output} = {"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221028 04:10:49.732" endtime="20221028 04:10:49.749"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221028 04:10:49.750" level="INFO">{"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221028 04:10:49.750" endtime="20221028 04:10:49.750"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221028 04:10:49.751" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221028 04:10:49.750" endtime="20221028 04:10:49.751"/>
</kw>
<status status="PASS" starttime="20221028 04:10:49.731" endtime="20221028 04:10:49.751"/>
</kw>
<msg timestamp="20221028 04:10:49.751" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221028 04:10:49.731" endtime="20221028 04:10:49.752"/>
</kw>
<msg timestamp="20221028 04:10:49.752" level="INFO">${result} = {"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221028 04:10:49.731" endtime="20221028 04:10:49.752"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20221028 04:10:49.753" level="FAIL">'{"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20221028 04:10:49.752" endtime="20221028 04:10:49.753"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221028 04:10:49.753" endtime="20221028 04:10:49.754"/>
</kw>
<status status="FAIL" starttime="20221028 04:10:49.730" endtime="20221028 04:10:49.754"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221028 04:10:59.759" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-nxaks 2&gt;&amp;1'.</msg>
<msg timestamp="20221028 04:10:59.772" level="INFO">${rc} = 0</msg>
<msg timestamp="20221028 04:10:59.772" level="INFO">${output} = {"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221028 04:10:59.757" endtime="20221028 04:10:59.772"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221028 04:10:59.774" level="INFO">{"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221028 04:10:59.773" endtime="20221028 04:10:59.774"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221028 04:10:59.774" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221028 04:10:59.774" endtime="20221028 04:10:59.774"/>
</kw>
<status status="PASS" starttime="20221028 04:10:59.756" endtime="20221028 04:10:59.775"/>
</kw>
<msg timestamp="20221028 04:10:59.775" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221028 04:10:59.756" endtime="20221028 04:10:59.775"/>
</kw>
<msg timestamp="20221028 04:10:59.776" level="INFO">${result} = {"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221028 04:10:59.756" endtime="20221028 04:10:59.776"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20221028 04:10:59.777" level="FAIL">'{"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20221028 04:10:59.776" endtime="20221028 04:10:59.777"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221028 04:10:59.777" endtime="20221028 04:10:59.777"/>
</kw>
<status status="FAIL" starttime="20221028 04:10:59.755" endtime="20221028 04:10:59.778"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221028 04:11:09.783" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-nxaks 2&gt;&amp;1'.</msg>
<msg timestamp="20221028 04:11:09.800" level="INFO">${rc} = 0</msg>
<msg timestamp="20221028 04:11:09.800" level="INFO">${output} = {"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221028 04:11:09.781" endtime="20221028 04:11:09.800"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221028 04:11:09.801" level="INFO">{"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221028 04:11:09.801" endtime="20221028 04:11:09.801"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221028 04:11:09.802" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221028 04:11:09.802" endtime="20221028 04:11:09.802"/>
</kw>
<status status="PASS" starttime="20221028 04:11:09.781" endtime="20221028 04:11:09.802"/>
</kw>
<msg timestamp="20221028 04:11:09.802" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221028 04:11:09.780" endtime="20221028 04:11:09.803"/>
</kw>
<msg timestamp="20221028 04:11:09.803" level="INFO">${result} = {"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221028 04:11:09.780" endtime="20221028 04:11:09.803"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20221028 04:11:09.804" level="FAIL">'{"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20221028 04:11:09.803" endtime="20221028 04:11:09.804"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221028 04:11:09.805" endtime="20221028 04:11:09.805"/>
</kw>
<status status="FAIL" starttime="20221028 04:11:09.779" endtime="20221028 04:11:09.805"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221028 04:11:19.810" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-nxaks 2&gt;&amp;1'.</msg>
<msg timestamp="20221028 04:11:19.825" level="INFO">${rc} = 0</msg>
<msg timestamp="20221028 04:11:19.825" level="INFO">${output} = {"type":"VOLUME","numVolume":-1,"numBucket":1,"numDir":2,"numKey":2,"status":"OK"}</msg>
<status status="PASS" starttime="20221028 04:11:19.808" endtime="20221028 04:11:19.825"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221028 04:11:19.827" level="INFO">{"type":"VOLUME","numVolume":-1,"numBucket":1,"numDir":2,"numKey":2,"status":"OK"}</msg>
<status status="PASS" starttime="20221028 04:11:19.826" endtime="20221028 04:11:19.827"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221028 04:11:19.827" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221028 04:11:19.827" endtime="20221028 04:11:19.827"/>
</kw>
<status status="PASS" starttime="20221028 04:11:19.808" endtime="20221028 04:11:19.828"/>
</kw>
<msg timestamp="20221028 04:11:19.828" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221028 04:11:19.807" endtime="20221028 04:11:19.828"/>
</kw>
<msg timestamp="20221028 04:11:19.829" level="INFO">${result} = {"type":"VOLUME","numVolume":-1,"numBucket":1,"numDir":2,"numKey":2,"status":"OK"}</msg>
<status status="PASS" starttime="20221028 04:11:19.807" endtime="20221028 04:11:19.829"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221028 04:11:19.829" endtime="20221028 04:11:19.829"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221028 04:11:19.829" endtime="20221028 04:11:19.830"/>
</kw>
<status status="PASS" starttime="20221028 04:11:19.806" endtime="20221028 04:11:19.830"/>
</kw>
<status status="PASS" starttime="20221028 04:10:39.705" endtime="20221028 04:11:19.830"/>
</kw>
<status status="PASS" starttime="20221028 04:10:39.705" endtime="20221028 04:11:19.830"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221028 04:10:39.704" endtime="20221028 04:11:19.831"/>
</test>
<test id="s1-s2-s2-t10" name="Check Recon Namespace Summary Bucket" line="128">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}</arg>
<arg>BUCKET</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221028 04:11:19.838" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-nxaks/buc-oqray 2&gt;&amp;1'.</msg>
<msg timestamp="20221028 04:11:19.860" level="INFO">${rc} = 0</msg>
<msg timestamp="20221028 04:11:19.860" level="INFO">${output} = {"type":"BUCKET","numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2,"status":"OK"}</msg>
<status status="PASS" starttime="20221028 04:11:19.835" endtime="20221028 04:11:19.860"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221028 04:11:19.861" level="INFO">{"type":"BUCKET","numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2,"status":"OK"}</msg>
<status status="PASS" starttime="20221028 04:11:19.861" endtime="20221028 04:11:19.861"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221028 04:11:19.862" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221028 04:11:19.862" endtime="20221028 04:11:19.862"/>
</kw>
<status status="PASS" starttime="20221028 04:11:19.835" endtime="20221028 04:11:19.862"/>
</kw>
<msg timestamp="20221028 04:11:19.863" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221028 04:11:19.834" endtime="20221028 04:11:19.863"/>
</kw>
<msg timestamp="20221028 04:11:19.863" level="INFO">${result} = {"type":"BUCKET","numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2,"status":"OK"}</msg>
<status status="PASS" starttime="20221028 04:11:19.834" endtime="20221028 04:11:19.863"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221028 04:11:19.863" endtime="20221028 04:11:19.864"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221028 04:11:19.864" endtime="20221028 04:11:19.864"/>
</kw>
<status status="PASS" starttime="20221028 04:11:19.833" endtime="20221028 04:11:19.864"/>
</kw>
<status status="PASS" starttime="20221028 04:11:19.833" endtime="20221028 04:11:19.865"/>
</kw>
<status status="PASS" starttime="20221028 04:11:19.832" endtime="20221028 04:11:19.865"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221028 04:11:19.831" endtime="20221028 04:11:19.865"/>
</test>
<test id="s1-s2-s2-t11" name="Check Recon Namespace Summary Key" line="131">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/file1</arg>
<arg>KEY</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221028 04:11:19.872" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-nxaks/buc-oqray/file1 2&gt;&amp;1'.</msg>
<msg timestamp="20221028 04:11:19.890" level="INFO">${rc} = 0</msg>
<msg timestamp="20221028 04:11:19.890" level="INFO">${output} = {"type":"KEY","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"OK"}</msg>
<status status="PASS" starttime="20221028 04:11:19.870" endtime="20221028 04:11:19.890"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221028 04:11:19.891" level="INFO">{"type":"KEY","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"OK"}</msg>
<status status="PASS" starttime="20221028 04:11:19.891" endtime="20221028 04:11:19.891"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221028 04:11:19.892" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221028 04:11:19.892" endtime="20221028 04:11:19.892"/>
</kw>
<status status="PASS" starttime="20221028 04:11:19.869" endtime="20221028 04:11:19.892"/>
</kw>
<msg timestamp="20221028 04:11:19.893" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221028 04:11:19.869" endtime="20221028 04:11:19.893"/>
</kw>
<msg timestamp="20221028 04:11:19.893" level="INFO">${result} = {"type":"KEY","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"OK"}</msg>
<status status="PASS" starttime="20221028 04:11:19.868" endtime="20221028 04:11:19.893"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221028 04:11:19.893" endtime="20221028 04:11:19.894"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221028 04:11:19.894" endtime="20221028 04:11:19.894"/>
</kw>
<status status="PASS" starttime="20221028 04:11:19.868" endtime="20221028 04:11:19.894"/>
</kw>
<status status="PASS" starttime="20221028 04:11:19.868" endtime="20221028 04:11:19.894"/>
</kw>
<status status="PASS" starttime="20221028 04:11:19.867" endtime="20221028 04:11:19.895"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221028 04:11:19.866" endtime="20221028 04:11:19.895"/>
</test>
<test id="s1-s2-s2-t12" name="Check Recon Namespace Summary Directory" line="134">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET_LAYOUT}' == 'LEGACY'</arg>
<arg>Wait For Summary</arg>
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2/</arg>
<arg>DIRECTORY</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221028 04:11:19.897" endtime="20221028 04:11:19.897"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET_LAYOUT}' == 'FILE_SYSTEM_OPTIMIZED'</arg>
<arg>Wait For Summary</arg>
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2</arg>
<arg>DIRECTORY</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2</arg>
<arg>DIRECTORY</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221028 04:11:19.903" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-nxaks/buc-oqray/dir1/dir2 2&gt;&amp;1'.</msg>
<msg timestamp="20221028 04:11:19.917" level="INFO">${rc} = 0</msg>
<msg timestamp="20221028 04:11:19.918" level="INFO">${output} = {"type":"DIRECTORY","numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1,"status":"OK"}</msg>
<status status="PASS" starttime="20221028 04:11:19.901" endtime="20221028 04:11:19.918"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221028 04:11:19.919" level="INFO">{"type":"DIRECTORY","numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1,"status":"OK"}</msg>
<status status="PASS" starttime="20221028 04:11:19.918" endtime="20221028 04:11:19.919"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221028 04:11:19.919" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221028 04:11:19.919" endtime="20221028 04:11:19.919"/>
</kw>
<status status="PASS" starttime="20221028 04:11:19.900" endtime="20221028 04:11:19.920"/>
</kw>
<msg timestamp="20221028 04:11:19.920" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221028 04:11:19.899" endtime="20221028 04:11:19.921"/>
</kw>
<msg timestamp="20221028 04:11:19.921" level="INFO">${result} = {"type":"DIRECTORY","numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1,"status":"OK"}</msg>
<status status="PASS" starttime="20221028 04:11:19.899" endtime="20221028 04:11:19.921"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221028 04:11:19.921" endtime="20221028 04:11:19.921"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221028 04:11:19.922" endtime="20221028 04:11:19.922"/>
</kw>
<status status="PASS" starttime="20221028 04:11:19.898" endtime="20221028 04:11:19.922"/>
</kw>
<status status="PASS" starttime="20221028 04:11:19.898" endtime="20221028 04:11:19.922"/>
</kw>
<status status="PASS" starttime="20221028 04:11:19.897" endtime="20221028 04:11:19.922"/>
</kw>
<status status="PASS" starttime="20221028 04:11:19.897" endtime="20221028 04:11:19.922"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221028 04:11:19.896" endtime="20221028 04:11:19.923"/>
</test>
<test id="s1-s2-s2-t13" name="Check Recon Namespace Disk Usage" line="138">
<kw name="Wait For Summary">
<arg>${DISK_USAGE_URL}?path=/${VOLUME}/${BUCKET}&amp;files=true&amp;replica=true</arg>
<arg>\"sizeWithReplica\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221028 04:11:19.929" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/du?path=/vol-nxaks/buc-oqray&amp;files=true&amp;replica=true 2&gt;&amp;1'.</msg>
<msg timestamp="20221028 04:11:19.943" level="INFO">${rc} = 0</msg>
<msg timestamp="20221028 04:11:19.943" level="INFO">${output} = {"status":"OK","path":"/vol-nxaks/buc-oqray","size":9917,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-nxaks/buc-oqray/dir1","size":6038,"sizeWithReplica":-1,"isKey":fals...</msg>
<status status="PASS" starttime="20221028 04:11:19.927" endtime="20221028 04:11:19.943"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221028 04:11:19.944" level="INFO">{"status":"OK","path":"/vol-nxaks/buc-oqray","size":9917,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-nxaks/buc-oqray/dir1","size":6038,"sizeWithReplica":-1,"isKey":false}],"sizeDirectKey":3879}</msg>
<status status="PASS" starttime="20221028 04:11:19.943" endtime="20221028 04:11:19.944"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221028 04:11:19.945" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221028 04:11:19.944" endtime="20221028 04:11:19.945"/>
</kw>
<status status="PASS" starttime="20221028 04:11:19.926" endtime="20221028 04:11:19.945"/>
</kw>
<msg timestamp="20221028 04:11:19.945" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221028 04:11:19.926" endtime="20221028 04:11:19.946"/>
</kw>
<msg timestamp="20221028 04:11:19.946" level="INFO">${result} = {"status":"OK","path":"/vol-nxaks/buc-oqray","size":9917,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-nxaks/buc-oqray/dir1","size":6038,"sizeWithReplica":-1,"isKey":fals...</msg>
<status status="PASS" starttime="20221028 04:11:19.925" endtime="20221028 04:11:19.946"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221028 04:11:19.946" endtime="20221028 04:11:19.947"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221028 04:11:19.947" endtime="20221028 04:11:19.947"/>
</kw>
<status status="PASS" starttime="20221028 04:11:19.925" endtime="20221028 04:11:19.947"/>
</kw>
<status status="PASS" starttime="20221028 04:11:19.925" endtime="20221028 04:11:19.947"/>
</kw>
<status status="PASS" starttime="20221028 04:11:19.924" endtime="20221028 04:11:19.947"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221028 04:11:19.923" endtime="20221028 04:11:19.948"/>
</test>
<test id="s1-s2-s2-t14" name="Check Recon Namespace Volume Quota Usage" line="141">
<kw name="Wait For Summary">
<arg>${QUOTA_USAGE_URL}?path=/${VOLUME}</arg>
<arg>\"used\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221028 04:11:19.956" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/quota?path=/vol-nxaks 2&gt;&amp;1'.</msg>
<msg timestamp="20221028 04:11:19.972" level="INFO">${rc} = 0</msg>
<msg timestamp="20221028 04:11:19.972" level="INFO">${output} = {"allowed":-1,"used":9917,"status":"OK"}</msg>
<status status="PASS" starttime="20221028 04:11:19.953" endtime="20221028 04:11:19.972"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221028 04:11:19.973" level="INFO">{"allowed":-1,"used":9917,"status":"OK"}</msg>
<status status="PASS" starttime="20221028 04:11:19.972" endtime="20221028 04:11:19.973"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221028 04:11:19.974" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221028 04:11:19.973" endtime="20221028 04:11:19.974"/>
</kw>
<status status="PASS" starttime="20221028 04:11:19.952" endtime="20221028 04:11:19.974"/>
</kw>
<msg timestamp="20221028 04:11:19.974" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221028 04:11:19.952" endtime="20221028 04:11:19.975"/>
</kw>
<msg timestamp="20221028 04:11:19.975" level="INFO">${result} = {"allowed":-1,"used":9917,"status":"OK"}</msg>
<status status="PASS" starttime="20221028 04:11:19.951" endtime="20221028 04:11:19.975"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221028 04:11:19.975" endtime="20221028 04:11:19.975"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221028 04:11:19.975" endtime="20221028 04:11:19.976"/>
</kw>
<status status="PASS" starttime="20221028 04:11:19.950" endtime="20221028 04:11:19.976"/>
</kw>
<status status="PASS" starttime="20221028 04:11:19.950" endtime="20221028 04:11:19.976"/>
</kw>
<status status="PASS" starttime="20221028 04:11:19.949" endtime="20221028 04:11:19.976"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221028 04:11:19.948" endtime="20221028 04:11:19.976"/>
</test>
<test id="s1-s2-s2-t15" name="Check Recon Namespace Bucket Quota Usage" line="144">
<kw name="Wait For Summary">
<arg>${QUOTA_USAGE_URL}?path=/${VOLUME}/${BUCKET}</arg>
<arg>\"used\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221028 04:11:19.983" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/quota?path=/vol-nxaks/buc-oqray 2&gt;&amp;1'.</msg>
<msg timestamp="20221028 04:11:20.006" level="INFO">${rc} = 0</msg>
<msg timestamp="20221028 04:11:20.006" level="INFO">${output} = {"allowed":-1,"used":9917,"status":"OK"}</msg>
<status status="PASS" starttime="20221028 04:11:19.981" endtime="20221028 04:11:20.006"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221028 04:11:20.007" level="INFO">{"allowed":-1,"used":9917,"status":"OK"}</msg>
<status status="PASS" starttime="20221028 04:11:20.007" endtime="20221028 04:11:20.008"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221028 04:11:20.008" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221028 04:11:20.008" endtime="20221028 04:11:20.008"/>
</kw>
<status status="PASS" starttime="20221028 04:11:19.980" endtime="20221028 04:11:20.009"/>
</kw>
<msg timestamp="20221028 04:11:20.009" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221028 04:11:19.980" endtime="20221028 04:11:20.009"/>
</kw>
<msg timestamp="20221028 04:11:20.009" level="INFO">${result} = {"allowed":-1,"used":9917,"status":"OK"}</msg>
<status status="PASS" starttime="20221028 04:11:19.979" endtime="20221028 04:11:20.009"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221028 04:11:20.010" endtime="20221028 04:11:20.010"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221028 04:11:20.010" endtime="20221028 04:11:20.010"/>
</kw>
<status status="PASS" starttime="20221028 04:11:19.979" endtime="20221028 04:11:20.011"/>
</kw>
<status status="PASS" starttime="20221028 04:11:19.979" endtime="20221028 04:11:20.011"/>
</kw>
<status status="PASS" starttime="20221028 04:11:19.978" endtime="20221028 04:11:20.011"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221028 04:11:19.977" endtime="20221028 04:11:20.011"/>
</test>
<test id="s1-s2-s2-t16" name="Check Recon Namespace File Size Distribution Root" line="147">
<kw name="Wait For Summary">
<arg>${FILE_SIZE_DIST_URL}?path=/</arg>
<arg>\"dist\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221028 04:11:20.020" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221028 04:11:20.034" level="INFO">${rc} = 0</msg>
<msg timestamp="20221028 04:11:20.034" level="INFO">${output} = {"dist":[0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20221028 04:11:20.017" endtime="20221028 04:11:20.034"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221028 04:11:20.035" level="INFO">{"dist":[0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20221028 04:11:20.035" endtime="20221028 04:11:20.035"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221028 04:11:20.036" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221028 04:11:20.036" endtime="20221028 04:11:20.036"/>
</kw>
<status status="PASS" starttime="20221028 04:11:20.017" endtime="20221028 04:11:20.036"/>
</kw>
<msg timestamp="20221028 04:11:20.036" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221028 04:11:20.016" endtime="20221028 04:11:20.037"/>
</kw>
<msg timestamp="20221028 04:11:20.037" level="INFO">${result} = {"dist":[0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20221028 04:11:20.016" endtime="20221028 04:11:20.037"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221028 04:11:20.038" endtime="20221028 04:11:20.038"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221028 04:11:20.038" endtime="20221028 04:11:20.039"/>
</kw>
<status status="PASS" starttime="20221028 04:11:20.015" endtime="20221028 04:11:20.039"/>
</kw>
<status status="PASS" starttime="20221028 04:11:20.015" endtime="20221028 04:11:20.039"/>
</kw>
<status status="PASS" starttime="20221028 04:11:20.014" endtime="20221028 04:11:20.039"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221028 04:11:20.013" endtime="20221028 04:11:20.039"/>
</test>
<doc>Smoke test for Recon Namespace Summary Endpoint for FILE_SYSTEM_OPTIMIZED buckets.</doc>
<status status="PASS" starttime="20221028 04:10:21.375" endtime="20221028 04:11:20.040"/>
</suite>
<status status="PASS" starttime="20221028 04:09:22.151" endtime="20221028 04:11:20.043"/>
</suite>
<suite id="s1-s3" name="Loaddata" source="/opt/hadoop/smoketest/topology/loaddata.robot">
<test id="s1-s3-t1" name="Create a volume, bucket and key" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create topvol1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221028 04:11:24.909" level="INFO">Running command 'ozone sh volume create topvol1 2&gt;&amp;1'.</msg>
<msg timestamp="20221028 04:11:28.226" level="INFO">${rc} = 0</msg>
<msg timestamp="20221028 04:11:28.226" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221028 04:11:24.905" endtime="20221028 04:11:28.226"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221028 04:11:28.228" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221028 04:11:28.227" endtime="20221028 04:11:28.228"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221028 04:11:28.228" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221028 04:11:28.228" endtime="20221028 04:11:28.228"/>
</kw>
<status status="PASS" starttime="20221028 04:11:24.905" endtime="20221028 04:11:28.229"/>
</kw>
<msg timestamp="20221028 04:11:28.229" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221028 04:11:24.905" endtime="20221028 04:11:28.230"/>
</kw>
<msg timestamp="20221028 04:11:28.230" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221028 04:11:24.904" endtime="20221028 04:11:28.230"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20221028 04:11:28.230" endtime="20221028 04:11:28.231"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /topvol1/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221028 04:11:28.234" level="INFO">Running command 'ozone sh bucket create /topvol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20221028 04:11:31.637" level="INFO">${rc} = 0</msg>
<msg timestamp="20221028 04:11:31.637" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221028 04:11:28.232" endtime="20221028 04:11:31.637"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221028 04:11:31.638" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221028 04:11:31.637" endtime="20221028 04:11:31.638"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221028 04:11:31.639" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221028 04:11:31.638" endtime="20221028 04:11:31.639"/>
</kw>
<status status="PASS" starttime="20221028 04:11:28.232" endtime="20221028 04:11:31.639"/>
</kw>
<msg timestamp="20221028 04:11:31.639" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221028 04:11:28.231" endtime="20221028 04:11:31.639"/>
</kw>
<msg timestamp="20221028 04:11:31.640" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221028 04:11:28.231" endtime="20221028 04:11:31.640"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20221028 04:11:31.640" endtime="20221028 04:11:31.640"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221028 04:11:31.644" level="INFO">Running command 'ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20221028 04:11:37.344" level="INFO">${rc} = 0</msg>
<msg timestamp="20221028 04:11:37.345" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221028 04:11:31.641" endtime="20221028 04:11:37.345"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221028 04:11:37.346" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221028 04:11:37.345" endtime="20221028 04:11:37.346"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221028 04:11:37.347" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221028 04:11:37.346" endtime="20221028 04:11:37.347"/>
</kw>
<status status="PASS" starttime="20221028 04:11:31.641" endtime="20221028 04:11:37.347"/>
</kw>
<msg timestamp="20221028 04:11:37.347" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221028 04:11:31.641" endtime="20221028 04:11:37.347"/>
</kw>
<msg timestamp="20221028 04:11:37.348" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221028 04:11:31.640" endtime="20221028 04:11:37.348"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20221028 04:11:37.348" endtime="20221028 04:11:37.348"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221028 04:11:24.903" endtime="20221028 04:11:37.348"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20221028 04:11:24.859" endtime="20221028 04:11:37.350"/>
</suite>
<suite id="s1-s4" name="readdata-first-half" source="/opt/hadoop/smoketest/topology/readdata.robot">
<test id="s1-s4-t1" name="Read data from previously created key" line="27">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20221028 04:11:46.077" level="INFO">${random} = 50599</msg>
<status status="PASS" starttime="20221028 04:11:46.076" endtime="20221028 04:11:46.077"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221028 04:11:46.082" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-50599 2&gt;&amp;1'.</msg>
<msg timestamp="20221028 04:12:50.821" level="INFO">${rc} = 0</msg>
<msg timestamp="20221028 04:12:50.821" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221028 04:11:46.079" endtime="20221028 04:12:50.821"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221028 04:12:50.822" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221028 04:12:50.821" endtime="20221028 04:12:50.822"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221028 04:12:50.823" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221028 04:12:50.822" endtime="20221028 04:12:50.823"/>
</kw>
<status status="PASS" starttime="20221028 04:11:46.078" endtime="20221028 04:12:50.823"/>
</kw>
<msg timestamp="20221028 04:12:50.823" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221028 04:11:46.078" endtime="20221028 04:12:50.824"/>
</kw>
<msg timestamp="20221028 04:12:50.825" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221028 04:11:46.077" endtime="20221028 04:12:50.825"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20221028 04:12:50.825" endtime="20221028 04:12:50.825"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221028 04:11:46.076" endtime="20221028 04:12:50.825"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20221028 04:11:46.029" endtime="20221028 04:12:50.826"/>
</suite>
<suite id="s1-s5" name="readdata-second-half" source="/opt/hadoop/smoketest/topology/readdata.robot">
<test id="s1-s5-t1" name="Read data from previously created key" line="27">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20221028 04:13:24.707" level="INFO">${random} = 10420</msg>
<status status="PASS" starttime="20221028 04:13:24.707" endtime="20221028 04:13:24.707"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221028 04:13:24.712" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-10420 2&gt;&amp;1'.</msg>
<msg timestamp="20221028 04:13:30.360" level="INFO">${rc} = 0</msg>
<msg timestamp="20221028 04:13:30.360" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221028 04:13:24.709" endtime="20221028 04:13:30.360"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221028 04:13:30.362" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221028 04:13:30.361" endtime="20221028 04:13:30.362"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221028 04:13:30.362" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221028 04:13:30.362" endtime="20221028 04:13:30.362"/>
</kw>
<status status="PASS" starttime="20221028 04:13:24.708" endtime="20221028 04:13:30.363"/>
</kw>
<msg timestamp="20221028 04:13:30.363" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221028 04:13:24.708" endtime="20221028 04:13:30.364"/>
</kw>
<msg timestamp="20221028 04:13:30.364" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221028 04:13:24.707" endtime="20221028 04:13:30.364"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20221028 04:13:30.364" endtime="20221028 04:13:30.365"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221028 04:13:24.706" endtime="20221028 04:13:30.365"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20221028 04:13:24.663" endtime="20221028 04:13:30.366"/>
</suite>
<suite id="s1-s6" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s6-t1" name="Check webui static resources" line="29">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221028 04:08:42.385" endtime="20221028 04:08:42.385"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -s -I http://${SCM}:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221028 04:08:42.390" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20221028 04:08:42.502" level="INFO">${rc} = 0</msg>
<msg timestamp="20221028 04:08:42.502" level="INFO">${output} = HTTP/1.1 200 OK
Date: Fri, 28 Oct 2022 04:08:42 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Fri, 28 Oct 2022 03:43:36 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20221028 04:08:42.386" endtime="20221028 04:08:42.502"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221028 04:08:42.503" level="INFO">HTTP/1.1 200 OK
Date: Fri, 28 Oct 2022 04:08:42 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Fri, 28 Oct 2022 03:43:36 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20221028 04:08:42.503" endtime="20221028 04:08:42.504"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221028 04:08:42.504" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221028 04:08:42.504" endtime="20221028 04:08:42.504"/>
</kw>
<status status="PASS" starttime="20221028 04:08:42.386" endtime="20221028 04:08:42.504"/>
</kw>
<msg timestamp="20221028 04:08:42.504" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221028 04:08:42.386" endtime="20221028 04:08:42.506"/>
</kw>
<msg timestamp="20221028 04:08:42.506" level="INFO">${result} = HTTP/1.1 200 OK
Date: Fri, 28 Oct 2022 04:08:42 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Fri, 28 Oct 2022 03:43:36 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20221028 04:08:42.385" endtime="20221028 04:08:42.506"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221028 04:08:42.506" endtime="20221028 04:08:42.506"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221028 04:08:42.384" endtime="20221028 04:08:42.507"/>
</test>
<test id="s1-s6-t2" name="Basic Freon smoketest" line="34">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221028 04:08:42.510" endtime="20221028 04:08:42.511"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>10</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20221028 04:08:42.511" level="INFO">${random} = IoZlujuyxz</msg>
<status status="PASS" starttime="20221028 04:08:42.511" endtime="20221028 04:08:42.511"/>
</kw>
<kw name="Freon OCKG" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221028 04:08:42.516" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p IoZlujuyxz  2&gt;&amp;1'.</msg>
<msg timestamp="20221028 04:08:51.382" level="INFO">${rc} = 0</msg>
<msg timestamp="20221028 04:08:51.382" level="INFO">${output} = 2022-10-28 04:08:44,491 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-28 04:08:44,581 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221028 04:08:42.514" endtime="20221028 04:08:51.382"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221028 04:08:51.385" level="INFO">2022-10-28 04:08:44,491 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-28 04:08:44,581 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-10-28 04:08:44,581 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-10-28 04:08:44,785 [main] INFO freon.BaseFreonGenerator: Executing test with prefix IoZlujuyxz and number-of-tests 1
2022-10-28 04:08:44,848 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-28 04:08:45,851 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-28 04:08:46,686 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2022-10-28 04:08:46,843 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false 
2022-10-28 04:08:46,852 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-28 04:08:47,852 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-28 04:08:48,023 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-10-28 04:08:48,306 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-10-28 04:08:48,852 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-28 04:08:49,853 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-28 04:08:50,853 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-10-28 04:08:51,019 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=3352.830796, max=3352.830796, mean=3352.830796, stddev=0.0, median=3352.830796, p75=3352.830796, p95=3352.830796, p98=3352.830796, p99=3352.830796, p999=3352.830796, mean_rate=0.24370566773959454, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-10-28 04:08:51,019 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 6
2022-10-28 04:08:51,026 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-10-28 04:08:51,026 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20221028 04:08:51.384" endtime="20221028 04:08:51.385"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221028 04:08:51.386" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221028 04:08:51.385" endtime="20221028 04:08:51.386"/>
</kw>
<status status="PASS" starttime="20221028 04:08:42.514" endtime="20221028 04:08:51.386"/>
</kw>
<msg timestamp="20221028 04:08:51.386" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221028 04:08:42.513" endtime="20221028 04:08:51.387"/>
</kw>
<msg timestamp="20221028 04:08:51.387" level="INFO">${result} = 2022-10-28 04:08:44,491 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-28 04:08:44,581 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221028 04:08:42.513" endtime="20221028 04:08:51.387"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221028 04:08:51.387" endtime="20221028 04:08:51.388"/>
</kw>
<status status="PASS" starttime="20221028 04:08:42.512" endtime="20221028 04:08:51.388"/>
</kw>
<kw name="Freon OCKV" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221028 04:08:51.393" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p IoZlujuyxz  2&gt;&amp;1'.</msg>
<msg timestamp="20221028 04:08:58.681" level="INFO">${rc} = 0</msg>
<msg timestamp="20221028 04:08:58.681" level="INFO">${output} = 2022-10-28 04:08:53,529 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-28 04:08:53,708 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221028 04:08:51.391" endtime="20221028 04:08:58.681"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221028 04:08:58.682" level="INFO">2022-10-28 04:08:53,529 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-28 04:08:53,708 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-10-28 04:08:53,708 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-10-28 04:08:53,914 [main] INFO freon.BaseFreonGenerator: Executing test with prefix IoZlujuyxz and number-of-tests 1
2022-10-28 04:08:54,017 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-28 04:08:55,019 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-28 04:08:56,019 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-28 04:08:56,252 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-10-28 04:08:57,019 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-28 04:08:58,020 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-10-28 04:08:58,328 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=50.725271, max=50.725271, mean=50.725271, stddev=0.0, median=50.725271, p75=50.725271, p95=50.725271, p98=50.725271, p99=50.725271, p999=50.725271, mean_rate=0.9356329742232387, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-10-28 04:08:58,329 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 4
2022-10-28 04:08:58,329 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-10-28 04:08:58,329 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20221028 04:08:58.682" endtime="20221028 04:08:58.683"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221028 04:08:58.683" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221028 04:08:58.683" endtime="20221028 04:08:58.683"/>
</kw>
<status status="PASS" starttime="20221028 04:08:51.390" endtime="20221028 04:08:58.684"/>
</kw>
<msg timestamp="20221028 04:08:58.684" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221028 04:08:51.390" endtime="20221028 04:08:58.684"/>
</kw>
<msg timestamp="20221028 04:08:58.684" level="INFO">${result} = 2022-10-28 04:08:53,529 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-28 04:08:53,708 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221028 04:08:51.389" endtime="20221028 04:08:58.684"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221028 04:08:58.685" endtime="20221028 04:08:58.685"/>
</kw>
<status status="PASS" starttime="20221028 04:08:51.388" endtime="20221028 04:08:58.685"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221028 04:08:42.508" endtime="20221028 04:08:58.685"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20221028 04:08:42.333" endtime="20221028 04:08:58.687"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="230605"/>
</suite>
<statistics>
<total>
<stat pass="32" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="32" fail="0" skip="0" id="s1" name="ozone-topology">ozone-topology</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1" name="Cli">ozone-topology.Cli</stat>
<stat pass="23" fail="0" skip="0" id="s1-s2" name="Recon">ozone-topology.Recon</stat>
<stat pass="7" fail="0" skip="0" id="s1-s2-s1" name="Recon-Api">ozone-topology.Recon.Recon-Api</stat>
<stat pass="16" fail="0" skip="0" id="s1-s2-s2" name="Recon-Nssummary">ozone-topology.Recon.Recon-Nssummary</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3" name="Loaddata">ozone-topology.Loaddata</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="readdata-first-half">ozone-topology.readdata-first-half</stat>
<stat pass="1" fail="0" skip="0" id="s1-s5" name="readdata-second-half">ozone-topology.readdata-second-half</stat>
<stat pass="2" fail="0" skip="0" id="s1-s6" name="Basic">ozone-topology.Basic</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
