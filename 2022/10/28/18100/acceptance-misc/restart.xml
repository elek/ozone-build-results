<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.0 (Python 3.8.10 on linux)" generated="20221028 04:23:44.091" rpa="false" schemaversion="3">
<suite id="s1" name="restart">
<suite id="s1-s1" name="Validate" source="/opt/hadoop/smoketest/freon/validate.robot">
<test id="s1-s1-t1" name="Ozone Client Key Validator" line="25">
<kw name="Freon OCKV" library="freon">
<arg>prefix=ockg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221028 04:20:54.195" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p ockgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20221028 04:20:59.279" level="INFO">${rc} = 0</msg>
<msg timestamp="20221028 04:20:59.279" level="INFO">${output} = 2022-10-28 04:20:55,546 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-28 04:20:55,663 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221028 04:20:54.191" endtime="20221028 04:20:59.280"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221028 04:20:59.281" level="INFO">2022-10-28 04:20:55,546 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-28 04:20:55,663 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-10-28 04:20:55,663 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-10-28 04:20:55,811 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpre and number-of-tests 1
2022-10-28 04:20:55,879 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-28 04:20:56,888 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-28 04:20:57,108 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-10-28 04:20:57,888 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-28 04:20:58,889 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-10-28 04:20:58,917 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=39.109461, max=39.109461, mean=39.109461, stddev=0.0, median=39.109461, p75=39.109461, p95=39.109461, p98=39.109461, p99=39.109461, p999=39.109461, mean_rate=0.9679082424147681, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-10-28 04:20:58,917 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2022-10-28 04:20:58,918 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-10-28 04:20:58,918 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20221028 04:20:59.280" endtime="20221028 04:20:59.281"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221028 04:20:59.281" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221028 04:20:59.281" endtime="20221028 04:20:59.281"/>
</kw>
<status status="PASS" starttime="20221028 04:20:54.191" endtime="20221028 04:20:59.282"/>
</kw>
<msg timestamp="20221028 04:20:59.282" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221028 04:20:54.190" endtime="20221028 04:20:59.283"/>
</kw>
<msg timestamp="20221028 04:20:59.283" level="INFO">${result} = 2022-10-28 04:20:55,546 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-28 04:20:55,663 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221028 04:20:54.190" endtime="20221028 04:20:59.283"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221028 04:20:59.284" endtime="20221028 04:20:59.284"/>
</kw>
<status status="PASS" starttime="20221028 04:20:54.188" endtime="20221028 04:20:59.284"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221028 04:20:54.188" endtime="20221028 04:20:59.285"/>
</test>
<doc>Test freon data validation commands</doc>
<status status="PASS" starttime="20221028 04:20:54.143" endtime="20221028 04:20:59.286"/>
</suite>
<suite id="s1-s2" name="Generate-Chunk" source="/opt/hadoop/smoketest/freon/generate-chunk.robot">
<test id="s1-s2-t1" name="DN Chunk Generator" line="25">
<kw name="Freon DCG" library="freon">
<arg>prefix=dcg${PREFIX}</arg>
<arg>n=100</arg>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20221028 04:21:03.722" endtime="20221028 04:21:03.722"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon dcg -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221028 04:21:03.727" level="INFO">Running command 'ozone freon dcg -t 1 -n100 -p dcgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20221028 04:21:10.370" level="INFO">${rc} = 0</msg>
<msg timestamp="20221028 04:21:10.370" level="INFO">${output} = 2022-10-28 04:21:05,064 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-28 04:21:05,164 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221028 04:21:03.723" endtime="20221028 04:21:10.370"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221028 04:21:10.371" level="INFO">2022-10-28 04:21:05,064 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-28 04:21:05,164 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-10-28 04:21:05,165 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-10-28 04:21:05,749 [main] INFO freon.BaseFreonGenerator: Executing test with prefix dcgpre and number-of-tests 100
2022-10-28 04:21:05,782 [Thread-4] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-10-28 04:21:06,210 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-10-28 04:21:06,476 [pool-3-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-10-28 04:21:06,783 [Thread-4] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-10-28 04:21:07,783 [Thread-4] INFO freon.ProgressBar: Progress: 28.00 % (28 out of 100)
2022-10-28 04:21:08,784 [Thread-4] INFO freon.ProgressBar: Progress: 89.00 % (89 out of 100)
2022-10-28 04:21:09,784 [Thread-4] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2022-10-28 04:21:09,925 [shutdown-hook-0] INFO metrics: type=TIMER, name=chunk-write, count=100, min=7.868248, max=775.278572, mean=24.89652216761687, stddev=75.30824541161863, median=16.318206, p75=19.434066, p95=29.24865, p98=38.769329, p99=44.863043, p999=775.278572, mean_rate=28.070487022972305, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-10-28 04:21:09,925 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 4
2022-10-28 04:21:09,929 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-10-28 04:21:09,929 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20221028 04:21:10.370" endtime="20221028 04:21:10.371"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221028 04:21:10.372" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221028 04:21:10.371" endtime="20221028 04:21:10.372"/>
</kw>
<status status="PASS" starttime="20221028 04:21:03.723" endtime="20221028 04:21:10.372"/>
</kw>
<msg timestamp="20221028 04:21:10.372" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221028 04:21:03.723" endtime="20221028 04:21:10.374"/>
</kw>
<msg timestamp="20221028 04:21:10.374" level="INFO">${result} = 2022-10-28 04:21:05,064 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-28 04:21:05,164 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221028 04:21:03.722" endtime="20221028 04:21:10.374"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221028 04:21:10.374" endtime="20221028 04:21:10.375"/>
</kw>
<status status="PASS" starttime="20221028 04:21:03.720" endtime="20221028 04:21:10.375"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221028 04:21:03.719" endtime="20221028 04:21:10.375"/>
</test>
<doc>Test freon chunk generation commands</doc>
<status status="PASS" starttime="20221028 04:21:03.677" endtime="20221028 04:21:10.381"/>
</suite>
<suite id="s1-s3" name="Validate-Chunk" source="/opt/hadoop/smoketest/freon/validate-chunk.robot">
<test id="s1-s3-t1" name="DN Chunk Validator" line="25">
<kw name="Freon DCV" library="freon">
<arg>prefix=dcg${PREFIX}</arg>
<arg>n=100</arg>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20221028 04:21:14.746" endtime="20221028 04:21:14.746"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon dcv -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221028 04:21:14.751" level="INFO">Running command 'ozone freon dcv -t 1 -n100 -p dcgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20221028 04:21:19.487" level="INFO">${rc} = 0</msg>
<msg timestamp="20221028 04:21:19.487" level="INFO">${output} = 2022-10-28 04:21:16,032 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-28 04:21:16,203 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221028 04:21:14.748" endtime="20221028 04:21:19.487"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221028 04:21:19.489" level="INFO">2022-10-28 04:21:16,032 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-28 04:21:16,203 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-10-28 04:21:16,203 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-10-28 04:21:16,348 [main] INFO freon.BaseFreonGenerator: Executing test with prefix dcgpre and number-of-tests 100
2022-10-28 04:21:16,412 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-10-28 04:21:16,816 [main] INFO freon.DatanodeChunkValidator: Using pipeline PipelineID=4e3c4203-857f-46de-9468-ca9146dbf259
2022-10-28 04:21:17,253 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-10-28 04:21:17,419 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-10-28 04:21:17,489 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-10-28 04:21:18,419 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2022-10-28 04:21:19,137 [shutdown-hook-0] INFO metrics: type=TIMER, name=chunk-validate, count=100, min=1.649032, max=7.745547, mean=3.0214463300000007, stddev=1.3509109890858175, median=2.365545, p75=3.590768, p95=5.974014, p98=6.83683, p99=7.070034, p999=7.745547, mean_rate=91.63322689972144, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-10-28 04:21:19,140 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2022-10-28 04:21:19,140 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-10-28 04:21:19,140 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20221028 04:21:19.488" endtime="20221028 04:21:19.489"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221028 04:21:19.489" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221028 04:21:19.489" endtime="20221028 04:21:19.489"/>
</kw>
<status status="PASS" starttime="20221028 04:21:14.747" endtime="20221028 04:21:19.490"/>
</kw>
<msg timestamp="20221028 04:21:19.490" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221028 04:21:14.747" endtime="20221028 04:21:19.491"/>
</kw>
<msg timestamp="20221028 04:21:19.491" level="INFO">${result} = 2022-10-28 04:21:16,032 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-28 04:21:16,203 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221028 04:21:14.746" endtime="20221028 04:21:19.491"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221028 04:21:19.492" endtime="20221028 04:21:19.492"/>
</kw>
<status status="PASS" starttime="20221028 04:21:14.745" endtime="20221028 04:21:19.492"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221028 04:21:14.744" endtime="20221028 04:21:19.493"/>
</test>
<doc>Test freon chunk validation commands</doc>
<status status="PASS" starttime="20221028 04:21:14.701" endtime="20221028 04:21:19.494"/>
</suite>
<suite id="s1-s4" name="Validate" source="/opt/hadoop/smoketest/freon/validate.robot">
<test id="s1-s4-t1" name="Ozone Client Key Validator" line="25">
<kw name="Freon OCKV" library="freon">
<arg>prefix=ockg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221028 04:22:25.703" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p ockgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20221028 04:22:31.230" level="INFO">${rc} = 0</msg>
<msg timestamp="20221028 04:22:31.230" level="INFO">${output} = 2022-10-28 04:22:27,033 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-28 04:22:27,150 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221028 04:22:25.699" endtime="20221028 04:22:31.230"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221028 04:22:31.231" level="INFO">2022-10-28 04:22:27,033 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-28 04:22:27,150 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-10-28 04:22:27,150 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-10-28 04:22:27,320 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpre and number-of-tests 1
2022-10-28 04:22:27,392 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-28 04:22:28,398 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-28 04:22:28,990 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-10-28 04:22:29,399 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-28 04:22:30,399 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-10-28 04:22:30,876 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=56.307049, max=56.307049, mean=56.307049, stddev=0.0, median=56.307049, p75=56.307049, p95=56.307049, p98=56.307049, p99=56.307049, p999=56.307049, mean_rate=0.976958758861276, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-10-28 04:22:30,877 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2022-10-28 04:22:30,877 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-10-28 04:22:30,877 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20221028 04:22:31.230" endtime="20221028 04:22:31.231"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221028 04:22:31.232" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221028 04:22:31.231" endtime="20221028 04:22:31.232"/>
</kw>
<status status="PASS" starttime="20221028 04:22:25.699" endtime="20221028 04:22:31.232"/>
</kw>
<msg timestamp="20221028 04:22:31.232" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221028 04:22:25.698" endtime="20221028 04:22:31.234"/>
</kw>
<msg timestamp="20221028 04:22:31.234" level="INFO">${result} = 2022-10-28 04:22:27,033 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-28 04:22:27,150 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221028 04:22:25.698" endtime="20221028 04:22:31.234"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221028 04:22:31.234" endtime="20221028 04:22:31.235"/>
</kw>
<status status="PASS" starttime="20221028 04:22:25.697" endtime="20221028 04:22:31.235"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221028 04:22:25.695" endtime="20221028 04:22:31.235"/>
</test>
<doc>Test freon data validation commands</doc>
<status status="PASS" starttime="20221028 04:22:25.648" endtime="20221028 04:22:31.236"/>
</suite>
<suite id="s1-s5" name="Validate-Chunk" source="/opt/hadoop/smoketest/freon/validate-chunk.robot">
<test id="s1-s5-t1" name="DN Chunk Validator" line="25">
<kw name="Freon DCV" library="freon">
<arg>prefix=dcg${PREFIX}</arg>
<arg>n=100</arg>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20221028 04:22:35.982" endtime="20221028 04:22:35.982"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon dcv -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221028 04:22:35.987" level="INFO">Running command 'ozone freon dcv -t 1 -n100 -p dcgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20221028 04:22:41.324" level="INFO">${rc} = 0</msg>
<msg timestamp="20221028 04:22:41.324" level="INFO">${output} = 2022-10-28 04:22:37,503 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-28 04:22:37,656 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221028 04:22:35.983" endtime="20221028 04:22:41.325"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221028 04:22:41.326" level="INFO">2022-10-28 04:22:37,503 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-28 04:22:37,656 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-10-28 04:22:37,656 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-10-28 04:22:37,855 [main] INFO freon.BaseFreonGenerator: Executing test with prefix dcgpre and number-of-tests 100
2022-10-28 04:22:37,922 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-10-28 04:22:38,344 [main] INFO freon.DatanodeChunkValidator: Using pipeline PipelineID=4e3c4203-857f-46de-9468-ca9146dbf259
2022-10-28 04:22:38,812 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-10-28 04:22:38,930 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-10-28 04:22:39,020 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-10-28 04:22:39,931 [Thread-3] INFO freon.ProgressBar: Progress: 49.00 % (49 out of 100)
2022-10-28 04:22:40,931 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2022-10-28 04:22:40,979 [shutdown-hook-0] INFO metrics: type=TIMER, name=chunk-validate, count=100, min=2.056739, max=24.414763, mean=4.558216956791345, stddev=3.424723693127159, median=3.275962, p75=4.636988, p95=11.172912, p98=16.230307, p99=24.414763, p999=24.414763, mean_rate=76.16220762239584, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-10-28 04:22:40,979 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2022-10-28 04:22:40,980 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-10-28 04:22:40,980 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20221028 04:22:41.325" endtime="20221028 04:22:41.326"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221028 04:22:41.326" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221028 04:22:41.326" endtime="20221028 04:22:41.326"/>
</kw>
<status status="PASS" starttime="20221028 04:22:35.983" endtime="20221028 04:22:41.327"/>
</kw>
<msg timestamp="20221028 04:22:41.327" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221028 04:22:35.983" endtime="20221028 04:22:41.328"/>
</kw>
<msg timestamp="20221028 04:22:41.328" level="INFO">${result} = 2022-10-28 04:22:37,503 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-28 04:22:37,656 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221028 04:22:35.982" endtime="20221028 04:22:41.328"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221028 04:22:41.328" endtime="20221028 04:22:41.329"/>
</kw>
<status status="PASS" starttime="20221028 04:22:35.980" endtime="20221028 04:22:41.329"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221028 04:22:35.980" endtime="20221028 04:22:41.329"/>
</test>
<doc>Test freon chunk validation commands</doc>
<status status="PASS" starttime="20221028 04:22:35.937" endtime="20221028 04:22:41.331"/>
</suite>
<suite id="s1-s6" name="Generate" source="/opt/hadoop/smoketest/freon/generate.robot">
<test id="s1-s6-t1" name="Ozone Client Key Generator" line="25">
<kw name="Freon OCKG" library="freon">
<arg>prefix=ockg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221028 04:22:45.775" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p ockgpost  2&gt;&amp;1'.</msg>
<msg timestamp="20221028 04:22:51.603" level="INFO">${rc} = 0</msg>
<msg timestamp="20221028 04:22:51.603" level="INFO">${output} = 2022-10-28 04:22:47,202 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-28 04:22:47,304 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221028 04:22:45.772" endtime="20221028 04:22:51.603"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221028 04:22:51.604" level="INFO">2022-10-28 04:22:47,202 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-28 04:22:47,304 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-10-28 04:22:47,304 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-10-28 04:22:47,488 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpost and number-of-tests 1
2022-10-28 04:22:47,578 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-28 04:22:48,591 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-28 04:22:49,025 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-10-28 04:22:49,279 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-10-28 04:22:49,592 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-28 04:22:50,592 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-10-28 04:22:51,261 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=2266.943707, max=2266.943707, mean=2266.943707, stddev=0.0, median=2266.943707, p75=2266.943707, p95=2266.943707, p98=2266.943707, p99=2266.943707, p999=2266.943707, mean_rate=0.328820252460502, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-10-28 04:22:51,262 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 4
2022-10-28 04:22:51,262 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-10-28 04:22:51,262 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20221028 04:22:51.604" endtime="20221028 04:22:51.604"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221028 04:22:51.605" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221028 04:22:51.605" endtime="20221028 04:22:51.606"/>
</kw>
<status status="PASS" starttime="20221028 04:22:45.771" endtime="20221028 04:22:51.606"/>
</kw>
<msg timestamp="20221028 04:22:51.606" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221028 04:22:45.771" endtime="20221028 04:22:51.607"/>
</kw>
<msg timestamp="20221028 04:22:51.608" level="INFO">${result} = 2022-10-28 04:22:47,202 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-28 04:22:47,304 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221028 04:22:45.770" endtime="20221028 04:22:51.608"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221028 04:22:51.608" endtime="20221028 04:22:51.608"/>
</kw>
<status status="PASS" starttime="20221028 04:22:45.769" endtime="20221028 04:22:51.608"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221028 04:22:45.768" endtime="20221028 04:22:51.609"/>
</test>
<test id="s1-s6-t2" name="OM Key Generator" line="28">
<kw name="Freon OMKG" library="freon">
<arg>prefix=omkg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon omkg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221028 04:22:51.615" level="INFO">Running command 'ozone freon omkg  -t 1 -n1 -p omkgpost  2&gt;&amp;1'.</msg>
<msg timestamp="20221028 04:22:55.076" level="INFO">${rc} = 0</msg>
<msg timestamp="20221028 04:22:55.076" level="INFO">${output} = 2022-10-28 04:22:53,023 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-28 04:22:53,120 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221028 04:22:51.613" endtime="20221028 04:22:55.076"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221028 04:22:55.077" level="INFO">2022-10-28 04:22:53,023 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-28 04:22:53,120 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-10-28 04:22:53,120 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-10-28 04:22:53,269 [main] INFO freon.BaseFreonGenerator: Executing test with prefix omkgpost and number-of-tests 1
2022-10-28 04:22:53,365 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-28 04:22:54,374 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-10-28 04:22:55,012 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=76.714196, max=76.714196, mean=76.714196, stddev=0.0, median=76.714196, p75=76.714196, p95=76.714196, p98=76.714196, p99=76.714196, p999=76.714196, mean_rate=0.9857551587704625, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-10-28 04:22:55,013 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2022-10-28 04:22:55,013 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-10-28 04:22:55,013 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20221028 04:22:55.077" endtime="20221028 04:22:55.077"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221028 04:22:55.078" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221028 04:22:55.078" endtime="20221028 04:22:55.078"/>
</kw>
<status status="PASS" starttime="20221028 04:22:51.612" endtime="20221028 04:22:55.079"/>
</kw>
<msg timestamp="20221028 04:22:55.079" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221028 04:22:51.612" endtime="20221028 04:22:55.079"/>
</kw>
<msg timestamp="20221028 04:22:55.079" level="INFO">${result} = 2022-10-28 04:22:53,023 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-28 04:22:53,120 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221028 04:22:51.611" endtime="20221028 04:22:55.079"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221028 04:22:55.080" endtime="20221028 04:22:55.080"/>
</kw>
<status status="PASS" starttime="20221028 04:22:51.610" endtime="20221028 04:22:55.080"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221028 04:22:51.609" endtime="20221028 04:22:55.080"/>
</test>
<test id="s1-s6-t3" name="OM Bucket Generator" line="31">
<kw name="Freon OMBG" library="freon">
<arg>prefix=ombg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ombg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221028 04:22:55.086" level="INFO">Running command 'ozone freon ombg  -t 1 -n1 -p ombgpost  2&gt;&amp;1'.</msg>
<msg timestamp="20221028 04:22:58.475" level="INFO">${rc} = 0</msg>
<msg timestamp="20221028 04:22:58.475" level="INFO">${output} = 2022-10-28 04:22:56,379 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-28 04:22:56,552 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221028 04:22:55.084" endtime="20221028 04:22:58.475"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221028 04:22:58.476" level="INFO">2022-10-28 04:22:56,379 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-28 04:22:56,552 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-10-28 04:22:56,552 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-10-28 04:22:56,709 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ombgpost and number-of-tests 1
2022-10-28 04:22:56,801 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-28 04:22:57,806 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-10-28 04:22:58,420 [shutdown-hook-0] INFO metrics: type=TIMER, name=bucket-create, count=1, min=20.711717, max=20.711717, mean=20.711717, stddev=0.0, median=20.711717, p75=20.711717, p95=20.711717, p98=20.711717, p99=20.711717, p999=20.711717, mean_rate=0.9850592206570795, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-10-28 04:22:58,421 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2022-10-28 04:22:58,421 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-10-28 04:22:58,421 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20221028 04:22:58.475" endtime="20221028 04:22:58.476"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221028 04:22:58.476" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221028 04:22:58.476" endtime="20221028 04:22:58.477"/>
</kw>
<status status="PASS" starttime="20221028 04:22:55.084" endtime="20221028 04:22:58.477"/>
</kw>
<msg timestamp="20221028 04:22:58.477" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221028 04:22:55.084" endtime="20221028 04:22:58.477"/>
</kw>
<msg timestamp="20221028 04:22:58.478" level="INFO">${result} = 2022-10-28 04:22:56,379 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-28 04:22:56,552 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221028 04:22:55.083" endtime="20221028 04:22:58.478"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221028 04:22:58.478" endtime="20221028 04:22:58.478"/>
</kw>
<status status="PASS" starttime="20221028 04:22:55.082" endtime="20221028 04:22:58.478"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221028 04:22:55.081" endtime="20221028 04:22:58.479"/>
</test>
<doc>Test freon data generation commands</doc>
<status status="PASS" starttime="20221028 04:22:45.726" endtime="20221028 04:22:58.480"/>
</suite>
<suite id="s1-s7" name="Validate" source="/opt/hadoop/smoketest/freon/validate.robot">
<test id="s1-s7-t1" name="Ozone Client Key Validator" line="25">
<kw name="Freon OCKV" library="freon">
<arg>prefix=ockg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221028 04:23:02.966" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p ockgpost  2&gt;&amp;1'.</msg>
<msg timestamp="20221028 04:23:08.143" level="INFO">${rc} = 0</msg>
<msg timestamp="20221028 04:23:08.143" level="INFO">${output} = 2022-10-28 04:23:04,338 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-28 04:23:04,528 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221028 04:23:02.962" endtime="20221028 04:23:08.143"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221028 04:23:08.144" level="INFO">2022-10-28 04:23:04,338 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-28 04:23:04,528 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-10-28 04:23:04,528 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-10-28 04:23:04,735 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpost and number-of-tests 1
2022-10-28 04:23:04,803 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-28 04:23:05,817 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-28 04:23:05,904 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-10-28 04:23:06,817 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-10-28 04:23:07,749 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=49.968806, max=49.968806, mean=49.968806, stddev=0.0, median=49.968806, p75=49.968806, p95=49.968806, p98=49.968806, p99=49.968806, p999=49.968806, mean_rate=0.9755997678595474, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-10-28 04:23:07,749 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2022-10-28 04:23:07,749 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-10-28 04:23:07,749 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20221028 04:23:08.144" endtime="20221028 04:23:08.144"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221028 04:23:08.145" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221028 04:23:08.145" endtime="20221028 04:23:08.145"/>
</kw>
<status status="PASS" starttime="20221028 04:23:02.961" endtime="20221028 04:23:08.145"/>
</kw>
<msg timestamp="20221028 04:23:08.145" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221028 04:23:02.961" endtime="20221028 04:23:08.147"/>
</kw>
<msg timestamp="20221028 04:23:08.147" level="INFO">${result} = 2022-10-28 04:23:04,338 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-28 04:23:04,528 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221028 04:23:02.960" endtime="20221028 04:23:08.147"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221028 04:23:08.147" endtime="20221028 04:23:08.148"/>
</kw>
<status status="PASS" starttime="20221028 04:23:02.959" endtime="20221028 04:23:08.148"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221028 04:23:02.958" endtime="20221028 04:23:08.148"/>
</test>
<doc>Test freon data validation commands</doc>
<status status="PASS" starttime="20221028 04:23:02.914" endtime="20221028 04:23:08.149"/>
</suite>
<suite id="s1-s8" name="Generate-Chunk" source="/opt/hadoop/smoketest/freon/generate-chunk.robot">
<test id="s1-s8-t1" name="DN Chunk Generator" line="25">
<kw name="Freon DCG" library="freon">
<arg>prefix=dcg${PREFIX}</arg>
<arg>n=100</arg>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20221028 04:23:12.820" endtime="20221028 04:23:12.820"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon dcg -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221028 04:23:12.825" level="INFO">Running command 'ozone freon dcg -t 1 -n100 -p dcgpost  2&gt;&amp;1'.</msg>
<msg timestamp="20221028 04:23:19.387" level="INFO">${rc} = 0</msg>
<msg timestamp="20221028 04:23:19.387" level="INFO">${output} = 2022-10-28 04:23:14,104 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-28 04:23:14,236 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221028 04:23:12.821" endtime="20221028 04:23:19.387"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221028 04:23:19.388" level="INFO">2022-10-28 04:23:14,104 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-28 04:23:14,236 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-10-28 04:23:14,236 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-10-28 04:23:14,920 [main] INFO freon.BaseFreonGenerator: Executing test with prefix dcgpost and number-of-tests 100
2022-10-28 04:23:14,965 [Thread-4] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-10-28 04:23:15,488 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-10-28 04:23:15,709 [pool-3-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-10-28 04:23:15,971 [Thread-4] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-10-28 04:23:16,971 [Thread-4] INFO freon.ProgressBar: Progress: 27.00 % (27 out of 100)
2022-10-28 04:23:17,971 [Thread-4] INFO freon.ProgressBar: Progress: 83.00 % (83 out of 100)
2022-10-28 04:23:18,972 [Thread-4] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2022-10-28 04:23:19,021 [shutdown-hook-0] INFO metrics: type=TIMER, name=chunk-write, count=100, min=11.156219, max=645.486174, mean=25.626122448629886, stddev=62.23663913990306, median=17.84225, p75=21.230317, p95=33.749962, p98=41.74152, p99=53.333947, p999=645.486174, mean_rate=29.344692112752494, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-10-28 04:23:19,021 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 4
2022-10-28 04:23:19,022 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-10-28 04:23:19,022 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20221028 04:23:19.387" endtime="20221028 04:23:19.388"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221028 04:23:19.389" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221028 04:23:19.388" endtime="20221028 04:23:19.389"/>
</kw>
<status status="PASS" starttime="20221028 04:23:12.821" endtime="20221028 04:23:19.389"/>
</kw>
<msg timestamp="20221028 04:23:19.389" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221028 04:23:12.821" endtime="20221028 04:23:19.390"/>
</kw>
<msg timestamp="20221028 04:23:19.391" level="INFO">${result} = 2022-10-28 04:23:14,104 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-28 04:23:14,236 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221028 04:23:12.820" endtime="20221028 04:23:19.391"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221028 04:23:19.391" endtime="20221028 04:23:19.391"/>
</kw>
<status status="PASS" starttime="20221028 04:23:12.818" endtime="20221028 04:23:19.391"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221028 04:23:12.817" endtime="20221028 04:23:19.391"/>
</test>
<doc>Test freon chunk generation commands</doc>
<status status="PASS" starttime="20221028 04:23:12.773" endtime="20221028 04:23:19.392"/>
</suite>
<suite id="s1-s9" name="Validate-Chunk" source="/opt/hadoop/smoketest/freon/validate-chunk.robot">
<test id="s1-s9-t1" name="DN Chunk Validator" line="25">
<kw name="Freon DCV" library="freon">
<arg>prefix=dcg${PREFIX}</arg>
<arg>n=100</arg>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20221028 04:23:23.820" endtime="20221028 04:23:23.820"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon dcv -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221028 04:23:23.825" level="INFO">Running command 'ozone freon dcv -t 1 -n100 -p dcgpost  2&gt;&amp;1'.</msg>
<msg timestamp="20221028 04:23:28.891" level="INFO">${rc} = 0</msg>
<msg timestamp="20221028 04:23:28.891" level="INFO">${output} = 2022-10-28 04:23:25,054 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-28 04:23:25,173 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221028 04:23:23.821" endtime="20221028 04:23:28.891"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221028 04:23:28.892" level="INFO">2022-10-28 04:23:25,054 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-28 04:23:25,173 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-10-28 04:23:25,173 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-10-28 04:23:25,352 [main] INFO freon.BaseFreonGenerator: Executing test with prefix dcgpost and number-of-tests 100
2022-10-28 04:23:25,446 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-10-28 04:23:25,886 [main] INFO freon.DatanodeChunkValidator: Using pipeline PipelineID=4e3c4203-857f-46de-9468-ca9146dbf259
2022-10-28 04:23:26,415 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-10-28 04:23:26,461 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-10-28 04:23:26,681 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-10-28 04:23:27,462 [Thread-3] INFO freon.ProgressBar: Progress: 42.00 % (42 out of 100)
2022-10-28 04:23:28,462 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2022-10-28 04:23:28,529 [shutdown-hook-0] INFO metrics: type=TIMER, name=chunk-validate, count=100, min=1.685532, max=19.76838, mean=3.317364829999999, stddev=2.5311537563183952, median=2.332345, p75=3.579969, p95=7.159838, p98=9.709786, p99=12.012231, p999=19.76838, mean_rate=79.65362557197128, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-10-28 04:23:28,529 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2022-10-28 04:23:28,532 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-10-28 04:23:28,532 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20221028 04:23:28.891" endtime="20221028 04:23:28.892"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221028 04:23:28.893" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221028 04:23:28.892" endtime="20221028 04:23:28.893"/>
</kw>
<status status="PASS" starttime="20221028 04:23:23.821" endtime="20221028 04:23:28.893"/>
</kw>
<msg timestamp="20221028 04:23:28.893" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221028 04:23:23.821" endtime="20221028 04:23:28.894"/>
</kw>
<msg timestamp="20221028 04:23:28.895" level="INFO">${result} = 2022-10-28 04:23:25,054 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-28 04:23:25,173 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221028 04:23:23.820" endtime="20221028 04:23:28.895"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221028 04:23:28.895" endtime="20221028 04:23:28.895"/>
</kw>
<status status="PASS" starttime="20221028 04:23:23.818" endtime="20221028 04:23:28.895"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221028 04:23:23.817" endtime="20221028 04:23:28.895"/>
</test>
<doc>Test freon chunk validation commands</doc>
<status status="PASS" starttime="20221028 04:23:23.774" endtime="20221028 04:23:28.896"/>
</suite>
<suite id="s1-s10" name="Generate" source="/opt/hadoop/smoketest/freon/generate.robot">
<test id="s1-s10-t1" name="Ozone Client Key Generator" line="25">
<kw name="Freon OCKG" library="freon">
<arg>prefix=ockg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221028 04:20:36.462" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p ockgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20221028 04:20:42.774" level="INFO">${rc} = 0</msg>
<msg timestamp="20221028 04:20:42.774" level="INFO">${output} = 2022-10-28 04:20:37,945 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-28 04:20:38,063 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221028 04:20:36.458" endtime="20221028 04:20:42.774"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221028 04:20:42.775" level="INFO">2022-10-28 04:20:37,945 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-28 04:20:38,063 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-10-28 04:20:38,063 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-10-28 04:20:38,223 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpre and number-of-tests 1
2022-10-28 04:20:38,302 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-28 04:20:39,239 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2022-10-28 04:20:39,312 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-28 04:20:39,347 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false 
2022-10-28 04:20:40,154 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-10-28 04:20:40,312 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-28 04:20:40,387 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-10-28 04:20:41,312 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-28 04:20:42,313 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-10-28 04:20:42,427 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=2184.415719, max=2184.415719, mean=2184.415719, stddev=0.0, median=2184.415719, p75=2184.415719, p95=2184.415719, p98=2184.415719, p99=2184.415719, p999=2184.415719, mean_rate=0.3280056227379861, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-10-28 04:20:42,427 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 4
2022-10-28 04:20:42,427 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-10-28 04:20:42,427 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20221028 04:20:42.775" endtime="20221028 04:20:42.775"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221028 04:20:42.776" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221028 04:20:42.775" endtime="20221028 04:20:42.776"/>
</kw>
<status status="PASS" starttime="20221028 04:20:36.458" endtime="20221028 04:20:42.776"/>
</kw>
<msg timestamp="20221028 04:20:42.776" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221028 04:20:36.458" endtime="20221028 04:20:42.777"/>
</kw>
<msg timestamp="20221028 04:20:42.778" level="INFO">${result} = 2022-10-28 04:20:37,945 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-28 04:20:38,063 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221028 04:20:36.457" endtime="20221028 04:20:42.778"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221028 04:20:42.778" endtime="20221028 04:20:42.778"/>
</kw>
<status status="PASS" starttime="20221028 04:20:36.456" endtime="20221028 04:20:42.778"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221028 04:20:36.455" endtime="20221028 04:20:42.779"/>
</test>
<test id="s1-s10-t2" name="OM Key Generator" line="28">
<kw name="Freon OMKG" library="freon">
<arg>prefix=omkg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon omkg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221028 04:20:42.785" level="INFO">Running command 'ozone freon omkg  -t 1 -n1 -p omkgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20221028 04:20:46.238" level="INFO">${rc} = 0</msg>
<msg timestamp="20221028 04:20:46.238" level="INFO">${output} = 2022-10-28 04:20:44,233 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-28 04:20:44,325 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221028 04:20:42.783" endtime="20221028 04:20:46.238"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221028 04:20:46.239" level="INFO">2022-10-28 04:20:44,233 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-28 04:20:44,325 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-10-28 04:20:44,325 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-10-28 04:20:44,479 [main] INFO freon.BaseFreonGenerator: Executing test with prefix omkgpre and number-of-tests 1
2022-10-28 04:20:44,573 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-28 04:20:45,576 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-10-28 04:20:46,190 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=69.10392, max=69.10392, mean=69.10392, stddev=0.0, median=69.10392, p75=69.10392, p95=69.10392, p98=69.10392, p99=69.10392, p999=69.10392, mean_rate=0.9843881929089909, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-10-28 04:20:46,191 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2022-10-28 04:20:46,191 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-10-28 04:20:46,192 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20221028 04:20:46.239" endtime="20221028 04:20:46.240"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221028 04:20:46.240" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221028 04:20:46.240" endtime="20221028 04:20:46.240"/>
</kw>
<status status="PASS" starttime="20221028 04:20:42.782" endtime="20221028 04:20:46.241"/>
</kw>
<msg timestamp="20221028 04:20:46.241" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221028 04:20:42.782" endtime="20221028 04:20:46.241"/>
</kw>
<msg timestamp="20221028 04:20:46.241" level="INFO">${result} = 2022-10-28 04:20:44,233 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-28 04:20:44,325 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221028 04:20:42.781" endtime="20221028 04:20:46.241"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221028 04:20:46.242" endtime="20221028 04:20:46.242"/>
</kw>
<status status="PASS" starttime="20221028 04:20:42.780" endtime="20221028 04:20:46.242"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221028 04:20:42.779" endtime="20221028 04:20:46.242"/>
</test>
<test id="s1-s10-t3" name="OM Bucket Generator" line="31">
<kw name="Freon OMBG" library="freon">
<arg>prefix=ombg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ombg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221028 04:20:46.248" level="INFO">Running command 'ozone freon ombg  -t 1 -n1 -p ombgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20221028 04:20:49.774" level="INFO">${rc} = 0</msg>
<msg timestamp="20221028 04:20:49.774" level="INFO">${output} = 2022-10-28 04:20:47,667 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-28 04:20:47,810 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221028 04:20:46.246" endtime="20221028 04:20:49.774"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221028 04:20:49.775" level="INFO">2022-10-28 04:20:47,667 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-28 04:20:47,810 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-10-28 04:20:47,810 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-10-28 04:20:47,994 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ombgpre and number-of-tests 1
2022-10-28 04:20:48,068 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-28 04:20:49,075 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-10-28 04:20:49,706 [shutdown-hook-0] INFO metrics: type=TIMER, name=bucket-create, count=1, min=17.090908, max=17.090908, mean=17.090908, stddev=0.0, median=17.090908, p75=17.090908, p95=17.090908, p98=17.090908, p99=17.090908, p999=17.090908, mean_rate=0.9821746739021706, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-10-28 04:20:49,707 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2022-10-28 04:20:49,707 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-10-28 04:20:49,707 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20221028 04:20:49.775" endtime="20221028 04:20:49.775"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221028 04:20:49.776" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221028 04:20:49.776" endtime="20221028 04:20:49.776"/>
</kw>
<status status="PASS" starttime="20221028 04:20:46.246" endtime="20221028 04:20:49.776"/>
</kw>
<msg timestamp="20221028 04:20:49.776" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221028 04:20:46.246" endtime="20221028 04:20:49.777"/>
</kw>
<msg timestamp="20221028 04:20:49.777" level="INFO">${result} = 2022-10-28 04:20:47,667 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-28 04:20:47,810 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221028 04:20:46.245" endtime="20221028 04:20:49.777"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221028 04:20:49.777" endtime="20221028 04:20:49.778"/>
</kw>
<status status="PASS" starttime="20221028 04:20:46.244" endtime="20221028 04:20:49.778"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221028 04:20:46.243" endtime="20221028 04:20:49.778"/>
</test>
<doc>Test freon data generation commands</doc>
<status status="PASS" starttime="20221028 04:20:36.411" endtime="20221028 04:20:49.779"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="70720"/>
</suite>
<statistics>
<total>
<stat pass="14" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="14" fail="0" skip="0" id="s1" name="restart">restart</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Validate">restart.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Generate-Chunk">restart.Generate-Chunk</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3" name="Validate-Chunk">restart.Validate-Chunk</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="Validate">restart.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s5" name="Validate-Chunk">restart.Validate-Chunk</stat>
<stat pass="3" fail="0" skip="0" id="s1-s6" name="Generate">restart.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s7" name="Validate">restart.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s8" name="Generate-Chunk">restart.Generate-Chunk</stat>
<stat pass="1" fail="0" skip="0" id="s1-s9" name="Validate-Chunk">restart.Validate-Chunk</stat>
<stat pass="3" fail="0" skip="0" id="s1-s10" name="Generate">restart.Generate</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
