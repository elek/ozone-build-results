<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.0 (Python 3.8.10 on linux)" generated="20221028 04:19:34.807" rpa="false" schemaversion="3">
<suite id="s1" name="ozonescripts">
<suite id="s1-s1" name="Pipeline" source="/opt/hadoop/smoketest/admincli/pipeline.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221028 04:17:49.723" endtime="20221028 04:17:49.724"/>
</kw>
<test id="s1-s1-t1" name="Create pipeline" line="28">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin pipeline create</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221028 04:17:49.730" level="INFO">Running command 'ozone admin pipeline create 2&gt;&amp;1'.</msg>
<msg timestamp="20221028 04:17:51.979" level="INFO">${rc} = 0</msg>
<msg timestamp="20221028 04:17:51.979" level="INFO">${output} = PipelineID=6c93bd07-7888-463b-bb14-0b03e1792d4d is created. Pipeline[ Id: 6c93bd07-7888-463b-bb14-0b03e1792d4d, Nodes: 4ea4f559-4d65-4322-8a4b-d4bfcb32f603{ip: 172.20.0.3, host: ozonescripts_datanode_...</msg>
<status status="PASS" starttime="20221028 04:17:49.726" endtime="20221028 04:17:51.979"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221028 04:17:51.980" level="INFO">PipelineID=6c93bd07-7888-463b-bb14-0b03e1792d4d is created. Pipeline[ Id: 6c93bd07-7888-463b-bb14-0b03e1792d4d, Nodes: 4ea4f559-4d65-4322-8a4b-d4bfcb32f603{ip: 172.20.0.3, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, ReplicationConfig: STANDALONE/ONE, State:OPEN, leaderId:, CreationTimestamp2022-10-28T04:17:51.862Z[UTC]]</msg>
<status status="PASS" starttime="20221028 04:17:51.979" endtime="20221028 04:17:51.980"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221028 04:17:51.981" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221028 04:17:51.980" endtime="20221028 04:17:51.981"/>
</kw>
<status status="PASS" starttime="20221028 04:17:49.726" endtime="20221028 04:17:51.981"/>
</kw>
<msg timestamp="20221028 04:17:51.981" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221028 04:17:49.726" endtime="20221028 04:17:51.982"/>
</kw>
<msg timestamp="20221028 04:17:51.982" level="INFO">${output} = PipelineID=6c93bd07-7888-463b-bb14-0b03e1792d4d is created. Pipeline[ Id: 6c93bd07-7888-463b-bb14-0b03e1792d4d, Nodes: 4ea4f559-4d65-4322-8a4b-d4bfcb32f603{ip: 172.20.0.3, host: ozonescripts_datanode_...</msg>
<status status="PASS" starttime="20221028 04:17:49.725" endtime="20221028 04:17:51.982"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>is created.</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221028 04:17:51.982" endtime="20221028 04:17:51.983"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>STANDALONE/ONE</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221028 04:17:51.983" endtime="20221028 04:17:51.983"/>
</kw>
<kw name="Execute" library="os">
<var>${pipeline}</var>
<arg>echo "${output}" | grep 'is created' | cut -f1 -d' ' | cut -f2 -d'='</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221028 04:17:51.987" level="INFO">Running command 'echo "PipelineID=6c93bd07-7888-463b-bb14-0b03e1792d4d is created. Pipeline[ Id: 6c93bd07-7888-463b-bb14-0b03e1792d4d, Nodes: 4ea4f559-4d65-4322-8a4b-d4bfcb32f603{ip: 172.20.0.3, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, ReplicationConfig: STANDALONE/ONE, State:OPEN, leaderId:, CreationTimestamp2022-10-28T04:17:51.862Z[UTC]]" | grep 'is created' | cut -f1 -d' ' | cut -f2 -d'=' 2&gt;&amp;1'.</msg>
<msg timestamp="20221028 04:17:51.990" level="INFO">${rc} = 0</msg>
<msg timestamp="20221028 04:17:51.990" level="INFO">${output} = 6c93bd07-7888-463b-bb14-0b03e1792d4d</msg>
<status status="PASS" starttime="20221028 04:17:51.985" endtime="20221028 04:17:51.990"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221028 04:17:51.991" level="INFO">6c93bd07-7888-463b-bb14-0b03e1792d4d</msg>
<status status="PASS" starttime="20221028 04:17:51.991" endtime="20221028 04:17:51.991"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221028 04:17:51.992" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221028 04:17:51.992" endtime="20221028 04:17:51.992"/>
</kw>
<status status="PASS" starttime="20221028 04:17:51.984" endtime="20221028 04:17:51.992"/>
</kw>
<msg timestamp="20221028 04:17:51.993" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221028 04:17:51.984" endtime="20221028 04:17:51.993"/>
</kw>
<msg timestamp="20221028 04:17:51.993" level="INFO">${pipeline} = 6c93bd07-7888-463b-bb14-0b03e1792d4d</msg>
<status status="PASS" starttime="20221028 04:17:51.983" endtime="20221028 04:17:51.993"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PIPELINE}</arg>
<arg>${pipeline}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20221028 04:17:51.994" level="INFO">${PIPELINE} = 6c93bd07-7888-463b-bb14-0b03e1792d4d</msg>
<status status="PASS" starttime="20221028 04:17:51.993" endtime="20221028 04:17:51.994"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221028 04:17:49.724" endtime="20221028 04:17:51.994"/>
</test>
<test id="s1-s1-t2" name="List pipelines" line="35">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin pipeline list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221028 04:17:51.998" level="INFO">Running command 'ozone admin pipeline list 2&gt;&amp;1'.</msg>
<msg timestamp="20221028 04:17:54.168" level="INFO">${rc} = 0</msg>
<msg timestamp="20221028 04:17:54.168" level="INFO">${output} = Pipeline[ Id: 6c93bd07-7888-463b-bb14-0b03e1792d4d, Nodes: 4ea4f559-4d65-4322-8a4b-d4bfcb32f603{ip: 172.20.0.3, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858...</msg>
<status status="PASS" starttime="20221028 04:17:51.997" endtime="20221028 04:17:54.168"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221028 04:17:54.170" level="INFO">Pipeline[ Id: 6c93bd07-7888-463b-bb14-0b03e1792d4d, Nodes: 4ea4f559-4d65-4322-8a4b-d4bfcb32f603{ip: 172.20.0.3, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, ReplicationConfig: STANDALONE/ONE, State:OPEN, leaderId:, CreationTimestamp2022-10-28T04:17:51.862Z[UTC]]
Pipeline[ Id: f1c67271-cbdc-472d-b792-f1736c1973e6, Nodes: 4ea4f559-4d65-4322-8a4b-d4bfcb32f603{ip: 172.20.0.3, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, ReplicationConfig: RATIS/ONE, State:OPEN, leaderId:4ea4f559-4d65-4322-8a4b-d4bfcb32f603, CreationTimestamp2022-10-28T04:17:17.120Z[UTC]]</msg>
<status status="PASS" starttime="20221028 04:17:54.169" endtime="20221028 04:17:54.170"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221028 04:17:54.170" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221028 04:17:54.170" endtime="20221028 04:17:54.170"/>
</kw>
<status status="PASS" starttime="20221028 04:17:51.996" endtime="20221028 04:17:54.171"/>
</kw>
<msg timestamp="20221028 04:17:54.171" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221028 04:17:51.996" endtime="20221028 04:17:54.171"/>
</kw>
<msg timestamp="20221028 04:17:54.171" level="INFO">${output} = Pipeline[ Id: 6c93bd07-7888-463b-bb14-0b03e1792d4d, Nodes: 4ea4f559-4d65-4322-8a4b-d4bfcb32f603{ip: 172.20.0.3, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858...</msg>
<status status="PASS" starttime="20221028 04:17:51.995" endtime="20221028 04:17:54.171"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>STANDALONE/ONE</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221028 04:17:54.172" endtime="20221028 04:17:54.172"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221028 04:17:51.995" endtime="20221028 04:17:54.172"/>
</test>
<test id="s1-s1-t3" name="List pipelines with explicit host" line="39">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin pipeline list --scm ${SCM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221028 04:17:54.177" level="INFO">Running command 'ozone admin pipeline list --scm scm 2&gt;&amp;1'.</msg>
<msg timestamp="20221028 04:17:56.427" level="INFO">${rc} = 0</msg>
<msg timestamp="20221028 04:17:56.427" level="INFO">${output} = Pipeline[ Id: 6c93bd07-7888-463b-bb14-0b03e1792d4d, Nodes: 4ea4f559-4d65-4322-8a4b-d4bfcb32f603{ip: 172.20.0.3, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858...</msg>
<status status="PASS" starttime="20221028 04:17:54.175" endtime="20221028 04:17:56.427"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221028 04:17:56.428" level="INFO">Pipeline[ Id: 6c93bd07-7888-463b-bb14-0b03e1792d4d, Nodes: 4ea4f559-4d65-4322-8a4b-d4bfcb32f603{ip: 172.20.0.3, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, ReplicationConfig: STANDALONE/ONE, State:OPEN, leaderId:, CreationTimestamp2022-10-28T04:17:51.862Z[UTC]]
Pipeline[ Id: f1c67271-cbdc-472d-b792-f1736c1973e6, Nodes: 4ea4f559-4d65-4322-8a4b-d4bfcb32f603{ip: 172.20.0.3, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, ReplicationConfig: RATIS/ONE, State:OPEN, leaderId:4ea4f559-4d65-4322-8a4b-d4bfcb32f603, CreationTimestamp2022-10-28T04:17:17.120Z[UTC]]</msg>
<status status="PASS" starttime="20221028 04:17:56.428" endtime="20221028 04:17:56.428"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221028 04:17:56.429" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221028 04:17:56.429" endtime="20221028 04:17:56.429"/>
</kw>
<status status="PASS" starttime="20221028 04:17:54.174" endtime="20221028 04:17:56.429"/>
</kw>
<msg timestamp="20221028 04:17:56.430" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221028 04:17:54.174" endtime="20221028 04:17:56.430"/>
</kw>
<msg timestamp="20221028 04:17:56.430" level="INFO">${output} = Pipeline[ Id: 6c93bd07-7888-463b-bb14-0b03e1792d4d, Nodes: 4ea4f559-4d65-4322-8a4b-d4bfcb32f603{ip: 172.20.0.3, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858...</msg>
<status status="PASS" starttime="20221028 04:17:54.173" endtime="20221028 04:17:56.430"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>STANDALONE/ONE</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221028 04:17:56.430" endtime="20221028 04:17:56.431"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221028 04:17:54.173" endtime="20221028 04:17:56.431"/>
</test>
<test id="s1-s1-t4" name="Deactivate pipeline" line="43">
<kw name="Execute" library="os">
<arg>ozone admin pipeline deactivate "${PIPELINE}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221028 04:17:56.435" level="INFO">Running command 'ozone admin pipeline deactivate "6c93bd07-7888-463b-bb14-0b03e1792d4d" 2&gt;&amp;1'.</msg>
<msg timestamp="20221028 04:17:58.748" level="INFO">${rc} = 0</msg>
<msg timestamp="20221028 04:17:58.749" level="INFO">${output} = </msg>
<status status="PASS" starttime="20221028 04:17:56.433" endtime="20221028 04:17:58.749"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221028 04:17:58.750" level="INFO"/>
<status status="PASS" starttime="20221028 04:17:58.749" endtime="20221028 04:17:58.750"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221028 04:17:58.750" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221028 04:17:58.750" endtime="20221028 04:17:58.751"/>
</kw>
<status status="PASS" starttime="20221028 04:17:56.433" endtime="20221028 04:17:58.751"/>
</kw>
<msg timestamp="20221028 04:17:58.751" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221028 04:17:56.432" endtime="20221028 04:17:58.751"/>
</kw>
<status status="PASS" starttime="20221028 04:17:56.432" endtime="20221028 04:17:58.751"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin pipeline list | grep "${PIPELINE}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221028 04:17:58.755" level="INFO">Running command 'ozone admin pipeline list | grep "6c93bd07-7888-463b-bb14-0b03e1792d4d" 2&gt;&amp;1'.</msg>
<msg timestamp="20221028 04:18:00.952" level="INFO">${rc} = 0</msg>
<msg timestamp="20221028 04:18:00.952" level="INFO">${output} = Pipeline[ Id: 6c93bd07-7888-463b-bb14-0b03e1792d4d, Nodes: 4ea4f559-4d65-4322-8a4b-d4bfcb32f603{ip: 172.20.0.3, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858...</msg>
<status status="PASS" starttime="20221028 04:17:58.753" endtime="20221028 04:18:00.952"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221028 04:18:00.954" level="INFO">Pipeline[ Id: 6c93bd07-7888-463b-bb14-0b03e1792d4d, Nodes: 4ea4f559-4d65-4322-8a4b-d4bfcb32f603{ip: 172.20.0.3, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, ReplicationConfig: STANDALONE/ONE, State:DORMANT, leaderId:, CreationTimestamp2022-10-28T04:17:51.862Z[UTC]]</msg>
<status status="PASS" starttime="20221028 04:18:00.953" endtime="20221028 04:18:00.954"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221028 04:18:00.954" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221028 04:18:00.954" endtime="20221028 04:18:00.955"/>
</kw>
<status status="PASS" starttime="20221028 04:17:58.752" endtime="20221028 04:18:00.955"/>
</kw>
<msg timestamp="20221028 04:18:00.955" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221028 04:17:58.752" endtime="20221028 04:18:00.955"/>
</kw>
<msg timestamp="20221028 04:18:00.955" level="INFO">${output} = Pipeline[ Id: 6c93bd07-7888-463b-bb14-0b03e1792d4d, Nodes: 4ea4f559-4d65-4322-8a4b-d4bfcb32f603{ip: 172.20.0.3, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858...</msg>
<status status="PASS" starttime="20221028 04:17:58.752" endtime="20221028 04:18:00.956"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>DORMANT</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221028 04:18:00.956" endtime="20221028 04:18:00.956"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221028 04:17:56.431" endtime="20221028 04:18:00.956"/>
</test>
<test id="s1-s1-t5" name="Activate pipeline" line="48">
<kw name="Execute" library="os">
<arg>ozone admin pipeline activate "${PIPELINE}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221028 04:18:00.961" level="INFO">Running command 'ozone admin pipeline activate "6c93bd07-7888-463b-bb14-0b03e1792d4d" 2&gt;&amp;1'.</msg>
<msg timestamp="20221028 04:18:03.230" level="INFO">${rc} = 0</msg>
<msg timestamp="20221028 04:18:03.230" level="INFO">${output} = </msg>
<status status="PASS" starttime="20221028 04:18:00.959" endtime="20221028 04:18:03.230"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221028 04:18:03.231" level="INFO"/>
<status status="PASS" starttime="20221028 04:18:03.230" endtime="20221028 04:18:03.231"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221028 04:18:03.232" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221028 04:18:03.231" endtime="20221028 04:18:03.232"/>
</kw>
<status status="PASS" starttime="20221028 04:18:00.958" endtime="20221028 04:18:03.232"/>
</kw>
<msg timestamp="20221028 04:18:03.232" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221028 04:18:00.958" endtime="20221028 04:18:03.232"/>
</kw>
<status status="PASS" starttime="20221028 04:18:00.958" endtime="20221028 04:18:03.233"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin pipeline list | grep "${PIPELINE}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221028 04:18:03.236" level="INFO">Running command 'ozone admin pipeline list | grep "6c93bd07-7888-463b-bb14-0b03e1792d4d" 2&gt;&amp;1'.</msg>
<msg timestamp="20221028 04:18:05.493" level="INFO">${rc} = 0</msg>
<msg timestamp="20221028 04:18:05.493" level="INFO">${output} = Pipeline[ Id: 6c93bd07-7888-463b-bb14-0b03e1792d4d, Nodes: 4ea4f559-4d65-4322-8a4b-d4bfcb32f603{ip: 172.20.0.3, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858...</msg>
<status status="PASS" starttime="20221028 04:18:03.234" endtime="20221028 04:18:05.493"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221028 04:18:05.494" level="INFO">Pipeline[ Id: 6c93bd07-7888-463b-bb14-0b03e1792d4d, Nodes: 4ea4f559-4d65-4322-8a4b-d4bfcb32f603{ip: 172.20.0.3, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, ReplicationConfig: STANDALONE/ONE, State:OPEN, leaderId:, CreationTimestamp2022-10-28T04:17:51.862Z[UTC]]</msg>
<status status="PASS" starttime="20221028 04:18:05.493" endtime="20221028 04:18:05.494"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221028 04:18:05.495" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221028 04:18:05.494" endtime="20221028 04:18:05.495"/>
</kw>
<status status="PASS" starttime="20221028 04:18:03.234" endtime="20221028 04:18:05.495"/>
</kw>
<msg timestamp="20221028 04:18:05.495" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221028 04:18:03.233" endtime="20221028 04:18:05.496"/>
</kw>
<msg timestamp="20221028 04:18:05.496" level="INFO">${output} = Pipeline[ Id: 6c93bd07-7888-463b-bb14-0b03e1792d4d, Nodes: 4ea4f559-4d65-4322-8a4b-d4bfcb32f603{ip: 172.20.0.3, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858...</msg>
<status status="PASS" starttime="20221028 04:18:03.233" endtime="20221028 04:18:05.496"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>OPEN</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221028 04:18:05.496" endtime="20221028 04:18:05.496"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221028 04:18:00.957" endtime="20221028 04:18:05.497"/>
</test>
<test id="s1-s1-t6" name="Close pipeline" line="53">
<kw name="Execute" library="os">
<arg>ozone admin pipeline close "${PIPELINE}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221028 04:18:05.501" level="INFO">Running command 'ozone admin pipeline close "6c93bd07-7888-463b-bb14-0b03e1792d4d" 2&gt;&amp;1'.</msg>
<msg timestamp="20221028 04:18:07.880" level="INFO">${rc} = 0</msg>
<msg timestamp="20221028 04:18:07.880" level="INFO">${output} = </msg>
<status status="PASS" starttime="20221028 04:18:05.499" endtime="20221028 04:18:07.880"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221028 04:18:07.881" level="INFO"/>
<status status="PASS" starttime="20221028 04:18:07.880" endtime="20221028 04:18:07.881"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221028 04:18:07.882" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221028 04:18:07.881" endtime="20221028 04:18:07.882"/>
</kw>
<status status="PASS" starttime="20221028 04:18:05.499" endtime="20221028 04:18:07.882"/>
</kw>
<msg timestamp="20221028 04:18:07.882" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221028 04:18:05.498" endtime="20221028 04:18:07.882"/>
</kw>
<status status="PASS" starttime="20221028 04:18:05.498" endtime="20221028 04:18:07.883"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin pipeline list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221028 04:18:07.886" level="INFO">Running command 'ozone admin pipeline list 2&gt;&amp;1'.</msg>
<msg timestamp="20221028 04:18:10.086" level="INFO">${rc} = 0</msg>
<msg timestamp="20221028 04:18:10.086" level="INFO">${output} = Pipeline[ Id: 6c93bd07-7888-463b-bb14-0b03e1792d4d, Nodes: 4ea4f559-4d65-4322-8a4b-d4bfcb32f603{ip: 172.20.0.3, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858...</msg>
<status status="PASS" starttime="20221028 04:18:07.884" endtime="20221028 04:18:10.086"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221028 04:18:10.087" level="INFO">Pipeline[ Id: 6c93bd07-7888-463b-bb14-0b03e1792d4d, Nodes: 4ea4f559-4d65-4322-8a4b-d4bfcb32f603{ip: 172.20.0.3, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, ReplicationConfig: STANDALONE/ONE, State:CLOSED, leaderId:, CreationTimestamp2022-10-28T04:17:51.862Z[UTC]]
Pipeline[ Id: f1c67271-cbdc-472d-b792-f1736c1973e6, Nodes: 4ea4f559-4d65-4322-8a4b-d4bfcb32f603{ip: 172.20.0.3, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, ReplicationConfig: RATIS/ONE, State:OPEN, leaderId:4ea4f559-4d65-4322-8a4b-d4bfcb32f603, CreationTimestamp2022-10-28T04:17:17.120Z[UTC]]</msg>
<status status="PASS" starttime="20221028 04:18:10.087" endtime="20221028 04:18:10.087"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221028 04:18:10.088" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221028 04:18:10.088" endtime="20221028 04:18:10.088"/>
</kw>
<status status="PASS" starttime="20221028 04:18:07.883" endtime="20221028 04:18:10.088"/>
</kw>
<msg timestamp="20221028 04:18:10.088" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221028 04:18:07.883" endtime="20221028 04:18:10.089"/>
</kw>
<msg timestamp="20221028 04:18:10.089" level="INFO">${output} = Pipeline[ Id: 6c93bd07-7888-463b-bb14-0b03e1792d4d, Nodes: 4ea4f559-4d65-4322-8a4b-d4bfcb32f603{ip: 172.20.0.3, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858...</msg>
<status status="PASS" starttime="20221028 04:18:07.883" endtime="20221028 04:18:10.089"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${PIPELINE}' not in '''${output}'''</arg>
<arg>Pipeline already scrubbed</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20221028 04:18:10.089" endtime="20221028 04:18:10.090"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${output}</arg>
<arg>${PIPELINE}.*CLOSED</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20221028 04:18:10.090" endtime="20221028 04:18:10.090"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221028 04:18:05.497" endtime="20221028 04:18:10.091"/>
</test>
<test id="s1-s1-t7" name="Incomplete command" line="59">
<kw name="Execute And Ignore Error" library="os">
<var>${output}</var>
<arg>ozone admin pipeline</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221028 04:18:10.095" level="INFO">Running command 'ozone admin pipeline 2&gt;&amp;1'.</msg>
<msg timestamp="20221028 04:18:11.891" level="INFO">${rc} = 255</msg>
<msg timestamp="20221028 04:18:11.891" level="INFO">${output} = Incomplete command
Usage: ozone admin pipeline [-hV] [COMMAND]
Pipeline specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
Com...</msg>
<status status="PASS" starttime="20221028 04:18:10.093" endtime="20221028 04:18:11.891"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221028 04:18:11.892" level="INFO">Incomplete command
Usage: ozone admin pipeline [-hV] [COMMAND]
Pipeline specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
Commands:
  list        List all active pipelines
  activate    Activates the given Pipeline
  deactivate  Deactivates the given Pipeline
  create      create pipeline
  close       Close pipeline</msg>
<status status="PASS" starttime="20221028 04:18:11.892" endtime="20221028 04:18:11.892"/>
</kw>
<msg timestamp="20221028 04:18:11.893" level="INFO">${output} = Incomplete command
Usage: ozone admin pipeline [-hV] [COMMAND]
Pipeline specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
Com...</msg>
<status status="PASS" starttime="20221028 04:18:10.092" endtime="20221028 04:18:11.893"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Incomplete command</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221028 04:18:11.893" endtime="20221028 04:18:11.893"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>close</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221028 04:18:11.893" endtime="20221028 04:18:11.894"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>create</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221028 04:18:11.894" endtime="20221028 04:18:11.894"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>deactivate</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221028 04:18:11.894" endtime="20221028 04:18:11.895"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>list</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221028 04:18:11.895" endtime="20221028 04:18:11.895"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221028 04:18:10.092" endtime="20221028 04:18:11.895"/>
</test>
<doc>Test ozone admin pipeline command</doc>
<status status="PASS" starttime="20221028 04:17:49.680" endtime="20221028 04:18:11.896"/>
</suite>
<suite id="s1-s2" name="Single Node" source="/opt/hadoop/smoketest/basic/single_node.robot">
<test id="s1-s2-t1" name="Basic Freon smoketest for one datanode" line="25">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221028 04:17:34.267" endtime="20221028 04:17:34.267"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>10</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20221028 04:17:34.268" level="INFO">${random} = F4XR6p494p</msg>
<status status="PASS" starttime="20221028 04:17:34.268" endtime="20221028 04:17:34.268"/>
</kw>
<kw name="Freon OCKG" library="freon">
<arg>prefix=${random}</arg>
<arg>args=--replication ONE --replication-type RATIS</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221028 04:17:34.274" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p F4XR6p494p --replication ONE --replication-type RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20221028 04:17:41.462" level="INFO">${rc} = 0</msg>
<msg timestamp="20221028 04:17:41.462" level="INFO">${output} = 2022-10-28 04:17:35,606 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-28 04:17:35,767 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221028 04:17:34.270" endtime="20221028 04:17:41.462"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221028 04:17:41.463" level="INFO">2022-10-28 04:17:35,606 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-28 04:17:35,767 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-10-28 04:17:35,767 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-10-28 04:17:35,966 [main] INFO freon.BaseFreonGenerator: Executing test with prefix F4XR6p494p and number-of-tests 1
2022-10-28 04:17:36,031 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-28 04:17:37,032 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-28 04:17:38,033 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-28 04:17:38,943 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2022-10-28 04:17:39,033 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-28 04:17:39,037 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false 
2022-10-28 04:17:39,725 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-10-28 04:17:39,961 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-10-28 04:17:40,034 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-28 04:17:41,034 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-10-28 04:17:41,117 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=1860.796768, max=1860.796768, mean=1860.796768, stddev=0.0, median=1860.796768, p75=1860.796768, p95=1860.796768, p98=1860.796768, p99=1860.796768, p999=1860.796768, mean_rate=0.49274178563115967, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-10-28 04:17:41,117 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 5
2022-10-28 04:17:41,120 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-10-28 04:17:41,120 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20221028 04:17:41.463" endtime="20221028 04:17:41.463"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221028 04:17:41.464" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221028 04:17:41.464" endtime="20221028 04:17:41.464"/>
</kw>
<status status="PASS" starttime="20221028 04:17:34.270" endtime="20221028 04:17:41.465"/>
</kw>
<msg timestamp="20221028 04:17:41.465" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221028 04:17:34.269" endtime="20221028 04:17:41.466"/>
</kw>
<msg timestamp="20221028 04:17:41.466" level="INFO">${result} = 2022-10-28 04:17:35,606 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-28 04:17:35,767 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221028 04:17:34.269" endtime="20221028 04:17:41.466"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221028 04:17:41.466" endtime="20221028 04:17:41.467"/>
</kw>
<status status="PASS" starttime="20221028 04:17:34.268" endtime="20221028 04:17:41.467"/>
</kw>
<kw name="Freon OCKV" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221028 04:17:41.472" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p F4XR6p494p  2&gt;&amp;1'.</msg>
<msg timestamp="20221028 04:17:46.512" level="INFO">${rc} = 0</msg>
<msg timestamp="20221028 04:17:46.513" level="INFO">${output} = 2022-10-28 04:17:42,758 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-28 04:17:42,964 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221028 04:17:41.470" endtime="20221028 04:17:46.513"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221028 04:17:46.514" level="INFO">2022-10-28 04:17:42,758 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-28 04:17:42,964 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-10-28 04:17:42,964 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-10-28 04:17:43,133 [main] INFO freon.BaseFreonGenerator: Executing test with prefix F4XR6p494p and number-of-tests 1
2022-10-28 04:17:43,189 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-28 04:17:44,193 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-28 04:17:44,417 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-10-28 04:17:45,193 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-10-28 04:17:46,165 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=40.592181, max=40.592181, mean=40.592181, stddev=0.0, median=40.592181, p75=40.592181, p95=40.592181, p98=40.592181, p99=40.592181, p999=40.592181, mean_rate=0.9756994880857989, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-10-28 04:17:46,166 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2022-10-28 04:17:46,166 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-10-28 04:17:46,166 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20221028 04:17:46.513" endtime="20221028 04:17:46.514"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221028 04:17:46.514" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221028 04:17:46.514" endtime="20221028 04:17:46.515"/>
</kw>
<status status="PASS" starttime="20221028 04:17:41.469" endtime="20221028 04:17:46.515"/>
</kw>
<msg timestamp="20221028 04:17:46.515" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221028 04:17:41.469" endtime="20221028 04:17:46.515"/>
</kw>
<msg timestamp="20221028 04:17:46.516" level="INFO">${result} = 2022-10-28 04:17:42,758 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-28 04:17:42,964 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221028 04:17:41.469" endtime="20221028 04:17:46.516"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221028 04:17:46.516" endtime="20221028 04:17:46.516"/>
</kw>
<status status="PASS" starttime="20221028 04:17:41.467" endtime="20221028 04:17:46.517"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221028 04:17:34.266" endtime="20221028 04:17:46.517"/>
</test>
<doc>Smoketest for one datanode</doc>
<status status="PASS" starttime="20221028 04:17:34.206" endtime="20221028 04:17:46.518"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="34528"/>
</suite>
<statistics>
<total>
<stat pass="8" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="8" fail="0" skip="0" id="s1" name="ozonescripts">ozonescripts</stat>
<stat pass="7" fail="0" skip="0" id="s1-s1" name="Pipeline">ozonescripts.Pipeline</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Single Node">ozonescripts.Single Node</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
