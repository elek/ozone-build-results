<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 5.0.1 (Python 3.8.10 on linux)" generated="20221019 10:54:03.543" rpa="false" schemaversion="3">
<suite id="s1" name="restart">
<suite id="s1-s1" name="Validate" source="/opt/hadoop/smoketest/freon/validate.robot">
<test id="s1-s1-t1" name="Ozone Client Key Validator" line="25">
<kw name="Freon OCKV" library="freon">
<arg>prefix=ockg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221019 10:50:33.241" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p ockgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20221019 10:50:39.472" level="INFO">${rc} = 0</msg>
<msg timestamp="20221019 10:50:39.473" level="INFO">${output} = 2022-10-19 10:50:35,068 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-19 10:50:35,322 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221019 10:50:33.235" endtime="20221019 10:50:39.473"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221019 10:50:39.474" level="INFO">2022-10-19 10:50:35,068 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-19 10:50:35,322 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-10-19 10:50:35,322 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-10-19 10:50:35,577 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpre and number-of-tests 1
2022-10-19 10:50:35,659 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-19 10:50:36,663 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-19 10:50:37,131 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-10-19 10:50:37,664 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-19 10:50:38,665 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-10-19 10:50:39,110 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=53.388775, max=53.388775, mean=53.388775, stddev=0.0, median=53.388775, p75=53.388775, p95=53.388775, p98=53.388775, p99=53.388775, p999=53.388775, mean_rate=0.9742040765602707, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-10-19 10:50:39,111 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2022-10-19 10:50:39,111 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-10-19 10:50:39,111 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20221019 10:50:39.473" endtime="20221019 10:50:39.474"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221019 10:50:39.475" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221019 10:50:39.474" endtime="20221019 10:50:39.475"/>
</kw>
<status status="PASS" starttime="20221019 10:50:33.234" endtime="20221019 10:50:39.476"/>
</kw>
<msg timestamp="20221019 10:50:39.476" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221019 10:50:33.234" endtime="20221019 10:50:39.478"/>
</kw>
<msg timestamp="20221019 10:50:39.478" level="INFO">${result} = 2022-10-19 10:50:35,068 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-19 10:50:35,322 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221019 10:50:33.233" endtime="20221019 10:50:39.478"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221019 10:50:39.479" endtime="20221019 10:50:39.479"/>
</kw>
<status status="PASS" starttime="20221019 10:50:33.231" endtime="20221019 10:50:39.479"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221019 10:50:33.230" endtime="20221019 10:50:39.480"/>
</test>
<doc>Test freon data validation commands</doc>
<status status="PASS" starttime="20221019 10:50:33.164" endtime="20221019 10:50:39.482"/>
</suite>
<suite id="s1-s2" name="Generate-Chunk" source="/opt/hadoop/smoketest/freon/generate-chunk.robot">
<test id="s1-s2-t1" name="DN Chunk Generator" line="25">
<kw name="Freon DCG" library="freon">
<arg>prefix=dcg${PREFIX}</arg>
<arg>n=100</arg>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20221019 10:50:45.375" endtime="20221019 10:50:45.376"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon dcg -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221019 10:50:45.382" level="INFO">Running command 'ozone freon dcg -t 1 -n100 -p dcgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20221019 10:50:53.728" level="INFO">${rc} = 0</msg>
<msg timestamp="20221019 10:50:53.728" level="INFO">${output} = 2022-10-19 10:50:47,105 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-19 10:50:47,253 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221019 10:50:45.378" endtime="20221019 10:50:53.728"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221019 10:50:53.729" level="INFO">2022-10-19 10:50:47,105 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-19 10:50:47,253 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-10-19 10:50:47,254 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-10-19 10:50:48,272 [main] INFO freon.BaseFreonGenerator: Executing test with prefix dcgpre and number-of-tests 100
2022-10-19 10:50:48,315 [Thread-4] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-10-19 10:50:48,904 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-10-19 10:50:49,182 [pool-3-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-10-19 10:50:49,325 [Thread-4] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-10-19 10:50:50,326 [Thread-4] INFO freon.ProgressBar: Progress: 10.00 % (10 out of 100)
2022-10-19 10:50:51,326 [Thread-4] INFO freon.ProgressBar: Progress: 47.00 % (47 out of 100)
2022-10-19 10:50:52,326 [Thread-4] INFO freon.ProgressBar: Progress: 91.00 % (91 out of 100)
2022-10-19 10:50:53,327 [Thread-4] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2022-10-19 10:50:53,368 [shutdown-hook-0] INFO metrics: type=TIMER, name=chunk-write, count=100, min=10.502846, max=904.276713, mean=33.67107911931595, stddev=87.19315337331257, median=24.094906, p75=29.69463, p95=37.947666, p98=45.534799, p99=49.892218, p999=904.276713, mean_rate=23.219532575256817, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-10-19 10:50:53,369 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 5
2022-10-19 10:50:53,369 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-10-19 10:50:53,369 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20221019 10:50:53.728" endtime="20221019 10:50:53.730"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221019 10:50:53.730" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221019 10:50:53.730" endtime="20221019 10:50:53.730"/>
</kw>
<status status="PASS" starttime="20221019 10:50:45.377" endtime="20221019 10:50:53.731"/>
</kw>
<msg timestamp="20221019 10:50:53.731" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221019 10:50:45.377" endtime="20221019 10:50:53.732"/>
</kw>
<msg timestamp="20221019 10:50:53.733" level="INFO">${result} = 2022-10-19 10:50:47,105 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-19 10:50:47,253 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221019 10:50:45.376" endtime="20221019 10:50:53.733"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221019 10:50:53.733" endtime="20221019 10:50:53.733"/>
</kw>
<status status="PASS" starttime="20221019 10:50:45.374" endtime="20221019 10:50:53.734"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221019 10:50:45.363" endtime="20221019 10:50:53.734"/>
</test>
<doc>Test freon chunk generation commands</doc>
<status status="PASS" starttime="20221019 10:50:45.289" endtime="20221019 10:50:53.736"/>
</suite>
<suite id="s1-s3" name="Validate-Chunk" source="/opt/hadoop/smoketest/freon/validate-chunk.robot">
<test id="s1-s3-t1" name="DN Chunk Validator" line="25">
<kw name="Freon DCV" library="freon">
<arg>prefix=dcg${PREFIX}</arg>
<arg>n=100</arg>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20221019 10:50:59.220" endtime="20221019 10:50:59.221"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon dcv -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221019 10:50:59.226" level="INFO">Running command 'ozone freon dcv -t 1 -n100 -p dcgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20221019 10:51:05.107" level="INFO">${rc} = 0</msg>
<msg timestamp="20221019 10:51:05.107" level="INFO">${output} = 2022-10-19 10:51:01,015 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-19 10:51:01,203 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221019 10:50:59.222" endtime="20221019 10:51:05.107"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221019 10:51:05.108" level="INFO">2022-10-19 10:51:01,015 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-19 10:51:01,203 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-10-19 10:51:01,203 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-10-19 10:51:01,384 [main] INFO freon.BaseFreonGenerator: Executing test with prefix dcgpre and number-of-tests 100
2022-10-19 10:51:01,452 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-10-19 10:51:01,972 [main] INFO freon.DatanodeChunkValidator: Using pipeline PipelineID=7f815c09-dd52-43c0-91d9-e64c90dc849f
2022-10-19 10:51:02,460 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-10-19 10:51:02,557 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-10-19 10:51:02,892 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-10-19 10:51:03,461 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-10-19 10:51:04,462 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2022-10-19 10:51:04,702 [shutdown-hook-0] INFO metrics: type=TIMER, name=chunk-validate, count=100, min=2.124309, max=25.341503, mean=5.629266419364177, stddev=3.667191572635454, median=4.454318, p75=7.516431, p95=11.666348, p98=15.019261, p99=18.845576, p999=25.341503, mean_rate=94.00703037969173, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-10-19 10:51:04,703 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2022-10-19 10:51:04,703 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-10-19 10:51:04,703 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20221019 10:51:05.107" endtime="20221019 10:51:05.109"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221019 10:51:05.110" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221019 10:51:05.109" endtime="20221019 10:51:05.110"/>
</kw>
<status status="PASS" starttime="20221019 10:50:59.222" endtime="20221019 10:51:05.110"/>
</kw>
<msg timestamp="20221019 10:51:05.110" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221019 10:50:59.221" endtime="20221019 10:51:05.112"/>
</kw>
<msg timestamp="20221019 10:51:05.112" level="INFO">${result} = 2022-10-19 10:51:01,015 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-19 10:51:01,203 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221019 10:50:59.221" endtime="20221019 10:51:05.112"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221019 10:51:05.112" endtime="20221019 10:51:05.113"/>
</kw>
<status status="PASS" starttime="20221019 10:50:59.218" endtime="20221019 10:51:05.113"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221019 10:50:59.217" endtime="20221019 10:51:05.113"/>
</test>
<doc>Test freon chunk validation commands</doc>
<status status="PASS" starttime="20221019 10:50:59.160" endtime="20221019 10:51:05.115"/>
</suite>
<suite id="s1-s4" name="Validate" source="/opt/hadoop/smoketest/freon/validate.robot">
<test id="s1-s4-t1" name="Ozone Client Key Validator" line="25">
<kw name="Freon OCKV" library="freon">
<arg>prefix=ockg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221019 10:52:28.823" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p ockgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20221019 10:52:36.073" level="INFO">${rc} = 0</msg>
<msg timestamp="20221019 10:52:36.073" level="INFO">${output} = 2022-10-19 10:52:30,734 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-19 10:52:30,913 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221019 10:52:28.818" endtime="20221019 10:52:36.073"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221019 10:52:36.075" level="INFO">2022-10-19 10:52:30,734 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-19 10:52:30,913 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-10-19 10:52:30,916 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-10-19 10:52:31,149 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpre and number-of-tests 1
2022-10-19 10:52:31,247 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-19 10:52:32,266 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-19 10:52:33,267 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-19 10:52:33,304 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-10-19 10:52:34,267 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-19 10:52:35,268 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-10-19 10:52:35,703 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=275.348137, max=275.348137, mean=275.348137, stddev=0.0, median=275.348137, p75=275.348137, p95=275.348137, p98=275.348137, p99=275.348137, p999=275.348137, mean_rate=0.9472294585027348, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-10-19 10:52:35,704 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 4
2022-10-19 10:52:35,704 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-10-19 10:52:35,706 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20221019 10:52:36.074" endtime="20221019 10:52:36.075"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221019 10:52:36.076" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221019 10:52:36.075" endtime="20221019 10:52:36.076"/>
</kw>
<status status="PASS" starttime="20221019 10:52:28.817" endtime="20221019 10:52:36.077"/>
</kw>
<msg timestamp="20221019 10:52:36.077" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221019 10:52:28.817" endtime="20221019 10:52:36.078"/>
</kw>
<msg timestamp="20221019 10:52:36.079" level="INFO">${result} = 2022-10-19 10:52:30,734 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-19 10:52:30,913 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221019 10:52:28.816" endtime="20221019 10:52:36.079"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221019 10:52:36.079" endtime="20221019 10:52:36.080"/>
</kw>
<status status="PASS" starttime="20221019 10:52:28.814" endtime="20221019 10:52:36.080"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221019 10:52:28.812" endtime="20221019 10:52:36.080"/>
</test>
<doc>Test freon data validation commands</doc>
<status status="PASS" starttime="20221019 10:52:28.745" endtime="20221019 10:52:36.082"/>
</suite>
<suite id="s1-s5" name="Validate-Chunk" source="/opt/hadoop/smoketest/freon/validate-chunk.robot">
<test id="s1-s5-t1" name="DN Chunk Validator" line="25">
<kw name="Freon DCV" library="freon">
<arg>prefix=dcg${PREFIX}</arg>
<arg>n=100</arg>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20221019 10:52:42.006" endtime="20221019 10:52:42.011"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon dcv -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221019 10:52:42.022" level="INFO">Running command 'ozone freon dcv -t 1 -n100 -p dcgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20221019 10:52:48.161" level="INFO">${rc} = 0</msg>
<msg timestamp="20221019 10:52:48.161" level="INFO">${output} = 2022-10-19 10:52:43,835 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-19 10:52:44,049 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221019 10:52:42.016" endtime="20221019 10:52:48.162"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221019 10:52:48.163" level="INFO">2022-10-19 10:52:43,835 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-19 10:52:44,049 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-10-19 10:52:44,049 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-10-19 10:52:44,253 [main] INFO freon.BaseFreonGenerator: Executing test with prefix dcgpre and number-of-tests 100
2022-10-19 10:52:44,359 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-10-19 10:52:44,940 [main] INFO freon.DatanodeChunkValidator: Using pipeline PipelineID=7f815c09-dd52-43c0-91d9-e64c90dc849f
2022-10-19 10:52:45,362 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-10-19 10:52:45,499 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-10-19 10:52:45,783 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-10-19 10:52:46,364 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-10-19 10:52:47,365 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2022-10-19 10:52:47,806 [shutdown-hook-0] INFO metrics: type=TIMER, name=chunk-validate, count=100, min=2.414782, max=18.19192, mean=4.751383045134851, stddev=2.685247055878586, median=3.801829, p75=6.003504, p95=7.880968, p98=13.414357, p99=17.618201, p999=18.19192, mean_rate=89.06624797312273, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-10-19 10:52:47,806 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2022-10-19 10:52:47,807 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-10-19 10:52:47,807 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20221019 10:52:48.162" endtime="20221019 10:52:48.163"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221019 10:52:48.164" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221019 10:52:48.163" endtime="20221019 10:52:48.164"/>
</kw>
<status status="PASS" starttime="20221019 10:52:42.014" endtime="20221019 10:52:48.165"/>
</kw>
<msg timestamp="20221019 10:52:48.165" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221019 10:52:42.013" endtime="20221019 10:52:48.167"/>
</kw>
<msg timestamp="20221019 10:52:48.167" level="INFO">${result} = 2022-10-19 10:52:43,835 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-19 10:52:44,049 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221019 10:52:42.011" endtime="20221019 10:52:48.167"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221019 10:52:48.167" endtime="20221019 10:52:48.168"/>
</kw>
<status status="PASS" starttime="20221019 10:52:42.004" endtime="20221019 10:52:48.168"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221019 10:52:42.003" endtime="20221019 10:52:48.168"/>
</test>
<doc>Test freon chunk validation commands</doc>
<status status="PASS" starttime="20221019 10:52:41.933" endtime="20221019 10:52:48.170"/>
</suite>
<suite id="s1-s6" name="Generate" source="/opt/hadoop/smoketest/freon/generate.robot">
<test id="s1-s6-t1" name="Ozone Client Key Generator" line="25">
<kw name="Freon OCKG" library="freon">
<arg>prefix=ockg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221019 10:52:53.990" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p ockgpost  2&gt;&amp;1'.</msg>
<msg timestamp="20221019 10:53:00.541" level="INFO">${rc} = 0</msg>
<msg timestamp="20221019 10:53:00.541" level="INFO">${output} = 2022-10-19 10:52:55,663 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-19 10:52:55,792 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221019 10:52:53.986" endtime="20221019 10:53:00.541"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221019 10:53:00.543" level="INFO">2022-10-19 10:52:55,663 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-19 10:52:55,792 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-10-19 10:52:55,792 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-10-19 10:52:56,002 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpost and number-of-tests 1
2022-10-19 10:52:56,124 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-19 10:52:57,129 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-19 10:52:58,017 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-10-19 10:52:58,130 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-19 10:52:58,329 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-10-19 10:52:59,130 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-19 10:53:00,131 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-10-19 10:53:00,186 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=2671.22919, max=2671.22919, mean=2671.22919, stddev=0.0, median=2671.22919, p75=2671.22919, p95=2671.22919, p98=2671.22919, p99=2671.22919, p999=2671.22919, mean_rate=0.30612685633167486, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-10-19 10:53:00,187 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 4
2022-10-19 10:53:00,187 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-10-19 10:53:00,187 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20221019 10:53:00.542" endtime="20221019 10:53:00.543"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221019 10:53:00.544" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221019 10:53:00.543" endtime="20221019 10:53:00.544"/>
</kw>
<status status="PASS" starttime="20221019 10:52:53.985" endtime="20221019 10:53:00.545"/>
</kw>
<msg timestamp="20221019 10:53:00.545" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221019 10:52:53.985" endtime="20221019 10:53:00.547"/>
</kw>
<msg timestamp="20221019 10:53:00.547" level="INFO">${result} = 2022-10-19 10:52:55,663 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-19 10:52:55,792 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221019 10:52:53.984" endtime="20221019 10:53:00.547"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221019 10:53:00.547" endtime="20221019 10:53:00.549"/>
</kw>
<status status="PASS" starttime="20221019 10:52:53.982" endtime="20221019 10:53:00.550"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221019 10:52:53.981" endtime="20221019 10:53:00.550"/>
</test>
<test id="s1-s6-t2" name="OM Key Generator" line="28">
<kw name="Freon OMKG" library="freon">
<arg>prefix=omkg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon omkg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221019 10:53:00.558" level="INFO">Running command 'ozone freon omkg  -t 1 -n1 -p omkgpost  2&gt;&amp;1'.</msg>
<msg timestamp="20221019 10:53:04.931" level="INFO">${rc} = 0</msg>
<msg timestamp="20221019 10:53:04.931" level="INFO">${output} = 2022-10-19 10:53:02,341 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-19 10:53:02,644 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221019 10:53:00.556" endtime="20221019 10:53:04.931"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221019 10:53:04.932" level="INFO">2022-10-19 10:53:02,341 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-19 10:53:02,644 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-10-19 10:53:02,645 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-10-19 10:53:02,908 [main] INFO freon.BaseFreonGenerator: Executing test with prefix omkgpost and number-of-tests 1
2022-10-19 10:53:02,993 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-19 10:53:03,998 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-10-19 10:53:04,869 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=87.884231, max=87.884231, mean=87.884231, stddev=0.0, median=87.884231, p75=87.884231, p95=87.884231, p98=87.884231, p99=87.884231, p999=87.884231, mean_rate=0.9669819806021596, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-10-19 10:53:04,874 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2022-10-19 10:53:04,875 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-10-19 10:53:04,875 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20221019 10:53:04.932" endtime="20221019 10:53:04.933"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221019 10:53:04.933" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221019 10:53:04.933" endtime="20221019 10:53:04.933"/>
</kw>
<status status="PASS" starttime="20221019 10:53:00.555" endtime="20221019 10:53:04.934"/>
</kw>
<msg timestamp="20221019 10:53:04.934" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221019 10:53:00.555" endtime="20221019 10:53:04.934"/>
</kw>
<msg timestamp="20221019 10:53:04.935" level="INFO">${result} = 2022-10-19 10:53:02,341 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-19 10:53:02,644 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221019 10:53:00.554" endtime="20221019 10:53:04.935"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221019 10:53:04.935" endtime="20221019 10:53:04.935"/>
</kw>
<status status="PASS" starttime="20221019 10:53:00.552" endtime="20221019 10:53:04.936"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221019 10:53:00.551" endtime="20221019 10:53:04.936"/>
</test>
<test id="s1-s6-t3" name="OM Bucket Generator" line="31">
<kw name="Freon OMBG" library="freon">
<arg>prefix=ombg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ombg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221019 10:53:04.943" level="INFO">Running command 'ozone freon ombg  -t 1 -n1 -p ombgpost  2&gt;&amp;1'.</msg>
<msg timestamp="20221019 10:53:08.917" level="INFO">${rc} = 0</msg>
<msg timestamp="20221019 10:53:08.917" level="INFO">${output} = 2022-10-19 10:53:06,646 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-19 10:53:06,842 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221019 10:53:04.941" endtime="20221019 10:53:08.917"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221019 10:53:08.919" level="INFO">2022-10-19 10:53:06,646 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-19 10:53:06,842 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-10-19 10:53:06,842 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-10-19 10:53:07,022 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ombgpost and number-of-tests 1
2022-10-19 10:53:07,106 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-19 10:53:08,132 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-10-19 10:53:08,863 [shutdown-hook-0] INFO metrics: type=TIMER, name=bucket-create, count=1, min=21.995963, max=21.995963, mean=21.995963, stddev=0.0, median=21.995963, p75=21.995963, p95=21.995963, p98=21.995963, p99=21.995963, p999=21.995963, mean_rate=0.9810910553512501, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-10-19 10:53:08,864 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2022-10-19 10:53:08,865 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-10-19 10:53:08,865 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20221019 10:53:08.917" endtime="20221019 10:53:08.920"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221019 10:53:08.920" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221019 10:53:08.920" endtime="20221019 10:53:08.921"/>
</kw>
<status status="PASS" starttime="20221019 10:53:04.940" endtime="20221019 10:53:08.921"/>
</kw>
<msg timestamp="20221019 10:53:08.921" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221019 10:53:04.940" endtime="20221019 10:53:08.922"/>
</kw>
<msg timestamp="20221019 10:53:08.923" level="INFO">${result} = 2022-10-19 10:53:06,646 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-19 10:53:06,842 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221019 10:53:04.939" endtime="20221019 10:53:08.923"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221019 10:53:08.923" endtime="20221019 10:53:08.924"/>
</kw>
<status status="PASS" starttime="20221019 10:53:04.938" endtime="20221019 10:53:08.924"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221019 10:53:04.937" endtime="20221019 10:53:08.925"/>
</test>
<doc>Test freon data generation commands</doc>
<status status="PASS" starttime="20221019 10:52:53.919" endtime="20221019 10:53:08.926"/>
</suite>
<suite id="s1-s7" name="Validate" source="/opt/hadoop/smoketest/freon/validate.robot">
<test id="s1-s7-t1" name="Ozone Client Key Validator" line="25">
<kw name="Freon OCKV" library="freon">
<arg>prefix=ockg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221019 10:53:15.013" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p ockgpost  2&gt;&amp;1'.</msg>
<msg timestamp="20221019 10:53:20.947" level="INFO">${rc} = 0</msg>
<msg timestamp="20221019 10:53:20.947" level="INFO">${output} = 2022-10-19 10:53:16,727 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-19 10:53:16,881 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221019 10:53:15.009" endtime="20221019 10:53:20.947"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221019 10:53:20.948" level="INFO">2022-10-19 10:53:16,727 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-19 10:53:16,881 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-10-19 10:53:16,881 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-10-19 10:53:17,121 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpost and number-of-tests 1
2022-10-19 10:53:17,223 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-19 10:53:18,228 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-19 10:53:18,591 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-10-19 10:53:19,253 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-19 10:53:20,255 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-10-19 10:53:20,585 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=56.410052, max=56.410052, mean=56.410052, stddev=0.0, median=56.410052, p75=56.410052, p95=56.410052, p98=56.410052, p99=56.410052, p999=56.410052, mean_rate=0.9648249103049316, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-10-19 10:53:20,586 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2022-10-19 10:53:20,586 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-10-19 10:53:20,586 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20221019 10:53:20.947" endtime="20221019 10:53:20.948"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221019 10:53:20.949" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221019 10:53:20.948" endtime="20221019 10:53:20.949"/>
</kw>
<status status="PASS" starttime="20221019 10:53:15.008" endtime="20221019 10:53:20.950"/>
</kw>
<msg timestamp="20221019 10:53:20.950" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221019 10:53:15.008" endtime="20221019 10:53:20.952"/>
</kw>
<msg timestamp="20221019 10:53:20.952" level="INFO">${result} = 2022-10-19 10:53:16,727 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-19 10:53:16,881 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221019 10:53:15.007" endtime="20221019 10:53:20.952"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221019 10:53:20.952" endtime="20221019 10:53:20.953"/>
</kw>
<status status="PASS" starttime="20221019 10:53:15.006" endtime="20221019 10:53:20.953"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221019 10:53:15.005" endtime="20221019 10:53:20.954"/>
</test>
<doc>Test freon data validation commands</doc>
<status status="PASS" starttime="20221019 10:53:14.944" endtime="20221019 10:53:20.955"/>
</suite>
<suite id="s1-s8" name="Generate-Chunk" source="/opt/hadoop/smoketest/freon/generate-chunk.robot">
<test id="s1-s8-t1" name="DN Chunk Generator" line="25">
<kw name="Freon DCG" library="freon">
<arg>prefix=dcg${PREFIX}</arg>
<arg>n=100</arg>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20221019 10:53:26.628" endtime="20221019 10:53:26.628"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon dcg -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221019 10:53:26.634" level="INFO">Running command 'ozone freon dcg -t 1 -n100 -p dcgpost  2&gt;&amp;1'.</msg>
<msg timestamp="20221019 10:53:35.151" level="INFO">${rc} = 0</msg>
<msg timestamp="20221019 10:53:35.151" level="INFO">${output} = 2022-10-19 10:53:28,596 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-19 10:53:28,804 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221019 10:53:26.630" endtime="20221019 10:53:35.151"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221019 10:53:35.152" level="INFO">2022-10-19 10:53:28,596 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-19 10:53:28,804 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-10-19 10:53:28,807 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-10-19 10:53:29,692 [main] INFO freon.BaseFreonGenerator: Executing test with prefix dcgpost and number-of-tests 100
2022-10-19 10:53:29,732 [Thread-4] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-10-19 10:53:30,405 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-10-19 10:53:30,733 [pool-3-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-10-19 10:53:30,742 [Thread-4] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-10-19 10:53:31,743 [Thread-4] INFO freon.ProgressBar: Progress: 7.00 % (7 out of 100)
2022-10-19 10:53:32,743 [Thread-4] INFO freon.ProgressBar: Progress: 41.00 % (41 out of 100)
2022-10-19 10:53:33,744 [Thread-4] INFO freon.ProgressBar: Progress: 83.00 % (83 out of 100)
2022-10-19 10:53:34,744 [Thread-4] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2022-10-19 10:53:34,787 [shutdown-hook-0] INFO metrics: type=TIMER, name=chunk-write, count=100, min=11.432891, max=832.530483, mean=34.15744573728073, stddev=79.95634098920489, median=25.008632, p75=32.16767, p95=42.769325, p98=57.227357, p99=58.750096, p999=832.530483, mean_rate=23.855718130029526, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-10-19 10:53:34,787 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 5
2022-10-19 10:53:34,788 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-10-19 10:53:34,788 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20221019 10:53:35.151" endtime="20221019 10:53:35.153"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221019 10:53:35.153" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221019 10:53:35.153" endtime="20221019 10:53:35.154"/>
</kw>
<status status="PASS" starttime="20221019 10:53:26.629" endtime="20221019 10:53:35.154"/>
</kw>
<msg timestamp="20221019 10:53:35.154" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221019 10:53:26.629" endtime="20221019 10:53:35.156"/>
</kw>
<msg timestamp="20221019 10:53:35.156" level="INFO">${result} = 2022-10-19 10:53:28,596 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-19 10:53:28,804 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221019 10:53:26.628" endtime="20221019 10:53:35.156"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221019 10:53:35.157" endtime="20221019 10:53:35.157"/>
</kw>
<status status="PASS" starttime="20221019 10:53:26.626" endtime="20221019 10:53:35.157"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221019 10:53:26.625" endtime="20221019 10:53:35.157"/>
</test>
<doc>Test freon chunk generation commands</doc>
<status status="PASS" starttime="20221019 10:53:26.565" endtime="20221019 10:53:35.159"/>
</suite>
<suite id="s1-s9" name="Validate-Chunk" source="/opt/hadoop/smoketest/freon/validate-chunk.robot">
<test id="s1-s9-t1" name="DN Chunk Validator" line="25">
<kw name="Freon DCV" library="freon">
<arg>prefix=dcg${PREFIX}</arg>
<arg>n=100</arg>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20221019 10:53:40.878" endtime="20221019 10:53:40.879"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon dcv -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221019 10:53:40.887" level="INFO">Running command 'ozone freon dcv -t 1 -n100 -p dcgpost  2&gt;&amp;1'.</msg>
<msg timestamp="20221019 10:53:46.763" level="INFO">${rc} = 0</msg>
<msg timestamp="20221019 10:53:46.763" level="INFO">${output} = 2022-10-19 10:53:42,670 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-19 10:53:42,818 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221019 10:53:40.882" endtime="20221019 10:53:46.763"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221019 10:53:46.764" level="INFO">2022-10-19 10:53:42,670 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-19 10:53:42,818 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-10-19 10:53:42,819 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-10-19 10:53:43,036 [main] INFO freon.BaseFreonGenerator: Executing test with prefix dcgpost and number-of-tests 100
2022-10-19 10:53:43,137 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-10-19 10:53:43,712 [main] INFO freon.DatanodeChunkValidator: Using pipeline PipelineID=7f815c09-dd52-43c0-91d9-e64c90dc849f
2022-10-19 10:53:44,152 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-10-19 10:53:44,275 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-10-19 10:53:44,555 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-10-19 10:53:45,152 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-10-19 10:53:46,153 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2022-10-19 10:53:46,391 [shutdown-hook-0] INFO metrics: type=TIMER, name=chunk-validate, count=100, min=2.262853, max=19.92937, mean=4.7885721100000005, stddev=3.4107741166946774, median=3.561084, p75=5.401312, p95=11.774478, p98=17.762468, p99=19.598062, p999=19.92937, mean_rate=91.19272839835061, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-10-19 10:53:46,391 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2022-10-19 10:53:46,392 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-10-19 10:53:46,392 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20221019 10:53:46.763" endtime="20221019 10:53:46.765"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221019 10:53:46.765" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221019 10:53:46.765" endtime="20221019 10:53:46.766"/>
</kw>
<status status="PASS" starttime="20221019 10:53:40.881" endtime="20221019 10:53:46.766"/>
</kw>
<msg timestamp="20221019 10:53:46.766" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221019 10:53:40.880" endtime="20221019 10:53:46.767"/>
</kw>
<msg timestamp="20221019 10:53:46.768" level="INFO">${result} = 2022-10-19 10:53:42,670 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-19 10:53:42,818 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221019 10:53:40.879" endtime="20221019 10:53:46.768"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221019 10:53:46.768" endtime="20221019 10:53:46.769"/>
</kw>
<status status="PASS" starttime="20221019 10:53:40.876" endtime="20221019 10:53:46.769"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221019 10:53:40.875" endtime="20221019 10:53:46.769"/>
</test>
<doc>Test freon chunk validation commands</doc>
<status status="PASS" starttime="20221019 10:53:40.809" endtime="20221019 10:53:46.771"/>
</suite>
<suite id="s1-s10" name="Generate" source="/opt/hadoop/smoketest/freon/generate.robot">
<test id="s1-s10-t1" name="Ozone Client Key Generator" line="25">
<kw name="Freon OCKG" library="freon">
<arg>prefix=ockg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221019 10:50:11.063" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p ockgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20221019 10:50:18.844" level="INFO">${rc} = 0</msg>
<msg timestamp="20221019 10:50:18.844" level="INFO">${output} = 2022-10-19 10:50:12,829 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-19 10:50:13,089 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221019 10:50:11.057" endtime="20221019 10:50:18.844"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221019 10:50:18.845" level="INFO">2022-10-19 10:50:12,829 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-19 10:50:13,089 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-10-19 10:50:13,089 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-10-19 10:50:13,350 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpre and number-of-tests 1
2022-10-19 10:50:13,441 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-19 10:50:14,443 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-19 10:50:14,648 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2022-10-19 10:50:14,820 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false 
2022-10-19 10:50:15,444 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-19 10:50:15,900 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-10-19 10:50:16,224 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-10-19 10:50:16,445 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-19 10:50:17,446 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-19 10:50:18,447 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-10-19 10:50:18,489 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=2958.732283, max=2958.732283, mean=2958.732283, stddev=0.0, median=2958.732283, p75=2958.732283, p95=2958.732283, p98=2958.732283, p99=2958.732283, p999=2958.732283, mean_rate=0.2764599007264842, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-10-19 10:50:18,497 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 5
2022-10-19 10:50:18,497 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-10-19 10:50:18,497 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20221019 10:50:18.845" endtime="20221019 10:50:18.846"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221019 10:50:18.846" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221019 10:50:18.846" endtime="20221019 10:50:18.846"/>
</kw>
<status status="PASS" starttime="20221019 10:50:11.056" endtime="20221019 10:50:18.847"/>
</kw>
<msg timestamp="20221019 10:50:18.847" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221019 10:50:11.056" endtime="20221019 10:50:18.849"/>
</kw>
<msg timestamp="20221019 10:50:18.849" level="INFO">${result} = 2022-10-19 10:50:12,829 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-19 10:50:13,089 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221019 10:50:11.055" endtime="20221019 10:50:18.849"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221019 10:50:18.849" endtime="20221019 10:50:18.850"/>
</kw>
<status status="PASS" starttime="20221019 10:50:11.053" endtime="20221019 10:50:18.850"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221019 10:50:11.052" endtime="20221019 10:50:18.850"/>
</test>
<test id="s1-s10-t2" name="OM Key Generator" line="28">
<kw name="Freon OMKG" library="freon">
<arg>prefix=omkg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon omkg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221019 10:50:18.860" level="INFO">Running command 'ozone freon omkg  -t 1 -n1 -p omkgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20221019 10:50:23.325" level="INFO">${rc} = 0</msg>
<msg timestamp="20221019 10:50:23.326" level="INFO">${output} = 2022-10-19 10:50:20,951 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-19 10:50:21,117 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221019 10:50:18.856" endtime="20221019 10:50:23.326"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221019 10:50:23.327" level="INFO">2022-10-19 10:50:20,951 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-19 10:50:21,117 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-10-19 10:50:21,117 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-10-19 10:50:21,326 [main] INFO freon.BaseFreonGenerator: Executing test with prefix omkgpre and number-of-tests 1
2022-10-19 10:50:21,431 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-19 10:50:22,444 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-10-19 10:50:23,269 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=117.469128, max=117.469128, mean=117.469128, stddev=0.0, median=117.469128, p75=117.469128, p95=117.469128, p98=117.469128, p99=117.469128, p999=117.469128, mean_rate=0.9839269278559469, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-10-19 10:50:23,271 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2022-10-19 10:50:23,271 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-10-19 10:50:23,271 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20221019 10:50:23.326" endtime="20221019 10:50:23.327"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221019 10:50:23.328" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221019 10:50:23.328" endtime="20221019 10:50:23.328"/>
</kw>
<status status="PASS" starttime="20221019 10:50:18.856" endtime="20221019 10:50:23.328"/>
</kw>
<msg timestamp="20221019 10:50:23.329" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221019 10:50:18.855" endtime="20221019 10:50:23.329"/>
</kw>
<msg timestamp="20221019 10:50:23.330" level="INFO">${result} = 2022-10-19 10:50:20,951 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-19 10:50:21,117 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221019 10:50:18.854" endtime="20221019 10:50:23.330"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221019 10:50:23.330" endtime="20221019 10:50:23.330"/>
</kw>
<status status="PASS" starttime="20221019 10:50:18.852" endtime="20221019 10:50:23.331"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221019 10:50:18.851" endtime="20221019 10:50:23.331"/>
</test>
<test id="s1-s10-t3" name="OM Bucket Generator" line="31">
<kw name="Freon OMBG" library="freon">
<arg>prefix=ombg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ombg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221019 10:50:23.339" level="INFO">Running command 'ozone freon ombg  -t 1 -n1 -p ombgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20221019 10:50:27.623" level="INFO">${rc} = 0</msg>
<msg timestamp="20221019 10:50:27.623" level="INFO">${output} = 2022-10-19 10:50:25,158 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-19 10:50:25,346 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221019 10:50:23.337" endtime="20221019 10:50:27.623"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221019 10:50:27.624" level="INFO">2022-10-19 10:50:25,158 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-19 10:50:25,346 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-10-19 10:50:25,350 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-10-19 10:50:25,590 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ombgpre and number-of-tests 1
2022-10-19 10:50:25,701 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-19 10:50:26,707 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-10-19 10:50:27,565 [shutdown-hook-0] INFO metrics: type=TIMER, name=bucket-create, count=1, min=16.690288, max=16.690288, mean=16.690288, stddev=0.0, median=16.690288, p75=16.690288, p95=16.690288, p98=16.690288, p99=16.690288, p999=16.690288, mean_rate=0.9757236892109176, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-10-19 10:50:27,566 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2022-10-19 10:50:27,567 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-10-19 10:50:27,567 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20221019 10:50:27.623" endtime="20221019 10:50:27.624"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221019 10:50:27.625" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221019 10:50:27.625" endtime="20221019 10:50:27.626"/>
</kw>
<status status="PASS" starttime="20221019 10:50:23.336" endtime="20221019 10:50:27.626"/>
</kw>
<msg timestamp="20221019 10:50:27.626" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221019 10:50:23.336" endtime="20221019 10:50:27.627"/>
</kw>
<msg timestamp="20221019 10:50:27.627" level="INFO">${result} = 2022-10-19 10:50:25,158 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-19 10:50:25,346 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221019 10:50:23.335" endtime="20221019 10:50:27.627"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221019 10:50:27.627" endtime="20221019 10:50:27.628"/>
</kw>
<status status="PASS" starttime="20221019 10:50:23.333" endtime="20221019 10:50:27.628"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221019 10:50:23.332" endtime="20221019 10:50:27.629"/>
</test>
<doc>Test freon data generation commands</doc>
<status status="PASS" starttime="20221019 10:50:10.991" endtime="20221019 10:50:27.631"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="86508"/>
</suite>
<statistics>
<total>
<stat pass="14" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="14" fail="0" skip="0" id="s1" name="restart">restart</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Validate">restart.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Generate-Chunk">restart.Generate-Chunk</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3" name="Validate-Chunk">restart.Validate-Chunk</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="Validate">restart.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s5" name="Validate-Chunk">restart.Validate-Chunk</stat>
<stat pass="3" fail="0" skip="0" id="s1-s6" name="Generate">restart.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s7" name="Validate">restart.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s8" name="Generate-Chunk">restart.Generate-Chunk</stat>
<stat pass="1" fail="0" skip="0" id="s1-s9" name="Validate-Chunk">restart.Validate-Chunk</stat>
<stat pass="3" fail="0" skip="0" id="s1-s10" name="Generate">restart.Generate</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
