<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 5.0.1 (Python 3.8.10 on linux)" generated="20221019 10:44:44.955" rpa="false" schemaversion="3">
<suite id="s1" name="ozones3-haproxy" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-t1" name="Check webui static resources" line="29">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221019 10:44:12.790" endtime="20221019 10:44:12.791"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -s -I http://${SCM}:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221019 10:44:12.797" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20221019 10:44:12.887" level="INFO">${rc} = 0</msg>
<msg timestamp="20221019 10:44:12.887" level="INFO">${output} = HTTP/1.1 200 OK
Date: Wed, 19 Oct 2022 10:44:12 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Wed, 19 Oct 2022 09:30:38 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20221019 10:44:12.792" endtime="20221019 10:44:12.887"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221019 10:44:12.890" level="INFO">HTTP/1.1 200 OK
Date: Wed, 19 Oct 2022 10:44:12 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Wed, 19 Oct 2022 09:30:38 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20221019 10:44:12.889" endtime="20221019 10:44:12.890"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221019 10:44:12.891" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221019 10:44:12.890" endtime="20221019 10:44:12.892"/>
</kw>
<status status="PASS" starttime="20221019 10:44:12.792" endtime="20221019 10:44:12.892"/>
</kw>
<msg timestamp="20221019 10:44:12.892" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221019 10:44:12.792" endtime="20221019 10:44:12.894"/>
</kw>
<msg timestamp="20221019 10:44:12.894" level="INFO">${result} = HTTP/1.1 200 OK
Date: Wed, 19 Oct 2022 10:44:12 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Wed, 19 Oct 2022 09:30:38 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20221019 10:44:12.791" endtime="20221019 10:44:12.894"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221019 10:44:12.894" endtime="20221019 10:44:12.895"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221019 10:44:12.789" endtime="20221019 10:44:12.895"/>
</test>
<test id="s1-t2" name="Basic Freon smoketest" line="34">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221019 10:44:12.897" endtime="20221019 10:44:12.897"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>10</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20221019 10:44:12.898" level="INFO">${random} = 48bmPdnyyS</msg>
<status status="PASS" starttime="20221019 10:44:12.898" endtime="20221019 10:44:12.898"/>
</kw>
<kw name="Freon OCKG" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221019 10:44:12.904" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p 48bmPdnyyS  2&gt;&amp;1'.</msg>
<msg timestamp="20221019 10:44:20.965" level="INFO">${rc} = 0</msg>
<msg timestamp="20221019 10:44:20.965" level="INFO">${output} = 2022-10-19 10:44:14,941 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-19 10:44:15,175 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221019 10:44:12.902" endtime="20221019 10:44:20.965"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221019 10:44:20.967" level="INFO">2022-10-19 10:44:14,941 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-19 10:44:15,175 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-10-19 10:44:15,175 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-10-19 10:44:15,458 [main] INFO freon.BaseFreonGenerator: Executing test with prefix 48bmPdnyyS and number-of-tests 1
2022-10-19 10:44:15,551 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-19 10:44:16,555 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-19 10:44:16,906 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2022-10-19 10:44:17,007 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false 
2022-10-19 10:44:17,556 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-19 10:44:17,950 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-10-19 10:44:18,272 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-10-19 10:44:18,557 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-19 10:44:19,557 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-19 10:44:20,558 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-10-19 10:44:20,611 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=2646.449666, max=2646.449666, mean=2646.449666, stddev=0.0, median=2646.449666, p75=2646.449666, p95=2646.449666, p98=2646.449666, p99=2646.449666, p999=2646.449666, mean_rate=0.2802474019580527, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-10-19 10:44:20,612 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 5
2022-10-19 10:44:20,612 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-10-19 10:44:20,612 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20221019 10:44:20.966" endtime="20221019 10:44:20.967"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221019 10:44:20.968" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221019 10:44:20.967" endtime="20221019 10:44:20.968"/>
</kw>
<status status="PASS" starttime="20221019 10:44:12.901" endtime="20221019 10:44:20.968"/>
</kw>
<msg timestamp="20221019 10:44:20.968" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221019 10:44:12.901" endtime="20221019 10:44:20.969"/>
</kw>
<msg timestamp="20221019 10:44:20.969" level="INFO">${result} = 2022-10-19 10:44:14,941 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-19 10:44:15,175 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221019 10:44:12.900" endtime="20221019 10:44:20.970"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221019 10:44:20.970" endtime="20221019 10:44:20.970"/>
</kw>
<status status="PASS" starttime="20221019 10:44:12.898" endtime="20221019 10:44:20.971"/>
</kw>
<kw name="Freon OCKV" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221019 10:44:20.977" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p 48bmPdnyyS  2&gt;&amp;1'.</msg>
<msg timestamp="20221019 10:44:27.850" level="INFO">${rc} = 0</msg>
<msg timestamp="20221019 10:44:27.850" level="INFO">${output} = 2022-10-19 10:44:22,994 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-19 10:44:23,180 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221019 10:44:20.974" endtime="20221019 10:44:27.850"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221019 10:44:27.851" level="INFO">2022-10-19 10:44:22,994 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-19 10:44:23,180 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-10-19 10:44:23,181 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-10-19 10:44:23,484 [main] INFO freon.BaseFreonGenerator: Executing test with prefix 48bmPdnyyS and number-of-tests 1
2022-10-19 10:44:23,614 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-19 10:44:24,626 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-19 10:44:25,329 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-10-19 10:44:25,626 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-19 10:44:26,626 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-10-19 10:44:27,485 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=47.068449, max=47.068449, mean=47.068449, stddev=0.0, median=47.068449, p75=47.068449, p95=47.068449, p98=47.068449, p99=47.068449, p999=47.068449, mean_rate=0.9697787282738569, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-10-19 10:44:27,487 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 4
2022-10-19 10:44:27,487 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-10-19 10:44:27,487 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20221019 10:44:27.850" endtime="20221019 10:44:27.851"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221019 10:44:27.852" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221019 10:44:27.852" endtime="20221019 10:44:27.852"/>
</kw>
<status status="PASS" starttime="20221019 10:44:20.974" endtime="20221019 10:44:27.853"/>
</kw>
<msg timestamp="20221019 10:44:27.853" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221019 10:44:20.973" endtime="20221019 10:44:27.853"/>
</kw>
<msg timestamp="20221019 10:44:27.854" level="INFO">${result} = 2022-10-19 10:44:22,994 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-19 10:44:23,180 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221019 10:44:20.972" endtime="20221019 10:44:27.854"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221019 10:44:27.854" endtime="20221019 10:44:27.855"/>
</kw>
<status status="PASS" starttime="20221019 10:44:20.971" endtime="20221019 10:44:27.855"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221019 10:44:12.896" endtime="20221019 10:44:27.855"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20221019 10:44:12.702" endtime="20221019 10:44:27.857"/>
</suite>
<statistics>
<total>
<stat pass="2" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="2" fail="0" skip="0" id="s1" name="ozones3-haproxy">ozones3-haproxy</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
