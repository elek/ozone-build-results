<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 5.0.1 (Python 3.8.10 on linux)" generated="20221019 10:42:46.725" rpa="false" schemaversion="3">
<suite id="s1" name="ozone-topology">
<suite id="s1-s1" name="Cli" source="/opt/hadoop/smoketest/topology/cli.robot">
<test id="s1-s1-t1" name="Run printTopology" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221019 10:38:28.573" level="INFO">Running command 'ozone admin printTopology 2&gt;&amp;1'.</msg>
<msg timestamp="20221019 10:38:33.398" level="INFO">${rc} = 0</msg>
<msg timestamp="20221019 10:38:33.398" level="INFO">${output} = State = HEALTHY
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.9(ozone-topolog...</msg>
<status status="PASS" starttime="20221019 10:38:28.568" endtime="20221019 10:38:33.399"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221019 10:38:33.400" level="INFO">State = HEALTHY
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2</msg>
<status status="PASS" starttime="20221019 10:38:33.399" endtime="20221019 10:38:33.400"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221019 10:38:33.401" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221019 10:38:33.401" endtime="20221019 10:38:33.401"/>
</kw>
<status status="PASS" starttime="20221019 10:38:28.568" endtime="20221019 10:38:33.402"/>
</kw>
<msg timestamp="20221019 10:38:33.402" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221019 10:38:28.567" endtime="20221019 10:38:33.404"/>
</kw>
<msg timestamp="20221019 10:38:33.404" level="INFO">${output} = State = HEALTHY
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.9(ozone-topolog...</msg>
<status status="PASS" starttime="20221019 10:38:28.567" endtime="20221019 10:38:33.404"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
<arg>IN_SERVICE</arg>
<arg>/rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221019 10:38:33.404" endtime="20221019 10:38:33.405"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221019 10:38:28.565" endtime="20221019 10:38:33.405"/>
</test>
<test id="s1-s1-t2" name="Run printTopology -o" line="30">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology -o</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221019 10:38:33.412" level="INFO">Running command 'ozone admin printTopology -o 2&gt;&amp;1'.</msg>
<msg timestamp="20221019 10:38:37.994" level="INFO">${rc} = 0</msg>
<msg timestamp="20221019 10:38:37.994" level="INFO">${output} = State = HEALTHY
Location: /rack1
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net) IN_SERVICE
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net) IN_SERVICE
 10.5.0.6(ozone-topology_data...</msg>
<status status="PASS" starttime="20221019 10:38:33.409" endtime="20221019 10:38:37.994"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221019 10:38:37.996" level="INFO">State = HEALTHY
Location: /rack1
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net) IN_SERVICE
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net) IN_SERVICE
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net) IN_SERVICE
Location: /rack2
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net) IN_SERVICE
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net) IN_SERVICE
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net) IN_SERVICE</msg>
<status status="PASS" starttime="20221019 10:38:37.994" endtime="20221019 10:38:37.996"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221019 10:38:37.999" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221019 10:38:37.996" endtime="20221019 10:38:37.999"/>
</kw>
<status status="PASS" starttime="20221019 10:38:33.409" endtime="20221019 10:38:38.000"/>
</kw>
<msg timestamp="20221019 10:38:38.000" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221019 10:38:33.408" endtime="20221019 10:38:38.000"/>
</kw>
<msg timestamp="20221019 10:38:38.001" level="INFO">${output} = State = HEALTHY
Location: /rack1
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net) IN_SERVICE
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net) IN_SERVICE
 10.5.0.6(ozone-topology_data...</msg>
<status status="PASS" starttime="20221019 10:38:33.408" endtime="20221019 10:38:38.001"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Location: /rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221019 10:38:38.001" endtime="20221019 10:38:38.002"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net) IN_SERVICE</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221019 10:38:38.002" endtime="20221019 10:38:38.003"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221019 10:38:33.407" endtime="20221019 10:38:38.003"/>
</test>
<test id="s1-s1-t3" name="Run printTopology --operational-state IN_SERVICE" line="34">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology --operational-state IN_SERVICE</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221019 10:38:38.010" level="INFO">Running command 'ozone admin printTopology --operational-state IN_SERVICE 2&gt;&amp;1'.</msg>
<msg timestamp="20221019 10:38:42.697" level="INFO">${rc} = 0</msg>
<msg timestamp="20221019 10:38:42.697" level="INFO">${output} = State = HEALTHY
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.9(ozone-topolog...</msg>
<status status="PASS" starttime="20221019 10:38:38.007" endtime="20221019 10:38:42.697"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221019 10:38:42.699" level="INFO">State = HEALTHY
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2</msg>
<status status="PASS" starttime="20221019 10:38:42.698" endtime="20221019 10:38:42.699"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221019 10:38:42.700" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221019 10:38:42.699" endtime="20221019 10:38:42.700"/>
</kw>
<status status="PASS" starttime="20221019 10:38:38.006" endtime="20221019 10:38:42.700"/>
</kw>
<msg timestamp="20221019 10:38:42.700" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221019 10:38:38.006" endtime="20221019 10:38:42.701"/>
</kw>
<msg timestamp="20221019 10:38:42.701" level="INFO">${output} = State = HEALTHY
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.9(ozone-topolog...</msg>
<status status="PASS" starttime="20221019 10:38:38.005" endtime="20221019 10:38:42.701"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
<arg>IN_SERVICE</arg>
<arg>/rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221019 10:38:42.701" endtime="20221019 10:38:42.702"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221019 10:38:38.004" endtime="20221019 10:38:42.702"/>
</test>
<test id="s1-s1-t4" name="Run printTopology --node-state HEALTHY" line="37">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology --node-state HEALTHY</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221019 10:38:42.708" level="INFO">Running command 'ozone admin printTopology --node-state HEALTHY 2&gt;&amp;1'.</msg>
<msg timestamp="20221019 10:38:46.825" level="INFO">${rc} = 0</msg>
<msg timestamp="20221019 10:38:46.825" level="INFO">${output} = State = HEALTHY
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.9(ozone-topolog...</msg>
<status status="PASS" starttime="20221019 10:38:42.706" endtime="20221019 10:38:46.825"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221019 10:38:46.827" level="INFO">State = HEALTHY
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2</msg>
<status status="PASS" starttime="20221019 10:38:46.825" endtime="20221019 10:38:46.827"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221019 10:38:46.828" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221019 10:38:46.827" endtime="20221019 10:38:46.828"/>
</kw>
<status status="PASS" starttime="20221019 10:38:42.705" endtime="20221019 10:38:46.829"/>
</kw>
<msg timestamp="20221019 10:38:46.829" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221019 10:38:42.705" endtime="20221019 10:38:46.829"/>
</kw>
<msg timestamp="20221019 10:38:46.830" level="INFO">${output} = State = HEALTHY
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.9(ozone-topolog...</msg>
<status status="PASS" starttime="20221019 10:38:42.704" endtime="20221019 10:38:46.830"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
<arg>IN_SERVICE</arg>
<arg>/rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221019 10:38:46.830" endtime="20221019 10:38:46.831"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221019 10:38:42.703" endtime="20221019 10:38:46.831"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20221019 10:38:28.499" endtime="20221019 10:38:46.833"/>
</suite>
<suite id="s1-s2" name="Recon" source="/opt/hadoop/smoketest/recon">
<suite id="s1-s2-s1" name="Recon-Api" source="/opt/hadoop/smoketest/recon/recon-api.robot">
<test id="s1-s2-s1-t1" name="Check if Recon picks up OM data" line="61">
<kw name="Freon OCKG" library="freon" type="SETUP">
<arg>n=10</arg>
<arg>args=-s 1025 -v recon -b api</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221019 10:38:53.412" level="INFO">Running command 'ozone freon ockg  -t 1 -n10 -p ockg -s 1025 -v recon -b api 2&gt;&amp;1'.</msg>
<msg timestamp="20221019 10:39:05.800" level="INFO">${rc} = 0</msg>
<msg timestamp="20221019 10:39:05.800" level="INFO">${output} = 2022-10-19 10:38:56,094 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-19 10:38:56,285 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221019 10:38:53.405" endtime="20221019 10:39:05.801"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221019 10:39:05.803" level="INFO">2022-10-19 10:38:56,094 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-19 10:38:56,285 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-10-19 10:38:56,285 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-10-19 10:38:56,541 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockg and number-of-tests 10
2022-10-19 10:38:56,677 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2022-10-19 10:38:57,687 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2022-10-19 10:38:58,153 [main] INFO rpc.RpcClient: Creating Volume: recon, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2022-10-19 10:38:58,245 [main] INFO rpc.RpcClient: Creating Bucket: recon/api, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false 
2022-10-19 10:38:58,688 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2022-10-19 10:38:59,130 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-10-19 10:38:59,534 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-10-19 10:38:59,688 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2022-10-19 10:39:00,689 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2022-10-19 10:39:01,690 [Thread-5] INFO freon.ProgressBar: Progress: 10.00 % (1 out of 10)
2022-10-19 10:39:02,691 [Thread-5] INFO freon.ProgressBar: Progress: 20.00 % (2 out of 10)
2022-10-19 10:39:03,691 [Thread-5] INFO freon.ProgressBar: Progress: 50.00 % (5 out of 10)
2022-10-19 10:39:04,692 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (10 out of 10)
2022-10-19 10:39:05,421 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=10, min=94.499152, max=2575.847723, mean=595.003762645768, stddev=763.9848370548773, median=212.613391, p75=509.755474, p95=2575.847723, p98=2575.847723, p99=2575.847723, p999=2575.847723, mean_rate=1.4016190084627649, m1=0.6, m5=0.6, m15=0.6, rate_unit=events/second, duration_unit=milliseconds
2022-10-19 10:39:05,422 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 9
2022-10-19 10:39:05,423 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-10-19 10:39:05,424 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 10</msg>
<status status="PASS" starttime="20221019 10:39:05.802" endtime="20221019 10:39:05.803"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221019 10:39:05.804" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221019 10:39:05.803" endtime="20221019 10:39:05.804"/>
</kw>
<status status="PASS" starttime="20221019 10:38:53.405" endtime="20221019 10:39:05.805"/>
</kw>
<msg timestamp="20221019 10:39:05.805" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221019 10:38:53.404" endtime="20221019 10:39:05.806"/>
</kw>
<msg timestamp="20221019 10:39:05.807" level="INFO">${result} = 2022-10-19 10:38:56,094 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-19 10:38:56,285 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221019 10:38:53.404" endtime="20221019 10:39:05.807"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221019 10:39:05.807" endtime="20221019 10:39:05.808"/>
</kw>
<status status="PASS" starttime="20221019 10:38:53.403" endtime="20221019 10:39:05.808"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Check if Recon picks up container from OM</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221019 10:39:05.810" endtime="20221019 10:39:05.811"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221019 10:39:05.816" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20221019 10:39:06.097" level="INFO">${rc} = 0</msg>
<msg timestamp="20221019 10:39:06.098" level="INFO">${output} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221019 10:39:05.813" endtime="20221019 10:39:06.098"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221019 10:39:06.099" level="INFO">{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221019 10:39:06.098" endtime="20221019 10:39:06.100"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221019 10:39:06.100" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221019 10:39:06.100" endtime="20221019 10:39:06.100"/>
</kw>
<status status="PASS" starttime="20221019 10:39:05.812" endtime="20221019 10:39:06.101"/>
</kw>
<msg timestamp="20221019 10:39:06.101" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221019 10:39:05.811" endtime="20221019 10:39:06.102"/>
</kw>
<msg timestamp="20221019 10:39:06.102" level="INFO">${result} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221019 10:39:05.811" endtime="20221019 10:39:06.102"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221019 10:39:06.102" endtime="20221019 10:39:06.103"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221019 10:39:06.111" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20221019 10:39:06.174" level="INFO">${rc} = 0</msg>
<msg timestamp="20221019 10:39:06.174" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221019 10:39:06.107" endtime="20221019 10:39:06.175"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221019 10:39:06.177" level="INFO">[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221019 10:39:06.175" endtime="20221019 10:39:06.177"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221019 10:39:06.178" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221019 10:39:06.177" endtime="20221019 10:39:06.178"/>
</kw>
<status status="PASS" starttime="20221019 10:39:06.106" endtime="20221019 10:39:06.178"/>
</kw>
<msg timestamp="20221019 10:39:06.178" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221019 10:39:06.105" endtime="20221019 10:39:06.179"/>
</kw>
<msg timestamp="20221019 10:39:06.180" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221019 10:39:06.103" endtime="20221019 10:39:06.180"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20221019 10:39:06.182" level="FAIL">'[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20221019 10:39:06.181" endtime="20221019 10:39:06.182"/>
</kw>
<status status="FAIL" starttime="20221019 10:39:05.809" endtime="20221019 10:39:06.183"/>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221019 10:39:16.184" endtime="20221019 10:39:16.185"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221019 10:39:16.192" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20221019 10:39:16.212" level="INFO">${rc} = 0</msg>
<msg timestamp="20221019 10:39:16.212" level="INFO">${output} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221019 10:39:16.187" endtime="20221019 10:39:16.212"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221019 10:39:16.214" level="INFO">{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221019 10:39:16.213" endtime="20221019 10:39:16.214"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221019 10:39:16.215" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221019 10:39:16.214" endtime="20221019 10:39:16.215"/>
</kw>
<status status="PASS" starttime="20221019 10:39:16.186" endtime="20221019 10:39:16.215"/>
</kw>
<msg timestamp="20221019 10:39:16.215" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221019 10:39:16.185" endtime="20221019 10:39:16.216"/>
</kw>
<msg timestamp="20221019 10:39:16.216" level="INFO">${result} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221019 10:39:16.185" endtime="20221019 10:39:16.216"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221019 10:39:16.217" endtime="20221019 10:39:16.217"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221019 10:39:16.222" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20221019 10:39:16.240" level="INFO">${rc} = 0</msg>
<msg timestamp="20221019 10:39:16.240" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221019 10:39:16.220" endtime="20221019 10:39:16.240"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221019 10:39:16.242" level="INFO">[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221019 10:39:16.241" endtime="20221019 10:39:16.242"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221019 10:39:16.243" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221019 10:39:16.242" endtime="20221019 10:39:16.244"/>
</kw>
<status status="PASS" starttime="20221019 10:39:16.219" endtime="20221019 10:39:16.244"/>
</kw>
<msg timestamp="20221019 10:39:16.244" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221019 10:39:16.218" endtime="20221019 10:39:16.245"/>
</kw>
<msg timestamp="20221019 10:39:16.245" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221019 10:39:16.217" endtime="20221019 10:39:16.245"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20221019 10:39:16.246" level="FAIL">'[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20221019 10:39:16.245" endtime="20221019 10:39:16.247"/>
</kw>
<status status="FAIL" starttime="20221019 10:39:16.183" endtime="20221019 10:39:16.248"/>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221019 10:39:26.249" endtime="20221019 10:39:26.250"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221019 10:39:26.254" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20221019 10:39:26.276" level="INFO">${rc} = 0</msg>
<msg timestamp="20221019 10:39:26.276" level="INFO">${output} = {"data":{"totalCount":4,"containers":[{"ContainerID":1,"NumberOfKeys":4},{"ContainerID":2,"NumberOfKeys":2},{"ContainerID":3,"NumberOfKeys":2},{"ContainerID":4,"NumberOfKeys":3}]}}</msg>
<status status="PASS" starttime="20221019 10:39:26.251" endtime="20221019 10:39:26.276"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221019 10:39:26.277" level="INFO">{"data":{"totalCount":4,"containers":[{"ContainerID":1,"NumberOfKeys":4},{"ContainerID":2,"NumberOfKeys":2},{"ContainerID":3,"NumberOfKeys":2},{"ContainerID":4,"NumberOfKeys":3}]}}</msg>
<status status="PASS" starttime="20221019 10:39:26.276" endtime="20221019 10:39:26.277"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221019 10:39:26.278" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221019 10:39:26.278" endtime="20221019 10:39:26.278"/>
</kw>
<status status="PASS" starttime="20221019 10:39:26.251" endtime="20221019 10:39:26.279"/>
</kw>
<msg timestamp="20221019 10:39:26.280" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221019 10:39:26.251" endtime="20221019 10:39:26.281"/>
</kw>
<msg timestamp="20221019 10:39:26.281" level="INFO">${result} = {"data":{"totalCount":4,"containers":[{"ContainerID":1,"NumberOfKeys":4},{"ContainerID":2,"NumberOfKeys":2},{"ContainerID":3,"NumberOfKeys":2},{"ContainerID":4,"NumberOfKeys":3}]}}</msg>
<status status="PASS" starttime="20221019 10:39:26.250" endtime="20221019 10:39:26.282"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221019 10:39:26.282" endtime="20221019 10:39:26.282"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221019 10:39:26.288" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20221019 10:39:26.307" level="INFO">${rc} = 0</msg>
<msg timestamp="20221019 10:39:26.307" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1},{"volume":"recon","bucket":"api","fileSize":2048,"count":10}]</msg>
<status status="PASS" starttime="20221019 10:39:26.285" endtime="20221019 10:39:26.307"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221019 10:39:26.308" level="INFO">[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1},{"volume":"recon","bucket":"api","fileSize":2048,"count":10}]</msg>
<status status="PASS" starttime="20221019 10:39:26.307" endtime="20221019 10:39:26.309"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221019 10:39:26.310" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221019 10:39:26.309" endtime="20221019 10:39:26.310"/>
</kw>
<status status="PASS" starttime="20221019 10:39:26.284" endtime="20221019 10:39:26.310"/>
</kw>
<msg timestamp="20221019 10:39:26.310" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221019 10:39:26.284" endtime="20221019 10:39:26.311"/>
</kw>
<msg timestamp="20221019 10:39:26.312" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1},{"volume":"recon","bucket":"api","fileSize":2048,"count":10}]</msg>
<status status="PASS" starttime="20221019 10:39:26.283" endtime="20221019 10:39:26.312"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221019 10:39:26.312" endtime="20221019 10:39:26.313"/>
</kw>
<status status="PASS" starttime="20221019 10:39:26.248" endtime="20221019 10:39:26.313"/>
</kw>
<status status="PASS" starttime="20221019 10:39:05.809" endtime="20221019 10:39:26.313"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221019 10:38:53.402" endtime="20221019 10:39:26.313"/>
</test>
<test id="s1-s2-s1-t2" name="Check if Recon picks up DN heartbeats" line="65">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/datanodes</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221019 10:39:26.328" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/datanodes 2&gt;&amp;1'.</msg>
<msg timestamp="20221019 10:39:26.379" level="INFO">${rc} = 0</msg>
<msg timestamp="20221019 10:39:26.380" level="INFO">${output} = {"totalCount":6,"datanodes":[{"uuid":"f1a56605-fa61-434e-a7e1-f8bba1530926","hostname":"ozone-topology_datanode_3_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1666175...</msg>
<status status="PASS" starttime="20221019 10:39:26.325" endtime="20221019 10:39:26.380"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221019 10:39:26.383" level="INFO">{"totalCount":6,"datanodes":[{"uuid":"f1a56605-fa61-434e-a7e1-f8bba1530926","hostname":"ozone-topology_datanode_3_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1666175942783,"storageReport":{"capacity":89297309696,"used":4096,"remaining":30758211584},"pipelines":[{"pipelineID":"547673d5-43cf-4fff-a84c-a3a194384d0c","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net"},{"pipelineID":"954b46c2-d60d-4382-916d-e667781935d9","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net"},{"pipelineID":"a6d7b0c4-b328-4b47-b158-8d56026c7803","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net"}],"containers":2,"openContainers":2,"leaderCount":2,"version":"1.3.0-SNAPSHOT","setupTime":1666175791744,"revision":"a6316c832068ecc044de87f4c2671a9ca3b86043","buildDate":"2022-10-19T09:30Z","layoutVersion":4,"networkLocation":"/rack1"},{"uuid":"c75dce91-4621-4835-b7d4-fd3f9df0d9a2","hostname":"ozone-topology_datanode_6_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1666175942770,"storageReport":{"capacity":89297309696,"used":4096,"remaining":30758354944},"pipelines":[{"pipelineID":"b55e034c-ef9e-4a09-8726-3132cd7229f5","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net"},{"pipelineID":"547673d5-43cf-4fff-a84c-a3a194384d0c","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net"},{"pipelineID":"954b46c2-d60d-4382-916d-e667781935d9","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net"}],"containers":2,"openContainers":2,"leaderCount":2,"version":"1.3.0-SNAPSHOT","setupTime":1666175790722,"revision":"a6316c832068ecc044de87f4c2671a9ca3b86043","buildDate":"2022-10-19T09:30Z","layoutVersion":4,"networkLocation":"/rack2"},{"uuid":"558ce48e-a099-48f7-a3ee-228c817af171","hostname":"ozone-topology_datanode_5_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1666175940628,"storageReport":{"capacity":89297309696,"used":8192,"remaining":30758625280},"pipelines":[{"pipelineID":"d9611793-4dcd-4cff-8ce3-d3826d3985e9","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net"},{"pipelineID":"ac009dc3-ecb6-45a0-bd14-1c758057f7a5","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net"},{"pipelineID":"f727b058-c39e-4e82-8d90-651c40e57fe5","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net"}],"containers":2,"openContainers":3,"leaderCount":2,"version":"1.3.0-SNAPSHOT","setupTime":1666175788372,"revision":"a6316c832068ecc044de87f4c2671a9ca3b86043","buildDate":"2022-10-19T09:30Z","layoutVersion":4,"networkLocation":"/rack2"},{"uuid":"cb92d857-8431-4561-99c1-9a2e425fe930","hostname":"ozone-topology_datanode_2_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1666175942724,"storageReport":{"capacity":89297309696,"used":8192,"remaining":30758354944},"pipelines":[{"pipelineID":"cf6c9a76-e665-46c7-8e9c-a1489a7082b9","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net"},{"pipelineID":"547673d5-43cf-4fff-a84c-a3a194384d0c","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net"},{"pipelineID":"954b46c2-d60d-4382-916d-e667781935d9","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net"}],"containers":2,"openContainers":2,"leaderCount":1,"version":"1.3.0-SNAPSHOT","setupTime":1666175791661,"revision":"a6316c832068ecc044de87f4c2671a9ca3b86043","buildDate":"2022-10-19T09:30Z","layoutVersion":4,"networkLocation":"/rack1"},{"uuid":"87cf2f96-e9df-4ddf-bb3f-572ace2c01b6","hostname":"ozone-topology_datanode_1_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1666175940700,"storageReport":{"capacity":89297309696,"used":8192,"remaining":30758354944},"pipelines":[{"pipelineID":"d9611793-4dcd-4cff-8ce3-d3826d3985e9","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net"},{"pipelineID":"432cd991-8ee2-40d0-801a-53eba1cf8365","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net"},{"pipelineID":"ac009dc3-ecb6-45a0-bd14-1c758057f7a5","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net"}],"containers":2,"openContainers":3,"leaderCount":2,"version":"1.3.0-SNAPSHOT","setupTime":1666175789970,"revision":"a6316c832068ecc044de87f4c2671a9ca3b86043","buildDate":"2022-10-19T09:30Z","layoutVersion":4,"networkLocation":"/rack1"},{"uuid":"5b71b88f-5dc9-45e8-8ceb-49073e4c1127","hostname":"ozone-topology_datanode_4_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1666175940621,"storageReport":{"capacity":89297309696,"used":4096,"remaining":30758416384},"pipelines":[{"pipelineID":"d9611793-4dcd-4cff-8ce3-d3826d3985e9","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net"},{"pipelineID":"ac009dc3-ecb6-45a0-bd14-1c758057f7a5","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net"},{"pipelineID":"056ba7a3-98bd-4c15-80cd-f53cd997bc5e","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net"}],"containers":2,"openContainers":3,"leaderCount":1,"version":"1.3.0-SNAPSHOT","setupTime":1666175787896,"revision":"a6316c832068ecc044de87f4c2671a9ca3b86043","buildDate":"2022-10-19T09:30Z","layoutVersion":4,"networkLocation":"/rack2"}]}</msg>
<status status="PASS" starttime="20221019 10:39:26.382" endtime="20221019 10:39:26.383"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221019 10:39:26.384" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221019 10:39:26.383" endtime="20221019 10:39:26.384"/>
</kw>
<status status="PASS" starttime="20221019 10:39:26.324" endtime="20221019 10:39:26.386"/>
</kw>
<msg timestamp="20221019 10:39:26.386" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221019 10:39:26.324" endtime="20221019 10:39:26.386"/>
</kw>
<msg timestamp="20221019 10:39:26.387" level="INFO">${result} = {"totalCount":6,"datanodes":[{"uuid":"f1a56605-fa61-434e-a7e1-f8bba1530926","hostname":"ozone-topology_datanode_3_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1666175...</msg>
<status status="PASS" starttime="20221019 10:39:26.323" endtime="20221019 10:39:26.387"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanodes</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221019 10:39:26.387" endtime="20221019 10:39:26.387"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221019 10:39:26.388" endtime="20221019 10:39:26.388"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221019 10:39:26.388" endtime="20221019 10:39:26.388"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221019 10:39:26.389" endtime="20221019 10:39:26.389"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/pipelines</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221019 10:39:26.394" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/pipelines 2&gt;&amp;1'.</msg>
<msg timestamp="20221019 10:39:26.426" level="INFO">${rc} = 0</msg>
<msg timestamp="20221019 10:39:26.426" level="INFO">${output} = {"totalCount":10,"pipelines":[{"pipelineId":"d9611793-4dcd-4cff-8ce3-d3826d3985e9","status":"OPEN","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net","datanodes":["ozone-topology_datanode_5...</msg>
<status status="PASS" starttime="20221019 10:39:26.391" endtime="20221019 10:39:26.427"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221019 10:39:26.428" level="INFO">{"totalCount":10,"pipelines":[{"pipelineId":"d9611793-4dcd-4cff-8ce3-d3826d3985e9","status":"OPEN","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net","datanodes":["ozone-topology_datanode_5_1.ozone-topology_net","ozone-topology_datanode_1_1.ozone-topology_net","ozone-topology_datanode_4_1.ozone-topology_net"],"lastLeaderElection":0,"duration":115167,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"THREE","containers":1},{"pipelineId":"432cd991-8ee2-40d0-801a-53eba1cf8365","status":"OPEN","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net","datanodes":["ozone-topology_datanode_1_1.ozone-topology_net"],"lastLeaderElection":0,"duration":114460,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"cf6c9a76-e665-46c7-8e9c-a1489a7082b9","status":"OPEN","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net","datanodes":["ozone-topology_datanode_2_1.ozone-topology_net"],"lastLeaderElection":0,"duration":117715,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"ac009dc3-ecb6-45a0-bd14-1c758057f7a5","status":"OPEN","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net","datanodes":["ozone-topology_datanode_5_1.ozone-topology_net","ozone-topology_datanode_1_1.ozone-topology_net","ozone-topology_datanode_4_1.ozone-topology_net"],"lastLeaderElection":0,"duration":114565,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"THREE","containers":1},{"pipelineId":"b55e034c-ef9e-4a09-8726-3132cd7229f5","status":"OPEN","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net","datanodes":["ozone-topology_datanode_6_1.ozone-topology_net"],"lastLeaderElection":0,"duration":115123,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"056ba7a3-98bd-4c15-80cd-f53cd997bc5e","status":"OPEN","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net","datanodes":["ozone-topology_datanode_4_1.ozone-topology_net"],"lastLeaderElection":0,"duration":114340,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"547673d5-43cf-4fff-a84c-a3a194384d0c","status":"OPEN","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net","datanodes":["ozone-topology_datanode_3_1.ozone-topology_net","ozone-topology_datanode_6_1.ozone-topology_net","ozone-topology_datanode_2_1.ozone-topology_net"],"lastLeaderElection":0,"duration":115356,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"THREE","containers":1},{"pipelineId":"954b46c2-d60d-4382-916d-e667781935d9","status":"OPEN","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net","datanodes":["ozone-topology_datanode_3_1.ozone-topology_net","ozone-topology_datanode_6_1.ozone-topology_net","ozone-topology_datanode_2_1.ozone-topology_net"],"lastLeaderElection":0,"duration":115087,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"THREE","containers":1},{"pipelineId":"a6d7b0c4-b328-4b47-b158-8d56026c7803","status":"OPEN","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net","datanodes":["ozone-topology_datanode_3_1.ozone-topology_net"],"lastLeaderElection":0,"duration":115251,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"f727b058-c39e-4e82-8d90-651c40e57fe5","status":"OPEN","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net","datanodes":["ozone-topology_datanode_5_1.ozone-topology_net"],"lastLeaderElection":0,"duration":114672,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0}]}</msg>
<status status="PASS" starttime="20221019 10:39:26.427" endtime="20221019 10:39:26.428"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221019 10:39:26.429" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221019 10:39:26.429" endtime="20221019 10:39:26.429"/>
</kw>
<status status="PASS" starttime="20221019 10:39:26.390" endtime="20221019 10:39:26.430"/>
</kw>
<msg timestamp="20221019 10:39:26.430" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221019 10:39:26.390" endtime="20221019 10:39:26.430"/>
</kw>
<msg timestamp="20221019 10:39:26.431" level="INFO">${result} = {"totalCount":10,"pipelines":[{"pipelineId":"d9611793-4dcd-4cff-8ce3-d3826d3985e9","status":"OPEN","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net","datanodes":["ozone-topology_datanode_5...</msg>
<status status="PASS" starttime="20221019 10:39:26.389" endtime="20221019 10:39:26.431"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>pipelines</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221019 10:39:26.431" endtime="20221019 10:39:26.432"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221019 10:39:26.432" endtime="20221019 10:39:26.433"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OPEN</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221019 10:39:26.433" endtime="20221019 10:39:26.434"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221019 10:39:26.434" endtime="20221019 10:39:26.435"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221019 10:39:26.435" endtime="20221019 10:39:26.436"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221019 10:39:26.436" endtime="20221019 10:39:26.436"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/clusterState</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221019 10:39:26.443" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20221019 10:39:26.471" level="INFO">${rc} = 0</msg>
<msg timestamp="20221019 10:39:26.471" level="INFO">${output} = {"pipelines":10,"totalDatanodes":6,"healthyDatanodes":6,"storageReport":{"capacity":535783858176,"used":36864,"remaining":184550318080},"containers":4,"volumes":3,"buckets":2,"keys":11}</msg>
<status status="PASS" starttime="20221019 10:39:26.438" endtime="20221019 10:39:26.471"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221019 10:39:26.473" level="INFO">{"pipelines":10,"totalDatanodes":6,"healthyDatanodes":6,"storageReport":{"capacity":535783858176,"used":36864,"remaining":184550318080},"containers":4,"volumes":3,"buckets":2,"keys":11}</msg>
<status status="PASS" starttime="20221019 10:39:26.471" endtime="20221019 10:39:26.473"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221019 10:39:26.474" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221019 10:39:26.473" endtime="20221019 10:39:26.474"/>
</kw>
<status status="PASS" starttime="20221019 10:39:26.438" endtime="20221019 10:39:26.474"/>
</kw>
<msg timestamp="20221019 10:39:26.474" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221019 10:39:26.437" endtime="20221019 10:39:26.475"/>
</kw>
<msg timestamp="20221019 10:39:26.476" level="INFO">${result} = {"pipelines":10,"totalDatanodes":6,"healthyDatanodes":6,"storageReport":{"capacity":535783858176,"used":36864,"remaining":184550318080},"containers":4,"volumes":3,"buckets":2,"keys":11}</msg>
<status status="PASS" starttime="20221019 10:39:26.437" endtime="20221019 10:39:26.476"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"totalDatanodes\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221019 10:39:26.476" endtime="20221019 10:39:26.477"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"healthyDatanodes\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221019 10:39:26.477" endtime="20221019 10:39:26.478"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"pipelines\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221019 10:39:26.478" endtime="20221019 10:39:26.479"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers/1/replicaHistory</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221019 10:39:26.487" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers/1/replicaHistory 2&gt;&amp;1'.</msg>
<msg timestamp="20221019 10:39:26.518" level="INFO">${rc} = 0</msg>
<msg timestamp="20221019 10:39:26.519" level="INFO">${output} = [{"containerId":1,"datanodeUuid":"558ce48e-a099-48f7-a3ee-228c817af171","datanodeHost":"ozone-topology_datanode_5_1.ozone-topology_net","firstSeenTime":1666175888189,"lastSeenTime":1666175888189,"last...</msg>
<status status="PASS" starttime="20221019 10:39:26.481" endtime="20221019 10:39:26.519"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221019 10:39:26.520" level="INFO">[{"containerId":1,"datanodeUuid":"558ce48e-a099-48f7-a3ee-228c817af171","datanodeHost":"ozone-topology_datanode_5_1.ozone-topology_net","firstSeenTime":1666175888189,"lastSeenTime":1666175888189,"lastBcsId":0},{"containerId":1,"datanodeUuid":"87cf2f96-e9df-4ddf-bb3f-572ace2c01b6","datanodeHost":"ozone-topology_datanode_1_1.ozone-topology_net","firstSeenTime":1666175888498,"lastSeenTime":1666175888498,"lastBcsId":0},{"containerId":1,"datanodeUuid":"5b71b88f-5dc9-45e8-8ceb-49073e4c1127","datanodeHost":"ozone-topology_datanode_4_1.ozone-topology_net","firstSeenTime":1666175888474,"lastSeenTime":1666175888474,"lastBcsId":0}]</msg>
<status status="PASS" starttime="20221019 10:39:26.520" endtime="20221019 10:39:26.520"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221019 10:39:26.521" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221019 10:39:26.521" endtime="20221019 10:39:26.521"/>
</kw>
<status status="PASS" starttime="20221019 10:39:26.480" endtime="20221019 10:39:26.522"/>
</kw>
<msg timestamp="20221019 10:39:26.522" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221019 10:39:26.480" endtime="20221019 10:39:26.523"/>
</kw>
<msg timestamp="20221019 10:39:26.523" level="INFO">${result} = [{"containerId":1,"datanodeUuid":"558ce48e-a099-48f7-a3ee-228c817af171","datanodeHost":"ozone-topology_datanode_5_1.ozone-topology_net","firstSeenTime":1666175888189,"lastSeenTime":1666175888189,"last...</msg>
<status status="PASS" starttime="20221019 10:39:26.479" endtime="20221019 10:39:26.523"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"containerId\":1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221019 10:39:26.523" endtime="20221019 10:39:26.524"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221019 10:39:26.321" endtime="20221019 10:39:26.524"/>
</test>
<test id="s1-s2-s1-t3" name="Check if Recon Web UI is up" line="88">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221019 10:39:26.530" endtime="20221019 10:39:26.530"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${ENDPOINT_URL}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221019 10:39:26.536" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20221019 10:39:26.558" level="INFO">${rc} = 0</msg>
<msg timestamp="20221019 10:39:26.558" level="INFO">${output} = &lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" ...</msg>
<status status="PASS" starttime="20221019 10:39:26.532" endtime="20221019 10:39:26.558"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221019 10:39:26.560" level="INFO">&lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" content="#000000"/&gt;&lt;link rel="manifest" href="/manifest.json"/&gt;&lt;link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto:300,400,500"/&gt;&lt;title&gt;Ozone Recon&lt;/title&gt;&lt;link href="/static/css/2.7465223f.chunk.css" rel="stylesheet"&gt;&lt;link href="/static/css/main.599d6ee1.chunk.css" rel="stylesheet"&gt;&lt;/head&gt;&lt;body&gt;&lt;noscript&gt;You need to enable JavaScript to run this app.&lt;/noscript&gt;&lt;div id="root"&gt;&lt;/div&gt;&lt;script&gt;!function(e){function r(r){for(var n,l,f=r[0],i=r[1],a=r[2],p=0,s=[];p&lt;f.length;p++)l=f[p],Object.prototype.hasOwnProperty.call(o,l)&amp;&amp;o[l]&amp;&amp;s.push(o[l][0]),o[l]=0;for(n in i)Object.prototype.hasOwnProperty.call(i,n)&amp;&amp;(e[n]=i[n]);for(c&amp;&amp;c(r);s.length;)s.shift()();return u.push.apply(u,a||[]),t()}function t(){for(var e,r=0;r&lt;u.length;r++){for(var t=u[r],n=!0,f=1;f&lt;t.length;f++){var i=t[f];0!==o[i]&amp;&amp;(n=!1)}n&amp;&amp;(u.splice(r--,1),e=l(l.s=t[0]))}return e}var n={},o={1:0},u=[];function l(r){if(n[r])return n[r].exports;var t=n[r]={i:r,l:!1,exports:{}};return e[r].call(t.exports,t,t.exports,l),t.l=!0,t.exports}l.m=e,l.c=n,l.d=function(e,r,t){l.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:t})},l.r=function(e){"undefined"!=typeof Symbol&amp;&amp;Symbol.toStringTag&amp;&amp;Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},l.t=function(e,r){if(1&amp;r&amp;&amp;(e=l(e)),8&amp;r)return e;if(4&amp;r&amp;&amp;"object"==typeof e&amp;&amp;e&amp;&amp;e.__esModule)return e;var t=Object.create(null);if(l.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&amp;r&amp;&amp;"string"!=typeof e)for(var n in e)l.d(t,n,function(r){return e[r]}.bind(null,n));return t},l.n=function(e){var r=e&amp;&amp;e.__esModule?function(){return e.default}:function(){return e};return l.d(r,"a",r),r},l.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},l.p="/";var f=this["webpackJsonpozone-recon"]=this["webpackJsonpozone-recon"]||[],i=f.push.bind(f);f.push=r,f=f.slice();for(var a=0;a&lt;f.length;a++)r(f[a]);var c=i;t()}([])&lt;/script&gt;&lt;script src="/static/js/2.59eb807f.chunk.js"&gt;&lt;/script&gt;&lt;script src="/static/js/main.1c260331.chunk.js"&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;</msg>
<status status="PASS" starttime="20221019 10:39:26.558" endtime="20221019 10:39:26.560"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221019 10:39:26.561" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221019 10:39:26.560" endtime="20221019 10:39:26.561"/>
</kw>
<status status="PASS" starttime="20221019 10:39:26.532" endtime="20221019 10:39:26.561"/>
</kw>
<msg timestamp="20221019 10:39:26.562" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221019 10:39:26.531" endtime="20221019 10:39:26.562"/>
</kw>
<msg timestamp="20221019 10:39:26.563" level="INFO">${result} = &lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" ...</msg>
<status status="PASS" starttime="20221019 10:39:26.530" endtime="20221019 10:39:26.563"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Ozone Recon</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221019 10:39:26.563" endtime="20221019 10:39:26.563"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221019 10:39:26.528" endtime="20221019 10:39:26.563"/>
</test>
<test id="s1-s2-s1-t4" name="Check web UI access" line="93">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221019 10:39:26.570" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20221019 10:39:26.576" level="INFO">${rc} = 0</msg>
<msg timestamp="20221019 10:39:26.576" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221019 10:39:26.568" endtime="20221019 10:39:26.576"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221019 10:39:26.578" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221019 10:39:26.577" endtime="20221019 10:39:26.578"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221019 10:39:26.578" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221019 10:39:26.578" endtime="20221019 10:39:26.579"/>
</kw>
<status status="PASS" starttime="20221019 10:39:26.567" endtime="20221019 10:39:26.579"/>
</kw>
<msg timestamp="20221019 10:39:26.579" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221019 10:39:26.567" endtime="20221019 10:39:26.580"/>
</kw>
<status status="PASS" starttime="20221019 10:39:26.566" endtime="20221019 10:39:26.580"/>
</kw>
<kw name="Check http return code">
<arg>${ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221019 10:39:26.585" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20221019 10:39:26.601" level="INFO">${rc} = 0</msg>
<msg timestamp="20221019 10:39:26.601" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221019 10:39:26.582" endtime="20221019 10:39:26.601"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221019 10:39:26.605" level="INFO">200</msg>
<status status="PASS" starttime="20221019 10:39:26.601" endtime="20221019 10:39:26.605"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221019 10:39:26.606" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221019 10:39:26.605" endtime="20221019 10:39:26.607"/>
</kw>
<status status="PASS" starttime="20221019 10:39:26.582" endtime="20221019 10:39:26.607"/>
</kw>
<msg timestamp="20221019 10:39:26.608" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221019 10:39:26.581" endtime="20221019 10:39:26.608"/>
</kw>
<msg timestamp="20221019 10:39:26.609" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221019 10:39:26.581" endtime="20221019 10:39:26.609"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221019 10:39:26.609" endtime="20221019 10:39:26.609"/>
</kw>
<status status="NOT RUN" starttime="20221019 10:39:26.609" endtime="20221019 10:39:26.610"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221019 10:39:26.610" endtime="20221019 10:39:26.610"/>
</kw>
<status status="PASS" starttime="20221019 10:39:26.610" endtime="20221019 10:39:26.610"/>
</branch>
<status status="PASS" starttime="20221019 10:39:26.609" endtime="20221019 10:39:26.610"/>
</if>
<status status="PASS" starttime="20221019 10:39:26.580" endtime="20221019 10:39:26.611"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221019 10:39:26.611" endtime="20221019 10:39:26.612"/>
</kw>
<status status="PASS" starttime="20221019 10:39:26.611" endtime="20221019 10:39:26.612"/>
</kw>
<kw name="Check http return code">
<arg>${ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221019 10:39:26.618" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20221019 10:39:26.635" level="INFO">${rc} = 0</msg>
<msg timestamp="20221019 10:39:26.635" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221019 10:39:26.614" endtime="20221019 10:39:26.635"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221019 10:39:26.636" level="INFO">200</msg>
<status status="PASS" starttime="20221019 10:39:26.635" endtime="20221019 10:39:26.637"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221019 10:39:26.637" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221019 10:39:26.637" endtime="20221019 10:39:26.638"/>
</kw>
<status status="PASS" starttime="20221019 10:39:26.614" endtime="20221019 10:39:26.638"/>
</kw>
<msg timestamp="20221019 10:39:26.638" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221019 10:39:26.613" endtime="20221019 10:39:26.639"/>
</kw>
<msg timestamp="20221019 10:39:26.639" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221019 10:39:26.613" endtime="20221019 10:39:26.639"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221019 10:39:26.640" endtime="20221019 10:39:26.640"/>
</kw>
<status status="NOT RUN" starttime="20221019 10:39:26.639" endtime="20221019 10:39:26.640"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221019 10:39:26.640" endtime="20221019 10:39:26.641"/>
</kw>
<status status="PASS" starttime="20221019 10:39:26.640" endtime="20221019 10:39:26.641"/>
</branch>
<status status="PASS" starttime="20221019 10:39:26.639" endtime="20221019 10:39:26.641"/>
</if>
<status status="PASS" starttime="20221019 10:39:26.612" endtime="20221019 10:39:26.641"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221019 10:39:26.565" endtime="20221019 10:39:26.641"/>
</test>
<test id="s1-s2-s1-t5" name="Check admin only api access" line="101">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221019 10:39:26.649" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20221019 10:39:26.653" level="INFO">${rc} = 0</msg>
<msg timestamp="20221019 10:39:26.653" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221019 10:39:26.645" endtime="20221019 10:39:26.653"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221019 10:39:26.654" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221019 10:39:26.654" endtime="20221019 10:39:26.654"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221019 10:39:26.655" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221019 10:39:26.655" endtime="20221019 10:39:26.656"/>
</kw>
<status status="PASS" starttime="20221019 10:39:26.645" endtime="20221019 10:39:26.656"/>
</kw>
<msg timestamp="20221019 10:39:26.656" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221019 10:39:26.644" endtime="20221019 10:39:26.657"/>
</kw>
<status status="PASS" starttime="20221019 10:39:26.644" endtime="20221019 10:39:26.657"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221019 10:39:26.662" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20221019 10:39:26.684" level="INFO">${rc} = 0</msg>
<msg timestamp="20221019 10:39:26.684" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221019 10:39:26.660" endtime="20221019 10:39:26.684"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221019 10:39:26.685" level="INFO">200</msg>
<status status="PASS" starttime="20221019 10:39:26.684" endtime="20221019 10:39:26.685"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221019 10:39:26.686" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221019 10:39:26.686" endtime="20221019 10:39:26.686"/>
</kw>
<status status="PASS" starttime="20221019 10:39:26.659" endtime="20221019 10:39:26.687"/>
</kw>
<msg timestamp="20221019 10:39:26.687" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221019 10:39:26.659" endtime="20221019 10:39:26.687"/>
</kw>
<msg timestamp="20221019 10:39:26.688" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221019 10:39:26.658" endtime="20221019 10:39:26.688"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221019 10:39:26.688" endtime="20221019 10:39:26.688"/>
</kw>
<status status="NOT RUN" starttime="20221019 10:39:26.688" endtime="20221019 10:39:26.689"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221019 10:39:26.689" endtime="20221019 10:39:26.689"/>
</kw>
<status status="PASS" starttime="20221019 10:39:26.689" endtime="20221019 10:39:26.689"/>
</branch>
<status status="PASS" starttime="20221019 10:39:26.688" endtime="20221019 10:39:26.689"/>
</if>
<status status="PASS" starttime="20221019 10:39:26.657" endtime="20221019 10:39:26.689"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221019 10:39:26.690" endtime="20221019 10:39:26.691"/>
</kw>
<status status="PASS" starttime="20221019 10:39:26.690" endtime="20221019 10:39:26.691"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221019 10:39:26.696" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20221019 10:39:26.719" level="INFO">${rc} = 0</msg>
<msg timestamp="20221019 10:39:26.719" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221019 10:39:26.694" endtime="20221019 10:39:26.719"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221019 10:39:26.720" level="INFO">200</msg>
<status status="PASS" starttime="20221019 10:39:26.719" endtime="20221019 10:39:26.720"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221019 10:39:26.721" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221019 10:39:26.721" endtime="20221019 10:39:26.721"/>
</kw>
<status status="PASS" starttime="20221019 10:39:26.693" endtime="20221019 10:39:26.722"/>
</kw>
<msg timestamp="20221019 10:39:26.722" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221019 10:39:26.692" endtime="20221019 10:39:26.722"/>
</kw>
<msg timestamp="20221019 10:39:26.723" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221019 10:39:26.692" endtime="20221019 10:39:26.723"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221019 10:39:26.724" endtime="20221019 10:39:26.724"/>
</kw>
<status status="NOT RUN" starttime="20221019 10:39:26.723" endtime="20221019 10:39:26.724"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221019 10:39:26.724" endtime="20221019 10:39:26.724"/>
</kw>
<status status="PASS" starttime="20221019 10:39:26.724" endtime="20221019 10:39:26.724"/>
</branch>
<status status="PASS" starttime="20221019 10:39:26.723" endtime="20221019 10:39:26.724"/>
</if>
<status status="PASS" starttime="20221019 10:39:26.691" endtime="20221019 10:39:26.725"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221019 10:39:26.726" endtime="20221019 10:39:26.726"/>
</kw>
<status status="PASS" starttime="20221019 10:39:26.725" endtime="20221019 10:39:26.727"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221019 10:39:26.734" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20221019 10:39:26.755" level="INFO">${rc} = 0</msg>
<msg timestamp="20221019 10:39:26.756" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221019 10:39:26.730" endtime="20221019 10:39:26.756"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221019 10:39:26.758" level="INFO">200</msg>
<status status="PASS" starttime="20221019 10:39:26.756" endtime="20221019 10:39:26.758"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221019 10:39:26.758" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221019 10:39:26.758" endtime="20221019 10:39:26.759"/>
</kw>
<status status="PASS" starttime="20221019 10:39:26.729" endtime="20221019 10:39:26.759"/>
</kw>
<msg timestamp="20221019 10:39:26.759" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221019 10:39:26.729" endtime="20221019 10:39:26.760"/>
</kw>
<msg timestamp="20221019 10:39:26.761" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221019 10:39:26.728" endtime="20221019 10:39:26.761"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221019 10:39:26.761" endtime="20221019 10:39:26.762"/>
</kw>
<status status="NOT RUN" starttime="20221019 10:39:26.761" endtime="20221019 10:39:26.762"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221019 10:39:26.762" endtime="20221019 10:39:26.762"/>
</kw>
<status status="PASS" starttime="20221019 10:39:26.762" endtime="20221019 10:39:26.762"/>
</branch>
<status status="PASS" starttime="20221019 10:39:26.761" endtime="20221019 10:39:26.762"/>
</if>
<status status="PASS" starttime="20221019 10:39:26.727" endtime="20221019 10:39:26.762"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221019 10:39:26.763" endtime="20221019 10:39:26.764"/>
</kw>
<status status="PASS" starttime="20221019 10:39:26.763" endtime="20221019 10:39:26.764"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221019 10:39:26.773" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20221019 10:39:26.798" level="INFO">${rc} = 0</msg>
<msg timestamp="20221019 10:39:26.798" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221019 10:39:26.767" endtime="20221019 10:39:26.798"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221019 10:39:26.801" level="INFO">200</msg>
<status status="PASS" starttime="20221019 10:39:26.799" endtime="20221019 10:39:26.801"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221019 10:39:26.801" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221019 10:39:26.801" endtime="20221019 10:39:26.801"/>
</kw>
<status status="PASS" starttime="20221019 10:39:26.766" endtime="20221019 10:39:26.802"/>
</kw>
<msg timestamp="20221019 10:39:26.802" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221019 10:39:26.765" endtime="20221019 10:39:26.802"/>
</kw>
<msg timestamp="20221019 10:39:26.803" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221019 10:39:26.765" endtime="20221019 10:39:26.803"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221019 10:39:26.804" endtime="20221019 10:39:26.804"/>
</kw>
<status status="NOT RUN" starttime="20221019 10:39:26.803" endtime="20221019 10:39:26.804"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221019 10:39:26.804" endtime="20221019 10:39:26.805"/>
</kw>
<status status="PASS" starttime="20221019 10:39:26.804" endtime="20221019 10:39:26.805"/>
</branch>
<status status="PASS" starttime="20221019 10:39:26.803" endtime="20221019 10:39:26.805"/>
</if>
<status status="PASS" starttime="20221019 10:39:26.764" endtime="20221019 10:39:26.805"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221019 10:39:26.643" endtime="20221019 10:39:26.806"/>
</test>
<test id="s1-s2-s1-t6" name="Check unhealthy, (admin) api access" line="114">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221019 10:39:26.814" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20221019 10:39:26.819" level="INFO">${rc} = 0</msg>
<msg timestamp="20221019 10:39:26.819" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221019 10:39:26.811" endtime="20221019 10:39:26.821"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221019 10:39:26.822" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221019 10:39:26.822" endtime="20221019 10:39:26.823"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221019 10:39:26.823" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221019 10:39:26.823" endtime="20221019 10:39:26.823"/>
</kw>
<status status="PASS" starttime="20221019 10:39:26.811" endtime="20221019 10:39:26.824"/>
</kw>
<msg timestamp="20221019 10:39:26.824" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221019 10:39:26.810" endtime="20221019 10:39:26.824"/>
</kw>
<status status="PASS" starttime="20221019 10:39:26.810" endtime="20221019 10:39:26.824"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221019 10:39:26.835" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20221019 10:39:26.918" level="INFO">${rc} = 0</msg>
<msg timestamp="20221019 10:39:26.918" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221019 10:39:26.833" endtime="20221019 10:39:26.918"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221019 10:39:26.920" level="INFO">200</msg>
<status status="PASS" starttime="20221019 10:39:26.919" endtime="20221019 10:39:26.921"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221019 10:39:26.921" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221019 10:39:26.921" endtime="20221019 10:39:26.922"/>
</kw>
<status status="PASS" starttime="20221019 10:39:26.832" endtime="20221019 10:39:26.922"/>
</kw>
<msg timestamp="20221019 10:39:26.922" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221019 10:39:26.826" endtime="20221019 10:39:26.924"/>
</kw>
<msg timestamp="20221019 10:39:26.924" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221019 10:39:26.826" endtime="20221019 10:39:26.924"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221019 10:39:26.925" endtime="20221019 10:39:26.925"/>
</kw>
<status status="NOT RUN" starttime="20221019 10:39:26.925" endtime="20221019 10:39:26.925"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221019 10:39:26.925" endtime="20221019 10:39:26.926"/>
</kw>
<status status="PASS" starttime="20221019 10:39:26.925" endtime="20221019 10:39:26.926"/>
</branch>
<status status="PASS" starttime="20221019 10:39:26.924" endtime="20221019 10:39:26.926"/>
</if>
<status status="PASS" starttime="20221019 10:39:26.825" endtime="20221019 10:39:26.926"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221019 10:39:26.927" endtime="20221019 10:39:26.927"/>
</kw>
<status status="PASS" starttime="20221019 10:39:26.926" endtime="20221019 10:39:26.928"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221019 10:39:26.936" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20221019 10:39:26.958" level="INFO">${rc} = 0</msg>
<msg timestamp="20221019 10:39:26.958" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221019 10:39:26.932" endtime="20221019 10:39:26.958"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221019 10:39:26.960" level="INFO">200</msg>
<status status="PASS" starttime="20221019 10:39:26.959" endtime="20221019 10:39:26.960"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221019 10:39:26.961" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221019 10:39:26.960" endtime="20221019 10:39:26.961"/>
</kw>
<status status="PASS" starttime="20221019 10:39:26.930" endtime="20221019 10:39:26.961"/>
</kw>
<msg timestamp="20221019 10:39:26.962" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221019 10:39:26.929" endtime="20221019 10:39:26.962"/>
</kw>
<msg timestamp="20221019 10:39:26.963" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221019 10:39:26.928" endtime="20221019 10:39:26.963"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221019 10:39:26.963" endtime="20221019 10:39:26.963"/>
</kw>
<status status="NOT RUN" starttime="20221019 10:39:26.963" endtime="20221019 10:39:26.963"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221019 10:39:26.964" endtime="20221019 10:39:26.964"/>
</kw>
<status status="PASS" starttime="20221019 10:39:26.963" endtime="20221019 10:39:26.964"/>
</branch>
<status status="PASS" starttime="20221019 10:39:26.963" endtime="20221019 10:39:26.964"/>
</if>
<status status="PASS" starttime="20221019 10:39:26.928" endtime="20221019 10:39:26.964"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221019 10:39:26.965" endtime="20221019 10:39:26.966"/>
</kw>
<status status="PASS" starttime="20221019 10:39:26.965" endtime="20221019 10:39:26.966"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221019 10:39:26.971" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20221019 10:39:26.990" level="INFO">${rc} = 0</msg>
<msg timestamp="20221019 10:39:26.990" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221019 10:39:26.968" endtime="20221019 10:39:26.990"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221019 10:39:26.991" level="INFO">200</msg>
<status status="PASS" starttime="20221019 10:39:26.991" endtime="20221019 10:39:26.992"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221019 10:39:26.992" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221019 10:39:26.992" endtime="20221019 10:39:26.993"/>
</kw>
<status status="PASS" starttime="20221019 10:39:26.968" endtime="20221019 10:39:26.993"/>
</kw>
<msg timestamp="20221019 10:39:26.993" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221019 10:39:26.967" endtime="20221019 10:39:26.994"/>
</kw>
<msg timestamp="20221019 10:39:26.994" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221019 10:39:26.967" endtime="20221019 10:39:26.994"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221019 10:39:26.995" endtime="20221019 10:39:26.995"/>
</kw>
<status status="NOT RUN" starttime="20221019 10:39:26.994" endtime="20221019 10:39:26.995"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221019 10:39:26.995" endtime="20221019 10:39:26.995"/>
</kw>
<status status="PASS" starttime="20221019 10:39:26.995" endtime="20221019 10:39:26.995"/>
</branch>
<status status="PASS" starttime="20221019 10:39:26.994" endtime="20221019 10:39:26.995"/>
</if>
<status status="PASS" starttime="20221019 10:39:26.966" endtime="20221019 10:39:26.996"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221019 10:39:26.996" endtime="20221019 10:39:26.997"/>
</kw>
<status status="PASS" starttime="20221019 10:39:26.996" endtime="20221019 10:39:26.997"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221019 10:39:27.002" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20221019 10:39:27.020" level="INFO">${rc} = 0</msg>
<msg timestamp="20221019 10:39:27.020" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221019 10:39:26.999" endtime="20221019 10:39:27.021"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221019 10:39:27.022" level="INFO">200</msg>
<status status="PASS" starttime="20221019 10:39:27.021" endtime="20221019 10:39:27.023"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221019 10:39:27.023" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221019 10:39:27.023" endtime="20221019 10:39:27.024"/>
</kw>
<status status="PASS" starttime="20221019 10:39:26.999" endtime="20221019 10:39:27.024"/>
</kw>
<msg timestamp="20221019 10:39:27.024" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221019 10:39:26.998" endtime="20221019 10:39:27.025"/>
</kw>
<msg timestamp="20221019 10:39:27.025" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221019 10:39:26.998" endtime="20221019 10:39:27.025"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221019 10:39:27.026" endtime="20221019 10:39:27.026"/>
</kw>
<status status="NOT RUN" starttime="20221019 10:39:27.026" endtime="20221019 10:39:27.026"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221019 10:39:27.026" endtime="20221019 10:39:27.027"/>
</kw>
<status status="PASS" starttime="20221019 10:39:27.026" endtime="20221019 10:39:27.027"/>
</branch>
<status status="PASS" starttime="20221019 10:39:27.025" endtime="20221019 10:39:27.027"/>
</if>
<status status="PASS" starttime="20221019 10:39:26.997" endtime="20221019 10:39:27.027"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221019 10:39:26.807" endtime="20221019 10:39:27.027"/>
</test>
<test id="s1-s2-s1-t7" name="Check normal api access" line="127">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221019 10:39:27.038" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20221019 10:39:27.044" level="INFO">${rc} = 0</msg>
<msg timestamp="20221019 10:39:27.044" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221019 10:39:27.031" endtime="20221019 10:39:27.044"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221019 10:39:27.045" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221019 10:39:27.044" endtime="20221019 10:39:27.045"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221019 10:39:27.046" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221019 10:39:27.045" endtime="20221019 10:39:27.046"/>
</kw>
<status status="PASS" starttime="20221019 10:39:27.031" endtime="20221019 10:39:27.046"/>
</kw>
<msg timestamp="20221019 10:39:27.046" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221019 10:39:27.030" endtime="20221019 10:39:27.047"/>
</kw>
<status status="PASS" starttime="20221019 10:39:27.029" endtime="20221019 10:39:27.047"/>
</kw>
<kw name="Check http return code">
<arg>${NON_ADMIN_API_ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221019 10:39:27.053" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20221019 10:39:27.099" level="INFO">${rc} = 0</msg>
<msg timestamp="20221019 10:39:27.099" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221019 10:39:27.051" endtime="20221019 10:39:27.099"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221019 10:39:27.101" level="INFO">200</msg>
<status status="PASS" starttime="20221019 10:39:27.100" endtime="20221019 10:39:27.101"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221019 10:39:27.102" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221019 10:39:27.102" endtime="20221019 10:39:27.102"/>
</kw>
<status status="PASS" starttime="20221019 10:39:27.050" endtime="20221019 10:39:27.107"/>
</kw>
<msg timestamp="20221019 10:39:27.107" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221019 10:39:27.050" endtime="20221019 10:39:27.108"/>
</kw>
<msg timestamp="20221019 10:39:27.108" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221019 10:39:27.048" endtime="20221019 10:39:27.108"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221019 10:39:27.109" endtime="20221019 10:39:27.109"/>
</kw>
<status status="NOT RUN" starttime="20221019 10:39:27.109" endtime="20221019 10:39:27.109"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221019 10:39:27.109" endtime="20221019 10:39:27.110"/>
</kw>
<status status="PASS" starttime="20221019 10:39:27.109" endtime="20221019 10:39:27.110"/>
</branch>
<status status="PASS" starttime="20221019 10:39:27.109" endtime="20221019 10:39:27.110"/>
</if>
<status status="PASS" starttime="20221019 10:39:27.047" endtime="20221019 10:39:27.110"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221019 10:39:27.114" endtime="20221019 10:39:27.114"/>
</kw>
<status status="PASS" starttime="20221019 10:39:27.110" endtime="20221019 10:39:27.114"/>
</kw>
<kw name="Check http return code">
<arg>${NON_ADMIN_API_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221019 10:39:27.127" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20221019 10:39:27.170" level="INFO">${rc} = 0</msg>
<msg timestamp="20221019 10:39:27.170" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221019 10:39:27.119" endtime="20221019 10:39:27.170"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221019 10:39:27.172" level="INFO">200</msg>
<status status="PASS" starttime="20221019 10:39:27.171" endtime="20221019 10:39:27.172"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221019 10:39:27.173" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221019 10:39:27.172" endtime="20221019 10:39:27.173"/>
</kw>
<status status="PASS" starttime="20221019 10:39:27.118" endtime="20221019 10:39:27.174"/>
</kw>
<msg timestamp="20221019 10:39:27.175" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221019 10:39:27.118" endtime="20221019 10:39:27.175"/>
</kw>
<msg timestamp="20221019 10:39:27.176" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221019 10:39:27.117" endtime="20221019 10:39:27.176"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221019 10:39:27.176" endtime="20221019 10:39:27.177"/>
</kw>
<status status="NOT RUN" starttime="20221019 10:39:27.176" endtime="20221019 10:39:27.177"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221019 10:39:27.177" endtime="20221019 10:39:27.178"/>
</kw>
<status status="PASS" starttime="20221019 10:39:27.177" endtime="20221019 10:39:27.178"/>
</branch>
<status status="PASS" starttime="20221019 10:39:27.176" endtime="20221019 10:39:27.178"/>
</if>
<status status="PASS" starttime="20221019 10:39:27.114" endtime="20221019 10:39:27.178"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221019 10:39:27.029" endtime="20221019 10:39:27.178"/>
</test>
<doc>Smoke test to start cluster with docker-compose environments.</doc>
<status status="PASS" starttime="20221019 10:38:53.353" endtime="20221019 10:39:27.180"/>
</suite>
<suite id="s1-s2-s2" name="Recon-Fso-Nssummary" source="/opt/hadoop/smoketest/recon/recon-fso-nssummary.robot">
<test id="s1-s2-s2-t1" name="Check volume creation" line="98">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221019 10:39:27.201" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20221019 10:39:27.206" level="INFO">${rc} = 0</msg>
<msg timestamp="20221019 10:39:27.206" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221019 10:39:27.199" endtime="20221019 10:39:27.206"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221019 10:39:27.207" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221019 10:39:27.207" endtime="20221019 10:39:27.208"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221019 10:39:27.208" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221019 10:39:27.208" endtime="20221019 10:39:27.208"/>
</kw>
<status status="PASS" starttime="20221019 10:39:27.198" endtime="20221019 10:39:27.209"/>
</kw>
<msg timestamp="20221019 10:39:27.209" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221019 10:39:27.198" endtime="20221019 10:39:27.210"/>
</kw>
<status status="PASS" starttime="20221019 10:39:27.197" endtime="20221019 10:39:27.210"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221019 10:39:27.211" endtime="20221019 10:39:27.212"/>
</kw>
<status status="PASS" starttime="20221019 10:39:27.210" endtime="20221019 10:39:27.212"/>
</kw>
<kw name="Create volume">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20221019 10:39:27.213" level="INFO">${random} = cbjhj</msg>
<status status="PASS" starttime="20221019 10:39:27.213" endtime="20221019 10:39:27.213"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${VOLUME}</arg>
<arg>vol-${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20221019 10:39:27.214" level="INFO">${VOLUME} = vol-cbjhj</msg>
<status status="PASS" starttime="20221019 10:39:27.213" endtime="20221019 10:39:27.214"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${VOLUME}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221019 10:39:27.218" level="INFO">Running command 'ozone sh volume create /vol-cbjhj 2&gt;&amp;1'.</msg>
<msg timestamp="20221019 10:39:32.336" level="INFO">${rc} = 0</msg>
<msg timestamp="20221019 10:39:32.336" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221019 10:39:27.216" endtime="20221019 10:39:32.337"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221019 10:39:32.338" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221019 10:39:32.338" endtime="20221019 10:39:32.339"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221019 10:39:32.339" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221019 10:39:32.339" endtime="20221019 10:39:32.340"/>
</kw>
<status status="PASS" starttime="20221019 10:39:27.215" endtime="20221019 10:39:32.340"/>
</kw>
<msg timestamp="20221019 10:39:32.340" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221019 10:39:27.215" endtime="20221019 10:39:32.341"/>
</kw>
<msg timestamp="20221019 10:39:32.341" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221019 10:39:27.214" endtime="20221019 10:39:32.341"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20221019 10:39:32.341" endtime="20221019 10:39:32.342"/>
</kw>
<status status="PASS" starttime="20221019 10:39:27.212" endtime="20221019 10:39:32.342"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221019 10:39:27.196" endtime="20221019 10:39:32.342"/>
</test>
<test id="s1-s2-s2-t2" name="Check bucket creation" line="103">
<kw name="Create bucket">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20221019 10:39:32.345" level="INFO">${random} = wdpgw</msg>
<status status="PASS" starttime="20221019 10:39:32.345" endtime="20221019 10:39:32.345"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<arg>buc-${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20221019 10:39:32.346" level="INFO">${BUCKET} = buc-wdpgw</msg>
<status status="PASS" starttime="20221019 10:39:32.346" endtime="20221019 10:39:32.346"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create -l FILE_SYSTEM_OPTIMIZED /${VOLUME}/${BUCKET}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221019 10:39:32.351" level="INFO">Running command 'ozone sh bucket create -l FILE_SYSTEM_OPTIMIZED /vol-cbjhj/buc-wdpgw 2&gt;&amp;1'.</msg>
<msg timestamp="20221019 10:39:36.929" level="INFO">${rc} = 0</msg>
<msg timestamp="20221019 10:39:36.929" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221019 10:39:32.348" endtime="20221019 10:39:36.929"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221019 10:39:36.930" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221019 10:39:36.929" endtime="20221019 10:39:36.930"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221019 10:39:36.932" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221019 10:39:36.930" endtime="20221019 10:39:36.932"/>
</kw>
<status status="PASS" starttime="20221019 10:39:32.347" endtime="20221019 10:39:36.932"/>
</kw>
<msg timestamp="20221019 10:39:36.932" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221019 10:39:32.347" endtime="20221019 10:39:36.933"/>
</kw>
<msg timestamp="20221019 10:39:36.933" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221019 10:39:32.347" endtime="20221019 10:39:36.934"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20221019 10:39:36.934" endtime="20221019 10:39:36.934"/>
</kw>
<status status="PASS" starttime="20221019 10:39:32.344" endtime="20221019 10:39:36.934"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221019 10:39:32.344" endtime="20221019 10:39:36.935"/>
</test>
<test id="s1-s2-s2-t3" name="Check keys creation" line="106">
<kw name="Create keys">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put /${VOLUME}/${BUCKET}/file1 README.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221019 10:39:36.942" level="INFO">Running command 'ozone sh key put /vol-cbjhj/buc-wdpgw/file1 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20221019 10:39:44.889" level="INFO">${rc} = 0</msg>
<msg timestamp="20221019 10:39:44.889" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221019 10:39:36.940" endtime="20221019 10:39:44.889"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221019 10:39:44.891" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221019 10:39:44.890" endtime="20221019 10:39:44.891"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221019 10:39:44.892" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221019 10:39:44.891" endtime="20221019 10:39:44.892"/>
</kw>
<status status="PASS" starttime="20221019 10:39:36.939" endtime="20221019 10:39:44.892"/>
</kw>
<msg timestamp="20221019 10:39:44.892" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221019 10:39:36.938" endtime="20221019 10:39:44.893"/>
</kw>
<msg timestamp="20221019 10:39:44.893" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221019 10:39:36.938" endtime="20221019 10:39:44.893"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20221019 10:39:44.893" endtime="20221019 10:39:44.894"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put /${VOLUME}/${BUCKET}/dir1/dir2/file2 HISTORY.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221019 10:39:44.900" level="INFO">Running command 'ozone sh key put /vol-cbjhj/buc-wdpgw/dir1/dir2/file2 HISTORY.md 2&gt;&amp;1'.</msg>
<msg timestamp="20221019 10:39:53.107" level="INFO">${rc} = 0</msg>
<msg timestamp="20221019 10:39:53.107" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221019 10:39:44.896" endtime="20221019 10:39:53.107"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221019 10:39:53.109" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221019 10:39:53.108" endtime="20221019 10:39:53.110"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221019 10:39:53.111" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221019 10:39:53.110" endtime="20221019 10:39:53.111"/>
</kw>
<status status="PASS" starttime="20221019 10:39:44.895" endtime="20221019 10:39:53.111"/>
</kw>
<msg timestamp="20221019 10:39:53.111" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221019 10:39:44.895" endtime="20221019 10:39:53.116"/>
</kw>
<msg timestamp="20221019 10:39:53.116" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221019 10:39:44.894" endtime="20221019 10:39:53.116"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20221019 10:39:53.116" endtime="20221019 10:39:53.117"/>
</kw>
<status status="PASS" starttime="20221019 10:39:36.937" endtime="20221019 10:39:53.117"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221019 10:39:36.936" endtime="20221019 10:39:53.117"/>
</test>
<test id="s1-s2-s2-t4" name="Check Summary api access" line="109">
<kw name="Check Access">
<arg>${SUMMARY_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221019 10:39:53.125" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20221019 10:39:53.129" level="INFO">${rc} = 0</msg>
<msg timestamp="20221019 10:39:53.129" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221019 10:39:53.122" endtime="20221019 10:39:53.129"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221019 10:39:53.130" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221019 10:39:53.129" endtime="20221019 10:39:53.130"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221019 10:39:53.131" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221019 10:39:53.130" endtime="20221019 10:39:53.131"/>
</kw>
<status status="PASS" starttime="20221019 10:39:53.122" endtime="20221019 10:39:53.131"/>
</kw>
<msg timestamp="20221019 10:39:53.131" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221019 10:39:53.121" endtime="20221019 10:39:53.132"/>
</kw>
<status status="PASS" starttime="20221019 10:39:53.120" endtime="20221019 10:39:53.132"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221019 10:39:53.138" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221019 10:39:53.172" level="INFO">${rc} = 0</msg>
<msg timestamp="20221019 10:39:53.172" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221019 10:39:53.134" endtime="20221019 10:39:53.172"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221019 10:39:53.174" level="INFO">200</msg>
<status status="PASS" starttime="20221019 10:39:53.173" endtime="20221019 10:39:53.174"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221019 10:39:53.175" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221019 10:39:53.174" endtime="20221019 10:39:53.175"/>
</kw>
<status status="PASS" starttime="20221019 10:39:53.134" endtime="20221019 10:39:53.175"/>
</kw>
<msg timestamp="20221019 10:39:53.176" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221019 10:39:53.134" endtime="20221019 10:39:53.176"/>
</kw>
<msg timestamp="20221019 10:39:53.177" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221019 10:39:53.133" endtime="20221019 10:39:53.177"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221019 10:39:53.177" endtime="20221019 10:39:53.177"/>
</kw>
<status status="NOT RUN" starttime="20221019 10:39:53.177" endtime="20221019 10:39:53.178"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221019 10:39:53.178" endtime="20221019 10:39:53.178"/>
</kw>
<status status="PASS" starttime="20221019 10:39:53.178" endtime="20221019 10:39:53.178"/>
</branch>
<status status="PASS" starttime="20221019 10:39:53.177" endtime="20221019 10:39:53.178"/>
</if>
<status status="PASS" starttime="20221019 10:39:53.132" endtime="20221019 10:39:53.178"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221019 10:39:53.179" endtime="20221019 10:39:53.180"/>
</kw>
<status status="PASS" starttime="20221019 10:39:53.179" endtime="20221019 10:39:53.180"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221019 10:39:53.185" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221019 10:39:53.202" level="INFO">${rc} = 0</msg>
<msg timestamp="20221019 10:39:53.202" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221019 10:39:53.182" endtime="20221019 10:39:53.203"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221019 10:39:53.204" level="INFO">200</msg>
<status status="PASS" starttime="20221019 10:39:53.203" endtime="20221019 10:39:53.204"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221019 10:39:53.205" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221019 10:39:53.204" endtime="20221019 10:39:53.205"/>
</kw>
<status status="PASS" starttime="20221019 10:39:53.182" endtime="20221019 10:39:53.205"/>
</kw>
<msg timestamp="20221019 10:39:53.205" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221019 10:39:53.181" endtime="20221019 10:39:53.206"/>
</kw>
<msg timestamp="20221019 10:39:53.207" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221019 10:39:53.181" endtime="20221019 10:39:53.207"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221019 10:39:53.208" endtime="20221019 10:39:53.208"/>
</kw>
<status status="NOT RUN" starttime="20221019 10:39:53.207" endtime="20221019 10:39:53.208"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221019 10:39:53.208" endtime="20221019 10:39:53.208"/>
</kw>
<status status="PASS" starttime="20221019 10:39:53.208" endtime="20221019 10:39:53.208"/>
</branch>
<status status="PASS" starttime="20221019 10:39:53.207" endtime="20221019 10:39:53.209"/>
</if>
<status status="PASS" starttime="20221019 10:39:53.180" endtime="20221019 10:39:53.209"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221019 10:39:53.210" endtime="20221019 10:39:53.210"/>
</kw>
<status status="PASS" starttime="20221019 10:39:53.209" endtime="20221019 10:39:53.210"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221019 10:39:53.215" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221019 10:39:53.233" level="INFO">${rc} = 0</msg>
<msg timestamp="20221019 10:39:53.233" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221019 10:39:53.212" endtime="20221019 10:39:53.233"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221019 10:39:53.234" level="INFO">200</msg>
<status status="PASS" starttime="20221019 10:39:53.234" endtime="20221019 10:39:53.235"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221019 10:39:53.235" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221019 10:39:53.235" endtime="20221019 10:39:53.236"/>
</kw>
<status status="PASS" starttime="20221019 10:39:53.212" endtime="20221019 10:39:53.236"/>
</kw>
<msg timestamp="20221019 10:39:53.236" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221019 10:39:53.212" endtime="20221019 10:39:53.237"/>
</kw>
<msg timestamp="20221019 10:39:53.238" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221019 10:39:53.211" endtime="20221019 10:39:53.238"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221019 10:39:53.238" endtime="20221019 10:39:53.239"/>
</kw>
<status status="NOT RUN" starttime="20221019 10:39:53.238" endtime="20221019 10:39:53.239"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221019 10:39:53.239" endtime="20221019 10:39:53.239"/>
</kw>
<status status="PASS" starttime="20221019 10:39:53.239" endtime="20221019 10:39:53.239"/>
</branch>
<status status="PASS" starttime="20221019 10:39:53.238" endtime="20221019 10:39:53.239"/>
</if>
<status status="PASS" starttime="20221019 10:39:53.210" endtime="20221019 10:39:53.240"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221019 10:39:53.240" endtime="20221019 10:39:53.241"/>
</kw>
<status status="PASS" starttime="20221019 10:39:53.240" endtime="20221019 10:39:53.241"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221019 10:39:53.247" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221019 10:39:53.265" level="INFO">${rc} = 0</msg>
<msg timestamp="20221019 10:39:53.265" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221019 10:39:53.245" endtime="20221019 10:39:53.265"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221019 10:39:53.270" level="INFO">200</msg>
<status status="PASS" starttime="20221019 10:39:53.266" endtime="20221019 10:39:53.271"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221019 10:39:53.271" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221019 10:39:53.271" endtime="20221019 10:39:53.271"/>
</kw>
<status status="PASS" starttime="20221019 10:39:53.243" endtime="20221019 10:39:53.272"/>
</kw>
<msg timestamp="20221019 10:39:53.272" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221019 10:39:53.243" endtime="20221019 10:39:53.273"/>
</kw>
<msg timestamp="20221019 10:39:53.273" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221019 10:39:53.242" endtime="20221019 10:39:53.273"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221019 10:39:53.273" endtime="20221019 10:39:53.274"/>
</kw>
<status status="NOT RUN" starttime="20221019 10:39:53.273" endtime="20221019 10:39:53.274"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221019 10:39:53.274" endtime="20221019 10:39:53.274"/>
</kw>
<status status="PASS" starttime="20221019 10:39:53.274" endtime="20221019 10:39:53.275"/>
</branch>
<status status="PASS" starttime="20221019 10:39:53.273" endtime="20221019 10:39:53.275"/>
</if>
<status status="PASS" starttime="20221019 10:39:53.241" endtime="20221019 10:39:53.275"/>
</kw>
<status status="PASS" starttime="20221019 10:39:53.119" endtime="20221019 10:39:53.275"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221019 10:39:53.118" endtime="20221019 10:39:53.276"/>
</test>
<test id="s1-s2-s2-t5" name="Check Disk Usage api access" line="112">
<kw name="Check Access">
<arg>${DISK_USAGE_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221019 10:39:53.282" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20221019 10:39:53.286" level="INFO">${rc} = 0</msg>
<msg timestamp="20221019 10:39:53.286" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221019 10:39:53.280" endtime="20221019 10:39:53.287"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221019 10:39:53.288" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221019 10:39:53.287" endtime="20221019 10:39:53.288"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221019 10:39:53.289" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221019 10:39:53.288" endtime="20221019 10:39:53.289"/>
</kw>
<status status="PASS" starttime="20221019 10:39:53.279" endtime="20221019 10:39:53.289"/>
</kw>
<msg timestamp="20221019 10:39:53.289" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221019 10:39:53.279" endtime="20221019 10:39:53.290"/>
</kw>
<status status="PASS" starttime="20221019 10:39:53.278" endtime="20221019 10:39:53.290"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221019 10:39:53.295" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221019 10:39:53.322" level="INFO">${rc} = 0</msg>
<msg timestamp="20221019 10:39:53.322" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221019 10:39:53.293" endtime="20221019 10:39:53.322"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221019 10:39:53.323" level="INFO">200</msg>
<status status="PASS" starttime="20221019 10:39:53.322" endtime="20221019 10:39:53.324"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221019 10:39:53.324" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221019 10:39:53.324" endtime="20221019 10:39:53.324"/>
</kw>
<status status="PASS" starttime="20221019 10:39:53.292" endtime="20221019 10:39:53.325"/>
</kw>
<msg timestamp="20221019 10:39:53.325" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221019 10:39:53.292" endtime="20221019 10:39:53.326"/>
</kw>
<msg timestamp="20221019 10:39:53.326" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221019 10:39:53.291" endtime="20221019 10:39:53.326"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221019 10:39:53.327" endtime="20221019 10:39:53.327"/>
</kw>
<status status="NOT RUN" starttime="20221019 10:39:53.326" endtime="20221019 10:39:53.327"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221019 10:39:53.327" endtime="20221019 10:39:53.327"/>
</kw>
<status status="PASS" starttime="20221019 10:39:53.327" endtime="20221019 10:39:53.327"/>
</branch>
<status status="PASS" starttime="20221019 10:39:53.326" endtime="20221019 10:39:53.327"/>
</if>
<status status="PASS" starttime="20221019 10:39:53.290" endtime="20221019 10:39:53.328"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221019 10:39:53.328" endtime="20221019 10:39:53.329"/>
</kw>
<status status="PASS" starttime="20221019 10:39:53.328" endtime="20221019 10:39:53.329"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221019 10:39:53.334" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221019 10:39:53.352" level="INFO">${rc} = 0</msg>
<msg timestamp="20221019 10:39:53.352" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221019 10:39:53.331" endtime="20221019 10:39:53.352"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221019 10:39:53.354" level="INFO">200</msg>
<status status="PASS" starttime="20221019 10:39:53.352" endtime="20221019 10:39:53.354"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221019 10:39:53.354" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221019 10:39:53.354" endtime="20221019 10:39:53.354"/>
</kw>
<status status="PASS" starttime="20221019 10:39:53.331" endtime="20221019 10:39:53.355"/>
</kw>
<msg timestamp="20221019 10:39:53.355" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221019 10:39:53.330" endtime="20221019 10:39:53.356"/>
</kw>
<msg timestamp="20221019 10:39:53.357" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221019 10:39:53.329" endtime="20221019 10:39:53.357"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221019 10:39:53.357" endtime="20221019 10:39:53.357"/>
</kw>
<status status="NOT RUN" starttime="20221019 10:39:53.357" endtime="20221019 10:39:53.357"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221019 10:39:53.358" endtime="20221019 10:39:53.358"/>
</kw>
<status status="PASS" starttime="20221019 10:39:53.357" endtime="20221019 10:39:53.358"/>
</branch>
<status status="PASS" starttime="20221019 10:39:53.357" endtime="20221019 10:39:53.358"/>
</if>
<status status="PASS" starttime="20221019 10:39:53.329" endtime="20221019 10:39:53.359"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221019 10:39:53.359" endtime="20221019 10:39:53.360"/>
</kw>
<status status="PASS" starttime="20221019 10:39:53.359" endtime="20221019 10:39:53.360"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221019 10:39:53.365" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221019 10:39:53.384" level="INFO">${rc} = 0</msg>
<msg timestamp="20221019 10:39:53.384" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221019 10:39:53.363" endtime="20221019 10:39:53.384"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221019 10:39:53.386" level="INFO">200</msg>
<status status="PASS" starttime="20221019 10:39:53.385" endtime="20221019 10:39:53.386"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221019 10:39:53.386" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221019 10:39:53.386" endtime="20221019 10:39:53.386"/>
</kw>
<status status="PASS" starttime="20221019 10:39:53.362" endtime="20221019 10:39:53.387"/>
</kw>
<msg timestamp="20221019 10:39:53.387" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221019 10:39:53.361" endtime="20221019 10:39:53.388"/>
</kw>
<msg timestamp="20221019 10:39:53.389" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221019 10:39:53.361" endtime="20221019 10:39:53.389"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221019 10:39:53.389" endtime="20221019 10:39:53.389"/>
</kw>
<status status="NOT RUN" starttime="20221019 10:39:53.389" endtime="20221019 10:39:53.390"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221019 10:39:53.390" endtime="20221019 10:39:53.390"/>
</kw>
<status status="PASS" starttime="20221019 10:39:53.390" endtime="20221019 10:39:53.390"/>
</branch>
<status status="PASS" starttime="20221019 10:39:53.389" endtime="20221019 10:39:53.390"/>
</if>
<status status="PASS" starttime="20221019 10:39:53.360" endtime="20221019 10:39:53.390"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221019 10:39:53.391" endtime="20221019 10:39:53.392"/>
</kw>
<status status="PASS" starttime="20221019 10:39:53.391" endtime="20221019 10:39:53.392"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221019 10:39:53.398" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221019 10:39:53.418" level="INFO">${rc} = 0</msg>
<msg timestamp="20221019 10:39:53.418" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221019 10:39:53.395" endtime="20221019 10:39:53.418"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221019 10:39:53.421" level="INFO">200</msg>
<status status="PASS" starttime="20221019 10:39:53.420" endtime="20221019 10:39:53.421"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221019 10:39:53.422" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221019 10:39:53.421" endtime="20221019 10:39:53.422"/>
</kw>
<status status="PASS" starttime="20221019 10:39:53.394" endtime="20221019 10:39:53.422"/>
</kw>
<msg timestamp="20221019 10:39:53.422" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221019 10:39:53.394" endtime="20221019 10:39:53.423"/>
</kw>
<msg timestamp="20221019 10:39:53.424" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221019 10:39:53.393" endtime="20221019 10:39:53.424"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221019 10:39:53.424" endtime="20221019 10:39:53.425"/>
</kw>
<status status="NOT RUN" starttime="20221019 10:39:53.424" endtime="20221019 10:39:53.425"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221019 10:39:53.425" endtime="20221019 10:39:53.425"/>
</kw>
<status status="PASS" starttime="20221019 10:39:53.425" endtime="20221019 10:39:53.425"/>
</branch>
<status status="PASS" starttime="20221019 10:39:53.424" endtime="20221019 10:39:53.425"/>
</if>
<status status="PASS" starttime="20221019 10:39:53.392" endtime="20221019 10:39:53.426"/>
</kw>
<status status="PASS" starttime="20221019 10:39:53.277" endtime="20221019 10:39:53.426"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221019 10:39:53.276" endtime="20221019 10:39:53.426"/>
</test>
<test id="s1-s2-s2-t6" name="Check Quota Usage api access" line="115">
<kw name="Check Access">
<arg>${QUOTA_USAGE_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221019 10:39:53.434" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20221019 10:39:53.437" level="INFO">${rc} = 0</msg>
<msg timestamp="20221019 10:39:53.438" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221019 10:39:53.431" endtime="20221019 10:39:53.438"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221019 10:39:53.439" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221019 10:39:53.438" endtime="20221019 10:39:53.439"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221019 10:39:53.440" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221019 10:39:53.439" endtime="20221019 10:39:53.440"/>
</kw>
<status status="PASS" starttime="20221019 10:39:53.430" endtime="20221019 10:39:53.440"/>
</kw>
<msg timestamp="20221019 10:39:53.440" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221019 10:39:53.430" endtime="20221019 10:39:53.441"/>
</kw>
<status status="PASS" starttime="20221019 10:39:53.429" endtime="20221019 10:39:53.441"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221019 10:39:53.447" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221019 10:39:53.468" level="INFO">${rc} = 0</msg>
<msg timestamp="20221019 10:39:53.468" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221019 10:39:53.444" endtime="20221019 10:39:53.468"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221019 10:39:53.470" level="INFO">200</msg>
<status status="PASS" starttime="20221019 10:39:53.469" endtime="20221019 10:39:53.470"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221019 10:39:53.472" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221019 10:39:53.470" endtime="20221019 10:39:53.472"/>
</kw>
<status status="PASS" starttime="20221019 10:39:53.443" endtime="20221019 10:39:53.473"/>
</kw>
<msg timestamp="20221019 10:39:53.473" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221019 10:39:53.443" endtime="20221019 10:39:53.474"/>
</kw>
<msg timestamp="20221019 10:39:53.474" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221019 10:39:53.442" endtime="20221019 10:39:53.474"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221019 10:39:53.475" endtime="20221019 10:39:53.475"/>
</kw>
<status status="NOT RUN" starttime="20221019 10:39:53.474" endtime="20221019 10:39:53.475"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221019 10:39:53.475" endtime="20221019 10:39:53.476"/>
</kw>
<status status="PASS" starttime="20221019 10:39:53.475" endtime="20221019 10:39:53.476"/>
</branch>
<status status="PASS" starttime="20221019 10:39:53.474" endtime="20221019 10:39:53.476"/>
</if>
<status status="PASS" starttime="20221019 10:39:53.441" endtime="20221019 10:39:53.476"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221019 10:39:53.477" endtime="20221019 10:39:53.477"/>
</kw>
<status status="PASS" starttime="20221019 10:39:53.476" endtime="20221019 10:39:53.477"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221019 10:39:53.482" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221019 10:39:53.500" level="INFO">${rc} = 0</msg>
<msg timestamp="20221019 10:39:53.500" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221019 10:39:53.479" endtime="20221019 10:39:53.500"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221019 10:39:53.502" level="INFO">200</msg>
<status status="PASS" starttime="20221019 10:39:53.501" endtime="20221019 10:39:53.502"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221019 10:39:53.504" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221019 10:39:53.503" endtime="20221019 10:39:53.504"/>
</kw>
<status status="PASS" starttime="20221019 10:39:53.479" endtime="20221019 10:39:53.505"/>
</kw>
<msg timestamp="20221019 10:39:53.505" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221019 10:39:53.478" endtime="20221019 10:39:53.506"/>
</kw>
<msg timestamp="20221019 10:39:53.506" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221019 10:39:53.478" endtime="20221019 10:39:53.506"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221019 10:39:53.507" endtime="20221019 10:39:53.507"/>
</kw>
<status status="NOT RUN" starttime="20221019 10:39:53.507" endtime="20221019 10:39:53.507"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221019 10:39:53.507" endtime="20221019 10:39:53.508"/>
</kw>
<status status="PASS" starttime="20221019 10:39:53.507" endtime="20221019 10:39:53.508"/>
</branch>
<status status="PASS" starttime="20221019 10:39:53.506" endtime="20221019 10:39:53.508"/>
</if>
<status status="PASS" starttime="20221019 10:39:53.477" endtime="20221019 10:39:53.508"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221019 10:39:53.509" endtime="20221019 10:39:53.509"/>
</kw>
<status status="PASS" starttime="20221019 10:39:53.508" endtime="20221019 10:39:53.509"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221019 10:39:53.515" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221019 10:39:53.532" level="INFO">${rc} = 0</msg>
<msg timestamp="20221019 10:39:53.532" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221019 10:39:53.512" endtime="20221019 10:39:53.532"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221019 10:39:53.534" level="INFO">200</msg>
<status status="PASS" starttime="20221019 10:39:53.533" endtime="20221019 10:39:53.534"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221019 10:39:53.535" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221019 10:39:53.534" endtime="20221019 10:39:53.535"/>
</kw>
<status status="PASS" starttime="20221019 10:39:53.511" endtime="20221019 10:39:53.535"/>
</kw>
<msg timestamp="20221019 10:39:53.536" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221019 10:39:53.511" endtime="20221019 10:39:53.536"/>
</kw>
<msg timestamp="20221019 10:39:53.537" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221019 10:39:53.510" endtime="20221019 10:39:53.537"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221019 10:39:53.537" endtime="20221019 10:39:53.537"/>
</kw>
<status status="NOT RUN" starttime="20221019 10:39:53.537" endtime="20221019 10:39:53.537"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221019 10:39:53.538" endtime="20221019 10:39:53.538"/>
</kw>
<status status="PASS" starttime="20221019 10:39:53.538" endtime="20221019 10:39:53.538"/>
</branch>
<status status="PASS" starttime="20221019 10:39:53.537" endtime="20221019 10:39:53.538"/>
</if>
<status status="PASS" starttime="20221019 10:39:53.509" endtime="20221019 10:39:53.538"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221019 10:39:53.539" endtime="20221019 10:39:53.539"/>
</kw>
<status status="PASS" starttime="20221019 10:39:53.538" endtime="20221019 10:39:53.540"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221019 10:39:53.544" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221019 10:39:53.562" level="INFO">${rc} = 0</msg>
<msg timestamp="20221019 10:39:53.562" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221019 10:39:53.542" endtime="20221019 10:39:53.562"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221019 10:39:53.563" level="INFO">200</msg>
<status status="PASS" starttime="20221019 10:39:53.563" endtime="20221019 10:39:53.564"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221019 10:39:53.564" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221019 10:39:53.564" endtime="20221019 10:39:53.564"/>
</kw>
<status status="PASS" starttime="20221019 10:39:53.542" endtime="20221019 10:39:53.565"/>
</kw>
<msg timestamp="20221019 10:39:53.565" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221019 10:39:53.541" endtime="20221019 10:39:53.566"/>
</kw>
<msg timestamp="20221019 10:39:53.566" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221019 10:39:53.541" endtime="20221019 10:39:53.566"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221019 10:39:53.567" endtime="20221019 10:39:53.567"/>
</kw>
<status status="NOT RUN" starttime="20221019 10:39:53.567" endtime="20221019 10:39:53.567"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221019 10:39:53.567" endtime="20221019 10:39:53.568"/>
</kw>
<status status="PASS" starttime="20221019 10:39:53.567" endtime="20221019 10:39:53.568"/>
</branch>
<status status="PASS" starttime="20221019 10:39:53.566" endtime="20221019 10:39:53.568"/>
</if>
<status status="PASS" starttime="20221019 10:39:53.540" endtime="20221019 10:39:53.568"/>
</kw>
<status status="PASS" starttime="20221019 10:39:53.429" endtime="20221019 10:39:53.568"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221019 10:39:53.428" endtime="20221019 10:39:53.569"/>
</test>
<test id="s1-s2-s2-t7" name="Check File Size Distribution api access" line="118">
<kw name="Check Access">
<arg>${FILE_SIZE_DIST_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221019 10:39:53.575" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20221019 10:39:53.579" level="INFO">${rc} = 0</msg>
<msg timestamp="20221019 10:39:53.579" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221019 10:39:53.572" endtime="20221019 10:39:53.579"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221019 10:39:53.580" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221019 10:39:53.579" endtime="20221019 10:39:53.580"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221019 10:39:53.581" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221019 10:39:53.581" endtime="20221019 10:39:53.581"/>
</kw>
<status status="PASS" starttime="20221019 10:39:53.572" endtime="20221019 10:39:53.582"/>
</kw>
<msg timestamp="20221019 10:39:53.582" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221019 10:39:53.572" endtime="20221019 10:39:53.582"/>
</kw>
<status status="PASS" starttime="20221019 10:39:53.571" endtime="20221019 10:39:53.583"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221019 10:39:53.589" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221019 10:39:53.616" level="INFO">${rc} = 0</msg>
<msg timestamp="20221019 10:39:53.616" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221019 10:39:53.586" endtime="20221019 10:39:53.616"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221019 10:39:53.618" level="INFO">200</msg>
<status status="PASS" starttime="20221019 10:39:53.617" endtime="20221019 10:39:53.618"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221019 10:39:53.620" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221019 10:39:53.619" endtime="20221019 10:39:53.620"/>
</kw>
<status status="PASS" starttime="20221019 10:39:53.585" endtime="20221019 10:39:53.620"/>
</kw>
<msg timestamp="20221019 10:39:53.620" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221019 10:39:53.584" endtime="20221019 10:39:53.622"/>
</kw>
<msg timestamp="20221019 10:39:53.622" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221019 10:39:53.584" endtime="20221019 10:39:53.622"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221019 10:39:53.623" endtime="20221019 10:39:53.623"/>
</kw>
<status status="NOT RUN" starttime="20221019 10:39:53.622" endtime="20221019 10:39:53.623"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221019 10:39:53.624" endtime="20221019 10:39:53.624"/>
</kw>
<status status="PASS" starttime="20221019 10:39:53.623" endtime="20221019 10:39:53.624"/>
</branch>
<status status="PASS" starttime="20221019 10:39:53.622" endtime="20221019 10:39:53.624"/>
</if>
<status status="PASS" starttime="20221019 10:39:53.583" endtime="20221019 10:39:53.624"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221019 10:39:53.626" endtime="20221019 10:39:53.626"/>
</kw>
<status status="PASS" starttime="20221019 10:39:53.625" endtime="20221019 10:39:53.626"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221019 10:39:53.633" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221019 10:39:53.652" level="INFO">${rc} = 0</msg>
<msg timestamp="20221019 10:39:53.652" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221019 10:39:53.630" endtime="20221019 10:39:53.652"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221019 10:39:53.653" level="INFO">200</msg>
<status status="PASS" starttime="20221019 10:39:53.653" endtime="20221019 10:39:53.653"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221019 10:39:53.654" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221019 10:39:53.654" endtime="20221019 10:39:53.654"/>
</kw>
<status status="PASS" starttime="20221019 10:39:53.629" endtime="20221019 10:39:53.655"/>
</kw>
<msg timestamp="20221019 10:39:53.655" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221019 10:39:53.628" endtime="20221019 10:39:53.655"/>
</kw>
<msg timestamp="20221019 10:39:53.656" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221019 10:39:53.628" endtime="20221019 10:39:53.656"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221019 10:39:53.656" endtime="20221019 10:39:53.656"/>
</kw>
<status status="NOT RUN" starttime="20221019 10:39:53.656" endtime="20221019 10:39:53.656"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221019 10:39:53.657" endtime="20221019 10:39:53.657"/>
</kw>
<status status="PASS" starttime="20221019 10:39:53.656" endtime="20221019 10:39:53.657"/>
</branch>
<status status="PASS" starttime="20221019 10:39:53.656" endtime="20221019 10:39:53.657"/>
</if>
<status status="PASS" starttime="20221019 10:39:53.626" endtime="20221019 10:39:53.657"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221019 10:39:53.658" endtime="20221019 10:39:53.659"/>
</kw>
<status status="PASS" starttime="20221019 10:39:53.657" endtime="20221019 10:39:53.659"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221019 10:39:53.664" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221019 10:39:53.680" level="INFO">${rc} = 0</msg>
<msg timestamp="20221019 10:39:53.680" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221019 10:39:53.661" endtime="20221019 10:39:53.680"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221019 10:39:53.681" level="INFO">200</msg>
<status status="PASS" starttime="20221019 10:39:53.680" endtime="20221019 10:39:53.681"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221019 10:39:53.682" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221019 10:39:53.682" endtime="20221019 10:39:53.682"/>
</kw>
<status status="PASS" starttime="20221019 10:39:53.661" endtime="20221019 10:39:53.683"/>
</kw>
<msg timestamp="20221019 10:39:53.683" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221019 10:39:53.660" endtime="20221019 10:39:53.683"/>
</kw>
<msg timestamp="20221019 10:39:53.684" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221019 10:39:53.660" endtime="20221019 10:39:53.684"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221019 10:39:53.684" endtime="20221019 10:39:53.684"/>
</kw>
<status status="NOT RUN" starttime="20221019 10:39:53.684" endtime="20221019 10:39:53.684"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221019 10:39:53.685" endtime="20221019 10:39:53.685"/>
</kw>
<status status="PASS" starttime="20221019 10:39:53.684" endtime="20221019 10:39:53.685"/>
</branch>
<status status="PASS" starttime="20221019 10:39:53.684" endtime="20221019 10:39:53.685"/>
</if>
<status status="PASS" starttime="20221019 10:39:53.659" endtime="20221019 10:39:53.685"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221019 10:39:53.686" endtime="20221019 10:39:53.686"/>
</kw>
<status status="PASS" starttime="20221019 10:39:53.686" endtime="20221019 10:39:53.687"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221019 10:39:53.692" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221019 10:39:53.708" level="INFO">${rc} = 0</msg>
<msg timestamp="20221019 10:39:53.708" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221019 10:39:53.690" endtime="20221019 10:39:53.708"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221019 10:39:53.709" level="INFO">200</msg>
<status status="PASS" starttime="20221019 10:39:53.709" endtime="20221019 10:39:53.710"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221019 10:39:53.710" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221019 10:39:53.710" endtime="20221019 10:39:53.710"/>
</kw>
<status status="PASS" starttime="20221019 10:39:53.688" endtime="20221019 10:39:53.711"/>
</kw>
<msg timestamp="20221019 10:39:53.711" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221019 10:39:53.688" endtime="20221019 10:39:53.712"/>
</kw>
<msg timestamp="20221019 10:39:53.713" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221019 10:39:53.687" endtime="20221019 10:39:53.713"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221019 10:39:53.713" endtime="20221019 10:39:53.713"/>
</kw>
<status status="NOT RUN" starttime="20221019 10:39:53.713" endtime="20221019 10:39:53.714"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221019 10:39:53.714" endtime="20221019 10:39:53.714"/>
</kw>
<status status="PASS" starttime="20221019 10:39:53.714" endtime="20221019 10:39:53.714"/>
</branch>
<status status="PASS" starttime="20221019 10:39:53.713" endtime="20221019 10:39:53.714"/>
</if>
<status status="PASS" starttime="20221019 10:39:53.687" endtime="20221019 10:39:53.714"/>
</kw>
<status status="PASS" starttime="20221019 10:39:53.570" endtime="20221019 10:39:53.715"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221019 10:39:53.569" endtime="20221019 10:39:53.715"/>
</test>
<test id="s1-s2-s2-t8" name="Check Recon Namespace Summary Root" line="121">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/</arg>
<arg>ROOT</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221019 10:39:53.723" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221019 10:39:53.742" level="INFO">${rc} = 0</msg>
<msg timestamp="20221019 10:39:53.742" level="INFO">${output} = {"type":"ROOT","numVolume":3,"numBucket":2,"numDir":0,"numKey":0,"status":"OK"}</msg>
<status status="PASS" starttime="20221019 10:39:53.721" endtime="20221019 10:39:53.742"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221019 10:39:53.744" level="INFO">{"type":"ROOT","numVolume":3,"numBucket":2,"numDir":0,"numKey":0,"status":"OK"}</msg>
<status status="PASS" starttime="20221019 10:39:53.743" endtime="20221019 10:39:53.745"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221019 10:39:53.745" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221019 10:39:53.745" endtime="20221019 10:39:53.745"/>
</kw>
<status status="PASS" starttime="20221019 10:39:53.720" endtime="20221019 10:39:53.746"/>
</kw>
<msg timestamp="20221019 10:39:53.746" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221019 10:39:53.720" endtime="20221019 10:39:53.747"/>
</kw>
<msg timestamp="20221019 10:39:53.747" level="INFO">${result} = {"type":"ROOT","numVolume":3,"numBucket":2,"numDir":0,"numKey":0,"status":"OK"}</msg>
<status status="PASS" starttime="20221019 10:39:53.719" endtime="20221019 10:39:53.747"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221019 10:39:53.747" endtime="20221019 10:39:53.747"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221019 10:39:53.748" endtime="20221019 10:39:53.748"/>
</kw>
<status status="PASS" starttime="20221019 10:39:53.718" endtime="20221019 10:39:53.748"/>
</kw>
<status status="PASS" starttime="20221019 10:39:53.718" endtime="20221019 10:39:53.748"/>
</kw>
<status status="PASS" starttime="20221019 10:39:53.717" endtime="20221019 10:39:53.749"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221019 10:39:53.716" endtime="20221019 10:39:53.749"/>
</test>
<test id="s1-s2-s2-t9" name="Check Recon Namespace Summary Volume" line="124">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}</arg>
<arg>VOLUME</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221019 10:39:53.757" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-cbjhj 2&gt;&amp;1'.</msg>
<msg timestamp="20221019 10:39:53.774" level="INFO">${rc} = 0</msg>
<msg timestamp="20221019 10:39:53.774" level="INFO">${output} = {"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221019 10:39:53.754" endtime="20221019 10:39:53.774"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221019 10:39:53.777" level="INFO">{"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221019 10:39:53.775" endtime="20221019 10:39:53.777"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221019 10:39:53.778" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221019 10:39:53.777" endtime="20221019 10:39:53.778"/>
</kw>
<status status="PASS" starttime="20221019 10:39:53.754" endtime="20221019 10:39:53.778"/>
</kw>
<msg timestamp="20221019 10:39:53.778" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221019 10:39:53.753" endtime="20221019 10:39:53.779"/>
</kw>
<msg timestamp="20221019 10:39:53.779" level="INFO">${result} = {"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221019 10:39:53.753" endtime="20221019 10:39:53.779"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20221019 10:39:53.780" level="FAIL">'{"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20221019 10:39:53.779" endtime="20221019 10:39:53.780"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221019 10:39:53.781" endtime="20221019 10:39:53.781"/>
</kw>
<status status="FAIL" starttime="20221019 10:39:53.752" endtime="20221019 10:39:53.782"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221019 10:40:03.788" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-cbjhj 2&gt;&amp;1'.</msg>
<msg timestamp="20221019 10:40:03.810" level="INFO">${rc} = 0</msg>
<msg timestamp="20221019 10:40:03.810" level="INFO">${output} = {"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221019 10:40:03.785" endtime="20221019 10:40:03.810"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221019 10:40:03.812" level="INFO">{"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221019 10:40:03.811" endtime="20221019 10:40:03.812"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221019 10:40:03.813" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221019 10:40:03.812" endtime="20221019 10:40:03.813"/>
</kw>
<status status="PASS" starttime="20221019 10:40:03.785" endtime="20221019 10:40:03.813"/>
</kw>
<msg timestamp="20221019 10:40:03.813" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221019 10:40:03.784" endtime="20221019 10:40:03.814"/>
</kw>
<msg timestamp="20221019 10:40:03.814" level="INFO">${result} = {"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221019 10:40:03.784" endtime="20221019 10:40:03.814"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20221019 10:40:03.816" level="FAIL">'{"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20221019 10:40:03.815" endtime="20221019 10:40:03.816"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221019 10:40:03.816" endtime="20221019 10:40:03.816"/>
</kw>
<status status="FAIL" starttime="20221019 10:40:03.782" endtime="20221019 10:40:03.817"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221019 10:40:13.824" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-cbjhj 2&gt;&amp;1'.</msg>
<msg timestamp="20221019 10:40:13.843" level="INFO">${rc} = 0</msg>
<msg timestamp="20221019 10:40:13.843" level="INFO">${output} = {"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221019 10:40:13.821" endtime="20221019 10:40:13.843"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221019 10:40:13.845" level="INFO">{"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221019 10:40:13.844" endtime="20221019 10:40:13.845"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221019 10:40:13.846" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221019 10:40:13.845" endtime="20221019 10:40:13.846"/>
</kw>
<status status="PASS" starttime="20221019 10:40:13.820" endtime="20221019 10:40:13.847"/>
</kw>
<msg timestamp="20221019 10:40:13.847" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221019 10:40:13.820" endtime="20221019 10:40:13.848"/>
</kw>
<msg timestamp="20221019 10:40:13.848" level="INFO">${result} = {"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221019 10:40:13.819" endtime="20221019 10:40:13.848"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20221019 10:40:13.850" level="FAIL">'{"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20221019 10:40:13.849" endtime="20221019 10:40:13.850"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221019 10:40:13.850" endtime="20221019 10:40:13.850"/>
</kw>
<status status="FAIL" starttime="20221019 10:40:13.818" endtime="20221019 10:40:13.851"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221019 10:40:23.859" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-cbjhj 2&gt;&amp;1'.</msg>
<msg timestamp="20221019 10:40:23.879" level="INFO">${rc} = 0</msg>
<msg timestamp="20221019 10:40:23.879" level="INFO">${output} = {"type":"VOLUME","numVolume":-1,"numBucket":1,"numDir":2,"numKey":2,"status":"OK"}</msg>
<status status="PASS" starttime="20221019 10:40:23.856" endtime="20221019 10:40:23.879"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221019 10:40:23.881" level="INFO">{"type":"VOLUME","numVolume":-1,"numBucket":1,"numDir":2,"numKey":2,"status":"OK"}</msg>
<status status="PASS" starttime="20221019 10:40:23.880" endtime="20221019 10:40:23.881"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221019 10:40:23.882" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221019 10:40:23.881" endtime="20221019 10:40:23.882"/>
</kw>
<status status="PASS" starttime="20221019 10:40:23.855" endtime="20221019 10:40:23.883"/>
</kw>
<msg timestamp="20221019 10:40:23.883" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221019 10:40:23.854" endtime="20221019 10:40:23.884"/>
</kw>
<msg timestamp="20221019 10:40:23.884" level="INFO">${result} = {"type":"VOLUME","numVolume":-1,"numBucket":1,"numDir":2,"numKey":2,"status":"OK"}</msg>
<status status="PASS" starttime="20221019 10:40:23.854" endtime="20221019 10:40:23.884"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221019 10:40:23.884" endtime="20221019 10:40:23.885"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221019 10:40:23.885" endtime="20221019 10:40:23.886"/>
</kw>
<status status="PASS" starttime="20221019 10:40:23.852" endtime="20221019 10:40:23.886"/>
</kw>
<status status="PASS" starttime="20221019 10:39:53.752" endtime="20221019 10:40:23.886"/>
</kw>
<status status="PASS" starttime="20221019 10:39:53.751" endtime="20221019 10:40:23.886"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221019 10:39:53.750" endtime="20221019 10:40:23.887"/>
</test>
<test id="s1-s2-s2-t10" name="Check Recon Namespace Summary Bucket" line="127">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}</arg>
<arg>BUCKET</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221019 10:40:23.897" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-cbjhj/buc-wdpgw 2&gt;&amp;1'.</msg>
<msg timestamp="20221019 10:40:23.918" level="INFO">${rc} = 0</msg>
<msg timestamp="20221019 10:40:23.918" level="INFO">${output} = {"type":"BUCKET","numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2,"status":"OK"}</msg>
<status status="PASS" starttime="20221019 10:40:23.893" endtime="20221019 10:40:23.918"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221019 10:40:23.919" level="INFO">{"type":"BUCKET","numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2,"status":"OK"}</msg>
<status status="PASS" starttime="20221019 10:40:23.918" endtime="20221019 10:40:23.920"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221019 10:40:23.921" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221019 10:40:23.920" endtime="20221019 10:40:23.921"/>
</kw>
<status status="PASS" starttime="20221019 10:40:23.893" endtime="20221019 10:40:23.921"/>
</kw>
<msg timestamp="20221019 10:40:23.921" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221019 10:40:23.892" endtime="20221019 10:40:23.922"/>
</kw>
<msg timestamp="20221019 10:40:23.923" level="INFO">${result} = {"type":"BUCKET","numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2,"status":"OK"}</msg>
<status status="PASS" starttime="20221019 10:40:23.892" endtime="20221019 10:40:23.923"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221019 10:40:23.923" endtime="20221019 10:40:23.923"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221019 10:40:23.924" endtime="20221019 10:40:23.924"/>
</kw>
<status status="PASS" starttime="20221019 10:40:23.891" endtime="20221019 10:40:23.924"/>
</kw>
<status status="PASS" starttime="20221019 10:40:23.891" endtime="20221019 10:40:23.925"/>
</kw>
<status status="PASS" starttime="20221019 10:40:23.889" endtime="20221019 10:40:23.925"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221019 10:40:23.888" endtime="20221019 10:40:23.925"/>
</test>
<test id="s1-s2-s2-t11" name="Check Recon Namespace Summary Key" line="130">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/file1</arg>
<arg>KEY</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221019 10:40:23.935" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-cbjhj/buc-wdpgw/file1 2&gt;&amp;1'.</msg>
<msg timestamp="20221019 10:40:23.954" level="INFO">${rc} = 0</msg>
<msg timestamp="20221019 10:40:23.954" level="INFO">${output} = {"type":"KEY","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"OK"}</msg>
<status status="PASS" starttime="20221019 10:40:23.932" endtime="20221019 10:40:23.954"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221019 10:40:23.956" level="INFO">{"type":"KEY","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"OK"}</msg>
<status status="PASS" starttime="20221019 10:40:23.955" endtime="20221019 10:40:23.956"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221019 10:40:23.957" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221019 10:40:23.956" endtime="20221019 10:40:23.957"/>
</kw>
<status status="PASS" starttime="20221019 10:40:23.932" endtime="20221019 10:40:23.957"/>
</kw>
<msg timestamp="20221019 10:40:23.957" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221019 10:40:23.931" endtime="20221019 10:40:23.958"/>
</kw>
<msg timestamp="20221019 10:40:23.959" level="INFO">${result} = {"type":"KEY","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"OK"}</msg>
<status status="PASS" starttime="20221019 10:40:23.930" endtime="20221019 10:40:23.959"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221019 10:40:23.959" endtime="20221019 10:40:23.959"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221019 10:40:23.960" endtime="20221019 10:40:23.960"/>
</kw>
<status status="PASS" starttime="20221019 10:40:23.929" endtime="20221019 10:40:23.960"/>
</kw>
<status status="PASS" starttime="20221019 10:40:23.929" endtime="20221019 10:40:23.961"/>
</kw>
<status status="PASS" starttime="20221019 10:40:23.927" endtime="20221019 10:40:23.961"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221019 10:40:23.926" endtime="20221019 10:40:23.961"/>
</test>
<test id="s1-s2-s2-t12" name="Check Recon Namespace Summary Directory" line="133">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2</arg>
<arg>DIRECTORY</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221019 10:40:23.973" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-cbjhj/buc-wdpgw/dir1/dir2 2&gt;&amp;1'.</msg>
<msg timestamp="20221019 10:40:23.996" level="INFO">${rc} = 0</msg>
<msg timestamp="20221019 10:40:23.997" level="INFO">${output} = {"type":"DIRECTORY","numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1,"status":"OK"}</msg>
<status status="PASS" starttime="20221019 10:40:23.970" endtime="20221019 10:40:23.997"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221019 10:40:23.998" level="INFO">{"type":"DIRECTORY","numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1,"status":"OK"}</msg>
<status status="PASS" starttime="20221019 10:40:23.997" endtime="20221019 10:40:23.999"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221019 10:40:23.999" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221019 10:40:23.999" endtime="20221019 10:40:23.999"/>
</kw>
<status status="PASS" starttime="20221019 10:40:23.969" endtime="20221019 10:40:24.000"/>
</kw>
<msg timestamp="20221019 10:40:24.000" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221019 10:40:23.969" endtime="20221019 10:40:24.001"/>
</kw>
<msg timestamp="20221019 10:40:24.001" level="INFO">${result} = {"type":"DIRECTORY","numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1,"status":"OK"}</msg>
<status status="PASS" starttime="20221019 10:40:23.969" endtime="20221019 10:40:24.002"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221019 10:40:24.002" endtime="20221019 10:40:24.002"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221019 10:40:24.002" endtime="20221019 10:40:24.003"/>
</kw>
<status status="PASS" starttime="20221019 10:40:23.967" endtime="20221019 10:40:24.003"/>
</kw>
<status status="PASS" starttime="20221019 10:40:23.967" endtime="20221019 10:40:24.003"/>
</kw>
<status status="PASS" starttime="20221019 10:40:23.963" endtime="20221019 10:40:24.004"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221019 10:40:23.962" endtime="20221019 10:40:24.004"/>
</test>
<test id="s1-s2-s2-t13" name="Check Recon Namespace Disk Usage" line="136">
<kw name="Wait For Summary">
<arg>${DISK_USAGE_URL}?path=/${VOLUME}/${BUCKET}&amp;files=true&amp;replica=true</arg>
<arg>\"sizeWithReplica\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221019 10:40:24.014" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/du?path=/vol-cbjhj/buc-wdpgw&amp;files=true&amp;replica=true 2&gt;&amp;1'.</msg>
<msg timestamp="20221019 10:40:24.033" level="INFO">${rc} = 0</msg>
<msg timestamp="20221019 10:40:24.033" level="INFO">${output} = {"status":"OK","path":"/vol-cbjhj/buc-wdpgw","size":9849,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-cbjhj/buc-wdpgw/dir1","size":6038,"sizeWithReplica":-1,"isKey":fals...</msg>
<status status="PASS" starttime="20221019 10:40:24.010" endtime="20221019 10:40:24.033"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221019 10:40:24.035" level="INFO">{"status":"OK","path":"/vol-cbjhj/buc-wdpgw","size":9849,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-cbjhj/buc-wdpgw/dir1","size":6038,"sizeWithReplica":-1,"isKey":false}],"sizeDirectKey":3811}</msg>
<status status="PASS" starttime="20221019 10:40:24.034" endtime="20221019 10:40:24.035"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221019 10:40:24.036" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221019 10:40:24.035" endtime="20221019 10:40:24.036"/>
</kw>
<status status="PASS" starttime="20221019 10:40:24.009" endtime="20221019 10:40:24.036"/>
</kw>
<msg timestamp="20221019 10:40:24.037" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221019 10:40:24.009" endtime="20221019 10:40:24.037"/>
</kw>
<msg timestamp="20221019 10:40:24.038" level="INFO">${result} = {"status":"OK","path":"/vol-cbjhj/buc-wdpgw","size":9849,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-cbjhj/buc-wdpgw/dir1","size":6038,"sizeWithReplica":-1,"isKey":fals...</msg>
<status status="PASS" starttime="20221019 10:40:24.008" endtime="20221019 10:40:24.038"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221019 10:40:24.038" endtime="20221019 10:40:24.039"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221019 10:40:24.039" endtime="20221019 10:40:24.039"/>
</kw>
<status status="PASS" starttime="20221019 10:40:24.008" endtime="20221019 10:40:24.039"/>
</kw>
<status status="PASS" starttime="20221019 10:40:24.007" endtime="20221019 10:40:24.039"/>
</kw>
<status status="PASS" starttime="20221019 10:40:24.006" endtime="20221019 10:40:24.040"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221019 10:40:24.005" endtime="20221019 10:40:24.040"/>
</test>
<test id="s1-s2-s2-t14" name="Check Recon Namespace Volume Quota Usage" line="139">
<kw name="Wait For Summary">
<arg>${QUOTA_USAGE_URL}?path=/${VOLUME}</arg>
<arg>\"used\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221019 10:40:24.049" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/quota?path=/vol-cbjhj 2&gt;&amp;1'.</msg>
<msg timestamp="20221019 10:40:24.068" level="INFO">${rc} = 0</msg>
<msg timestamp="20221019 10:40:24.068" level="INFO">${output} = {"allowed":-1,"used":9849,"status":"OK"}</msg>
<status status="PASS" starttime="20221019 10:40:24.046" endtime="20221019 10:40:24.068"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221019 10:40:24.070" level="INFO">{"allowed":-1,"used":9849,"status":"OK"}</msg>
<status status="PASS" starttime="20221019 10:40:24.069" endtime="20221019 10:40:24.071"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221019 10:40:24.071" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221019 10:40:24.071" endtime="20221019 10:40:24.072"/>
</kw>
<status status="PASS" starttime="20221019 10:40:24.045" endtime="20221019 10:40:24.072"/>
</kw>
<msg timestamp="20221019 10:40:24.072" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221019 10:40:24.045" endtime="20221019 10:40:24.073"/>
</kw>
<msg timestamp="20221019 10:40:24.073" level="INFO">${result} = {"allowed":-1,"used":9849,"status":"OK"}</msg>
<status status="PASS" starttime="20221019 10:40:24.044" endtime="20221019 10:40:24.073"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221019 10:40:24.074" endtime="20221019 10:40:24.075"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221019 10:40:24.075" endtime="20221019 10:40:24.075"/>
</kw>
<status status="PASS" starttime="20221019 10:40:24.043" endtime="20221019 10:40:24.076"/>
</kw>
<status status="PASS" starttime="20221019 10:40:24.043" endtime="20221019 10:40:24.076"/>
</kw>
<status status="PASS" starttime="20221019 10:40:24.042" endtime="20221019 10:40:24.076"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221019 10:40:24.041" endtime="20221019 10:40:24.076"/>
</test>
<test id="s1-s2-s2-t15" name="Check Recon Namespace Bucket Quota Usage" line="142">
<kw name="Wait For Summary">
<arg>${QUOTA_USAGE_URL}?path=/${VOLUME}/${BUCKET}</arg>
<arg>\"used\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221019 10:40:24.085" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/quota?path=/vol-cbjhj/buc-wdpgw 2&gt;&amp;1'.</msg>
<msg timestamp="20221019 10:40:24.105" level="INFO">${rc} = 0</msg>
<msg timestamp="20221019 10:40:24.106" level="INFO">${output} = {"allowed":-1,"used":9849,"status":"OK"}</msg>
<status status="PASS" starttime="20221019 10:40:24.083" endtime="20221019 10:40:24.106"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221019 10:40:24.107" level="INFO">{"allowed":-1,"used":9849,"status":"OK"}</msg>
<status status="PASS" starttime="20221019 10:40:24.106" endtime="20221019 10:40:24.107"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221019 10:40:24.109" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221019 10:40:24.108" endtime="20221019 10:40:24.109"/>
</kw>
<status status="PASS" starttime="20221019 10:40:24.082" endtime="20221019 10:40:24.109"/>
</kw>
<msg timestamp="20221019 10:40:24.109" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221019 10:40:24.082" endtime="20221019 10:40:24.110"/>
</kw>
<msg timestamp="20221019 10:40:24.110" level="INFO">${result} = {"allowed":-1,"used":9849,"status":"OK"}</msg>
<status status="PASS" starttime="20221019 10:40:24.081" endtime="20221019 10:40:24.110"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221019 10:40:24.111" endtime="20221019 10:40:24.114"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221019 10:40:24.114" endtime="20221019 10:40:24.115"/>
</kw>
<status status="PASS" starttime="20221019 10:40:24.080" endtime="20221019 10:40:24.115"/>
</kw>
<status status="PASS" starttime="20221019 10:40:24.080" endtime="20221019 10:40:24.115"/>
</kw>
<status status="PASS" starttime="20221019 10:40:24.079" endtime="20221019 10:40:24.115"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221019 10:40:24.078" endtime="20221019 10:40:24.116"/>
</test>
<test id="s1-s2-s2-t16" name="Check Recon Namespace File Size Distribution Root" line="145">
<kw name="Wait For Summary">
<arg>${FILE_SIZE_DIST_URL}?path=/</arg>
<arg>\"dist\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221019 10:40:24.127" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221019 10:40:24.146" level="INFO">${rc} = 0</msg>
<msg timestamp="20221019 10:40:24.146" level="INFO">${output} = {"dist":[0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20221019 10:40:24.124" endtime="20221019 10:40:24.146"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221019 10:40:24.148" level="INFO">{"dist":[0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20221019 10:40:24.147" endtime="20221019 10:40:24.149"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221019 10:40:24.149" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221019 10:40:24.149" endtime="20221019 10:40:24.150"/>
</kw>
<status status="PASS" starttime="20221019 10:40:24.123" endtime="20221019 10:40:24.150"/>
</kw>
<msg timestamp="20221019 10:40:24.150" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221019 10:40:24.123" endtime="20221019 10:40:24.151"/>
</kw>
<msg timestamp="20221019 10:40:24.152" level="INFO">${result} = {"dist":[0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20221019 10:40:24.122" endtime="20221019 10:40:24.152"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221019 10:40:24.152" endtime="20221019 10:40:24.152"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221019 10:40:24.153" endtime="20221019 10:40:24.154"/>
</kw>
<status status="PASS" starttime="20221019 10:40:24.121" endtime="20221019 10:40:24.154"/>
</kw>
<status status="PASS" starttime="20221019 10:40:24.121" endtime="20221019 10:40:24.154"/>
</kw>
<status status="PASS" starttime="20221019 10:40:24.119" endtime="20221019 10:40:24.155"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221019 10:40:24.117" endtime="20221019 10:40:24.156"/>
</test>
<doc>Smoke test for Recon Namespace Summary Endpoint for FSO buckets.</doc>
<status status="PASS" starttime="20221019 10:39:27.182" endtime="20221019 10:40:24.157"/>
</suite>
<status status="PASS" starttime="20221019 10:38:53.321" endtime="20221019 10:40:24.161"/>
</suite>
<suite id="s1-s3" name="Loaddata" source="/opt/hadoop/smoketest/topology/loaddata.robot">
<test id="s1-s3-t1" name="Create a volume, bucket and key" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create topvol1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221019 10:40:30.513" level="INFO">Running command 'ozone sh volume create topvol1 2&gt;&amp;1'.</msg>
<msg timestamp="20221019 10:40:35.406" level="INFO">${rc} = 0</msg>
<msg timestamp="20221019 10:40:35.406" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221019 10:40:30.509" endtime="20221019 10:40:35.407"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221019 10:40:35.408" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221019 10:40:35.407" endtime="20221019 10:40:35.408"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221019 10:40:35.409" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221019 10:40:35.408" endtime="20221019 10:40:35.409"/>
</kw>
<status status="PASS" starttime="20221019 10:40:30.509" endtime="20221019 10:40:35.409"/>
</kw>
<msg timestamp="20221019 10:40:35.410" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221019 10:40:30.508" endtime="20221019 10:40:35.411"/>
</kw>
<msg timestamp="20221019 10:40:35.411" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221019 10:40:30.508" endtime="20221019 10:40:35.411"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20221019 10:40:35.411" endtime="20221019 10:40:35.412"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /topvol1/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221019 10:40:35.417" level="INFO">Running command 'ozone sh bucket create /topvol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20221019 10:40:40.206" level="INFO">${rc} = 0</msg>
<msg timestamp="20221019 10:40:40.206" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221019 10:40:35.414" endtime="20221019 10:40:40.206"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221019 10:40:40.208" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221019 10:40:40.207" endtime="20221019 10:40:40.208"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221019 10:40:40.208" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221019 10:40:40.208" endtime="20221019 10:40:40.208"/>
</kw>
<status status="PASS" starttime="20221019 10:40:35.414" endtime="20221019 10:40:40.209"/>
</kw>
<msg timestamp="20221019 10:40:40.209" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221019 10:40:35.413" endtime="20221019 10:40:40.209"/>
</kw>
<msg timestamp="20221019 10:40:40.210" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221019 10:40:35.412" endtime="20221019 10:40:40.210"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20221019 10:40:40.210" endtime="20221019 10:40:40.210"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221019 10:40:40.215" level="INFO">Running command 'ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20221019 10:40:47.618" level="INFO">${rc} = 0</msg>
<msg timestamp="20221019 10:40:47.618" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221019 10:40:40.212" endtime="20221019 10:40:47.618"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221019 10:40:47.619" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221019 10:40:47.618" endtime="20221019 10:40:47.619"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221019 10:40:47.620" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221019 10:40:47.619" endtime="20221019 10:40:47.620"/>
</kw>
<status status="PASS" starttime="20221019 10:40:40.211" endtime="20221019 10:40:47.621"/>
</kw>
<msg timestamp="20221019 10:40:47.621" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221019 10:40:40.211" endtime="20221019 10:40:47.621"/>
</kw>
<msg timestamp="20221019 10:40:47.622" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221019 10:40:40.210" endtime="20221019 10:40:47.622"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20221019 10:40:47.622" endtime="20221019 10:40:47.622"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221019 10:40:30.506" endtime="20221019 10:40:47.623"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20221019 10:40:30.436" endtime="20221019 10:40:47.624"/>
</suite>
<suite id="s1-s4" name="readdata-first-half" source="/opt/hadoop/smoketest/topology/readdata.robot">
<test id="s1-s4-t1" name="Read data from previously created key" line="27">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20221019 10:40:58.269" level="INFO">${random} = 40907</msg>
<status status="PASS" starttime="20221019 10:40:58.268" endtime="20221019 10:40:58.269"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221019 10:40:58.275" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-40907 2&gt;&amp;1'.</msg>
<msg timestamp="20221019 10:41:05.359" level="INFO">${rc} = 0</msg>
<msg timestamp="20221019 10:41:05.359" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221019 10:40:58.271" endtime="20221019 10:41:05.359"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221019 10:41:05.361" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221019 10:41:05.360" endtime="20221019 10:41:05.361"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221019 10:41:05.362" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221019 10:41:05.361" endtime="20221019 10:41:05.362"/>
</kw>
<status status="PASS" starttime="20221019 10:40:58.270" endtime="20221019 10:41:05.363"/>
</kw>
<msg timestamp="20221019 10:41:05.363" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221019 10:40:58.270" endtime="20221019 10:41:05.365"/>
</kw>
<msg timestamp="20221019 10:41:05.365" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221019 10:40:58.269" endtime="20221019 10:41:05.365"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20221019 10:41:05.365" endtime="20221019 10:41:05.366"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221019 10:40:58.267" endtime="20221019 10:41:05.366"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20221019 10:40:58.206" endtime="20221019 10:41:05.368"/>
</suite>
<suite id="s1-s5" name="readdata-second-half" source="/opt/hadoop/smoketest/topology/readdata.robot">
<test id="s1-s5-t1" name="Read data from previously created key" line="27">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20221019 10:42:00.694" level="INFO">${random} = 69789</msg>
<status status="PASS" starttime="20221019 10:42:00.693" endtime="20221019 10:42:00.694"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221019 10:42:00.701" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-69789 2&gt;&amp;1'.</msg>
<msg timestamp="20221019 10:42:29.110" level="INFO">${rc} = 0</msg>
<msg timestamp="20221019 10:42:29.110" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221019 10:42:00.696" endtime="20221019 10:42:29.110"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221019 10:42:29.112" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221019 10:42:29.111" endtime="20221019 10:42:29.112"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221019 10:42:29.112" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221019 10:42:29.112" endtime="20221019 10:42:29.113"/>
</kw>
<status status="PASS" starttime="20221019 10:42:00.695" endtime="20221019 10:42:29.113"/>
</kw>
<msg timestamp="20221019 10:42:29.113" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221019 10:42:00.695" endtime="20221019 10:42:29.115"/>
</kw>
<msg timestamp="20221019 10:42:29.115" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221019 10:42:00.694" endtime="20221019 10:42:29.115"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20221019 10:42:29.115" endtime="20221019 10:42:29.116"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221019 10:42:00.692" endtime="20221019 10:42:29.117"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20221019 10:42:00.629" endtime="20221019 10:42:29.120"/>
</suite>
<suite id="s1-s6" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s6-t1" name="Check webui static resources" line="29">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221019 10:37:50.792" endtime="20221019 10:37:50.795"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -s -I http://${SCM}:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221019 10:37:50.808" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20221019 10:37:51.112" level="INFO">${rc} = 0</msg>
<msg timestamp="20221019 10:37:51.112" level="INFO">${output} = HTTP/1.1 200 OK
Date: Wed, 19 Oct 2022 10:37:51 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Wed, 19 Oct 2022 09:30:38 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20221019 10:37:50.797" endtime="20221019 10:37:51.112"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221019 10:37:51.120" level="INFO">HTTP/1.1 200 OK
Date: Wed, 19 Oct 2022 10:37:51 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Wed, 19 Oct 2022 09:30:38 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20221019 10:37:51.117" endtime="20221019 10:37:51.121"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221019 10:37:51.122" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221019 10:37:51.121" endtime="20221019 10:37:51.122"/>
</kw>
<status status="PASS" starttime="20221019 10:37:50.796" endtime="20221019 10:37:51.122"/>
</kw>
<msg timestamp="20221019 10:37:51.122" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221019 10:37:50.796" endtime="20221019 10:37:51.136"/>
</kw>
<msg timestamp="20221019 10:37:51.136" level="INFO">${result} = HTTP/1.1 200 OK
Date: Wed, 19 Oct 2022 10:37:51 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Wed, 19 Oct 2022 09:30:38 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20221019 10:37:50.795" endtime="20221019 10:37:51.136"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221019 10:37:51.137" endtime="20221019 10:37:51.138"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221019 10:37:50.791" endtime="20221019 10:37:51.138"/>
</test>
<test id="s1-s6-t2" name="Basic Freon smoketest" line="34">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221019 10:37:51.167" endtime="20221019 10:37:51.168"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>10</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20221019 10:37:51.168" level="INFO">${random} = sezrRngLv1</msg>
<status status="PASS" starttime="20221019 10:37:51.168" endtime="20221019 10:37:51.168"/>
</kw>
<kw name="Freon OCKG" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221019 10:37:51.192" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p sezrRngLv1  2&gt;&amp;1'.</msg>
<msg timestamp="20221019 10:38:10.920" level="INFO">${rc} = 0</msg>
<msg timestamp="20221019 10:38:10.920" level="INFO">${output} = 2022-10-19 10:37:54,822 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-19 10:37:54,944 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221019 10:37:51.182" endtime="20221019 10:38:10.920"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221019 10:38:10.922" level="INFO">2022-10-19 10:37:54,822 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-19 10:37:54,944 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-10-19 10:37:54,944 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-10-19 10:37:55,213 [main] INFO freon.BaseFreonGenerator: Executing test with prefix sezrRngLv1 and number-of-tests 1
2022-10-19 10:37:55,342 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-19 10:37:56,361 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-19 10:37:57,367 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-19 10:37:58,368 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-19 10:37:58,806 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2022-10-19 10:37:59,121 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false 
2022-10-19 10:37:59,368 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-19 10:38:00,368 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-19 10:38:01,369 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-19 10:38:02,429 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-19 10:38:03,431 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-19 10:38:04,061 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-10-19 10:38:04,440 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-19 10:38:05,446 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-19 10:38:05,623 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-10-19 10:38:06,446 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-19 10:38:07,447 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-19 10:38:08,447 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-19 10:38:09,448 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-10-19 10:38:10,501 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=10147.147025, max=10147.147025, mean=10147.147025, stddev=0.0, median=10147.147025, p75=10147.147025, p95=10147.147025, p98=10147.147025, p99=10147.147025, p999=10147.147025, mean_rate=0.08905002101537751, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-10-19 10:38:10,503 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 15
2022-10-19 10:38:10,503 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-10-19 10:38:10,503 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20221019 10:38:10.921" endtime="20221019 10:38:10.922"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221019 10:38:10.923" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221019 10:38:10.922" endtime="20221019 10:38:10.923"/>
</kw>
<status status="PASS" starttime="20221019 10:37:51.181" endtime="20221019 10:38:10.924"/>
</kw>
<msg timestamp="20221019 10:38:10.924" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221019 10:37:51.181" endtime="20221019 10:38:10.924"/>
</kw>
<msg timestamp="20221019 10:38:10.925" level="INFO">${result} = 2022-10-19 10:37:54,822 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-19 10:37:54,944 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221019 10:37:51.179" endtime="20221019 10:38:10.925"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221019 10:38:10.925" endtime="20221019 10:38:10.925"/>
</kw>
<status status="PASS" starttime="20221019 10:37:51.169" endtime="20221019 10:38:10.926"/>
</kw>
<kw name="Freon OCKV" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221019 10:38:10.932" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p sezrRngLv1  2&gt;&amp;1'.</msg>
<msg timestamp="20221019 10:38:21.932" level="INFO">${rc} = 0</msg>
<msg timestamp="20221019 10:38:21.932" level="INFO">${output} = 2022-10-19 10:38:14,261 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-19 10:38:14,482 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221019 10:38:10.929" endtime="20221019 10:38:21.933"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221019 10:38:21.936" level="INFO">2022-10-19 10:38:14,261 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-19 10:38:14,482 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-10-19 10:38:14,482 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-10-19 10:38:14,707 [main] INFO freon.BaseFreonGenerator: Executing test with prefix sezrRngLv1 and number-of-tests 1
2022-10-19 10:38:14,802 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-19 10:38:15,809 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-19 10:38:16,810 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-19 10:38:17,811 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-19 10:38:17,943 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-10-19 10:38:18,830 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-19 10:38:19,830 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-19 10:38:20,831 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-10-19 10:38:21,558 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=99.14087, max=99.14087, mean=99.14087, stddev=0.0, median=99.14087, p75=99.14087, p95=99.14087, p98=99.14087, p99=99.14087, p999=99.14087, mean_rate=0.836376568935178, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-10-19 10:38:21,560 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 7
2022-10-19 10:38:21,560 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-10-19 10:38:21,560 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20221019 10:38:21.934" endtime="20221019 10:38:21.936"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221019 10:38:21.937" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221019 10:38:21.937" endtime="20221019 10:38:21.937"/>
</kw>
<status status="PASS" starttime="20221019 10:38:10.929" endtime="20221019 10:38:21.938"/>
</kw>
<msg timestamp="20221019 10:38:21.938" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221019 10:38:10.928" endtime="20221019 10:38:21.949"/>
</kw>
<msg timestamp="20221019 10:38:21.950" level="INFO">${result} = 2022-10-19 10:38:14,261 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-19 10:38:14,482 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221019 10:38:10.928" endtime="20221019 10:38:21.950"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221019 10:38:21.950" endtime="20221019 10:38:21.951"/>
</kw>
<status status="PASS" starttime="20221019 10:38:10.926" endtime="20221019 10:38:21.951"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221019 10:37:51.158" endtime="20221019 10:38:21.951"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20221019 10:37:50.618" endtime="20221019 10:38:21.953"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="193350"/>
</suite>
<statistics>
<total>
<stat pass="32" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="32" fail="0" skip="0" id="s1" name="ozone-topology">ozone-topology</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1" name="Cli">ozone-topology.Cli</stat>
<stat pass="23" fail="0" skip="0" id="s1-s2" name="Recon">ozone-topology.Recon</stat>
<stat pass="7" fail="0" skip="0" id="s1-s2-s1" name="Recon-Api">ozone-topology.Recon.Recon-Api</stat>
<stat pass="16" fail="0" skip="0" id="s1-s2-s2" name="Recon-Fso-Nssummary">ozone-topology.Recon.Recon-Fso-Nssummary</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3" name="Loaddata">ozone-topology.Loaddata</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="readdata-first-half">ozone-topology.readdata-first-half</stat>
<stat pass="1" fail="0" skip="0" id="s1-s5" name="readdata-second-half">ozone-topology.readdata-second-half</stat>
<stat pass="2" fail="0" skip="0" id="s1-s6" name="Basic">ozone-topology.Basic</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
