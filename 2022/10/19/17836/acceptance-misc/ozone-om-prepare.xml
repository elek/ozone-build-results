<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 5.0.1 (Python 3.8.10 on linux)" generated="20221019 10:36:06.353" rpa="false" schemaversion="3">
<suite id="s1" name="ozone-om-prepare" source="/opt/hadoop/smoketest/omha/om-prepare.robot">
<kw name="Create Specific OM data for prepare" type="SETUP">
<kw name="Freon OCKG" library="freon">
<arg>prefix=om-prepare</arg>
<arg>n=100</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221019 10:27:57.659" level="INFO">Running command 'ozone freon ockg --om-service-id=omservice -t 1 -n100 -p om-prepare  2&gt;&amp;1'.</msg>
<msg timestamp="20221019 10:28:27.166" level="INFO">${rc} = 0</msg>
<msg timestamp="20221019 10:28:27.166" level="INFO">${output} = 2022-10-19 10:27:59,818 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-19 10:28:00,032 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221019 10:27:57.655" endtime="20221019 10:28:27.166"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221019 10:28:27.168" level="INFO">2022-10-19 10:27:59,818 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-19 10:28:00,032 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-10-19 10:28:00,033 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-10-19 10:28:00,271 [main] INFO freon.BaseFreonGenerator: Executing test with prefix om-prepare and number-of-tests 100
2022-10-19 10:28:00,376 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-10-19 10:28:01,208 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2022-10-19 10:28:01,379 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-10-19 10:28:01,587 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false 
2022-10-19 10:28:02,380 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-10-19 10:28:03,131 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-10-19 10:28:03,380 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-10-19 10:28:03,535 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-10-19 10:28:04,383 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-10-19 10:28:05,384 [Thread-3] INFO freon.ProgressBar: Progress: 1.00 % (1 out of 100)
2022-10-19 10:28:06,387 [Thread-3] INFO freon.ProgressBar: Progress: 3.00 % (3 out of 100)
2022-10-19 10:28:07,387 [Thread-3] INFO freon.ProgressBar: Progress: 9.00 % (9 out of 100)
2022-10-19 10:28:08,390 [Thread-3] INFO freon.ProgressBar: Progress: 15.00 % (15 out of 100)
2022-10-19 10:28:09,397 [Thread-3] INFO freon.ProgressBar: Progress: 21.00 % (21 out of 100)
2022-10-19 10:28:10,398 [Thread-3] INFO freon.ProgressBar: Progress: 28.00 % (28 out of 100)
2022-10-19 10:28:11,398 [Thread-3] INFO freon.ProgressBar: Progress: 28.00 % (28 out of 100)
2022-10-19 10:28:12,399 [Thread-3] INFO freon.ProgressBar: Progress: 28.00 % (28 out of 100)
2022-10-19 10:28:13,399 [Thread-3] INFO freon.ProgressBar: Progress: 33.00 % (33 out of 100)
2022-10-19 10:28:14,400 [Thread-3] INFO freon.ProgressBar: Progress: 37.00 % (37 out of 100)
2022-10-19 10:28:15,401 [Thread-3] INFO freon.ProgressBar: Progress: 37.00 % (37 out of 100)
2022-10-19 10:28:16,401 [Thread-3] INFO freon.ProgressBar: Progress: 37.00 % (37 out of 100)
2022-10-19 10:28:17,402 [Thread-3] INFO freon.ProgressBar: Progress: 45.00 % (45 out of 100)
2022-10-19 10:28:18,402 [Thread-3] INFO freon.ProgressBar: Progress: 54.00 % (54 out of 100)
2022-10-19 10:28:19,404 [Thread-3] INFO freon.ProgressBar: Progress: 62.00 % (62 out of 100)
2022-10-19 10:28:20,405 [Thread-3] INFO freon.ProgressBar: Progress: 69.00 % (69 out of 100)
2022-10-19 10:28:21,407 [Thread-3] INFO freon.ProgressBar: Progress: 69.00 % (69 out of 100)
2022-10-19 10:28:22,408 [Thread-3] INFO freon.ProgressBar: Progress: 69.00 % (69 out of 100)
2022-10-19 10:28:23,409 [Thread-3] INFO freon.ProgressBar: Progress: 76.00 % (76 out of 100)
2022-10-19 10:28:24,409 [Thread-3] INFO freon.ProgressBar: Progress: 84.00 % (84 out of 100)
2022-10-19 10:28:25,409 [Thread-3] INFO freon.ProgressBar: Progress: 94.00 % (94 out of 100)
2022-10-19 10:28:26,410 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2022-10-19 10:28:26,812 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=100, min=79.425539, max=3604.630959, mean=233.09060695386344, stddev=525.1516660121405, median=117.214666, p75=151.737422, p95=323.454887, p98=2592.280049, p99=2612.291184, p999=3604.630959, mean_rate=3.986031387162229, m1=2.0889697237955316, m5=1.2430100000919437, m15=1.0825456993094362, rate_unit=events/second, duration_unit=milliseconds
2022-10-19 10:28:26,812 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 26
2022-10-19 10:28:26,814 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-10-19 10:28:26,814 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20221019 10:28:27.167" endtime="20221019 10:28:27.168"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221019 10:28:27.169" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221019 10:28:27.168" endtime="20221019 10:28:27.169"/>
</kw>
<status status="PASS" starttime="20221019 10:27:57.655" endtime="20221019 10:28:27.169"/>
</kw>
<msg timestamp="20221019 10:28:27.170" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221019 10:27:57.654" endtime="20221019 10:28:27.172"/>
</kw>
<msg timestamp="20221019 10:28:27.172" level="INFO">${result} = 2022-10-19 10:27:59,818 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-19 10:28:00,032 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221019 10:27:57.653" endtime="20221019 10:28:27.172"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221019 10:28:27.172" endtime="20221019 10:28:27.173"/>
</kw>
<status status="PASS" starttime="20221019 10:27:57.652" endtime="20221019 10:28:27.173"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20221019 10:28:27.174" level="INFO">${random} = 31252</msg>
<status status="PASS" starttime="20221019 10:28:27.173" endtime="20221019 10:28:27.174"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20221019 10:28:27.175" level="INFO">${volume_name} = 31252-volume-for-prepare</msg>
<status status="PASS" starttime="20221019 10:28:27.174" endtime="20221019 10:28:27.176"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${bucket_name}</arg>
<arg>${random}-bucket-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20221019 10:28:27.177" level="INFO">${bucket_name} = 31252-bucket-for-prepare</msg>
<status status="PASS" starttime="20221019 10:28:27.176" endtime="20221019 10:28:27.177"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create /${volume_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221019 10:28:27.182" level="INFO">Running command 'ozone sh volume create /31252-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20221019 10:28:30.379" level="INFO">${rc} = 0</msg>
<msg timestamp="20221019 10:28:30.379" level="INFO">${output} = </msg>
<status status="PASS" starttime="20221019 10:28:27.179" endtime="20221019 10:28:30.379"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221019 10:28:30.380" level="INFO"/>
<status status="PASS" starttime="20221019 10:28:30.379" endtime="20221019 10:28:30.380"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221019 10:28:30.381" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221019 10:28:30.380" endtime="20221019 10:28:30.381"/>
</kw>
<status status="PASS" starttime="20221019 10:28:27.178" endtime="20221019 10:28:30.381"/>
</kw>
<msg timestamp="20221019 10:28:30.381" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221019 10:28:27.178" endtime="20221019 10:28:30.382"/>
</kw>
<status status="PASS" starttime="20221019 10:28:27.177" endtime="20221019 10:28:30.382"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume_name}/${bucket_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221019 10:28:30.386" level="INFO">Running command 'ozone sh bucket create /31252-volume-for-prepare/31252-bucket-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20221019 10:28:33.434" level="INFO">${rc} = 0</msg>
<msg timestamp="20221019 10:28:33.434" level="INFO">${output} = </msg>
<status status="PASS" starttime="20221019 10:28:30.384" endtime="20221019 10:28:33.434"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221019 10:28:33.436" level="INFO"/>
<status status="PASS" starttime="20221019 10:28:33.435" endtime="20221019 10:28:33.436"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221019 10:28:33.437" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221019 10:28:33.436" endtime="20221019 10:28:33.437"/>
</kw>
<status status="PASS" starttime="20221019 10:28:30.384" endtime="20221019 10:28:33.438"/>
</kw>
<msg timestamp="20221019 10:28:33.438" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221019 10:28:30.383" endtime="20221019 10:28:33.439"/>
</kw>
<status status="PASS" starttime="20221019 10:28:30.382" endtime="20221019 10:28:33.439"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221019 10:28:33.444" level="INFO">Running command 'ozone sh key put /31252-volume-for-prepare/31252-bucket-for-prepare/prepare-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20221019 10:28:39.410" level="INFO">${rc} = 0</msg>
<msg timestamp="20221019 10:28:39.411" level="INFO">${output} = </msg>
<status status="PASS" starttime="20221019 10:28:33.441" endtime="20221019 10:28:39.411"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221019 10:28:39.413" level="INFO"/>
<status status="PASS" starttime="20221019 10:28:39.412" endtime="20221019 10:28:39.413"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221019 10:28:39.416" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221019 10:28:39.414" endtime="20221019 10:28:39.416"/>
</kw>
<status status="PASS" starttime="20221019 10:28:33.440" endtime="20221019 10:28:39.419"/>
</kw>
<msg timestamp="20221019 10:28:39.419" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221019 10:28:33.440" endtime="20221019 10:28:39.420"/>
</kw>
<status status="PASS" starttime="20221019 10:28:33.439" endtime="20221019 10:28:39.420"/>
</kw>
<status status="PASS" starttime="20221019 10:27:57.651" endtime="20221019 10:28:39.420"/>
</kw>
<test id="s1-t1" name="Prepare Ozone Manager" line="39">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221019 10:28:39.422" endtime="20221019 10:28:39.423"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om prepare -id=omservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221019 10:28:39.427" level="INFO">Running command 'ozone admin om prepare -id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20221019 10:33:39.422" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20221019 10:28:39.425" endtime="20221019 10:33:39.422"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20221019 10:33:39.423" endtime="20221019 10:33:39.423"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20221019 10:33:39.424" endtime="20221019 10:33:39.424"/>
</kw>
<status status="FAIL" starttime="20221019 10:28:39.424" endtime="20221019 10:33:39.424"/>
</kw>
<msg timestamp="20221019 10:33:39.424" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20221019 10:28:39.424" endtime="20221019 10:33:39.425"/>
</kw>
<status status="FAIL" starttime="20221019 10:28:39.423" endtime="20221019 10:33:39.425"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20221019 10:33:39.425" endtime="20221019 10:33:39.426"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20221019 10:28:39.421" endtime="20221019 10:33:39.427">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-t2" name="Checks if the expected data is present in OM" line="43">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221019 10:33:39.429" endtime="20221019 10:33:39.430"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221019 10:33:39.435" level="INFO">Running command 'ozone sh key info /31252-volume-for-prepare/31252-bucket-for-prepare/prepare-key 2&gt;&amp;1'.</msg>
<msg timestamp="20221019 10:33:43.232" level="INFO">${rc} = 0</msg>
<msg timestamp="20221019 10:33:43.232" level="INFO">${output} = {
  "volumeName" : "31252-volume-for-prepare",
  "bucketName" : "31252-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17539,
  "creationTime" : "2022-10-19T10:28:36.609Z",
  "modificati...</msg>
<status status="PASS" starttime="20221019 10:33:39.432" endtime="20221019 10:33:43.232"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221019 10:33:43.233" level="INFO">{
  "volumeName" : "31252-volume-for-prepare",
  "bucketName" : "31252-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17539,
  "creationTime" : "2022-10-19T10:28:36.609Z",
  "modificationTime" : "2022-10-19T10:28:38.997Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "ozoneKeyLocations" : [ {
    "containerID" : 2,
    "localID" : 109611004723200101,
    "length" : 17539,
    "offset" : 0,
    "keyOffset" : 0
  } ]
}</msg>
<status status="PASS" starttime="20221019 10:33:43.232" endtime="20221019 10:33:43.233"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221019 10:33:43.234" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221019 10:33:43.233" endtime="20221019 10:33:43.234"/>
</kw>
<status status="PASS" starttime="20221019 10:33:39.432" endtime="20221019 10:33:43.234"/>
</kw>
<msg timestamp="20221019 10:33:43.234" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221019 10:33:39.432" endtime="20221019 10:33:43.235"/>
</kw>
<msg timestamp="20221019 10:33:43.235" level="INFO">${result} = {
  "volumeName" : "31252-volume-for-prepare",
  "bucketName" : "31252-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17539,
  "creationTime" : "2022-10-19T10:28:36.609Z",
  "modificati...</msg>
<status status="PASS" starttime="20221019 10:33:39.430" endtime="20221019 10:33:43.236"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"name\" : \"prepare-key\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221019 10:33:43.236" endtime="20221019 10:33:43.237"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221019 10:33:39.428" endtime="20221019 10:33:43.238"/>
</test>
<test id="s1-t3" name="Test write operation fails" line="47">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221019 10:33:43.240" endtime="20221019 10:33:43.240"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key2 /opt/hadoop/NOTICE.txt</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221019 10:33:43.244" level="INFO">Running command 'ozone sh key put /31252-volume-for-prepare/31252-bucket-for-prepare/prepare-key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20221019 10:33:46.360" level="INFO">${rc} = 255</msg>
<msg timestamp="20221019 10:33:46.360" level="INFO">${output} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20221019 10:33:43.241" endtime="20221019 10:33:46.360"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221019 10:33:46.362" level="INFO">NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20221019 10:33:46.361" endtime="20221019 10:33:46.362"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221019 10:33:46.362" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221019 10:33:46.362" endtime="20221019 10:33:46.362"/>
</kw>
<msg timestamp="20221019 10:33:46.363" level="INFO">${result} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20221019 10:33:43.241" endtime="20221019 10:33:46.363"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM is in prepare mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221019 10:33:46.363" endtime="20221019 10:33:46.363"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key2</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221019 10:33:46.366" level="INFO">Running command 'ozone sh key info /31252-volume-for-prepare/31252-bucket-for-prepare/prepare-key2 2&gt;&amp;1'.</msg>
<msg timestamp="20221019 10:33:49.625" level="INFO">${rc} = 255</msg>
<msg timestamp="20221019 10:33:49.625" level="INFO">${output} = KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<status status="PASS" starttime="20221019 10:33:46.364" endtime="20221019 10:33:49.626"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221019 10:33:49.627" level="INFO">KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<status status="PASS" starttime="20221019 10:33:49.626" endtime="20221019 10:33:49.627"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221019 10:33:49.628" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221019 10:33:49.627" endtime="20221019 10:33:49.628"/>
</kw>
<status status="PASS" starttime="20221019 10:33:46.364" endtime="20221019 10:33:49.628"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221019 10:33:43.239" endtime="20221019 10:33:49.629"/>
</test>
<doc>Smoke test to test preparing OMs in an OM HA cluster.</doc>
<status status="FAIL" starttime="20221019 10:27:57.570" endtime="20221019 10:33:49.630"/>
</suite>
<statistics>
<total>
<stat pass="2" fail="1" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="2" fail="1" skip="0" id="s1" name="ozone-om-prepare">ozone-om-prepare</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
