<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 5.0.1 (Python 3.8.10 on linux)" generated="20221007 01:11:26.097" rpa="false" schemaversion="3">
<suite id="s1" name="ozone-om-prepare">
<suite id="s1-s1" name="Om-Cancel-Prepare" source="/opt/hadoop/smoketest/omha/om-cancel-prepare.robot">
<kw name="Generate volume and bucket names" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20221007 01:06:54.556" level="INFO">${random} = 72628</msg>
<status status="PASS" starttime="20221007 01:06:54.556" endtime="20221007 01:06:54.556"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-cancel</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20221007 01:06:54.557" level="INFO">${volume_name} = 72628-volume-for-cancel</msg>
<status status="PASS" starttime="20221007 01:06:54.556" endtime="20221007 01:06:54.557"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${bucket_name}</arg>
<arg>${random}-bucket-for-cancel</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20221007 01:06:54.559" level="INFO">${bucket_name} = 72628-bucket-for-cancel</msg>
<status status="PASS" starttime="20221007 01:06:54.558" endtime="20221007 01:06:54.559"/>
</kw>
<status status="PASS" starttime="20221007 01:06:54.555" endtime="20221007 01:06:54.559"/>
</kw>
<test id="s1-s1-t1" name="Cancel Ozone Manager Prepare" line="33">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221007 01:06:54.560" endtime="20221007 01:06:54.561"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om cancelprepare -id=omservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221007 01:06:54.566" level="INFO">Running command 'ozone admin om cancelprepare -id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20221007 01:06:57.230" level="INFO">${rc} = 0</msg>
<msg timestamp="20221007 01:06:57.230" level="INFO">${output} = Cancel prepare succeeded, cluster can now accept write requests.</msg>
<status status="PASS" starttime="20221007 01:06:54.562" endtime="20221007 01:06:57.230"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221007 01:06:57.231" level="INFO">Cancel prepare succeeded, cluster can now accept write requests.</msg>
<status status="PASS" starttime="20221007 01:06:57.230" endtime="20221007 01:06:57.231"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221007 01:06:57.232" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221007 01:06:57.231" endtime="20221007 01:06:57.232"/>
</kw>
<status status="PASS" starttime="20221007 01:06:54.561" endtime="20221007 01:06:57.232"/>
</kw>
<msg timestamp="20221007 01:06:57.232" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221007 01:06:54.561" endtime="20221007 01:06:57.233"/>
</kw>
<msg timestamp="20221007 01:06:57.233" level="INFO">${result} = Cancel prepare succeeded, cluster can now accept write requests.</msg>
<status status="PASS" starttime="20221007 01:06:54.561" endtime="20221007 01:06:57.234"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>5sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Cancel prepare succeeded</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Cancel prepare succeeded</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221007 01:06:57.234" endtime="20221007 01:06:57.234"/>
</kw>
<status status="PASS" starttime="20221007 01:06:57.234" endtime="20221007 01:06:57.234"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221007 01:06:54.559" endtime="20221007 01:06:57.235"/>
</test>
<test id="s1-s1-t2" name="Test write operations" line="37">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221007 01:06:57.236" endtime="20221007 01:06:57.237"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create /${volume_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221007 01:06:57.240" level="INFO">Running command 'ozone sh volume create /72628-volume-for-cancel 2&gt;&amp;1'.</msg>
<msg timestamp="20221007 01:06:59.618" level="INFO">${rc} = 0</msg>
<msg timestamp="20221007 01:06:59.619" level="INFO">${output} = </msg>
<status status="PASS" starttime="20221007 01:06:57.238" endtime="20221007 01:06:59.619"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221007 01:06:59.620" level="INFO"/>
<status status="PASS" starttime="20221007 01:06:59.619" endtime="20221007 01:06:59.620"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221007 01:06:59.621" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221007 01:06:59.620" endtime="20221007 01:06:59.621"/>
</kw>
<status status="PASS" starttime="20221007 01:06:57.237" endtime="20221007 01:06:59.621"/>
</kw>
<msg timestamp="20221007 01:06:59.621" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221007 01:06:57.237" endtime="20221007 01:06:59.621"/>
</kw>
<status status="PASS" starttime="20221007 01:06:57.237" endtime="20221007 01:06:59.622"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume_name}/${bucket_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221007 01:06:59.626" level="INFO">Running command 'ozone sh bucket create /72628-volume-for-cancel/72628-bucket-for-cancel 2&gt;&amp;1'.</msg>
<msg timestamp="20221007 01:07:02.013" level="INFO">${rc} = 0</msg>
<msg timestamp="20221007 01:07:02.013" level="INFO">${output} = </msg>
<status status="PASS" starttime="20221007 01:06:59.623" endtime="20221007 01:07:02.013"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221007 01:07:02.014" level="INFO"/>
<status status="PASS" starttime="20221007 01:07:02.013" endtime="20221007 01:07:02.014"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221007 01:07:02.015" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221007 01:07:02.014" endtime="20221007 01:07:02.015"/>
</kw>
<status status="PASS" starttime="20221007 01:06:59.623" endtime="20221007 01:07:02.015"/>
</kw>
<msg timestamp="20221007 01:07:02.015" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221007 01:06:59.622" endtime="20221007 01:07:02.016"/>
</kw>
<status status="PASS" starttime="20221007 01:06:59.622" endtime="20221007 01:07:02.016"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put /${volume_name}/${bucket_name}/cancel-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221007 01:07:02.020" level="INFO">Running command 'ozone sh key put /72628-volume-for-cancel/72628-bucket-for-cancel/cancel-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20221007 01:07:06.235" level="INFO">${rc} = 0</msg>
<msg timestamp="20221007 01:07:06.235" level="INFO">${output} = </msg>
<status status="PASS" starttime="20221007 01:07:02.018" endtime="20221007 01:07:06.235"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221007 01:07:06.236" level="INFO"/>
<status status="PASS" starttime="20221007 01:07:06.236" endtime="20221007 01:07:06.237"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221007 01:07:06.237" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221007 01:07:06.237" endtime="20221007 01:07:06.237"/>
</kw>
<status status="PASS" starttime="20221007 01:07:02.017" endtime="20221007 01:07:06.237"/>
</kw>
<msg timestamp="20221007 01:07:06.238" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221007 01:07:02.017" endtime="20221007 01:07:06.238"/>
</kw>
<msg timestamp="20221007 01:07:06.238" level="INFO">${result} = </msg>
<status status="PASS" starttime="20221007 01:07:02.016" endtime="20221007 01:07:06.238"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /${volume_name}/${bucket_name}/cancel-key</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221007 01:07:06.242" level="INFO">Running command 'ozone sh key info /72628-volume-for-cancel/72628-bucket-for-cancel/cancel-key 2&gt;&amp;1'.</msg>
<msg timestamp="20221007 01:07:08.723" level="INFO">${rc} = 0</msg>
<msg timestamp="20221007 01:07:08.723" level="INFO">${output} = {
  "volumeName" : "72628-volume-for-cancel",
  "bucketName" : "72628-bucket-for-cancel",
  "name" : "cancel-key",
  "dataSize" : 17539,
  "creationTime" : "2022-10-07T01:07:04.210Z",
  "modificationT...</msg>
<status status="PASS" starttime="20221007 01:07:06.240" endtime="20221007 01:07:08.723"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221007 01:07:08.724" level="INFO">{
  "volumeName" : "72628-volume-for-cancel",
  "bucketName" : "72628-bucket-for-cancel",
  "name" : "cancel-key",
  "dataSize" : 17539,
  "creationTime" : "2022-10-07T01:07:04.210Z",
  "modificationTime" : "2022-10-07T01:07:05.844Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "ozoneKeyLocations" : [ {
    "containerID" : 3,
    "localID" : 109611004723200103,
    "length" : 17539,
    "offset" : 0,
    "keyOffset" : 0
  } ],
  "metadata" : { }
}</msg>
<status status="PASS" starttime="20221007 01:07:08.724" endtime="20221007 01:07:08.725"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221007 01:07:08.725" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221007 01:07:08.725" endtime="20221007 01:07:08.725"/>
</kw>
<status status="PASS" starttime="20221007 01:07:06.239" endtime="20221007 01:07:08.726"/>
</kw>
<msg timestamp="20221007 01:07:08.726" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221007 01:07:06.239" endtime="20221007 01:07:08.726"/>
</kw>
<msg timestamp="20221007 01:07:08.726" level="INFO">${result} = {
  "volumeName" : "72628-volume-for-cancel",
  "bucketName" : "72628-bucket-for-cancel",
  "name" : "cancel-key",
  "dataSize" : 17539,
  "creationTime" : "2022-10-07T01:07:04.210Z",
  "modificationT...</msg>
<status status="PASS" starttime="20221007 01:07:06.238" endtime="20221007 01:07:08.726"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"name\" : \"cancel-key\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221007 01:07:08.727" endtime="20221007 01:07:08.727"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221007 01:06:57.235" endtime="20221007 01:07:08.727"/>
</test>
<doc>Smoke test for ozone manager cancel prepare</doc>
<status status="PASS" starttime="20221007 01:06:54.511" endtime="20221007 01:07:08.728"/>
</suite>
<suite id="s1-s2" name="Om-Prepare" source="/opt/hadoop/smoketest/omha/om-prepare.robot">
<kw name="Create Specific OM data for prepare" type="SETUP">
<kw name="Freon OCKG" library="freon">
<arg>prefix=om-prepare</arg>
<arg>n=100</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221007 01:07:13.178" level="INFO">Running command 'ozone freon ockg --om-service-id=omservice -t 1 -n100 -p om-prepare  2&gt;&amp;1'.</msg>
<msg timestamp="20221007 01:07:26.299" level="INFO">${rc} = 0</msg>
<msg timestamp="20221007 01:07:26.299" level="INFO">${output} = 2022-10-07 01:07:14,487 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-07 01:07:14,603 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221007 01:07:13.174" endtime="20221007 01:07:26.299"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221007 01:07:26.300" level="INFO">2022-10-07 01:07:14,487 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-07 01:07:14,603 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-10-07 01:07:14,603 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-10-07 01:07:14,801 [main] INFO freon.BaseFreonGenerator: Executing test with prefix om-prepare and number-of-tests 100
2022-10-07 01:07:14,882 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-10-07 01:07:15,889 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-10-07 01:07:16,120 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-10-07 01:07:16,393 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-10-07 01:07:16,890 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-10-07 01:07:17,890 [Thread-3] INFO freon.ProgressBar: Progress: 8.00 % (8 out of 100)
2022-10-07 01:07:18,891 [Thread-3] INFO freon.ProgressBar: Progress: 19.00 % (19 out of 100)
2022-10-07 01:07:19,891 [Thread-3] INFO freon.ProgressBar: Progress: 28.00 % (28 out of 100)
2022-10-07 01:07:20,894 [Thread-3] INFO freon.ProgressBar: Progress: 41.00 % (41 out of 100)
2022-10-07 01:07:21,894 [Thread-3] INFO freon.ProgressBar: Progress: 54.00 % (54 out of 100)
2022-10-07 01:07:22,896 [Thread-3] INFO freon.ProgressBar: Progress: 67.00 % (67 out of 100)
2022-10-07 01:07:23,896 [Thread-3] INFO freon.ProgressBar: Progress: 78.00 % (78 out of 100)
2022-10-07 01:07:24,906 [Thread-3] INFO freon.ProgressBar: Progress: 91.00 % (91 out of 100)
2022-10-07 01:07:25,906 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2022-10-07 01:07:25,945 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=100, min=50.608922, max=1537.46425, mean=98.31619154446548, stddev=142.26801320295192, median=79.107448, p75=92.30178, p95=136.5363, p98=167.147742, p99=170.690226, p999=1537.46425, mean_rate=9.605087107706542, m1=7.6477512780757895, m5=7.292559858598942, m15=7.231024851172578, rate_unit=events/second, duration_unit=milliseconds
2022-10-07 01:07:25,946 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 11
2022-10-07 01:07:25,947 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-10-07 01:07:25,947 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20221007 01:07:26.299" endtime="20221007 01:07:26.300"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221007 01:07:26.300" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221007 01:07:26.300" endtime="20221007 01:07:26.301"/>
</kw>
<status status="PASS" starttime="20221007 01:07:13.174" endtime="20221007 01:07:26.301"/>
</kw>
<msg timestamp="20221007 01:07:26.301" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221007 01:07:13.174" endtime="20221007 01:07:26.302"/>
</kw>
<msg timestamp="20221007 01:07:26.304" level="INFO">${result} = 2022-10-07 01:07:14,487 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-07 01:07:14,603 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221007 01:07:13.173" endtime="20221007 01:07:26.304"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221007 01:07:26.304" endtime="20221007 01:07:26.305"/>
</kw>
<status status="PASS" starttime="20221007 01:07:13.172" endtime="20221007 01:07:26.305"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20221007 01:07:26.305" level="INFO">${random} = 62889</msg>
<status status="PASS" starttime="20221007 01:07:26.305" endtime="20221007 01:07:26.305"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20221007 01:07:26.307" level="INFO">${volume_name} = 62889-volume-for-prepare</msg>
<status status="PASS" starttime="20221007 01:07:26.306" endtime="20221007 01:07:26.307"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${bucket_name}</arg>
<arg>${random}-bucket-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20221007 01:07:26.309" level="INFO">${bucket_name} = 62889-bucket-for-prepare</msg>
<status status="PASS" starttime="20221007 01:07:26.307" endtime="20221007 01:07:26.309"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create /${volume_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221007 01:07:26.312" level="INFO">Running command 'ozone sh volume create /62889-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20221007 01:07:28.680" level="INFO">${rc} = 0</msg>
<msg timestamp="20221007 01:07:28.680" level="INFO">${output} = </msg>
<status status="PASS" starttime="20221007 01:07:26.310" endtime="20221007 01:07:28.680"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221007 01:07:28.682" level="INFO"/>
<status status="PASS" starttime="20221007 01:07:28.681" endtime="20221007 01:07:28.682"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221007 01:07:28.682" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221007 01:07:28.682" endtime="20221007 01:07:28.682"/>
</kw>
<status status="PASS" starttime="20221007 01:07:26.310" endtime="20221007 01:07:28.683"/>
</kw>
<msg timestamp="20221007 01:07:28.683" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221007 01:07:26.310" endtime="20221007 01:07:28.683"/>
</kw>
<status status="PASS" starttime="20221007 01:07:26.309" endtime="20221007 01:07:28.683"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume_name}/${bucket_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221007 01:07:28.687" level="INFO">Running command 'ozone sh bucket create /62889-volume-for-prepare/62889-bucket-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20221007 01:07:31.165" level="INFO">${rc} = 0</msg>
<msg timestamp="20221007 01:07:31.165" level="INFO">${output} = </msg>
<status status="PASS" starttime="20221007 01:07:28.685" endtime="20221007 01:07:31.165"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221007 01:07:31.166" level="INFO"/>
<status status="PASS" starttime="20221007 01:07:31.165" endtime="20221007 01:07:31.166"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221007 01:07:31.166" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221007 01:07:31.166" endtime="20221007 01:07:31.166"/>
</kw>
<status status="PASS" starttime="20221007 01:07:28.684" endtime="20221007 01:07:31.167"/>
</kw>
<msg timestamp="20221007 01:07:31.167" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221007 01:07:28.684" endtime="20221007 01:07:31.167"/>
</kw>
<status status="PASS" starttime="20221007 01:07:28.684" endtime="20221007 01:07:31.167"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221007 01:07:31.171" level="INFO">Running command 'ozone sh key put /62889-volume-for-prepare/62889-bucket-for-prepare/prepare-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20221007 01:07:35.543" level="INFO">${rc} = 0</msg>
<msg timestamp="20221007 01:07:35.543" level="INFO">${output} = </msg>
<status status="PASS" starttime="20221007 01:07:31.169" endtime="20221007 01:07:35.543"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221007 01:07:35.544" level="INFO"/>
<status status="PASS" starttime="20221007 01:07:35.543" endtime="20221007 01:07:35.544"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221007 01:07:35.544" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221007 01:07:35.544" endtime="20221007 01:07:35.545"/>
</kw>
<status status="PASS" starttime="20221007 01:07:31.168" endtime="20221007 01:07:35.545"/>
</kw>
<msg timestamp="20221007 01:07:35.545" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221007 01:07:31.168" endtime="20221007 01:07:35.546"/>
</kw>
<status status="PASS" starttime="20221007 01:07:31.168" endtime="20221007 01:07:35.546"/>
</kw>
<status status="PASS" starttime="20221007 01:07:13.172" endtime="20221007 01:07:35.546"/>
</kw>
<test id="s1-s2-t1" name="Prepare Ozone Manager" line="39">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221007 01:07:35.548" endtime="20221007 01:07:35.548"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om prepare -id=omservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221007 01:07:35.552" level="INFO">Running command 'ozone admin om prepare -id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20221007 01:07:43.091" level="INFO">${rc} = 0</msg>
<msg timestamp="20221007 01:07:43.091" level="INFO">${output} = Ozone Manager Prepare Request successfully returned with Transaction Id : [833].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], C...</msg>
<status status="PASS" starttime="20221007 01:07:35.550" endtime="20221007 01:07:43.092"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221007 01:07:43.093" level="INFO">Ozone Manager Prepare Request successfully returned with Transaction Id : [833].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [833]
OM : [om3], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [833]
OM : [om2], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [833]

OM Preparation successful! 
All OMs are prepared
No new write requests will be allowed until preparation is cancelled or upgrade/downgrade is done.</msg>
<status status="PASS" starttime="20221007 01:07:43.092" endtime="20221007 01:07:43.093"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221007 01:07:43.093" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221007 01:07:43.093" endtime="20221007 01:07:43.093"/>
</kw>
<status status="PASS" starttime="20221007 01:07:35.549" endtime="20221007 01:07:43.094"/>
</kw>
<msg timestamp="20221007 01:07:43.094" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221007 01:07:35.549" endtime="20221007 01:07:43.094"/>
</kw>
<msg timestamp="20221007 01:07:43.094" level="INFO">${result} = Ozone Manager Prepare Request successfully returned with Transaction Id : [833].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], C...</msg>
<status status="PASS" starttime="20221007 01:07:35.549" endtime="20221007 01:07:43.094"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221007 01:07:43.095" endtime="20221007 01:07:43.095"/>
</kw>
<status status="PASS" starttime="20221007 01:07:43.095" endtime="20221007 01:07:43.095"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221007 01:07:35.547" endtime="20221007 01:07:43.096"/>
</test>
<test id="s1-s2-t2" name="Checks if the expected data is present in OM" line="43">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221007 01:07:43.098" endtime="20221007 01:07:43.098"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221007 01:07:43.102" level="INFO">Running command 'ozone sh key info /62889-volume-for-prepare/62889-bucket-for-prepare/prepare-key 2&gt;&amp;1'.</msg>
<msg timestamp="20221007 01:07:45.754" level="INFO">${rc} = 0</msg>
<msg timestamp="20221007 01:07:45.754" level="INFO">${output} = {
  "volumeName" : "62889-volume-for-prepare",
  "bucketName" : "62889-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17539,
  "creationTime" : "2022-10-07T01:07:33.595Z",
  "modificati...</msg>
<status status="PASS" starttime="20221007 01:07:43.099" endtime="20221007 01:07:45.754"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221007 01:07:45.756" level="INFO">{
  "volumeName" : "62889-volume-for-prepare",
  "bucketName" : "62889-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17539,
  "creationTime" : "2022-10-07T01:07:33.595Z",
  "modificationTime" : "2022-10-07T01:07:35.182Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "ozoneKeyLocations" : [ {
    "containerID" : 4,
    "localID" : 109611004723200204,
    "length" : 17539,
    "offset" : 0,
    "keyOffset" : 0
  } ],
  "metadata" : { }
}</msg>
<status status="PASS" starttime="20221007 01:07:45.755" endtime="20221007 01:07:45.756"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221007 01:07:45.756" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221007 01:07:45.756" endtime="20221007 01:07:45.756"/>
</kw>
<status status="PASS" starttime="20221007 01:07:43.099" endtime="20221007 01:07:45.757"/>
</kw>
<msg timestamp="20221007 01:07:45.757" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221007 01:07:43.099" endtime="20221007 01:07:45.757"/>
</kw>
<msg timestamp="20221007 01:07:45.757" level="INFO">${result} = {
  "volumeName" : "62889-volume-for-prepare",
  "bucketName" : "62889-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17539,
  "creationTime" : "2022-10-07T01:07:33.595Z",
  "modificati...</msg>
<status status="PASS" starttime="20221007 01:07:43.098" endtime="20221007 01:07:45.757"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"name\" : \"prepare-key\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221007 01:07:45.758" endtime="20221007 01:07:45.758"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221007 01:07:43.097" endtime="20221007 01:07:45.758"/>
</test>
<test id="s1-s2-t3" name="Test write operation fails" line="47">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221007 01:07:45.760" endtime="20221007 01:07:45.761"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key2 /opt/hadoop/NOTICE.txt</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221007 01:07:45.763" level="INFO">Running command 'ozone sh key put /62889-volume-for-prepare/62889-bucket-for-prepare/prepare-key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20221007 01:07:48.071" level="INFO">${rc} = 255</msg>
<msg timestamp="20221007 01:07:48.071" level="INFO">${output} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20221007 01:07:45.761" endtime="20221007 01:07:48.071"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221007 01:07:48.073" level="INFO">NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20221007 01:07:48.072" endtime="20221007 01:07:48.073"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221007 01:07:48.073" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221007 01:07:48.073" endtime="20221007 01:07:48.073"/>
</kw>
<msg timestamp="20221007 01:07:48.074" level="INFO">${result} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20221007 01:07:45.761" endtime="20221007 01:07:48.074"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM is in prepare mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221007 01:07:48.074" endtime="20221007 01:07:48.074"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key2</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221007 01:07:48.077" level="INFO">Running command 'ozone sh key info /62889-volume-for-prepare/62889-bucket-for-prepare/prepare-key2 2&gt;&amp;1'.</msg>
<msg timestamp="20221007 01:07:50.642" level="INFO">${rc} = 255</msg>
<msg timestamp="20221007 01:07:50.642" level="INFO">${output} = KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<status status="PASS" starttime="20221007 01:07:48.075" endtime="20221007 01:07:50.642"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221007 01:07:50.644" level="INFO">KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<status status="PASS" starttime="20221007 01:07:50.643" endtime="20221007 01:07:50.644"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221007 01:07:50.644" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221007 01:07:50.644" endtime="20221007 01:07:50.644"/>
</kw>
<status status="PASS" starttime="20221007 01:07:48.074" endtime="20221007 01:07:50.645"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221007 01:07:45.759" endtime="20221007 01:07:50.645"/>
</test>
<doc>Smoke test to test preparing OMs in an OM HA cluster.</doc>
<status status="PASS" starttime="20221007 01:07:13.120" endtime="20221007 01:07:50.647"/>
</suite>
<suite id="s1-s3" name="Om-Prepared" source="/opt/hadoop/smoketest/omha/om-prepared.robot">
<test id="s1-s3-t1" name="Test create volume fails" line="26">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221007 01:07:55.077" endtime="20221007 01:07:55.078"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20221007 01:07:55.079" level="INFO">${random} = 19426</msg>
<status status="PASS" starttime="20221007 01:07:55.078" endtime="20221007 01:07:55.079"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20221007 01:07:55.080" level="INFO">${volume_name} = 19426-volume-for-prepare</msg>
<status status="PASS" starttime="20221007 01:07:55.079" endtime="20221007 01:07:55.080"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${volume_name}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221007 01:07:55.084" level="INFO">Running command 'ozone sh volume create /19426-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20221007 01:07:57.496" level="INFO">${rc} = 255</msg>
<msg timestamp="20221007 01:07:57.496" level="INFO">${output} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20221007 01:07:55.081" endtime="20221007 01:07:57.496"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221007 01:07:57.497" level="INFO">NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20221007 01:07:57.497" endtime="20221007 01:07:57.497"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221007 01:07:57.498" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221007 01:07:57.498" endtime="20221007 01:07:57.498"/>
</kw>
<msg timestamp="20221007 01:07:57.498" level="INFO">${result} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20221007 01:07:55.080" endtime="20221007 01:07:57.498"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM is in prepare mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221007 01:07:57.499" endtime="20221007 01:07:57.499"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume info /${volume_name}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221007 01:07:57.502" level="INFO">Running command 'ozone sh volume info /19426-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20221007 01:07:59.815" level="INFO">${rc} = 255</msg>
<msg timestamp="20221007 01:07:59.815" level="INFO">${output} = VOLUME_NOT_FOUND Volume 19426-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20221007 01:07:57.500" endtime="20221007 01:07:59.815"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221007 01:07:59.816" level="INFO">VOLUME_NOT_FOUND Volume 19426-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20221007 01:07:59.816" endtime="20221007 01:07:59.817"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221007 01:07:59.817" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221007 01:07:59.817" endtime="20221007 01:07:59.817"/>
</kw>
<msg timestamp="20221007 01:07:59.818" level="INFO">${result} = VOLUME_NOT_FOUND Volume 19426-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20221007 01:07:57.499" endtime="20221007 01:07:59.818"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221007 01:07:59.818" endtime="20221007 01:07:59.818"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221007 01:07:55.076" endtime="20221007 01:07:59.818"/>
</test>
<test id="s1-s3-t2" name="Test list volumes succeeds" line="34">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221007 01:07:59.820" endtime="20221007 01:07:59.821"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221007 01:07:59.825" level="INFO">Running command 'ozone sh volume list 2&gt;&amp;1'.</msg>
<msg timestamp="20221007 01:08:02.357" level="INFO">${rc} = 0</msg>
<msg timestamp="20221007 01:08:02.358" level="INFO">${output} = [ {
  "metadata" : { },
  "name" : "72628-volume-for-cancel",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2...</msg>
<status status="PASS" starttime="20221007 01:07:59.822" endtime="20221007 01:08:02.358"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221007 01:08:02.359" level="INFO">[ {
  "metadata" : { },
  "name" : "72628-volume-for-cancel",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2022-10-07T01:06:59.560Z",
  "modificationTime" : "2022-10-07T01:06:59.560Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "62889-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2022-10-07T01:07:28.652Z",
  "modificationTime" : "2022-10-07T01:07:28.652Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "09145-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2022-10-07T01:06:28.106Z",
  "modificationTime" : "2022-10-07T01:06:28.106Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "s3v",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 0,
  "creationTime" : "2022-10-07T01:05:42.661Z",
  "modificationTime" : "2022-10-07T01:05:42.661Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "vol1",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2022-10-07T01:06:11.079Z",
  "modificationTime" : "2022-10-07T01:06:11.079Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
} ]</msg>
<status status="PASS" starttime="20221007 01:08:02.358" endtime="20221007 01:08:02.359"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221007 01:08:02.360" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221007 01:08:02.359" endtime="20221007 01:08:02.360"/>
</kw>
<status status="PASS" starttime="20221007 01:07:59.822" endtime="20221007 01:08:02.360"/>
</kw>
<msg timestamp="20221007 01:08:02.360" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221007 01:07:59.821" endtime="20221007 01:08:02.361"/>
</kw>
<msg timestamp="20221007 01:08:02.362" level="INFO">${result} = [ {
  "metadata" : { },
  "name" : "72628-volume-for-cancel",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2...</msg>
<status status="PASS" starttime="20221007 01:07:59.821" endtime="20221007 01:08:02.362"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221007 01:07:59.820" endtime="20221007 01:08:02.362"/>
</test>
<doc>Smoke test to test that OMs are prepared in an OM HA cluster.</doc>
<status status="PASS" starttime="20221007 01:07:55.028" endtime="20221007 01:08:02.363"/>
</suite>
<suite id="s1-s4" name="Om-Prepared" source="/opt/hadoop/smoketest/omha/om-prepared.robot">
<test id="s1-s4-t1" name="Test create volume fails" line="26">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221007 01:09:21.264" endtime="20221007 01:09:21.265"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20221007 01:09:21.265" level="INFO">${random} = 34680</msg>
<status status="PASS" starttime="20221007 01:09:21.265" endtime="20221007 01:09:21.265"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20221007 01:09:21.267" level="INFO">${volume_name} = 34680-volume-for-prepare</msg>
<status status="PASS" starttime="20221007 01:09:21.265" endtime="20221007 01:09:21.267"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${volume_name}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221007 01:09:21.274" level="INFO">Running command 'ozone sh volume create /34680-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20221007 01:09:23.509" level="INFO">${rc} = 255</msg>
<msg timestamp="20221007 01:09:23.509" level="INFO">${output} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20221007 01:09:21.267" endtime="20221007 01:09:23.509"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221007 01:09:23.510" level="INFO">NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20221007 01:09:23.510" endtime="20221007 01:09:23.510"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221007 01:09:23.511" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221007 01:09:23.511" endtime="20221007 01:09:23.511"/>
</kw>
<msg timestamp="20221007 01:09:23.512" level="INFO">${result} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20221007 01:09:21.267" endtime="20221007 01:09:23.512"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM is in prepare mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221007 01:09:23.512" endtime="20221007 01:09:23.512"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume info /${volume_name}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221007 01:09:23.515" level="INFO">Running command 'ozone sh volume info /34680-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20221007 01:09:25.761" level="INFO">${rc} = 255</msg>
<msg timestamp="20221007 01:09:25.761" level="INFO">${output} = VOLUME_NOT_FOUND Volume 34680-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20221007 01:09:23.513" endtime="20221007 01:09:25.761"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221007 01:09:25.762" level="INFO">VOLUME_NOT_FOUND Volume 34680-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20221007 01:09:25.761" endtime="20221007 01:09:25.762"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221007 01:09:25.763" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221007 01:09:25.763" endtime="20221007 01:09:25.763"/>
</kw>
<msg timestamp="20221007 01:09:25.763" level="INFO">${result} = VOLUME_NOT_FOUND Volume 34680-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20221007 01:09:23.512" endtime="20221007 01:09:25.763"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221007 01:09:25.764" endtime="20221007 01:09:25.764"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221007 01:09:21.263" endtime="20221007 01:09:25.764"/>
</test>
<test id="s1-s4-t2" name="Test list volumes succeeds" line="34">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221007 01:09:25.766" endtime="20221007 01:09:25.767"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221007 01:09:25.770" level="INFO">Running command 'ozone sh volume list 2&gt;&amp;1'.</msg>
<msg timestamp="20221007 01:09:28.393" level="INFO">${rc} = 0</msg>
<msg timestamp="20221007 01:09:28.393" level="INFO">${output} = [ {
  "metadata" : { },
  "name" : "72628-volume-for-cancel",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2...</msg>
<status status="PASS" starttime="20221007 01:09:25.768" endtime="20221007 01:09:28.393"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221007 01:09:28.394" level="INFO">[ {
  "metadata" : { },
  "name" : "72628-volume-for-cancel",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2022-10-07T01:06:59.560Z",
  "modificationTime" : "2022-10-07T01:06:59.560Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "62889-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2022-10-07T01:07:28.652Z",
  "modificationTime" : "2022-10-07T01:07:28.652Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "09145-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2022-10-07T01:06:28.106Z",
  "modificationTime" : "2022-10-07T01:06:28.106Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "s3v",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 0,
  "creationTime" : "2022-10-07T01:05:42.547Z",
  "modificationTime" : "2022-10-07T01:05:42.547Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "vol1",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2022-10-07T01:06:11.079Z",
  "modificationTime" : "2022-10-07T01:06:11.079Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
} ]</msg>
<status status="PASS" starttime="20221007 01:09:28.393" endtime="20221007 01:09:28.394"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221007 01:09:28.395" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221007 01:09:28.394" endtime="20221007 01:09:28.395"/>
</kw>
<status status="PASS" starttime="20221007 01:09:25.767" endtime="20221007 01:09:28.395"/>
</kw>
<msg timestamp="20221007 01:09:28.395" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221007 01:09:25.767" endtime="20221007 01:09:28.396"/>
</kw>
<msg timestamp="20221007 01:09:28.396" level="INFO">${result} = [ {
  "metadata" : { },
  "name" : "72628-volume-for-cancel",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2...</msg>
<status status="PASS" starttime="20221007 01:09:25.767" endtime="20221007 01:09:28.396"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221007 01:09:25.765" endtime="20221007 01:09:28.397"/>
</test>
<doc>Smoke test to test that OMs are prepared in an OM HA cluster.</doc>
<status status="PASS" starttime="20221007 01:09:21.219" endtime="20221007 01:09:28.398"/>
</suite>
<suite id="s1-s5" name="Loaddata" source="/opt/hadoop/smoketest/topology/loaddata.robot">
<test id="s1-s5-t1" name="Create a volume, bucket and key" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create topvol1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221007 01:10:51.491" level="INFO">Running command 'ozone sh volume create topvol1 2&gt;&amp;1'.</msg>
<msg timestamp="20221007 01:10:54.099" level="INFO">${rc} = 0</msg>
<msg timestamp="20221007 01:10:54.099" level="INFO">${output} = </msg>
<status status="PASS" starttime="20221007 01:10:51.488" endtime="20221007 01:10:54.099"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221007 01:10:54.100" level="INFO"/>
<status status="PASS" starttime="20221007 01:10:54.100" endtime="20221007 01:10:54.101"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221007 01:10:54.101" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221007 01:10:54.101" endtime="20221007 01:10:54.101"/>
</kw>
<status status="PASS" starttime="20221007 01:10:51.487" endtime="20221007 01:10:54.101"/>
</kw>
<msg timestamp="20221007 01:10:54.102" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221007 01:10:51.487" endtime="20221007 01:10:54.103"/>
</kw>
<msg timestamp="20221007 01:10:54.103" level="INFO">${output} = </msg>
<status status="PASS" starttime="20221007 01:10:51.486" endtime="20221007 01:10:54.103"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20221007 01:10:54.103" endtime="20221007 01:10:54.104"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /topvol1/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221007 01:10:54.117" level="INFO">Running command 'ozone sh bucket create /topvol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20221007 01:10:56.499" level="INFO">${rc} = 0</msg>
<msg timestamp="20221007 01:10:56.499" level="INFO">${output} = </msg>
<status status="PASS" starttime="20221007 01:10:54.105" endtime="20221007 01:10:56.499"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221007 01:10:56.500" level="INFO"/>
<status status="PASS" starttime="20221007 01:10:56.500" endtime="20221007 01:10:56.500"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221007 01:10:56.501" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221007 01:10:56.501" endtime="20221007 01:10:56.501"/>
</kw>
<status status="PASS" starttime="20221007 01:10:54.104" endtime="20221007 01:10:56.501"/>
</kw>
<msg timestamp="20221007 01:10:56.501" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221007 01:10:54.104" endtime="20221007 01:10:56.502"/>
</kw>
<msg timestamp="20221007 01:10:56.502" level="INFO">${output} = </msg>
<status status="PASS" starttime="20221007 01:10:54.104" endtime="20221007 01:10:56.502"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20221007 01:10:56.502" endtime="20221007 01:10:56.502"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221007 01:10:56.515" level="INFO">Running command 'ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20221007 01:11:01.886" level="INFO">${rc} = 0</msg>
<msg timestamp="20221007 01:11:01.886" level="INFO">${output} = </msg>
<status status="PASS" starttime="20221007 01:10:56.508" endtime="20221007 01:11:01.886"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221007 01:11:01.887" level="INFO"/>
<status status="PASS" starttime="20221007 01:11:01.886" endtime="20221007 01:11:01.887"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221007 01:11:01.888" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221007 01:11:01.887" endtime="20221007 01:11:01.888"/>
</kw>
<status status="PASS" starttime="20221007 01:10:56.503" endtime="20221007 01:11:01.888"/>
</kw>
<msg timestamp="20221007 01:11:01.888" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221007 01:10:56.503" endtime="20221007 01:11:01.889"/>
</kw>
<msg timestamp="20221007 01:11:01.889" level="INFO">${output} = </msg>
<status status="PASS" starttime="20221007 01:10:56.503" endtime="20221007 01:11:01.889"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20221007 01:11:01.889" endtime="20221007 01:11:01.889"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221007 01:10:51.486" endtime="20221007 01:11:01.890"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20221007 01:10:51.441" endtime="20221007 01:11:01.891"/>
</suite>
<suite id="s1-s6" name="Readdata" source="/opt/hadoop/smoketest/topology/readdata.robot">
<test id="s1-s6-t1" name="Read data from previously created key" line="27">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20221007 01:11:06.498" level="INFO">${random} = 81603</msg>
<status status="PASS" starttime="20221007 01:11:06.497" endtime="20221007 01:11:06.498"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221007 01:11:06.503" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-81603 2&gt;&amp;1'.</msg>
<msg timestamp="20221007 01:11:10.570" level="INFO">${rc} = 0</msg>
<msg timestamp="20221007 01:11:10.570" level="INFO">${output} = </msg>
<status status="PASS" starttime="20221007 01:11:06.499" endtime="20221007 01:11:10.570"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221007 01:11:10.571" level="INFO"/>
<status status="PASS" starttime="20221007 01:11:10.570" endtime="20221007 01:11:10.571"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221007 01:11:10.572" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221007 01:11:10.571" endtime="20221007 01:11:10.572"/>
</kw>
<status status="PASS" starttime="20221007 01:11:06.499" endtime="20221007 01:11:10.572"/>
</kw>
<msg timestamp="20221007 01:11:10.572" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221007 01:11:06.499" endtime="20221007 01:11:10.574"/>
</kw>
<msg timestamp="20221007 01:11:10.574" level="INFO">${output} = </msg>
<status status="PASS" starttime="20221007 01:11:06.498" endtime="20221007 01:11:10.574"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20221007 01:11:10.574" endtime="20221007 01:11:10.574"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221007 01:11:06.493" endtime="20221007 01:11:10.575"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20221007 01:11:06.447" endtime="20221007 01:11:10.576"/>
</suite>
<suite id="s1-s7" name="Om-Prepare" source="/opt/hadoop/smoketest/omha/om-prepare.robot">
<kw name="Create Specific OM data for prepare" type="SETUP">
<kw name="Freon OCKG" library="freon">
<arg>prefix=om-prepare</arg>
<arg>n=100</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221007 01:06:08.531" level="INFO">Running command 'ozone freon ockg --om-service-id=omservice -t 1 -n100 -p om-prepare  2&gt;&amp;1'.</msg>
<msg timestamp="20221007 01:06:25.795" level="INFO">${rc} = 0</msg>
<msg timestamp="20221007 01:06:25.795" level="INFO">${output} = 2022-10-07 01:06:09,963 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-07 01:06:10,091 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221007 01:06:08.527" endtime="20221007 01:06:25.795"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221007 01:06:25.796" level="INFO">2022-10-07 01:06:09,963 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-07 01:06:10,091 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-10-07 01:06:10,091 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-10-07 01:06:10,282 [main] INFO freon.BaseFreonGenerator: Executing test with prefix om-prepare and number-of-tests 100
2022-10-07 01:06:10,367 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-10-07 01:06:11,070 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2022-10-07 01:06:11,232 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false 
2022-10-07 01:06:11,379 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-10-07 01:06:12,301 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-10-07 01:06:12,380 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-10-07 01:06:12,559 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-10-07 01:06:13,381 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-10-07 01:06:14,384 [Thread-3] INFO freon.ProgressBar: Progress: 2.00 % (2 out of 100)
2022-10-07 01:06:15,389 [Thread-3] INFO freon.ProgressBar: Progress: 8.00 % (8 out of 100)
2022-10-07 01:06:16,389 [Thread-3] INFO freon.ProgressBar: Progress: 16.00 % (16 out of 100)
2022-10-07 01:06:17,390 [Thread-3] INFO freon.ProgressBar: Progress: 24.00 % (24 out of 100)
2022-10-07 01:06:18,396 [Thread-3] INFO freon.ProgressBar: Progress: 31.00 % (31 out of 100)
2022-10-07 01:06:19,397 [Thread-3] INFO freon.ProgressBar: Progress: 41.00 % (41 out of 100)
2022-10-07 01:06:20,398 [Thread-3] INFO freon.ProgressBar: Progress: 50.00 % (50 out of 100)
2022-10-07 01:06:21,398 [Thread-3] INFO freon.ProgressBar: Progress: 61.00 % (61 out of 100)
2022-10-07 01:06:22,398 [Thread-3] INFO freon.ProgressBar: Progress: 71.00 % (71 out of 100)
2022-10-07 01:06:23,399 [Thread-3] INFO freon.ProgressBar: Progress: 83.00 % (83 out of 100)
2022-10-07 01:06:24,399 [Thread-3] INFO freon.ProgressBar: Progress: 93.00 % (93 out of 100)
2022-10-07 01:06:25,400 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2022-10-07 01:06:25,448 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=100, min=63.852766, max=2459.831769, mean=132.4223601160679, stddev=226.3867120901178, median=100.305232, p75=122.721254, p95=174.680607, p98=323.49434, p99=355.964337, p999=2459.831769, mean_rate=7.092352507238851, m1=3.47973351222406, m5=3.0991712770702953, m15=3.0332409119706196, rate_unit=events/second, duration_unit=milliseconds
2022-10-07 01:06:25,448 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 15
2022-10-07 01:06:25,448 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-10-07 01:06:25,448 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20221007 01:06:25.795" endtime="20221007 01:06:25.796"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221007 01:06:25.797" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221007 01:06:25.796" endtime="20221007 01:06:25.797"/>
</kw>
<status status="PASS" starttime="20221007 01:06:08.527" endtime="20221007 01:06:25.797"/>
</kw>
<msg timestamp="20221007 01:06:25.797" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221007 01:06:08.527" endtime="20221007 01:06:25.798"/>
</kw>
<msg timestamp="20221007 01:06:25.799" level="INFO">${result} = 2022-10-07 01:06:09,963 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-07 01:06:10,091 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221007 01:06:08.526" endtime="20221007 01:06:25.799"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221007 01:06:25.799" endtime="20221007 01:06:25.799"/>
</kw>
<status status="PASS" starttime="20221007 01:06:08.525" endtime="20221007 01:06:25.799"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20221007 01:06:25.800" level="INFO">${random} = 09145</msg>
<status status="PASS" starttime="20221007 01:06:25.800" endtime="20221007 01:06:25.800"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20221007 01:06:25.801" level="INFO">${volume_name} = 09145-volume-for-prepare</msg>
<status status="PASS" starttime="20221007 01:06:25.800" endtime="20221007 01:06:25.801"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${bucket_name}</arg>
<arg>${random}-bucket-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20221007 01:06:25.803" level="INFO">${bucket_name} = 09145-bucket-for-prepare</msg>
<status status="PASS" starttime="20221007 01:06:25.802" endtime="20221007 01:06:25.803"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create /${volume_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221007 01:06:25.807" level="INFO">Running command 'ozone sh volume create /09145-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20221007 01:06:28.134" level="INFO">${rc} = 0</msg>
<msg timestamp="20221007 01:06:28.135" level="INFO">${output} = </msg>
<status status="PASS" starttime="20221007 01:06:25.804" endtime="20221007 01:06:28.135"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221007 01:06:28.136" level="INFO"/>
<status status="PASS" starttime="20221007 01:06:28.135" endtime="20221007 01:06:28.136"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221007 01:06:28.136" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221007 01:06:28.136" endtime="20221007 01:06:28.137"/>
</kw>
<status status="PASS" starttime="20221007 01:06:25.804" endtime="20221007 01:06:28.137"/>
</kw>
<msg timestamp="20221007 01:06:28.137" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221007 01:06:25.804" endtime="20221007 01:06:28.137"/>
</kw>
<status status="PASS" starttime="20221007 01:06:25.803" endtime="20221007 01:06:28.138"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume_name}/${bucket_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221007 01:06:28.141" level="INFO">Running command 'ozone sh bucket create /09145-volume-for-prepare/09145-bucket-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20221007 01:06:30.514" level="INFO">${rc} = 0</msg>
<msg timestamp="20221007 01:06:30.514" level="INFO">${output} = </msg>
<status status="PASS" starttime="20221007 01:06:28.139" endtime="20221007 01:06:30.514"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221007 01:06:30.515" level="INFO"/>
<status status="PASS" starttime="20221007 01:06:30.514" endtime="20221007 01:06:30.515"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221007 01:06:30.515" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221007 01:06:30.515" endtime="20221007 01:06:30.516"/>
</kw>
<status status="PASS" starttime="20221007 01:06:28.138" endtime="20221007 01:06:30.516"/>
</kw>
<msg timestamp="20221007 01:06:30.516" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221007 01:06:28.138" endtime="20221007 01:06:30.516"/>
</kw>
<status status="PASS" starttime="20221007 01:06:28.138" endtime="20221007 01:06:30.516"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221007 01:06:30.520" level="INFO">Running command 'ozone sh key put /09145-volume-for-prepare/09145-bucket-for-prepare/prepare-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20221007 01:06:34.995" level="INFO">${rc} = 0</msg>
<msg timestamp="20221007 01:06:34.995" level="INFO">${output} = </msg>
<status status="PASS" starttime="20221007 01:06:30.518" endtime="20221007 01:06:34.995"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221007 01:06:34.996" level="INFO"/>
<status status="PASS" starttime="20221007 01:06:34.996" endtime="20221007 01:06:34.996"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221007 01:06:34.997" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221007 01:06:34.997" endtime="20221007 01:06:34.997"/>
</kw>
<status status="PASS" starttime="20221007 01:06:30.517" endtime="20221007 01:06:34.997"/>
</kw>
<msg timestamp="20221007 01:06:34.997" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221007 01:06:30.517" endtime="20221007 01:06:34.998"/>
</kw>
<status status="PASS" starttime="20221007 01:06:30.517" endtime="20221007 01:06:34.998"/>
</kw>
<status status="PASS" starttime="20221007 01:06:08.525" endtime="20221007 01:06:34.998"/>
</kw>
<test id="s1-s7-t1" name="Prepare Ozone Manager" line="39">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221007 01:06:35.000" endtime="20221007 01:06:35.000"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om prepare -id=omservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221007 01:06:35.004" level="INFO">Running command 'ozone admin om prepare -id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20221007 01:06:42.414" level="INFO">${rc} = 0</msg>
<msg timestamp="20221007 01:06:42.414" level="INFO">${output} = Ozone Manager Prepare Request successfully returned with Transaction Id : [413].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], C...</msg>
<status status="PASS" starttime="20221007 01:06:35.002" endtime="20221007 01:06:42.414"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221007 01:06:42.415" level="INFO">Ozone Manager Prepare Request successfully returned with Transaction Id : [413].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [413]
OM : [om3], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [413]
OM : [om2], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [413]

OM Preparation successful! 
All OMs are prepared
No new write requests will be allowed until preparation is cancelled or upgrade/downgrade is done.</msg>
<status status="PASS" starttime="20221007 01:06:42.415" endtime="20221007 01:06:42.416"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221007 01:06:42.416" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221007 01:06:42.416" endtime="20221007 01:06:42.416"/>
</kw>
<status status="PASS" starttime="20221007 01:06:35.001" endtime="20221007 01:06:42.417"/>
</kw>
<msg timestamp="20221007 01:06:42.417" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221007 01:06:35.001" endtime="20221007 01:06:42.417"/>
</kw>
<msg timestamp="20221007 01:06:42.417" level="INFO">${result} = Ozone Manager Prepare Request successfully returned with Transaction Id : [413].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], C...</msg>
<status status="PASS" starttime="20221007 01:06:35.000" endtime="20221007 01:06:42.417"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221007 01:06:42.418" endtime="20221007 01:06:42.418"/>
</kw>
<status status="PASS" starttime="20221007 01:06:42.418" endtime="20221007 01:06:42.418"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221007 01:06:34.999" endtime="20221007 01:06:42.418"/>
</test>
<test id="s1-s7-t2" name="Checks if the expected data is present in OM" line="43">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221007 01:06:42.420" endtime="20221007 01:06:42.421"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221007 01:06:42.424" level="INFO">Running command 'ozone sh key info /09145-volume-for-prepare/09145-bucket-for-prepare/prepare-key 2&gt;&amp;1'.</msg>
<msg timestamp="20221007 01:06:45.123" level="INFO">${rc} = 0</msg>
<msg timestamp="20221007 01:06:45.123" level="INFO">${output} = {
  "volumeName" : "09145-volume-for-prepare",
  "bucketName" : "09145-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17539,
  "creationTime" : "2022-10-07T01:06:32.821Z",
  "modificati...</msg>
<status status="PASS" starttime="20221007 01:06:42.422" endtime="20221007 01:06:45.123"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221007 01:06:45.125" level="INFO">{
  "volumeName" : "09145-volume-for-prepare",
  "bucketName" : "09145-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17539,
  "creationTime" : "2022-10-07T01:06:32.821Z",
  "modificationTime" : "2022-10-07T01:06:34.614Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "ozoneKeyLocations" : [ {
    "containerID" : 2,
    "localID" : 109611004723200101,
    "length" : 17539,
    "offset" : 0,
    "keyOffset" : 0
  } ],
  "metadata" : { }
}</msg>
<status status="PASS" starttime="20221007 01:06:45.124" endtime="20221007 01:06:45.125"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221007 01:06:45.125" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221007 01:06:45.125" endtime="20221007 01:06:45.125"/>
</kw>
<status status="PASS" starttime="20221007 01:06:42.422" endtime="20221007 01:06:45.126"/>
</kw>
<msg timestamp="20221007 01:06:45.126" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221007 01:06:42.421" endtime="20221007 01:06:45.126"/>
</kw>
<msg timestamp="20221007 01:06:45.126" level="INFO">${result} = {
  "volumeName" : "09145-volume-for-prepare",
  "bucketName" : "09145-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17539,
  "creationTime" : "2022-10-07T01:06:32.821Z",
  "modificati...</msg>
<status status="PASS" starttime="20221007 01:06:42.421" endtime="20221007 01:06:45.126"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"name\" : \"prepare-key\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221007 01:06:45.127" endtime="20221007 01:06:45.127"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221007 01:06:42.420" endtime="20221007 01:06:45.127"/>
</test>
<test id="s1-s7-t3" name="Test write operation fails" line="47">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221007 01:06:45.129" endtime="20221007 01:06:45.129"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key2 /opt/hadoop/NOTICE.txt</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221007 01:06:45.132" level="INFO">Running command 'ozone sh key put /09145-volume-for-prepare/09145-bucket-for-prepare/prepare-key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20221007 01:06:47.644" level="INFO">${rc} = 255</msg>
<msg timestamp="20221007 01:06:47.644" level="INFO">${output} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20221007 01:06:45.130" endtime="20221007 01:06:47.644"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221007 01:06:47.646" level="INFO">NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20221007 01:06:47.645" endtime="20221007 01:06:47.646"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221007 01:06:47.646" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221007 01:06:47.646" endtime="20221007 01:06:47.646"/>
</kw>
<msg timestamp="20221007 01:06:47.647" level="INFO">${result} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20221007 01:06:45.129" endtime="20221007 01:06:47.647"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM is in prepare mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221007 01:06:47.647" endtime="20221007 01:06:47.647"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key2</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221007 01:06:47.650" level="INFO">Running command 'ozone sh key info /09145-volume-for-prepare/09145-bucket-for-prepare/prepare-key2 2&gt;&amp;1'.</msg>
<msg timestamp="20221007 01:06:50.111" level="INFO">${rc} = 255</msg>
<msg timestamp="20221007 01:06:50.111" level="INFO">${output} = KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<status status="PASS" starttime="20221007 01:06:47.648" endtime="20221007 01:06:50.111"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221007 01:06:50.112" level="INFO">KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<status status="PASS" starttime="20221007 01:06:50.111" endtime="20221007 01:06:50.112"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221007 01:06:50.113" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221007 01:06:50.112" endtime="20221007 01:06:50.113"/>
</kw>
<status status="PASS" starttime="20221007 01:06:47.648" endtime="20221007 01:06:50.113"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221007 01:06:45.128" endtime="20221007 01:06:50.113"/>
</test>
<doc>Smoke test to test preparing OMs in an OM HA cluster.</doc>
<status status="PASS" starttime="20221007 01:06:08.472" endtime="20221007 01:06:50.115"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="122480"/>
</suite>
<statistics>
<total>
<stat pass="14" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="14" fail="0" skip="0" id="s1" name="ozone-om-prepare">ozone-om-prepare</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1" name="Om-Cancel-Prepare">ozone-om-prepare.Om-Cancel-Prepare</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="Om-Prepare">ozone-om-prepare.Om-Prepare</stat>
<stat pass="2" fail="0" skip="0" id="s1-s3" name="Om-Prepared">ozone-om-prepare.Om-Prepared</stat>
<stat pass="2" fail="0" skip="0" id="s1-s4" name="Om-Prepared">ozone-om-prepare.Om-Prepared</stat>
<stat pass="1" fail="0" skip="0" id="s1-s5" name="Loaddata">ozone-om-prepare.Loaddata</stat>
<stat pass="1" fail="0" skip="0" id="s1-s6" name="Readdata">ozone-om-prepare.Readdata</stat>
<stat pass="3" fail="0" skip="0" id="s1-s7" name="Om-Prepare">ozone-om-prepare.Om-Prepare</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
