<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 5.0.1 (Python 3.8.10 on linux)" generated="20221007 01:19:30.869" rpa="false" schemaversion="3">
<suite id="s1" name="ozones3-haproxy" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-t1" name="Check webui static resources" line="29">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221007 01:19:01.733" endtime="20221007 01:19:01.733"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -s -I http://${SCM}:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221007 01:19:01.738" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20221007 01:19:01.808" level="INFO">${rc} = 0</msg>
<msg timestamp="20221007 01:19:01.808" level="INFO">${output} = HTTP/1.1 200 OK
Date: Fri, 07 Oct 2022 01:19:01 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Fri, 07 Oct 2022 00:51:54 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20221007 01:19:01.735" endtime="20221007 01:19:01.808"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221007 01:19:01.809" level="INFO">HTTP/1.1 200 OK
Date: Fri, 07 Oct 2022 01:19:01 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Fri, 07 Oct 2022 00:51:54 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20221007 01:19:01.809" endtime="20221007 01:19:01.809"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221007 01:19:01.810" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221007 01:19:01.810" endtime="20221007 01:19:01.810"/>
</kw>
<status status="PASS" starttime="20221007 01:19:01.734" endtime="20221007 01:19:01.810"/>
</kw>
<msg timestamp="20221007 01:19:01.810" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221007 01:19:01.734" endtime="20221007 01:19:01.812"/>
</kw>
<msg timestamp="20221007 01:19:01.812" level="INFO">${result} = HTTP/1.1 200 OK
Date: Fri, 07 Oct 2022 01:19:01 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Fri, 07 Oct 2022 00:51:54 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20221007 01:19:01.733" endtime="20221007 01:19:01.812"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221007 01:19:01.812" endtime="20221007 01:19:01.812"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221007 01:19:01.732" endtime="20221007 01:19:01.813"/>
</test>
<test id="s1-t2" name="Basic Freon smoketest" line="34">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221007 01:19:01.815" endtime="20221007 01:19:01.815"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>10</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20221007 01:19:01.816" level="INFO">${random} = yxA6Fg4QWz</msg>
<status status="PASS" starttime="20221007 01:19:01.815" endtime="20221007 01:19:01.816"/>
</kw>
<kw name="Freon OCKG" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221007 01:19:01.821" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p yxA6Fg4QWz  2&gt;&amp;1'.</msg>
<msg timestamp="20221007 01:19:09.909" level="INFO">${rc} = 0</msg>
<msg timestamp="20221007 01:19:09.909" level="INFO">${output} = 2022-10-07 01:19:03,172 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-07 01:19:03,294 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221007 01:19:01.818" endtime="20221007 01:19:09.909"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221007 01:19:09.910" level="INFO">2022-10-07 01:19:03,172 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-07 01:19:03,294 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-10-07 01:19:03,294 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-10-07 01:19:03,449 [main] INFO freon.BaseFreonGenerator: Executing test with prefix yxA6Fg4QWz and number-of-tests 1
2022-10-07 01:19:03,524 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-07 01:19:04,525 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-07 01:19:05,525 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-07 01:19:06,525 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-07 01:19:06,566 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2022-10-07 01:19:06,700 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false 
2022-10-07 01:19:07,391 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-10-07 01:19:07,526 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-07 01:19:07,628 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-10-07 01:19:08,527 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-07 01:19:09,528 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-10-07 01:19:09,561 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=1953.748123, max=1953.748123, mean=1953.748123, stddev=0.0, median=1953.748123, p75=1953.748123, p95=1953.748123, p98=1953.748123, p99=1953.748123, p999=1953.748123, mean_rate=0.3565436549697957, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-10-07 01:19:09,561 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 6
2022-10-07 01:19:09,562 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-10-07 01:19:09,562 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20221007 01:19:09.909" endtime="20221007 01:19:09.910"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221007 01:19:09.911" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221007 01:19:09.911" endtime="20221007 01:19:09.911"/>
</kw>
<status status="PASS" starttime="20221007 01:19:01.818" endtime="20221007 01:19:09.912"/>
</kw>
<msg timestamp="20221007 01:19:09.912" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221007 01:19:01.818" endtime="20221007 01:19:09.912"/>
</kw>
<msg timestamp="20221007 01:19:09.912" level="INFO">${result} = 2022-10-07 01:19:03,172 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-07 01:19:03,294 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221007 01:19:01.817" endtime="20221007 01:19:09.912"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221007 01:19:09.912" endtime="20221007 01:19:09.913"/>
</kw>
<status status="PASS" starttime="20221007 01:19:01.816" endtime="20221007 01:19:09.913"/>
</kw>
<kw name="Freon OCKV" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221007 01:19:09.918" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p yxA6Fg4QWz  2&gt;&amp;1'.</msg>
<msg timestamp="20221007 01:19:15.072" level="INFO">${rc} = 0</msg>
<msg timestamp="20221007 01:19:15.072" level="INFO">${output} = 2022-10-07 01:19:11,295 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-07 01:19:11,429 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221007 01:19:09.916" endtime="20221007 01:19:15.072"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221007 01:19:15.073" level="INFO">2022-10-07 01:19:11,295 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-07 01:19:11,429 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-10-07 01:19:11,429 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-10-07 01:19:11,609 [main] INFO freon.BaseFreonGenerator: Executing test with prefix yxA6Fg4QWz and number-of-tests 1
2022-10-07 01:19:11,673 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-07 01:19:12,675 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-07 01:19:12,839 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-10-07 01:19:13,679 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-07 01:19:14,680 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-10-07 01:19:14,711 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=55.619517, max=55.619517, mean=55.619517, stddev=0.0, median=55.619517, p75=55.619517, p95=55.619517, p98=55.619517, p99=55.619517, p999=55.619517, mean_rate=0.9414754973837178, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-10-07 01:19:14,711 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2022-10-07 01:19:14,711 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-10-07 01:19:14,711 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20221007 01:19:15.072" endtime="20221007 01:19:15.073"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221007 01:19:15.074" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221007 01:19:15.073" endtime="20221007 01:19:15.074"/>
</kw>
<status status="PASS" starttime="20221007 01:19:09.915" endtime="20221007 01:19:15.074"/>
</kw>
<msg timestamp="20221007 01:19:15.074" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221007 01:19:09.915" endtime="20221007 01:19:15.075"/>
</kw>
<msg timestamp="20221007 01:19:15.075" level="INFO">${result} = 2022-10-07 01:19:11,295 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-07 01:19:11,429 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221007 01:19:09.914" endtime="20221007 01:19:15.075"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221007 01:19:15.075" endtime="20221007 01:19:15.076"/>
</kw>
<status status="PASS" starttime="20221007 01:19:09.913" endtime="20221007 01:19:15.076"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221007 01:19:01.814" endtime="20221007 01:19:15.076"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20221007 01:19:01.676" endtime="20221007 01:19:15.078"/>
</suite>
<statistics>
<total>
<stat pass="2" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="2" fail="0" skip="0" id="s1" name="ozones3-haproxy">ozones3-haproxy</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
