<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 5.0.1 (Python 3.8.10 on linux)" generated="20221007 01:17:55.435" rpa="false" schemaversion="3">
<suite id="s1" name="ozone-topology">
<suite id="s1-s1" name="Cli" source="/opt/hadoop/smoketest/topology/cli.robot">
<test id="s1-s1-t1" name="Run printTopology" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221007 01:13:16.999" level="INFO">Running command 'ozone admin printTopology 2&gt;&amp;1'.</msg>
<msg timestamp="20221007 01:13:20.163" level="INFO">${rc} = 0</msg>
<msg timestamp="20221007 01:13:20.163" level="INFO">${output} = State = HEALTHY
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.4(ozone-topolog...</msg>
<status status="PASS" starttime="20221007 01:13:16.995" endtime="20221007 01:13:20.163"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221007 01:13:20.164" level="INFO">State = HEALTHY
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2</msg>
<status status="PASS" starttime="20221007 01:13:20.163" endtime="20221007 01:13:20.164"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221007 01:13:20.165" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221007 01:13:20.164" endtime="20221007 01:13:20.165"/>
</kw>
<status status="PASS" starttime="20221007 01:13:16.994" endtime="20221007 01:13:20.165"/>
</kw>
<msg timestamp="20221007 01:13:20.165" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221007 01:13:16.994" endtime="20221007 01:13:20.166"/>
</kw>
<msg timestamp="20221007 01:13:20.167" level="INFO">${output} = State = HEALTHY
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.4(ozone-topolog...</msg>
<status status="PASS" starttime="20221007 01:13:16.993" endtime="20221007 01:13:20.167"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
<arg>IN_SERVICE</arg>
<arg>/rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221007 01:13:20.167" endtime="20221007 01:13:20.167"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221007 01:13:16.992" endtime="20221007 01:13:20.168"/>
</test>
<test id="s1-s1-t2" name="Run printTopology -o" line="30">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology -o</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221007 01:13:20.173" level="INFO">Running command 'ozone admin printTopology -o 2&gt;&amp;1'.</msg>
<msg timestamp="20221007 01:13:24.187" level="INFO">${rc} = 0</msg>
<msg timestamp="20221007 01:13:24.187" level="INFO">${output} = State = HEALTHY
Location: /rack1
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net) IN_SERVICE
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net) IN_SERVICE
 10.5.0.6(ozone-topology_data...</msg>
<status status="PASS" starttime="20221007 01:13:20.171" endtime="20221007 01:13:24.188"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221007 01:13:24.189" level="INFO">State = HEALTHY
Location: /rack1
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net) IN_SERVICE
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net) IN_SERVICE
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net) IN_SERVICE
Location: /rack2
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net) IN_SERVICE
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net) IN_SERVICE
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net) IN_SERVICE</msg>
<status status="PASS" starttime="20221007 01:13:24.188" endtime="20221007 01:13:24.189"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221007 01:13:24.189" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221007 01:13:24.189" endtime="20221007 01:13:24.190"/>
</kw>
<status status="PASS" starttime="20221007 01:13:20.170" endtime="20221007 01:13:24.190"/>
</kw>
<msg timestamp="20221007 01:13:24.190" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221007 01:13:20.170" endtime="20221007 01:13:24.190"/>
</kw>
<msg timestamp="20221007 01:13:24.191" level="INFO">${output} = State = HEALTHY
Location: /rack1
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net) IN_SERVICE
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net) IN_SERVICE
 10.5.0.6(ozone-topology_data...</msg>
<status status="PASS" starttime="20221007 01:13:20.169" endtime="20221007 01:13:24.191"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Location: /rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221007 01:13:24.191" endtime="20221007 01:13:24.191"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net) IN_SERVICE</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221007 01:13:24.191" endtime="20221007 01:13:24.192"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221007 01:13:20.169" endtime="20221007 01:13:24.192"/>
</test>
<test id="s1-s1-t3" name="Run printTopology --operational-state IN_SERVICE" line="34">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology --operational-state IN_SERVICE</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221007 01:13:24.197" level="INFO">Running command 'ozone admin printTopology --operational-state IN_SERVICE 2&gt;&amp;1'.</msg>
<msg timestamp="20221007 01:13:27.611" level="INFO">${rc} = 0</msg>
<msg timestamp="20221007 01:13:27.611" level="INFO">${output} = State = HEALTHY
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.4(ozone-topolog...</msg>
<status status="PASS" starttime="20221007 01:13:24.195" endtime="20221007 01:13:27.612"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221007 01:13:27.613" level="INFO">State = HEALTHY
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2</msg>
<status status="PASS" starttime="20221007 01:13:27.612" endtime="20221007 01:13:27.613"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221007 01:13:27.613" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221007 01:13:27.613" endtime="20221007 01:13:27.613"/>
</kw>
<status status="PASS" starttime="20221007 01:13:24.195" endtime="20221007 01:13:27.614"/>
</kw>
<msg timestamp="20221007 01:13:27.614" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221007 01:13:24.194" endtime="20221007 01:13:27.614"/>
</kw>
<msg timestamp="20221007 01:13:27.614" level="INFO">${output} = State = HEALTHY
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.4(ozone-topolog...</msg>
<status status="PASS" starttime="20221007 01:13:24.194" endtime="20221007 01:13:27.614"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
<arg>IN_SERVICE</arg>
<arg>/rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221007 01:13:27.615" endtime="20221007 01:13:27.615"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221007 01:13:24.193" endtime="20221007 01:13:27.615"/>
</test>
<test id="s1-s1-t4" name="Run printTopology --node-state HEALTHY" line="37">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology --node-state HEALTHY</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221007 01:13:27.621" level="INFO">Running command 'ozone admin printTopology --node-state HEALTHY 2&gt;&amp;1'.</msg>
<msg timestamp="20221007 01:13:30.869" level="INFO">${rc} = 0</msg>
<msg timestamp="20221007 01:13:30.869" level="INFO">${output} = State = HEALTHY
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.4(ozone-topolog...</msg>
<status status="PASS" starttime="20221007 01:13:27.618" endtime="20221007 01:13:30.869"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221007 01:13:30.870" level="INFO">State = HEALTHY
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2</msg>
<status status="PASS" starttime="20221007 01:13:30.870" endtime="20221007 01:13:30.870"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221007 01:13:30.871" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221007 01:13:30.871" endtime="20221007 01:13:30.871"/>
</kw>
<status status="PASS" starttime="20221007 01:13:27.618" endtime="20221007 01:13:30.871"/>
</kw>
<msg timestamp="20221007 01:13:30.871" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221007 01:13:27.618" endtime="20221007 01:13:30.872"/>
</kw>
<msg timestamp="20221007 01:13:30.872" level="INFO">${output} = State = HEALTHY
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.4(ozone-topolog...</msg>
<status status="PASS" starttime="20221007 01:13:27.617" endtime="20221007 01:13:30.872"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
<arg>IN_SERVICE</arg>
<arg>/rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221007 01:13:30.872" endtime="20221007 01:13:30.873"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221007 01:13:27.616" endtime="20221007 01:13:30.873"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20221007 01:13:16.947" endtime="20221007 01:13:30.875"/>
</suite>
<suite id="s1-s2" name="Recon" source="/opt/hadoop/smoketest/recon">
<suite id="s1-s2-s1" name="Recon-Api" source="/opt/hadoop/smoketest/recon/recon-api.robot">
<test id="s1-s2-s1-t1" name="Check if Recon picks up OM data" line="61">
<kw name="Freon OCKG" library="freon" type="SETUP">
<arg>n=10</arg>
<arg>args=-s 1025 -v recon -b api</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221007 01:13:35.925" level="INFO">Running command 'ozone freon ockg  -t 1 -n10 -p ockg -s 1025 -v recon -b api 2&gt;&amp;1'.</msg>
<msg timestamp="20221007 01:13:45.034" level="INFO">${rc} = 0</msg>
<msg timestamp="20221007 01:13:45.034" level="INFO">${output} = 2022-10-07 01:13:37,791 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-07 01:13:37,939 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221007 01:13:35.922" endtime="20221007 01:13:45.034"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221007 01:13:45.035" level="INFO">2022-10-07 01:13:37,791 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-07 01:13:37,939 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-10-07 01:13:37,939 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-10-07 01:13:38,086 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockg and number-of-tests 10
2022-10-07 01:13:38,152 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2022-10-07 01:13:39,155 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2022-10-07 01:13:39,317 [main] INFO rpc.RpcClient: Creating Volume: recon, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2022-10-07 01:13:39,363 [main] INFO rpc.RpcClient: Creating Bucket: recon/api, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false 
2022-10-07 01:13:40,009 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-10-07 01:13:40,155 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2022-10-07 01:13:40,323 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-10-07 01:13:41,157 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2022-10-07 01:13:42,158 [Thread-5] INFO freon.ProgressBar: Progress: 20.00 % (2 out of 10)
2022-10-07 01:13:43,160 [Thread-5] INFO freon.ProgressBar: Progress: 50.00 % (5 out of 10)
2022-10-07 01:13:44,160 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (10 out of 10)
2022-10-07 01:13:44,653 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=10, min=104.037891, max=2134.268413, mean=424.7903170228635, stddev=612.2274227129932, median=131.213386, p75=305.917863, p95=2134.268413, p98=2134.268413, p99=2134.268413, p999=2134.268413, mean_rate=1.9017186022321264, m1=2.0, m5=2.0, m15=2.0, rate_unit=events/second, duration_unit=milliseconds
2022-10-07 01:13:44,653 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 7
2022-10-07 01:13:44,653 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-10-07 01:13:44,653 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 10</msg>
<status status="PASS" starttime="20221007 01:13:45.034" endtime="20221007 01:13:45.035"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221007 01:13:45.036" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221007 01:13:45.035" endtime="20221007 01:13:45.036"/>
</kw>
<status status="PASS" starttime="20221007 01:13:35.921" endtime="20221007 01:13:45.036"/>
</kw>
<msg timestamp="20221007 01:13:45.037" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221007 01:13:35.921" endtime="20221007 01:13:45.038"/>
</kw>
<msg timestamp="20221007 01:13:45.038" level="INFO">${result} = 2022-10-07 01:13:37,791 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-07 01:13:37,939 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221007 01:13:35.920" endtime="20221007 01:13:45.038"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221007 01:13:45.038" endtime="20221007 01:13:45.039"/>
</kw>
<status status="PASS" starttime="20221007 01:13:35.919" endtime="20221007 01:13:45.039"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Check if Recon picks up container from OM</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221007 01:13:45.040" endtime="20221007 01:13:45.040"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221007 01:13:45.044" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20221007 01:13:45.283" level="INFO">${rc} = 0</msg>
<msg timestamp="20221007 01:13:45.283" level="INFO">${output} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221007 01:13:45.042" endtime="20221007 01:13:45.283"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221007 01:13:45.284" level="INFO">{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221007 01:13:45.283" endtime="20221007 01:13:45.284"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221007 01:13:45.285" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221007 01:13:45.285" endtime="20221007 01:13:45.285"/>
</kw>
<status status="PASS" starttime="20221007 01:13:45.041" endtime="20221007 01:13:45.286"/>
</kw>
<msg timestamp="20221007 01:13:45.286" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221007 01:13:45.041" endtime="20221007 01:13:45.286"/>
</kw>
<msg timestamp="20221007 01:13:45.287" level="INFO">${result} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221007 01:13:45.041" endtime="20221007 01:13:45.287"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221007 01:13:45.287" endtime="20221007 01:13:45.288"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221007 01:13:45.293" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20221007 01:13:45.328" level="INFO">${rc} = 0</msg>
<msg timestamp="20221007 01:13:45.328" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221007 01:13:45.290" endtime="20221007 01:13:45.328"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221007 01:13:45.329" level="INFO">[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221007 01:13:45.329" endtime="20221007 01:13:45.329"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221007 01:13:45.330" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221007 01:13:45.330" endtime="20221007 01:13:45.330"/>
</kw>
<status status="PASS" starttime="20221007 01:13:45.289" endtime="20221007 01:13:45.330"/>
</kw>
<msg timestamp="20221007 01:13:45.331" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221007 01:13:45.288" endtime="20221007 01:13:45.331"/>
</kw>
<msg timestamp="20221007 01:13:45.331" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221007 01:13:45.288" endtime="20221007 01:13:45.331"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20221007 01:13:45.332" level="FAIL">'[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20221007 01:13:45.332" endtime="20221007 01:13:45.333"/>
</kw>
<status status="FAIL" starttime="20221007 01:13:45.039" endtime="20221007 01:13:45.333"/>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221007 01:13:55.335" endtime="20221007 01:13:55.335"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221007 01:13:55.340" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20221007 01:13:55.357" level="INFO">${rc} = 0</msg>
<msg timestamp="20221007 01:13:55.357" level="INFO">${output} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221007 01:13:55.336" endtime="20221007 01:13:55.358"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221007 01:13:55.359" level="INFO">{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221007 01:13:55.358" endtime="20221007 01:13:55.359"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221007 01:13:55.360" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221007 01:13:55.359" endtime="20221007 01:13:55.360"/>
</kw>
<status status="PASS" starttime="20221007 01:13:55.336" endtime="20221007 01:13:55.360"/>
</kw>
<msg timestamp="20221007 01:13:55.360" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221007 01:13:55.336" endtime="20221007 01:13:55.361"/>
</kw>
<msg timestamp="20221007 01:13:55.361" level="INFO">${result} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221007 01:13:55.335" endtime="20221007 01:13:55.361"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221007 01:13:55.361" endtime="20221007 01:13:55.362"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221007 01:13:55.365" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20221007 01:13:55.387" level="INFO">${rc} = 0</msg>
<msg timestamp="20221007 01:13:55.387" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221007 01:13:55.363" endtime="20221007 01:13:55.387"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221007 01:13:55.388" level="INFO">[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221007 01:13:55.387" endtime="20221007 01:13:55.388"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221007 01:13:55.389" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221007 01:13:55.388" endtime="20221007 01:13:55.389"/>
</kw>
<status status="PASS" starttime="20221007 01:13:55.363" endtime="20221007 01:13:55.389"/>
</kw>
<msg timestamp="20221007 01:13:55.390" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221007 01:13:55.362" endtime="20221007 01:13:55.390"/>
</kw>
<msg timestamp="20221007 01:13:55.390" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221007 01:13:55.362" endtime="20221007 01:13:55.390"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20221007 01:13:55.391" level="FAIL">'[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20221007 01:13:55.390" endtime="20221007 01:13:55.391"/>
</kw>
<status status="FAIL" starttime="20221007 01:13:55.334" endtime="20221007 01:13:55.392"/>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221007 01:14:05.393" endtime="20221007 01:14:05.393"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221007 01:14:05.397" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20221007 01:14:05.414" level="INFO">${rc} = 0</msg>
<msg timestamp="20221007 01:14:05.414" level="INFO">${output} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221007 01:14:05.395" endtime="20221007 01:14:05.414"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221007 01:14:05.415" level="INFO">{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221007 01:14:05.415" endtime="20221007 01:14:05.416"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221007 01:14:05.416" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221007 01:14:05.416" endtime="20221007 01:14:05.416"/>
</kw>
<status status="PASS" starttime="20221007 01:14:05.394" endtime="20221007 01:14:05.417"/>
</kw>
<msg timestamp="20221007 01:14:05.417" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221007 01:14:05.394" endtime="20221007 01:14:05.417"/>
</kw>
<msg timestamp="20221007 01:14:05.418" level="INFO">${result} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221007 01:14:05.394" endtime="20221007 01:14:05.418"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221007 01:14:05.418" endtime="20221007 01:14:05.418"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221007 01:14:05.422" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20221007 01:14:05.437" level="INFO">${rc} = 0</msg>
<msg timestamp="20221007 01:14:05.437" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221007 01:14:05.420" endtime="20221007 01:14:05.437"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221007 01:14:05.438" level="INFO">[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221007 01:14:05.437" endtime="20221007 01:14:05.438"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221007 01:14:05.439" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221007 01:14:05.438" endtime="20221007 01:14:05.439"/>
</kw>
<status status="PASS" starttime="20221007 01:14:05.419" endtime="20221007 01:14:05.439"/>
</kw>
<msg timestamp="20221007 01:14:05.439" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221007 01:14:05.419" endtime="20221007 01:14:05.440"/>
</kw>
<msg timestamp="20221007 01:14:05.440" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221007 01:14:05.418" endtime="20221007 01:14:05.440"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20221007 01:14:05.442" level="FAIL">'[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20221007 01:14:05.440" endtime="20221007 01:14:05.442"/>
</kw>
<status status="FAIL" starttime="20221007 01:14:05.392" endtime="20221007 01:14:05.442"/>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221007 01:14:15.444" endtime="20221007 01:14:15.444"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221007 01:14:15.448" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20221007 01:14:15.464" level="INFO">${rc} = 0</msg>
<msg timestamp="20221007 01:14:15.464" level="INFO">${output} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221007 01:14:15.445" endtime="20221007 01:14:15.464"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221007 01:14:15.465" level="INFO">{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221007 01:14:15.464" endtime="20221007 01:14:15.465"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221007 01:14:15.465" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221007 01:14:15.465" endtime="20221007 01:14:15.465"/>
</kw>
<status status="PASS" starttime="20221007 01:14:15.445" endtime="20221007 01:14:15.466"/>
</kw>
<msg timestamp="20221007 01:14:15.466" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221007 01:14:15.445" endtime="20221007 01:14:15.466"/>
</kw>
<msg timestamp="20221007 01:14:15.466" level="INFO">${result} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221007 01:14:15.444" endtime="20221007 01:14:15.467"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221007 01:14:15.467" endtime="20221007 01:14:15.467"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221007 01:14:15.470" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20221007 01:14:15.486" level="INFO">${rc} = 0</msg>
<msg timestamp="20221007 01:14:15.486" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221007 01:14:15.468" endtime="20221007 01:14:15.486"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221007 01:14:15.487" level="INFO">[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221007 01:14:15.486" endtime="20221007 01:14:15.487"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221007 01:14:15.488" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221007 01:14:15.487" endtime="20221007 01:14:15.488"/>
</kw>
<status status="PASS" starttime="20221007 01:14:15.468" endtime="20221007 01:14:15.488"/>
</kw>
<msg timestamp="20221007 01:14:15.488" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221007 01:14:15.468" endtime="20221007 01:14:15.489"/>
</kw>
<msg timestamp="20221007 01:14:15.489" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221007 01:14:15.467" endtime="20221007 01:14:15.489"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20221007 01:14:15.490" level="FAIL">'[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20221007 01:14:15.489" endtime="20221007 01:14:15.490"/>
</kw>
<status status="FAIL" starttime="20221007 01:14:15.443" endtime="20221007 01:14:15.491"/>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221007 01:14:25.492" endtime="20221007 01:14:25.492"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221007 01:14:25.496" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20221007 01:14:25.513" level="INFO">${rc} = 0</msg>
<msg timestamp="20221007 01:14:25.513" level="INFO">${output} = {"data":{"totalCount":4,"containers":[{"ContainerID":1,"NumberOfKeys":4},{"ContainerID":2,"NumberOfKeys":3},{"ContainerID":3,"NumberOfKeys":3},{"ContainerID":4,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221007 01:14:25.494" endtime="20221007 01:14:25.513"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221007 01:14:25.514" level="INFO">{"data":{"totalCount":4,"containers":[{"ContainerID":1,"NumberOfKeys":4},{"ContainerID":2,"NumberOfKeys":3},{"ContainerID":3,"NumberOfKeys":3},{"ContainerID":4,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221007 01:14:25.513" endtime="20221007 01:14:25.515"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221007 01:14:25.515" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221007 01:14:25.515" endtime="20221007 01:14:25.515"/>
</kw>
<status status="PASS" starttime="20221007 01:14:25.493" endtime="20221007 01:14:25.516"/>
</kw>
<msg timestamp="20221007 01:14:25.516" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221007 01:14:25.493" endtime="20221007 01:14:25.516"/>
</kw>
<msg timestamp="20221007 01:14:25.516" level="INFO">${result} = {"data":{"totalCount":4,"containers":[{"ContainerID":1,"NumberOfKeys":4},{"ContainerID":2,"NumberOfKeys":3},{"ContainerID":3,"NumberOfKeys":3},{"ContainerID":4,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221007 01:14:25.493" endtime="20221007 01:14:25.516"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221007 01:14:25.516" endtime="20221007 01:14:25.517"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221007 01:14:25.521" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20221007 01:14:25.536" level="INFO">${rc} = 0</msg>
<msg timestamp="20221007 01:14:25.536" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1},{"volume":"recon","bucket":"api","fileSize":2048,"count":10}]</msg>
<status status="PASS" starttime="20221007 01:14:25.518" endtime="20221007 01:14:25.536"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221007 01:14:25.537" level="INFO">[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1},{"volume":"recon","bucket":"api","fileSize":2048,"count":10}]</msg>
<status status="PASS" starttime="20221007 01:14:25.536" endtime="20221007 01:14:25.537"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221007 01:14:25.538" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221007 01:14:25.537" endtime="20221007 01:14:25.538"/>
</kw>
<status status="PASS" starttime="20221007 01:14:25.518" endtime="20221007 01:14:25.538"/>
</kw>
<msg timestamp="20221007 01:14:25.538" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221007 01:14:25.517" endtime="20221007 01:14:25.538"/>
</kw>
<msg timestamp="20221007 01:14:25.539" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1},{"volume":"recon","bucket":"api","fileSize":2048,"count":10}]</msg>
<status status="PASS" starttime="20221007 01:14:25.517" endtime="20221007 01:14:25.539"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221007 01:14:25.539" endtime="20221007 01:14:25.539"/>
</kw>
<status status="PASS" starttime="20221007 01:14:25.491" endtime="20221007 01:14:25.539"/>
</kw>
<status status="PASS" starttime="20221007 01:13:45.039" endtime="20221007 01:14:25.539"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221007 01:13:35.919" endtime="20221007 01:14:25.540"/>
</test>
<test id="s1-s2-s1-t2" name="Check if Recon picks up DN heartbeats" line="65">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/datanodes</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221007 01:14:25.545" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/datanodes 2&gt;&amp;1'.</msg>
<msg timestamp="20221007 01:14:25.624" level="INFO">${rc} = 0</msg>
<msg timestamp="20221007 01:14:25.625" level="INFO">${output} = {"totalCount":6,"datanodes":[{"uuid":"c70877f1-153a-49d7-a1a3-812f544257aa","hostname":"ozone-topology_datanode_5_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1665105...</msg>
<status status="PASS" starttime="20221007 01:14:25.543" endtime="20221007 01:14:25.625"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221007 01:14:25.631" level="INFO">{"totalCount":6,"datanodes":[{"uuid":"c70877f1-153a-49d7-a1a3-812f544257aa","hostname":"ozone-topology_datanode_5_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1665105253012,"storageReport":{"capacity":89297309696,"used":4096,"remaining":29825478656},"pipelines":[{"pipelineID":"509053bc-80c7-4a37-a58c-28268988421d","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net"},{"pipelineID":"f03918c7-82fe-4f53-a66f-30ab5d8bf5e9","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net"},{"pipelineID":"eab29a43-ac66-4d04-85d1-bff664770c7b","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net"}],"containers":2,"openContainers":3,"leaderCount":2,"version":"1.3.0-SNAPSHOT","setupTime":1665105106218,"revision":"4e364001ac752e8764d2b9c4d8b6880d3fb78135","buildDate":"2022-10-07T00:51Z","layoutVersion":4,"networkLocation":"/rack2"},{"uuid":"c49164b6-5741-4ad4-8558-9a583f47d1a5","hostname":"ozone-topology_datanode_1_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1665105252131,"storageReport":{"capacity":89297309696,"used":18432,"remaining":29798952960},"pipelines":[{"pipelineID":"853ce6cc-8e1e-4090-8a59-eb969f4e8f5d","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net"},{"pipelineID":"efe8cf82-0c1e-4787-81d4-47370f9a004f","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net"},{"pipelineID":"eab29a43-ac66-4d04-85d1-bff664770c7b","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net"}],"containers":2,"openContainers":2,"leaderCount":1,"version":"1.3.0-SNAPSHOT","setupTime":1665105105694,"revision":"4e364001ac752e8764d2b9c4d8b6880d3fb78135","buildDate":"2022-10-07T00:51Z","layoutVersion":4,"networkLocation":"/rack1"},{"uuid":"9521d6c7-f919-402b-98e3-cb57ebd4ecbe","hostname":"ozone-topology_datanode_2_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1665105253018,"storageReport":{"capacity":89297309696,"used":8196,"remaining":29726830592},"pipelines":[{"pipelineID":"509053bc-80c7-4a37-a58c-28268988421d","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net"},{"pipelineID":"17d880cb-80f7-4e5f-ba2e-5430fa69d5da","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net"},{"pipelineID":"eab29a43-ac66-4d04-85d1-bff664770c7b","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net"}],"containers":2,"openContainers":3,"leaderCount":1,"version":"1.3.0-SNAPSHOT","setupTime":1665105106526,"revision":"4e364001ac752e8764d2b9c4d8b6880d3fb78135","buildDate":"2022-10-07T00:51Z","layoutVersion":4,"networkLocation":"/rack1"},{"uuid":"d36a8522-b26f-4941-b79b-5bd55593ae86","hostname":"ozone-topology_datanode_3_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1665105251004,"storageReport":{"capacity":89297309696,"used":18432,"remaining":29798969344},"pipelines":[{"pipelineID":"54add37c-72c6-4859-a6da-81955b4ea38d","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net"},{"pipelineID":"efe8cf82-0c1e-4787-81d4-47370f9a004f","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net"},{"pipelineID":"85648f70-dc15-41d7-988f-170e6c315b5d","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net"}],"containers":2,"openContainers":2,"leaderCount":2,"version":"1.3.0-SNAPSHOT","setupTime":1665105103784,"revision":"4e364001ac752e8764d2b9c4d8b6880d3fb78135","buildDate":"2022-10-07T00:51Z","layoutVersion":4,"networkLocation":"/rack1"},{"uuid":"f8724080-68d6-418a-a534-1f98d63dc032","hostname":"ozone-topology_datanode_6_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1665105251082,"storageReport":{"capacity":89297309696,"used":14336,"remaining":29825499136},"pipelines":[{"pipelineID":"efe8cf82-0c1e-4787-81d4-47370f9a004f","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net"},{"pipelineID":"ccc531c4-9db9-47fb-8c7c-cd827672d915","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net"},{"pipelineID":"85648f70-dc15-41d7-988f-170e6c315b5d","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net"}],"containers":2,"openContainers":2,"leaderCount":2,"version":"1.3.0-SNAPSHOT","setupTime":1665105105908,"revision":"4e364001ac752e8764d2b9c4d8b6880d3fb78135","buildDate":"2022-10-07T00:51Z","layoutVersion":4,"networkLocation":"/rack2"},{"uuid":"43eb614c-1393-4cc7-ba95-1f7d04458301","hostname":"ozone-topology_datanode_4_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1665105253071,"storageReport":{"capacity":89297309696,"used":8196,"remaining":29726830592},"pipelines":[{"pipelineID":"509053bc-80c7-4a37-a58c-28268988421d","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net"},{"pipelineID":"55b4da04-e885-4297-a5f9-c57ee799fdda","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net"},{"pipelineID":"85648f70-dc15-41d7-988f-170e6c315b5d","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net"}],"containers":2,"openContainers":3,"leaderCount":2,"version":"1.3.0-SNAPSHOT","setupTime":1665105105613,"revision":"4e364001ac752e8764d2b9c4d8b6880d3fb78135","buildDate":"2022-10-07T00:51Z","layoutVersion":4,"networkLocation":"/rack2"}]}</msg>
<status status="PASS" starttime="20221007 01:14:25.625" endtime="20221007 01:14:25.631"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221007 01:14:25.632" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221007 01:14:25.631" endtime="20221007 01:14:25.632"/>
</kw>
<status status="PASS" starttime="20221007 01:14:25.543" endtime="20221007 01:14:25.632"/>
</kw>
<msg timestamp="20221007 01:14:25.632" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221007 01:14:25.542" endtime="20221007 01:14:25.633"/>
</kw>
<msg timestamp="20221007 01:14:25.633" level="INFO">${result} = {"totalCount":6,"datanodes":[{"uuid":"c70877f1-153a-49d7-a1a3-812f544257aa","hostname":"ozone-topology_datanode_5_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1665105...</msg>
<status status="PASS" starttime="20221007 01:14:25.542" endtime="20221007 01:14:25.633"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanodes</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221007 01:14:25.634" endtime="20221007 01:14:25.634"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221007 01:14:25.634" endtime="20221007 01:14:25.634"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221007 01:14:25.634" endtime="20221007 01:14:25.635"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221007 01:14:25.635" endtime="20221007 01:14:25.635"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/pipelines</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221007 01:14:25.651" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/pipelines 2&gt;&amp;1'.</msg>
<msg timestamp="20221007 01:14:25.697" level="INFO">${rc} = 0</msg>
<msg timestamp="20221007 01:14:25.697" level="INFO">${output} = {"totalCount":10,"pipelines":[{"pipelineId":"54add37c-72c6-4859-a6da-81955b4ea38d","status":"OPEN","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net","datanodes":["ozone-topology_datanode_3...</msg>
<status status="PASS" starttime="20221007 01:14:25.641" endtime="20221007 01:14:25.697"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221007 01:14:25.698" level="INFO">{"totalCount":10,"pipelines":[{"pipelineId":"54add37c-72c6-4859-a6da-81955b4ea38d","status":"OPEN","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net","datanodes":["ozone-topology_datanode_3_1.ozone-topology_net"],"lastLeaderElection":0,"duration":112009,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"853ce6cc-8e1e-4090-8a59-eb969f4e8f5d","status":"OPEN","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net","datanodes":["ozone-topology_datanode_1_1.ozone-topology_net"],"lastLeaderElection":0,"duration":113158,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"509053bc-80c7-4a37-a58c-28268988421d","status":"OPEN","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net","datanodes":["ozone-topology_datanode_4_1.ozone-topology_net","ozone-topology_datanode_2_1.ozone-topology_net","ozone-topology_datanode_5_1.ozone-topology_net"],"lastLeaderElection":0,"duration":112030,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"THREE","containers":1},{"pipelineId":"efe8cf82-0c1e-4787-81d4-47370f9a004f","status":"OPEN","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net","datanodes":["ozone-topology_datanode_3_1.ozone-topology_net","ozone-topology_datanode_6_1.ozone-topology_net","ozone-topology_datanode_1_1.ozone-topology_net"],"lastLeaderElection":0,"duration":112091,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"THREE","containers":1},{"pipelineId":"f03918c7-82fe-4f53-a66f-30ab5d8bf5e9","status":"OPEN","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net","datanodes":["ozone-topology_datanode_5_1.ozone-topology_net"],"lastLeaderElection":0,"duration":112114,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"17d880cb-80f7-4e5f-ba2e-5430fa69d5da","status":"OPEN","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net","datanodes":["ozone-topology_datanode_2_1.ozone-topology_net"],"lastLeaderElection":0,"duration":112052,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"55b4da04-e885-4297-a5f9-c57ee799fdda","status":"OPEN","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net","datanodes":["ozone-topology_datanode_4_1.ozone-topology_net"],"lastLeaderElection":0,"duration":111881,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"eab29a43-ac66-4d04-85d1-bff664770c7b","status":"OPEN","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net","datanodes":["ozone-topology_datanode_1_1.ozone-topology_net","ozone-topology_datanode_5_1.ozone-topology_net","ozone-topology_datanode_2_1.ozone-topology_net"],"lastLeaderElection":0,"duration":112172,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"THREE","containers":1},{"pipelineId":"ccc531c4-9db9-47fb-8c7c-cd827672d915","status":"OPEN","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net","datanodes":["ozone-topology_datanode_6_1.ozone-topology_net"],"lastLeaderElection":0,"duration":111938,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"85648f70-dc15-41d7-988f-170e6c315b5d","status":"OPEN","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net","datanodes":["ozone-topology_datanode_3_1.ozone-topology_net","ozone-topology_datanode_6_1.ozone-topology_net","ozone-topology_datanode_4_1.ozone-topology_net"],"lastLeaderElection":0,"duration":111978,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"THREE","containers":1}]}</msg>
<status status="PASS" starttime="20221007 01:14:25.698" endtime="20221007 01:14:25.698"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221007 01:14:25.699" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221007 01:14:25.699" endtime="20221007 01:14:25.699"/>
</kw>
<status status="PASS" starttime="20221007 01:14:25.641" endtime="20221007 01:14:25.699"/>
</kw>
<msg timestamp="20221007 01:14:25.700" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221007 01:14:25.640" endtime="20221007 01:14:25.703"/>
</kw>
<msg timestamp="20221007 01:14:25.703" level="INFO">${result} = {"totalCount":10,"pipelines":[{"pipelineId":"54add37c-72c6-4859-a6da-81955b4ea38d","status":"OPEN","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net","datanodes":["ozone-topology_datanode_3...</msg>
<status status="PASS" starttime="20221007 01:14:25.640" endtime="20221007 01:14:25.703"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>pipelines</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221007 01:14:25.704" endtime="20221007 01:14:25.704"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221007 01:14:25.704" endtime="20221007 01:14:25.704"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OPEN</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221007 01:14:25.705" endtime="20221007 01:14:25.705"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221007 01:14:25.705" endtime="20221007 01:14:25.705"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221007 01:14:25.706" endtime="20221007 01:14:25.706"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221007 01:14:25.706" endtime="20221007 01:14:25.707"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/clusterState</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221007 01:14:25.710" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20221007 01:14:25.740" level="INFO">${rc} = 0</msg>
<msg timestamp="20221007 01:14:25.740" level="INFO">${output} = {"pipelines":10,"totalDatanodes":6,"healthyDatanodes":6,"storageReport":{"capacity":535783858176,"used":71688,"remaining":178702561280},"containers":4,"volumes":3,"buckets":2,"keys":11}</msg>
<status status="PASS" starttime="20221007 01:14:25.708" endtime="20221007 01:14:25.740"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221007 01:14:25.741" level="INFO">{"pipelines":10,"totalDatanodes":6,"healthyDatanodes":6,"storageReport":{"capacity":535783858176,"used":71688,"remaining":178702561280},"containers":4,"volumes":3,"buckets":2,"keys":11}</msg>
<status status="PASS" starttime="20221007 01:14:25.740" endtime="20221007 01:14:25.741"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221007 01:14:25.742" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221007 01:14:25.741" endtime="20221007 01:14:25.742"/>
</kw>
<status status="PASS" starttime="20221007 01:14:25.708" endtime="20221007 01:14:25.742"/>
</kw>
<msg timestamp="20221007 01:14:25.743" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221007 01:14:25.707" endtime="20221007 01:14:25.743"/>
</kw>
<msg timestamp="20221007 01:14:25.743" level="INFO">${result} = {"pipelines":10,"totalDatanodes":6,"healthyDatanodes":6,"storageReport":{"capacity":535783858176,"used":71688,"remaining":178702561280},"containers":4,"volumes":3,"buckets":2,"keys":11}</msg>
<status status="PASS" starttime="20221007 01:14:25.707" endtime="20221007 01:14:25.743"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"totalDatanodes\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221007 01:14:25.743" endtime="20221007 01:14:25.744"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"healthyDatanodes\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221007 01:14:25.744" endtime="20221007 01:14:25.744"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"pipelines\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221007 01:14:25.744" endtime="20221007 01:14:25.745"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers/1/replicaHistory</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221007 01:14:25.749" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers/1/replicaHistory 2&gt;&amp;1'.</msg>
<msg timestamp="20221007 01:14:25.768" level="INFO">${rc} = 0</msg>
<msg timestamp="20221007 01:14:25.768" level="INFO">${output} = [{"containerId":1,"datanodeUuid":"c49164b6-5741-4ad4-8558-9a583f47d1a5","datanodeHost":"ozone-topology_datanode_1_1.ozone-topology_net","firstSeenTime":1665105182960,"lastSeenTime":1665105184862,"last...</msg>
<status status="PASS" starttime="20221007 01:14:25.746" endtime="20221007 01:14:25.768"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221007 01:14:25.770" level="INFO">[{"containerId":1,"datanodeUuid":"c49164b6-5741-4ad4-8558-9a583f47d1a5","datanodeHost":"ozone-topology_datanode_1_1.ozone-topology_net","firstSeenTime":1665105182960,"lastSeenTime":1665105184862,"lastBcsId":0},{"containerId":1,"datanodeUuid":"f8724080-68d6-418a-a534-1f98d63dc032","datanodeHost":"ozone-topology_datanode_6_1.ozone-topology_net","firstSeenTime":1665105183129,"lastSeenTime":1665105183129,"lastBcsId":0},{"containerId":1,"datanodeUuid":"d36a8522-b26f-4941-b79b-5bd55593ae86","datanodeHost":"ozone-topology_datanode_3_1.ozone-topology_net","firstSeenTime":1665105183132,"lastSeenTime":1665105183132,"lastBcsId":0}]</msg>
<status status="PASS" starttime="20221007 01:14:25.769" endtime="20221007 01:14:25.770"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221007 01:14:25.770" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221007 01:14:25.770" endtime="20221007 01:14:25.771"/>
</kw>
<status status="PASS" starttime="20221007 01:14:25.746" endtime="20221007 01:14:25.771"/>
</kw>
<msg timestamp="20221007 01:14:25.771" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221007 01:14:25.745" endtime="20221007 01:14:25.771"/>
</kw>
<msg timestamp="20221007 01:14:25.772" level="INFO">${result} = [{"containerId":1,"datanodeUuid":"c49164b6-5741-4ad4-8558-9a583f47d1a5","datanodeHost":"ozone-topology_datanode_1_1.ozone-topology_net","firstSeenTime":1665105182960,"lastSeenTime":1665105184862,"last...</msg>
<status status="PASS" starttime="20221007 01:14:25.745" endtime="20221007 01:14:25.772"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"containerId\":1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221007 01:14:25.772" endtime="20221007 01:14:25.773"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221007 01:14:25.541" endtime="20221007 01:14:25.773"/>
</test>
<test id="s1-s2-s1-t3" name="Check if Recon Web UI is up" line="88">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221007 01:14:25.775" endtime="20221007 01:14:25.775"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${ENDPOINT_URL}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221007 01:14:25.779" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20221007 01:14:25.801" level="INFO">${rc} = 0</msg>
<msg timestamp="20221007 01:14:25.802" level="INFO">${output} = &lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" ...</msg>
<status status="PASS" starttime="20221007 01:14:25.776" endtime="20221007 01:14:25.802"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221007 01:14:25.803" level="INFO">&lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" content="#000000"/&gt;&lt;link rel="manifest" href="/manifest.json"/&gt;&lt;link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto:300,400,500"/&gt;&lt;title&gt;Ozone Recon&lt;/title&gt;&lt;link href="/static/css/2.7465223f.chunk.css" rel="stylesheet"&gt;&lt;link href="/static/css/main.599d6ee1.chunk.css" rel="stylesheet"&gt;&lt;/head&gt;&lt;body&gt;&lt;noscript&gt;You need to enable JavaScript to run this app.&lt;/noscript&gt;&lt;div id="root"&gt;&lt;/div&gt;&lt;script&gt;!function(e){function r(r){for(var n,l,f=r[0],i=r[1],a=r[2],p=0,s=[];p&lt;f.length;p++)l=f[p],Object.prototype.hasOwnProperty.call(o,l)&amp;&amp;o[l]&amp;&amp;s.push(o[l][0]),o[l]=0;for(n in i)Object.prototype.hasOwnProperty.call(i,n)&amp;&amp;(e[n]=i[n]);for(c&amp;&amp;c(r);s.length;)s.shift()();return u.push.apply(u,a||[]),t()}function t(){for(var e,r=0;r&lt;u.length;r++){for(var t=u[r],n=!0,f=1;f&lt;t.length;f++){var i=t[f];0!==o[i]&amp;&amp;(n=!1)}n&amp;&amp;(u.splice(r--,1),e=l(l.s=t[0]))}return e}var n={},o={1:0},u=[];function l(r){if(n[r])return n[r].exports;var t=n[r]={i:r,l:!1,exports:{}};return e[r].call(t.exports,t,t.exports,l),t.l=!0,t.exports}l.m=e,l.c=n,l.d=function(e,r,t){l.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:t})},l.r=function(e){"undefined"!=typeof Symbol&amp;&amp;Symbol.toStringTag&amp;&amp;Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},l.t=function(e,r){if(1&amp;r&amp;&amp;(e=l(e)),8&amp;r)return e;if(4&amp;r&amp;&amp;"object"==typeof e&amp;&amp;e&amp;&amp;e.__esModule)return e;var t=Object.create(null);if(l.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&amp;r&amp;&amp;"string"!=typeof e)for(var n in e)l.d(t,n,function(r){return e[r]}.bind(null,n));return t},l.n=function(e){var r=e&amp;&amp;e.__esModule?function(){return e.default}:function(){return e};return l.d(r,"a",r),r},l.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},l.p="/";var f=this["webpackJsonpozone-recon"]=this["webpackJsonpozone-recon"]||[],i=f.push.bind(f);f.push=r,f=f.slice();for(var a=0;a&lt;f.length;a++)r(f[a]);var c=i;t()}([])&lt;/script&gt;&lt;script src="/static/js/2.59eb807f.chunk.js"&gt;&lt;/script&gt;&lt;script src="/static/js/main.1c260331.chunk.js"&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;</msg>
<status status="PASS" starttime="20221007 01:14:25.802" endtime="20221007 01:14:25.803"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221007 01:14:25.804" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221007 01:14:25.804" endtime="20221007 01:14:25.804"/>
</kw>
<status status="PASS" starttime="20221007 01:14:25.776" endtime="20221007 01:14:25.805"/>
</kw>
<msg timestamp="20221007 01:14:25.805" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221007 01:14:25.776" endtime="20221007 01:14:25.805"/>
</kw>
<msg timestamp="20221007 01:14:25.806" level="INFO">${result} = &lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" ...</msg>
<status status="PASS" starttime="20221007 01:14:25.775" endtime="20221007 01:14:25.806"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Ozone Recon</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221007 01:14:25.806" endtime="20221007 01:14:25.806"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221007 01:14:25.774" endtime="20221007 01:14:25.806"/>
</test>
<test id="s1-s2-s1-t4" name="Check web UI access" line="93">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221007 01:14:25.812" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20221007 01:14:25.816" level="INFO">${rc} = 0</msg>
<msg timestamp="20221007 01:14:25.817" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221007 01:14:25.810" endtime="20221007 01:14:25.817"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221007 01:14:25.818" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221007 01:14:25.817" endtime="20221007 01:14:25.818"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221007 01:14:25.818" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221007 01:14:25.818" endtime="20221007 01:14:25.818"/>
</kw>
<status status="PASS" starttime="20221007 01:14:25.809" endtime="20221007 01:14:25.819"/>
</kw>
<msg timestamp="20221007 01:14:25.819" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221007 01:14:25.809" endtime="20221007 01:14:25.820"/>
</kw>
<status status="PASS" starttime="20221007 01:14:25.808" endtime="20221007 01:14:25.820"/>
</kw>
<kw name="Check http return code">
<arg>${ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221007 01:14:25.825" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20221007 01:14:25.838" level="INFO">${rc} = 0</msg>
<msg timestamp="20221007 01:14:25.838" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221007 01:14:25.822" endtime="20221007 01:14:25.838"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221007 01:14:25.839" level="INFO">200</msg>
<status status="PASS" starttime="20221007 01:14:25.839" endtime="20221007 01:14:25.839"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221007 01:14:25.840" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221007 01:14:25.840" endtime="20221007 01:14:25.840"/>
</kw>
<status status="PASS" starttime="20221007 01:14:25.822" endtime="20221007 01:14:25.840"/>
</kw>
<msg timestamp="20221007 01:14:25.841" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221007 01:14:25.821" endtime="20221007 01:14:25.841"/>
</kw>
<msg timestamp="20221007 01:14:25.841" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221007 01:14:25.821" endtime="20221007 01:14:25.841"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221007 01:14:25.842" endtime="20221007 01:14:25.842"/>
</kw>
<status status="NOT RUN" starttime="20221007 01:14:25.842" endtime="20221007 01:14:25.842"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221007 01:14:25.842" endtime="20221007 01:14:25.842"/>
</kw>
<status status="PASS" starttime="20221007 01:14:25.842" endtime="20221007 01:14:25.843"/>
</branch>
<status status="PASS" starttime="20221007 01:14:25.841" endtime="20221007 01:14:25.843"/>
</if>
<status status="PASS" starttime="20221007 01:14:25.820" endtime="20221007 01:14:25.843"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221007 01:14:25.843" endtime="20221007 01:14:25.844"/>
</kw>
<status status="PASS" starttime="20221007 01:14:25.843" endtime="20221007 01:14:25.844"/>
</kw>
<kw name="Check http return code">
<arg>${ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221007 01:14:25.848" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20221007 01:14:25.865" level="INFO">${rc} = 0</msg>
<msg timestamp="20221007 01:14:25.865" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221007 01:14:25.846" endtime="20221007 01:14:25.865"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221007 01:14:25.866" level="INFO">200</msg>
<status status="PASS" starttime="20221007 01:14:25.865" endtime="20221007 01:14:25.866"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221007 01:14:25.867" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221007 01:14:25.866" endtime="20221007 01:14:25.867"/>
</kw>
<status status="PASS" starttime="20221007 01:14:25.845" endtime="20221007 01:14:25.867"/>
</kw>
<msg timestamp="20221007 01:14:25.867" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221007 01:14:25.845" endtime="20221007 01:14:25.868"/>
</kw>
<msg timestamp="20221007 01:14:25.868" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221007 01:14:25.844" endtime="20221007 01:14:25.868"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221007 01:14:25.868" endtime="20221007 01:14:25.868"/>
</kw>
<status status="NOT RUN" starttime="20221007 01:14:25.868" endtime="20221007 01:14:25.869"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221007 01:14:25.869" endtime="20221007 01:14:25.869"/>
</kw>
<status status="PASS" starttime="20221007 01:14:25.869" endtime="20221007 01:14:25.869"/>
</branch>
<status status="PASS" starttime="20221007 01:14:25.868" endtime="20221007 01:14:25.869"/>
</if>
<status status="PASS" starttime="20221007 01:14:25.844" endtime="20221007 01:14:25.869"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221007 01:14:25.807" endtime="20221007 01:14:25.869"/>
</test>
<test id="s1-s2-s1-t5" name="Check admin only api access" line="101">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221007 01:14:25.875" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20221007 01:14:25.879" level="INFO">${rc} = 0</msg>
<msg timestamp="20221007 01:14:25.879" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221007 01:14:25.873" endtime="20221007 01:14:25.879"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221007 01:14:25.880" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221007 01:14:25.879" endtime="20221007 01:14:25.880"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221007 01:14:25.880" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221007 01:14:25.880" endtime="20221007 01:14:25.880"/>
</kw>
<status status="PASS" starttime="20221007 01:14:25.872" endtime="20221007 01:14:25.881"/>
</kw>
<msg timestamp="20221007 01:14:25.881" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221007 01:14:25.872" endtime="20221007 01:14:25.881"/>
</kw>
<status status="PASS" starttime="20221007 01:14:25.871" endtime="20221007 01:14:25.881"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221007 01:14:25.886" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20221007 01:14:25.904" level="INFO">${rc} = 0</msg>
<msg timestamp="20221007 01:14:25.904" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221007 01:14:25.884" endtime="20221007 01:14:25.904"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221007 01:14:25.905" level="INFO">200</msg>
<status status="PASS" starttime="20221007 01:14:25.904" endtime="20221007 01:14:25.905"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221007 01:14:25.906" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221007 01:14:25.905" endtime="20221007 01:14:25.906"/>
</kw>
<status status="PASS" starttime="20221007 01:14:25.883" endtime="20221007 01:14:25.906"/>
</kw>
<msg timestamp="20221007 01:14:25.906" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221007 01:14:25.882" endtime="20221007 01:14:25.907"/>
</kw>
<msg timestamp="20221007 01:14:25.907" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221007 01:14:25.882" endtime="20221007 01:14:25.907"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221007 01:14:25.908" endtime="20221007 01:14:25.908"/>
</kw>
<status status="NOT RUN" starttime="20221007 01:14:25.907" endtime="20221007 01:14:25.908"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221007 01:14:25.908" endtime="20221007 01:14:25.908"/>
</kw>
<status status="PASS" starttime="20221007 01:14:25.908" endtime="20221007 01:14:25.908"/>
</branch>
<status status="PASS" starttime="20221007 01:14:25.907" endtime="20221007 01:14:25.908"/>
</if>
<status status="PASS" starttime="20221007 01:14:25.882" endtime="20221007 01:14:25.908"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221007 01:14:25.909" endtime="20221007 01:14:25.909"/>
</kw>
<status status="PASS" starttime="20221007 01:14:25.909" endtime="20221007 01:14:25.909"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221007 01:14:25.914" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20221007 01:14:25.945" level="INFO">${rc} = 0</msg>
<msg timestamp="20221007 01:14:25.945" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221007 01:14:25.911" endtime="20221007 01:14:25.945"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221007 01:14:25.946" level="INFO">200</msg>
<status status="PASS" starttime="20221007 01:14:25.945" endtime="20221007 01:14:25.946"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221007 01:14:25.947" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221007 01:14:25.946" endtime="20221007 01:14:25.947"/>
</kw>
<status status="PASS" starttime="20221007 01:14:25.911" endtime="20221007 01:14:25.947"/>
</kw>
<msg timestamp="20221007 01:14:25.947" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221007 01:14:25.911" endtime="20221007 01:14:25.948"/>
</kw>
<msg timestamp="20221007 01:14:25.948" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221007 01:14:25.910" endtime="20221007 01:14:25.948"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221007 01:14:25.949" endtime="20221007 01:14:25.949"/>
</kw>
<status status="NOT RUN" starttime="20221007 01:14:25.948" endtime="20221007 01:14:25.949"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221007 01:14:25.949" endtime="20221007 01:14:25.949"/>
</kw>
<status status="PASS" starttime="20221007 01:14:25.949" endtime="20221007 01:14:25.949"/>
</branch>
<status status="PASS" starttime="20221007 01:14:25.948" endtime="20221007 01:14:25.949"/>
</if>
<status status="PASS" starttime="20221007 01:14:25.910" endtime="20221007 01:14:25.950"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221007 01:14:25.950" endtime="20221007 01:14:25.950"/>
</kw>
<status status="PASS" starttime="20221007 01:14:25.950" endtime="20221007 01:14:25.951"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221007 01:14:25.955" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20221007 01:14:25.971" level="INFO">${rc} = 0</msg>
<msg timestamp="20221007 01:14:25.971" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221007 01:14:25.953" endtime="20221007 01:14:25.971"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221007 01:14:25.972" level="INFO">200</msg>
<status status="PASS" starttime="20221007 01:14:25.971" endtime="20221007 01:14:25.972"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221007 01:14:25.973" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221007 01:14:25.972" endtime="20221007 01:14:25.973"/>
</kw>
<status status="PASS" starttime="20221007 01:14:25.952" endtime="20221007 01:14:25.973"/>
</kw>
<msg timestamp="20221007 01:14:25.973" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221007 01:14:25.952" endtime="20221007 01:14:25.974"/>
</kw>
<msg timestamp="20221007 01:14:25.974" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221007 01:14:25.951" endtime="20221007 01:14:25.974"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221007 01:14:25.974" endtime="20221007 01:14:25.974"/>
</kw>
<status status="NOT RUN" starttime="20221007 01:14:25.974" endtime="20221007 01:14:25.974"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221007 01:14:25.975" endtime="20221007 01:14:25.975"/>
</kw>
<status status="PASS" starttime="20221007 01:14:25.975" endtime="20221007 01:14:25.975"/>
</branch>
<status status="PASS" starttime="20221007 01:14:25.974" endtime="20221007 01:14:25.975"/>
</if>
<status status="PASS" starttime="20221007 01:14:25.951" endtime="20221007 01:14:25.975"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221007 01:14:25.976" endtime="20221007 01:14:25.976"/>
</kw>
<status status="PASS" starttime="20221007 01:14:25.975" endtime="20221007 01:14:25.976"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221007 01:14:25.980" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20221007 01:14:25.997" level="INFO">${rc} = 0</msg>
<msg timestamp="20221007 01:14:25.997" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221007 01:14:25.978" endtime="20221007 01:14:25.997"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221007 01:14:25.998" level="INFO">200</msg>
<status status="PASS" starttime="20221007 01:14:25.997" endtime="20221007 01:14:25.998"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221007 01:14:25.998" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221007 01:14:25.998" endtime="20221007 01:14:25.999"/>
</kw>
<status status="PASS" starttime="20221007 01:14:25.977" endtime="20221007 01:14:25.999"/>
</kw>
<msg timestamp="20221007 01:14:25.999" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221007 01:14:25.977" endtime="20221007 01:14:25.999"/>
</kw>
<msg timestamp="20221007 01:14:26.000" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221007 01:14:25.977" endtime="20221007 01:14:26.000"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221007 01:14:26.000" endtime="20221007 01:14:26.000"/>
</kw>
<status status="NOT RUN" starttime="20221007 01:14:26.000" endtime="20221007 01:14:26.000"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221007 01:14:26.000" endtime="20221007 01:14:26.001"/>
</kw>
<status status="PASS" starttime="20221007 01:14:26.000" endtime="20221007 01:14:26.001"/>
</branch>
<status status="PASS" starttime="20221007 01:14:26.000" endtime="20221007 01:14:26.001"/>
</if>
<status status="PASS" starttime="20221007 01:14:25.976" endtime="20221007 01:14:26.001"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221007 01:14:25.870" endtime="20221007 01:14:26.001"/>
</test>
<test id="s1-s2-s1-t6" name="Check unhealthy, (admin) api access" line="114">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221007 01:14:26.007" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20221007 01:14:26.010" level="INFO">${rc} = 0</msg>
<msg timestamp="20221007 01:14:26.010" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221007 01:14:26.005" endtime="20221007 01:14:26.010"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221007 01:14:26.011" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221007 01:14:26.011" endtime="20221007 01:14:26.011"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221007 01:14:26.012" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221007 01:14:26.012" endtime="20221007 01:14:26.012"/>
</kw>
<status status="PASS" starttime="20221007 01:14:26.004" endtime="20221007 01:14:26.012"/>
</kw>
<msg timestamp="20221007 01:14:26.012" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221007 01:14:26.004" endtime="20221007 01:14:26.013"/>
</kw>
<status status="PASS" starttime="20221007 01:14:26.004" endtime="20221007 01:14:26.013"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221007 01:14:26.017" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20221007 01:14:26.068" level="INFO">${rc} = 0</msg>
<msg timestamp="20221007 01:14:26.069" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221007 01:14:26.015" endtime="20221007 01:14:26.069"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221007 01:14:26.070" level="INFO">200</msg>
<status status="PASS" starttime="20221007 01:14:26.069" endtime="20221007 01:14:26.070"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221007 01:14:26.071" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221007 01:14:26.071" endtime="20221007 01:14:26.071"/>
</kw>
<status status="PASS" starttime="20221007 01:14:26.014" endtime="20221007 01:14:26.071"/>
</kw>
<msg timestamp="20221007 01:14:26.072" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221007 01:14:26.014" endtime="20221007 01:14:26.072"/>
</kw>
<msg timestamp="20221007 01:14:26.072" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221007 01:14:26.014" endtime="20221007 01:14:26.073"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221007 01:14:26.073" endtime="20221007 01:14:26.073"/>
</kw>
<status status="NOT RUN" starttime="20221007 01:14:26.073" endtime="20221007 01:14:26.074"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221007 01:14:26.074" endtime="20221007 01:14:26.074"/>
</kw>
<status status="PASS" starttime="20221007 01:14:26.074" endtime="20221007 01:14:26.075"/>
</branch>
<status status="PASS" starttime="20221007 01:14:26.073" endtime="20221007 01:14:26.075"/>
</if>
<status status="PASS" starttime="20221007 01:14:26.013" endtime="20221007 01:14:26.075"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221007 01:14:26.075" endtime="20221007 01:14:26.076"/>
</kw>
<status status="PASS" starttime="20221007 01:14:26.075" endtime="20221007 01:14:26.076"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221007 01:14:26.080" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20221007 01:14:26.102" level="INFO">${rc} = 0</msg>
<msg timestamp="20221007 01:14:26.102" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221007 01:14:26.078" endtime="20221007 01:14:26.102"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221007 01:14:26.103" level="INFO">200</msg>
<status status="PASS" starttime="20221007 01:14:26.103" endtime="20221007 01:14:26.103"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221007 01:14:26.104" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221007 01:14:26.104" endtime="20221007 01:14:26.104"/>
</kw>
<status status="PASS" starttime="20221007 01:14:26.077" endtime="20221007 01:14:26.105"/>
</kw>
<msg timestamp="20221007 01:14:26.105" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221007 01:14:26.077" endtime="20221007 01:14:26.105"/>
</kw>
<msg timestamp="20221007 01:14:26.106" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221007 01:14:26.077" endtime="20221007 01:14:26.106"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221007 01:14:26.106" endtime="20221007 01:14:26.106"/>
</kw>
<status status="NOT RUN" starttime="20221007 01:14:26.106" endtime="20221007 01:14:26.106"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221007 01:14:26.106" endtime="20221007 01:14:26.107"/>
</kw>
<status status="PASS" starttime="20221007 01:14:26.106" endtime="20221007 01:14:26.107"/>
</branch>
<status status="PASS" starttime="20221007 01:14:26.106" endtime="20221007 01:14:26.107"/>
</if>
<status status="PASS" starttime="20221007 01:14:26.076" endtime="20221007 01:14:26.107"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221007 01:14:26.108" endtime="20221007 01:14:26.108"/>
</kw>
<status status="PASS" starttime="20221007 01:14:26.107" endtime="20221007 01:14:26.108"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221007 01:14:26.112" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20221007 01:14:26.130" level="INFO">${rc} = 0</msg>
<msg timestamp="20221007 01:14:26.130" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221007 01:14:26.110" endtime="20221007 01:14:26.130"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221007 01:14:26.133" level="INFO">200</msg>
<status status="PASS" starttime="20221007 01:14:26.130" endtime="20221007 01:14:26.133"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221007 01:14:26.136" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221007 01:14:26.135" endtime="20221007 01:14:26.136"/>
</kw>
<status status="PASS" starttime="20221007 01:14:26.109" endtime="20221007 01:14:26.136"/>
</kw>
<msg timestamp="20221007 01:14:26.136" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221007 01:14:26.109" endtime="20221007 01:14:26.137"/>
</kw>
<msg timestamp="20221007 01:14:26.137" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221007 01:14:26.109" endtime="20221007 01:14:26.137"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221007 01:14:26.137" endtime="20221007 01:14:26.137"/>
</kw>
<status status="NOT RUN" starttime="20221007 01:14:26.137" endtime="20221007 01:14:26.137"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221007 01:14:26.138" endtime="20221007 01:14:26.138"/>
</kw>
<status status="PASS" starttime="20221007 01:14:26.137" endtime="20221007 01:14:26.138"/>
</branch>
<status status="PASS" starttime="20221007 01:14:26.137" endtime="20221007 01:14:26.138"/>
</if>
<status status="PASS" starttime="20221007 01:14:26.108" endtime="20221007 01:14:26.138"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221007 01:14:26.139" endtime="20221007 01:14:26.139"/>
</kw>
<status status="PASS" starttime="20221007 01:14:26.138" endtime="20221007 01:14:26.139"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221007 01:14:26.144" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20221007 01:14:26.161" level="INFO">${rc} = 0</msg>
<msg timestamp="20221007 01:14:26.161" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221007 01:14:26.142" endtime="20221007 01:14:26.161"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221007 01:14:26.162" level="INFO">200</msg>
<status status="PASS" starttime="20221007 01:14:26.162" endtime="20221007 01:14:26.163"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221007 01:14:26.163" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221007 01:14:26.163" endtime="20221007 01:14:26.163"/>
</kw>
<status status="PASS" starttime="20221007 01:14:26.141" endtime="20221007 01:14:26.164"/>
</kw>
<msg timestamp="20221007 01:14:26.164" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221007 01:14:26.141" endtime="20221007 01:14:26.164"/>
</kw>
<msg timestamp="20221007 01:14:26.165" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221007 01:14:26.140" endtime="20221007 01:14:26.165"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221007 01:14:26.165" endtime="20221007 01:14:26.165"/>
</kw>
<status status="NOT RUN" starttime="20221007 01:14:26.165" endtime="20221007 01:14:26.165"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221007 01:14:26.165" endtime="20221007 01:14:26.166"/>
</kw>
<status status="PASS" starttime="20221007 01:14:26.165" endtime="20221007 01:14:26.166"/>
</branch>
<status status="PASS" starttime="20221007 01:14:26.165" endtime="20221007 01:14:26.166"/>
</if>
<status status="PASS" starttime="20221007 01:14:26.140" endtime="20221007 01:14:26.166"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221007 01:14:26.003" endtime="20221007 01:14:26.166"/>
</test>
<test id="s1-s2-s1-t7" name="Check normal api access" line="127">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221007 01:14:26.172" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20221007 01:14:26.175" level="INFO">${rc} = 0</msg>
<msg timestamp="20221007 01:14:26.176" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221007 01:14:26.170" endtime="20221007 01:14:26.176"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221007 01:14:26.177" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221007 01:14:26.176" endtime="20221007 01:14:26.177"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221007 01:14:26.177" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221007 01:14:26.177" endtime="20221007 01:14:26.177"/>
</kw>
<status status="PASS" starttime="20221007 01:14:26.169" endtime="20221007 01:14:26.178"/>
</kw>
<msg timestamp="20221007 01:14:26.178" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221007 01:14:26.169" endtime="20221007 01:14:26.178"/>
</kw>
<status status="PASS" starttime="20221007 01:14:26.168" endtime="20221007 01:14:26.178"/>
</kw>
<kw name="Check http return code">
<arg>${NON_ADMIN_API_ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221007 01:14:26.182" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20221007 01:14:26.205" level="INFO">${rc} = 0</msg>
<msg timestamp="20221007 01:14:26.205" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221007 01:14:26.180" endtime="20221007 01:14:26.205"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221007 01:14:26.206" level="INFO">200</msg>
<status status="PASS" starttime="20221007 01:14:26.205" endtime="20221007 01:14:26.206"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221007 01:14:26.207" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221007 01:14:26.206" endtime="20221007 01:14:26.207"/>
</kw>
<status status="PASS" starttime="20221007 01:14:26.180" endtime="20221007 01:14:26.207"/>
</kw>
<msg timestamp="20221007 01:14:26.207" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221007 01:14:26.179" endtime="20221007 01:14:26.208"/>
</kw>
<msg timestamp="20221007 01:14:26.209" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221007 01:14:26.179" endtime="20221007 01:14:26.209"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221007 01:14:26.209" endtime="20221007 01:14:26.209"/>
</kw>
<status status="NOT RUN" starttime="20221007 01:14:26.209" endtime="20221007 01:14:26.209"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221007 01:14:26.210" endtime="20221007 01:14:26.210"/>
</kw>
<status status="PASS" starttime="20221007 01:14:26.210" endtime="20221007 01:14:26.210"/>
</branch>
<status status="PASS" starttime="20221007 01:14:26.209" endtime="20221007 01:14:26.210"/>
</if>
<status status="PASS" starttime="20221007 01:14:26.178" endtime="20221007 01:14:26.210"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221007 01:14:26.211" endtime="20221007 01:14:26.211"/>
</kw>
<status status="PASS" starttime="20221007 01:14:26.210" endtime="20221007 01:14:26.211"/>
</kw>
<kw name="Check http return code">
<arg>${NON_ADMIN_API_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221007 01:14:26.216" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20221007 01:14:26.243" level="INFO">${rc} = 0</msg>
<msg timestamp="20221007 01:14:26.243" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221007 01:14:26.213" endtime="20221007 01:14:26.243"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221007 01:14:26.244" level="INFO">200</msg>
<status status="PASS" starttime="20221007 01:14:26.244" endtime="20221007 01:14:26.244"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221007 01:14:26.245" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221007 01:14:26.245" endtime="20221007 01:14:26.245"/>
</kw>
<status status="PASS" starttime="20221007 01:14:26.212" endtime="20221007 01:14:26.246"/>
</kw>
<msg timestamp="20221007 01:14:26.246" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221007 01:14:26.212" endtime="20221007 01:14:26.247"/>
</kw>
<msg timestamp="20221007 01:14:26.247" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221007 01:14:26.212" endtime="20221007 01:14:26.247"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221007 01:14:26.248" endtime="20221007 01:14:26.248"/>
</kw>
<status status="NOT RUN" starttime="20221007 01:14:26.247" endtime="20221007 01:14:26.248"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221007 01:14:26.248" endtime="20221007 01:14:26.248"/>
</kw>
<status status="PASS" starttime="20221007 01:14:26.248" endtime="20221007 01:14:26.248"/>
</branch>
<status status="PASS" starttime="20221007 01:14:26.247" endtime="20221007 01:14:26.248"/>
</if>
<status status="PASS" starttime="20221007 01:14:26.211" endtime="20221007 01:14:26.248"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221007 01:14:26.168" endtime="20221007 01:14:26.249"/>
</test>
<doc>Smoke test to start cluster with docker-compose environments.</doc>
<status status="PASS" starttime="20221007 01:13:35.883" endtime="20221007 01:14:26.250"/>
</suite>
<suite id="s1-s2-s2" name="Recon-Fso-Nssummary" source="/opt/hadoop/smoketest/recon/recon-fso-nssummary.robot">
<test id="s1-s2-s2-t1" name="Check volume creation" line="98">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221007 01:14:26.269" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20221007 01:14:26.272" level="INFO">${rc} = 0</msg>
<msg timestamp="20221007 01:14:26.272" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221007 01:14:26.266" endtime="20221007 01:14:26.272"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221007 01:14:26.273" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221007 01:14:26.273" endtime="20221007 01:14:26.273"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221007 01:14:26.274" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221007 01:14:26.273" endtime="20221007 01:14:26.274"/>
</kw>
<status status="PASS" starttime="20221007 01:14:26.265" endtime="20221007 01:14:26.274"/>
</kw>
<msg timestamp="20221007 01:14:26.274" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221007 01:14:26.265" endtime="20221007 01:14:26.275"/>
</kw>
<status status="PASS" starttime="20221007 01:14:26.265" endtime="20221007 01:14:26.275"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221007 01:14:26.275" endtime="20221007 01:14:26.276"/>
</kw>
<status status="PASS" starttime="20221007 01:14:26.275" endtime="20221007 01:14:26.276"/>
</kw>
<kw name="Create volume">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20221007 01:14:26.277" level="INFO">${random} = lnsjj</msg>
<status status="PASS" starttime="20221007 01:14:26.276" endtime="20221007 01:14:26.277"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${VOLUME}</arg>
<arg>vol-${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20221007 01:14:26.277" level="INFO">${VOLUME} = vol-lnsjj</msg>
<status status="PASS" starttime="20221007 01:14:26.277" endtime="20221007 01:14:26.277"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${VOLUME}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221007 01:14:26.281" level="INFO">Running command 'ozone sh volume create /vol-lnsjj 2&gt;&amp;1'.</msg>
<msg timestamp="20221007 01:14:29.623" level="INFO">${rc} = 0</msg>
<msg timestamp="20221007 01:14:29.623" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221007 01:14:26.279" endtime="20221007 01:14:29.623"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221007 01:14:29.625" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221007 01:14:29.624" endtime="20221007 01:14:29.625"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221007 01:14:29.625" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221007 01:14:29.625" endtime="20221007 01:14:29.625"/>
</kw>
<status status="PASS" starttime="20221007 01:14:26.278" endtime="20221007 01:14:29.626"/>
</kw>
<msg timestamp="20221007 01:14:29.626" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221007 01:14:26.278" endtime="20221007 01:14:29.626"/>
</kw>
<msg timestamp="20221007 01:14:29.626" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221007 01:14:26.277" endtime="20221007 01:14:29.626"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20221007 01:14:29.627" endtime="20221007 01:14:29.627"/>
</kw>
<status status="PASS" starttime="20221007 01:14:26.276" endtime="20221007 01:14:29.627"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221007 01:14:26.264" endtime="20221007 01:14:29.627"/>
</test>
<test id="s1-s2-s2-t2" name="Check bucket creation" line="103">
<kw name="Create bucket">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20221007 01:14:29.630" level="INFO">${random} = kfvoz</msg>
<status status="PASS" starttime="20221007 01:14:29.629" endtime="20221007 01:14:29.630"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<arg>buc-${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20221007 01:14:29.630" level="INFO">${BUCKET} = buc-kfvoz</msg>
<status status="PASS" starttime="20221007 01:14:29.630" endtime="20221007 01:14:29.631"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create -l FILE_SYSTEM_OPTIMIZED /${VOLUME}/${BUCKET}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221007 01:14:29.635" level="INFO">Running command 'ozone sh bucket create -l FILE_SYSTEM_OPTIMIZED /vol-lnsjj/buc-kfvoz 2&gt;&amp;1'.</msg>
<msg timestamp="20221007 01:14:32.861" level="INFO">${rc} = 0</msg>
<msg timestamp="20221007 01:14:32.861" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221007 01:14:29.632" endtime="20221007 01:14:32.861"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221007 01:14:32.863" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221007 01:14:32.862" endtime="20221007 01:14:32.863"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221007 01:14:32.863" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221007 01:14:32.863" endtime="20221007 01:14:32.863"/>
</kw>
<status status="PASS" starttime="20221007 01:14:29.631" endtime="20221007 01:14:32.864"/>
</kw>
<msg timestamp="20221007 01:14:32.864" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221007 01:14:29.631" endtime="20221007 01:14:32.864"/>
</kw>
<msg timestamp="20221007 01:14:32.865" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221007 01:14:29.631" endtime="20221007 01:14:32.865"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20221007 01:14:32.865" endtime="20221007 01:14:32.865"/>
</kw>
<status status="PASS" starttime="20221007 01:14:29.629" endtime="20221007 01:14:32.865"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221007 01:14:29.628" endtime="20221007 01:14:32.865"/>
</test>
<test id="s1-s2-s2-t3" name="Check keys creation" line="106">
<kw name="Create keys">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put /${VOLUME}/${BUCKET}/file1 README.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221007 01:14:32.871" level="INFO">Running command 'ozone sh key put /vol-lnsjj/buc-kfvoz/file1 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20221007 01:14:38.480" level="INFO">${rc} = 0</msg>
<msg timestamp="20221007 01:14:38.480" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221007 01:14:32.868" endtime="20221007 01:14:38.480"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221007 01:14:38.482" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221007 01:14:38.481" endtime="20221007 01:14:38.482"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221007 01:14:38.482" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221007 01:14:38.482" endtime="20221007 01:14:38.482"/>
</kw>
<status status="PASS" starttime="20221007 01:14:32.868" endtime="20221007 01:14:38.483"/>
</kw>
<msg timestamp="20221007 01:14:38.483" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221007 01:14:32.868" endtime="20221007 01:14:38.483"/>
</kw>
<msg timestamp="20221007 01:14:38.483" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221007 01:14:32.867" endtime="20221007 01:14:38.483"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20221007 01:14:38.484" endtime="20221007 01:14:38.484"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put /${VOLUME}/${BUCKET}/dir1/dir2/file2 HISTORY.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221007 01:14:38.488" level="INFO">Running command 'ozone sh key put /vol-lnsjj/buc-kfvoz/dir1/dir2/file2 HISTORY.md 2&gt;&amp;1'.</msg>
<msg timestamp="20221007 01:14:43.880" level="INFO">${rc} = 0</msg>
<msg timestamp="20221007 01:14:43.880" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221007 01:14:38.485" endtime="20221007 01:14:43.880"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221007 01:14:43.881" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221007 01:14:43.880" endtime="20221007 01:14:43.881"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221007 01:14:43.882" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221007 01:14:43.882" endtime="20221007 01:14:43.882"/>
</kw>
<status status="PASS" starttime="20221007 01:14:38.485" endtime="20221007 01:14:43.882"/>
</kw>
<msg timestamp="20221007 01:14:43.883" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221007 01:14:38.485" endtime="20221007 01:14:43.883"/>
</kw>
<msg timestamp="20221007 01:14:43.883" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221007 01:14:38.484" endtime="20221007 01:14:43.883"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20221007 01:14:43.884" endtime="20221007 01:14:43.884"/>
</kw>
<status status="PASS" starttime="20221007 01:14:32.867" endtime="20221007 01:14:43.884"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221007 01:14:32.866" endtime="20221007 01:14:43.884"/>
</test>
<test id="s1-s2-s2-t4" name="Check Summary api access" line="109">
<kw name="Check Access">
<arg>${SUMMARY_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221007 01:14:43.891" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20221007 01:14:43.895" level="INFO">${rc} = 0</msg>
<msg timestamp="20221007 01:14:43.895" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221007 01:14:43.888" endtime="20221007 01:14:43.895"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221007 01:14:43.896" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221007 01:14:43.895" endtime="20221007 01:14:43.896"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221007 01:14:43.897" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221007 01:14:43.896" endtime="20221007 01:14:43.897"/>
</kw>
<status status="PASS" starttime="20221007 01:14:43.887" endtime="20221007 01:14:43.897"/>
</kw>
<msg timestamp="20221007 01:14:43.897" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221007 01:14:43.887" endtime="20221007 01:14:43.897"/>
</kw>
<status status="PASS" starttime="20221007 01:14:43.886" endtime="20221007 01:14:43.898"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221007 01:14:43.901" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221007 01:14:43.931" level="INFO">${rc} = 0</msg>
<msg timestamp="20221007 01:14:43.931" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221007 01:14:43.900" endtime="20221007 01:14:43.931"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221007 01:14:43.932" level="INFO">200</msg>
<status status="PASS" starttime="20221007 01:14:43.931" endtime="20221007 01:14:43.932"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221007 01:14:43.933" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221007 01:14:43.932" endtime="20221007 01:14:43.933"/>
</kw>
<status status="PASS" starttime="20221007 01:14:43.899" endtime="20221007 01:14:43.933"/>
</kw>
<msg timestamp="20221007 01:14:43.933" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221007 01:14:43.899" endtime="20221007 01:14:43.934"/>
</kw>
<msg timestamp="20221007 01:14:43.935" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221007 01:14:43.898" endtime="20221007 01:14:43.935"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221007 01:14:43.935" endtime="20221007 01:14:43.935"/>
</kw>
<status status="NOT RUN" starttime="20221007 01:14:43.935" endtime="20221007 01:14:43.935"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221007 01:14:43.935" endtime="20221007 01:14:43.936"/>
</kw>
<status status="PASS" starttime="20221007 01:14:43.935" endtime="20221007 01:14:43.936"/>
</branch>
<status status="PASS" starttime="20221007 01:14:43.935" endtime="20221007 01:14:43.936"/>
</if>
<status status="PASS" starttime="20221007 01:14:43.898" endtime="20221007 01:14:43.936"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221007 01:14:43.937" endtime="20221007 01:14:43.937"/>
</kw>
<status status="PASS" starttime="20221007 01:14:43.936" endtime="20221007 01:14:43.937"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221007 01:14:43.941" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221007 01:14:43.956" level="INFO">${rc} = 0</msg>
<msg timestamp="20221007 01:14:43.956" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221007 01:14:43.939" endtime="20221007 01:14:43.956"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221007 01:14:43.958" level="INFO">200</msg>
<status status="PASS" starttime="20221007 01:14:43.957" endtime="20221007 01:14:43.958"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221007 01:14:43.958" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221007 01:14:43.958" endtime="20221007 01:14:43.958"/>
</kw>
<status status="PASS" starttime="20221007 01:14:43.938" endtime="20221007 01:14:43.959"/>
</kw>
<msg timestamp="20221007 01:14:43.959" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221007 01:14:43.938" endtime="20221007 01:14:43.959"/>
</kw>
<msg timestamp="20221007 01:14:43.960" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221007 01:14:43.938" endtime="20221007 01:14:43.960"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221007 01:14:43.960" endtime="20221007 01:14:43.960"/>
</kw>
<status status="NOT RUN" starttime="20221007 01:14:43.960" endtime="20221007 01:14:43.960"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221007 01:14:43.960" endtime="20221007 01:14:43.961"/>
</kw>
<status status="PASS" starttime="20221007 01:14:43.960" endtime="20221007 01:14:43.961"/>
</branch>
<status status="PASS" starttime="20221007 01:14:43.960" endtime="20221007 01:14:43.961"/>
</if>
<status status="PASS" starttime="20221007 01:14:43.937" endtime="20221007 01:14:43.961"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221007 01:14:43.961" endtime="20221007 01:14:43.962"/>
</kw>
<status status="PASS" starttime="20221007 01:14:43.961" endtime="20221007 01:14:43.962"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221007 01:14:43.966" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221007 01:14:43.981" level="INFO">${rc} = 0</msg>
<msg timestamp="20221007 01:14:43.981" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221007 01:14:43.964" endtime="20221007 01:14:43.981"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221007 01:14:43.983" level="INFO">200</msg>
<status status="PASS" starttime="20221007 01:14:43.982" endtime="20221007 01:14:43.983"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221007 01:14:43.984" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221007 01:14:43.983" endtime="20221007 01:14:43.984"/>
</kw>
<status status="PASS" starttime="20221007 01:14:43.963" endtime="20221007 01:14:43.984"/>
</kw>
<msg timestamp="20221007 01:14:43.984" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221007 01:14:43.963" endtime="20221007 01:14:43.985"/>
</kw>
<msg timestamp="20221007 01:14:43.985" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221007 01:14:43.962" endtime="20221007 01:14:43.985"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221007 01:14:43.986" endtime="20221007 01:14:43.986"/>
</kw>
<status status="NOT RUN" starttime="20221007 01:14:43.985" endtime="20221007 01:14:43.986"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221007 01:14:43.986" endtime="20221007 01:14:43.986"/>
</kw>
<status status="PASS" starttime="20221007 01:14:43.986" endtime="20221007 01:14:43.986"/>
</branch>
<status status="PASS" starttime="20221007 01:14:43.985" endtime="20221007 01:14:43.986"/>
</if>
<status status="PASS" starttime="20221007 01:14:43.962" endtime="20221007 01:14:43.986"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221007 01:14:43.987" endtime="20221007 01:14:43.987"/>
</kw>
<status status="PASS" starttime="20221007 01:14:43.986" endtime="20221007 01:14:43.987"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221007 01:14:43.992" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221007 01:14:44.033" level="INFO">${rc} = 0</msg>
<msg timestamp="20221007 01:14:44.033" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221007 01:14:43.989" endtime="20221007 01:14:44.033"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221007 01:14:44.034" level="INFO">200</msg>
<status status="PASS" starttime="20221007 01:14:44.034" endtime="20221007 01:14:44.034"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221007 01:14:44.035" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221007 01:14:44.035" endtime="20221007 01:14:44.035"/>
</kw>
<status status="PASS" starttime="20221007 01:14:43.989" endtime="20221007 01:14:44.035"/>
</kw>
<msg timestamp="20221007 01:14:44.035" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221007 01:14:43.989" endtime="20221007 01:14:44.036"/>
</kw>
<msg timestamp="20221007 01:14:44.036" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221007 01:14:43.988" endtime="20221007 01:14:44.036"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221007 01:14:44.038" endtime="20221007 01:14:44.038"/>
</kw>
<status status="NOT RUN" starttime="20221007 01:14:44.037" endtime="20221007 01:14:44.038"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221007 01:14:44.038" endtime="20221007 01:14:44.038"/>
</kw>
<status status="PASS" starttime="20221007 01:14:44.038" endtime="20221007 01:14:44.038"/>
</branch>
<status status="PASS" starttime="20221007 01:14:44.037" endtime="20221007 01:14:44.038"/>
</if>
<status status="PASS" starttime="20221007 01:14:43.988" endtime="20221007 01:14:44.038"/>
</kw>
<status status="PASS" starttime="20221007 01:14:43.886" endtime="20221007 01:14:44.038"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221007 01:14:43.885" endtime="20221007 01:14:44.039"/>
</test>
<test id="s1-s2-s2-t5" name="Check Disk Usage api access" line="112">
<kw name="Check Access">
<arg>${DISK_USAGE_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221007 01:14:44.044" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20221007 01:14:44.048" level="INFO">${rc} = 0</msg>
<msg timestamp="20221007 01:14:44.048" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221007 01:14:44.042" endtime="20221007 01:14:44.048"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221007 01:14:44.049" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221007 01:14:44.049" endtime="20221007 01:14:44.049"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221007 01:14:44.050" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221007 01:14:44.049" endtime="20221007 01:14:44.050"/>
</kw>
<status status="PASS" starttime="20221007 01:14:44.041" endtime="20221007 01:14:44.050"/>
</kw>
<msg timestamp="20221007 01:14:44.050" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221007 01:14:44.041" endtime="20221007 01:14:44.051"/>
</kw>
<status status="PASS" starttime="20221007 01:14:44.041" endtime="20221007 01:14:44.051"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221007 01:14:44.055" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221007 01:14:44.078" level="INFO">${rc} = 0</msg>
<msg timestamp="20221007 01:14:44.078" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221007 01:14:44.053" endtime="20221007 01:14:44.078"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221007 01:14:44.080" level="INFO">200</msg>
<status status="PASS" starttime="20221007 01:14:44.078" endtime="20221007 01:14:44.080"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221007 01:14:44.081" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221007 01:14:44.081" endtime="20221007 01:14:44.081"/>
</kw>
<status status="PASS" starttime="20221007 01:14:44.052" endtime="20221007 01:14:44.081"/>
</kw>
<msg timestamp="20221007 01:14:44.082" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221007 01:14:44.052" endtime="20221007 01:14:44.082"/>
</kw>
<msg timestamp="20221007 01:14:44.082" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221007 01:14:44.052" endtime="20221007 01:14:44.082"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221007 01:14:44.083" endtime="20221007 01:14:44.083"/>
</kw>
<status status="NOT RUN" starttime="20221007 01:14:44.083" endtime="20221007 01:14:44.083"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221007 01:14:44.083" endtime="20221007 01:14:44.085"/>
</kw>
<status status="PASS" starttime="20221007 01:14:44.083" endtime="20221007 01:14:44.085"/>
</branch>
<status status="PASS" starttime="20221007 01:14:44.082" endtime="20221007 01:14:44.085"/>
</if>
<status status="PASS" starttime="20221007 01:14:44.051" endtime="20221007 01:14:44.085"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221007 01:14:44.085" endtime="20221007 01:14:44.086"/>
</kw>
<status status="PASS" starttime="20221007 01:14:44.085" endtime="20221007 01:14:44.086"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221007 01:14:44.090" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221007 01:14:44.108" level="INFO">${rc} = 0</msg>
<msg timestamp="20221007 01:14:44.108" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221007 01:14:44.087" endtime="20221007 01:14:44.108"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221007 01:14:44.109" level="INFO">200</msg>
<status status="PASS" starttime="20221007 01:14:44.109" endtime="20221007 01:14:44.110"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221007 01:14:44.111" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221007 01:14:44.111" endtime="20221007 01:14:44.111"/>
</kw>
<status status="PASS" starttime="20221007 01:14:44.087" endtime="20221007 01:14:44.112"/>
</kw>
<msg timestamp="20221007 01:14:44.112" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221007 01:14:44.087" endtime="20221007 01:14:44.112"/>
</kw>
<msg timestamp="20221007 01:14:44.113" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221007 01:14:44.086" endtime="20221007 01:14:44.113"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221007 01:14:44.113" endtime="20221007 01:14:44.113"/>
</kw>
<status status="NOT RUN" starttime="20221007 01:14:44.113" endtime="20221007 01:14:44.113"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221007 01:14:44.113" endtime="20221007 01:14:44.114"/>
</kw>
<status status="PASS" starttime="20221007 01:14:44.113" endtime="20221007 01:14:44.114"/>
</branch>
<status status="PASS" starttime="20221007 01:14:44.113" endtime="20221007 01:14:44.114"/>
</if>
<status status="PASS" starttime="20221007 01:14:44.086" endtime="20221007 01:14:44.114"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221007 01:14:44.115" endtime="20221007 01:14:44.115"/>
</kw>
<status status="PASS" starttime="20221007 01:14:44.114" endtime="20221007 01:14:44.115"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221007 01:14:44.119" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221007 01:14:44.134" level="INFO">${rc} = 0</msg>
<msg timestamp="20221007 01:14:44.134" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221007 01:14:44.117" endtime="20221007 01:14:44.134"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221007 01:14:44.135" level="INFO">200</msg>
<status status="PASS" starttime="20221007 01:14:44.135" endtime="20221007 01:14:44.135"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221007 01:14:44.136" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221007 01:14:44.136" endtime="20221007 01:14:44.136"/>
</kw>
<status status="PASS" starttime="20221007 01:14:44.116" endtime="20221007 01:14:44.136"/>
</kw>
<msg timestamp="20221007 01:14:44.136" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221007 01:14:44.116" endtime="20221007 01:14:44.137"/>
</kw>
<msg timestamp="20221007 01:14:44.137" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221007 01:14:44.116" endtime="20221007 01:14:44.137"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221007 01:14:44.138" endtime="20221007 01:14:44.138"/>
</kw>
<status status="NOT RUN" starttime="20221007 01:14:44.138" endtime="20221007 01:14:44.138"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221007 01:14:44.138" endtime="20221007 01:14:44.138"/>
</kw>
<status status="PASS" starttime="20221007 01:14:44.138" endtime="20221007 01:14:44.138"/>
</branch>
<status status="PASS" starttime="20221007 01:14:44.137" endtime="20221007 01:14:44.138"/>
</if>
<status status="PASS" starttime="20221007 01:14:44.115" endtime="20221007 01:14:44.138"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221007 01:14:44.139" endtime="20221007 01:14:44.140"/>
</kw>
<status status="PASS" starttime="20221007 01:14:44.139" endtime="20221007 01:14:44.140"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221007 01:14:44.145" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221007 01:14:44.161" level="INFO">${rc} = 0</msg>
<msg timestamp="20221007 01:14:44.161" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221007 01:14:44.143" endtime="20221007 01:14:44.161"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221007 01:14:44.162" level="INFO">200</msg>
<status status="PASS" starttime="20221007 01:14:44.161" endtime="20221007 01:14:44.162"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221007 01:14:44.162" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221007 01:14:44.162" endtime="20221007 01:14:44.163"/>
</kw>
<status status="PASS" starttime="20221007 01:14:44.142" endtime="20221007 01:14:44.163"/>
</kw>
<msg timestamp="20221007 01:14:44.163" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221007 01:14:44.142" endtime="20221007 01:14:44.164"/>
</kw>
<msg timestamp="20221007 01:14:44.165" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221007 01:14:44.141" endtime="20221007 01:14:44.165"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221007 01:14:44.165" endtime="20221007 01:14:44.165"/>
</kw>
<status status="NOT RUN" starttime="20221007 01:14:44.165" endtime="20221007 01:14:44.165"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221007 01:14:44.165" endtime="20221007 01:14:44.166"/>
</kw>
<status status="PASS" starttime="20221007 01:14:44.165" endtime="20221007 01:14:44.166"/>
</branch>
<status status="PASS" starttime="20221007 01:14:44.165" endtime="20221007 01:14:44.166"/>
</if>
<status status="PASS" starttime="20221007 01:14:44.140" endtime="20221007 01:14:44.166"/>
</kw>
<status status="PASS" starttime="20221007 01:14:44.040" endtime="20221007 01:14:44.166"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221007 01:14:44.039" endtime="20221007 01:14:44.166"/>
</test>
<test id="s1-s2-s2-t6" name="Check Quota Usage api access" line="115">
<kw name="Check Access">
<arg>${QUOTA_USAGE_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221007 01:14:44.174" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20221007 01:14:44.177" level="INFO">${rc} = 0</msg>
<msg timestamp="20221007 01:14:44.177" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221007 01:14:44.171" endtime="20221007 01:14:44.177"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221007 01:14:44.178" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221007 01:14:44.178" endtime="20221007 01:14:44.178"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221007 01:14:44.179" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221007 01:14:44.179" endtime="20221007 01:14:44.179"/>
</kw>
<status status="PASS" starttime="20221007 01:14:44.171" endtime="20221007 01:14:44.179"/>
</kw>
<msg timestamp="20221007 01:14:44.179" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221007 01:14:44.170" endtime="20221007 01:14:44.180"/>
</kw>
<status status="PASS" starttime="20221007 01:14:44.170" endtime="20221007 01:14:44.180"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221007 01:14:44.184" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221007 01:14:44.201" level="INFO">${rc} = 0</msg>
<msg timestamp="20221007 01:14:44.201" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221007 01:14:44.182" endtime="20221007 01:14:44.201"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221007 01:14:44.202" level="INFO">200</msg>
<status status="PASS" starttime="20221007 01:14:44.201" endtime="20221007 01:14:44.202"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221007 01:14:44.203" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221007 01:14:44.202" endtime="20221007 01:14:44.203"/>
</kw>
<status status="PASS" starttime="20221007 01:14:44.181" endtime="20221007 01:14:44.203"/>
</kw>
<msg timestamp="20221007 01:14:44.203" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221007 01:14:44.181" endtime="20221007 01:14:44.204"/>
</kw>
<msg timestamp="20221007 01:14:44.204" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221007 01:14:44.181" endtime="20221007 01:14:44.204"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221007 01:14:44.204" endtime="20221007 01:14:44.204"/>
</kw>
<status status="NOT RUN" starttime="20221007 01:14:44.204" endtime="20221007 01:14:44.204"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221007 01:14:44.205" endtime="20221007 01:14:44.205"/>
</kw>
<status status="PASS" starttime="20221007 01:14:44.204" endtime="20221007 01:14:44.205"/>
</branch>
<status status="PASS" starttime="20221007 01:14:44.204" endtime="20221007 01:14:44.205"/>
</if>
<status status="PASS" starttime="20221007 01:14:44.180" endtime="20221007 01:14:44.205"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221007 01:14:44.206" endtime="20221007 01:14:44.206"/>
</kw>
<status status="PASS" starttime="20221007 01:14:44.205" endtime="20221007 01:14:44.206"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221007 01:14:44.210" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221007 01:14:44.225" level="INFO">${rc} = 0</msg>
<msg timestamp="20221007 01:14:44.225" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221007 01:14:44.208" endtime="20221007 01:14:44.225"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221007 01:14:44.226" level="INFO">200</msg>
<status status="PASS" starttime="20221007 01:14:44.225" endtime="20221007 01:14:44.226"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221007 01:14:44.226" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221007 01:14:44.226" endtime="20221007 01:14:44.226"/>
</kw>
<status status="PASS" starttime="20221007 01:14:44.208" endtime="20221007 01:14:44.227"/>
</kw>
<msg timestamp="20221007 01:14:44.227" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221007 01:14:44.207" endtime="20221007 01:14:44.227"/>
</kw>
<msg timestamp="20221007 01:14:44.228" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221007 01:14:44.207" endtime="20221007 01:14:44.228"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221007 01:14:44.228" endtime="20221007 01:14:44.228"/>
</kw>
<status status="NOT RUN" starttime="20221007 01:14:44.228" endtime="20221007 01:14:44.228"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221007 01:14:44.228" endtime="20221007 01:14:44.229"/>
</kw>
<status status="PASS" starttime="20221007 01:14:44.228" endtime="20221007 01:14:44.229"/>
</branch>
<status status="PASS" starttime="20221007 01:14:44.228" endtime="20221007 01:14:44.229"/>
</if>
<status status="PASS" starttime="20221007 01:14:44.206" endtime="20221007 01:14:44.229"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221007 01:14:44.229" endtime="20221007 01:14:44.230"/>
</kw>
<status status="PASS" starttime="20221007 01:14:44.229" endtime="20221007 01:14:44.230"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221007 01:14:44.234" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221007 01:14:44.250" level="INFO">${rc} = 0</msg>
<msg timestamp="20221007 01:14:44.250" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221007 01:14:44.232" endtime="20221007 01:14:44.250"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221007 01:14:44.251" level="INFO">200</msg>
<status status="PASS" starttime="20221007 01:14:44.250" endtime="20221007 01:14:44.251"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221007 01:14:44.252" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221007 01:14:44.251" endtime="20221007 01:14:44.252"/>
</kw>
<status status="PASS" starttime="20221007 01:14:44.231" endtime="20221007 01:14:44.252"/>
</kw>
<msg timestamp="20221007 01:14:44.252" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221007 01:14:44.231" endtime="20221007 01:14:44.253"/>
</kw>
<msg timestamp="20221007 01:14:44.253" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221007 01:14:44.230" endtime="20221007 01:14:44.253"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221007 01:14:44.253" endtime="20221007 01:14:44.253"/>
</kw>
<status status="NOT RUN" starttime="20221007 01:14:44.253" endtime="20221007 01:14:44.254"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221007 01:14:44.254" endtime="20221007 01:14:44.254"/>
</kw>
<status status="PASS" starttime="20221007 01:14:44.254" endtime="20221007 01:14:44.254"/>
</branch>
<status status="PASS" starttime="20221007 01:14:44.253" endtime="20221007 01:14:44.254"/>
</if>
<status status="PASS" starttime="20221007 01:14:44.230" endtime="20221007 01:14:44.254"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221007 01:14:44.255" endtime="20221007 01:14:44.255"/>
</kw>
<status status="PASS" starttime="20221007 01:14:44.254" endtime="20221007 01:14:44.255"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221007 01:14:44.259" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221007 01:14:44.274" level="INFO">${rc} = 0</msg>
<msg timestamp="20221007 01:14:44.274" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221007 01:14:44.257" endtime="20221007 01:14:44.274"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221007 01:14:44.275" level="INFO">200</msg>
<status status="PASS" starttime="20221007 01:14:44.274" endtime="20221007 01:14:44.275"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221007 01:14:44.276" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221007 01:14:44.275" endtime="20221007 01:14:44.276"/>
</kw>
<status status="PASS" starttime="20221007 01:14:44.257" endtime="20221007 01:14:44.276"/>
</kw>
<msg timestamp="20221007 01:14:44.276" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221007 01:14:44.257" endtime="20221007 01:14:44.277"/>
</kw>
<msg timestamp="20221007 01:14:44.277" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221007 01:14:44.256" endtime="20221007 01:14:44.277"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221007 01:14:44.277" endtime="20221007 01:14:44.277"/>
</kw>
<status status="NOT RUN" starttime="20221007 01:14:44.277" endtime="20221007 01:14:44.277"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221007 01:14:44.278" endtime="20221007 01:14:44.278"/>
</kw>
<status status="PASS" starttime="20221007 01:14:44.278" endtime="20221007 01:14:44.278"/>
</branch>
<status status="PASS" starttime="20221007 01:14:44.277" endtime="20221007 01:14:44.278"/>
</if>
<status status="PASS" starttime="20221007 01:14:44.255" endtime="20221007 01:14:44.278"/>
</kw>
<status status="PASS" starttime="20221007 01:14:44.169" endtime="20221007 01:14:44.278"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221007 01:14:44.168" endtime="20221007 01:14:44.279"/>
</test>
<test id="s1-s2-s2-t7" name="Check File Size Distribution api access" line="118">
<kw name="Check Access">
<arg>${FILE_SIZE_DIST_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221007 01:14:44.285" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20221007 01:14:44.288" level="INFO">${rc} = 0</msg>
<msg timestamp="20221007 01:14:44.288" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221007 01:14:44.282" endtime="20221007 01:14:44.288"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221007 01:14:44.289" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221007 01:14:44.289" endtime="20221007 01:14:44.289"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221007 01:14:44.290" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221007 01:14:44.289" endtime="20221007 01:14:44.290"/>
</kw>
<status status="PASS" starttime="20221007 01:14:44.282" endtime="20221007 01:14:44.290"/>
</kw>
<msg timestamp="20221007 01:14:44.290" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221007 01:14:44.281" endtime="20221007 01:14:44.291"/>
</kw>
<status status="PASS" starttime="20221007 01:14:44.281" endtime="20221007 01:14:44.291"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221007 01:14:44.295" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221007 01:14:44.314" level="INFO">${rc} = 0</msg>
<msg timestamp="20221007 01:14:44.314" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221007 01:14:44.293" endtime="20221007 01:14:44.315"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221007 01:14:44.317" level="INFO">200</msg>
<status status="PASS" starttime="20221007 01:14:44.315" endtime="20221007 01:14:44.317"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221007 01:14:44.318" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221007 01:14:44.318" endtime="20221007 01:14:44.318"/>
</kw>
<status status="PASS" starttime="20221007 01:14:44.292" endtime="20221007 01:14:44.318"/>
</kw>
<msg timestamp="20221007 01:14:44.319" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221007 01:14:44.292" endtime="20221007 01:14:44.319"/>
</kw>
<msg timestamp="20221007 01:14:44.319" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221007 01:14:44.292" endtime="20221007 01:14:44.319"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221007 01:14:44.320" endtime="20221007 01:14:44.320"/>
</kw>
<status status="NOT RUN" starttime="20221007 01:14:44.320" endtime="20221007 01:14:44.320"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221007 01:14:44.320" endtime="20221007 01:14:44.320"/>
</kw>
<status status="PASS" starttime="20221007 01:14:44.320" endtime="20221007 01:14:44.320"/>
</branch>
<status status="PASS" starttime="20221007 01:14:44.319" endtime="20221007 01:14:44.320"/>
</if>
<status status="PASS" starttime="20221007 01:14:44.291" endtime="20221007 01:14:44.321"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221007 01:14:44.321" endtime="20221007 01:14:44.322"/>
</kw>
<status status="PASS" starttime="20221007 01:14:44.321" endtime="20221007 01:14:44.322"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221007 01:14:44.326" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221007 01:14:44.342" level="INFO">${rc} = 0</msg>
<msg timestamp="20221007 01:14:44.342" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221007 01:14:44.323" endtime="20221007 01:14:44.342"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221007 01:14:44.344" level="INFO">200</msg>
<status status="PASS" starttime="20221007 01:14:44.343" endtime="20221007 01:14:44.344"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221007 01:14:44.344" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221007 01:14:44.344" endtime="20221007 01:14:44.344"/>
</kw>
<status status="PASS" starttime="20221007 01:14:44.323" endtime="20221007 01:14:44.345"/>
</kw>
<msg timestamp="20221007 01:14:44.345" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221007 01:14:44.323" endtime="20221007 01:14:44.345"/>
</kw>
<msg timestamp="20221007 01:14:44.345" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221007 01:14:44.322" endtime="20221007 01:14:44.345"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221007 01:14:44.346" endtime="20221007 01:14:44.346"/>
</kw>
<status status="NOT RUN" starttime="20221007 01:14:44.346" endtime="20221007 01:14:44.346"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221007 01:14:44.346" endtime="20221007 01:14:44.347"/>
</kw>
<status status="PASS" starttime="20221007 01:14:44.346" endtime="20221007 01:14:44.347"/>
</branch>
<status status="PASS" starttime="20221007 01:14:44.346" endtime="20221007 01:14:44.347"/>
</if>
<status status="PASS" starttime="20221007 01:14:44.322" endtime="20221007 01:14:44.347"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221007 01:14:44.348" endtime="20221007 01:14:44.348"/>
</kw>
<status status="PASS" starttime="20221007 01:14:44.347" endtime="20221007 01:14:44.348"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221007 01:14:44.352" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221007 01:14:44.366" level="INFO">${rc} = 0</msg>
<msg timestamp="20221007 01:14:44.366" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221007 01:14:44.350" endtime="20221007 01:14:44.366"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221007 01:14:44.367" level="INFO">200</msg>
<status status="PASS" starttime="20221007 01:14:44.366" endtime="20221007 01:14:44.367"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221007 01:14:44.368" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221007 01:14:44.367" endtime="20221007 01:14:44.368"/>
</kw>
<status status="PASS" starttime="20221007 01:14:44.349" endtime="20221007 01:14:44.368"/>
</kw>
<msg timestamp="20221007 01:14:44.368" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221007 01:14:44.349" endtime="20221007 01:14:44.369"/>
</kw>
<msg timestamp="20221007 01:14:44.369" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221007 01:14:44.349" endtime="20221007 01:14:44.369"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221007 01:14:44.369" endtime="20221007 01:14:44.369"/>
</kw>
<status status="NOT RUN" starttime="20221007 01:14:44.369" endtime="20221007 01:14:44.369"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221007 01:14:44.370" endtime="20221007 01:14:44.370"/>
</kw>
<status status="PASS" starttime="20221007 01:14:44.369" endtime="20221007 01:14:44.370"/>
</branch>
<status status="PASS" starttime="20221007 01:14:44.369" endtime="20221007 01:14:44.370"/>
</if>
<status status="PASS" starttime="20221007 01:14:44.348" endtime="20221007 01:14:44.370"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221007 01:14:44.371" endtime="20221007 01:14:44.371"/>
</kw>
<status status="PASS" starttime="20221007 01:14:44.370" endtime="20221007 01:14:44.371"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221007 01:14:44.375" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221007 01:14:44.390" level="INFO">${rc} = 0</msg>
<msg timestamp="20221007 01:14:44.390" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221007 01:14:44.373" endtime="20221007 01:14:44.390"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221007 01:14:44.392" level="INFO">200</msg>
<status status="PASS" starttime="20221007 01:14:44.391" endtime="20221007 01:14:44.392"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221007 01:14:44.392" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221007 01:14:44.392" endtime="20221007 01:14:44.392"/>
</kw>
<status status="PASS" starttime="20221007 01:14:44.372" endtime="20221007 01:14:44.393"/>
</kw>
<msg timestamp="20221007 01:14:44.393" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221007 01:14:44.372" endtime="20221007 01:14:44.393"/>
</kw>
<msg timestamp="20221007 01:14:44.393" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221007 01:14:44.372" endtime="20221007 01:14:44.394"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221007 01:14:44.394" endtime="20221007 01:14:44.394"/>
</kw>
<status status="NOT RUN" starttime="20221007 01:14:44.394" endtime="20221007 01:14:44.394"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221007 01:14:44.394" endtime="20221007 01:14:44.395"/>
</kw>
<status status="PASS" starttime="20221007 01:14:44.394" endtime="20221007 01:14:44.395"/>
</branch>
<status status="PASS" starttime="20221007 01:14:44.394" endtime="20221007 01:14:44.395"/>
</if>
<status status="PASS" starttime="20221007 01:14:44.371" endtime="20221007 01:14:44.395"/>
</kw>
<status status="PASS" starttime="20221007 01:14:44.280" endtime="20221007 01:14:44.395"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221007 01:14:44.280" endtime="20221007 01:14:44.395"/>
</test>
<test id="s1-s2-s2-t8" name="Check Recon Namespace Summary Root" line="121">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/</arg>
<arg>ROOT</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221007 01:14:44.402" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221007 01:14:44.416" level="INFO">${rc} = 0</msg>
<msg timestamp="20221007 01:14:44.416" level="INFO">${output} = {"type":"ROOT","numVolume":3,"numBucket":2,"numDir":0,"numKey":0,"status":"OK"}</msg>
<status status="PASS" starttime="20221007 01:14:44.400" endtime="20221007 01:14:44.416"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221007 01:14:44.417" level="INFO">{"type":"ROOT","numVolume":3,"numBucket":2,"numDir":0,"numKey":0,"status":"OK"}</msg>
<status status="PASS" starttime="20221007 01:14:44.416" endtime="20221007 01:14:44.417"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221007 01:14:44.418" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221007 01:14:44.417" endtime="20221007 01:14:44.418"/>
</kw>
<status status="PASS" starttime="20221007 01:14:44.399" endtime="20221007 01:14:44.418"/>
</kw>
<msg timestamp="20221007 01:14:44.418" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221007 01:14:44.399" endtime="20221007 01:14:44.419"/>
</kw>
<msg timestamp="20221007 01:14:44.419" level="INFO">${result} = {"type":"ROOT","numVolume":3,"numBucket":2,"numDir":0,"numKey":0,"status":"OK"}</msg>
<status status="PASS" starttime="20221007 01:14:44.399" endtime="20221007 01:14:44.419"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221007 01:14:44.419" endtime="20221007 01:14:44.420"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221007 01:14:44.420" endtime="20221007 01:14:44.420"/>
</kw>
<status status="PASS" starttime="20221007 01:14:44.398" endtime="20221007 01:14:44.420"/>
</kw>
<status status="PASS" starttime="20221007 01:14:44.398" endtime="20221007 01:14:44.420"/>
</kw>
<status status="PASS" starttime="20221007 01:14:44.397" endtime="20221007 01:14:44.420"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221007 01:14:44.396" endtime="20221007 01:14:44.421"/>
</test>
<test id="s1-s2-s2-t9" name="Check Recon Namespace Summary Volume" line="124">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}</arg>
<arg>VOLUME</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221007 01:14:44.428" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-lnsjj 2&gt;&amp;1'.</msg>
<msg timestamp="20221007 01:14:44.441" level="INFO">${rc} = 0</msg>
<msg timestamp="20221007 01:14:44.441" level="INFO">${output} = {"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221007 01:14:44.425" endtime="20221007 01:14:44.441"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221007 01:14:44.442" level="INFO">{"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221007 01:14:44.442" endtime="20221007 01:14:44.442"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221007 01:14:44.443" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221007 01:14:44.443" endtime="20221007 01:14:44.443"/>
</kw>
<status status="PASS" starttime="20221007 01:14:44.425" endtime="20221007 01:14:44.443"/>
</kw>
<msg timestamp="20221007 01:14:44.443" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221007 01:14:44.425" endtime="20221007 01:14:44.444"/>
</kw>
<msg timestamp="20221007 01:14:44.444" level="INFO">${result} = {"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221007 01:14:44.424" endtime="20221007 01:14:44.444"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20221007 01:14:44.445" level="FAIL">'{"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20221007 01:14:44.444" endtime="20221007 01:14:44.445"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221007 01:14:44.446" endtime="20221007 01:14:44.446"/>
</kw>
<status status="FAIL" starttime="20221007 01:14:44.423" endtime="20221007 01:14:44.446"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221007 01:14:54.452" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-lnsjj 2&gt;&amp;1'.</msg>
<msg timestamp="20221007 01:14:54.466" level="INFO">${rc} = 0</msg>
<msg timestamp="20221007 01:14:54.466" level="INFO">${output} = {"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221007 01:14:54.449" endtime="20221007 01:14:54.466"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221007 01:14:54.467" level="INFO">{"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221007 01:14:54.467" endtime="20221007 01:14:54.467"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221007 01:14:54.468" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221007 01:14:54.467" endtime="20221007 01:14:54.468"/>
</kw>
<status status="PASS" starttime="20221007 01:14:54.449" endtime="20221007 01:14:54.468"/>
</kw>
<msg timestamp="20221007 01:14:54.468" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221007 01:14:54.449" endtime="20221007 01:14:54.469"/>
</kw>
<msg timestamp="20221007 01:14:54.469" level="INFO">${result} = {"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221007 01:14:54.448" endtime="20221007 01:14:54.469"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20221007 01:14:54.470" level="FAIL">'{"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20221007 01:14:54.469" endtime="20221007 01:14:54.470"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221007 01:14:54.471" endtime="20221007 01:14:54.471"/>
</kw>
<status status="FAIL" starttime="20221007 01:14:54.447" endtime="20221007 01:14:54.471"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221007 01:15:04.477" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-lnsjj 2&gt;&amp;1'.</msg>
<msg timestamp="20221007 01:15:04.491" level="INFO">${rc} = 0</msg>
<msg timestamp="20221007 01:15:04.491" level="INFO">${output} = {"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221007 01:15:04.475" endtime="20221007 01:15:04.491"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221007 01:15:04.492" level="INFO">{"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221007 01:15:04.491" endtime="20221007 01:15:04.492"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221007 01:15:04.493" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221007 01:15:04.492" endtime="20221007 01:15:04.493"/>
</kw>
<status status="PASS" starttime="20221007 01:15:04.474" endtime="20221007 01:15:04.493"/>
</kw>
<msg timestamp="20221007 01:15:04.493" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221007 01:15:04.473" endtime="20221007 01:15:04.494"/>
</kw>
<msg timestamp="20221007 01:15:04.494" level="INFO">${result} = {"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221007 01:15:04.473" endtime="20221007 01:15:04.494"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20221007 01:15:04.495" level="FAIL">'{"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20221007 01:15:04.494" endtime="20221007 01:15:04.495"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221007 01:15:04.496" endtime="20221007 01:15:04.496"/>
</kw>
<status status="FAIL" starttime="20221007 01:15:04.472" endtime="20221007 01:15:04.497"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221007 01:15:14.502" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-lnsjj 2&gt;&amp;1'.</msg>
<msg timestamp="20221007 01:15:14.517" level="INFO">${rc} = 0</msg>
<msg timestamp="20221007 01:15:14.517" level="INFO">${output} = {"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221007 01:15:14.499" endtime="20221007 01:15:14.517"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221007 01:15:14.518" level="INFO">{"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221007 01:15:14.517" endtime="20221007 01:15:14.518"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221007 01:15:14.519" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221007 01:15:14.519" endtime="20221007 01:15:14.519"/>
</kw>
<status status="PASS" starttime="20221007 01:15:14.499" endtime="20221007 01:15:14.519"/>
</kw>
<msg timestamp="20221007 01:15:14.519" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221007 01:15:14.499" endtime="20221007 01:15:14.520"/>
</kw>
<msg timestamp="20221007 01:15:14.520" level="INFO">${result} = {"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221007 01:15:14.498" endtime="20221007 01:15:14.520"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20221007 01:15:14.521" level="FAIL">'{"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20221007 01:15:14.520" endtime="20221007 01:15:14.521"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221007 01:15:14.522" endtime="20221007 01:15:14.522"/>
</kw>
<status status="FAIL" starttime="20221007 01:15:14.497" endtime="20221007 01:15:14.523"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221007 01:15:24.528" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-lnsjj 2&gt;&amp;1'.</msg>
<msg timestamp="20221007 01:15:24.545" level="INFO">${rc} = 0</msg>
<msg timestamp="20221007 01:15:24.545" level="INFO">${output} = {"type":"VOLUME","numVolume":-1,"numBucket":1,"numDir":2,"numKey":2,"status":"OK"}</msg>
<status status="PASS" starttime="20221007 01:15:24.526" endtime="20221007 01:15:24.545"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221007 01:15:24.546" level="INFO">{"type":"VOLUME","numVolume":-1,"numBucket":1,"numDir":2,"numKey":2,"status":"OK"}</msg>
<status status="PASS" starttime="20221007 01:15:24.546" endtime="20221007 01:15:24.547"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221007 01:15:24.547" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221007 01:15:24.547" endtime="20221007 01:15:24.547"/>
</kw>
<status status="PASS" starttime="20221007 01:15:24.525" endtime="20221007 01:15:24.548"/>
</kw>
<msg timestamp="20221007 01:15:24.548" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221007 01:15:24.525" endtime="20221007 01:15:24.548"/>
</kw>
<msg timestamp="20221007 01:15:24.548" level="INFO">${result} = {"type":"VOLUME","numVolume":-1,"numBucket":1,"numDir":2,"numKey":2,"status":"OK"}</msg>
<status status="PASS" starttime="20221007 01:15:24.524" endtime="20221007 01:15:24.548"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221007 01:15:24.549" endtime="20221007 01:15:24.549"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221007 01:15:24.549" endtime="20221007 01:15:24.549"/>
</kw>
<status status="PASS" starttime="20221007 01:15:24.523" endtime="20221007 01:15:24.550"/>
</kw>
<status status="PASS" starttime="20221007 01:14:44.423" endtime="20221007 01:15:24.550"/>
</kw>
<status status="PASS" starttime="20221007 01:14:44.422" endtime="20221007 01:15:24.550"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221007 01:14:44.422" endtime="20221007 01:15:24.550"/>
</test>
<test id="s1-s2-s2-t10" name="Check Recon Namespace Summary Bucket" line="127">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}</arg>
<arg>BUCKET</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221007 01:15:24.557" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-lnsjj/buc-kfvoz 2&gt;&amp;1'.</msg>
<msg timestamp="20221007 01:15:24.574" level="INFO">${rc} = 0</msg>
<msg timestamp="20221007 01:15:24.574" level="INFO">${output} = {"type":"BUCKET","numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2,"status":"OK"}</msg>
<status status="PASS" starttime="20221007 01:15:24.555" endtime="20221007 01:15:24.574"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221007 01:15:24.575" level="INFO">{"type":"BUCKET","numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2,"status":"OK"}</msg>
<status status="PASS" starttime="20221007 01:15:24.575" endtime="20221007 01:15:24.575"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221007 01:15:24.576" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221007 01:15:24.576" endtime="20221007 01:15:24.576"/>
</kw>
<status status="PASS" starttime="20221007 01:15:24.555" endtime="20221007 01:15:24.576"/>
</kw>
<msg timestamp="20221007 01:15:24.576" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221007 01:15:24.554" endtime="20221007 01:15:24.577"/>
</kw>
<msg timestamp="20221007 01:15:24.577" level="INFO">${result} = {"type":"BUCKET","numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2,"status":"OK"}</msg>
<status status="PASS" starttime="20221007 01:15:24.554" endtime="20221007 01:15:24.577"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221007 01:15:24.577" endtime="20221007 01:15:24.578"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221007 01:15:24.578" endtime="20221007 01:15:24.578"/>
</kw>
<status status="PASS" starttime="20221007 01:15:24.553" endtime="20221007 01:15:24.578"/>
</kw>
<status status="PASS" starttime="20221007 01:15:24.553" endtime="20221007 01:15:24.578"/>
</kw>
<status status="PASS" starttime="20221007 01:15:24.552" endtime="20221007 01:15:24.578"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221007 01:15:24.551" endtime="20221007 01:15:24.579"/>
</test>
<test id="s1-s2-s2-t11" name="Check Recon Namespace Summary Key" line="130">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/file1</arg>
<arg>KEY</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221007 01:15:24.585" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-lnsjj/buc-kfvoz/file1 2&gt;&amp;1'.</msg>
<msg timestamp="20221007 01:15:24.600" level="INFO">${rc} = 0</msg>
<msg timestamp="20221007 01:15:24.601" level="INFO">${output} = {"type":"KEY","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"OK"}</msg>
<status status="PASS" starttime="20221007 01:15:24.583" endtime="20221007 01:15:24.601"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221007 01:15:24.602" level="INFO">{"type":"KEY","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"OK"}</msg>
<status status="PASS" starttime="20221007 01:15:24.601" endtime="20221007 01:15:24.603"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221007 01:15:24.603" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221007 01:15:24.603" endtime="20221007 01:15:24.603"/>
</kw>
<status status="PASS" starttime="20221007 01:15:24.583" endtime="20221007 01:15:24.604"/>
</kw>
<msg timestamp="20221007 01:15:24.604" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221007 01:15:24.582" endtime="20221007 01:15:24.605"/>
</kw>
<msg timestamp="20221007 01:15:24.605" level="INFO">${result} = {"type":"KEY","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"OK"}</msg>
<status status="PASS" starttime="20221007 01:15:24.582" endtime="20221007 01:15:24.605"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221007 01:15:24.605" endtime="20221007 01:15:24.605"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221007 01:15:24.605" endtime="20221007 01:15:24.606"/>
</kw>
<status status="PASS" starttime="20221007 01:15:24.581" endtime="20221007 01:15:24.606"/>
</kw>
<status status="PASS" starttime="20221007 01:15:24.581" endtime="20221007 01:15:24.606"/>
</kw>
<status status="PASS" starttime="20221007 01:15:24.580" endtime="20221007 01:15:24.606"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221007 01:15:24.579" endtime="20221007 01:15:24.606"/>
</test>
<test id="s1-s2-s2-t12" name="Check Recon Namespace Summary Directory" line="133">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2</arg>
<arg>DIRECTORY</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221007 01:15:24.616" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-lnsjj/buc-kfvoz/dir1/dir2 2&gt;&amp;1'.</msg>
<msg timestamp="20221007 01:15:24.635" level="INFO">${rc} = 0</msg>
<msg timestamp="20221007 01:15:24.635" level="INFO">${output} = {"type":"DIRECTORY","numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1,"status":"OK"}</msg>
<status status="PASS" starttime="20221007 01:15:24.614" endtime="20221007 01:15:24.635"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221007 01:15:24.636" level="INFO">{"type":"DIRECTORY","numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1,"status":"OK"}</msg>
<status status="PASS" starttime="20221007 01:15:24.635" endtime="20221007 01:15:24.636"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221007 01:15:24.637" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221007 01:15:24.636" endtime="20221007 01:15:24.637"/>
</kw>
<status status="PASS" starttime="20221007 01:15:24.613" endtime="20221007 01:15:24.637"/>
</kw>
<msg timestamp="20221007 01:15:24.637" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221007 01:15:24.613" endtime="20221007 01:15:24.638"/>
</kw>
<msg timestamp="20221007 01:15:24.638" level="INFO">${result} = {"type":"DIRECTORY","numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1,"status":"OK"}</msg>
<status status="PASS" starttime="20221007 01:15:24.613" endtime="20221007 01:15:24.638"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221007 01:15:24.638" endtime="20221007 01:15:24.639"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221007 01:15:24.639" endtime="20221007 01:15:24.639"/>
</kw>
<status status="PASS" starttime="20221007 01:15:24.612" endtime="20221007 01:15:24.639"/>
</kw>
<status status="PASS" starttime="20221007 01:15:24.611" endtime="20221007 01:15:24.639"/>
</kw>
<status status="PASS" starttime="20221007 01:15:24.611" endtime="20221007 01:15:24.640"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221007 01:15:24.610" endtime="20221007 01:15:24.640"/>
</test>
<test id="s1-s2-s2-t13" name="Check Recon Namespace Disk Usage" line="136">
<kw name="Wait For Summary">
<arg>${DISK_USAGE_URL}?path=/${VOLUME}/${BUCKET}&amp;files=true&amp;replica=true</arg>
<arg>\"sizeWithReplica\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221007 01:15:24.647" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/du?path=/vol-lnsjj/buc-kfvoz&amp;files=true&amp;replica=true 2&gt;&amp;1'.</msg>
<msg timestamp="20221007 01:15:24.661" level="INFO">${rc} = 0</msg>
<msg timestamp="20221007 01:15:24.661" level="INFO">${output} = {"status":"OK","path":"/vol-lnsjj/buc-kfvoz","size":9849,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-lnsjj/buc-kfvoz/dir1","size":6038,"sizeWithReplica":-1,"isKey":fals...</msg>
<status status="PASS" starttime="20221007 01:15:24.645" endtime="20221007 01:15:24.661"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221007 01:15:24.663" level="INFO">{"status":"OK","path":"/vol-lnsjj/buc-kfvoz","size":9849,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-lnsjj/buc-kfvoz/dir1","size":6038,"sizeWithReplica":-1,"isKey":false}],"sizeDirectKey":3811}</msg>
<status status="PASS" starttime="20221007 01:15:24.662" endtime="20221007 01:15:24.663"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221007 01:15:24.664" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221007 01:15:24.663" endtime="20221007 01:15:24.664"/>
</kw>
<status status="PASS" starttime="20221007 01:15:24.644" endtime="20221007 01:15:24.664"/>
</kw>
<msg timestamp="20221007 01:15:24.665" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221007 01:15:24.644" endtime="20221007 01:15:24.665"/>
</kw>
<msg timestamp="20221007 01:15:24.665" level="INFO">${result} = {"status":"OK","path":"/vol-lnsjj/buc-kfvoz","size":9849,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-lnsjj/buc-kfvoz/dir1","size":6038,"sizeWithReplica":-1,"isKey":fals...</msg>
<status status="PASS" starttime="20221007 01:15:24.643" endtime="20221007 01:15:24.665"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221007 01:15:24.666" endtime="20221007 01:15:24.666"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221007 01:15:24.666" endtime="20221007 01:15:24.666"/>
</kw>
<status status="PASS" starttime="20221007 01:15:24.643" endtime="20221007 01:15:24.668"/>
</kw>
<status status="PASS" starttime="20221007 01:15:24.642" endtime="20221007 01:15:24.668"/>
</kw>
<status status="PASS" starttime="20221007 01:15:24.642" endtime="20221007 01:15:24.668"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221007 01:15:24.641" endtime="20221007 01:15:24.668"/>
</test>
<test id="s1-s2-s2-t14" name="Check Recon Namespace Volume Quota Usage" line="139">
<kw name="Wait For Summary">
<arg>${QUOTA_USAGE_URL}?path=/${VOLUME}</arg>
<arg>\"used\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221007 01:15:24.676" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/quota?path=/vol-lnsjj 2&gt;&amp;1'.</msg>
<msg timestamp="20221007 01:15:24.690" level="INFO">${rc} = 0</msg>
<msg timestamp="20221007 01:15:24.690" level="INFO">${output} = {"allowed":-1,"used":9849,"status":"OK"}</msg>
<status status="PASS" starttime="20221007 01:15:24.673" endtime="20221007 01:15:24.690"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221007 01:15:24.692" level="INFO">{"allowed":-1,"used":9849,"status":"OK"}</msg>
<status status="PASS" starttime="20221007 01:15:24.691" endtime="20221007 01:15:24.692"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221007 01:15:24.692" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221007 01:15:24.692" endtime="20221007 01:15:24.692"/>
</kw>
<status status="PASS" starttime="20221007 01:15:24.673" endtime="20221007 01:15:24.693"/>
</kw>
<msg timestamp="20221007 01:15:24.693" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221007 01:15:24.673" endtime="20221007 01:15:24.693"/>
</kw>
<msg timestamp="20221007 01:15:24.694" level="INFO">${result} = {"allowed":-1,"used":9849,"status":"OK"}</msg>
<status status="PASS" starttime="20221007 01:15:24.672" endtime="20221007 01:15:24.694"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221007 01:15:24.694" endtime="20221007 01:15:24.694"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221007 01:15:24.694" endtime="20221007 01:15:24.695"/>
</kw>
<status status="PASS" starttime="20221007 01:15:24.671" endtime="20221007 01:15:24.695"/>
</kw>
<status status="PASS" starttime="20221007 01:15:24.671" endtime="20221007 01:15:24.695"/>
</kw>
<status status="PASS" starttime="20221007 01:15:24.670" endtime="20221007 01:15:24.695"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221007 01:15:24.669" endtime="20221007 01:15:24.695"/>
</test>
<test id="s1-s2-s2-t15" name="Check Recon Namespace Bucket Quota Usage" line="142">
<kw name="Wait For Summary">
<arg>${QUOTA_USAGE_URL}?path=/${VOLUME}/${BUCKET}</arg>
<arg>\"used\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221007 01:15:24.702" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/quota?path=/vol-lnsjj/buc-kfvoz 2&gt;&amp;1'.</msg>
<msg timestamp="20221007 01:15:24.716" level="INFO">${rc} = 0</msg>
<msg timestamp="20221007 01:15:24.716" level="INFO">${output} = {"allowed":-1,"used":9849,"status":"OK"}</msg>
<status status="PASS" starttime="20221007 01:15:24.700" endtime="20221007 01:15:24.716"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221007 01:15:24.717" level="INFO">{"allowed":-1,"used":9849,"status":"OK"}</msg>
<status status="PASS" starttime="20221007 01:15:24.717" endtime="20221007 01:15:24.717"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221007 01:15:24.718" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221007 01:15:24.717" endtime="20221007 01:15:24.718"/>
</kw>
<status status="PASS" starttime="20221007 01:15:24.699" endtime="20221007 01:15:24.718"/>
</kw>
<msg timestamp="20221007 01:15:24.718" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221007 01:15:24.699" endtime="20221007 01:15:24.719"/>
</kw>
<msg timestamp="20221007 01:15:24.719" level="INFO">${result} = {"allowed":-1,"used":9849,"status":"OK"}</msg>
<status status="PASS" starttime="20221007 01:15:24.698" endtime="20221007 01:15:24.719"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221007 01:15:24.719" endtime="20221007 01:15:24.720"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221007 01:15:24.720" endtime="20221007 01:15:24.720"/>
</kw>
<status status="PASS" starttime="20221007 01:15:24.698" endtime="20221007 01:15:24.720"/>
</kw>
<status status="PASS" starttime="20221007 01:15:24.698" endtime="20221007 01:15:24.720"/>
</kw>
<status status="PASS" starttime="20221007 01:15:24.697" endtime="20221007 01:15:24.721"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221007 01:15:24.696" endtime="20221007 01:15:24.721"/>
</test>
<test id="s1-s2-s2-t16" name="Check Recon Namespace File Size Distribution Root" line="145">
<kw name="Wait For Summary">
<arg>${FILE_SIZE_DIST_URL}?path=/</arg>
<arg>\"dist\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221007 01:15:24.728" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221007 01:15:24.749" level="INFO">${rc} = 0</msg>
<msg timestamp="20221007 01:15:24.749" level="INFO">${output} = {"dist":[0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20221007 01:15:24.726" endtime="20221007 01:15:24.749"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221007 01:15:24.750" level="INFO">{"dist":[0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20221007 01:15:24.750" endtime="20221007 01:15:24.750"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221007 01:15:24.751" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221007 01:15:24.751" endtime="20221007 01:15:24.751"/>
</kw>
<status status="PASS" starttime="20221007 01:15:24.724" endtime="20221007 01:15:24.751"/>
</kw>
<msg timestamp="20221007 01:15:24.752" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221007 01:15:24.724" endtime="20221007 01:15:24.752"/>
</kw>
<msg timestamp="20221007 01:15:24.752" level="INFO">${result} = {"dist":[0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20221007 01:15:24.724" endtime="20221007 01:15:24.753"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221007 01:15:24.753" endtime="20221007 01:15:24.753"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221007 01:15:24.753" endtime="20221007 01:15:24.754"/>
</kw>
<status status="PASS" starttime="20221007 01:15:24.723" endtime="20221007 01:15:24.754"/>
</kw>
<status status="PASS" starttime="20221007 01:15:24.723" endtime="20221007 01:15:24.754"/>
</kw>
<status status="PASS" starttime="20221007 01:15:24.722" endtime="20221007 01:15:24.754"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221007 01:15:24.721" endtime="20221007 01:15:24.754"/>
</test>
<doc>Smoke test for Recon Namespace Summary Endpoint for FSO buckets.</doc>
<status status="PASS" starttime="20221007 01:14:26.253" endtime="20221007 01:15:24.755"/>
</suite>
<status status="PASS" starttime="20221007 01:13:35.859" endtime="20221007 01:15:24.758"/>
</suite>
<suite id="s1-s3" name="Loaddata" source="/opt/hadoop/smoketest/topology/loaddata.robot">
<test id="s1-s3-t1" name="Create a volume, bucket and key" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create topvol1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221007 01:15:29.789" level="INFO">Running command 'ozone sh volume create topvol1 2&gt;&amp;1'.</msg>
<msg timestamp="20221007 01:15:33.222" level="INFO">${rc} = 0</msg>
<msg timestamp="20221007 01:15:33.223" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221007 01:15:29.784" endtime="20221007 01:15:33.223"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221007 01:15:33.224" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221007 01:15:33.223" endtime="20221007 01:15:33.224"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221007 01:15:33.224" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221007 01:15:33.224" endtime="20221007 01:15:33.225"/>
</kw>
<status status="PASS" starttime="20221007 01:15:29.784" endtime="20221007 01:15:33.225"/>
</kw>
<msg timestamp="20221007 01:15:33.225" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221007 01:15:29.783" endtime="20221007 01:15:33.226"/>
</kw>
<msg timestamp="20221007 01:15:33.226" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221007 01:15:29.783" endtime="20221007 01:15:33.226"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20221007 01:15:33.227" endtime="20221007 01:15:33.227"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /topvol1/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221007 01:15:33.231" level="INFO">Running command 'ozone sh bucket create /topvol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20221007 01:15:36.467" level="INFO">${rc} = 0</msg>
<msg timestamp="20221007 01:15:36.467" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221007 01:15:33.228" endtime="20221007 01:15:36.467"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221007 01:15:36.468" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221007 01:15:36.468" endtime="20221007 01:15:36.469"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221007 01:15:36.469" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221007 01:15:36.469" endtime="20221007 01:15:36.469"/>
</kw>
<status status="PASS" starttime="20221007 01:15:33.228" endtime="20221007 01:15:36.470"/>
</kw>
<msg timestamp="20221007 01:15:36.470" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221007 01:15:33.228" endtime="20221007 01:15:36.470"/>
</kw>
<msg timestamp="20221007 01:15:36.470" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221007 01:15:33.227" endtime="20221007 01:15:36.470"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20221007 01:15:36.470" endtime="20221007 01:15:36.471"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221007 01:15:36.474" level="INFO">Running command 'ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20221007 01:15:42.196" level="INFO">${rc} = 0</msg>
<msg timestamp="20221007 01:15:42.196" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221007 01:15:36.472" endtime="20221007 01:15:42.196"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221007 01:15:42.197" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221007 01:15:42.197" endtime="20221007 01:15:42.197"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221007 01:15:42.198" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221007 01:15:42.198" endtime="20221007 01:15:42.198"/>
</kw>
<status status="PASS" starttime="20221007 01:15:36.472" endtime="20221007 01:15:42.198"/>
</kw>
<msg timestamp="20221007 01:15:42.198" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221007 01:15:36.471" endtime="20221007 01:15:42.199"/>
</kw>
<msg timestamp="20221007 01:15:42.199" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221007 01:15:36.471" endtime="20221007 01:15:42.199"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20221007 01:15:42.199" endtime="20221007 01:15:42.200"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221007 01:15:29.782" endtime="20221007 01:15:42.200"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20221007 01:15:29.737" endtime="20221007 01:15:42.201"/>
</suite>
<suite id="s1-s4" name="readdata-first-half" source="/opt/hadoop/smoketest/topology/readdata.robot">
<test id="s1-s4-t1" name="Read data from previously created key" line="27">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20221007 01:15:58.497" level="INFO">${random} = 57659</msg>
<status status="PASS" starttime="20221007 01:15:58.496" endtime="20221007 01:15:58.497"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221007 01:15:58.510" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-57659 2&gt;&amp;1'.</msg>
<msg timestamp="20221007 01:16:51.652" level="INFO">${rc} = 0</msg>
<msg timestamp="20221007 01:16:51.652" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221007 01:15:58.499" endtime="20221007 01:16:51.652"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221007 01:16:51.653" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221007 01:16:51.652" endtime="20221007 01:16:51.653"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221007 01:16:51.654" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221007 01:16:51.653" endtime="20221007 01:16:51.654"/>
</kw>
<status status="PASS" starttime="20221007 01:15:58.498" endtime="20221007 01:16:51.654"/>
</kw>
<msg timestamp="20221007 01:16:51.654" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221007 01:15:58.498" endtime="20221007 01:16:51.655"/>
</kw>
<msg timestamp="20221007 01:16:51.656" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221007 01:15:58.497" endtime="20221007 01:16:51.656"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20221007 01:16:51.656" endtime="20221007 01:16:51.656"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221007 01:15:58.494" endtime="20221007 01:16:51.656"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20221007 01:15:58.451" endtime="20221007 01:16:51.658"/>
</suite>
<suite id="s1-s5" name="readdata-second-half" source="/opt/hadoop/smoketest/topology/readdata.robot">
<test id="s1-s5-t1" name="Read data from previously created key" line="27">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20221007 01:17:34.147" level="INFO">${random} = 90288</msg>
<status status="PASS" starttime="20221007 01:17:34.147" endtime="20221007 01:17:34.148"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221007 01:17:34.153" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-90288 2&gt;&amp;1'.</msg>
<msg timestamp="20221007 01:17:39.422" level="INFO">${rc} = 0</msg>
<msg timestamp="20221007 01:17:39.422" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221007 01:17:34.149" endtime="20221007 01:17:39.423"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221007 01:17:39.424" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221007 01:17:39.423" endtime="20221007 01:17:39.424"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221007 01:17:39.425" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221007 01:17:39.424" endtime="20221007 01:17:39.425"/>
</kw>
<status status="PASS" starttime="20221007 01:17:34.148" endtime="20221007 01:17:39.425"/>
</kw>
<msg timestamp="20221007 01:17:39.425" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221007 01:17:34.148" endtime="20221007 01:17:39.426"/>
</kw>
<msg timestamp="20221007 01:17:39.427" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221007 01:17:34.148" endtime="20221007 01:17:39.427"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20221007 01:17:39.427" endtime="20221007 01:17:39.427"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221007 01:17:34.146" endtime="20221007 01:17:39.427"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20221007 01:17:34.101" endtime="20221007 01:17:39.428"/>
</suite>
<suite id="s1-s6" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s6-t1" name="Check webui static resources" line="29">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221007 01:12:51.996" endtime="20221007 01:12:51.996"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -s -I http://${SCM}:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221007 01:12:52.001" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20221007 01:12:52.241" level="INFO">${rc} = 0</msg>
<msg timestamp="20221007 01:12:52.241" level="INFO">${output} = HTTP/1.1 200 OK
Date: Fri, 07 Oct 2022 01:12:52 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Fri, 07 Oct 2022 00:51:54 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20221007 01:12:51.997" endtime="20221007 01:12:52.241"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221007 01:12:52.243" level="INFO">HTTP/1.1 200 OK
Date: Fri, 07 Oct 2022 01:12:52 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Fri, 07 Oct 2022 00:51:54 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20221007 01:12:52.242" endtime="20221007 01:12:52.243"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221007 01:12:52.243" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221007 01:12:52.243" endtime="20221007 01:12:52.244"/>
</kw>
<status status="PASS" starttime="20221007 01:12:51.997" endtime="20221007 01:12:52.244"/>
</kw>
<msg timestamp="20221007 01:12:52.244" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221007 01:12:51.997" endtime="20221007 01:12:52.250"/>
</kw>
<msg timestamp="20221007 01:12:52.250" level="INFO">${result} = HTTP/1.1 200 OK
Date: Fri, 07 Oct 2022 01:12:52 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Fri, 07 Oct 2022 00:51:54 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20221007 01:12:51.996" endtime="20221007 01:12:52.250"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221007 01:12:52.250" endtime="20221007 01:12:52.253"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221007 01:12:51.994" endtime="20221007 01:12:52.254"/>
</test>
<test id="s1-s6-t2" name="Basic Freon smoketest" line="34">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221007 01:12:52.258" endtime="20221007 01:12:52.259"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>10</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20221007 01:12:52.259" level="INFO">${random} = JFEfFCd1rD</msg>
<status status="PASS" starttime="20221007 01:12:52.259" endtime="20221007 01:12:52.259"/>
</kw>
<kw name="Freon OCKG" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221007 01:12:52.284" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p JFEfFCd1rD  2&gt;&amp;1'.</msg>
<msg timestamp="20221007 01:13:04.816" level="INFO">${rc} = 0</msg>
<msg timestamp="20221007 01:13:04.816" level="INFO">${output} = 2022-10-07 01:12:55,483 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-07 01:12:55,601 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221007 01:12:52.277" endtime="20221007 01:13:04.816"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221007 01:13:04.818" level="INFO">2022-10-07 01:12:55,483 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-07 01:12:55,601 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-10-07 01:12:55,601 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-10-07 01:12:55,801 [main] INFO freon.BaseFreonGenerator: Executing test with prefix JFEfFCd1rD and number-of-tests 1
2022-10-07 01:12:55,894 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-07 01:12:56,906 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-07 01:12:57,907 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-07 01:12:58,907 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-07 01:12:59,908 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-07 01:12:59,981 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2022-10-07 01:13:00,174 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false 
2022-10-07 01:13:00,908 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-07 01:13:01,307 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-10-07 01:13:01,577 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-10-07 01:13:01,909 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-07 01:13:02,914 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-07 01:13:03,914 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-10-07 01:13:04,319 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=3444.834543, max=3444.834543, mean=3444.834543, stddev=0.0, median=3444.834543, p75=3444.834543, p95=3444.834543, p98=3444.834543, p99=3444.834543, p999=3444.834543, mean_rate=0.24605847516080687, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-10-07 01:13:04,319 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 8
2022-10-07 01:13:04,323 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-10-07 01:13:04,323 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20221007 01:13:04.817" endtime="20221007 01:13:04.818"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221007 01:13:04.819" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221007 01:13:04.818" endtime="20221007 01:13:04.819"/>
</kw>
<status status="PASS" starttime="20221007 01:12:52.276" endtime="20221007 01:13:04.819"/>
</kw>
<msg timestamp="20221007 01:13:04.819" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221007 01:12:52.276" endtime="20221007 01:13:04.824"/>
</kw>
<msg timestamp="20221007 01:13:04.824" level="INFO">${result} = 2022-10-07 01:12:55,483 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-07 01:12:55,601 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221007 01:12:52.271" endtime="20221007 01:13:04.824"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221007 01:13:04.827" endtime="20221007 01:13:04.827"/>
</kw>
<status status="PASS" starttime="20221007 01:12:52.259" endtime="20221007 01:13:04.828"/>
</kw>
<kw name="Freon OCKV" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221007 01:13:04.846" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p JFEfFCd1rD  2&gt;&amp;1'.</msg>
<msg timestamp="20221007 01:13:11.860" level="INFO">${rc} = 0</msg>
<msg timestamp="20221007 01:13:11.860" level="INFO">${output} = 2022-10-07 01:13:06,928 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-07 01:13:07,083 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221007 01:13:04.834" endtime="20221007 01:13:11.860"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221007 01:13:11.861" level="INFO">2022-10-07 01:13:06,928 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-07 01:13:07,083 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-10-07 01:13:07,084 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-10-07 01:13:07,234 [main] INFO freon.BaseFreonGenerator: Executing test with prefix JFEfFCd1rD and number-of-tests 1
2022-10-07 01:13:07,308 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-07 01:13:08,312 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-07 01:13:09,313 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-07 01:13:09,356 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-10-07 01:13:10,313 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-07 01:13:11,314 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-10-07 01:13:11,497 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=58.455163, max=58.455163, mean=58.455163, stddev=0.0, median=58.455163, p75=58.455163, p95=58.455163, p98=58.455163, p99=58.455163, p999=58.455163, mean_rate=0.8960563849716795, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-10-07 01:13:11,498 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 4
2022-10-07 01:13:11,498 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-10-07 01:13:11,498 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20221007 01:13:11.860" endtime="20221007 01:13:11.861"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221007 01:13:11.862" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221007 01:13:11.861" endtime="20221007 01:13:11.862"/>
</kw>
<status status="PASS" starttime="20221007 01:13:04.834" endtime="20221007 01:13:11.862"/>
</kw>
<msg timestamp="20221007 01:13:11.862" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221007 01:13:04.834" endtime="20221007 01:13:11.863"/>
</kw>
<msg timestamp="20221007 01:13:11.863" level="INFO">${result} = 2022-10-07 01:13:06,928 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-07 01:13:07,083 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221007 01:13:04.833" endtime="20221007 01:13:11.863"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221007 01:13:11.863" endtime="20221007 01:13:11.864"/>
</kw>
<status status="PASS" starttime="20221007 01:13:04.828" endtime="20221007 01:13:11.864"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221007 01:12:52.257" endtime="20221007 01:13:11.864"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20221007 01:12:51.930" endtime="20221007 01:13:11.865"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="213760"/>
</suite>
<statistics>
<total>
<stat pass="32" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="32" fail="0" skip="0" id="s1" name="ozone-topology">ozone-topology</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1" name="Cli">ozone-topology.Cli</stat>
<stat pass="23" fail="0" skip="0" id="s1-s2" name="Recon">ozone-topology.Recon</stat>
<stat pass="7" fail="0" skip="0" id="s1-s2-s1" name="Recon-Api">ozone-topology.Recon.Recon-Api</stat>
<stat pass="16" fail="0" skip="0" id="s1-s2-s2" name="Recon-Fso-Nssummary">ozone-topology.Recon.Recon-Fso-Nssummary</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3" name="Loaddata">ozone-topology.Loaddata</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="readdata-first-half">ozone-topology.readdata-first-half</stat>
<stat pass="1" fail="0" skip="0" id="s1-s5" name="readdata-second-half">ozone-topology.readdata-second-half</stat>
<stat pass="2" fail="0" skip="0" id="s1-s6" name="Basic">ozone-topology.Basic</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
