<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.0 (Python 3.8.10 on linux)" generated="20221023 13:22:22.064" rpa="false" schemaversion="3">
<suite id="s1" name="ozone-topology">
<suite id="s1-s1" name="Cli" source="/opt/hadoop/smoketest/topology/cli.robot">
<test id="s1-s1-t1" name="Run printTopology" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221023 13:18:00.235" level="INFO">Running command 'ozone admin printTopology 2&gt;&amp;1'.</msg>
<msg timestamp="20221023 13:18:04.351" level="INFO">${rc} = 0</msg>
<msg timestamp="20221023 13:18:04.351" level="INFO">${output} = State = HEALTHY
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.9(ozone-topolog...</msg>
<status status="PASS" starttime="20221023 13:18:00.228" endtime="20221023 13:18:04.351"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221023 13:18:04.353" level="INFO">State = HEALTHY
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1</msg>
<status status="PASS" starttime="20221023 13:18:04.352" endtime="20221023 13:18:04.353"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221023 13:18:04.354" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221023 13:18:04.353" endtime="20221023 13:18:04.354"/>
</kw>
<status status="PASS" starttime="20221023 13:18:00.227" endtime="20221023 13:18:04.354"/>
</kw>
<msg timestamp="20221023 13:18:04.354" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221023 13:18:00.226" endtime="20221023 13:18:04.356"/>
</kw>
<msg timestamp="20221023 13:18:04.357" level="INFO">${output} = State = HEALTHY
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.9(ozone-topolog...</msg>
<status status="PASS" starttime="20221023 13:18:00.226" endtime="20221023 13:18:04.357"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
<arg>IN_SERVICE</arg>
<arg>/rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221023 13:18:04.357" endtime="20221023 13:18:04.357"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221023 13:18:00.224" endtime="20221023 13:18:04.358"/>
</test>
<test id="s1-s1-t2" name="Run printTopology -o" line="30">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology -o</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221023 13:18:04.365" level="INFO">Running command 'ozone admin printTopology -o 2&gt;&amp;1'.</msg>
<msg timestamp="20221023 13:18:08.788" level="INFO">${rc} = 0</msg>
<msg timestamp="20221023 13:18:08.788" level="INFO">${output} = State = HEALTHY
Location: /rack1
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net) IN_SERVICE
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net) IN_SERVICE
 10.5.0.6(ozone-topology_data...</msg>
<status status="PASS" starttime="20221023 13:18:04.362" endtime="20221023 13:18:08.788"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221023 13:18:08.790" level="INFO">State = HEALTHY
Location: /rack1
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net) IN_SERVICE
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net) IN_SERVICE
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net) IN_SERVICE
Location: /rack2
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net) IN_SERVICE
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net) IN_SERVICE
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net) IN_SERVICE</msg>
<status status="PASS" starttime="20221023 13:18:08.789" endtime="20221023 13:18:08.790"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221023 13:18:08.791" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221023 13:18:08.790" endtime="20221023 13:18:08.791"/>
</kw>
<status status="PASS" starttime="20221023 13:18:04.361" endtime="20221023 13:18:08.791"/>
</kw>
<msg timestamp="20221023 13:18:08.792" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221023 13:18:04.361" endtime="20221023 13:18:08.792"/>
</kw>
<msg timestamp="20221023 13:18:08.792" level="INFO">${output} = State = HEALTHY
Location: /rack1
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net) IN_SERVICE
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net) IN_SERVICE
 10.5.0.6(ozone-topology_data...</msg>
<status status="PASS" starttime="20221023 13:18:04.360" endtime="20221023 13:18:08.792"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Location: /rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221023 13:18:08.793" endtime="20221023 13:18:08.793"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net) IN_SERVICE</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221023 13:18:08.793" endtime="20221023 13:18:08.794"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221023 13:18:04.359" endtime="20221023 13:18:08.794"/>
</test>
<test id="s1-s1-t3" name="Run printTopology --operational-state IN_SERVICE" line="34">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology --operational-state IN_SERVICE</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221023 13:18:08.811" level="INFO">Running command 'ozone admin printTopology --operational-state IN_SERVICE 2&gt;&amp;1'.</msg>
<msg timestamp="20221023 13:18:13.377" level="INFO">${rc} = 0</msg>
<msg timestamp="20221023 13:18:13.377" level="INFO">${output} = State = HEALTHY
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.9(ozone-topolog...</msg>
<status status="PASS" starttime="20221023 13:18:08.808" endtime="20221023 13:18:13.377"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221023 13:18:13.378" level="INFO">State = HEALTHY
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1</msg>
<status status="PASS" starttime="20221023 13:18:13.377" endtime="20221023 13:18:13.378"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221023 13:18:13.379" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221023 13:18:13.378" endtime="20221023 13:18:13.379"/>
</kw>
<status status="PASS" starttime="20221023 13:18:08.807" endtime="20221023 13:18:13.381"/>
</kw>
<msg timestamp="20221023 13:18:13.381" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221023 13:18:08.807" endtime="20221023 13:18:13.381"/>
</kw>
<msg timestamp="20221023 13:18:13.382" level="INFO">${output} = State = HEALTHY
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.9(ozone-topolog...</msg>
<status status="PASS" starttime="20221023 13:18:08.806" endtime="20221023 13:18:13.382"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
<arg>IN_SERVICE</arg>
<arg>/rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221023 13:18:13.382" endtime="20221023 13:18:13.382"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221023 13:18:08.800" endtime="20221023 13:18:13.383"/>
</test>
<test id="s1-s1-t4" name="Run printTopology --node-state HEALTHY" line="37">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology --node-state HEALTHY</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221023 13:18:13.390" level="INFO">Running command 'ozone admin printTopology --node-state HEALTHY 2&gt;&amp;1'.</msg>
<msg timestamp="20221023 13:18:17.930" level="INFO">${rc} = 0</msg>
<msg timestamp="20221023 13:18:17.930" level="INFO">${output} = State = HEALTHY
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.9(ozone-topolog...</msg>
<status status="PASS" starttime="20221023 13:18:13.387" endtime="20221023 13:18:17.930"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221023 13:18:17.933" level="INFO">State = HEALTHY
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1</msg>
<status status="PASS" starttime="20221023 13:18:17.932" endtime="20221023 13:18:17.933"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221023 13:18:17.934" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221023 13:18:17.933" endtime="20221023 13:18:17.934"/>
</kw>
<status status="PASS" starttime="20221023 13:18:13.386" endtime="20221023 13:18:17.934"/>
</kw>
<msg timestamp="20221023 13:18:17.934" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221023 13:18:13.386" endtime="20221023 13:18:17.935"/>
</kw>
<msg timestamp="20221023 13:18:17.935" level="INFO">${output} = State = HEALTHY
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.9(ozone-topolog...</msg>
<status status="PASS" starttime="20221023 13:18:13.385" endtime="20221023 13:18:17.935"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
<arg>IN_SERVICE</arg>
<arg>/rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221023 13:18:17.935" endtime="20221023 13:18:17.936"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221023 13:18:13.384" endtime="20221023 13:18:17.936"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20221023 13:18:00.130" endtime="20221023 13:18:17.939"/>
</suite>
<suite id="s1-s2" name="Recon" source="/opt/hadoop/smoketest/recon">
<suite id="s1-s2-s1" name="Recon-Api" source="/opt/hadoop/smoketest/recon/recon-api.robot">
<test id="s1-s2-s1-t1" name="Check if Recon picks up OM data" line="61">
<kw name="Freon OCKG" library="freon" type="SETUP">
<arg>n=10</arg>
<arg>args=-s 1025 -v recon -b api</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221023 13:18:24.533" level="INFO">Running command 'ozone freon ockg  -t 1 -n10 -p ockg -s 1025 -v recon -b api 2&gt;&amp;1'.</msg>
<msg timestamp="20221023 13:18:36.631" level="INFO">${rc} = 0</msg>
<msg timestamp="20221023 13:18:36.631" level="INFO">${output} = 2022-10-23 13:18:27,467 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-23 13:18:27,695 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221023 13:18:24.529" endtime="20221023 13:18:36.631"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221023 13:18:36.634" level="INFO">2022-10-23 13:18:27,467 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-23 13:18:27,695 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-10-23 13:18:27,695 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-10-23 13:18:27,966 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockg and number-of-tests 10
2022-10-23 13:18:28,088 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2022-10-23 13:18:29,094 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2022-10-23 13:18:29,600 [main] INFO rpc.RpcClient: Creating Volume: recon, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2022-10-23 13:18:29,702 [main] INFO rpc.RpcClient: Creating Bucket: recon/api, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false 
2022-10-23 13:18:30,098 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2022-10-23 13:18:30,673 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-10-23 13:18:31,049 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-10-23 13:18:31,099 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2022-10-23 13:18:32,100 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2022-10-23 13:18:33,100 [Thread-5] INFO freon.ProgressBar: Progress: 10.00 % (1 out of 10)
2022-10-23 13:18:34,105 [Thread-5] INFO freon.ProgressBar: Progress: 40.00 % (4 out of 10)
2022-10-23 13:18:35,105 [Thread-5] INFO freon.ProgressBar: Progress: 80.00 % (8 out of 10)
2022-10-23 13:18:36,106 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (10 out of 10)
2022-10-23 13:18:36,254 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=10, min=112.179567, max=3134.266738, mean=540.8123124048082, stddev=871.7220570889074, median=210.843659, p75=354.135739, p95=3134.266738, p98=3134.266738, p99=3134.266738, p999=3134.266738, mean_rate=1.543196104708713, m1=1.4, m5=1.4, m15=1.4, rate_unit=events/second, duration_unit=milliseconds
2022-10-23 13:18:36,261 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 8
2022-10-23 13:18:36,263 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-10-23 13:18:36,263 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 10</msg>
<status status="PASS" starttime="20221023 13:18:36.631" endtime="20221023 13:18:36.634"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221023 13:18:36.638" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221023 13:18:36.634" endtime="20221023 13:18:36.639"/>
</kw>
<status status="PASS" starttime="20221023 13:18:24.528" endtime="20221023 13:18:36.639"/>
</kw>
<msg timestamp="20221023 13:18:36.639" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221023 13:18:24.527" endtime="20221023 13:18:36.646"/>
</kw>
<msg timestamp="20221023 13:18:36.647" level="INFO">${result} = 2022-10-23 13:18:27,467 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-23 13:18:27,695 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221023 13:18:24.527" endtime="20221023 13:18:36.647"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221023 13:18:36.647" endtime="20221023 13:18:36.649"/>
</kw>
<status status="PASS" starttime="20221023 13:18:24.525" endtime="20221023 13:18:36.649"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Check if Recon picks up container from OM</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221023 13:18:36.651" endtime="20221023 13:18:36.652"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221023 13:18:36.656" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20221023 13:18:36.903" level="INFO">${rc} = 0</msg>
<msg timestamp="20221023 13:18:36.903" level="INFO">${output} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221023 13:18:36.653" endtime="20221023 13:18:36.903"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221023 13:18:36.905" level="INFO">{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221023 13:18:36.904" endtime="20221023 13:18:36.905"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221023 13:18:36.906" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221023 13:18:36.905" endtime="20221023 13:18:36.906"/>
</kw>
<status status="PASS" starttime="20221023 13:18:36.653" endtime="20221023 13:18:36.906"/>
</kw>
<msg timestamp="20221023 13:18:36.906" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221023 13:18:36.652" endtime="20221023 13:18:36.907"/>
</kw>
<msg timestamp="20221023 13:18:36.907" level="INFO">${result} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221023 13:18:36.652" endtime="20221023 13:18:36.907"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221023 13:18:36.907" endtime="20221023 13:18:36.908"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221023 13:18:36.918" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20221023 13:18:36.959" level="INFO">${rc} = 0</msg>
<msg timestamp="20221023 13:18:36.959" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221023 13:18:36.913" endtime="20221023 13:18:36.959"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221023 13:18:36.960" level="INFO">[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221023 13:18:36.959" endtime="20221023 13:18:36.960"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221023 13:18:36.961" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221023 13:18:36.960" endtime="20221023 13:18:36.961"/>
</kw>
<status status="PASS" starttime="20221023 13:18:36.912" endtime="20221023 13:18:36.962"/>
</kw>
<msg timestamp="20221023 13:18:36.962" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221023 13:18:36.909" endtime="20221023 13:18:36.962"/>
</kw>
<msg timestamp="20221023 13:18:36.963" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221023 13:18:36.908" endtime="20221023 13:18:36.963"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20221023 13:18:36.964" level="FAIL">'[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20221023 13:18:36.963" endtime="20221023 13:18:36.965"/>
</kw>
<status status="FAIL" starttime="20221023 13:18:36.650" endtime="20221023 13:18:36.966"/>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221023 13:18:46.967" endtime="20221023 13:18:46.968"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221023 13:18:46.974" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20221023 13:18:46.993" level="INFO">${rc} = 0</msg>
<msg timestamp="20221023 13:18:46.993" level="INFO">${output} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221023 13:18:46.970" endtime="20221023 13:18:46.993"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221023 13:18:46.995" level="INFO">{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221023 13:18:46.994" endtime="20221023 13:18:46.995"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221023 13:18:46.996" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221023 13:18:46.995" endtime="20221023 13:18:46.996"/>
</kw>
<status status="PASS" starttime="20221023 13:18:46.969" endtime="20221023 13:18:46.996"/>
</kw>
<msg timestamp="20221023 13:18:46.996" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221023 13:18:46.969" endtime="20221023 13:18:46.997"/>
</kw>
<msg timestamp="20221023 13:18:46.997" level="INFO">${result} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221023 13:18:46.968" endtime="20221023 13:18:46.997"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221023 13:18:46.997" endtime="20221023 13:18:46.998"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221023 13:18:47.007" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20221023 13:18:47.024" level="INFO">${rc} = 0</msg>
<msg timestamp="20221023 13:18:47.024" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221023 13:18:46.999" endtime="20221023 13:18:47.024"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221023 13:18:47.029" level="INFO">[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221023 13:18:47.028" endtime="20221023 13:18:47.029"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221023 13:18:47.030" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221023 13:18:47.029" endtime="20221023 13:18:47.030"/>
</kw>
<status status="PASS" starttime="20221023 13:18:46.999" endtime="20221023 13:18:47.030"/>
</kw>
<msg timestamp="20221023 13:18:47.030" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221023 13:18:46.999" endtime="20221023 13:18:47.031"/>
</kw>
<msg timestamp="20221023 13:18:47.031" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221023 13:18:46.998" endtime="20221023 13:18:47.031"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20221023 13:18:47.032" level="FAIL">'[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20221023 13:18:47.032" endtime="20221023 13:18:47.033"/>
</kw>
<status status="FAIL" starttime="20221023 13:18:46.966" endtime="20221023 13:18:47.034"/>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221023 13:18:57.036" endtime="20221023 13:18:57.036"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221023 13:18:57.042" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20221023 13:18:57.062" level="INFO">${rc} = 0</msg>
<msg timestamp="20221023 13:18:57.062" level="INFO">${output} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221023 13:18:57.038" endtime="20221023 13:18:57.062"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221023 13:18:57.064" level="INFO">{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221023 13:18:57.063" endtime="20221023 13:18:57.064"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221023 13:18:57.065" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221023 13:18:57.064" endtime="20221023 13:18:57.065"/>
</kw>
<status status="PASS" starttime="20221023 13:18:57.037" endtime="20221023 13:18:57.065"/>
</kw>
<msg timestamp="20221023 13:18:57.066" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221023 13:18:57.037" endtime="20221023 13:18:57.066"/>
</kw>
<msg timestamp="20221023 13:18:57.067" level="INFO">${result} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221023 13:18:57.036" endtime="20221023 13:18:57.067"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221023 13:18:57.067" endtime="20221023 13:18:57.068"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221023 13:18:57.073" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20221023 13:18:57.090" level="INFO">${rc} = 0</msg>
<msg timestamp="20221023 13:18:57.090" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221023 13:18:57.070" endtime="20221023 13:18:57.090"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221023 13:18:57.092" level="INFO">[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221023 13:18:57.091" endtime="20221023 13:18:57.092"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221023 13:18:57.092" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221023 13:18:57.092" endtime="20221023 13:18:57.093"/>
</kw>
<status status="PASS" starttime="20221023 13:18:57.069" endtime="20221023 13:18:57.093"/>
</kw>
<msg timestamp="20221023 13:18:57.093" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221023 13:18:57.069" endtime="20221023 13:18:57.094"/>
</kw>
<msg timestamp="20221023 13:18:57.094" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221023 13:18:57.068" endtime="20221023 13:18:57.094"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20221023 13:18:57.095" level="FAIL">'[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20221023 13:18:57.094" endtime="20221023 13:18:57.096"/>
</kw>
<status status="FAIL" starttime="20221023 13:18:57.035" endtime="20221023 13:18:57.096"/>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221023 13:19:07.098" endtime="20221023 13:19:07.099"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221023 13:19:07.103" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20221023 13:19:07.122" level="INFO">${rc} = 0</msg>
<msg timestamp="20221023 13:19:07.122" level="INFO">${output} = {"data":{"totalCount":4,"containers":[{"ContainerID":1,"NumberOfKeys":4},{"ContainerID":2,"NumberOfKeys":1},{"ContainerID":3,"NumberOfKeys":5},{"ContainerID":4,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221023 13:19:07.100" endtime="20221023 13:19:07.122"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221023 13:19:07.123" level="INFO">{"data":{"totalCount":4,"containers":[{"ContainerID":1,"NumberOfKeys":4},{"ContainerID":2,"NumberOfKeys":1},{"ContainerID":3,"NumberOfKeys":5},{"ContainerID":4,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221023 13:19:07.122" endtime="20221023 13:19:07.123"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221023 13:19:07.124" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221023 13:19:07.123" endtime="20221023 13:19:07.124"/>
</kw>
<status status="PASS" starttime="20221023 13:19:07.100" endtime="20221023 13:19:07.124"/>
</kw>
<msg timestamp="20221023 13:19:07.125" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221023 13:19:07.099" endtime="20221023 13:19:07.125"/>
</kw>
<msg timestamp="20221023 13:19:07.125" level="INFO">${result} = {"data":{"totalCount":4,"containers":[{"ContainerID":1,"NumberOfKeys":4},{"ContainerID":2,"NumberOfKeys":1},{"ContainerID":3,"NumberOfKeys":5},{"ContainerID":4,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221023 13:19:07.099" endtime="20221023 13:19:07.125"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221023 13:19:07.126" endtime="20221023 13:19:07.126"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221023 13:19:07.130" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20221023 13:19:07.145" level="INFO">${rc} = 0</msg>
<msg timestamp="20221023 13:19:07.145" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1},{"volume":"recon","bucket":"api","fileSize":2048,"count":10}]</msg>
<status status="PASS" starttime="20221023 13:19:07.128" endtime="20221023 13:19:07.145"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221023 13:19:07.146" level="INFO">[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1},{"volume":"recon","bucket":"api","fileSize":2048,"count":10}]</msg>
<status status="PASS" starttime="20221023 13:19:07.145" endtime="20221023 13:19:07.146"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221023 13:19:07.154" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221023 13:19:07.153" endtime="20221023 13:19:07.154"/>
</kw>
<status status="PASS" starttime="20221023 13:19:07.127" endtime="20221023 13:19:07.155"/>
</kw>
<msg timestamp="20221023 13:19:07.156" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221023 13:19:07.127" endtime="20221023 13:19:07.156"/>
</kw>
<msg timestamp="20221023 13:19:07.156" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1},{"volume":"recon","bucket":"api","fileSize":2048,"count":10}]</msg>
<status status="PASS" starttime="20221023 13:19:07.126" endtime="20221023 13:19:07.156"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221023 13:19:07.157" endtime="20221023 13:19:07.157"/>
</kw>
<status status="PASS" starttime="20221023 13:19:07.097" endtime="20221023 13:19:07.157"/>
</kw>
<status status="PASS" starttime="20221023 13:18:36.649" endtime="20221023 13:19:07.157"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221023 13:18:24.524" endtime="20221023 13:19:07.158"/>
</test>
<test id="s1-s2-s1-t2" name="Check if Recon picks up DN heartbeats" line="65">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/datanodes</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221023 13:19:07.173" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/datanodes 2&gt;&amp;1'.</msg>
<msg timestamp="20221023 13:19:07.250" level="INFO">${rc} = 0</msg>
<msg timestamp="20221023 13:19:07.250" level="INFO">${output} = {"totalCount":6,"datanodes":[{"uuid":"ca491053-fe49-4ba6-89dc-4e979c4c67e3","hostname":"ozone-topology_datanode_2_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1666531...</msg>
<status status="PASS" starttime="20221023 13:19:07.167" endtime="20221023 13:19:07.250"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221023 13:19:07.252" level="INFO">{"totalCount":6,"datanodes":[{"uuid":"ca491053-fe49-4ba6-89dc-4e979c4c67e3","hostname":"ozone-topology_datanode_2_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1666531144944,"storageReport":{"capacity":89297309696,"used":10246,"remaining":30310248448},"pipelines":[{"pipelineID":"c318ed2c-c39c-464c-8737-54f937bb6b64","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net"},{"pipelineID":"3c6a93a2-5235-4274-8b2d-e401cf87863b","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net"},{"pipelineID":"3219156f-a593-4c6c-bd3d-d4f2f5e8fd14","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net"}],"containers":2,"openContainers":2,"leaderCount":1,"version":"1.3.0-SNAPSHOT","setupTime":1666530966811,"revision":"ecdfc207562e352bd1bcff52ca55b5c25456907f","buildDate":"2022-10-23T12:48Z","layoutVersion":4,"networkLocation":"/rack1"},{"uuid":"bc939842-953c-444c-9357-c6b0abead2eb","hostname":"ozone-topology_datanode_1_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1666531144987,"storageReport":{"capacity":89297309696,"used":6146,"remaining":30310248448},"pipelines":[{"pipelineID":"e89c0473-07cb-4793-823b-0955e8f4178c","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net"},{"pipelineID":"c318ed2c-c39c-464c-8737-54f937bb6b64","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net"},{"pipelineID":"b3861823-6a2f-4908-b284-4d815bb34879","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net"}],"containers":2,"openContainers":2,"leaderCount":2,"version":"1.3.0-SNAPSHOT","setupTime":1666530970191,"revision":"ecdfc207562e352bd1bcff52ca55b5c25456907f","buildDate":"2022-10-23T12:48Z","layoutVersion":4,"networkLocation":"/rack1"},{"uuid":"35f00696-65b2-47c9-a75b-64cd61d40d87","hostname":"ozone-topology_datanode_3_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1666531143532,"storageReport":{"capacity":89297309696,"used":22536,"remaining":30310248448},"pipelines":[{"pipelineID":"63f03a8a-5591-4675-bda6-6a2da70cbad9","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net"},{"pipelineID":"9d624589-9e9c-485d-8677-5ee5a50341dd","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net"},{"pipelineID":"3c6a93a2-5235-4274-8b2d-e401cf87863b","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net"}],"containers":2,"openContainers":2,"leaderCount":2,"version":"1.3.0-SNAPSHOT","setupTime":1666530968214,"revision":"ecdfc207562e352bd1bcff52ca55b5c25456907f","buildDate":"2022-10-23T12:48Z","layoutVersion":4,"networkLocation":"/rack1"},{"uuid":"d2dd63bf-1f77-48cf-8e30-8708a4aef0d7","hostname":"ozone-topology_datanode_5_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1666531143513,"storageReport":{"capacity":89297309696,"used":22536,"remaining":30310248448},"pipelines":[{"pipelineID":"9d624589-9e9c-485d-8677-5ee5a50341dd","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net"},{"pipelineID":"3c6a93a2-5235-4274-8b2d-e401cf87863b","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net"},{"pipelineID":"f996cf86-13b0-44b8-aad2-64294f62c77f","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net"}],"containers":2,"openContainers":2,"leaderCount":2,"version":"1.3.0-SNAPSHOT","setupTime":1666530969014,"revision":"ecdfc207562e352bd1bcff52ca55b5c25456907f","buildDate":"2022-10-23T12:48Z","layoutVersion":4,"networkLocation":"/rack2"},{"uuid":"bca1a6df-d6c0-4449-ac76-9577ba20619d","hostname":"ozone-topology_datanode_6_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1666531144927,"storageReport":{"capacity":89297309696,"used":6146,"remaining":30310248448},"pipelines":[{"pipelineID":"c318ed2c-c39c-464c-8737-54f937bb6b64","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net"},{"pipelineID":"b3861823-6a2f-4908-b284-4d815bb34879","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net"},{"pipelineID":"ded7256a-42c7-4cec-8281-0c40b03fbf26","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net"}],"containers":2,"openContainers":2,"leaderCount":2,"version":"1.3.0-SNAPSHOT","setupTime":1666530969126,"revision":"ecdfc207562e352bd1bcff52ca55b5c25456907f","buildDate":"2022-10-23T12:48Z","layoutVersion":4,"networkLocation":"/rack2"},{"uuid":"d358f671-c266-4873-b07b-66cf8d4b09ad","hostname":"ozone-topology_datanode_4_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1666531142080,"storageReport":{"capacity":89297309696,"used":18436,"remaining":30310248448},"pipelines":[{"pipelineID":"e7f72961-d9c4-4898-ae19-0b0e630b2c33","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net"},{"pipelineID":"9d624589-9e9c-485d-8677-5ee5a50341dd","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net"},{"pipelineID":"b3861823-6a2f-4908-b284-4d815bb34879","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net"}],"containers":2,"openContainers":2,"leaderCount":1,"version":"1.3.0-SNAPSHOT","setupTime":1666530970461,"revision":"ecdfc207562e352bd1bcff52ca55b5c25456907f","buildDate":"2022-10-23T12:48Z","layoutVersion":4,"networkLocation":"/rack2"}]}</msg>
<status status="PASS" starttime="20221023 13:19:07.251" endtime="20221023 13:19:07.252"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221023 13:19:07.253" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221023 13:19:07.253" endtime="20221023 13:19:07.253"/>
</kw>
<status status="PASS" starttime="20221023 13:19:07.166" endtime="20221023 13:19:07.254"/>
</kw>
<msg timestamp="20221023 13:19:07.254" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221023 13:19:07.165" endtime="20221023 13:19:07.255"/>
</kw>
<msg timestamp="20221023 13:19:07.255" level="INFO">${result} = {"totalCount":6,"datanodes":[{"uuid":"ca491053-fe49-4ba6-89dc-4e979c4c67e3","hostname":"ozone-topology_datanode_2_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1666531...</msg>
<status status="PASS" starttime="20221023 13:19:07.165" endtime="20221023 13:19:07.255"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanodes</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221023 13:19:07.255" endtime="20221023 13:19:07.256"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221023 13:19:07.256" endtime="20221023 13:19:07.256"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221023 13:19:07.256" endtime="20221023 13:19:07.257"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221023 13:19:07.257" endtime="20221023 13:19:07.257"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/pipelines</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221023 13:19:07.263" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/pipelines 2&gt;&amp;1'.</msg>
<msg timestamp="20221023 13:19:07.293" level="INFO">${rc} = 0</msg>
<msg timestamp="20221023 13:19:07.293" level="INFO">${output} = {"totalCount":10,"pipelines":[{"pipelineId":"63f03a8a-5591-4675-bda6-6a2da70cbad9","status":"OPEN","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net","datanodes":["ozone-topology_datanode_3...</msg>
<status status="PASS" starttime="20221023 13:19:07.261" endtime="20221023 13:19:07.293"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221023 13:19:07.295" level="INFO">{"totalCount":10,"pipelines":[{"pipelineId":"63f03a8a-5591-4675-bda6-6a2da70cbad9","status":"OPEN","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net","datanodes":["ozone-topology_datanode_3_1.ozone-topology_net"],"lastLeaderElection":0,"duration":118482,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"e89c0473-07cb-4793-823b-0955e8f4178c","status":"OPEN","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net","datanodes":["ozone-topology_datanode_1_1.ozone-topology_net"],"lastLeaderElection":0,"duration":118607,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"c318ed2c-c39c-464c-8737-54f937bb6b64","status":"OPEN","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net","datanodes":["ozone-topology_datanode_2_1.ozone-topology_net","ozone-topology_datanode_6_1.ozone-topology_net","ozone-topology_datanode_1_1.ozone-topology_net"],"lastLeaderElection":0,"duration":118683,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"THREE","containers":1},{"pipelineId":"e7f72961-d9c4-4898-ae19-0b0e630b2c33","status":"OPEN","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net","datanodes":["ozone-topology_datanode_4_1.ozone-topology_net"],"lastLeaderElection":0,"duration":118282,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"9d624589-9e9c-485d-8677-5ee5a50341dd","status":"OPEN","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net","datanodes":["ozone-topology_datanode_3_1.ozone-topology_net","ozone-topology_datanode_5_1.ozone-topology_net","ozone-topology_datanode_4_1.ozone-topology_net"],"lastLeaderElection":0,"duration":118354,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"THREE","containers":1},{"pipelineId":"3c6a93a2-5235-4274-8b2d-e401cf87863b","status":"OPEN","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net","datanodes":["ozone-topology_datanode_3_1.ozone-topology_net","ozone-topology_datanode_5_1.ozone-topology_net","ozone-topology_datanode_2_1.ozone-topology_net"],"lastLeaderElection":0,"duration":118558,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"THREE","containers":1},{"pipelineId":"3219156f-a593-4c6c-bd3d-d4f2f5e8fd14","status":"OPEN","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net","datanodes":["ozone-topology_datanode_2_1.ozone-topology_net"],"lastLeaderElection":0,"duration":120334,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"b3861823-6a2f-4908-b284-4d815bb34879","status":"OPEN","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net","datanodes":["ozone-topology_datanode_4_1.ozone-topology_net","ozone-topology_datanode_1_1.ozone-topology_net","ozone-topology_datanode_6_1.ozone-topology_net"],"lastLeaderElection":0,"duration":118412,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"THREE","containers":1},{"pipelineId":"f996cf86-13b0-44b8-aad2-64294f62c77f","status":"OPEN","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net","datanodes":["ozone-topology_datanode_5_1.ozone-topology_net"],"lastLeaderElection":0,"duration":118315,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"ded7256a-42c7-4cec-8281-0c40b03fbf26","status":"OPEN","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net","datanodes":["ozone-topology_datanode_6_1.ozone-topology_net"],"lastLeaderElection":0,"duration":118375,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0}]}</msg>
<status status="PASS" starttime="20221023 13:19:07.294" endtime="20221023 13:19:07.295"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221023 13:19:07.296" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221023 13:19:07.295" endtime="20221023 13:19:07.296"/>
</kw>
<status status="PASS" starttime="20221023 13:19:07.260" endtime="20221023 13:19:07.296"/>
</kw>
<msg timestamp="20221023 13:19:07.296" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221023 13:19:07.260" endtime="20221023 13:19:07.297"/>
</kw>
<msg timestamp="20221023 13:19:07.297" level="INFO">${result} = {"totalCount":10,"pipelines":[{"pipelineId":"63f03a8a-5591-4675-bda6-6a2da70cbad9","status":"OPEN","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net","datanodes":["ozone-topology_datanode_3...</msg>
<status status="PASS" starttime="20221023 13:19:07.258" endtime="20221023 13:19:07.297"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>pipelines</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221023 13:19:07.297" endtime="20221023 13:19:07.298"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221023 13:19:07.298" endtime="20221023 13:19:07.299"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OPEN</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221023 13:19:07.299" endtime="20221023 13:19:07.299"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221023 13:19:07.299" endtime="20221023 13:19:07.300"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221023 13:19:07.300" endtime="20221023 13:19:07.301"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221023 13:19:07.301" endtime="20221023 13:19:07.302"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/clusterState</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221023 13:19:07.306" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20221023 13:19:07.337" level="INFO">${rc} = 0</msg>
<msg timestamp="20221023 13:19:07.338" level="INFO">${output} = {"pipelines":10,"totalDatanodes":6,"healthyDatanodes":6,"storageReport":{"capacity":535783858176,"used":86046,"remaining":181861490688},"containers":4,"volumes":3,"buckets":2,"keys":11}</msg>
<status status="PASS" starttime="20221023 13:19:07.304" endtime="20221023 13:19:07.338"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221023 13:19:07.339" level="INFO">{"pipelines":10,"totalDatanodes":6,"healthyDatanodes":6,"storageReport":{"capacity":535783858176,"used":86046,"remaining":181861490688},"containers":4,"volumes":3,"buckets":2,"keys":11}</msg>
<status status="PASS" starttime="20221023 13:19:07.338" endtime="20221023 13:19:07.339"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221023 13:19:07.340" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221023 13:19:07.339" endtime="20221023 13:19:07.340"/>
</kw>
<status status="PASS" starttime="20221023 13:19:07.303" endtime="20221023 13:19:07.341"/>
</kw>
<msg timestamp="20221023 13:19:07.341" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221023 13:19:07.303" endtime="20221023 13:19:07.346"/>
</kw>
<msg timestamp="20221023 13:19:07.346" level="INFO">${result} = {"pipelines":10,"totalDatanodes":6,"healthyDatanodes":6,"storageReport":{"capacity":535783858176,"used":86046,"remaining":181861490688},"containers":4,"volumes":3,"buckets":2,"keys":11}</msg>
<status status="PASS" starttime="20221023 13:19:07.302" endtime="20221023 13:19:07.346"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"totalDatanodes\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221023 13:19:07.346" endtime="20221023 13:19:07.347"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"healthyDatanodes\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221023 13:19:07.347" endtime="20221023 13:19:07.347"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"pipelines\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221023 13:19:07.348" endtime="20221023 13:19:07.348"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers/1/replicaHistory</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221023 13:19:07.353" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers/1/replicaHistory 2&gt;&amp;1'.</msg>
<msg timestamp="20221023 13:19:07.374" level="INFO">${rc} = 0</msg>
<msg timestamp="20221023 13:19:07.374" level="INFO">${output} = [{"containerId":1,"datanodeUuid":"35f00696-65b2-47c9-a75b-64cd61d40d87","datanodeHost":"ozone-topology_datanode_3_1.ozone-topology_net","firstSeenTime":1666531059210,"lastSeenTime":1666531059210,"last...</msg>
<status status="PASS" starttime="20221023 13:19:07.350" endtime="20221023 13:19:07.374"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221023 13:19:07.376" level="INFO">[{"containerId":1,"datanodeUuid":"35f00696-65b2-47c9-a75b-64cd61d40d87","datanodeHost":"ozone-topology_datanode_3_1.ozone-topology_net","firstSeenTime":1666531059210,"lastSeenTime":1666531059210,"lastBcsId":0},{"containerId":1,"datanodeUuid":"d2dd63bf-1f77-48cf-8e30-8708a4aef0d7","datanodeHost":"ozone-topology_datanode_5_1.ozone-topology_net","firstSeenTime":1666531058701,"lastSeenTime":1666531058701,"lastBcsId":0},{"containerId":1,"datanodeUuid":"d358f671-c266-4873-b07b-66cf8d4b09ad","datanodeHost":"ozone-topology_datanode_4_1.ozone-topology_net","firstSeenTime":1666531059254,"lastSeenTime":1666531063386,"lastBcsId":0}]</msg>
<status status="PASS" starttime="20221023 13:19:07.375" endtime="20221023 13:19:07.376"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221023 13:19:07.377" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221023 13:19:07.376" endtime="20221023 13:19:07.377"/>
</kw>
<status status="PASS" starttime="20221023 13:19:07.349" endtime="20221023 13:19:07.377"/>
</kw>
<msg timestamp="20221023 13:19:07.377" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221023 13:19:07.349" endtime="20221023 13:19:07.378"/>
</kw>
<msg timestamp="20221023 13:19:07.378" level="INFO">${result} = [{"containerId":1,"datanodeUuid":"35f00696-65b2-47c9-a75b-64cd61d40d87","datanodeHost":"ozone-topology_datanode_3_1.ozone-topology_net","firstSeenTime":1666531059210,"lastSeenTime":1666531059210,"last...</msg>
<status status="PASS" starttime="20221023 13:19:07.348" endtime="20221023 13:19:07.378"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"containerId\":1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221023 13:19:07.378" endtime="20221023 13:19:07.379"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221023 13:19:07.164" endtime="20221023 13:19:07.379"/>
</test>
<test id="s1-s2-s1-t3" name="Check if Recon Web UI is up" line="88">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221023 13:19:07.382" endtime="20221023 13:19:07.383"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${ENDPOINT_URL}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221023 13:19:07.388" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20221023 13:19:07.409" level="INFO">${rc} = 0</msg>
<msg timestamp="20221023 13:19:07.409" level="INFO">${output} = &lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" ...</msg>
<status status="PASS" starttime="20221023 13:19:07.385" endtime="20221023 13:19:07.409"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221023 13:19:07.411" level="INFO">&lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" content="#000000"/&gt;&lt;link rel="manifest" href="/manifest.json"/&gt;&lt;link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto:300,400,500"/&gt;&lt;title&gt;Ozone Recon&lt;/title&gt;&lt;link href="/static/css/2.7465223f.chunk.css" rel="stylesheet"&gt;&lt;link href="/static/css/main.0c211d12.chunk.css" rel="stylesheet"&gt;&lt;/head&gt;&lt;body&gt;&lt;noscript&gt;You need to enable JavaScript to run this app.&lt;/noscript&gt;&lt;div id="root"&gt;&lt;/div&gt;&lt;script&gt;!function(e){function r(r){for(var n,l,f=r[0],i=r[1],a=r[2],p=0,s=[];p&lt;f.length;p++)l=f[p],Object.prototype.hasOwnProperty.call(o,l)&amp;&amp;o[l]&amp;&amp;s.push(o[l][0]),o[l]=0;for(n in i)Object.prototype.hasOwnProperty.call(i,n)&amp;&amp;(e[n]=i[n]);for(c&amp;&amp;c(r);s.length;)s.shift()();return u.push.apply(u,a||[]),t()}function t(){for(var e,r=0;r&lt;u.length;r++){for(var t=u[r],n=!0,f=1;f&lt;t.length;f++){var i=t[f];0!==o[i]&amp;&amp;(n=!1)}n&amp;&amp;(u.splice(r--,1),e=l(l.s=t[0]))}return e}var n={},o={1:0},u=[];function l(r){if(n[r])return n[r].exports;var t=n[r]={i:r,l:!1,exports:{}};return e[r].call(t.exports,t,t.exports,l),t.l=!0,t.exports}l.m=e,l.c=n,l.d=function(e,r,t){l.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:t})},l.r=function(e){"undefined"!=typeof Symbol&amp;&amp;Symbol.toStringTag&amp;&amp;Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},l.t=function(e,r){if(1&amp;r&amp;&amp;(e=l(e)),8&amp;r)return e;if(4&amp;r&amp;&amp;"object"==typeof e&amp;&amp;e&amp;&amp;e.__esModule)return e;var t=Object.create(null);if(l.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&amp;r&amp;&amp;"string"!=typeof e)for(var n in e)l.d(t,n,function(r){return e[r]}.bind(null,n));return t},l.n=function(e){var r=e&amp;&amp;e.__esModule?function(){return e.default}:function(){return e};return l.d(r,"a",r),r},l.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},l.p="/";var f=this["webpackJsonpozone-recon"]=this["webpackJsonpozone-recon"]||[],i=f.push.bind(f);f.push=r,f=f.slice();for(var a=0;a&lt;f.length;a++)r(f[a]);var c=i;t()}([])&lt;/script&gt;&lt;script src="/static/js/2.b419f50e.chunk.js"&gt;&lt;/script&gt;&lt;script src="/static/js/main.a64cbf5a.chunk.js"&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;</msg>
<status status="PASS" starttime="20221023 13:19:07.410" endtime="20221023 13:19:07.411"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221023 13:19:07.412" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221023 13:19:07.412" endtime="20221023 13:19:07.412"/>
</kw>
<status status="PASS" starttime="20221023 13:19:07.384" endtime="20221023 13:19:07.413"/>
</kw>
<msg timestamp="20221023 13:19:07.413" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221023 13:19:07.384" endtime="20221023 13:19:07.413"/>
</kw>
<msg timestamp="20221023 13:19:07.414" level="INFO">${result} = &lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" ...</msg>
<status status="PASS" starttime="20221023 13:19:07.383" endtime="20221023 13:19:07.414"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Ozone Recon</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221023 13:19:07.414" endtime="20221023 13:19:07.415"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221023 13:19:07.380" endtime="20221023 13:19:07.415"/>
</test>
<test id="s1-s2-s1-t4" name="Check web UI access" line="93">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221023 13:19:07.421" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20221023 13:19:07.427" level="INFO">${rc} = 0</msg>
<msg timestamp="20221023 13:19:07.427" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221023 13:19:07.419" endtime="20221023 13:19:07.427"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221023 13:19:07.428" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221023 13:19:07.428" endtime="20221023 13:19:07.429"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221023 13:19:07.429" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221023 13:19:07.429" endtime="20221023 13:19:07.429"/>
</kw>
<status status="PASS" starttime="20221023 13:19:07.418" endtime="20221023 13:19:07.430"/>
</kw>
<msg timestamp="20221023 13:19:07.430" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221023 13:19:07.418" endtime="20221023 13:19:07.431"/>
</kw>
<status status="PASS" starttime="20221023 13:19:07.417" endtime="20221023 13:19:07.433"/>
</kw>
<kw name="Check http return code">
<arg>${ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221023 13:19:07.442" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20221023 13:19:07.460" level="INFO">${rc} = 0</msg>
<msg timestamp="20221023 13:19:07.460" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221023 13:19:07.435" endtime="20221023 13:19:07.460"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221023 13:19:07.462" level="INFO">200</msg>
<status status="PASS" starttime="20221023 13:19:07.461" endtime="20221023 13:19:07.462"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221023 13:19:07.463" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221023 13:19:07.462" endtime="20221023 13:19:07.463"/>
</kw>
<status status="PASS" starttime="20221023 13:19:07.434" endtime="20221023 13:19:07.464"/>
</kw>
<msg timestamp="20221023 13:19:07.464" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221023 13:19:07.434" endtime="20221023 13:19:07.464"/>
</kw>
<msg timestamp="20221023 13:19:07.465" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221023 13:19:07.433" endtime="20221023 13:19:07.465"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221023 13:19:07.465" endtime="20221023 13:19:07.465"/>
</kw>
<status status="NOT RUN" starttime="20221023 13:19:07.465" endtime="20221023 13:19:07.465"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221023 13:19:07.466" endtime="20221023 13:19:07.466"/>
</kw>
<status status="PASS" starttime="20221023 13:19:07.465" endtime="20221023 13:19:07.466"/>
</branch>
<status status="PASS" starttime="20221023 13:19:07.465" endtime="20221023 13:19:07.466"/>
</if>
<status status="PASS" starttime="20221023 13:19:07.433" endtime="20221023 13:19:07.466"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221023 13:19:07.467" endtime="20221023 13:19:07.468"/>
</kw>
<status status="PASS" starttime="20221023 13:19:07.467" endtime="20221023 13:19:07.468"/>
</kw>
<kw name="Check http return code">
<arg>${ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221023 13:19:07.473" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20221023 13:19:07.489" level="INFO">${rc} = 0</msg>
<msg timestamp="20221023 13:19:07.489" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221023 13:19:07.470" endtime="20221023 13:19:07.489"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221023 13:19:07.491" level="INFO">200</msg>
<status status="PASS" starttime="20221023 13:19:07.490" endtime="20221023 13:19:07.491"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221023 13:19:07.492" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221023 13:19:07.491" endtime="20221023 13:19:07.492"/>
</kw>
<status status="PASS" starttime="20221023 13:19:07.469" endtime="20221023 13:19:07.492"/>
</kw>
<msg timestamp="20221023 13:19:07.492" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221023 13:19:07.469" endtime="20221023 13:19:07.493"/>
</kw>
<msg timestamp="20221023 13:19:07.493" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221023 13:19:07.469" endtime="20221023 13:19:07.493"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221023 13:19:07.494" endtime="20221023 13:19:07.494"/>
</kw>
<status status="NOT RUN" starttime="20221023 13:19:07.494" endtime="20221023 13:19:07.494"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221023 13:19:07.494" endtime="20221023 13:19:07.495"/>
</kw>
<status status="PASS" starttime="20221023 13:19:07.494" endtime="20221023 13:19:07.495"/>
</branch>
<status status="PASS" starttime="20221023 13:19:07.494" endtime="20221023 13:19:07.495"/>
</if>
<status status="PASS" starttime="20221023 13:19:07.468" endtime="20221023 13:19:07.495"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221023 13:19:07.417" endtime="20221023 13:19:07.495"/>
</test>
<test id="s1-s2-s1-t5" name="Check admin only api access" line="101">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221023 13:19:07.506" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20221023 13:19:07.511" level="INFO">${rc} = 0</msg>
<msg timestamp="20221023 13:19:07.512" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221023 13:19:07.499" endtime="20221023 13:19:07.512"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221023 13:19:07.513" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221023 13:19:07.512" endtime="20221023 13:19:07.513"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221023 13:19:07.514" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221023 13:19:07.514" endtime="20221023 13:19:07.514"/>
</kw>
<status status="PASS" starttime="20221023 13:19:07.499" endtime="20221023 13:19:07.515"/>
</kw>
<msg timestamp="20221023 13:19:07.515" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221023 13:19:07.498" endtime="20221023 13:19:07.526"/>
</kw>
<status status="PASS" starttime="20221023 13:19:07.498" endtime="20221023 13:19:07.526"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221023 13:19:07.534" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20221023 13:19:07.552" level="INFO">${rc} = 0</msg>
<msg timestamp="20221023 13:19:07.552" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221023 13:19:07.529" endtime="20221023 13:19:07.552"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221023 13:19:07.554" level="INFO">200</msg>
<status status="PASS" starttime="20221023 13:19:07.553" endtime="20221023 13:19:07.554"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221023 13:19:07.555" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221023 13:19:07.554" endtime="20221023 13:19:07.555"/>
</kw>
<status status="PASS" starttime="20221023 13:19:07.529" endtime="20221023 13:19:07.557"/>
</kw>
<msg timestamp="20221023 13:19:07.557" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221023 13:19:07.528" endtime="20221023 13:19:07.558"/>
</kw>
<msg timestamp="20221023 13:19:07.559" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221023 13:19:07.527" endtime="20221023 13:19:07.559"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221023 13:19:07.559" endtime="20221023 13:19:07.560"/>
</kw>
<status status="NOT RUN" starttime="20221023 13:19:07.559" endtime="20221023 13:19:07.560"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221023 13:19:07.560" endtime="20221023 13:19:07.560"/>
</kw>
<status status="PASS" starttime="20221023 13:19:07.560" endtime="20221023 13:19:07.560"/>
</branch>
<status status="PASS" starttime="20221023 13:19:07.559" endtime="20221023 13:19:07.560"/>
</if>
<status status="PASS" starttime="20221023 13:19:07.526" endtime="20221023 13:19:07.561"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221023 13:19:07.562" endtime="20221023 13:19:07.562"/>
</kw>
<status status="PASS" starttime="20221023 13:19:07.561" endtime="20221023 13:19:07.562"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221023 13:19:07.567" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20221023 13:19:07.589" level="INFO">${rc} = 0</msg>
<msg timestamp="20221023 13:19:07.589" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221023 13:19:07.565" endtime="20221023 13:19:07.589"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221023 13:19:07.591" level="INFO">200</msg>
<status status="PASS" starttime="20221023 13:19:07.590" endtime="20221023 13:19:07.591"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221023 13:19:07.592" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221023 13:19:07.592" endtime="20221023 13:19:07.592"/>
</kw>
<status status="PASS" starttime="20221023 13:19:07.564" endtime="20221023 13:19:07.593"/>
</kw>
<msg timestamp="20221023 13:19:07.593" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221023 13:19:07.564" endtime="20221023 13:19:07.594"/>
</kw>
<msg timestamp="20221023 13:19:07.594" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221023 13:19:07.563" endtime="20221023 13:19:07.594"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221023 13:19:07.595" endtime="20221023 13:19:07.595"/>
</kw>
<status status="NOT RUN" starttime="20221023 13:19:07.595" endtime="20221023 13:19:07.595"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221023 13:19:07.595" endtime="20221023 13:19:07.596"/>
</kw>
<status status="PASS" starttime="20221023 13:19:07.595" endtime="20221023 13:19:07.596"/>
</branch>
<status status="PASS" starttime="20221023 13:19:07.594" endtime="20221023 13:19:07.596"/>
</if>
<status status="PASS" starttime="20221023 13:19:07.563" endtime="20221023 13:19:07.596"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221023 13:19:07.597" endtime="20221023 13:19:07.597"/>
</kw>
<status status="PASS" starttime="20221023 13:19:07.596" endtime="20221023 13:19:07.598"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221023 13:19:07.603" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20221023 13:19:07.621" level="INFO">${rc} = 0</msg>
<msg timestamp="20221023 13:19:07.621" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221023 13:19:07.600" endtime="20221023 13:19:07.621"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221023 13:19:07.623" level="INFO">200</msg>
<status status="PASS" starttime="20221023 13:19:07.622" endtime="20221023 13:19:07.623"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221023 13:19:07.624" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221023 13:19:07.623" endtime="20221023 13:19:07.624"/>
</kw>
<status status="PASS" starttime="20221023 13:19:07.600" endtime="20221023 13:19:07.625"/>
</kw>
<msg timestamp="20221023 13:19:07.625" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221023 13:19:07.599" endtime="20221023 13:19:07.626"/>
</kw>
<msg timestamp="20221023 13:19:07.626" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221023 13:19:07.599" endtime="20221023 13:19:07.626"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221023 13:19:07.627" endtime="20221023 13:19:07.627"/>
</kw>
<status status="NOT RUN" starttime="20221023 13:19:07.627" endtime="20221023 13:19:07.627"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221023 13:19:07.627" endtime="20221023 13:19:07.628"/>
</kw>
<status status="PASS" starttime="20221023 13:19:07.627" endtime="20221023 13:19:07.628"/>
</branch>
<status status="PASS" starttime="20221023 13:19:07.626" endtime="20221023 13:19:07.628"/>
</if>
<status status="PASS" starttime="20221023 13:19:07.598" endtime="20221023 13:19:07.628"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221023 13:19:07.629" endtime="20221023 13:19:07.630"/>
</kw>
<status status="PASS" starttime="20221023 13:19:07.628" endtime="20221023 13:19:07.630"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221023 13:19:07.635" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20221023 13:19:07.652" level="INFO">${rc} = 0</msg>
<msg timestamp="20221023 13:19:07.652" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221023 13:19:07.632" endtime="20221023 13:19:07.652"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221023 13:19:07.654" level="INFO">200</msg>
<status status="PASS" starttime="20221023 13:19:07.653" endtime="20221023 13:19:07.654"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221023 13:19:07.655" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221023 13:19:07.654" endtime="20221023 13:19:07.655"/>
</kw>
<status status="PASS" starttime="20221023 13:19:07.632" endtime="20221023 13:19:07.655"/>
</kw>
<msg timestamp="20221023 13:19:07.655" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221023 13:19:07.632" endtime="20221023 13:19:07.656"/>
</kw>
<msg timestamp="20221023 13:19:07.656" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221023 13:19:07.631" endtime="20221023 13:19:07.656"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221023 13:19:07.657" endtime="20221023 13:19:07.657"/>
</kw>
<status status="NOT RUN" starttime="20221023 13:19:07.657" endtime="20221023 13:19:07.657"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221023 13:19:07.657" endtime="20221023 13:19:07.658"/>
</kw>
<status status="PASS" starttime="20221023 13:19:07.657" endtime="20221023 13:19:07.658"/>
</branch>
<status status="PASS" starttime="20221023 13:19:07.656" endtime="20221023 13:19:07.658"/>
</if>
<status status="PASS" starttime="20221023 13:19:07.630" endtime="20221023 13:19:07.658"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221023 13:19:07.497" endtime="20221023 13:19:07.658"/>
</test>
<test id="s1-s2-s1-t6" name="Check unhealthy, (admin) api access" line="114">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221023 13:19:07.666" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20221023 13:19:07.669" level="INFO">${rc} = 0</msg>
<msg timestamp="20221023 13:19:07.669" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221023 13:19:07.663" endtime="20221023 13:19:07.669"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221023 13:19:07.671" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221023 13:19:07.670" endtime="20221023 13:19:07.671"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221023 13:19:07.672" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221023 13:19:07.671" endtime="20221023 13:19:07.672"/>
</kw>
<status status="PASS" starttime="20221023 13:19:07.662" endtime="20221023 13:19:07.672"/>
</kw>
<msg timestamp="20221023 13:19:07.672" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221023 13:19:07.662" endtime="20221023 13:19:07.673"/>
</kw>
<status status="PASS" starttime="20221023 13:19:07.661" endtime="20221023 13:19:07.673"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221023 13:19:07.678" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20221023 13:19:07.732" level="INFO">${rc} = 0</msg>
<msg timestamp="20221023 13:19:07.732" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221023 13:19:07.676" endtime="20221023 13:19:07.733"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221023 13:19:07.734" level="INFO">200</msg>
<status status="PASS" starttime="20221023 13:19:07.733" endtime="20221023 13:19:07.734"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221023 13:19:07.735" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221023 13:19:07.734" endtime="20221023 13:19:07.735"/>
</kw>
<status status="PASS" starttime="20221023 13:19:07.675" endtime="20221023 13:19:07.736"/>
</kw>
<msg timestamp="20221023 13:19:07.736" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221023 13:19:07.675" endtime="20221023 13:19:07.736"/>
</kw>
<msg timestamp="20221023 13:19:07.736" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221023 13:19:07.674" endtime="20221023 13:19:07.736"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221023 13:19:07.737" endtime="20221023 13:19:07.737"/>
</kw>
<status status="NOT RUN" starttime="20221023 13:19:07.737" endtime="20221023 13:19:07.738"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221023 13:19:07.738" endtime="20221023 13:19:07.739"/>
</kw>
<status status="PASS" starttime="20221023 13:19:07.738" endtime="20221023 13:19:07.739"/>
</branch>
<status status="PASS" starttime="20221023 13:19:07.737" endtime="20221023 13:19:07.739"/>
</if>
<status status="PASS" starttime="20221023 13:19:07.673" endtime="20221023 13:19:07.739"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221023 13:19:07.740" endtime="20221023 13:19:07.741"/>
</kw>
<status status="PASS" starttime="20221023 13:19:07.739" endtime="20221023 13:19:07.741"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221023 13:19:07.747" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20221023 13:19:07.770" level="INFO">${rc} = 0</msg>
<msg timestamp="20221023 13:19:07.770" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221023 13:19:07.744" endtime="20221023 13:19:07.770"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221023 13:19:07.771" level="INFO">200</msg>
<status status="PASS" starttime="20221023 13:19:07.771" endtime="20221023 13:19:07.772"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221023 13:19:07.772" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221023 13:19:07.772" endtime="20221023 13:19:07.772"/>
</kw>
<status status="PASS" starttime="20221023 13:19:07.743" endtime="20221023 13:19:07.773"/>
</kw>
<msg timestamp="20221023 13:19:07.773" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221023 13:19:07.742" endtime="20221023 13:19:07.774"/>
</kw>
<msg timestamp="20221023 13:19:07.775" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221023 13:19:07.742" endtime="20221023 13:19:07.775"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221023 13:19:07.776" endtime="20221023 13:19:07.776"/>
</kw>
<status status="NOT RUN" starttime="20221023 13:19:07.775" endtime="20221023 13:19:07.776"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221023 13:19:07.776" endtime="20221023 13:19:07.776"/>
</kw>
<status status="PASS" starttime="20221023 13:19:07.776" endtime="20221023 13:19:07.777"/>
</branch>
<status status="PASS" starttime="20221023 13:19:07.775" endtime="20221023 13:19:07.777"/>
</if>
<status status="PASS" starttime="20221023 13:19:07.741" endtime="20221023 13:19:07.777"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221023 13:19:07.777" endtime="20221023 13:19:07.778"/>
</kw>
<status status="PASS" starttime="20221023 13:19:07.777" endtime="20221023 13:19:07.778"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221023 13:19:07.784" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20221023 13:19:07.811" level="INFO">${rc} = 0</msg>
<msg timestamp="20221023 13:19:07.811" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221023 13:19:07.781" endtime="20221023 13:19:07.811"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221023 13:19:07.813" level="INFO">200</msg>
<status status="PASS" starttime="20221023 13:19:07.812" endtime="20221023 13:19:07.813"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221023 13:19:07.814" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221023 13:19:07.813" endtime="20221023 13:19:07.814"/>
</kw>
<status status="PASS" starttime="20221023 13:19:07.781" endtime="20221023 13:19:07.814"/>
</kw>
<msg timestamp="20221023 13:19:07.814" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221023 13:19:07.780" endtime="20221023 13:19:07.815"/>
</kw>
<msg timestamp="20221023 13:19:07.820" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221023 13:19:07.779" endtime="20221023 13:19:07.820"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221023 13:19:07.820" endtime="20221023 13:19:07.820"/>
</kw>
<status status="NOT RUN" starttime="20221023 13:19:07.820" endtime="20221023 13:19:07.821"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221023 13:19:07.822" endtime="20221023 13:19:07.824"/>
</kw>
<status status="PASS" starttime="20221023 13:19:07.821" endtime="20221023 13:19:07.824"/>
</branch>
<status status="PASS" starttime="20221023 13:19:07.820" endtime="20221023 13:19:07.824"/>
</if>
<status status="PASS" starttime="20221023 13:19:07.778" endtime="20221023 13:19:07.824"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221023 13:19:07.825" endtime="20221023 13:19:07.826"/>
</kw>
<status status="PASS" starttime="20221023 13:19:07.824" endtime="20221023 13:19:07.826"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221023 13:19:07.832" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20221023 13:19:07.860" level="INFO">${rc} = 0</msg>
<msg timestamp="20221023 13:19:07.860" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221023 13:19:07.829" endtime="20221023 13:19:07.862"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221023 13:19:07.864" level="INFO">200</msg>
<status status="PASS" starttime="20221023 13:19:07.863" endtime="20221023 13:19:07.864"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221023 13:19:07.864" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221023 13:19:07.864" endtime="20221023 13:19:07.865"/>
</kw>
<status status="PASS" starttime="20221023 13:19:07.828" endtime="20221023 13:19:07.867"/>
</kw>
<msg timestamp="20221023 13:19:07.867" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221023 13:19:07.828" endtime="20221023 13:19:07.867"/>
</kw>
<msg timestamp="20221023 13:19:07.868" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221023 13:19:07.827" endtime="20221023 13:19:07.868"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221023 13:19:07.869" endtime="20221023 13:19:07.869"/>
</kw>
<status status="NOT RUN" starttime="20221023 13:19:07.869" endtime="20221023 13:19:07.869"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221023 13:19:07.869" endtime="20221023 13:19:07.870"/>
</kw>
<status status="PASS" starttime="20221023 13:19:07.869" endtime="20221023 13:19:07.870"/>
</branch>
<status status="PASS" starttime="20221023 13:19:07.868" endtime="20221023 13:19:07.870"/>
</if>
<status status="PASS" starttime="20221023 13:19:07.826" endtime="20221023 13:19:07.870"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221023 13:19:07.660" endtime="20221023 13:19:07.871"/>
</test>
<test id="s1-s2-s1-t7" name="Check normal api access" line="127">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221023 13:19:07.878" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20221023 13:19:07.882" level="INFO">${rc} = 0</msg>
<msg timestamp="20221023 13:19:07.882" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221023 13:19:07.875" endtime="20221023 13:19:07.882"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221023 13:19:07.884" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221023 13:19:07.883" endtime="20221023 13:19:07.884"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221023 13:19:07.885" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221023 13:19:07.884" endtime="20221023 13:19:07.885"/>
</kw>
<status status="PASS" starttime="20221023 13:19:07.874" endtime="20221023 13:19:07.885"/>
</kw>
<msg timestamp="20221023 13:19:07.885" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221023 13:19:07.874" endtime="20221023 13:19:07.886"/>
</kw>
<status status="PASS" starttime="20221023 13:19:07.873" endtime="20221023 13:19:07.886"/>
</kw>
<kw name="Check http return code">
<arg>${NON_ADMIN_API_ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221023 13:19:07.891" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20221023 13:19:07.921" level="INFO">${rc} = 0</msg>
<msg timestamp="20221023 13:19:07.921" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221023 13:19:07.889" endtime="20221023 13:19:07.921"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221023 13:19:07.923" level="INFO">200</msg>
<status status="PASS" starttime="20221023 13:19:07.921" endtime="20221023 13:19:07.923"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221023 13:19:07.924" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221023 13:19:07.923" endtime="20221023 13:19:07.924"/>
</kw>
<status status="PASS" starttime="20221023 13:19:07.888" endtime="20221023 13:19:07.924"/>
</kw>
<msg timestamp="20221023 13:19:07.924" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221023 13:19:07.888" endtime="20221023 13:19:07.925"/>
</kw>
<msg timestamp="20221023 13:19:07.925" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221023 13:19:07.887" endtime="20221023 13:19:07.925"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221023 13:19:07.926" endtime="20221023 13:19:07.926"/>
</kw>
<status status="NOT RUN" starttime="20221023 13:19:07.926" endtime="20221023 13:19:07.926"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221023 13:19:07.926" endtime="20221023 13:19:07.927"/>
</kw>
<status status="PASS" starttime="20221023 13:19:07.926" endtime="20221023 13:19:07.927"/>
</branch>
<status status="PASS" starttime="20221023 13:19:07.925" endtime="20221023 13:19:07.927"/>
</if>
<status status="PASS" starttime="20221023 13:19:07.887" endtime="20221023 13:19:07.927"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221023 13:19:07.928" endtime="20221023 13:19:07.928"/>
</kw>
<status status="PASS" starttime="20221023 13:19:07.927" endtime="20221023 13:19:07.928"/>
</kw>
<kw name="Check http return code">
<arg>${NON_ADMIN_API_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221023 13:19:07.933" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20221023 13:19:07.953" level="INFO">${rc} = 0</msg>
<msg timestamp="20221023 13:19:07.953" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221023 13:19:07.930" endtime="20221023 13:19:07.953"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221023 13:19:07.954" level="INFO">200</msg>
<status status="PASS" starttime="20221023 13:19:07.954" endtime="20221023 13:19:07.955"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221023 13:19:07.956" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221023 13:19:07.955" endtime="20221023 13:19:07.956"/>
</kw>
<status status="PASS" starttime="20221023 13:19:07.930" endtime="20221023 13:19:07.957"/>
</kw>
<msg timestamp="20221023 13:19:07.957" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221023 13:19:07.930" endtime="20221023 13:19:07.958"/>
</kw>
<msg timestamp="20221023 13:19:07.958" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221023 13:19:07.929" endtime="20221023 13:19:07.958"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221023 13:19:07.959" endtime="20221023 13:19:07.959"/>
</kw>
<status status="NOT RUN" starttime="20221023 13:19:07.958" endtime="20221023 13:19:07.959"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221023 13:19:07.959" endtime="20221023 13:19:07.959"/>
</kw>
<status status="PASS" starttime="20221023 13:19:07.959" endtime="20221023 13:19:07.959"/>
</branch>
<status status="PASS" starttime="20221023 13:19:07.958" endtime="20221023 13:19:07.959"/>
</if>
<status status="PASS" starttime="20221023 13:19:07.928" endtime="20221023 13:19:07.960"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221023 13:19:07.872" endtime="20221023 13:19:07.960"/>
</test>
<doc>Smoke test to start cluster with docker-compose environments.</doc>
<status status="PASS" starttime="20221023 13:18:24.472" endtime="20221023 13:19:07.962"/>
</suite>
<suite id="s1-s2-s2" name="Recon-Fso-Nssummary" source="/opt/hadoop/smoketest/recon/recon-fso-nssummary.robot">
<test id="s1-s2-s2-t1" name="Check volume creation" line="98">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221023 13:19:07.978" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20221023 13:19:07.982" level="INFO">${rc} = 0</msg>
<msg timestamp="20221023 13:19:07.982" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221023 13:19:07.976" endtime="20221023 13:19:07.982"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221023 13:19:07.983" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221023 13:19:07.983" endtime="20221023 13:19:07.983"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221023 13:19:07.984" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221023 13:19:07.984" endtime="20221023 13:19:07.984"/>
</kw>
<status status="PASS" starttime="20221023 13:19:07.975" endtime="20221023 13:19:07.985"/>
</kw>
<msg timestamp="20221023 13:19:07.985" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221023 13:19:07.975" endtime="20221023 13:19:07.985"/>
</kw>
<status status="PASS" starttime="20221023 13:19:07.974" endtime="20221023 13:19:07.985"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221023 13:19:07.986" endtime="20221023 13:19:07.987"/>
</kw>
<status status="PASS" starttime="20221023 13:19:07.986" endtime="20221023 13:19:07.987"/>
</kw>
<kw name="Create volume">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20221023 13:19:07.989" level="INFO">${random} = mffep</msg>
<status status="PASS" starttime="20221023 13:19:07.988" endtime="20221023 13:19:07.989"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${VOLUME}</arg>
<arg>vol-${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20221023 13:19:07.989" level="INFO">${VOLUME} = vol-mffep</msg>
<status status="PASS" starttime="20221023 13:19:07.989" endtime="20221023 13:19:07.989"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${VOLUME}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221023 13:19:07.993" level="INFO">Running command 'ozone sh volume create /vol-mffep 2&gt;&amp;1'.</msg>
<msg timestamp="20221023 13:19:12.864" level="INFO">${rc} = 0</msg>
<msg timestamp="20221023 13:19:12.864" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221023 13:19:07.991" endtime="20221023 13:19:12.865"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221023 13:19:12.867" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221023 13:19:12.865" endtime="20221023 13:19:12.867"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221023 13:19:12.868" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221023 13:19:12.867" endtime="20221023 13:19:12.868"/>
</kw>
<status status="PASS" starttime="20221023 13:19:07.990" endtime="20221023 13:19:12.868"/>
</kw>
<msg timestamp="20221023 13:19:12.868" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221023 13:19:07.990" endtime="20221023 13:19:12.869"/>
</kw>
<msg timestamp="20221023 13:19:12.869" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221023 13:19:07.990" endtime="20221023 13:19:12.869"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20221023 13:19:12.870" endtime="20221023 13:19:12.870"/>
</kw>
<status status="PASS" starttime="20221023 13:19:07.987" endtime="20221023 13:19:12.870"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221023 13:19:07.974" endtime="20221023 13:19:12.871"/>
</test>
<test id="s1-s2-s2-t2" name="Check bucket creation" line="103">
<kw name="Create bucket">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20221023 13:19:12.875" level="INFO">${random} = qabrh</msg>
<status status="PASS" starttime="20221023 13:19:12.874" endtime="20221023 13:19:12.875"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<arg>buc-${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20221023 13:19:12.876" level="INFO">${BUCKET} = buc-qabrh</msg>
<status status="PASS" starttime="20221023 13:19:12.875" endtime="20221023 13:19:12.876"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create -l FILE_SYSTEM_OPTIMIZED /${VOLUME}/${BUCKET}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221023 13:19:12.880" level="INFO">Running command 'ozone sh bucket create -l FILE_SYSTEM_OPTIMIZED /vol-mffep/buc-qabrh 2&gt;&amp;1'.</msg>
<msg timestamp="20221023 13:19:17.549" level="INFO">${rc} = 0</msg>
<msg timestamp="20221023 13:19:17.549" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221023 13:19:12.878" endtime="20221023 13:19:17.549"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221023 13:19:17.550" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221023 13:19:17.549" endtime="20221023 13:19:17.550"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221023 13:19:17.551" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221023 13:19:17.550" endtime="20221023 13:19:17.551"/>
</kw>
<status status="PASS" starttime="20221023 13:19:12.877" endtime="20221023 13:19:17.552"/>
</kw>
<msg timestamp="20221023 13:19:17.552" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221023 13:19:12.877" endtime="20221023 13:19:17.553"/>
</kw>
<msg timestamp="20221023 13:19:17.553" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221023 13:19:12.876" endtime="20221023 13:19:17.553"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20221023 13:19:17.553" endtime="20221023 13:19:17.554"/>
</kw>
<status status="PASS" starttime="20221023 13:19:12.873" endtime="20221023 13:19:17.554"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221023 13:19:12.872" endtime="20221023 13:19:17.554"/>
</test>
<test id="s1-s2-s2-t3" name="Check keys creation" line="106">
<kw name="Create keys">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put /${VOLUME}/${BUCKET}/file1 README.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221023 13:19:17.561" level="INFO">Running command 'ozone sh key put /vol-mffep/buc-qabrh/file1 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20221023 13:19:25.103" level="INFO">${rc} = 0</msg>
<msg timestamp="20221023 13:19:25.103" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221023 13:19:17.559" endtime="20221023 13:19:25.104"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221023 13:19:25.105" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221023 13:19:25.104" endtime="20221023 13:19:25.105"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221023 13:19:25.105" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221023 13:19:25.105" endtime="20221023 13:19:25.106"/>
</kw>
<status status="PASS" starttime="20221023 13:19:17.558" endtime="20221023 13:19:25.106"/>
</kw>
<msg timestamp="20221023 13:19:25.106" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221023 13:19:17.558" endtime="20221023 13:19:25.107"/>
</kw>
<msg timestamp="20221023 13:19:25.108" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221023 13:19:17.557" endtime="20221023 13:19:25.108"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20221023 13:19:25.108" endtime="20221023 13:19:25.108"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put /${VOLUME}/${BUCKET}/dir1/dir2/file2 HISTORY.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221023 13:19:25.115" level="INFO">Running command 'ozone sh key put /vol-mffep/buc-qabrh/dir1/dir2/file2 HISTORY.md 2&gt;&amp;1'.</msg>
<msg timestamp="20221023 13:19:33.013" level="INFO">${rc} = 0</msg>
<msg timestamp="20221023 13:19:33.014" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221023 13:19:25.111" endtime="20221023 13:19:33.014"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221023 13:19:33.015" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221023 13:19:33.014" endtime="20221023 13:19:33.015"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221023 13:19:33.016" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221023 13:19:33.016" endtime="20221023 13:19:33.016"/>
</kw>
<status status="PASS" starttime="20221023 13:19:25.110" endtime="20221023 13:19:33.017"/>
</kw>
<msg timestamp="20221023 13:19:33.017" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221023 13:19:25.109" endtime="20221023 13:19:33.017"/>
</kw>
<msg timestamp="20221023 13:19:33.018" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221023 13:19:25.109" endtime="20221023 13:19:33.018"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20221023 13:19:33.018" endtime="20221023 13:19:33.018"/>
</kw>
<status status="PASS" starttime="20221023 13:19:17.556" endtime="20221023 13:19:33.018"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221023 13:19:17.555" endtime="20221023 13:19:33.019"/>
</test>
<test id="s1-s2-s2-t4" name="Check Summary api access" line="109">
<kw name="Check Access">
<arg>${SUMMARY_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221023 13:19:33.027" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20221023 13:19:33.034" level="INFO">${rc} = 0</msg>
<msg timestamp="20221023 13:19:33.034" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221023 13:19:33.024" endtime="20221023 13:19:33.034"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221023 13:19:33.036" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221023 13:19:33.034" endtime="20221023 13:19:33.036"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221023 13:19:33.037" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221023 13:19:33.036" endtime="20221023 13:19:33.037"/>
</kw>
<status status="PASS" starttime="20221023 13:19:33.023" endtime="20221023 13:19:33.038"/>
</kw>
<msg timestamp="20221023 13:19:33.038" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221023 13:19:33.023" endtime="20221023 13:19:33.039"/>
</kw>
<status status="PASS" starttime="20221023 13:19:33.022" endtime="20221023 13:19:33.039"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221023 13:19:33.044" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221023 13:19:33.088" level="INFO">${rc} = 0</msg>
<msg timestamp="20221023 13:19:33.088" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221023 13:19:33.042" endtime="20221023 13:19:33.088"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221023 13:19:33.089" level="INFO">200</msg>
<status status="PASS" starttime="20221023 13:19:33.088" endtime="20221023 13:19:33.089"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221023 13:19:33.090" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221023 13:19:33.089" endtime="20221023 13:19:33.090"/>
</kw>
<status status="PASS" starttime="20221023 13:19:33.041" endtime="20221023 13:19:33.091"/>
</kw>
<msg timestamp="20221023 13:19:33.091" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221023 13:19:33.041" endtime="20221023 13:19:33.091"/>
</kw>
<msg timestamp="20221023 13:19:33.092" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221023 13:19:33.040" endtime="20221023 13:19:33.092"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221023 13:19:33.092" endtime="20221023 13:19:33.092"/>
</kw>
<status status="NOT RUN" starttime="20221023 13:19:33.092" endtime="20221023 13:19:33.093"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221023 13:19:33.093" endtime="20221023 13:19:33.093"/>
</kw>
<status status="PASS" starttime="20221023 13:19:33.093" endtime="20221023 13:19:33.093"/>
</branch>
<status status="PASS" starttime="20221023 13:19:33.092" endtime="20221023 13:19:33.093"/>
</if>
<status status="PASS" starttime="20221023 13:19:33.039" endtime="20221023 13:19:33.094"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221023 13:19:33.095" endtime="20221023 13:19:33.095"/>
</kw>
<status status="PASS" starttime="20221023 13:19:33.094" endtime="20221023 13:19:33.095"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221023 13:19:33.101" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221023 13:19:33.121" level="INFO">${rc} = 0</msg>
<msg timestamp="20221023 13:19:33.121" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221023 13:19:33.098" endtime="20221023 13:19:33.121"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221023 13:19:33.123" level="INFO">200</msg>
<status status="PASS" starttime="20221023 13:19:33.122" endtime="20221023 13:19:33.123"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221023 13:19:33.126" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221023 13:19:33.123" endtime="20221023 13:19:33.126"/>
</kw>
<status status="PASS" starttime="20221023 13:19:33.097" endtime="20221023 13:19:33.126"/>
</kw>
<msg timestamp="20221023 13:19:33.127" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221023 13:19:33.097" endtime="20221023 13:19:33.129"/>
</kw>
<msg timestamp="20221023 13:19:33.130" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221023 13:19:33.096" endtime="20221023 13:19:33.130"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221023 13:19:33.131" endtime="20221023 13:19:33.131"/>
</kw>
<status status="NOT RUN" starttime="20221023 13:19:33.130" endtime="20221023 13:19:33.131"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221023 13:19:33.131" endtime="20221023 13:19:33.132"/>
</kw>
<status status="PASS" starttime="20221023 13:19:33.131" endtime="20221023 13:19:33.132"/>
</branch>
<status status="PASS" starttime="20221023 13:19:33.130" endtime="20221023 13:19:33.132"/>
</if>
<status status="PASS" starttime="20221023 13:19:33.095" endtime="20221023 13:19:33.132"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221023 13:19:33.133" endtime="20221023 13:19:33.133"/>
</kw>
<status status="PASS" starttime="20221023 13:19:33.132" endtime="20221023 13:19:33.133"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221023 13:19:33.139" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221023 13:19:33.158" level="INFO">${rc} = 0</msg>
<msg timestamp="20221023 13:19:33.158" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221023 13:19:33.136" endtime="20221023 13:19:33.158"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221023 13:19:33.159" level="INFO">200</msg>
<status status="PASS" starttime="20221023 13:19:33.158" endtime="20221023 13:19:33.159"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221023 13:19:33.160" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221023 13:19:33.160" endtime="20221023 13:19:33.161"/>
</kw>
<status status="PASS" starttime="20221023 13:19:33.135" endtime="20221023 13:19:33.161"/>
</kw>
<msg timestamp="20221023 13:19:33.161" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221023 13:19:33.135" endtime="20221023 13:19:33.162"/>
</kw>
<msg timestamp="20221023 13:19:33.162" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221023 13:19:33.134" endtime="20221023 13:19:33.162"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221023 13:19:33.162" endtime="20221023 13:19:33.163"/>
</kw>
<status status="NOT RUN" starttime="20221023 13:19:33.162" endtime="20221023 13:19:33.163"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221023 13:19:33.163" endtime="20221023 13:19:33.163"/>
</kw>
<status status="PASS" starttime="20221023 13:19:33.163" endtime="20221023 13:19:33.163"/>
</branch>
<status status="PASS" starttime="20221023 13:19:33.162" endtime="20221023 13:19:33.163"/>
</if>
<status status="PASS" starttime="20221023 13:19:33.134" endtime="20221023 13:19:33.164"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221023 13:19:33.164" endtime="20221023 13:19:33.165"/>
</kw>
<status status="PASS" starttime="20221023 13:19:33.164" endtime="20221023 13:19:33.165"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221023 13:19:33.170" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221023 13:19:33.194" level="INFO">${rc} = 0</msg>
<msg timestamp="20221023 13:19:33.194" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221023 13:19:33.168" endtime="20221023 13:19:33.195"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221023 13:19:33.196" level="INFO">200</msg>
<status status="PASS" starttime="20221023 13:19:33.195" endtime="20221023 13:19:33.196"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221023 13:19:33.197" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221023 13:19:33.196" endtime="20221023 13:19:33.197"/>
</kw>
<status status="PASS" starttime="20221023 13:19:33.167" endtime="20221023 13:19:33.198"/>
</kw>
<msg timestamp="20221023 13:19:33.198" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221023 13:19:33.167" endtime="20221023 13:19:33.199"/>
</kw>
<msg timestamp="20221023 13:19:33.199" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221023 13:19:33.166" endtime="20221023 13:19:33.199"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221023 13:19:33.200" endtime="20221023 13:19:33.200"/>
</kw>
<status status="NOT RUN" starttime="20221023 13:19:33.200" endtime="20221023 13:19:33.200"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221023 13:19:33.200" endtime="20221023 13:19:33.201"/>
</kw>
<status status="PASS" starttime="20221023 13:19:33.200" endtime="20221023 13:19:33.201"/>
</branch>
<status status="PASS" starttime="20221023 13:19:33.199" endtime="20221023 13:19:33.201"/>
</if>
<status status="PASS" starttime="20221023 13:19:33.165" endtime="20221023 13:19:33.201"/>
</kw>
<status status="PASS" starttime="20221023 13:19:33.021" endtime="20221023 13:19:33.201"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221023 13:19:33.020" endtime="20221023 13:19:33.202"/>
</test>
<test id="s1-s2-s2-t5" name="Check Disk Usage api access" line="112">
<kw name="Check Access">
<arg>${DISK_USAGE_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221023 13:19:33.209" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20221023 13:19:33.213" level="INFO">${rc} = 0</msg>
<msg timestamp="20221023 13:19:33.214" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221023 13:19:33.206" endtime="20221023 13:19:33.214"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221023 13:19:33.215" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221023 13:19:33.214" endtime="20221023 13:19:33.215"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221023 13:19:33.216" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221023 13:19:33.215" endtime="20221023 13:19:33.216"/>
</kw>
<status status="PASS" starttime="20221023 13:19:33.206" endtime="20221023 13:19:33.216"/>
</kw>
<msg timestamp="20221023 13:19:33.216" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221023 13:19:33.205" endtime="20221023 13:19:33.217"/>
</kw>
<status status="PASS" starttime="20221023 13:19:33.205" endtime="20221023 13:19:33.217"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221023 13:19:33.222" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221023 13:19:33.245" level="INFO">${rc} = 0</msg>
<msg timestamp="20221023 13:19:33.245" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221023 13:19:33.220" endtime="20221023 13:19:33.245"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221023 13:19:33.247" level="INFO">200</msg>
<status status="PASS" starttime="20221023 13:19:33.246" endtime="20221023 13:19:33.247"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221023 13:19:33.248" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221023 13:19:33.247" endtime="20221023 13:19:33.248"/>
</kw>
<status status="PASS" starttime="20221023 13:19:33.219" endtime="20221023 13:19:33.248"/>
</kw>
<msg timestamp="20221023 13:19:33.248" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221023 13:19:33.219" endtime="20221023 13:19:33.249"/>
</kw>
<msg timestamp="20221023 13:19:33.249" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221023 13:19:33.218" endtime="20221023 13:19:33.249"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221023 13:19:33.250" endtime="20221023 13:19:33.250"/>
</kw>
<status status="NOT RUN" starttime="20221023 13:19:33.250" endtime="20221023 13:19:33.250"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221023 13:19:33.250" endtime="20221023 13:19:33.251"/>
</kw>
<status status="PASS" starttime="20221023 13:19:33.250" endtime="20221023 13:19:33.251"/>
</branch>
<status status="PASS" starttime="20221023 13:19:33.249" endtime="20221023 13:19:33.251"/>
</if>
<status status="PASS" starttime="20221023 13:19:33.218" endtime="20221023 13:19:33.252"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221023 13:19:33.252" endtime="20221023 13:19:33.253"/>
</kw>
<status status="PASS" starttime="20221023 13:19:33.252" endtime="20221023 13:19:33.253"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221023 13:19:33.258" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221023 13:19:33.278" level="INFO">${rc} = 0</msg>
<msg timestamp="20221023 13:19:33.278" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221023 13:19:33.255" endtime="20221023 13:19:33.278"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221023 13:19:33.279" level="INFO">200</msg>
<status status="PASS" starttime="20221023 13:19:33.279" endtime="20221023 13:19:33.280"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221023 13:19:33.280" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221023 13:19:33.280" endtime="20221023 13:19:33.280"/>
</kw>
<status status="PASS" starttime="20221023 13:19:33.254" endtime="20221023 13:19:33.281"/>
</kw>
<msg timestamp="20221023 13:19:33.281" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221023 13:19:33.254" endtime="20221023 13:19:33.281"/>
</kw>
<msg timestamp="20221023 13:19:33.282" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221023 13:19:33.254" endtime="20221023 13:19:33.282"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221023 13:19:33.283" endtime="20221023 13:19:33.283"/>
</kw>
<status status="NOT RUN" starttime="20221023 13:19:33.282" endtime="20221023 13:19:33.283"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221023 13:19:33.283" endtime="20221023 13:19:33.284"/>
</kw>
<status status="PASS" starttime="20221023 13:19:33.283" endtime="20221023 13:19:33.284"/>
</branch>
<status status="PASS" starttime="20221023 13:19:33.282" endtime="20221023 13:19:33.284"/>
</if>
<status status="PASS" starttime="20221023 13:19:33.253" endtime="20221023 13:19:33.284"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221023 13:19:33.285" endtime="20221023 13:19:33.285"/>
</kw>
<status status="PASS" starttime="20221023 13:19:33.284" endtime="20221023 13:19:33.285"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221023 13:19:33.292" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221023 13:19:33.309" level="INFO">${rc} = 0</msg>
<msg timestamp="20221023 13:19:33.310" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221023 13:19:33.288" endtime="20221023 13:19:33.310"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221023 13:19:33.311" level="INFO">200</msg>
<status status="PASS" starttime="20221023 13:19:33.310" endtime="20221023 13:19:33.311"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221023 13:19:33.312" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221023 13:19:33.312" endtime="20221023 13:19:33.312"/>
</kw>
<status status="PASS" starttime="20221023 13:19:33.288" endtime="20221023 13:19:33.313"/>
</kw>
<msg timestamp="20221023 13:19:33.313" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221023 13:19:33.287" endtime="20221023 13:19:33.313"/>
</kw>
<msg timestamp="20221023 13:19:33.314" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221023 13:19:33.286" endtime="20221023 13:19:33.314"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221023 13:19:33.314" endtime="20221023 13:19:33.314"/>
</kw>
<status status="NOT RUN" starttime="20221023 13:19:33.314" endtime="20221023 13:19:33.314"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221023 13:19:33.315" endtime="20221023 13:19:33.315"/>
</kw>
<status status="PASS" starttime="20221023 13:19:33.314" endtime="20221023 13:19:33.315"/>
</branch>
<status status="PASS" starttime="20221023 13:19:33.314" endtime="20221023 13:19:33.315"/>
</if>
<status status="PASS" starttime="20221023 13:19:33.286" endtime="20221023 13:19:33.316"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221023 13:19:33.316" endtime="20221023 13:19:33.319"/>
</kw>
<status status="PASS" starttime="20221023 13:19:33.316" endtime="20221023 13:19:33.319"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221023 13:19:33.324" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221023 13:19:33.340" level="INFO">${rc} = 0</msg>
<msg timestamp="20221023 13:19:33.341" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221023 13:19:33.321" endtime="20221023 13:19:33.341"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221023 13:19:33.342" level="INFO">200</msg>
<status status="PASS" starttime="20221023 13:19:33.341" endtime="20221023 13:19:33.342"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221023 13:19:33.343" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221023 13:19:33.342" endtime="20221023 13:19:33.343"/>
</kw>
<status status="PASS" starttime="20221023 13:19:33.321" endtime="20221023 13:19:33.343"/>
</kw>
<msg timestamp="20221023 13:19:33.343" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221023 13:19:33.320" endtime="20221023 13:19:33.344"/>
</kw>
<msg timestamp="20221023 13:19:33.344" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221023 13:19:33.320" endtime="20221023 13:19:33.344"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221023 13:19:33.345" endtime="20221023 13:19:33.345"/>
</kw>
<status status="NOT RUN" starttime="20221023 13:19:33.345" endtime="20221023 13:19:33.345"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221023 13:19:33.345" endtime="20221023 13:19:33.346"/>
</kw>
<status status="PASS" starttime="20221023 13:19:33.345" endtime="20221023 13:19:33.346"/>
</branch>
<status status="PASS" starttime="20221023 13:19:33.344" endtime="20221023 13:19:33.346"/>
</if>
<status status="PASS" starttime="20221023 13:19:33.319" endtime="20221023 13:19:33.346"/>
</kw>
<status status="PASS" starttime="20221023 13:19:33.204" endtime="20221023 13:19:33.346"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221023 13:19:33.203" endtime="20221023 13:19:33.346"/>
</test>
<test id="s1-s2-s2-t6" name="Check Quota Usage api access" line="115">
<kw name="Check Access">
<arg>${QUOTA_USAGE_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221023 13:19:33.353" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20221023 13:19:33.357" level="INFO">${rc} = 0</msg>
<msg timestamp="20221023 13:19:33.357" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221023 13:19:33.351" endtime="20221023 13:19:33.358"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221023 13:19:33.359" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221023 13:19:33.358" endtime="20221023 13:19:33.359"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221023 13:19:33.360" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221023 13:19:33.359" endtime="20221023 13:19:33.360"/>
</kw>
<status status="PASS" starttime="20221023 13:19:33.350" endtime="20221023 13:19:33.360"/>
</kw>
<msg timestamp="20221023 13:19:33.360" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221023 13:19:33.350" endtime="20221023 13:19:33.361"/>
</kw>
<status status="PASS" starttime="20221023 13:19:33.349" endtime="20221023 13:19:33.361"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221023 13:19:33.366" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221023 13:19:33.389" level="INFO">${rc} = 0</msg>
<msg timestamp="20221023 13:19:33.389" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221023 13:19:33.364" endtime="20221023 13:19:33.389"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221023 13:19:33.390" level="INFO">200</msg>
<status status="PASS" starttime="20221023 13:19:33.389" endtime="20221023 13:19:33.390"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221023 13:19:33.391" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221023 13:19:33.390" endtime="20221023 13:19:33.391"/>
</kw>
<status status="PASS" starttime="20221023 13:19:33.363" endtime="20221023 13:19:33.391"/>
</kw>
<msg timestamp="20221023 13:19:33.391" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221023 13:19:33.363" endtime="20221023 13:19:33.392"/>
</kw>
<msg timestamp="20221023 13:19:33.393" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221023 13:19:33.362" endtime="20221023 13:19:33.393"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221023 13:19:33.393" endtime="20221023 13:19:33.393"/>
</kw>
<status status="NOT RUN" starttime="20221023 13:19:33.393" endtime="20221023 13:19:33.393"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221023 13:19:33.394" endtime="20221023 13:19:33.394"/>
</kw>
<status status="PASS" starttime="20221023 13:19:33.393" endtime="20221023 13:19:33.394"/>
</branch>
<status status="PASS" starttime="20221023 13:19:33.393" endtime="20221023 13:19:33.394"/>
</if>
<status status="PASS" starttime="20221023 13:19:33.361" endtime="20221023 13:19:33.395"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221023 13:19:33.395" endtime="20221023 13:19:33.396"/>
</kw>
<status status="PASS" starttime="20221023 13:19:33.395" endtime="20221023 13:19:33.396"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221023 13:19:33.401" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221023 13:19:33.417" level="INFO">${rc} = 0</msg>
<msg timestamp="20221023 13:19:33.417" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221023 13:19:33.398" endtime="20221023 13:19:33.417"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221023 13:19:33.418" level="INFO">200</msg>
<status status="PASS" starttime="20221023 13:19:33.417" endtime="20221023 13:19:33.418"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221023 13:19:33.419" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221023 13:19:33.418" endtime="20221023 13:19:33.419"/>
</kw>
<status status="PASS" starttime="20221023 13:19:33.398" endtime="20221023 13:19:33.419"/>
</kw>
<msg timestamp="20221023 13:19:33.420" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221023 13:19:33.397" endtime="20221023 13:19:33.420"/>
</kw>
<msg timestamp="20221023 13:19:33.421" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221023 13:19:33.397" endtime="20221023 13:19:33.421"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221023 13:19:33.421" endtime="20221023 13:19:33.421"/>
</kw>
<status status="NOT RUN" starttime="20221023 13:19:33.421" endtime="20221023 13:19:33.421"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221023 13:19:33.422" endtime="20221023 13:19:33.422"/>
</kw>
<status status="PASS" starttime="20221023 13:19:33.421" endtime="20221023 13:19:33.422"/>
</branch>
<status status="PASS" starttime="20221023 13:19:33.421" endtime="20221023 13:19:33.422"/>
</if>
<status status="PASS" starttime="20221023 13:19:33.396" endtime="20221023 13:19:33.422"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221023 13:19:33.423" endtime="20221023 13:19:33.424"/>
</kw>
<status status="PASS" starttime="20221023 13:19:33.422" endtime="20221023 13:19:33.424"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221023 13:19:33.428" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221023 13:19:33.443" level="INFO">${rc} = 0</msg>
<msg timestamp="20221023 13:19:33.443" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221023 13:19:33.426" endtime="20221023 13:19:33.443"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221023 13:19:33.444" level="INFO">200</msg>
<status status="PASS" starttime="20221023 13:19:33.444" endtime="20221023 13:19:33.444"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221023 13:19:33.445" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221023 13:19:33.445" endtime="20221023 13:19:33.445"/>
</kw>
<status status="PASS" starttime="20221023 13:19:33.425" endtime="20221023 13:19:33.446"/>
</kw>
<msg timestamp="20221023 13:19:33.446" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221023 13:19:33.425" endtime="20221023 13:19:33.446"/>
</kw>
<msg timestamp="20221023 13:19:33.447" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221023 13:19:33.424" endtime="20221023 13:19:33.447"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221023 13:19:33.447" endtime="20221023 13:19:33.447"/>
</kw>
<status status="NOT RUN" starttime="20221023 13:19:33.447" endtime="20221023 13:19:33.447"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221023 13:19:33.448" endtime="20221023 13:19:33.448"/>
</kw>
<status status="PASS" starttime="20221023 13:19:33.447" endtime="20221023 13:19:33.448"/>
</branch>
<status status="PASS" starttime="20221023 13:19:33.447" endtime="20221023 13:19:33.448"/>
</if>
<status status="PASS" starttime="20221023 13:19:33.424" endtime="20221023 13:19:33.449"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221023 13:19:33.449" endtime="20221023 13:19:33.450"/>
</kw>
<status status="PASS" starttime="20221023 13:19:33.449" endtime="20221023 13:19:33.450"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221023 13:19:33.455" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221023 13:19:33.470" level="INFO">${rc} = 0</msg>
<msg timestamp="20221023 13:19:33.471" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221023 13:19:33.453" endtime="20221023 13:19:33.471"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221023 13:19:33.472" level="INFO">200</msg>
<status status="PASS" starttime="20221023 13:19:33.471" endtime="20221023 13:19:33.472"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221023 13:19:33.473" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221023 13:19:33.472" endtime="20221023 13:19:33.473"/>
</kw>
<status status="PASS" starttime="20221023 13:19:33.452" endtime="20221023 13:19:33.474"/>
</kw>
<msg timestamp="20221023 13:19:33.474" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221023 13:19:33.451" endtime="20221023 13:19:33.475"/>
</kw>
<msg timestamp="20221023 13:19:33.475" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221023 13:19:33.451" endtime="20221023 13:19:33.475"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221023 13:19:33.476" endtime="20221023 13:19:33.476"/>
</kw>
<status status="NOT RUN" starttime="20221023 13:19:33.476" endtime="20221023 13:19:33.476"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221023 13:19:33.476" endtime="20221023 13:19:33.476"/>
</kw>
<status status="PASS" starttime="20221023 13:19:33.476" endtime="20221023 13:19:33.477"/>
</branch>
<status status="PASS" starttime="20221023 13:19:33.475" endtime="20221023 13:19:33.477"/>
</if>
<status status="PASS" starttime="20221023 13:19:33.450" endtime="20221023 13:19:33.477"/>
</kw>
<status status="PASS" starttime="20221023 13:19:33.349" endtime="20221023 13:19:33.477"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221023 13:19:33.347" endtime="20221023 13:19:33.477"/>
</test>
<test id="s1-s2-s2-t7" name="Check File Size Distribution api access" line="118">
<kw name="Check Access">
<arg>${FILE_SIZE_DIST_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221023 13:19:33.483" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20221023 13:19:33.487" level="INFO">${rc} = 0</msg>
<msg timestamp="20221023 13:19:33.487" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221023 13:19:33.481" endtime="20221023 13:19:33.487"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221023 13:19:33.488" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221023 13:19:33.487" endtime="20221023 13:19:33.488"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221023 13:19:33.489" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221023 13:19:33.488" endtime="20221023 13:19:33.489"/>
</kw>
<status status="PASS" starttime="20221023 13:19:33.481" endtime="20221023 13:19:33.490"/>
</kw>
<msg timestamp="20221023 13:19:33.490" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221023 13:19:33.480" endtime="20221023 13:19:33.490"/>
</kw>
<status status="PASS" starttime="20221023 13:19:33.480" endtime="20221023 13:19:33.490"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221023 13:19:33.495" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221023 13:19:33.527" level="INFO">${rc} = 0</msg>
<msg timestamp="20221023 13:19:33.527" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221023 13:19:33.493" endtime="20221023 13:19:33.527"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221023 13:19:33.529" level="INFO">200</msg>
<status status="PASS" starttime="20221023 13:19:33.528" endtime="20221023 13:19:33.529"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221023 13:19:33.530" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221023 13:19:33.529" endtime="20221023 13:19:33.530"/>
</kw>
<status status="PASS" starttime="20221023 13:19:33.492" endtime="20221023 13:19:33.531"/>
</kw>
<msg timestamp="20221023 13:19:33.531" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221023 13:19:33.492" endtime="20221023 13:19:33.531"/>
</kw>
<msg timestamp="20221023 13:19:33.532" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221023 13:19:33.491" endtime="20221023 13:19:33.532"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221023 13:19:33.534" endtime="20221023 13:19:33.534"/>
</kw>
<status status="NOT RUN" starttime="20221023 13:19:33.532" endtime="20221023 13:19:33.534"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221023 13:19:33.534" endtime="20221023 13:19:33.534"/>
</kw>
<status status="PASS" starttime="20221023 13:19:33.534" endtime="20221023 13:19:33.534"/>
</branch>
<status status="PASS" starttime="20221023 13:19:33.532" endtime="20221023 13:19:33.534"/>
</if>
<status status="PASS" starttime="20221023 13:19:33.491" endtime="20221023 13:19:33.535"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221023 13:19:33.535" endtime="20221023 13:19:33.536"/>
</kw>
<status status="PASS" starttime="20221023 13:19:33.535" endtime="20221023 13:19:33.536"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221023 13:19:33.542" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221023 13:19:33.556" level="INFO">${rc} = 0</msg>
<msg timestamp="20221023 13:19:33.556" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221023 13:19:33.538" endtime="20221023 13:19:33.556"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221023 13:19:33.557" level="INFO">200</msg>
<status status="PASS" starttime="20221023 13:19:33.556" endtime="20221023 13:19:33.557"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221023 13:19:33.557" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221023 13:19:33.557" endtime="20221023 13:19:33.558"/>
</kw>
<status status="PASS" starttime="20221023 13:19:33.538" endtime="20221023 13:19:33.558"/>
</kw>
<msg timestamp="20221023 13:19:33.558" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221023 13:19:33.537" endtime="20221023 13:19:33.559"/>
</kw>
<msg timestamp="20221023 13:19:33.559" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221023 13:19:33.537" endtime="20221023 13:19:33.559"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221023 13:19:33.560" endtime="20221023 13:19:33.560"/>
</kw>
<status status="NOT RUN" starttime="20221023 13:19:33.560" endtime="20221023 13:19:33.560"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221023 13:19:33.560" endtime="20221023 13:19:33.561"/>
</kw>
<status status="PASS" starttime="20221023 13:19:33.560" endtime="20221023 13:19:33.561"/>
</branch>
<status status="PASS" starttime="20221023 13:19:33.559" endtime="20221023 13:19:33.561"/>
</if>
<status status="PASS" starttime="20221023 13:19:33.536" endtime="20221023 13:19:33.561"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221023 13:19:33.562" endtime="20221023 13:19:33.562"/>
</kw>
<status status="PASS" starttime="20221023 13:19:33.561" endtime="20221023 13:19:33.563"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221023 13:19:33.567" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221023 13:19:33.582" level="INFO">${rc} = 0</msg>
<msg timestamp="20221023 13:19:33.582" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221023 13:19:33.565" endtime="20221023 13:19:33.582"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221023 13:19:33.583" level="INFO">200</msg>
<status status="PASS" starttime="20221023 13:19:33.582" endtime="20221023 13:19:33.583"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221023 13:19:33.584" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221023 13:19:33.583" endtime="20221023 13:19:33.584"/>
</kw>
<status status="PASS" starttime="20221023 13:19:33.564" endtime="20221023 13:19:33.585"/>
</kw>
<msg timestamp="20221023 13:19:33.585" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221023 13:19:33.564" endtime="20221023 13:19:33.586"/>
</kw>
<msg timestamp="20221023 13:19:33.586" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221023 13:19:33.563" endtime="20221023 13:19:33.586"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221023 13:19:33.587" endtime="20221023 13:19:33.587"/>
</kw>
<status status="NOT RUN" starttime="20221023 13:19:33.587" endtime="20221023 13:19:33.587"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221023 13:19:33.587" endtime="20221023 13:19:33.588"/>
</kw>
<status status="PASS" starttime="20221023 13:19:33.587" endtime="20221023 13:19:33.588"/>
</branch>
<status status="PASS" starttime="20221023 13:19:33.586" endtime="20221023 13:19:33.588"/>
</if>
<status status="PASS" starttime="20221023 13:19:33.563" endtime="20221023 13:19:33.588"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221023 13:19:33.588" endtime="20221023 13:19:33.589"/>
</kw>
<status status="PASS" starttime="20221023 13:19:33.588" endtime="20221023 13:19:33.589"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221023 13:19:33.594" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221023 13:19:33.608" level="INFO">${rc} = 0</msg>
<msg timestamp="20221023 13:19:33.608" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221023 13:19:33.591" endtime="20221023 13:19:33.608"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221023 13:19:33.609" level="INFO">200</msg>
<status status="PASS" starttime="20221023 13:19:33.608" endtime="20221023 13:19:33.609"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221023 13:19:33.610" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221023 13:19:33.609" endtime="20221023 13:19:33.610"/>
</kw>
<status status="PASS" starttime="20221023 13:19:33.591" endtime="20221023 13:19:33.611"/>
</kw>
<msg timestamp="20221023 13:19:33.611" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221023 13:19:33.590" endtime="20221023 13:19:33.612"/>
</kw>
<msg timestamp="20221023 13:19:33.612" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221023 13:19:33.590" endtime="20221023 13:19:33.612"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221023 13:19:33.613" endtime="20221023 13:19:33.613"/>
</kw>
<status status="NOT RUN" starttime="20221023 13:19:33.613" endtime="20221023 13:19:33.613"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221023 13:19:33.613" endtime="20221023 13:19:33.614"/>
</kw>
<status status="PASS" starttime="20221023 13:19:33.613" endtime="20221023 13:19:33.614"/>
</branch>
<status status="PASS" starttime="20221023 13:19:33.612" endtime="20221023 13:19:33.614"/>
</if>
<status status="PASS" starttime="20221023 13:19:33.589" endtime="20221023 13:19:33.614"/>
</kw>
<status status="PASS" starttime="20221023 13:19:33.479" endtime="20221023 13:19:33.614"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221023 13:19:33.478" endtime="20221023 13:19:33.614"/>
</test>
<test id="s1-s2-s2-t8" name="Check Recon Namespace Summary Root" line="121">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/</arg>
<arg>ROOT</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221023 13:19:33.625" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221023 13:19:33.640" level="INFO">${rc} = 0</msg>
<msg timestamp="20221023 13:19:33.640" level="INFO">${output} = {"type":"ROOT","numVolume":3,"numBucket":2,"numDir":0,"numKey":0,"status":"OK"}</msg>
<status status="PASS" starttime="20221023 13:19:33.622" endtime="20221023 13:19:33.640"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221023 13:19:33.642" level="INFO">{"type":"ROOT","numVolume":3,"numBucket":2,"numDir":0,"numKey":0,"status":"OK"}</msg>
<status status="PASS" starttime="20221023 13:19:33.641" endtime="20221023 13:19:33.642"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221023 13:19:33.643" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221023 13:19:33.643" endtime="20221023 13:19:33.643"/>
</kw>
<status status="PASS" starttime="20221023 13:19:33.621" endtime="20221023 13:19:33.644"/>
</kw>
<msg timestamp="20221023 13:19:33.644" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221023 13:19:33.620" endtime="20221023 13:19:33.644"/>
</kw>
<msg timestamp="20221023 13:19:33.645" level="INFO">${result} = {"type":"ROOT","numVolume":3,"numBucket":2,"numDir":0,"numKey":0,"status":"OK"}</msg>
<status status="PASS" starttime="20221023 13:19:33.619" endtime="20221023 13:19:33.645"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221023 13:19:33.645" endtime="20221023 13:19:33.646"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221023 13:19:33.646" endtime="20221023 13:19:33.646"/>
</kw>
<status status="PASS" starttime="20221023 13:19:33.618" endtime="20221023 13:19:33.647"/>
</kw>
<status status="PASS" starttime="20221023 13:19:33.618" endtime="20221023 13:19:33.647"/>
</kw>
<status status="PASS" starttime="20221023 13:19:33.617" endtime="20221023 13:19:33.647"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221023 13:19:33.616" endtime="20221023 13:19:33.647"/>
</test>
<test id="s1-s2-s2-t9" name="Check Recon Namespace Summary Volume" line="124">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}</arg>
<arg>VOLUME</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221023 13:19:33.656" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-mffep 2&gt;&amp;1'.</msg>
<msg timestamp="20221023 13:19:33.675" level="INFO">${rc} = 0</msg>
<msg timestamp="20221023 13:19:33.675" level="INFO">${output} = {"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221023 13:19:33.653" endtime="20221023 13:19:33.675"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221023 13:19:33.676" level="INFO">{"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221023 13:19:33.675" endtime="20221023 13:19:33.676"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221023 13:19:33.677" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221023 13:19:33.676" endtime="20221023 13:19:33.677"/>
</kw>
<status status="PASS" starttime="20221023 13:19:33.652" endtime="20221023 13:19:33.677"/>
</kw>
<msg timestamp="20221023 13:19:33.678" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221023 13:19:33.652" endtime="20221023 13:19:33.678"/>
</kw>
<msg timestamp="20221023 13:19:33.678" level="INFO">${result} = {"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221023 13:19:33.651" endtime="20221023 13:19:33.678"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20221023 13:19:33.680" level="FAIL">'{"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20221023 13:19:33.679" endtime="20221023 13:19:33.680"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221023 13:19:33.680" endtime="20221023 13:19:33.681"/>
</kw>
<status status="FAIL" starttime="20221023 13:19:33.650" endtime="20221023 13:19:33.682"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221023 13:19:43.689" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-mffep 2&gt;&amp;1'.</msg>
<msg timestamp="20221023 13:19:43.705" level="INFO">${rc} = 0</msg>
<msg timestamp="20221023 13:19:43.705" level="INFO">${output} = {"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221023 13:19:43.686" endtime="20221023 13:19:43.705"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221023 13:19:43.707" level="INFO">{"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221023 13:19:43.706" endtime="20221023 13:19:43.708"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221023 13:19:43.708" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221023 13:19:43.708" endtime="20221023 13:19:43.708"/>
</kw>
<status status="PASS" starttime="20221023 13:19:43.685" endtime="20221023 13:19:43.709"/>
</kw>
<msg timestamp="20221023 13:19:43.709" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221023 13:19:43.684" endtime="20221023 13:19:43.710"/>
</kw>
<msg timestamp="20221023 13:19:43.710" level="INFO">${result} = {"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221023 13:19:43.684" endtime="20221023 13:19:43.710"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20221023 13:19:43.711" level="FAIL">'{"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20221023 13:19:43.710" endtime="20221023 13:19:43.712"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221023 13:19:43.712" endtime="20221023 13:19:43.712"/>
</kw>
<status status="FAIL" starttime="20221023 13:19:43.682" endtime="20221023 13:19:43.713"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221023 13:19:53.719" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-mffep 2&gt;&amp;1'.</msg>
<msg timestamp="20221023 13:19:53.734" level="INFO">${rc} = 0</msg>
<msg timestamp="20221023 13:19:53.735" level="INFO">${output} = {"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221023 13:19:53.717" endtime="20221023 13:19:53.735"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221023 13:19:53.736" level="INFO">{"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221023 13:19:53.735" endtime="20221023 13:19:53.737"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221023 13:19:53.738" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221023 13:19:53.737" endtime="20221023 13:19:53.738"/>
</kw>
<status status="PASS" starttime="20221023 13:19:53.716" endtime="20221023 13:19:53.738"/>
</kw>
<msg timestamp="20221023 13:19:53.738" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221023 13:19:53.716" endtime="20221023 13:19:53.739"/>
</kw>
<msg timestamp="20221023 13:19:53.739" level="INFO">${result} = {"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221023 13:19:53.715" endtime="20221023 13:19:53.739"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20221023 13:19:53.740" level="FAIL">'{"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20221023 13:19:53.739" endtime="20221023 13:19:53.741"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221023 13:19:53.741" endtime="20221023 13:19:53.741"/>
</kw>
<status status="FAIL" starttime="20221023 13:19:53.714" endtime="20221023 13:19:53.742"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221023 13:20:03.749" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-mffep 2&gt;&amp;1'.</msg>
<msg timestamp="20221023 13:20:03.775" level="INFO">${rc} = 0</msg>
<msg timestamp="20221023 13:20:03.775" level="INFO">${output} = {"type":"VOLUME","numVolume":-1,"numBucket":1,"numDir":2,"numKey":2,"status":"OK"}</msg>
<status status="PASS" starttime="20221023 13:20:03.746" endtime="20221023 13:20:03.775"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221023 13:20:03.777" level="INFO">{"type":"VOLUME","numVolume":-1,"numBucket":1,"numDir":2,"numKey":2,"status":"OK"}</msg>
<status status="PASS" starttime="20221023 13:20:03.776" endtime="20221023 13:20:03.777"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221023 13:20:03.778" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221023 13:20:03.777" endtime="20221023 13:20:03.778"/>
</kw>
<status status="PASS" starttime="20221023 13:20:03.745" endtime="20221023 13:20:03.778"/>
</kw>
<msg timestamp="20221023 13:20:03.778" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221023 13:20:03.745" endtime="20221023 13:20:03.779"/>
</kw>
<msg timestamp="20221023 13:20:03.779" level="INFO">${result} = {"type":"VOLUME","numVolume":-1,"numBucket":1,"numDir":2,"numKey":2,"status":"OK"}</msg>
<status status="PASS" starttime="20221023 13:20:03.744" endtime="20221023 13:20:03.779"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221023 13:20:03.780" endtime="20221023 13:20:03.780"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221023 13:20:03.780" endtime="20221023 13:20:03.781"/>
</kw>
<status status="PASS" starttime="20221023 13:20:03.743" endtime="20221023 13:20:03.781"/>
</kw>
<status status="PASS" starttime="20221023 13:19:33.650" endtime="20221023 13:20:03.781"/>
</kw>
<status status="PASS" starttime="20221023 13:19:33.649" endtime="20221023 13:20:03.782"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221023 13:19:33.648" endtime="20221023 13:20:03.782"/>
</test>
<test id="s1-s2-s2-t10" name="Check Recon Namespace Summary Bucket" line="127">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}</arg>
<arg>BUCKET</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221023 13:20:03.790" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-mffep/buc-qabrh 2&gt;&amp;1'.</msg>
<msg timestamp="20221023 13:20:03.809" level="INFO">${rc} = 0</msg>
<msg timestamp="20221023 13:20:03.809" level="INFO">${output} = {"type":"BUCKET","numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2,"status":"OK"}</msg>
<status status="PASS" starttime="20221023 13:20:03.788" endtime="20221023 13:20:03.809"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221023 13:20:03.810" level="INFO">{"type":"BUCKET","numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2,"status":"OK"}</msg>
<status status="PASS" starttime="20221023 13:20:03.809" endtime="20221023 13:20:03.810"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221023 13:20:03.811" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221023 13:20:03.810" endtime="20221023 13:20:03.811"/>
</kw>
<status status="PASS" starttime="20221023 13:20:03.787" endtime="20221023 13:20:03.811"/>
</kw>
<msg timestamp="20221023 13:20:03.811" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221023 13:20:03.787" endtime="20221023 13:20:03.812"/>
</kw>
<msg timestamp="20221023 13:20:03.813" level="INFO">${result} = {"type":"BUCKET","numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2,"status":"OK"}</msg>
<status status="PASS" starttime="20221023 13:20:03.786" endtime="20221023 13:20:03.813"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221023 13:20:03.813" endtime="20221023 13:20:03.814"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221023 13:20:03.814" endtime="20221023 13:20:03.815"/>
</kw>
<status status="PASS" starttime="20221023 13:20:03.786" endtime="20221023 13:20:03.815"/>
</kw>
<status status="PASS" starttime="20221023 13:20:03.785" endtime="20221023 13:20:03.815"/>
</kw>
<status status="PASS" starttime="20221023 13:20:03.784" endtime="20221023 13:20:03.816"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221023 13:20:03.783" endtime="20221023 13:20:03.816"/>
</test>
<test id="s1-s2-s2-t11" name="Check Recon Namespace Summary Key" line="130">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/file1</arg>
<arg>KEY</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221023 13:20:03.824" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-mffep/buc-qabrh/file1 2&gt;&amp;1'.</msg>
<msg timestamp="20221023 13:20:03.843" level="INFO">${rc} = 0</msg>
<msg timestamp="20221023 13:20:03.844" level="INFO">${output} = {"type":"KEY","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"OK"}</msg>
<status status="PASS" starttime="20221023 13:20:03.821" endtime="20221023 13:20:03.844"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221023 13:20:03.845" level="INFO">{"type":"KEY","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"OK"}</msg>
<status status="PASS" starttime="20221023 13:20:03.844" endtime="20221023 13:20:03.845"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221023 13:20:03.847" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221023 13:20:03.845" endtime="20221023 13:20:03.847"/>
</kw>
<status status="PASS" starttime="20221023 13:20:03.821" endtime="20221023 13:20:03.847"/>
</kw>
<msg timestamp="20221023 13:20:03.848" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221023 13:20:03.820" endtime="20221023 13:20:03.848"/>
</kw>
<msg timestamp="20221023 13:20:03.848" level="INFO">${result} = {"type":"KEY","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"OK"}</msg>
<status status="PASS" starttime="20221023 13:20:03.820" endtime="20221023 13:20:03.848"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221023 13:20:03.849" endtime="20221023 13:20:03.849"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221023 13:20:03.849" endtime="20221023 13:20:03.850"/>
</kw>
<status status="PASS" starttime="20221023 13:20:03.819" endtime="20221023 13:20:03.850"/>
</kw>
<status status="PASS" starttime="20221023 13:20:03.819" endtime="20221023 13:20:03.850"/>
</kw>
<status status="PASS" starttime="20221023 13:20:03.818" endtime="20221023 13:20:03.850"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221023 13:20:03.817" endtime="20221023 13:20:03.851"/>
</test>
<test id="s1-s2-s2-t12" name="Check Recon Namespace Summary Directory" line="133">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2</arg>
<arg>DIRECTORY</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221023 13:20:03.860" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-mffep/buc-qabrh/dir1/dir2 2&gt;&amp;1'.</msg>
<msg timestamp="20221023 13:20:03.877" level="INFO">${rc} = 0</msg>
<msg timestamp="20221023 13:20:03.877" level="INFO">${output} = {"type":"DIRECTORY","numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1,"status":"OK"}</msg>
<status status="PASS" starttime="20221023 13:20:03.858" endtime="20221023 13:20:03.877"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221023 13:20:03.878" level="INFO">{"type":"DIRECTORY","numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1,"status":"OK"}</msg>
<status status="PASS" starttime="20221023 13:20:03.877" endtime="20221023 13:20:03.878"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221023 13:20:03.879" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221023 13:20:03.879" endtime="20221023 13:20:03.879"/>
</kw>
<status status="PASS" starttime="20221023 13:20:03.857" endtime="20221023 13:20:03.880"/>
</kw>
<msg timestamp="20221023 13:20:03.880" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221023 13:20:03.856" endtime="20221023 13:20:03.880"/>
</kw>
<msg timestamp="20221023 13:20:03.881" level="INFO">${result} = {"type":"DIRECTORY","numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1,"status":"OK"}</msg>
<status status="PASS" starttime="20221023 13:20:03.856" endtime="20221023 13:20:03.881"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221023 13:20:03.881" endtime="20221023 13:20:03.881"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221023 13:20:03.882" endtime="20221023 13:20:03.882"/>
</kw>
<status status="PASS" starttime="20221023 13:20:03.855" endtime="20221023 13:20:03.882"/>
</kw>
<status status="PASS" starttime="20221023 13:20:03.854" endtime="20221023 13:20:03.882"/>
</kw>
<status status="PASS" starttime="20221023 13:20:03.853" endtime="20221023 13:20:03.883"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221023 13:20:03.852" endtime="20221023 13:20:03.883"/>
</test>
<test id="s1-s2-s2-t13" name="Check Recon Namespace Disk Usage" line="136">
<kw name="Wait For Summary">
<arg>${DISK_USAGE_URL}?path=/${VOLUME}/${BUCKET}&amp;files=true&amp;replica=true</arg>
<arg>\"sizeWithReplica\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221023 13:20:03.891" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/du?path=/vol-mffep/buc-qabrh&amp;files=true&amp;replica=true 2&gt;&amp;1'.</msg>
<msg timestamp="20221023 13:20:03.907" level="INFO">${rc} = 0</msg>
<msg timestamp="20221023 13:20:03.907" level="INFO">${output} = {"status":"OK","path":"/vol-mffep/buc-qabrh","size":9849,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-mffep/buc-qabrh/dir1","size":6038,"sizeWithReplica":-1,"isKey":fals...</msg>
<status status="PASS" starttime="20221023 13:20:03.889" endtime="20221023 13:20:03.907"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221023 13:20:03.908" level="INFO">{"status":"OK","path":"/vol-mffep/buc-qabrh","size":9849,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-mffep/buc-qabrh/dir1","size":6038,"sizeWithReplica":-1,"isKey":false}],"sizeDirectKey":3811}</msg>
<status status="PASS" starttime="20221023 13:20:03.907" endtime="20221023 13:20:03.909"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221023 13:20:03.909" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221023 13:20:03.909" endtime="20221023 13:20:03.910"/>
</kw>
<status status="PASS" starttime="20221023 13:20:03.888" endtime="20221023 13:20:03.910"/>
</kw>
<msg timestamp="20221023 13:20:03.910" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221023 13:20:03.888" endtime="20221023 13:20:03.911"/>
</kw>
<msg timestamp="20221023 13:20:03.911" level="INFO">${result} = {"status":"OK","path":"/vol-mffep/buc-qabrh","size":9849,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-mffep/buc-qabrh/dir1","size":6038,"sizeWithReplica":-1,"isKey":fals...</msg>
<status status="PASS" starttime="20221023 13:20:03.888" endtime="20221023 13:20:03.911"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221023 13:20:03.911" endtime="20221023 13:20:03.912"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221023 13:20:03.912" endtime="20221023 13:20:03.913"/>
</kw>
<status status="PASS" starttime="20221023 13:20:03.887" endtime="20221023 13:20:03.913"/>
</kw>
<status status="PASS" starttime="20221023 13:20:03.886" endtime="20221023 13:20:03.913"/>
</kw>
<status status="PASS" starttime="20221023 13:20:03.885" endtime="20221023 13:20:03.913"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221023 13:20:03.884" endtime="20221023 13:20:03.913"/>
</test>
<test id="s1-s2-s2-t14" name="Check Recon Namespace Volume Quota Usage" line="139">
<kw name="Wait For Summary">
<arg>${QUOTA_USAGE_URL}?path=/${VOLUME}</arg>
<arg>\"used\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221023 13:20:03.923" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/quota?path=/vol-mffep 2&gt;&amp;1'.</msg>
<msg timestamp="20221023 13:20:03.939" level="INFO">${rc} = 0</msg>
<msg timestamp="20221023 13:20:03.939" level="INFO">${output} = {"allowed":-1,"used":9849,"status":"OK"}</msg>
<status status="PASS" starttime="20221023 13:20:03.920" endtime="20221023 13:20:03.939"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221023 13:20:03.941" level="INFO">{"allowed":-1,"used":9849,"status":"OK"}</msg>
<status status="PASS" starttime="20221023 13:20:03.940" endtime="20221023 13:20:03.941"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221023 13:20:03.942" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221023 13:20:03.941" endtime="20221023 13:20:03.942"/>
</kw>
<status status="PASS" starttime="20221023 13:20:03.919" endtime="20221023 13:20:03.942"/>
</kw>
<msg timestamp="20221023 13:20:03.942" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221023 13:20:03.919" endtime="20221023 13:20:03.943"/>
</kw>
<msg timestamp="20221023 13:20:03.943" level="INFO">${result} = {"allowed":-1,"used":9849,"status":"OK"}</msg>
<status status="PASS" starttime="20221023 13:20:03.918" endtime="20221023 13:20:03.943"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221023 13:20:03.944" endtime="20221023 13:20:03.944"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221023 13:20:03.944" endtime="20221023 13:20:03.945"/>
</kw>
<status status="PASS" starttime="20221023 13:20:03.917" endtime="20221023 13:20:03.945"/>
</kw>
<status status="PASS" starttime="20221023 13:20:03.917" endtime="20221023 13:20:03.945"/>
</kw>
<status status="PASS" starttime="20221023 13:20:03.916" endtime="20221023 13:20:03.946"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221023 13:20:03.915" endtime="20221023 13:20:03.946"/>
</test>
<test id="s1-s2-s2-t15" name="Check Recon Namespace Bucket Quota Usage" line="142">
<kw name="Wait For Summary">
<arg>${QUOTA_USAGE_URL}?path=/${VOLUME}/${BUCKET}</arg>
<arg>\"used\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221023 13:20:03.954" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/quota?path=/vol-mffep/buc-qabrh 2&gt;&amp;1'.</msg>
<msg timestamp="20221023 13:20:03.969" level="INFO">${rc} = 0</msg>
<msg timestamp="20221023 13:20:03.969" level="INFO">${output} = {"allowed":-1,"used":9849,"status":"OK"}</msg>
<status status="PASS" starttime="20221023 13:20:03.952" endtime="20221023 13:20:03.970"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221023 13:20:03.971" level="INFO">{"allowed":-1,"used":9849,"status":"OK"}</msg>
<status status="PASS" starttime="20221023 13:20:03.970" endtime="20221023 13:20:03.971"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221023 13:20:03.972" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221023 13:20:03.971" endtime="20221023 13:20:03.972"/>
</kw>
<status status="PASS" starttime="20221023 13:20:03.951" endtime="20221023 13:20:03.972"/>
</kw>
<msg timestamp="20221023 13:20:03.972" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221023 13:20:03.951" endtime="20221023 13:20:03.973"/>
</kw>
<msg timestamp="20221023 13:20:03.973" level="INFO">${result} = {"allowed":-1,"used":9849,"status":"OK"}</msg>
<status status="PASS" starttime="20221023 13:20:03.950" endtime="20221023 13:20:03.973"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221023 13:20:03.974" endtime="20221023 13:20:03.974"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221023 13:20:03.974" endtime="20221023 13:20:03.975"/>
</kw>
<status status="PASS" starttime="20221023 13:20:03.950" endtime="20221023 13:20:03.976"/>
</kw>
<status status="PASS" starttime="20221023 13:20:03.949" endtime="20221023 13:20:03.976"/>
</kw>
<status status="PASS" starttime="20221023 13:20:03.948" endtime="20221023 13:20:03.976"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221023 13:20:03.947" endtime="20221023 13:20:03.977"/>
</test>
<test id="s1-s2-s2-t16" name="Check Recon Namespace File Size Distribution Root" line="145">
<kw name="Wait For Summary">
<arg>${FILE_SIZE_DIST_URL}?path=/</arg>
<arg>\"dist\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221023 13:20:03.986" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221023 13:20:04.003" level="INFO">${rc} = 0</msg>
<msg timestamp="20221023 13:20:04.003" level="INFO">${output} = {"dist":[0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20221023 13:20:03.983" endtime="20221023 13:20:04.003"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221023 13:20:04.005" level="INFO">{"dist":[0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20221023 13:20:04.004" endtime="20221023 13:20:04.005"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221023 13:20:04.006" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221023 13:20:04.005" endtime="20221023 13:20:04.006"/>
</kw>
<status status="PASS" starttime="20221023 13:20:03.982" endtime="20221023 13:20:04.007"/>
</kw>
<msg timestamp="20221023 13:20:04.007" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221023 13:20:03.982" endtime="20221023 13:20:04.007"/>
</kw>
<msg timestamp="20221023 13:20:04.008" level="INFO">${result} = {"dist":[0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20221023 13:20:03.981" endtime="20221023 13:20:04.008"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221023 13:20:04.008" endtime="20221023 13:20:04.009"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221023 13:20:04.009" endtime="20221023 13:20:04.009"/>
</kw>
<status status="PASS" starttime="20221023 13:20:03.980" endtime="20221023 13:20:04.010"/>
</kw>
<status status="PASS" starttime="20221023 13:20:03.980" endtime="20221023 13:20:04.010"/>
</kw>
<status status="PASS" starttime="20221023 13:20:03.979" endtime="20221023 13:20:04.010"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221023 13:20:03.978" endtime="20221023 13:20:04.010"/>
</test>
<doc>Smoke test for Recon Namespace Summary Endpoint for FSO buckets.</doc>
<status status="PASS" starttime="20221023 13:19:07.964" endtime="20221023 13:20:04.012"/>
</suite>
<status status="PASS" starttime="20221023 13:18:24.437" endtime="20221023 13:20:04.015"/>
</suite>
<suite id="s1-s3" name="Loaddata" source="/opt/hadoop/smoketest/topology/loaddata.robot">
<test id="s1-s3-t1" name="Create a volume, bucket and key" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create topvol1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221023 13:20:10.079" level="INFO">Running command 'ozone sh volume create topvol1 2&gt;&amp;1'.</msg>
<msg timestamp="20221023 13:20:14.349" level="INFO">${rc} = 0</msg>
<msg timestamp="20221023 13:20:14.349" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221023 13:20:10.075" endtime="20221023 13:20:14.349"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221023 13:20:14.351" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221023 13:20:14.350" endtime="20221023 13:20:14.351"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221023 13:20:14.352" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221023 13:20:14.351" endtime="20221023 13:20:14.352"/>
</kw>
<status status="PASS" starttime="20221023 13:20:10.073" endtime="20221023 13:20:14.352"/>
</kw>
<msg timestamp="20221023 13:20:14.352" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221023 13:20:10.073" endtime="20221023 13:20:14.353"/>
</kw>
<msg timestamp="20221023 13:20:14.354" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221023 13:20:10.072" endtime="20221023 13:20:14.354"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20221023 13:20:14.354" endtime="20221023 13:20:14.355"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /topvol1/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221023 13:20:14.360" level="INFO">Running command 'ozone sh bucket create /topvol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20221023 13:20:18.614" level="INFO">${rc} = 0</msg>
<msg timestamp="20221023 13:20:18.614" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221023 13:20:14.358" endtime="20221023 13:20:18.614"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221023 13:20:18.615" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221023 13:20:18.614" endtime="20221023 13:20:18.615"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221023 13:20:18.616" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221023 13:20:18.616" endtime="20221023 13:20:18.616"/>
</kw>
<status status="PASS" starttime="20221023 13:20:14.356" endtime="20221023 13:20:18.617"/>
</kw>
<msg timestamp="20221023 13:20:18.617" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221023 13:20:14.356" endtime="20221023 13:20:18.617"/>
</kw>
<msg timestamp="20221023 13:20:18.619" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221023 13:20:14.355" endtime="20221023 13:20:18.619"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20221023 13:20:18.619" endtime="20221023 13:20:18.620"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221023 13:20:18.624" level="INFO">Running command 'ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20221023 13:20:25.905" level="INFO">${rc} = 0</msg>
<msg timestamp="20221023 13:20:25.905" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221023 13:20:18.621" endtime="20221023 13:20:25.905"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221023 13:20:25.907" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221023 13:20:25.906" endtime="20221023 13:20:25.907"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221023 13:20:25.908" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221023 13:20:25.907" endtime="20221023 13:20:25.908"/>
</kw>
<status status="PASS" starttime="20221023 13:20:18.621" endtime="20221023 13:20:25.908"/>
</kw>
<msg timestamp="20221023 13:20:25.909" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221023 13:20:18.621" endtime="20221023 13:20:25.909"/>
</kw>
<msg timestamp="20221023 13:20:25.909" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221023 13:20:18.620" endtime="20221023 13:20:25.909"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20221023 13:20:25.910" endtime="20221023 13:20:25.910"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221023 13:20:10.071" endtime="20221023 13:20:25.911"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20221023 13:20:10.004" endtime="20221023 13:20:25.913"/>
</suite>
<suite id="s1-s4" name="readdata-first-half" source="/opt/hadoop/smoketest/topology/readdata.robot">
<test id="s1-s4-t1" name="Read data from previously created key" line="27">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20221023 13:20:36.895" level="INFO">${random} = 09388</msg>
<status status="PASS" starttime="20221023 13:20:36.894" endtime="20221023 13:20:36.895"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221023 13:20:36.904" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-09388 2&gt;&amp;1'.</msg>
<msg timestamp="20221023 13:21:04.899" level="INFO">${rc} = 0</msg>
<msg timestamp="20221023 13:21:04.899" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221023 13:20:36.897" endtime="20221023 13:21:04.899"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221023 13:21:04.901" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221023 13:21:04.900" endtime="20221023 13:21:04.901"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221023 13:21:04.902" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221023 13:21:04.901" endtime="20221023 13:21:04.902"/>
</kw>
<status status="PASS" starttime="20221023 13:20:36.896" endtime="20221023 13:21:04.902"/>
</kw>
<msg timestamp="20221023 13:21:04.902" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221023 13:20:36.896" endtime="20221023 13:21:04.904"/>
</kw>
<msg timestamp="20221023 13:21:04.904" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221023 13:20:36.895" endtime="20221023 13:21:04.904"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20221023 13:21:04.904" endtime="20221023 13:21:04.905"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221023 13:20:36.894" endtime="20221023 13:21:04.905"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20221023 13:20:36.829" endtime="20221023 13:21:04.906"/>
</suite>
<suite id="s1-s5" name="readdata-second-half" source="/opt/hadoop/smoketest/topology/readdata.robot">
<test id="s1-s5-t1" name="Read data from previously created key" line="27">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20221023 13:21:55.998" level="INFO">${random} = 34746</msg>
<status status="PASS" starttime="20221023 13:21:55.998" endtime="20221023 13:21:55.998"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221023 13:21:56.005" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-34746 2&gt;&amp;1'.</msg>
<msg timestamp="20221023 13:22:03.880" level="INFO">${rc} = 0</msg>
<msg timestamp="20221023 13:22:03.880" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221023 13:21:56.000" endtime="20221023 13:22:03.880"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221023 13:22:03.882" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221023 13:22:03.881" endtime="20221023 13:22:03.882"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221023 13:22:03.883" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221023 13:22:03.882" endtime="20221023 13:22:03.883"/>
</kw>
<status status="PASS" starttime="20221023 13:21:56.000" endtime="20221023 13:22:03.883"/>
</kw>
<msg timestamp="20221023 13:22:03.884" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221023 13:21:55.999" endtime="20221023 13:22:03.885"/>
</kw>
<msg timestamp="20221023 13:22:03.885" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221023 13:21:55.999" endtime="20221023 13:22:03.885"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20221023 13:22:03.886" endtime="20221023 13:22:03.886"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221023 13:21:55.997" endtime="20221023 13:22:03.887"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20221023 13:21:55.936" endtime="20221023 13:22:03.889"/>
</suite>
<suite id="s1-s6" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s6-t1" name="Check webui static resources" line="29">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221023 13:17:28.445" endtime="20221023 13:17:28.453"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -s -I http://${SCM}:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221023 13:17:28.485" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20221023 13:17:28.739" level="INFO">${rc} = 0</msg>
<msg timestamp="20221023 13:17:28.739" level="INFO">${output} = HTTP/1.1 200 OK
Date: Sun, 23 Oct 2022 13:17:28 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Sun, 23 Oct 2022 12:48:32 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20221023 13:17:28.467" endtime="20221023 13:17:28.739"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221023 13:17:28.740" level="INFO">HTTP/1.1 200 OK
Date: Sun, 23 Oct 2022 13:17:28 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Sun, 23 Oct 2022 12:48:32 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20221023 13:17:28.740" endtime="20221023 13:17:28.741"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221023 13:17:28.742" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221023 13:17:28.741" endtime="20221023 13:17:28.742"/>
</kw>
<status status="PASS" starttime="20221023 13:17:28.454" endtime="20221023 13:17:28.743"/>
</kw>
<msg timestamp="20221023 13:17:28.743" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221023 13:17:28.453" endtime="20221023 13:17:28.745"/>
</kw>
<msg timestamp="20221023 13:17:28.746" level="INFO">${result} = HTTP/1.1 200 OK
Date: Sun, 23 Oct 2022 13:17:28 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Sun, 23 Oct 2022 12:48:32 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20221023 13:17:28.453" endtime="20221023 13:17:28.746"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221023 13:17:28.747" endtime="20221023 13:17:28.749"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221023 13:17:28.433" endtime="20221023 13:17:28.749"/>
</test>
<test id="s1-s6-t2" name="Basic Freon smoketest" line="34">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221023 13:17:28.753" endtime="20221023 13:17:28.754"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>10</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20221023 13:17:28.754" level="INFO">${random} = qUQQKeR3mm</msg>
<status status="PASS" starttime="20221023 13:17:28.754" endtime="20221023 13:17:28.754"/>
</kw>
<kw name="Freon OCKG" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221023 13:17:28.772" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p qUQQKeR3mm  2&gt;&amp;1'.</msg>
<msg timestamp="20221023 13:17:42.071" level="INFO">${rc} = 0</msg>
<msg timestamp="20221023 13:17:42.071" level="INFO">${output} = 2022-10-23 13:17:31,502 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-23 13:17:31,692 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221023 13:17:28.764" endtime="20221023 13:17:42.071"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221023 13:17:42.077" level="INFO">2022-10-23 13:17:31,502 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-23 13:17:31,692 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-10-23 13:17:31,693 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-10-23 13:17:31,901 [main] INFO freon.BaseFreonGenerator: Executing test with prefix qUQQKeR3mm and number-of-tests 1
2022-10-23 13:17:32,017 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-23 13:17:33,021 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-23 13:17:34,021 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-23 13:17:34,610 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2022-10-23 13:17:34,884 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false 
2022-10-23 13:17:35,022 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-23 13:17:36,027 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-23 13:17:36,203 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-10-23 13:17:36,654 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-10-23 13:17:37,027 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-23 13:17:38,028 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-23 13:17:39,028 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-23 13:17:40,049 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-23 13:17:41,050 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-10-23 13:17:41,568 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=5659.943406, max=5659.943406, mean=5659.943406, stddev=0.0, median=5659.943406, p75=5659.943406, p95=5659.943406, p98=5659.943406, p99=5659.943406, p999=5659.943406, mean_rate=0.1515691288644832, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-10-23 13:17:41,569 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 10
2022-10-23 13:17:41,570 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-10-23 13:17:41,571 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20221023 13:17:42.075" endtime="20221023 13:17:42.077"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221023 13:17:42.077" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221023 13:17:42.077" endtime="20221023 13:17:42.078"/>
</kw>
<status status="PASS" starttime="20221023 13:17:28.764" endtime="20221023 13:17:42.078"/>
</kw>
<msg timestamp="20221023 13:17:42.078" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221023 13:17:28.763" endtime="20221023 13:17:42.079"/>
</kw>
<msg timestamp="20221023 13:17:42.079" level="INFO">${result} = 2022-10-23 13:17:31,502 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-23 13:17:31,692 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221023 13:17:28.762" endtime="20221023 13:17:42.079"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221023 13:17:42.079" endtime="20221023 13:17:42.080"/>
</kw>
<status status="PASS" starttime="20221023 13:17:28.755" endtime="20221023 13:17:42.080"/>
</kw>
<kw name="Freon OCKV" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221023 13:17:42.099" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p qUQQKeR3mm  2&gt;&amp;1'.</msg>
<msg timestamp="20221023 13:17:52.897" level="INFO">${rc} = 0</msg>
<msg timestamp="20221023 13:17:52.897" level="INFO">${output} = 2022-10-23 13:17:46,338 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-23 13:17:46,514 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221023 13:17:42.097" endtime="20221023 13:17:52.897"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221023 13:17:52.899" level="INFO">2022-10-23 13:17:46,338 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-23 13:17:46,514 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-10-23 13:17:46,514 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-10-23 13:17:46,748 [main] INFO freon.BaseFreonGenerator: Executing test with prefix qUQQKeR3mm and number-of-tests 1
2022-10-23 13:17:46,865 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-23 13:17:47,875 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-23 13:17:48,875 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-23 13:17:49,876 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-23 13:17:50,259 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-10-23 13:17:50,876 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-23 13:17:51,877 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-10-23 13:17:52,531 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=96.716862, max=96.716862, mean=96.716862, stddev=0.0, median=96.716862, p75=96.716862, p95=96.716862, p98=96.716862, p99=96.716862, p999=96.716862, mean_rate=0.9216561778844939, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-10-23 13:17:52,535 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 6
2022-10-23 13:17:52,535 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-10-23 13:17:52,535 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20221023 13:17:52.898" endtime="20221023 13:17:52.899"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221023 13:17:52.900" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221023 13:17:52.899" endtime="20221023 13:17:52.900"/>
</kw>
<status status="PASS" starttime="20221023 13:17:42.096" endtime="20221023 13:17:52.900"/>
</kw>
<msg timestamp="20221023 13:17:52.900" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221023 13:17:42.093" endtime="20221023 13:17:52.901"/>
</kw>
<msg timestamp="20221023 13:17:52.901" level="INFO">${result} = 2022-10-23 13:17:46,338 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-23 13:17:46,514 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221023 13:17:42.082" endtime="20221023 13:17:52.901"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221023 13:17:52.901" endtime="20221023 13:17:52.902"/>
</kw>
<status status="PASS" starttime="20221023 13:17:42.080" endtime="20221023 13:17:52.902"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221023 13:17:28.752" endtime="20221023 13:17:52.902"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20221023 13:17:28.261" endtime="20221023 13:17:52.905"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="193970"/>
</suite>
<statistics>
<total>
<stat pass="32" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="32" fail="0" skip="0" id="s1" name="ozone-topology">ozone-topology</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1" name="Cli">ozone-topology.Cli</stat>
<stat pass="23" fail="0" skip="0" id="s1-s2" name="Recon">ozone-topology.Recon</stat>
<stat pass="7" fail="0" skip="0" id="s1-s2-s1" name="Recon-Api">ozone-topology.Recon.Recon-Api</stat>
<stat pass="16" fail="0" skip="0" id="s1-s2-s2" name="Recon-Fso-Nssummary">ozone-topology.Recon.Recon-Fso-Nssummary</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3" name="Loaddata">ozone-topology.Loaddata</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="readdata-first-half">ozone-topology.readdata-first-half</stat>
<stat pass="1" fail="0" skip="0" id="s1-s5" name="readdata-second-half">ozone-topology.readdata-second-half</stat>
<stat pass="2" fail="0" skip="0" id="s1-s6" name="Basic">ozone-topology.Basic</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
