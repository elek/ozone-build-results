<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.0 (Python 3.8.10 on linux)" generated="20221023 13:15:43.874" rpa="false" schemaversion="3">
<suite id="s1" name="ozone-om-prepare">
<suite id="s1-s1" name="Om-Cancel-Prepare" source="/opt/hadoop/smoketest/omha/om-cancel-prepare.robot">
<kw name="Generate volume and bucket names" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20221023 13:07:07.418" level="INFO">${random} = 30099</msg>
<status status="PASS" starttime="20221023 13:07:07.418" endtime="20221023 13:07:07.418"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-cancel</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20221023 13:07:07.420" level="INFO">${volume_name} = 30099-volume-for-cancel</msg>
<status status="PASS" starttime="20221023 13:07:07.419" endtime="20221023 13:07:07.421"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${bucket_name}</arg>
<arg>${random}-bucket-for-cancel</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20221023 13:07:07.422" level="INFO">${bucket_name} = 30099-bucket-for-cancel</msg>
<status status="PASS" starttime="20221023 13:07:07.421" endtime="20221023 13:07:07.422"/>
</kw>
<status status="PASS" starttime="20221023 13:07:07.417" endtime="20221023 13:07:07.422"/>
</kw>
<test id="s1-s1-t1" name="Cancel Ozone Manager Prepare" line="33">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221023 13:07:07.424" endtime="20221023 13:07:07.424"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om cancelprepare -id=omservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221023 13:07:07.431" level="INFO">Running command 'ozone admin om cancelprepare -id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20221023 13:07:10.761" level="INFO">${rc} = 0</msg>
<msg timestamp="20221023 13:07:10.761" level="INFO">${output} = Cancel prepare succeeded, cluster can now accept write requests.</msg>
<status status="PASS" starttime="20221023 13:07:07.426" endtime="20221023 13:07:10.761"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221023 13:07:10.763" level="INFO">Cancel prepare succeeded, cluster can now accept write requests.</msg>
<status status="PASS" starttime="20221023 13:07:10.762" endtime="20221023 13:07:10.763"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221023 13:07:10.764" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221023 13:07:10.763" endtime="20221023 13:07:10.764"/>
</kw>
<status status="PASS" starttime="20221023 13:07:07.426" endtime="20221023 13:07:10.764"/>
</kw>
<msg timestamp="20221023 13:07:10.764" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221023 13:07:07.425" endtime="20221023 13:07:10.766"/>
</kw>
<msg timestamp="20221023 13:07:10.766" level="INFO">${result} = Cancel prepare succeeded, cluster can now accept write requests.</msg>
<status status="PASS" starttime="20221023 13:07:07.425" endtime="20221023 13:07:10.766"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>5sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Cancel prepare succeeded</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Cancel prepare succeeded</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221023 13:07:10.767" endtime="20221023 13:07:10.768"/>
</kw>
<status status="PASS" starttime="20221023 13:07:10.767" endtime="20221023 13:07:10.768"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221023 13:07:07.423" endtime="20221023 13:07:10.768"/>
</test>
<test id="s1-s1-t2" name="Test write operations" line="37">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221023 13:07:10.770" endtime="20221023 13:07:10.771"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create /${volume_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221023 13:07:10.775" level="INFO">Running command 'ozone sh volume create /30099-volume-for-cancel 2&gt;&amp;1'.</msg>
<msg timestamp="20221023 13:07:13.913" level="INFO">${rc} = 0</msg>
<msg timestamp="20221023 13:07:13.913" level="INFO">${output} = </msg>
<status status="PASS" starttime="20221023 13:07:10.773" endtime="20221023 13:07:13.913"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221023 13:07:13.915" level="INFO"/>
<status status="PASS" starttime="20221023 13:07:13.914" endtime="20221023 13:07:13.915"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221023 13:07:13.916" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221023 13:07:13.916" endtime="20221023 13:07:13.916"/>
</kw>
<status status="PASS" starttime="20221023 13:07:10.772" endtime="20221023 13:07:13.917"/>
</kw>
<msg timestamp="20221023 13:07:13.917" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221023 13:07:10.772" endtime="20221023 13:07:13.917"/>
</kw>
<status status="PASS" starttime="20221023 13:07:10.771" endtime="20221023 13:07:13.917"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume_name}/${bucket_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221023 13:07:13.922" level="INFO">Running command 'ozone sh bucket create /30099-volume-for-cancel/30099-bucket-for-cancel 2&gt;&amp;1'.</msg>
<msg timestamp="20221023 13:07:17.248" level="INFO">${rc} = 0</msg>
<msg timestamp="20221023 13:07:17.248" level="INFO">${output} = </msg>
<status status="PASS" starttime="20221023 13:07:13.919" endtime="20221023 13:07:17.248"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221023 13:07:17.250" level="INFO"/>
<status status="PASS" starttime="20221023 13:07:17.249" endtime="20221023 13:07:17.250"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221023 13:07:17.251" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221023 13:07:17.250" endtime="20221023 13:07:17.251"/>
</kw>
<status status="PASS" starttime="20221023 13:07:13.919" endtime="20221023 13:07:17.251"/>
</kw>
<msg timestamp="20221023 13:07:17.251" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221023 13:07:13.918" endtime="20221023 13:07:17.252"/>
</kw>
<status status="PASS" starttime="20221023 13:07:13.918" endtime="20221023 13:07:17.252"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put /${volume_name}/${bucket_name}/cancel-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221023 13:07:17.257" level="INFO">Running command 'ozone sh key put /30099-volume-for-cancel/30099-bucket-for-cancel/cancel-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20221023 13:07:23.053" level="INFO">${rc} = 0</msg>
<msg timestamp="20221023 13:07:23.053" level="INFO">${output} = </msg>
<status status="PASS" starttime="20221023 13:07:17.254" endtime="20221023 13:07:23.053"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221023 13:07:23.055" level="INFO"/>
<status status="PASS" starttime="20221023 13:07:23.054" endtime="20221023 13:07:23.055"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221023 13:07:23.056" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221023 13:07:23.055" endtime="20221023 13:07:23.056"/>
</kw>
<status status="PASS" starttime="20221023 13:07:17.253" endtime="20221023 13:07:23.056"/>
</kw>
<msg timestamp="20221023 13:07:23.056" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221023 13:07:17.253" endtime="20221023 13:07:23.057"/>
</kw>
<msg timestamp="20221023 13:07:23.057" level="INFO">${result} = </msg>
<status status="PASS" starttime="20221023 13:07:17.252" endtime="20221023 13:07:23.057"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /${volume_name}/${bucket_name}/cancel-key</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221023 13:07:23.061" level="INFO">Running command 'ozone sh key info /30099-volume-for-cancel/30099-bucket-for-cancel/cancel-key 2&gt;&amp;1'.</msg>
<msg timestamp="20221023 13:07:26.624" level="INFO">${rc} = 0</msg>
<msg timestamp="20221023 13:07:26.625" level="INFO">${output} = {
  "volumeName" : "30099-volume-for-cancel",
  "bucketName" : "30099-bucket-for-cancel",
  "name" : "cancel-key",
  "dataSize" : 17539,
  "creationTime" : "2022-10-23T13:07:20.436Z",
  "modificationT...</msg>
<status status="PASS" starttime="20221023 13:07:23.059" endtime="20221023 13:07:26.625"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221023 13:07:26.626" level="INFO">{
  "volumeName" : "30099-volume-for-cancel",
  "bucketName" : "30099-bucket-for-cancel",
  "name" : "cancel-key",
  "dataSize" : 17539,
  "creationTime" : "2022-10-23T13:07:20.436Z",
  "modificationTime" : "2022-10-23T13:07:22.665Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "ozoneKeyLocations" : [ {
    "containerID" : 4,
    "localID" : 109611004723200103,
    "length" : 17539,
    "offset" : 0,
    "keyOffset" : 0
  } ]
}</msg>
<status status="PASS" starttime="20221023 13:07:26.625" endtime="20221023 13:07:26.627"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221023 13:07:26.629" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221023 13:07:26.627" endtime="20221023 13:07:26.630"/>
</kw>
<status status="PASS" starttime="20221023 13:07:23.058" endtime="20221023 13:07:26.631"/>
</kw>
<msg timestamp="20221023 13:07:26.631" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221023 13:07:23.058" endtime="20221023 13:07:26.632"/>
</kw>
<msg timestamp="20221023 13:07:26.632" level="INFO">${result} = {
  "volumeName" : "30099-volume-for-cancel",
  "bucketName" : "30099-bucket-for-cancel",
  "name" : "cancel-key",
  "dataSize" : 17539,
  "creationTime" : "2022-10-23T13:07:20.436Z",
  "modificationT...</msg>
<status status="PASS" starttime="20221023 13:07:23.057" endtime="20221023 13:07:26.632"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"name\" : \"cancel-key\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221023 13:07:26.632" endtime="20221023 13:07:26.633"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221023 13:07:10.769" endtime="20221023 13:07:26.633"/>
</test>
<doc>Smoke test for ozone manager cancel prepare</doc>
<status status="PASS" starttime="20221023 13:07:07.351" endtime="20221023 13:07:26.635"/>
</suite>
<suite id="s1-s2" name="Om-Prepare" source="/opt/hadoop/smoketest/omha/om-prepare.robot">
<kw name="Create Specific OM data for prepare" type="SETUP">
<kw name="Freon OCKG" library="freon">
<arg>prefix=om-prepare</arg>
<arg>n=100</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221023 13:07:32.441" level="INFO">Running command 'ozone freon ockg --om-service-id=omservice -t 1 -n100 -p om-prepare  2&gt;&amp;1'.</msg>
<msg timestamp="20221023 13:07:51.193" level="INFO">${rc} = 0</msg>
<msg timestamp="20221023 13:07:51.194" level="INFO">${output} = 2022-10-23 13:07:34,327 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-23 13:07:34,481 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221023 13:07:32.437" endtime="20221023 13:07:51.194"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221023 13:07:51.195" level="INFO">2022-10-23 13:07:34,327 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-23 13:07:34,481 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-10-23 13:07:34,481 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-10-23 13:07:34,701 [main] INFO freon.BaseFreonGenerator: Executing test with prefix om-prepare and number-of-tests 100
2022-10-23 13:07:34,771 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-10-23 13:07:35,773 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-10-23 13:07:36,345 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-10-23 13:07:36,678 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-10-23 13:07:36,774 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-10-23 13:07:37,775 [Thread-3] INFO freon.ProgressBar: Progress: 2.00 % (2 out of 100)
2022-10-23 13:07:38,775 [Thread-3] INFO freon.ProgressBar: Progress: 11.00 % (11 out of 100)
2022-10-23 13:07:39,776 [Thread-3] INFO freon.ProgressBar: Progress: 20.00 % (20 out of 100)
2022-10-23 13:07:40,776 [Thread-3] INFO freon.ProgressBar: Progress: 25.00 % (25 out of 100)
2022-10-23 13:07:41,777 [Thread-3] INFO freon.ProgressBar: Progress: 25.00 % (25 out of 100)
2022-10-23 13:07:42,778 [Thread-3] INFO freon.ProgressBar: Progress: 25.00 % (25 out of 100)
2022-10-23 13:07:43,779 [Thread-3] INFO freon.ProgressBar: Progress: 33.00 % (33 out of 100)
2022-10-23 13:07:44,780 [Thread-3] INFO freon.ProgressBar: Progress: 41.00 % (41 out of 100)
2022-10-23 13:07:45,780 [Thread-3] INFO freon.ProgressBar: Progress: 52.00 % (52 out of 100)
2022-10-23 13:07:46,781 [Thread-3] INFO freon.ProgressBar: Progress: 64.00 % (64 out of 100)
2022-10-23 13:07:47,781 [Thread-3] INFO freon.ProgressBar: Progress: 73.00 % (73 out of 100)
2022-10-23 13:07:48,782 [Thread-3] INFO freon.ProgressBar: Progress: 85.00 % (85 out of 100)
2022-10-23 13:07:49,783 [Thread-3] INFO freon.ProgressBar: Progress: 95.00 % (95 out of 100)
2022-10-23 13:07:50,784 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2022-10-23 13:07:50,838 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=100, min=55.468199, max=2588.752686, mean=141.52910134046758, stddev=303.81798445069165, median=98.732304, p75=116.708603, p95=166.378005, p98=237.68436, p99=2030.128316, p999=2588.752686, mean_rate=6.5241997194524055, m1=5.401056505979777, m5=5.082697369459667, m15=5.027706898632342, rate_unit=events/second, duration_unit=milliseconds
2022-10-23 13:07:50,838 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 16
2022-10-23 13:07:50,838 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-10-23 13:07:50,838 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20221023 13:07:51.194" endtime="20221023 13:07:51.195"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221023 13:07:51.196" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221023 13:07:51.195" endtime="20221023 13:07:51.196"/>
</kw>
<status status="PASS" starttime="20221023 13:07:32.437" endtime="20221023 13:07:51.197"/>
</kw>
<msg timestamp="20221023 13:07:51.197" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221023 13:07:32.436" endtime="20221023 13:07:51.199"/>
</kw>
<msg timestamp="20221023 13:07:51.199" level="INFO">${result} = 2022-10-23 13:07:34,327 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-23 13:07:34,481 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221023 13:07:32.436" endtime="20221023 13:07:51.199"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221023 13:07:51.199" endtime="20221023 13:07:51.200"/>
</kw>
<status status="PASS" starttime="20221023 13:07:32.434" endtime="20221023 13:07:51.200"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20221023 13:07:51.201" level="INFO">${random} = 70733</msg>
<status status="PASS" starttime="20221023 13:07:51.200" endtime="20221023 13:07:51.201"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20221023 13:07:51.203" level="INFO">${volume_name} = 70733-volume-for-prepare</msg>
<status status="PASS" starttime="20221023 13:07:51.201" endtime="20221023 13:07:51.203"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${bucket_name}</arg>
<arg>${random}-bucket-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20221023 13:07:51.205" level="INFO">${bucket_name} = 70733-bucket-for-prepare</msg>
<status status="PASS" starttime="20221023 13:07:51.203" endtime="20221023 13:07:51.205"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create /${volume_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221023 13:07:51.210" level="INFO">Running command 'ozone sh volume create /70733-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20221023 13:07:54.272" level="INFO">${rc} = 0</msg>
<msg timestamp="20221023 13:07:54.273" level="INFO">${output} = </msg>
<status status="PASS" starttime="20221023 13:07:51.207" endtime="20221023 13:07:54.273"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221023 13:07:54.274" level="INFO"/>
<status status="PASS" starttime="20221023 13:07:54.273" endtime="20221023 13:07:54.274"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221023 13:07:54.275" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221023 13:07:54.274" endtime="20221023 13:07:54.275"/>
</kw>
<status status="PASS" starttime="20221023 13:07:51.206" endtime="20221023 13:07:54.275"/>
</kw>
<msg timestamp="20221023 13:07:54.275" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221023 13:07:51.206" endtime="20221023 13:07:54.276"/>
</kw>
<status status="PASS" starttime="20221023 13:07:51.205" endtime="20221023 13:07:54.276"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume_name}/${bucket_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221023 13:07:54.280" level="INFO">Running command 'ozone sh bucket create /70733-volume-for-prepare/70733-bucket-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20221023 13:07:57.320" level="INFO">${rc} = 0</msg>
<msg timestamp="20221023 13:07:57.320" level="INFO">${output} = </msg>
<status status="PASS" starttime="20221023 13:07:54.278" endtime="20221023 13:07:57.320"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221023 13:07:57.322" level="INFO"/>
<status status="PASS" starttime="20221023 13:07:57.321" endtime="20221023 13:07:57.322"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221023 13:07:57.323" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221023 13:07:57.322" endtime="20221023 13:07:57.323"/>
</kw>
<status status="PASS" starttime="20221023 13:07:54.277" endtime="20221023 13:07:57.323"/>
</kw>
<msg timestamp="20221023 13:07:57.323" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221023 13:07:54.277" endtime="20221023 13:07:57.324"/>
</kw>
<status status="PASS" starttime="20221023 13:07:54.276" endtime="20221023 13:07:57.324"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221023 13:07:57.329" level="INFO">Running command 'ozone sh key put /70733-volume-for-prepare/70733-bucket-for-prepare/prepare-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20221023 13:08:03.083" level="INFO">${rc} = 0</msg>
<msg timestamp="20221023 13:08:03.083" level="INFO">${output} = </msg>
<status status="PASS" starttime="20221023 13:07:57.326" endtime="20221023 13:08:03.084"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221023 13:08:03.085" level="INFO"/>
<status status="PASS" starttime="20221023 13:08:03.084" endtime="20221023 13:08:03.085"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221023 13:08:03.086" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221023 13:08:03.085" endtime="20221023 13:08:03.086"/>
</kw>
<status status="PASS" starttime="20221023 13:07:57.325" endtime="20221023 13:08:03.086"/>
</kw>
<msg timestamp="20221023 13:08:03.086" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221023 13:07:57.325" endtime="20221023 13:08:03.087"/>
</kw>
<status status="PASS" starttime="20221023 13:07:57.324" endtime="20221023 13:08:03.087"/>
</kw>
<status status="PASS" starttime="20221023 13:07:32.434" endtime="20221023 13:08:03.087"/>
</kw>
<test id="s1-s2-t1" name="Prepare Ozone Manager" line="39">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221023 13:08:03.090" endtime="20221023 13:08:03.090"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om prepare -id=omservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221023 13:08:03.095" level="INFO">Running command 'ozone admin om prepare -id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20221023 13:13:03.090" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20221023 13:08:03.092" endtime="20221023 13:13:03.090"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20221023 13:13:03.090" endtime="20221023 13:13:03.091"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20221023 13:13:03.091" endtime="20221023 13:13:03.091"/>
</kw>
<status status="FAIL" starttime="20221023 13:08:03.091" endtime="20221023 13:13:03.091"/>
</kw>
<msg timestamp="20221023 13:13:03.091" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20221023 13:08:03.091" endtime="20221023 13:13:03.092"/>
</kw>
<status status="FAIL" starttime="20221023 13:08:03.090" endtime="20221023 13:13:03.093"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20221023 13:13:03.093" endtime="20221023 13:13:03.093"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20221023 13:08:03.088" endtime="20221023 13:13:03.095">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-s2-t2" name="Checks if the expected data is present in OM" line="43">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221023 13:13:03.097" endtime="20221023 13:13:03.099"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221023 13:13:03.105" level="INFO">Running command 'ozone sh key info /70733-volume-for-prepare/70733-bucket-for-prepare/prepare-key 2&gt;&amp;1'.</msg>
<msg timestamp="20221023 13:13:06.679" level="INFO">${rc} = 0</msg>
<msg timestamp="20221023 13:13:06.680" level="INFO">${output} = {
  "volumeName" : "70733-volume-for-prepare",
  "bucketName" : "70733-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17539,
  "creationTime" : "2022-10-23T13:08:00.525Z",
  "modificati...</msg>
<status status="PASS" starttime="20221023 13:13:03.102" endtime="20221023 13:13:06.680"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221023 13:13:06.681" level="INFO">{
  "volumeName" : "70733-volume-for-prepare",
  "bucketName" : "70733-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17539,
  "creationTime" : "2022-10-23T13:08:00.525Z",
  "modificationTime" : "2022-10-23T13:08:02.678Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "ozoneKeyLocations" : [ {
    "containerID" : 3,
    "localID" : 109611004723200204,
    "length" : 17539,
    "offset" : 0,
    "keyOffset" : 0
  } ]
}</msg>
<status status="PASS" starttime="20221023 13:13:06.680" endtime="20221023 13:13:06.681"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221023 13:13:06.682" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221023 13:13:06.681" endtime="20221023 13:13:06.682"/>
</kw>
<status status="PASS" starttime="20221023 13:13:03.100" endtime="20221023 13:13:06.682"/>
</kw>
<msg timestamp="20221023 13:13:06.682" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221023 13:13:03.100" endtime="20221023 13:13:06.683"/>
</kw>
<msg timestamp="20221023 13:13:06.683" level="INFO">${result} = {
  "volumeName" : "70733-volume-for-prepare",
  "bucketName" : "70733-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17539,
  "creationTime" : "2022-10-23T13:08:00.525Z",
  "modificati...</msg>
<status status="PASS" starttime="20221023 13:13:03.099" endtime="20221023 13:13:06.683"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"name\" : \"prepare-key\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221023 13:13:06.684" endtime="20221023 13:13:06.684"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221023 13:13:03.096" endtime="20221023 13:13:06.684"/>
</test>
<test id="s1-s2-t3" name="Test write operation fails" line="47">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221023 13:13:06.687" endtime="20221023 13:13:06.687"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key2 /opt/hadoop/NOTICE.txt</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221023 13:13:06.691" level="INFO">Running command 'ozone sh key put /70733-volume-for-prepare/70733-bucket-for-prepare/prepare-key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20221023 13:13:09.714" level="INFO">${rc} = 255</msg>
<msg timestamp="20221023 13:13:09.714" level="INFO">${output} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20221023 13:13:06.688" endtime="20221023 13:13:09.714"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221023 13:13:09.716" level="INFO">NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20221023 13:13:09.715" endtime="20221023 13:13:09.716"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221023 13:13:09.717" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221023 13:13:09.716" endtime="20221023 13:13:09.717"/>
</kw>
<msg timestamp="20221023 13:13:09.717" level="INFO">${result} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20221023 13:13:06.687" endtime="20221023 13:13:09.717"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM is in prepare mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221023 13:13:09.717" endtime="20221023 13:13:09.718"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key2</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221023 13:13:09.721" level="INFO">Running command 'ozone sh key info /70733-volume-for-prepare/70733-bucket-for-prepare/prepare-key2 2&gt;&amp;1'.</msg>
<msg timestamp="20221023 13:13:12.844" level="INFO">${rc} = 255</msg>
<msg timestamp="20221023 13:13:12.844" level="INFO">${output} = KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<status status="PASS" starttime="20221023 13:13:09.719" endtime="20221023 13:13:12.844"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221023 13:13:12.846" level="INFO">KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<status status="PASS" starttime="20221023 13:13:12.845" endtime="20221023 13:13:12.846"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221023 13:13:12.847" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221023 13:13:12.846" endtime="20221023 13:13:12.847"/>
</kw>
<status status="PASS" starttime="20221023 13:13:09.718" endtime="20221023 13:13:12.847"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221023 13:13:06.686" endtime="20221023 13:13:12.847"/>
</test>
<doc>Smoke test to test preparing OMs in an OM HA cluster.</doc>
<status status="FAIL" starttime="20221023 13:07:32.358" endtime="20221023 13:13:12.849"/>
</suite>
<suite id="s1-s3" name="Om-Prepare" source="/opt/hadoop/smoketest/omha/om-prepare.robot">
<kw name="Create Specific OM data for prepare" type="SETUP">
<kw name="Freon OCKG" library="freon">
<arg>prefix=om-prepare</arg>
<arg>n=100</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221023 13:06:04.000" level="INFO">Running command 'ozone freon ockg --om-service-id=omservice -t 1 -n100 -p om-prepare  2&gt;&amp;1'.</msg>
<msg timestamp="20221023 13:06:29.838" level="INFO">${rc} = 0</msg>
<msg timestamp="20221023 13:06:29.838" level="INFO">${output} = 2022-10-23 13:06:05,795 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-23 13:06:05,970 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221023 13:06:03.995" endtime="20221023 13:06:29.838"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221023 13:06:29.840" level="INFO">2022-10-23 13:06:05,795 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-23 13:06:05,970 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-10-23 13:06:05,970 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-10-23 13:06:06,188 [main] INFO freon.BaseFreonGenerator: Executing test with prefix om-prepare and number-of-tests 100
2022-10-23 13:06:06,254 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-10-23 13:06:07,022 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2022-10-23 13:06:07,261 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-10-23 13:06:07,276 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false 
2022-10-23 13:06:08,263 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-10-23 13:06:08,618 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-10-23 13:06:08,954 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-10-23 13:06:09,277 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-10-23 13:06:10,277 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-10-23 13:06:11,280 [Thread-3] INFO freon.ProgressBar: Progress: 2.00 % (2 out of 100)
2022-10-23 13:06:12,281 [Thread-3] INFO freon.ProgressBar: Progress: 3.00 % (3 out of 100)
2022-10-23 13:06:13,281 [Thread-3] INFO freon.ProgressBar: Progress: 3.00 % (3 out of 100)
2022-10-23 13:06:14,282 [Thread-3] INFO freon.ProgressBar: Progress: 4.00 % (4 out of 100)
2022-10-23 13:06:15,283 [Thread-3] INFO freon.ProgressBar: Progress: 9.00 % (9 out of 100)
2022-10-23 13:06:16,283 [Thread-3] INFO freon.ProgressBar: Progress: 16.00 % (16 out of 100)
2022-10-23 13:06:17,293 [Thread-3] INFO freon.ProgressBar: Progress: 22.00 % (22 out of 100)
2022-10-23 13:06:18,293 [Thread-3] INFO freon.ProgressBar: Progress: 27.00 % (27 out of 100)
2022-10-23 13:06:19,294 [Thread-3] INFO freon.ProgressBar: Progress: 27.00 % (27 out of 100)
2022-10-23 13:06:20,294 [Thread-3] INFO freon.ProgressBar: Progress: 27.00 % (27 out of 100)
2022-10-23 13:06:21,295 [Thread-3] INFO freon.ProgressBar: Progress: 33.00 % (33 out of 100)
2022-10-23 13:06:22,295 [Thread-3] INFO freon.ProgressBar: Progress: 42.00 % (42 out of 100)
2022-10-23 13:06:23,296 [Thread-3] INFO freon.ProgressBar: Progress: 49.00 % (49 out of 100)
2022-10-23 13:06:24,296 [Thread-3] INFO freon.ProgressBar: Progress: 57.00 % (57 out of 100)
2022-10-23 13:06:25,298 [Thread-3] INFO freon.ProgressBar: Progress: 65.00 % (65 out of 100)
2022-10-23 13:06:26,299 [Thread-3] INFO freon.ProgressBar: Progress: 73.00 % (73 out of 100)
2022-10-23 13:06:27,300 [Thread-3] INFO freon.ProgressBar: Progress: 82.00 % (82 out of 100)
2022-10-23 13:06:28,305 [Thread-3] INFO freon.ProgressBar: Progress: 91.00 % (91 out of 100)
2022-10-23 13:06:29,305 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2022-10-23 13:06:29,489 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=100, min=81.681482, max=3143.451872, mean=207.2484564099835, stddev=433.9771368051598, median=125.900563, p75=151.487632, p95=252.12157, p98=2623.240071, p99=2637.40461, p999=3143.451872, mean_rate=4.527650382915484, m1=1.6731782581663233, m5=0.8319887799788567, m15=0.6783638036437396, rate_unit=events/second, duration_unit=milliseconds
2022-10-23 13:06:29,490 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 23
2022-10-23 13:06:29,490 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-10-23 13:06:29,490 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20221023 13:06:29.839" endtime="20221023 13:06:29.840"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221023 13:06:29.841" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221023 13:06:29.840" endtime="20221023 13:06:29.841"/>
</kw>
<status status="PASS" starttime="20221023 13:06:03.995" endtime="20221023 13:06:29.841"/>
</kw>
<msg timestamp="20221023 13:06:29.841" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221023 13:06:03.994" endtime="20221023 13:06:29.843"/>
</kw>
<msg timestamp="20221023 13:06:29.844" level="INFO">${result} = 2022-10-23 13:06:05,795 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-23 13:06:05,970 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221023 13:06:03.993" endtime="20221023 13:06:29.844"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221023 13:06:29.844" endtime="20221023 13:06:29.844"/>
</kw>
<status status="PASS" starttime="20221023 13:06:03.992" endtime="20221023 13:06:29.845"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20221023 13:06:29.845" level="INFO">${random} = 37109</msg>
<status status="PASS" starttime="20221023 13:06:29.845" endtime="20221023 13:06:29.845"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20221023 13:06:29.847" level="INFO">${volume_name} = 37109-volume-for-prepare</msg>
<status status="PASS" starttime="20221023 13:06:29.846" endtime="20221023 13:06:29.847"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${bucket_name}</arg>
<arg>${random}-bucket-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20221023 13:06:29.849" level="INFO">${bucket_name} = 37109-bucket-for-prepare</msg>
<status status="PASS" starttime="20221023 13:06:29.847" endtime="20221023 13:06:29.849"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create /${volume_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221023 13:06:29.853" level="INFO">Running command 'ozone sh volume create /37109-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20221023 13:06:33.241" level="INFO">${rc} = 0</msg>
<msg timestamp="20221023 13:06:33.241" level="INFO">${output} = </msg>
<status status="PASS" starttime="20221023 13:06:29.851" endtime="20221023 13:06:33.241"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221023 13:06:33.242" level="INFO"/>
<status status="PASS" starttime="20221023 13:06:33.242" endtime="20221023 13:06:33.242"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221023 13:06:33.243" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221023 13:06:33.243" endtime="20221023 13:06:33.243"/>
</kw>
<status status="PASS" starttime="20221023 13:06:29.850" endtime="20221023 13:06:33.244"/>
</kw>
<msg timestamp="20221023 13:06:33.244" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221023 13:06:29.850" endtime="20221023 13:06:33.244"/>
</kw>
<status status="PASS" starttime="20221023 13:06:29.849" endtime="20221023 13:06:33.245"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume_name}/${bucket_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221023 13:06:33.249" level="INFO">Running command 'ozone sh bucket create /37109-volume-for-prepare/37109-bucket-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20221023 13:06:36.865" level="INFO">${rc} = 0</msg>
<msg timestamp="20221023 13:06:36.865" level="INFO">${output} = </msg>
<status status="PASS" starttime="20221023 13:06:33.247" endtime="20221023 13:06:36.865"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221023 13:06:36.867" level="INFO"/>
<status status="PASS" starttime="20221023 13:06:36.866" endtime="20221023 13:06:36.867"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221023 13:06:36.868" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221023 13:06:36.867" endtime="20221023 13:06:36.868"/>
</kw>
<status status="PASS" starttime="20221023 13:06:33.246" endtime="20221023 13:06:36.868"/>
</kw>
<msg timestamp="20221023 13:06:36.869" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221023 13:06:33.246" endtime="20221023 13:06:36.869"/>
</kw>
<status status="PASS" starttime="20221023 13:06:33.245" endtime="20221023 13:06:36.870"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221023 13:06:36.874" level="INFO">Running command 'ozone sh key put /37109-volume-for-prepare/37109-bucket-for-prepare/prepare-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20221023 13:06:42.684" level="INFO">${rc} = 0</msg>
<msg timestamp="20221023 13:06:42.685" level="INFO">${output} = </msg>
<status status="PASS" starttime="20221023 13:06:36.872" endtime="20221023 13:06:42.685"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221023 13:06:42.686" level="INFO"/>
<status status="PASS" starttime="20221023 13:06:42.685" endtime="20221023 13:06:42.686"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221023 13:06:42.687" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221023 13:06:42.686" endtime="20221023 13:06:42.687"/>
</kw>
<status status="PASS" starttime="20221023 13:06:36.871" endtime="20221023 13:06:42.687"/>
</kw>
<msg timestamp="20221023 13:06:42.687" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221023 13:06:36.871" endtime="20221023 13:06:42.688"/>
</kw>
<status status="PASS" starttime="20221023 13:06:36.870" endtime="20221023 13:06:42.688"/>
</kw>
<status status="PASS" starttime="20221023 13:06:03.991" endtime="20221023 13:06:42.689"/>
</kw>
<test id="s1-s3-t1" name="Prepare Ozone Manager" line="39">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221023 13:06:42.691" endtime="20221023 13:06:42.691"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om prepare -id=omservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221023 13:06:42.697" level="INFO">Running command 'ozone admin om prepare -id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20221023 13:06:51.200" level="INFO">${rc} = 0</msg>
<msg timestamp="20221023 13:06:51.200" level="INFO">${output} = Ozone Manager Prepare Request successfully returned with Transaction Id : [413].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], C...</msg>
<status status="PASS" starttime="20221023 13:06:42.694" endtime="20221023 13:06:51.200"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221023 13:06:51.202" level="INFO">Ozone Manager Prepare Request successfully returned with Transaction Id : [413].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [413]
OM : [om3], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [413]
OM : [om2], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [413]

OM Preparation successful! 
All OMs are prepared
No new write requests will be allowed until preparation is cancelled or upgrade/downgrade is done.</msg>
<status status="PASS" starttime="20221023 13:06:51.201" endtime="20221023 13:06:51.202"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221023 13:06:51.203" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221023 13:06:51.202" endtime="20221023 13:06:51.203"/>
</kw>
<status status="PASS" starttime="20221023 13:06:42.693" endtime="20221023 13:06:51.203"/>
</kw>
<msg timestamp="20221023 13:06:51.203" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221023 13:06:42.693" endtime="20221023 13:06:51.204"/>
</kw>
<msg timestamp="20221023 13:06:51.204" level="INFO">${result} = Ozone Manager Prepare Request successfully returned with Transaction Id : [413].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], C...</msg>
<status status="PASS" starttime="20221023 13:06:42.692" endtime="20221023 13:06:51.204"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221023 13:06:51.205" endtime="20221023 13:06:51.206"/>
</kw>
<status status="PASS" starttime="20221023 13:06:51.205" endtime="20221023 13:06:51.206"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221023 13:06:42.689" endtime="20221023 13:06:51.206"/>
</test>
<test id="s1-s3-t2" name="Checks if the expected data is present in OM" line="43">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221023 13:06:51.209" endtime="20221023 13:06:51.209"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221023 13:06:51.214" level="INFO">Running command 'ozone sh key info /37109-volume-for-prepare/37109-bucket-for-prepare/prepare-key 2&gt;&amp;1'.</msg>
<msg timestamp="20221023 13:06:54.840" level="INFO">${rc} = 0</msg>
<msg timestamp="20221023 13:06:54.841" level="INFO">${output} = {
  "volumeName" : "37109-volume-for-prepare",
  "bucketName" : "37109-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17539,
  "creationTime" : "2022-10-23T13:06:39.967Z",
  "modificati...</msg>
<status status="PASS" starttime="20221023 13:06:51.211" endtime="20221023 13:06:54.841"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221023 13:06:54.842" level="INFO">{
  "volumeName" : "37109-volume-for-prepare",
  "bucketName" : "37109-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17539,
  "creationTime" : "2022-10-23T13:06:39.967Z",
  "modificationTime" : "2022-10-23T13:06:42.292Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "ozoneKeyLocations" : [ {
    "containerID" : 3,
    "localID" : 109611004723200101,
    "length" : 17539,
    "offset" : 0,
    "keyOffset" : 0
  } ]
}</msg>
<status status="PASS" starttime="20221023 13:06:54.841" endtime="20221023 13:06:54.842"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221023 13:06:54.843" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221023 13:06:54.842" endtime="20221023 13:06:54.843"/>
</kw>
<status status="PASS" starttime="20221023 13:06:51.210" endtime="20221023 13:06:54.843"/>
</kw>
<msg timestamp="20221023 13:06:54.843" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221023 13:06:51.210" endtime="20221023 13:06:54.844"/>
</kw>
<msg timestamp="20221023 13:06:54.844" level="INFO">${result} = {
  "volumeName" : "37109-volume-for-prepare",
  "bucketName" : "37109-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17539,
  "creationTime" : "2022-10-23T13:06:39.967Z",
  "modificati...</msg>
<status status="PASS" starttime="20221023 13:06:51.209" endtime="20221023 13:06:54.844"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"name\" : \"prepare-key\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221023 13:06:54.844" endtime="20221023 13:06:54.845"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221023 13:06:51.208" endtime="20221023 13:06:54.845"/>
</test>
<test id="s1-s3-t3" name="Test write operation fails" line="47">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221023 13:06:54.847" endtime="20221023 13:06:54.848"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key2 /opt/hadoop/NOTICE.txt</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221023 13:06:54.851" level="INFO">Running command 'ozone sh key put /37109-volume-for-prepare/37109-bucket-for-prepare/prepare-key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20221023 13:06:58.184" level="INFO">${rc} = 255</msg>
<msg timestamp="20221023 13:06:58.184" level="INFO">${output} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20221023 13:06:54.848" endtime="20221023 13:06:58.184"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221023 13:06:58.186" level="INFO">NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20221023 13:06:58.185" endtime="20221023 13:06:58.186"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221023 13:06:58.187" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221023 13:06:58.186" endtime="20221023 13:06:58.187"/>
</kw>
<msg timestamp="20221023 13:06:58.187" level="INFO">${result} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20221023 13:06:54.848" endtime="20221023 13:06:58.187"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM is in prepare mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221023 13:06:58.187" endtime="20221023 13:06:58.188"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key2</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221023 13:06:58.191" level="INFO">Running command 'ozone sh key info /37109-volume-for-prepare/37109-bucket-for-prepare/prepare-key2 2&gt;&amp;1'.</msg>
<msg timestamp="20221023 13:07:01.483" level="INFO">${rc} = 255</msg>
<msg timestamp="20221023 13:07:01.483" level="INFO">${output} = KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<status status="PASS" starttime="20221023 13:06:58.189" endtime="20221023 13:07:01.483"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221023 13:07:01.484" level="INFO">KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<status status="PASS" starttime="20221023 13:07:01.484" endtime="20221023 13:07:01.485"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221023 13:07:01.485" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221023 13:07:01.485" endtime="20221023 13:07:01.486"/>
</kw>
<status status="PASS" starttime="20221023 13:06:58.188" endtime="20221023 13:07:01.486"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221023 13:06:54.846" endtime="20221023 13:07:01.486"/>
</test>
<doc>Smoke test to test preparing OMs in an OM HA cluster.</doc>
<status status="PASS" starttime="20221023 13:06:03.905" endtime="20221023 13:07:01.488"/>
</suite>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="417358"/>
</suite>
<statistics>
<total>
<stat pass="7" fail="1" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="7" fail="1" skip="0" id="s1" name="ozone-om-prepare">ozone-om-prepare</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1" name="Om-Cancel-Prepare">ozone-om-prepare.Om-Cancel-Prepare</stat>
<stat pass="2" fail="1" skip="0" id="s1-s2" name="Om-Prepare">ozone-om-prepare.Om-Prepare</stat>
<stat pass="3" fail="0" skip="0" id="s1-s3" name="Om-Prepare">ozone-om-prepare.Om-Prepare</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
