<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.0 (Python 3.8.10 on linux)" generated="20221020 02:13:04.312" rpa="false" schemaversion="3">
<suite id="s1" name="ozonesecure-ha">
<suite id="s1-s1" name="Freon" source="/opt/hadoop/smoketest/freon">
<suite id="s1-s1-s1" name="echoRPCLoad" source="/opt/hadoop/smoketest/freon/echoRPCLoad.robot">
<test id="s1-s1-s1-t1" name="Ozone Echo RPC Load Generator with request payload and response payload" line="26">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ome -t=1 -n=${n} --payload-req=1 --payload-resp=1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221020 02:10:34.266" level="INFO">Running command 'ozone freon ome -t=1 -n=1 --payload-req=1 --payload-resp=1 2&gt;&amp;1'.</msg>
<msg timestamp="20221020 02:10:38.430" level="INFO">${rc} = 0</msg>
<msg timestamp="20221020 02:10:38.430" level="INFO">${output} = 2022-10-20 02:10:36,253 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-20 02:10:36,426 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221020 02:10:34.263" endtime="20221020 02:10:38.430"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221020 02:10:38.431" level="INFO">2022-10-20 02:10:36,253 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-20 02:10:36,426 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-10-20 02:10:36,426 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-10-20 02:10:37,270 [main] INFO freon.BaseFreonGenerator: Executing test with prefix embxkqeh27 and number-of-tests 1
2022-10-20 02:10:37,317 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-20 02:10:38,327 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-10-20 02:10:38,372 [shutdown-hook-0] INFO metrics: type=TIMER, name=rpc-payload, count=1, min=508.696419, max=508.696419, mean=508.696419, stddev=0.0, median=508.696419, p75=508.696419, p95=508.696419, p98=508.696419, p99=508.696419, p999=508.696419, mean_rate=0.9462796413592968, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-10-20 02:10:38,372 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 1
2022-10-20 02:10:38,373 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-10-20 02:10:38,373 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20221020 02:10:38.430" endtime="20221020 02:10:38.431"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221020 02:10:38.432" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221020 02:10:38.431" endtime="20221020 02:10:38.432"/>
</kw>
<status status="PASS" starttime="20221020 02:10:34.263" endtime="20221020 02:10:38.432"/>
</kw>
<msg timestamp="20221020 02:10:38.432" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221020 02:10:34.262" endtime="20221020 02:10:38.433"/>
</kw>
<msg timestamp="20221020 02:10:38.434" level="INFO">${result} = 2022-10-20 02:10:36,253 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-20 02:10:36,426 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221020 02:10:34.262" endtime="20221020 02:10:38.434"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221020 02:10:38.434" endtime="20221020 02:10:38.434"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221020 02:10:34.261" endtime="20221020 02:10:38.435"/>
</test>
<test id="s1-s1-s1-t2" name="Ozone Echo RPC Load Generator with request payload and empty response payload" line="30">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ome -t=1 -n=${n} --payload-req=1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221020 02:10:38.439" level="INFO">Running command 'ozone freon ome -t=1 -n=1 --payload-req=1 2&gt;&amp;1'.</msg>
<msg timestamp="20221020 02:10:42.517" level="INFO">${rc} = 0</msg>
<msg timestamp="20221020 02:10:42.517" level="INFO">${output} = 2022-10-20 02:10:40,331 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-20 02:10:40,444 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221020 02:10:38.437" endtime="20221020 02:10:42.517"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221020 02:10:42.518" level="INFO">2022-10-20 02:10:40,331 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-20 02:10:40,444 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-10-20 02:10:40,444 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-10-20 02:10:41,363 [main] INFO freon.BaseFreonGenerator: Executing test with prefix kuvxvqkt5z and number-of-tests 1
2022-10-20 02:10:41,392 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-20 02:10:42,401 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-10-20 02:10:42,455 [shutdown-hook-0] INFO metrics: type=TIMER, name=rpc-payload, count=1, min=537.363704, max=537.363704, mean=537.363704, stddev=0.0, median=537.363704, p75=537.363704, p95=537.363704, p98=537.363704, p99=537.363704, p999=537.363704, mean_rate=0.9398484245167664, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-10-20 02:10:42,456 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 1
2022-10-20 02:10:42,457 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-10-20 02:10:42,457 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20221020 02:10:42.517" endtime="20221020 02:10:42.518"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221020 02:10:42.519" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221020 02:10:42.518" endtime="20221020 02:10:42.519"/>
</kw>
<status status="PASS" starttime="20221020 02:10:38.437" endtime="20221020 02:10:42.519"/>
</kw>
<msg timestamp="20221020 02:10:42.519" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221020 02:10:38.437" endtime="20221020 02:10:42.520"/>
</kw>
<msg timestamp="20221020 02:10:42.520" level="INFO">${result} = 2022-10-20 02:10:40,331 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-20 02:10:40,444 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221020 02:10:38.436" endtime="20221020 02:10:42.520"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221020 02:10:42.520" endtime="20221020 02:10:42.520"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221020 02:10:38.435" endtime="20221020 02:10:42.521"/>
</test>
<test id="s1-s1-s1-t3" name="Ozone Echo RPC Load Generator with empty request payload and response payload" line="34">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ome -t=1 -n=${n} --payload-resp=1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221020 02:10:42.525" level="INFO">Running command 'ozone freon ome -t=1 -n=1 --payload-resp=1 2&gt;&amp;1'.</msg>
<msg timestamp="20221020 02:10:46.633" level="INFO">${rc} = 0</msg>
<msg timestamp="20221020 02:10:46.633" level="INFO">${output} = 2022-10-20 02:10:44,312 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-20 02:10:44,513 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221020 02:10:42.524" endtime="20221020 02:10:46.633"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221020 02:10:46.634" level="INFO">2022-10-20 02:10:44,312 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-20 02:10:44,513 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-10-20 02:10:44,513 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-10-20 02:10:45,492 [main] INFO freon.BaseFreonGenerator: Executing test with prefix njwaejss3s and number-of-tests 1
2022-10-20 02:10:45,523 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-20 02:10:46,529 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-10-20 02:10:46,587 [shutdown-hook-0] INFO metrics: type=TIMER, name=rpc-payload, count=1, min=504.765759, max=504.765759, mean=504.765759, stddev=0.0, median=504.765759, p75=504.765759, p95=504.765759, p98=504.765759, p99=504.765759, p999=504.765759, mean_rate=0.9382470795302782, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-10-20 02:10:46,588 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 1
2022-10-20 02:10:46,590 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-10-20 02:10:46,590 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20221020 02:10:46.633" endtime="20221020 02:10:46.634"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221020 02:10:46.634" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221020 02:10:46.634" endtime="20221020 02:10:46.635"/>
</kw>
<status status="PASS" starttime="20221020 02:10:42.523" endtime="20221020 02:10:46.635"/>
</kw>
<msg timestamp="20221020 02:10:46.635" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221020 02:10:42.523" endtime="20221020 02:10:46.635"/>
</kw>
<msg timestamp="20221020 02:10:46.636" level="INFO">${result} = 2022-10-20 02:10:44,312 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-20 02:10:44,513 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221020 02:10:42.522" endtime="20221020 02:10:46.636"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221020 02:10:46.636" endtime="20221020 02:10:46.636"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221020 02:10:42.522" endtime="20221020 02:10:46.636"/>
</test>
<test id="s1-s1-s1-t4" name="Ozone Echo RPC Load Generator with empty request payload and empty response payload" line="38">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ome -t=1 -n=${n}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221020 02:10:46.642" level="INFO">Running command 'ozone freon ome -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20221020 02:10:50.653" level="INFO">${rc} = 0</msg>
<msg timestamp="20221020 02:10:50.653" level="INFO">${output} = 2022-10-20 02:10:48,514 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-20 02:10:48,612 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221020 02:10:46.640" endtime="20221020 02:10:50.653"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221020 02:10:50.655" level="INFO">2022-10-20 02:10:48,514 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-20 02:10:48,612 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-10-20 02:10:48,612 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-10-20 02:10:49,453 [main] INFO freon.BaseFreonGenerator: Executing test with prefix odcmv1fdea and number-of-tests 1
2022-10-20 02:10:49,498 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-20 02:10:50,504 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-10-20 02:10:50,584 [shutdown-hook-0] INFO metrics: type=TIMER, name=rpc-payload, count=1, min=498.349021, max=498.349021, mean=498.349021, stddev=0.0, median=498.349021, p75=498.349021, p95=498.349021, p98=498.349021, p99=498.349021, p999=498.349021, mean_rate=0.9190438659131727, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-10-20 02:10:50,586 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 1
2022-10-20 02:10:50,588 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-10-20 02:10:50,588 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20221020 02:10:50.654" endtime="20221020 02:10:50.655"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221020 02:10:50.655" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221020 02:10:50.655" endtime="20221020 02:10:50.655"/>
</kw>
<status status="PASS" starttime="20221020 02:10:46.639" endtime="20221020 02:10:50.655"/>
</kw>
<msg timestamp="20221020 02:10:50.656" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221020 02:10:46.639" endtime="20221020 02:10:50.656"/>
</kw>
<msg timestamp="20221020 02:10:50.656" level="INFO">${result} = 2022-10-20 02:10:48,514 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-20 02:10:48,612 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221020 02:10:46.638" endtime="20221020 02:10:50.656"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221020 02:10:50.656" endtime="20221020 02:10:50.657"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221020 02:10:46.637" endtime="20221020 02:10:50.657"/>
</test>
<doc>Test freon echo RPC commands</doc>
<status status="PASS" starttime="20221020 02:10:34.238" endtime="20221020 02:10:50.658"/>
</suite>
<suite id="s1-s1-s2" name="Generate-Chunk" source="/opt/hadoop/smoketest/freon/generate-chunk.robot">
<test id="s1-s1-s2-t1" name="DN Chunk Generator" line="25">
<kw name="Freon DCG" library="freon">
<arg>prefix=dcg${PREFIX}</arg>
<arg>n=100</arg>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20221020 02:10:50.669" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221020 02:10:50.668" endtime="20221020 02:10:50.669"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon dcg -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<status status="NOT RUN" starttime="20221020 02:10:50.669" endtime="20221020 02:10:50.669"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221020 02:10:50.669" endtime="20221020 02:10:50.669"/>
</kw>
<status status="PASS" starttime="20221020 02:10:50.667" endtime="20221020 02:10:50.669"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221020 02:10:50.667" endtime="20221020 02:10:50.670"/>
</test>
<doc>Test freon chunk generation commands</doc>
<status status="PASS" starttime="20221020 02:10:50.660" endtime="20221020 02:10:50.670"/>
</suite>
<suite id="s1-s1-s3" name="Generate" source="/opt/hadoop/smoketest/freon/generate.robot">
<test id="s1-s1-s3-t1" name="Ozone Client Key Generator" line="25">
<kw name="Freon OCKG" library="freon">
<arg>prefix=ockg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221020 02:10:50.682" level="INFO">Running command 'ozone freon ockg --om-service-id=id1 -t 1 -n1 -p ockg  2&gt;&amp;1'.</msg>
<msg timestamp="20221020 02:11:00.393" level="INFO">${rc} = 0</msg>
<msg timestamp="20221020 02:11:00.393" level="INFO">${output} = 2022-10-20 02:10:52,571 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-20 02:10:52,725 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221020 02:10:50.680" endtime="20221020 02:11:00.393"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221020 02:11:00.395" level="INFO">2022-10-20 02:10:52,571 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-20 02:10:52,725 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-10-20 02:10:52,725 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-10-20 02:10:52,898 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockg and number-of-tests 1
2022-10-20 02:10:52,959 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-20 02:10:53,966 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-20 02:10:54,305 [main] INFO rpc.RpcClient: Creating Volume: vol1, with testuser as owner and space quota set to -1 bytes, counts quota set to -1
2022-10-20 02:10:54,663 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, testuser as owner, Versioning false, Storage Type set to DISK and Encryption set to false 
2022-10-20 02:10:54,968 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-20 02:10:55,974 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-20 02:10:56,649 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-10-20 02:10:56,974 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-20 02:10:56,986 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-10-20 02:10:57,974 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-20 02:10:58,975 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-20 02:10:59,975 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-10-20 02:11:00,040 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=4576.526123, max=4576.526123, mean=4576.526123, stddev=0.0, median=4576.526123, p75=4576.526123, p95=4576.526123, p98=4576.526123, p99=4576.526123, p999=4576.526123, mean_rate=0.19517104444882746, m1=0.2, m5=0.2, m15=0.2, rate_unit=events/second, duration_unit=milliseconds
2022-10-20 02:11:00,041 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 7
2022-10-20 02:11:00,046 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-10-20 02:11:00,046 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20221020 02:11:00.394" endtime="20221020 02:11:00.395"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221020 02:11:00.395" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221020 02:11:00.395" endtime="20221020 02:11:00.395"/>
</kw>
<status status="PASS" starttime="20221020 02:10:50.680" endtime="20221020 02:11:00.396"/>
</kw>
<msg timestamp="20221020 02:11:00.396" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221020 02:10:50.679" endtime="20221020 02:11:00.396"/>
</kw>
<msg timestamp="20221020 02:11:00.396" level="INFO">${result} = 2022-10-20 02:10:52,571 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-20 02:10:52,725 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221020 02:10:50.679" endtime="20221020 02:11:00.396"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221020 02:11:00.397" endtime="20221020 02:11:00.397"/>
</kw>
<status status="PASS" starttime="20221020 02:10:50.678" endtime="20221020 02:11:00.397"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221020 02:10:50.677" endtime="20221020 02:11:00.397"/>
</test>
<test id="s1-s1-s3-t2" name="OM Key Generator" line="28">
<kw name="Freon OMKG" library="freon">
<arg>prefix=omkg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon omkg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221020 02:11:00.404" level="INFO">Running command 'ozone freon omkg --om-service-id=id1 -t 1 -n1 -p omkg  2&gt;&amp;1'.</msg>
<msg timestamp="20221020 02:11:05.349" level="INFO">${rc} = 0</msg>
<msg timestamp="20221020 02:11:05.349" level="INFO">${output} = 2022-10-20 02:11:02,265 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-20 02:11:02,419 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221020 02:11:00.402" endtime="20221020 02:11:05.349"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221020 02:11:05.350" level="INFO">2022-10-20 02:11:02,265 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-20 02:11:02,419 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-10-20 02:11:02,419 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-10-20 02:11:02,607 [main] INFO freon.BaseFreonGenerator: Executing test with prefix omkg and number-of-tests 1
2022-10-20 02:11:02,695 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-20 02:11:03,696 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-20 02:11:04,696 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-10-20 02:11:05,302 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=274.911064, max=274.911064, mean=274.911064, stddev=0.0, median=274.911064, p75=274.911064, p95=274.911064, p98=274.911064, p99=274.911064, p999=274.911064, mean_rate=0.8533286744773467, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-10-20 02:11:05,303 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2022-10-20 02:11:05,303 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-10-20 02:11:05,303 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20221020 02:11:05.349" endtime="20221020 02:11:05.350"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221020 02:11:05.351" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221020 02:11:05.350" endtime="20221020 02:11:05.351"/>
</kw>
<status status="PASS" starttime="20221020 02:11:00.401" endtime="20221020 02:11:05.351"/>
</kw>
<msg timestamp="20221020 02:11:05.351" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221020 02:11:00.401" endtime="20221020 02:11:05.352"/>
</kw>
<msg timestamp="20221020 02:11:05.352" level="INFO">${result} = 2022-10-20 02:11:02,265 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-20 02:11:02,419 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221020 02:11:00.400" endtime="20221020 02:11:05.352"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221020 02:11:05.352" endtime="20221020 02:11:05.352"/>
</kw>
<status status="PASS" starttime="20221020 02:11:00.399" endtime="20221020 02:11:05.353"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221020 02:11:00.398" endtime="20221020 02:11:05.353"/>
</test>
<test id="s1-s1-s3-t3" name="OM Bucket Generator" line="31">
<kw name="Freon OMBG" library="freon">
<arg>prefix=ombg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ombg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221020 02:11:05.359" level="INFO">Running command 'ozone freon ombg --om-service-id=id1 -t 1 -n1 -p ombg  2&gt;&amp;1'.</msg>
<msg timestamp="20221020 02:11:10.359" level="INFO">${rc} = 0</msg>
<msg timestamp="20221020 02:11:10.359" level="INFO">${output} = 2022-10-20 02:11:07,310 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-20 02:11:07,470 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221020 02:11:05.357" endtime="20221020 02:11:10.359"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221020 02:11:10.360" level="INFO">2022-10-20 02:11:07,310 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-20 02:11:07,470 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-10-20 02:11:07,470 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-10-20 02:11:07,633 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ombg and number-of-tests 1
2022-10-20 02:11:07,718 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-20 02:11:08,721 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-20 02:11:09,722 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-10-20 02:11:10,308 [shutdown-hook-0] INFO metrics: type=TIMER, name=bucket-create, count=1, min=56.144157, max=56.144157, mean=56.144157, stddev=0.0, median=56.144157, p75=56.144157, p95=56.144157, p98=56.144157, p99=56.144157, p999=56.144157, mean_rate=0.9613769308016681, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-10-20 02:11:10,308 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2022-10-20 02:11:10,309 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-10-20 02:11:10,309 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20221020 02:11:10.360" endtime="20221020 02:11:10.360"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221020 02:11:10.361" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221020 02:11:10.360" endtime="20221020 02:11:10.361"/>
</kw>
<status status="PASS" starttime="20221020 02:11:05.356" endtime="20221020 02:11:10.361"/>
</kw>
<msg timestamp="20221020 02:11:10.361" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221020 02:11:05.356" endtime="20221020 02:11:10.362"/>
</kw>
<msg timestamp="20221020 02:11:10.362" level="INFO">${result} = 2022-10-20 02:11:07,310 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-20 02:11:07,470 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221020 02:11:05.355" endtime="20221020 02:11:10.362"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221020 02:11:10.362" endtime="20221020 02:11:10.363"/>
</kw>
<status status="PASS" starttime="20221020 02:11:05.354" endtime="20221020 02:11:10.363"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221020 02:11:05.354" endtime="20221020 02:11:10.363"/>
</test>
<doc>Test freon data generation commands</doc>
<status status="PASS" starttime="20221020 02:10:50.671" endtime="20221020 02:11:10.364"/>
</suite>
<suite id="s1-s1-s4" name="Read-Write-Key" source="/opt/hadoop/smoketest/freon/read-write-key.robot">
<test id="s1-s1-s4-t1" name="Pre-generate 100 keys of size 1 byte each to Ozone" line="26">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ork -n 1 -t 10 -r 100 --size 1 -v voltest -b buckettest -p performanceTest</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221020 02:11:10.376" level="INFO">Running command 'ozone freon ork -n 1 -t 10 -r 100 --size 1 -v voltest -b buckettest -p performanceTest 2&gt;&amp;1'.</msg>
<msg timestamp="20221020 02:11:36.063" level="INFO">${rc} = 0</msg>
<msg timestamp="20221020 02:11:36.063" level="INFO">${output} = 2022-10-20 02:11:12,111 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-20 02:11:12,254 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221020 02:11:10.375" endtime="20221020 02:11:36.063"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221020 02:11:36.064" level="INFO">2022-10-20 02:11:12,111 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-20 02:11:12,254 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-10-20 02:11:12,254 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-10-20 02:11:12,456 [main] INFO freon.BaseFreonGenerator: Executing test with prefix performanceTest and number-of-tests 1
2022-10-20 02:11:12,544 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-20 02:11:13,558 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-20 02:11:14,298 [main] INFO rpc.RpcClient: Creating Volume: voltest, with testuser as owner and space quota set to -1 bytes, counts quota set to -1
2022-10-20 02:11:14,368 [main] INFO rpc.RpcClient: Creating Bucket: voltest/buckettest, with server-side default bucket layout, testuser as owner, Versioning false, Storage Type set to DISK and Encryption set to false 
2022-10-20 02:11:14,559 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-20 02:11:15,031 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-10-20 02:11:15,352 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-10-20 02:11:15,559 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-20 02:11:16,560 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-20 02:11:17,560 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-20 02:11:18,563 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-20 02:11:19,563 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-20 02:11:20,564 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-20 02:11:21,564 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-20 02:11:22,564 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-20 02:11:23,566 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-20 02:11:24,566 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-20 02:11:25,566 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-20 02:11:26,567 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-20 02:11:27,567 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-20 02:11:28,568 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-20 02:11:29,569 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-20 02:11:30,569 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-20 02:11:31,569 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-20 02:11:32,570 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-20 02:11:33,570 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-20 02:11:34,570 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-20 02:11:35,571 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-10-20 02:11:35,706 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-read-write, count=1, min=20508.412574, max=20508.412574, mean=20508.412574, stddev=0.0, median=20508.412574, p75=20508.412574, p95=20508.412574, p98=20508.412574, p99=20508.412574, p999=20508.412574, mean_rate=0.046960441005512756, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-10-20 02:11:35,706 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 23
2022-10-20 02:11:35,706 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-10-20 02:11:35,707 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20221020 02:11:36.063" endtime="20221020 02:11:36.064"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221020 02:11:36.064" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221020 02:11:36.064" endtime="20221020 02:11:36.065"/>
</kw>
<status status="PASS" starttime="20221020 02:11:10.374" endtime="20221020 02:11:36.065"/>
</kw>
<msg timestamp="20221020 02:11:36.065" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221020 02:11:10.374" endtime="20221020 02:11:36.065"/>
</kw>
<msg timestamp="20221020 02:11:36.066" level="INFO">${result} = 2022-10-20 02:11:12,111 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-20 02:11:12,254 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221020 02:11:10.373" endtime="20221020 02:11:36.066"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221020 02:11:10.372" endtime="20221020 02:11:36.066"/>
</test>
<test id="s1-s1-s4-t2" name="Read 10 keys from pre-generated keys" line="29">
<kw name="Set Variable" library="BuiltIn">
<var>${keysCount}</var>
<arg>10</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20221020 02:11:36.067" level="INFO">${keysCount} = 10</msg>
<status status="PASS" starttime="20221020 02:11:36.067" endtime="20221020 02:11:36.067"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockrw -n ${keysCount} -t 10 -r 100 -v voltest -b buckettest -p performanceTest</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221020 02:11:36.071" level="INFO">Running command 'ozone freon ockrw -n 10 -t 10 -r 100 -v voltest -b buckettest -p performanceTest 2&gt;&amp;1'.</msg>
<msg timestamp="20221020 02:11:43.483" level="INFO">${rc} = 0</msg>
<msg timestamp="20221020 02:11:43.483" level="INFO">${output} = 2022-10-20 02:11:37,908 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-20 02:11:38,040 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221020 02:11:36.069" endtime="20221020 02:11:43.483"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221020 02:11:43.485" level="INFO">2022-10-20 02:11:37,908 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-20 02:11:38,040 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-10-20 02:11:38,040 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-10-20 02:11:38,229 [main] INFO freon.BaseFreonGenerator: Executing test with prefix performanceTest and number-of-tests 10
2022-10-20 02:11:38,318 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2022-10-20 02:11:39,320 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2022-10-20 02:11:40,320 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2022-10-20 02:11:40,630 [pool-2-thread-2] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-10-20 02:11:41,321 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2022-10-20 02:11:42,321 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (10 out of 10)
2022-10-20 02:11:43,116 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-read-write, count=10, min=2132.673026, max=2165.478506, mean=2149.2827936, stddev=10.299504670889753, median=2154.901741, p75=2155.81583, p95=2165.478506, p98=2165.478506, p99=2165.478506, p999=2165.478506, mean_rate=3.1284657534675135, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-10-20 02:11:43,116 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 5
2022-10-20 02:11:43,120 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-10-20 02:11:43,120 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 10</msg>
<status status="PASS" starttime="20221020 02:11:43.484" endtime="20221020 02:11:43.485"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221020 02:11:43.485" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221020 02:11:43.485" endtime="20221020 02:11:43.485"/>
</kw>
<status status="PASS" starttime="20221020 02:11:36.068" endtime="20221020 02:11:43.486"/>
</kw>
<msg timestamp="20221020 02:11:43.486" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221020 02:11:36.068" endtime="20221020 02:11:43.486"/>
</kw>
<msg timestamp="20221020 02:11:43.487" level="INFO">${result} = 2022-10-20 02:11:37,908 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-20 02:11:38,040 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221020 02:11:36.068" endtime="20221020 02:11:43.487"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${keysCount}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221020 02:11:43.487" endtime="20221020 02:11:43.487"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221020 02:11:36.066" endtime="20221020 02:11:43.488"/>
</test>
<test id="s1-s1-s4-t3" name="Read 10 keys' metadata from pre-generated keys" line="34">
<kw name="Set Variable" library="BuiltIn">
<var>${keysCount}</var>
<arg>10</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20221020 02:11:43.489" level="INFO">${keysCount} = 10</msg>
<status status="PASS" starttime="20221020 02:11:43.489" endtime="20221020 02:11:43.489"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockrw -n ${keysCount} -t 10 -m -r 100 -v voltest -b buckettest -p performanceTest</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221020 02:11:43.493" level="INFO">Running command 'ozone freon ockrw -n 10 -t 10 -m -r 100 -v voltest -b buckettest -p performanceTest 2&gt;&amp;1'.</msg>
<msg timestamp="20221020 02:11:49.026" level="INFO">${rc} = 0</msg>
<msg timestamp="20221020 02:11:49.026" level="INFO">${output} = 2022-10-20 02:11:45,488 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-20 02:11:45,634 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221020 02:11:43.491" endtime="20221020 02:11:49.026"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221020 02:11:49.027" level="INFO">2022-10-20 02:11:45,488 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-20 02:11:45,634 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-10-20 02:11:45,634 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-10-20 02:11:45,799 [main] INFO freon.BaseFreonGenerator: Executing test with prefix performanceTest and number-of-tests 10
2022-10-20 02:11:45,874 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2022-10-20 02:11:46,891 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2022-10-20 02:11:47,916 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2022-10-20 02:11:48,917 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (10 out of 10)
2022-10-20 02:11:48,968 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-read-write, count=10, min=111.918375, max=149.826727, mean=144.63244830000005, stddev=11.124323911289757, median=149.189934, p75=149.505831, p95=149.826727, p98=149.826727, p99=149.826727, p999=149.826727, mean_rate=8.759674885717779, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-10-20 02:11:48,968 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2022-10-20 02:11:48,969 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-10-20 02:11:48,969 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 10</msg>
<status status="PASS" starttime="20221020 02:11:49.027" endtime="20221020 02:11:49.027"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221020 02:11:49.028" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221020 02:11:49.028" endtime="20221020 02:11:49.028"/>
</kw>
<status status="PASS" starttime="20221020 02:11:43.490" endtime="20221020 02:11:49.028"/>
</kw>
<msg timestamp="20221020 02:11:49.028" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221020 02:11:43.490" endtime="20221020 02:11:49.029"/>
</kw>
<msg timestamp="20221020 02:11:49.029" level="INFO">${result} = 2022-10-20 02:11:45,488 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-20 02:11:45,634 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221020 02:11:43.490" endtime="20221020 02:11:49.029"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${keysCount}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221020 02:11:49.029" endtime="20221020 02:11:49.030"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221020 02:11:43.488" endtime="20221020 02:11:49.030"/>
</test>
<test id="s1-s1-s4-t4" name="Write 10 keys of size 1 byte each from key index 0 to 99" line="39">
<kw name="Set Variable" library="BuiltIn">
<var>${keysCount}</var>
<arg>10</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20221020 02:11:49.032" level="INFO">${keysCount} = 10</msg>
<status status="PASS" starttime="20221020 02:11:49.031" endtime="20221020 02:11:49.032"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${size}</var>
<arg>1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20221020 02:11:49.032" level="INFO">${size} = 1</msg>
<status status="PASS" starttime="20221020 02:11:49.032" endtime="20221020 02:11:49.032"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockrw -n ${keysCount} -t 10 --percentage-read 0 --size ${size} -r 100 -v voltest -b buckettest -p performanceTest2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221020 02:11:49.036" level="INFO">Running command 'ozone freon ockrw -n 10 -t 10 --percentage-read 0 --size 1 -r 100 -v voltest -b buckettest -p performanceTest2 2&gt;&amp;1'.</msg>
<msg timestamp="20221020 02:11:56.865" level="INFO">${rc} = 0</msg>
<msg timestamp="20221020 02:11:56.865" level="INFO">${output} = 2022-10-20 02:11:50,822 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-20 02:11:50,987 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221020 02:11:49.034" endtime="20221020 02:11:56.865"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221020 02:11:56.866" level="INFO">2022-10-20 02:11:50,822 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-20 02:11:50,987 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-10-20 02:11:50,987 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-10-20 02:11:51,220 [main] INFO freon.BaseFreonGenerator: Executing test with prefix performanceTest2 and number-of-tests 10
2022-10-20 02:11:51,280 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2022-10-20 02:11:52,283 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2022-10-20 02:11:53,285 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2022-10-20 02:11:53,804 [pool-2-thread-5] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-10-20 02:11:54,147 [pool-2-thread-2] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-10-20 02:11:54,285 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2022-10-20 02:11:55,287 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2022-10-20 02:11:56,287 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (10 out of 10)
2022-10-20 02:11:56,446 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-read-write, count=10, min=2453.425433, max=2575.509216, mean=2519.8752475, stddev=42.47943231400652, median=2527.956807, p75=2571.025872, p95=2575.509216, p98=2575.509216, p99=2575.509216, p999=2575.509216, mean_rate=2.9738659556364113, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-10-20 02:11:56,446 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 5
2022-10-20 02:11:56,446 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-10-20 02:11:56,446 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 10</msg>
<status status="PASS" starttime="20221020 02:11:56.866" endtime="20221020 02:11:56.866"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221020 02:11:56.867" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221020 02:11:56.866" endtime="20221020 02:11:56.867"/>
</kw>
<status status="PASS" starttime="20221020 02:11:49.033" endtime="20221020 02:11:56.867"/>
</kw>
<msg timestamp="20221020 02:11:56.867" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221020 02:11:49.033" endtime="20221020 02:11:56.868"/>
</kw>
<msg timestamp="20221020 02:11:56.868" level="INFO">${result} = 2022-10-20 02:11:50,822 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-20 02:11:50,987 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221020 02:11:49.032" endtime="20221020 02:11:56.868"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${keysCount}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221020 02:11:56.868" endtime="20221020 02:11:56.868"/>
</kw>
<kw name="Execute" library="os">
<var>${keyName}</var>
<arg>echo -n '1' | md5sum | head -c 7</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221020 02:11:56.872" level="INFO">Running command 'echo -n '1' | md5sum | head -c 7 2&gt;&amp;1'.</msg>
<msg timestamp="20221020 02:11:56.875" level="INFO">${rc} = 0</msg>
<msg timestamp="20221020 02:11:56.875" level="INFO">${output} = c4ca423</msg>
<status status="PASS" starttime="20221020 02:11:56.870" endtime="20221020 02:11:56.875"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221020 02:11:56.876" level="INFO">c4ca423</msg>
<status status="PASS" starttime="20221020 02:11:56.875" endtime="20221020 02:11:56.876"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221020 02:11:56.877" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221020 02:11:56.876" endtime="20221020 02:11:56.877"/>
</kw>
<status status="PASS" starttime="20221020 02:11:56.869" endtime="20221020 02:11:56.877"/>
</kw>
<msg timestamp="20221020 02:11:56.877" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221020 02:11:56.869" endtime="20221020 02:11:56.878"/>
</kw>
<msg timestamp="20221020 02:11:56.878" level="INFO">${keyName} = c4ca423</msg>
<status status="PASS" starttime="20221020 02:11:56.869" endtime="20221020 02:11:56.878"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /voltest/buckettest/performanceTest2/${keyName}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221020 02:11:56.881" level="INFO">Running command 'ozone sh key info /voltest/buckettest/performanceTest2/c4ca423 2&gt;&amp;1'.</msg>
<msg timestamp="20221020 02:12:00.642" level="INFO">${rc} = 255</msg>
<msg timestamp="20221020 02:12:00.642" level="INFO">${output} = KEY_NOT_FOUND Key:performanceTest2/c4ca423 not found</msg>
<status status="PASS" starttime="20221020 02:11:56.879" endtime="20221020 02:12:00.642"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221020 02:12:00.643" level="INFO">KEY_NOT_FOUND Key:performanceTest2/c4ca423 not found</msg>
<status status="PASS" starttime="20221020 02:12:00.642" endtime="20221020 02:12:00.643"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221020 02:12:00.644" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg timestamp="20221020 02:12:00.644" level="FAIL">255 != 0</msg>
<status status="FAIL" starttime="20221020 02:12:00.643" endtime="20221020 02:12:00.645"/>
</kw>
<status status="FAIL" starttime="20221020 02:11:56.879" endtime="20221020 02:12:00.646"/>
</kw>
<msg timestamp="20221020 02:12:00.646" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20221020 02:11:56.878" endtime="20221020 02:12:00.646"/>
</kw>
<status status="FAIL" starttime="20221020 02:11:56.878" endtime="20221020 02:12:00.646"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"dataSize\" : 1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221020 02:12:00.647" endtime="20221020 02:12:00.647"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20221020 02:11:49.031" endtime="20221020 02:12:00.648">255 != 0</status>
</test>
<test id="s1-s1-s4-t5" name="Run 90 % of read-key tasks and 10 % of write-key tasks for 10 keys from pre-generated keys" line="49">
<kw name="Set Variable" library="BuiltIn">
<var>${keysCount}</var>
<arg>10</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20221020 02:12:00.650" level="INFO">${keysCount} = 10</msg>
<status status="PASS" starttime="20221020 02:12:00.649" endtime="20221020 02:12:00.650"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockrw -n ${keysCount} -t 10 --percentage-read 90 -r 100 -v voltest -b buckettest -p performanceTest</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221020 02:12:00.654" level="INFO">Running command 'ozone freon ockrw -n 10 -t 10 --percentage-read 90 -r 100 -v voltest -b buckettest -p performanceTest 2&gt;&amp;1'.</msg>
<msg timestamp="20221020 02:12:08.022" level="INFO">${rc} = 0</msg>
<msg timestamp="20221020 02:12:08.022" level="INFO">${output} = 2022-10-20 02:12:02,443 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-20 02:12:02,591 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221020 02:12:00.651" endtime="20221020 02:12:08.022"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221020 02:12:08.023" level="INFO">2022-10-20 02:12:02,443 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-20 02:12:02,591 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-10-20 02:12:02,592 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-10-20 02:12:02,762 [main] INFO freon.BaseFreonGenerator: Executing test with prefix performanceTest and number-of-tests 10
2022-10-20 02:12:02,847 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2022-10-20 02:12:03,848 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2022-10-20 02:12:04,848 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2022-10-20 02:12:05,121 [pool-2-thread-7] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-10-20 02:12:05,557 [pool-2-thread-9] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-10-20 02:12:05,849 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2022-10-20 02:12:06,849 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (10 out of 10)
2022-10-20 02:12:07,667 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-read-write, count=10, min=1903.370354, max=2090.61576, mean=1929.0303766999998, stddev=53.93909179338506, median=1912.701236, p75=1913.286928, p95=2090.61576, p98=2090.61576, p99=2090.61576, p999=2090.61576, mean_rate=3.1991606692305523, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-10-20 02:12:07,667 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 5
2022-10-20 02:12:07,667 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-10-20 02:12:07,667 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 10</msg>
<status status="PASS" starttime="20221020 02:12:08.022" endtime="20221020 02:12:08.023"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221020 02:12:08.024" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221020 02:12:08.023" endtime="20221020 02:12:08.024"/>
</kw>
<status status="PASS" starttime="20221020 02:12:00.651" endtime="20221020 02:12:08.024"/>
</kw>
<msg timestamp="20221020 02:12:08.024" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221020 02:12:00.650" endtime="20221020 02:12:08.024"/>
</kw>
<msg timestamp="20221020 02:12:08.025" level="INFO">${result} = 2022-10-20 02:12:02,443 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-20 02:12:02,591 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221020 02:12:00.650" endtime="20221020 02:12:08.025"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${keysCount}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221020 02:12:08.025" endtime="20221020 02:12:08.025"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221020 02:12:00.649" endtime="20221020 02:12:08.026"/>
</test>
<doc>Test freon read/write key commands</doc>
<status status="FAIL" starttime="20221020 02:11:10.365" endtime="20221020 02:12:08.027"/>
</suite>
<suite id="s1-s1-s5" name="Remove" source="/opt/hadoop/smoketest/freon/remove.robot">
<test id="s1-s1-s5-t1" name="Ozone Client Key Remover" line="26">
<kw name="Freon OCKG" library="freon" type="SETUP">
<arg>prefix=${OCKR_PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221020 02:12:08.039" level="INFO">Running command 'ozone freon ockg --om-service-id=id1 -t 1 -n1 -p ockr  2&gt;&amp;1'.</msg>
<msg timestamp="20221020 02:12:14.895" level="INFO">${rc} = 0</msg>
<msg timestamp="20221020 02:12:14.895" level="INFO">${output} = 2022-10-20 02:12:09,993 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-20 02:12:10,174 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221020 02:12:08.037" endtime="20221020 02:12:14.895"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221020 02:12:14.896" level="INFO">2022-10-20 02:12:09,993 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-20 02:12:10,174 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-10-20 02:12:10,175 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-10-20 02:12:10,367 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockr and number-of-tests 1
2022-10-20 02:12:10,452 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-20 02:12:11,462 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-20 02:12:12,461 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-10-20 02:12:12,463 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-20 02:12:12,792 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-10-20 02:12:13,465 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-20 02:12:14,466 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-10-20 02:12:14,534 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=1733.979503, max=1733.979503, mean=1733.979503, stddev=0.0, median=1733.979503, p75=1733.979503, p95=1733.979503, p98=1733.979503, p99=1733.979503, p999=1733.979503, mean_rate=0.3825369295021587, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-10-20 02:12:14,535 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 4
2022-10-20 02:12:14,535 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-10-20 02:12:14,535 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20221020 02:12:14.895" endtime="20221020 02:12:14.896"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221020 02:12:14.897" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221020 02:12:14.897" endtime="20221020 02:12:14.897"/>
</kw>
<status status="PASS" starttime="20221020 02:12:08.036" endtime="20221020 02:12:14.897"/>
</kw>
<msg timestamp="20221020 02:12:14.897" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221020 02:12:08.036" endtime="20221020 02:12:14.898"/>
</kw>
<msg timestamp="20221020 02:12:14.898" level="INFO">${result} = 2022-10-20 02:12:09,993 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-20 02:12:10,174 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221020 02:12:08.036" endtime="20221020 02:12:14.898"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221020 02:12:14.898" endtime="20221020 02:12:14.899"/>
</kw>
<status status="PASS" starttime="20221020 02:12:08.034" endtime="20221020 02:12:14.899"/>
</kw>
<kw name="Freon OCKR" library="freon">
<arg>prefix=${OCKR_PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockr ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221020 02:12:14.904" level="INFO">Running command 'ozone freon ockr --om-service-id=id1 -t 1 -n1 -p ockr  2&gt;&amp;1'.</msg>
<msg timestamp="20221020 02:12:20.640" level="INFO">${rc} = 0</msg>
<msg timestamp="20221020 02:12:20.640" level="INFO">${output} = 2022-10-20 02:12:17,484 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-20 02:12:17,641 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221020 02:12:14.902" endtime="20221020 02:12:20.640"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221020 02:12:20.641" level="INFO">2022-10-20 02:12:17,484 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-20 02:12:17,641 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-10-20 02:12:17,641 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-10-20 02:12:17,823 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockr and number-of-tests 1
2022-10-20 02:12:17,900 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-20 02:12:18,908 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-20 02:12:19,909 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-10-20 02:12:20,595 [shutdown-hook-0] INFO metrics: type=TIMER, name=remove, count=1, min=36.92574, max=36.92574, mean=36.92574, stddev=0.0, median=36.92574, p75=36.92574, p95=36.92574, p98=36.92574, p99=36.92574, p999=36.92574, mean_rate=0.882014973791807, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-10-20 02:12:20,596 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2022-10-20 02:12:20,596 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-10-20 02:12:20,596 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20221020 02:12:20.641" endtime="20221020 02:12:20.641"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221020 02:12:20.642" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221020 02:12:20.642" endtime="20221020 02:12:20.642"/>
</kw>
<status status="PASS" starttime="20221020 02:12:14.902" endtime="20221020 02:12:20.642"/>
</kw>
<msg timestamp="20221020 02:12:20.642" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221020 02:12:14.902" endtime="20221020 02:12:20.643"/>
</kw>
<msg timestamp="20221020 02:12:20.643" level="INFO">${result} = 2022-10-20 02:12:17,484 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-20 02:12:17,641 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221020 02:12:14.901" endtime="20221020 02:12:20.643"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221020 02:12:20.644" endtime="20221020 02:12:20.644"/>
</kw>
<status status="PASS" starttime="20221020 02:12:14.899" endtime="20221020 02:12:20.644"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221020 02:12:08.034" endtime="20221020 02:12:20.644"/>
</test>
<test id="s1-s1-s5-t2" name="OM Bucket Remover" line="30">
<kw name="Freon OMBG" library="freon" type="SETUP">
<arg>prefix=${OMBR_PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ombg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221020 02:12:20.651" level="INFO">Running command 'ozone freon ombg --om-service-id=id1 -t 1 -n1 -p ombr  2&gt;&amp;1'.</msg>
<msg timestamp="20221020 02:12:25.407" level="INFO">${rc} = 0</msg>
<msg timestamp="20221020 02:12:25.407" level="INFO">${output} = 2022-10-20 02:12:22,491 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-20 02:12:22,601 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221020 02:12:20.649" endtime="20221020 02:12:25.407"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221020 02:12:25.408" level="INFO">2022-10-20 02:12:22,491 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-20 02:12:22,601 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-10-20 02:12:22,601 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-10-20 02:12:22,793 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ombr and number-of-tests 1
2022-10-20 02:12:22,870 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-20 02:12:23,881 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-20 02:12:24,881 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-10-20 02:12:25,357 [shutdown-hook-0] INFO metrics: type=TIMER, name=bucket-create, count=1, min=40.521997, max=40.521997, mean=40.521997, stddev=0.0, median=40.521997, p75=40.521997, p95=40.521997, p98=40.521997, p99=40.521997, p999=40.521997, mean_rate=0.9539168684667467, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-10-20 02:12:25,358 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2022-10-20 02:12:25,359 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-10-20 02:12:25,360 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20221020 02:12:25.407" endtime="20221020 02:12:25.408"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221020 02:12:25.409" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221020 02:12:25.408" endtime="20221020 02:12:25.409"/>
</kw>
<status status="PASS" starttime="20221020 02:12:20.648" endtime="20221020 02:12:25.409"/>
</kw>
<msg timestamp="20221020 02:12:25.409" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221020 02:12:20.648" endtime="20221020 02:12:25.410"/>
</kw>
<msg timestamp="20221020 02:12:25.410" level="INFO">${result} = 2022-10-20 02:12:22,491 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-20 02:12:22,601 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221020 02:12:20.647" endtime="20221020 02:12:25.410"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221020 02:12:25.410" endtime="20221020 02:12:25.410"/>
</kw>
<status status="PASS" starttime="20221020 02:12:20.646" endtime="20221020 02:12:25.411"/>
</kw>
<kw name="Freon OMBR" library="freon">
<arg>prefix=${OMBR_PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ombr ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221020 02:12:25.416" level="INFO">Running command 'ozone freon ombr --om-service-id=id1 -t 1 -n1 -p ombr  2&gt;&amp;1'.</msg>
<msg timestamp="20221020 02:12:29.799" level="INFO">${rc} = 0</msg>
<msg timestamp="20221020 02:12:29.799" level="INFO">${output} = 2022-10-20 02:12:27,331 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-20 02:12:27,436 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221020 02:12:25.414" endtime="20221020 02:12:29.800"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221020 02:12:29.801" level="INFO">2022-10-20 02:12:27,331 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-20 02:12:27,436 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-10-20 02:12:27,437 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-10-20 02:12:27,613 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ombr and number-of-tests 1
2022-10-20 02:12:27,692 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-20 02:12:28,699 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-20 02:12:29,700 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-10-20 02:12:29,756 [shutdown-hook-0] INFO metrics: type=TIMER, name=bucket-remove, count=1, min=571.5841, max=571.5841, mean=571.5841, stddev=0.0, median=571.5841, p75=571.5841, p95=571.5841, p98=571.5841, p99=571.5841, p999=571.5841, mean_rate=0.7600742379101593, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-10-20 02:12:29,757 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2022-10-20 02:12:29,758 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-10-20 02:12:29,758 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20221020 02:12:29.800" endtime="20221020 02:12:29.801"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221020 02:12:29.802" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221020 02:12:29.802" endtime="20221020 02:12:29.802"/>
</kw>
<status status="PASS" starttime="20221020 02:12:25.413" endtime="20221020 02:12:29.802"/>
</kw>
<msg timestamp="20221020 02:12:29.802" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221020 02:12:25.413" endtime="20221020 02:12:29.803"/>
</kw>
<msg timestamp="20221020 02:12:29.803" level="INFO">${result} = 2022-10-20 02:12:27,331 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-20 02:12:27,436 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221020 02:12:25.412" endtime="20221020 02:12:29.803"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221020 02:12:29.803" endtime="20221020 02:12:29.804"/>
</kw>
<status status="PASS" starttime="20221020 02:12:25.411" endtime="20221020 02:12:29.804"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221020 02:12:20.645" endtime="20221020 02:12:29.804"/>
</test>
<doc>Test freon data remove commands</doc>
<status status="PASS" starttime="20221020 02:12:08.028" endtime="20221020 02:12:29.805"/>
</suite>
<suite id="s1-s1-s6" name="Validate-Chunk" source="/opt/hadoop/smoketest/freon/validate-chunk.robot">
<test id="s1-s1-s6-t1" name="DN Chunk Validator" line="25">
<kw name="Freon DCV" library="freon">
<arg>prefix=dcg${PREFIX}</arg>
<arg>n=100</arg>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20221020 02:12:29.815" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221020 02:12:29.815" endtime="20221020 02:12:29.815"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon dcv -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<status status="NOT RUN" starttime="20221020 02:12:29.815" endtime="20221020 02:12:29.816"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221020 02:12:29.816" endtime="20221020 02:12:29.816"/>
</kw>
<status status="PASS" starttime="20221020 02:12:29.814" endtime="20221020 02:12:29.816"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221020 02:12:29.813" endtime="20221020 02:12:29.816"/>
</test>
<doc>Test freon chunk validation commands</doc>
<status status="PASS" starttime="20221020 02:12:29.806" endtime="20221020 02:12:29.816"/>
</suite>
<suite id="s1-s1-s7" name="Validate" source="/opt/hadoop/smoketest/freon/validate.robot">
<test id="s1-s1-s7-t1" name="Ozone Client Key Validator" line="25">
<kw name="Freon OCKV" library="freon">
<arg>prefix=ockg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221020 02:12:29.828" level="INFO">Running command 'ozone freon ockv --om-service-id=id1 -t 1 -n1 -p ockg  2&gt;&amp;1'.</msg>
<msg timestamp="20221020 02:12:36.395" level="INFO">${rc} = 0</msg>
<msg timestamp="20221020 02:12:36.395" level="INFO">${output} = 2022-10-20 02:12:31,747 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-20 02:12:31,901 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221020 02:12:29.826" endtime="20221020 02:12:36.396"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221020 02:12:36.397" level="INFO">2022-10-20 02:12:31,747 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-20 02:12:31,901 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-10-20 02:12:31,901 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-10-20 02:12:32,100 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockg and number-of-tests 1
2022-10-20 02:12:32,178 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-20 02:12:33,181 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-20 02:12:33,949 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-10-20 02:12:34,181 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-10-20 02:12:35,182 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-10-20 02:12:36,040 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=46.492892, max=46.492892, mean=46.492892, stddev=0.0, median=46.492892, p75=46.492892, p95=46.492892, p98=46.492892, p99=46.492892, p999=46.492892, mean_rate=0.9285631855170529, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-10-20 02:12:36,043 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 4
2022-10-20 02:12:36,043 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-10-20 02:12:36,043 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20221020 02:12:36.396" endtime="20221020 02:12:36.397"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221020 02:12:36.397" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221020 02:12:36.397" endtime="20221020 02:12:36.397"/>
</kw>
<status status="PASS" starttime="20221020 02:12:29.826" endtime="20221020 02:12:36.398"/>
</kw>
<msg timestamp="20221020 02:12:36.398" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221020 02:12:29.825" endtime="20221020 02:12:36.398"/>
</kw>
<msg timestamp="20221020 02:12:36.399" level="INFO">${result} = 2022-10-20 02:12:31,747 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-10-20 02:12:31,901 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221020 02:12:29.825" endtime="20221020 02:12:36.399"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221020 02:12:36.399" endtime="20221020 02:12:36.399"/>
</kw>
<status status="PASS" starttime="20221020 02:12:29.824" endtime="20221020 02:12:36.399"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221020 02:12:29.823" endtime="20221020 02:12:36.400"/>
</test>
<doc>Test freon data validation commands</doc>
<status status="PASS" starttime="20221020 02:12:29.817" endtime="20221020 02:12:36.404"/>
</suite>
<status status="FAIL" starttime="20221020 02:10:34.215" endtime="20221020 02:12:36.407"/>
</suite>
<suite id="s1-s2" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s2-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221020 02:10:27.054" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20221020 02:10:27.058" level="INFO">${rc} = 0</msg>
<msg timestamp="20221020 02:10:27.058" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20221020 02:10:27.048" endtime="20221020 02:10:27.058"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221020 02:10:27.059" level="INFO">scm</msg>
<status status="PASS" starttime="20221020 02:10:27.059" endtime="20221020 02:10:27.059"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221020 02:10:27.060" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221020 02:10:27.059" endtime="20221020 02:10:27.060"/>
</kw>
<status status="PASS" starttime="20221020 02:10:27.048" endtime="20221020 02:10:27.060"/>
</kw>
<msg timestamp="20221020 02:10:27.060" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221020 02:10:27.048" endtime="20221020 02:10:27.062"/>
</kw>
<msg timestamp="20221020 02:10:27.062" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20221020 02:10:27.047" endtime="20221020 02:10:27.062"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20221020 02:10:27.063" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20221020 02:10:27.062" endtime="20221020 02:10:27.063"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221020 02:10:27.067" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20221020 02:10:27.177" level="INFO">${rc} = 0</msg>
<msg timestamp="20221020 02:10:27.177" level="INFO">${output} = </msg>
<status status="PASS" starttime="20221020 02:10:27.064" endtime="20221020 02:10:27.177"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221020 02:10:27.178" level="INFO"/>
<status status="PASS" starttime="20221020 02:10:27.178" endtime="20221020 02:10:27.178"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221020 02:10:27.179" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221020 02:10:27.178" endtime="20221020 02:10:27.179"/>
</kw>
<status status="PASS" starttime="20221020 02:10:27.064" endtime="20221020 02:10:27.179"/>
</kw>
<msg timestamp="20221020 02:10:27.179" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221020 02:10:27.064" endtime="20221020 02:10:27.180"/>
</kw>
<status status="PASS" starttime="20221020 02:10:27.063" endtime="20221020 02:10:27.180"/>
</kw>
<status status="PASS" starttime="20221020 02:10:27.063" endtime="20221020 02:10:27.180"/>
</kw>
<status status="PASS" starttime="20221020 02:10:27.046" endtime="20221020 02:10:27.180"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20221020 02:10:27.046" endtime="20221020 02:10:27.181"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20221020 02:10:27.002" endtime="20221020 02:10:27.182"/>
</suite>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="122372"/>
</suite>
<statistics>
<total>
<stat pass="17" fail="1" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="17" fail="1" skip="0" id="s1" name="ozonesecure-ha">ozonesecure-ha</stat>
<stat pass="16" fail="1" skip="0" id="s1-s1" name="Freon">ozonesecure-ha.Freon</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s1" name="echoRPCLoad">ozonesecure-ha.Freon.echoRPCLoad</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s2" name="Generate-Chunk">ozonesecure-ha.Freon.Generate-Chunk</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s3" name="Generate">ozonesecure-ha.Freon.Generate</stat>
<stat pass="4" fail="1" skip="0" id="s1-s1-s4" name="Read-Write-Key">ozonesecure-ha.Freon.Read-Write-Key</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1-s5" name="Remove">ozonesecure-ha.Freon.Remove</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s6" name="Validate-Chunk">ozonesecure-ha.Freon.Validate-Chunk</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s7" name="Validate">ozonesecure-ha.Freon.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Kinit">ozonesecure-ha.Kinit</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
