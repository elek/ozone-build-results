<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 5.0.1 (Python 3.6.9 on linux)" generated="20220603 01:27:11.100" rpa="false" schemaversion="3">
<suite id="s1" name="ozone-om-prepare">
<suite id="s1-s1" name="Om-Cancel-Prepare" source="/opt/hadoop/smoketest/omha/om-cancel-prepare.robot">
<kw name="Generate volume and bucket names" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220603 01:16:34.854" level="INFO">${random} = 90353</msg>
<status status="PASS" starttime="20220603 01:16:34.854" endtime="20220603 01:16:34.855"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-cancel</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220603 01:16:34.857" level="INFO">${volume_name} = 90353-volume-for-cancel</msg>
<status status="PASS" starttime="20220603 01:16:34.855" endtime="20220603 01:16:34.858"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${bucket_name}</arg>
<arg>${random}-bucket-for-cancel</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220603 01:16:34.860" level="INFO">${bucket_name} = 90353-bucket-for-cancel</msg>
<status status="PASS" starttime="20220603 01:16:34.858" endtime="20220603 01:16:34.860"/>
</kw>
<status status="PASS" starttime="20220603 01:16:34.852" endtime="20220603 01:16:34.861"/>
</kw>
<test id="s1-s1-t1" name="Cancel Ozone Manager Prepare">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220603 01:16:34.863" endtime="20220603 01:16:34.864"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om cancelprepare -id=omservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220603 01:16:34.878" level="INFO">Running command 'ozone admin om cancelprepare -id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20220603 01:16:42.290" level="INFO">${rc} = 0</msg>
<msg timestamp="20220603 01:16:42.291" level="INFO">${output} = Cancel prepare succeeded, cluster can now accept write requests.</msg>
<status status="PASS" starttime="20220603 01:16:34.867" endtime="20220603 01:16:42.291"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220603 01:16:42.293" level="INFO">Cancel prepare succeeded, cluster can now accept write requests.</msg>
<status status="PASS" starttime="20220603 01:16:42.292" endtime="20220603 01:16:42.293"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220603 01:16:42.294" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220603 01:16:42.293" endtime="20220603 01:16:42.294"/>
</kw>
<status status="PASS" starttime="20220603 01:16:34.865" endtime="20220603 01:16:42.295"/>
</kw>
<msg timestamp="20220603 01:16:42.295" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220603 01:16:34.865" endtime="20220603 01:16:42.297"/>
</kw>
<msg timestamp="20220603 01:16:42.297" level="INFO">${result} = Cancel prepare succeeded, cluster can now accept write requests.</msg>
<status status="PASS" starttime="20220603 01:16:34.864" endtime="20220603 01:16:42.297"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>5sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Cancel prepare succeeded</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Cancel prepare succeeded</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220603 01:16:42.299" endtime="20220603 01:16:42.301"/>
</kw>
<status status="PASS" starttime="20220603 01:16:42.298" endtime="20220603 01:16:42.301"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220603 01:16:34.861" endtime="20220603 01:16:42.301"/>
</test>
<test id="s1-s1-t2" name="Test write operations">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220603 01:16:42.304" endtime="20220603 01:16:42.305"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create /${volume_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220603 01:16:42.313" level="INFO">Running command 'ozone sh volume create /90353-volume-for-cancel 2&gt;&amp;1'.</msg>
<msg timestamp="20220603 01:16:49.152" level="INFO">${rc} = 0</msg>
<msg timestamp="20220603 01:16:49.152" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220603 01:16:42.308" endtime="20220603 01:16:49.152"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220603 01:16:49.154" level="INFO"/>
<status status="PASS" starttime="20220603 01:16:49.153" endtime="20220603 01:16:49.154"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220603 01:16:49.157" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220603 01:16:49.155" endtime="20220603 01:16:49.158"/>
</kw>
<status status="PASS" starttime="20220603 01:16:42.307" endtime="20220603 01:16:49.159"/>
</kw>
<msg timestamp="20220603 01:16:49.159" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220603 01:16:42.307" endtime="20220603 01:16:49.160"/>
</kw>
<status status="PASS" starttime="20220603 01:16:42.306" endtime="20220603 01:16:49.160"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume_name}/${bucket_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220603 01:16:49.170" level="INFO">Running command 'ozone sh bucket create /90353-volume-for-cancel/90353-bucket-for-cancel 2&gt;&amp;1'.</msg>
<msg timestamp="20220603 01:16:55.807" level="INFO">${rc} = 0</msg>
<msg timestamp="20220603 01:16:55.807" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220603 01:16:49.165" endtime="20220603 01:16:55.808"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220603 01:16:55.810" level="INFO"/>
<status status="PASS" starttime="20220603 01:16:55.808" endtime="20220603 01:16:55.810"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220603 01:16:55.811" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220603 01:16:55.810" endtime="20220603 01:16:55.812"/>
</kw>
<status status="PASS" starttime="20220603 01:16:49.164" endtime="20220603 01:16:55.812"/>
</kw>
<msg timestamp="20220603 01:16:55.812" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220603 01:16:49.163" endtime="20220603 01:16:55.813"/>
</kw>
<status status="PASS" starttime="20220603 01:16:49.162" endtime="20220603 01:16:55.814"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put /${volume_name}/${bucket_name}/cancel-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220603 01:16:55.821" level="INFO">Running command 'ozone sh key put /90353-volume-for-cancel/90353-bucket-for-cancel/cancel-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220603 01:17:07.403" level="INFO">${rc} = 0</msg>
<msg timestamp="20220603 01:17:07.404" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220603 01:16:55.817" endtime="20220603 01:17:07.404"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220603 01:17:07.406" level="INFO"/>
<status status="PASS" starttime="20220603 01:17:07.404" endtime="20220603 01:17:07.406"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220603 01:17:07.408" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220603 01:17:07.407" endtime="20220603 01:17:07.408"/>
</kw>
<status status="PASS" starttime="20220603 01:16:55.816" endtime="20220603 01:17:07.410"/>
</kw>
<msg timestamp="20220603 01:17:07.410" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220603 01:16:55.815" endtime="20220603 01:17:07.411"/>
</kw>
<msg timestamp="20220603 01:17:07.411" level="INFO">${result} = </msg>
<status status="PASS" starttime="20220603 01:16:55.814" endtime="20220603 01:17:07.411"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /${volume_name}/${bucket_name}/cancel-key</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220603 01:17:07.422" level="INFO">Running command 'ozone sh key info /90353-volume-for-cancel/90353-bucket-for-cancel/cancel-key 2&gt;&amp;1'.</msg>
<msg timestamp="20220603 01:17:15.379" level="INFO">${rc} = 0</msg>
<msg timestamp="20220603 01:17:15.380" level="INFO">${output} = {
  "volumeName" : "90353-volume-for-cancel",
  "bucketName" : "90353-bucket-for-cancel",
  "name" : "cancel-key",
  "dataSize" : 17526,
  "creationTime" : "2022-06-03T01:17:02.315Z",
  "modificationT...</msg>
<status status="PASS" starttime="20220603 01:17:07.415" endtime="20220603 01:17:15.380"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220603 01:17:15.382" level="INFO">{
  "volumeName" : "90353-volume-for-cancel",
  "bucketName" : "90353-bucket-for-cancel",
  "name" : "cancel-key",
  "dataSize" : 17526,
  "creationTime" : "2022-06-03T01:17:02.315Z",
  "modificationTime" : "2022-06-03T01:17:06.891Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "ozoneKeyLocations" : [ {
    "containerID" : 4,
    "localID" : 109611004723200103,
    "length" : 17526,
    "offset" : 0,
    "keyOffset" : 0
  } ],
  "metadata" : { }
}</msg>
<status status="PASS" starttime="20220603 01:17:15.381" endtime="20220603 01:17:15.382"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220603 01:17:15.384" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220603 01:17:15.383" endtime="20220603 01:17:15.385"/>
</kw>
<status status="PASS" starttime="20220603 01:17:07.414" endtime="20220603 01:17:15.385"/>
</kw>
<msg timestamp="20220603 01:17:15.385" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220603 01:17:07.413" endtime="20220603 01:17:15.386"/>
</kw>
<msg timestamp="20220603 01:17:15.387" level="INFO">${result} = {
  "volumeName" : "90353-volume-for-cancel",
  "bucketName" : "90353-bucket-for-cancel",
  "name" : "cancel-key",
  "dataSize" : 17526,
  "creationTime" : "2022-06-03T01:17:02.315Z",
  "modificationT...</msg>
<status status="PASS" starttime="20220603 01:17:07.412" endtime="20220603 01:17:15.387"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"name\" : \"cancel-key\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220603 01:17:15.387" endtime="20220603 01:17:15.388"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220603 01:16:42.302" endtime="20220603 01:17:15.389"/>
</test>
<doc>Smoke test for ozone manager cancel prepare</doc>
<status status="PASS" starttime="20220603 01:16:34.752" endtime="20220603 01:17:15.394"/>
</suite>
<suite id="s1-s2" name="Om-Prepare" source="/opt/hadoop/smoketest/omha/om-prepare.robot">
<kw name="Create Specific OM data for prepare" type="SETUP">
<kw name="Freon OCKG" library="freon">
<arg>prefix=om-prepare</arg>
<arg>n=100</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220603 01:17:25.654" level="INFO">Running command 'ozone freon ockg --om-service-id=omservice -t 1 -n100 -p om-prepare  2&gt;&amp;1'.</msg>
<msg timestamp="20220603 01:18:04.885" level="INFO">${rc} = 0</msg>
<msg timestamp="20220603 01:18:04.885" level="INFO">${output} = 2022-06-03 01:17:29,182 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-06-03 01:17:29,574 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220603 01:17:25.647" endtime="20220603 01:18:04.885"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220603 01:18:04.887" level="INFO">2022-06-03 01:17:29,182 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-06-03 01:17:29,574 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-06-03 01:17:29,574 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-06-03 01:17:29,977 [main] INFO freon.BaseFreonGenerator: Executing test with prefix om-prepare
2022-06-03 01:17:30,227 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-06-03 01:17:31,239 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-06-03 01:17:32,240 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-06-03 01:17:33,241 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-06-03 01:17:33,610 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-06-03 01:17:34,245 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-06-03 01:17:34,321 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-06-03 01:17:35,246 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-06-03 01:17:36,248 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-06-03 01:17:37,249 [Thread-3] INFO freon.ProgressBar: Progress: 3.00 % (3 out of 100)
2022-06-03 01:17:38,254 [Thread-3] INFO freon.ProgressBar: Progress: 7.00 % (7 out of 100)
2022-06-03 01:17:39,257 [Thread-3] INFO freon.ProgressBar: Progress: 11.00 % (11 out of 100)
2022-06-03 01:17:40,259 [Thread-3] INFO freon.ProgressBar: Progress: 15.00 % (15 out of 100)
2022-06-03 01:17:41,260 [Thread-3] INFO freon.ProgressBar: Progress: 18.00 % (18 out of 100)
2022-06-03 01:17:42,265 [Thread-3] INFO freon.ProgressBar: Progress: 22.00 % (22 out of 100)
2022-06-03 01:17:43,266 [Thread-3] INFO freon.ProgressBar: Progress: 26.00 % (26 out of 100)
2022-06-03 01:17:44,267 [Thread-3] INFO freon.ProgressBar: Progress: 30.00 % (30 out of 100)
2022-06-03 01:17:45,273 [Thread-3] INFO freon.ProgressBar: Progress: 34.00 % (34 out of 100)
2022-06-03 01:17:46,274 [Thread-3] INFO freon.ProgressBar: Progress: 38.00 % (38 out of 100)
2022-06-03 01:17:47,275 [Thread-3] INFO freon.ProgressBar: Progress: 42.00 % (42 out of 100)
2022-06-03 01:17:48,282 [Thread-3] INFO freon.ProgressBar: Progress: 46.00 % (46 out of 100)
2022-06-03 01:17:49,292 [Thread-3] INFO freon.ProgressBar: Progress: 51.00 % (51 out of 100)
2022-06-03 01:17:50,293 [Thread-3] INFO freon.ProgressBar: Progress: 55.00 % (55 out of 100)
2022-06-03 01:17:51,294 [Thread-3] INFO freon.ProgressBar: Progress: 55.00 % (55 out of 100)
2022-06-03 01:17:52,295 [Thread-3] INFO freon.ProgressBar: Progress: 55.00 % (55 out of 100)
2022-06-03 01:17:53,296 [Thread-3] INFO freon.ProgressBar: Progress: 57.00 % (57 out of 100)
2022-06-03 01:17:54,321 [Thread-3] INFO freon.ProgressBar: Progress: 62.00 % (62 out of 100)
2022-06-03 01:17:55,325 [Thread-3] INFO freon.ProgressBar: Progress: 66.00 % (66 out of 100)
2022-06-03 01:17:56,326 [Thread-3] INFO freon.ProgressBar: Progress: 70.00 % (70 out of 100)
2022-06-03 01:17:57,329 [Thread-3] INFO freon.ProgressBar: Progress: 75.00 % (75 out of 100)
2022-06-03 01:17:58,331 [Thread-3] INFO freon.ProgressBar: Progress: 80.00 % (80 out of 100)
2022-06-03 01:17:59,332 [Thread-3] INFO freon.ProgressBar: Progress: 83.00 % (83 out of 100)
2022-06-03 01:18:00,333 [Thread-3] INFO freon.ProgressBar: Progress: 87.00 % (87 out of 100)
2022-06-03 01:18:01,335 [Thread-3] INFO freon.ProgressBar: Progress: 90.00 % (90 out of 100)
2022-06-03 01:18:02,336 [Thread-3] INFO freon.ProgressBar: Progress: 94.00 % (94 out of 100)
2022-06-03 01:18:03,338 [Thread-3] INFO freon.ProgressBar: Progress: 99.00 % (99 out of 100)
2022-06-03 01:18:04,339 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2022-06-03 01:18:04,460 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=100, min=147.940581, max=4641.993759, mean=306.3878485392778, stddev=466.47994107567393, median=243.670704, p75=272.065975, p95=385.04369, p98=446.572027, p99=2703.660986, p999=4641.993759, mean_rate=3.0616554522288224, m1=1.4907203243402356, m5=0.6558605526207055, m15=0.48766577487813006, rate_unit=events/second, duration_unit=milliseconds
2022-06-03 01:18:04,462 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 34
2022-06-03 01:18:04,463 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-06-03 01:18:04,463 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20220603 01:18:04.886" endtime="20220603 01:18:04.887"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220603 01:18:04.888" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220603 01:18:04.888" endtime="20220603 01:18:04.889"/>
</kw>
<status status="PASS" starttime="20220603 01:17:25.646" endtime="20220603 01:18:04.890"/>
</kw>
<msg timestamp="20220603 01:18:04.890" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220603 01:17:25.646" endtime="20220603 01:18:04.892"/>
</kw>
<msg timestamp="20220603 01:18:04.893" level="INFO">${result} = 2022-06-03 01:17:29,182 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-06-03 01:17:29,574 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220603 01:17:25.644" endtime="20220603 01:18:04.893"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220603 01:18:04.894" endtime="20220603 01:18:04.894"/>
</kw>
<status status="PASS" starttime="20220603 01:17:25.643" endtime="20220603 01:18:04.895"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220603 01:18:04.896" level="INFO">${random} = 90883</msg>
<status status="PASS" starttime="20220603 01:18:04.895" endtime="20220603 01:18:04.896"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220603 01:18:04.899" level="INFO">${volume_name} = 90883-volume-for-prepare</msg>
<status status="PASS" starttime="20220603 01:18:04.897" endtime="20220603 01:18:04.900"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${bucket_name}</arg>
<arg>${random}-bucket-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220603 01:18:04.903" level="INFO">${bucket_name} = 90883-bucket-for-prepare</msg>
<status status="PASS" starttime="20220603 01:18:04.900" endtime="20220603 01:18:04.903"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create /${volume_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220603 01:18:04.914" level="INFO">Running command 'ozone sh volume create /90883-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20220603 01:18:11.591" level="INFO">${rc} = 0</msg>
<msg timestamp="20220603 01:18:11.591" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220603 01:18:04.907" endtime="20220603 01:18:11.591"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220603 01:18:11.593" level="INFO"/>
<status status="PASS" starttime="20220603 01:18:11.592" endtime="20220603 01:18:11.593"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220603 01:18:11.594" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220603 01:18:11.593" endtime="20220603 01:18:11.594"/>
</kw>
<status status="PASS" starttime="20220603 01:18:04.906" endtime="20220603 01:18:11.594"/>
</kw>
<msg timestamp="20220603 01:18:11.594" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220603 01:18:04.906" endtime="20220603 01:18:11.595"/>
</kw>
<status status="PASS" starttime="20220603 01:18:04.904" endtime="20220603 01:18:11.596"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume_name}/${bucket_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220603 01:18:11.603" level="INFO">Running command 'ozone sh bucket create /90883-volume-for-prepare/90883-bucket-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20220603 01:18:18.000" level="INFO">${rc} = 0</msg>
<msg timestamp="20220603 01:18:18.000" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220603 01:18:11.598" endtime="20220603 01:18:18.000"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220603 01:18:18.003" level="INFO"/>
<status status="PASS" starttime="20220603 01:18:18.002" endtime="20220603 01:18:18.003"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220603 01:18:18.004" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220603 01:18:18.003" endtime="20220603 01:18:18.004"/>
</kw>
<status status="PASS" starttime="20220603 01:18:11.598" endtime="20220603 01:18:18.004"/>
</kw>
<msg timestamp="20220603 01:18:18.005" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220603 01:18:11.597" endtime="20220603 01:18:18.006"/>
</kw>
<status status="PASS" starttime="20220603 01:18:11.596" endtime="20220603 01:18:18.006"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220603 01:18:18.016" level="INFO">Running command 'ozone sh key put /90883-volume-for-prepare/90883-bucket-for-prepare/prepare-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220603 01:18:30.909" level="INFO">${rc} = 0</msg>
<msg timestamp="20220603 01:18:30.910" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220603 01:18:18.009" endtime="20220603 01:18:30.910"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220603 01:18:30.914" level="INFO"/>
<status status="PASS" starttime="20220603 01:18:30.910" endtime="20220603 01:18:30.914"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220603 01:18:30.915" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220603 01:18:30.914" endtime="20220603 01:18:30.915"/>
</kw>
<status status="PASS" starttime="20220603 01:18:18.008" endtime="20220603 01:18:30.917"/>
</kw>
<msg timestamp="20220603 01:18:30.917" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220603 01:18:18.008" endtime="20220603 01:18:30.918"/>
</kw>
<status status="PASS" starttime="20220603 01:18:18.007" endtime="20220603 01:18:30.919"/>
</kw>
<status status="PASS" starttime="20220603 01:17:25.642" endtime="20220603 01:18:30.919"/>
</kw>
<test id="s1-s2-t1" name="Prepare Ozone Manager">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220603 01:18:30.922" endtime="20220603 01:18:30.923"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om prepare -id=omservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220603 01:18:30.933" level="INFO">Running command 'ozone admin om prepare -id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20220603 01:18:43.220" level="INFO">${rc} = 0</msg>
<msg timestamp="20220603 01:18:43.220" level="INFO">${output} = Ozone Manager Prepare Request successfully returned with Transaction Id : [835].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], C...</msg>
<status status="PASS" starttime="20220603 01:18:30.927" endtime="20220603 01:18:43.220"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220603 01:18:43.223" level="INFO">Ozone Manager Prepare Request successfully returned with Transaction Id : [835].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [835]
OM : [om3], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [835]
OM : [om2], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [835]

OM Preparation successful! 
All OMs are prepared
No new write requests will be allowed until preparation is cancelled or upgrade/downgrade is done.</msg>
<status status="PASS" starttime="20220603 01:18:43.221" endtime="20220603 01:18:43.223"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220603 01:18:43.224" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220603 01:18:43.223" endtime="20220603 01:18:43.225"/>
</kw>
<status status="PASS" starttime="20220603 01:18:30.925" endtime="20220603 01:18:43.225"/>
</kw>
<msg timestamp="20220603 01:18:43.225" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220603 01:18:30.925" endtime="20220603 01:18:43.226"/>
</kw>
<msg timestamp="20220603 01:18:43.227" level="INFO">${result} = Ozone Manager Prepare Request successfully returned with Transaction Id : [835].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], C...</msg>
<status status="PASS" starttime="20220603 01:18:30.924" endtime="20220603 01:18:43.227"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220603 01:18:43.229" endtime="20220603 01:18:43.230"/>
</kw>
<status status="PASS" starttime="20220603 01:18:43.228" endtime="20220603 01:18:43.230"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220603 01:18:30.919" endtime="20220603 01:18:43.231"/>
</test>
<test id="s1-s2-t2" name="Checks if the expected data is present in OM">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220603 01:18:43.234" endtime="20220603 01:18:43.235"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220603 01:18:43.247" level="INFO">Running command 'ozone sh key info /90883-volume-for-prepare/90883-bucket-for-prepare/prepare-key 2&gt;&amp;1'.</msg>
<msg timestamp="20220603 01:18:50.851" level="INFO">${rc} = 0</msg>
<msg timestamp="20220603 01:18:50.852" level="INFO">${output} = {
  "volumeName" : "90883-volume-for-prepare",
  "bucketName" : "90883-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17526,
  "creationTime" : "2022-06-03T01:18:25.798Z",
  "modificati...</msg>
<status status="PASS" starttime="20220603 01:18:43.241" endtime="20220603 01:18:50.852"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220603 01:18:50.857" level="INFO">{
  "volumeName" : "90883-volume-for-prepare",
  "bucketName" : "90883-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17526,
  "creationTime" : "2022-06-03T01:18:25.798Z",
  "modificationTime" : "2022-06-03T01:18:30.435Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "ozoneKeyLocations" : [ {
    "containerID" : 3,
    "localID" : 109611004723200204,
    "length" : 17526,
    "offset" : 0,
    "keyOffset" : 0
  } ],
  "metadata" : { }
}</msg>
<status status="PASS" starttime="20220603 01:18:50.855" endtime="20220603 01:18:50.857"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220603 01:18:50.858" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220603 01:18:50.857" endtime="20220603 01:18:50.859"/>
</kw>
<status status="PASS" starttime="20220603 01:18:43.240" endtime="20220603 01:18:50.860"/>
</kw>
<msg timestamp="20220603 01:18:50.860" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220603 01:18:43.240" endtime="20220603 01:18:50.861"/>
</kw>
<msg timestamp="20220603 01:18:50.862" level="INFO">${result} = {
  "volumeName" : "90883-volume-for-prepare",
  "bucketName" : "90883-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17526,
  "creationTime" : "2022-06-03T01:18:25.798Z",
  "modificati...</msg>
<status status="PASS" starttime="20220603 01:18:43.238" endtime="20220603 01:18:50.862"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"name\" : \"prepare-key\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220603 01:18:50.863" endtime="20220603 01:18:50.864"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220603 01:18:43.232" endtime="20220603 01:18:50.864"/>
</test>
<test id="s1-s2-t3" name="Test write operation fails">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220603 01:18:50.869" endtime="20220603 01:18:50.870"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key2 /opt/hadoop/NOTICE.txt</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220603 01:18:50.878" level="INFO">Running command 'ozone sh key put /90883-volume-for-prepare/90883-bucket-for-prepare/prepare-key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220603 01:18:57.498" level="INFO">${rc} = 255</msg>
<msg timestamp="20220603 01:18:57.498" level="INFO">${output} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20220603 01:18:50.872" endtime="20220603 01:18:57.498"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220603 01:18:57.501" level="INFO">NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20220603 01:18:57.499" endtime="20220603 01:18:57.501"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220603 01:18:57.503" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220603 01:18:57.502" endtime="20220603 01:18:57.503"/>
</kw>
<msg timestamp="20220603 01:18:57.504" level="INFO">${result} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20220603 01:18:50.871" endtime="20220603 01:18:57.504"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM is in prepare mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220603 01:18:57.505" endtime="20220603 01:18:57.506"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key2</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220603 01:18:57.513" level="INFO">Running command 'ozone sh key info /90883-volume-for-prepare/90883-bucket-for-prepare/prepare-key2 2&gt;&amp;1'.</msg>
<msg timestamp="20220603 01:19:04.332" level="INFO">${rc} = 255</msg>
<msg timestamp="20220603 01:19:04.332" level="INFO">${output} = KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<status status="PASS" starttime="20220603 01:18:57.508" endtime="20220603 01:19:04.333"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220603 01:19:04.335" level="INFO">KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<status status="PASS" starttime="20220603 01:19:04.334" endtime="20220603 01:19:04.336"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220603 01:19:04.338" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220603 01:19:04.336" endtime="20220603 01:19:04.338"/>
</kw>
<status status="PASS" starttime="20220603 01:18:57.506" endtime="20220603 01:19:04.338"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220603 01:18:50.867" endtime="20220603 01:19:04.339"/>
</test>
<doc>Smoke test to test preparing OMs in an OM HA cluster.</doc>
<status status="PASS" starttime="20220603 01:17:25.536" endtime="20220603 01:19:04.342"/>
</suite>
<suite id="s1-s3" name="Om-Prepared" source="/opt/hadoop/smoketest/omha/om-prepared.robot">
<test id="s1-s3-t1" name="Test create volume fails">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220603 01:19:14.524" endtime="20220603 01:19:14.534"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220603 01:19:14.536" level="INFO">${random} = 07872</msg>
<status status="PASS" starttime="20220603 01:19:14.534" endtime="20220603 01:19:14.536"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220603 01:19:14.539" level="INFO">${volume_name} = 07872-volume-for-prepare</msg>
<status status="PASS" starttime="20220603 01:19:14.536" endtime="20220603 01:19:14.539"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${volume_name}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220603 01:19:14.552" level="INFO">Running command 'ozone sh volume create /07872-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20220603 01:19:21.114" level="INFO">${rc} = 255</msg>
<msg timestamp="20220603 01:19:21.115" level="INFO">${output} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20220603 01:19:14.541" endtime="20220603 01:19:21.115"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220603 01:19:21.118" level="INFO">NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20220603 01:19:21.116" endtime="20220603 01:19:21.118"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220603 01:19:21.120" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220603 01:19:21.119" endtime="20220603 01:19:21.120"/>
</kw>
<msg timestamp="20220603 01:19:21.121" level="INFO">${result} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20220603 01:19:14.539" endtime="20220603 01:19:21.121"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM is in prepare mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220603 01:19:21.121" endtime="20220603 01:19:21.122"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume info /${volume_name}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220603 01:19:21.130" level="INFO">Running command 'ozone sh volume info /07872-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20220603 01:19:27.276" level="INFO">${rc} = 255</msg>
<msg timestamp="20220603 01:19:27.276" level="INFO">${output} = VOLUME_NOT_FOUND Volume 07872-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20220603 01:19:21.124" endtime="20220603 01:19:27.276"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220603 01:19:27.281" level="INFO">VOLUME_NOT_FOUND Volume 07872-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20220603 01:19:27.277" endtime="20220603 01:19:27.281"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220603 01:19:27.283" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220603 01:19:27.282" endtime="20220603 01:19:27.283"/>
</kw>
<msg timestamp="20220603 01:19:27.284" level="INFO">${result} = VOLUME_NOT_FOUND Volume 07872-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20220603 01:19:21.122" endtime="20220603 01:19:27.284"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220603 01:19:27.285" endtime="20220603 01:19:27.286"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220603 01:19:14.521" endtime="20220603 01:19:27.286"/>
</test>
<test id="s1-s3-t2" name="Test list volumes succeeds">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220603 01:19:27.291" endtime="20220603 01:19:27.292"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220603 01:19:27.301" level="INFO">Running command 'ozone sh volume list 2&gt;&amp;1'.</msg>
<msg timestamp="20220603 01:19:34.639" level="INFO">${rc} = 0</msg>
<msg timestamp="20220603 01:19:34.639" level="INFO">${output} = [ {
  "metadata" : { },
  "name" : "s3v",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 0,
  "creationTime" : "2022-06-03T01:13:24.1...</msg>
<status status="PASS" starttime="20220603 01:19:27.296" endtime="20220603 01:19:34.639"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220603 01:19:34.643" level="INFO">[ {
  "metadata" : { },
  "name" : "s3v",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 0,
  "creationTime" : "2022-06-03T01:13:24.183Z",
  "modificationTime" : "2022-06-03T01:13:24.183Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "90883-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2022-06-03T01:18:11.526Z",
  "modificationTime" : "2022-06-03T01:18:11.526Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "vol1",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2022-06-03T01:14:31.061Z",
  "modificationTime" : "2022-06-03T01:14:31.061Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "92621-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2022-06-03T01:15:28.535Z",
  "modificationTime" : "2022-06-03T01:15:28.535Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "90353-volume-for-cancel",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2022-06-03T01:16:49.034Z",
  "modificationTime" : "2022-06-03T01:16:49.034Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
} ]</msg>
<status status="PASS" starttime="20220603 01:19:34.640" endtime="20220603 01:19:34.643"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220603 01:19:34.645" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220603 01:19:34.644" endtime="20220603 01:19:34.645"/>
</kw>
<status status="PASS" starttime="20220603 01:19:27.295" endtime="20220603 01:19:34.646"/>
</kw>
<msg timestamp="20220603 01:19:34.646" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220603 01:19:27.294" endtime="20220603 01:19:34.649"/>
</kw>
<msg timestamp="20220603 01:19:34.650" level="INFO">${result} = [ {
  "metadata" : { },
  "name" : "s3v",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 0,
  "creationTime" : "2022-06-03T01:13:24.1...</msg>
<status status="PASS" starttime="20220603 01:19:27.292" endtime="20220603 01:19:34.650"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220603 01:19:27.288" endtime="20220603 01:19:34.651"/>
</test>
<doc>Smoke test to test that OMs are prepared in an OM HA cluster.</doc>
<status status="PASS" starttime="20220603 01:19:14.416" endtime="20220603 01:19:34.654"/>
</suite>
<suite id="s1-s4" name="Om-Prepared" source="/opt/hadoop/smoketest/omha/om-prepared.robot">
<test id="s1-s4-t1" name="Test create volume fails">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220603 01:22:33.119" endtime="20220603 01:22:33.122"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220603 01:22:33.123" level="INFO">${random} = 60748</msg>
<status status="PASS" starttime="20220603 01:22:33.122" endtime="20220603 01:22:33.124"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220603 01:22:33.126" level="INFO">${volume_name} = 60748-volume-for-prepare</msg>
<status status="PASS" starttime="20220603 01:22:33.124" endtime="20220603 01:22:33.126"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${volume_name}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220603 01:22:33.136" level="INFO">Running command 'ozone sh volume create /60748-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20220603 01:22:41.015" level="INFO">${rc} = 255</msg>
<msg timestamp="20220603 01:22:41.015" level="INFO">${output} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20220603 01:22:33.128" endtime="20220603 01:22:41.015"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220603 01:22:41.019" level="INFO">NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20220603 01:22:41.017" endtime="20220603 01:22:41.019"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220603 01:22:41.022" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220603 01:22:41.020" endtime="20220603 01:22:41.022"/>
</kw>
<msg timestamp="20220603 01:22:41.023" level="INFO">${result} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20220603 01:22:33.127" endtime="20220603 01:22:41.023"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM is in prepare mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220603 01:22:41.024" endtime="20220603 01:22:41.025"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume info /${volume_name}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220603 01:22:41.034" level="INFO">Running command 'ozone sh volume info /60748-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20220603 01:22:48.201" level="INFO">${rc} = 255</msg>
<msg timestamp="20220603 01:22:48.202" level="INFO">${output} = VOLUME_NOT_FOUND Volume 60748-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20220603 01:22:41.027" endtime="20220603 01:22:48.202"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220603 01:22:48.204" level="INFO">VOLUME_NOT_FOUND Volume 60748-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20220603 01:22:48.203" endtime="20220603 01:22:48.204"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220603 01:22:48.207" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220603 01:22:48.205" endtime="20220603 01:22:48.207"/>
</kw>
<msg timestamp="20220603 01:22:48.208" level="INFO">${result} = VOLUME_NOT_FOUND Volume 60748-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20220603 01:22:41.025" endtime="20220603 01:22:48.208"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220603 01:22:48.209" endtime="20220603 01:22:48.210"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220603 01:22:33.117" endtime="20220603 01:22:48.210"/>
</test>
<test id="s1-s4-t2" name="Test list volumes succeeds">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220603 01:22:48.216" endtime="20220603 01:22:48.218"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220603 01:22:48.230" level="INFO">Running command 'ozone sh volume list 2&gt;&amp;1'.</msg>
<msg timestamp="20220603 01:22:57.214" level="INFO">${rc} = 0</msg>
<msg timestamp="20220603 01:22:57.214" level="INFO">${output} = [ {
  "metadata" : { },
  "name" : "s3v",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 0,
  "creationTime" : "2022-06-03T01:13:25.4...</msg>
<status status="PASS" starttime="20220603 01:22:48.222" endtime="20220603 01:22:57.214"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220603 01:22:57.216" level="INFO">[ {
  "metadata" : { },
  "name" : "s3v",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 0,
  "creationTime" : "2022-06-03T01:13:25.420Z",
  "modificationTime" : "2022-06-03T01:13:25.420Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "90883-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2022-06-03T01:18:11.526Z",
  "modificationTime" : "2022-06-03T01:18:11.526Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "vol1",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2022-06-03T01:14:31.061Z",
  "modificationTime" : "2022-06-03T01:14:31.061Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "92621-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2022-06-03T01:15:28.535Z",
  "modificationTime" : "2022-06-03T01:15:28.535Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "90353-volume-for-cancel",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2022-06-03T01:16:49.034Z",
  "modificationTime" : "2022-06-03T01:16:49.034Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
} ]</msg>
<status status="PASS" starttime="20220603 01:22:57.215" endtime="20220603 01:22:57.217"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220603 01:22:57.218" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220603 01:22:57.217" endtime="20220603 01:22:57.218"/>
</kw>
<status status="PASS" starttime="20220603 01:22:48.220" endtime="20220603 01:22:57.219"/>
</kw>
<msg timestamp="20220603 01:22:57.219" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220603 01:22:48.220" endtime="20220603 01:22:57.222"/>
</kw>
<msg timestamp="20220603 01:22:57.222" level="INFO">${result} = [ {
  "metadata" : { },
  "name" : "s3v",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 0,
  "creationTime" : "2022-06-03T01:13:25.4...</msg>
<status status="PASS" starttime="20220603 01:22:48.219" endtime="20220603 01:22:57.222"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220603 01:22:48.213" endtime="20220603 01:22:57.223"/>
</test>
<doc>Smoke test to test that OMs are prepared in an OM HA cluster.</doc>
<status status="PASS" starttime="20220603 01:22:33.026" endtime="20220603 01:22:57.225"/>
</suite>
<suite id="s1-s5" name="Loaddata" source="/opt/hadoop/smoketest/topology/loaddata.robot">
<test id="s1-s5-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create topvol1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220603 01:25:50.636" level="INFO">Running command 'ozone sh volume create topvol1 2&gt;&amp;1'.</msg>
<msg timestamp="20220603 01:25:57.967" level="INFO">${rc} = 0</msg>
<msg timestamp="20220603 01:25:57.968" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220603 01:25:50.628" endtime="20220603 01:25:57.968"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220603 01:25:57.975" level="INFO"/>
<status status="PASS" starttime="20220603 01:25:57.974" endtime="20220603 01:25:57.975"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220603 01:25:57.977" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220603 01:25:57.976" endtime="20220603 01:25:57.977"/>
</kw>
<status status="PASS" starttime="20220603 01:25:50.627" endtime="20220603 01:25:57.978"/>
</kw>
<msg timestamp="20220603 01:25:57.978" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220603 01:25:50.626" endtime="20220603 01:25:57.987"/>
</kw>
<msg timestamp="20220603 01:25:57.988" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220603 01:25:50.625" endtime="20220603 01:25:57.988"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220603 01:25:57.989" endtime="20220603 01:25:57.990"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /topvol1/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220603 01:25:58.035" level="INFO">Running command 'ozone sh bucket create /topvol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20220603 01:26:07.789" level="INFO">${rc} = 0</msg>
<msg timestamp="20220603 01:26:07.790" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220603 01:25:58.022" endtime="20220603 01:26:07.790"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220603 01:26:07.794" level="INFO"/>
<status status="PASS" starttime="20220603 01:26:07.790" endtime="20220603 01:26:07.794"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220603 01:26:07.796" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220603 01:26:07.795" endtime="20220603 01:26:07.796"/>
</kw>
<status status="PASS" starttime="20220603 01:25:58.016" endtime="20220603 01:26:07.797"/>
</kw>
<msg timestamp="20220603 01:26:07.798" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220603 01:25:58.015" endtime="20220603 01:26:07.799"/>
</kw>
<msg timestamp="20220603 01:26:07.800" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220603 01:25:57.991" endtime="20220603 01:26:07.800"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220603 01:26:07.801" endtime="20220603 01:26:07.804"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220603 01:26:07.818" level="INFO">Running command 'ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220603 01:26:24.749" level="INFO">${rc} = 0</msg>
<msg timestamp="20220603 01:26:24.750" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220603 01:26:07.809" endtime="20220603 01:26:24.750"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220603 01:26:24.752" level="INFO"/>
<status status="PASS" starttime="20220603 01:26:24.751" endtime="20220603 01:26:24.752"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220603 01:26:24.754" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220603 01:26:24.753" endtime="20220603 01:26:24.754"/>
</kw>
<status status="PASS" starttime="20220603 01:26:07.807" endtime="20220603 01:26:24.755"/>
</kw>
<msg timestamp="20220603 01:26:24.755" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220603 01:26:07.806" endtime="20220603 01:26:24.756"/>
</kw>
<msg timestamp="20220603 01:26:24.756" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220603 01:26:07.805" endtime="20220603 01:26:24.756"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220603 01:26:24.757" endtime="20220603 01:26:24.758"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220603 01:25:50.623" endtime="20220603 01:26:24.758"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20220603 01:25:50.524" endtime="20220603 01:26:24.762"/>
</suite>
<suite id="s1-s6" name="Readdata" source="/opt/hadoop/smoketest/topology/readdata.robot">
<test id="s1-s6-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220603 01:26:35.948" level="INFO">${random} = 91656</msg>
<status status="PASS" starttime="20220603 01:26:35.939" endtime="20220603 01:26:35.948"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220603 01:26:35.962" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-91656 2&gt;&amp;1'.</msg>
<msg timestamp="20220603 01:26:47.976" level="INFO">${rc} = 0</msg>
<msg timestamp="20220603 01:26:47.976" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220603 01:26:35.952" endtime="20220603 01:26:47.976"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220603 01:26:47.979" level="INFO"/>
<status status="PASS" starttime="20220603 01:26:47.978" endtime="20220603 01:26:47.980"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220603 01:26:47.982" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220603 01:26:47.980" endtime="20220603 01:26:47.982"/>
</kw>
<status status="PASS" starttime="20220603 01:26:35.952" endtime="20220603 01:26:47.983"/>
</kw>
<msg timestamp="20220603 01:26:47.983" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220603 01:26:35.951" endtime="20220603 01:26:47.986"/>
</kw>
<msg timestamp="20220603 01:26:47.986" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220603 01:26:35.949" endtime="20220603 01:26:47.987"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220603 01:26:47.987" endtime="20220603 01:26:47.988"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220603 01:26:35.937" endtime="20220603 01:26:47.988"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20220603 01:26:35.849" endtime="20220603 01:26:47.992"/>
</suite>
<suite id="s1-s7" name="Om-Prepare" source="/opt/hadoop/smoketest/omha/om-prepare.robot">
<kw name="Create Specific OM data for prepare" type="SETUP">
<kw name="Freon OCKG" library="freon">
<arg>prefix=om-prepare</arg>
<arg>n=100</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220603 01:14:24.455" level="INFO">Running command 'ozone freon ockg --om-service-id=omservice -t 1 -n100 -p om-prepare  2&gt;&amp;1'.</msg>
<msg timestamp="20220603 01:15:21.817" level="INFO">${rc} = 0</msg>
<msg timestamp="20220603 01:15:21.817" level="INFO">${output} = 2022-06-03 01:14:28,221 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-06-03 01:14:28,513 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220603 01:14:24.444" endtime="20220603 01:15:21.817"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220603 01:15:21.820" level="INFO">2022-06-03 01:14:28,221 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-06-03 01:14:28,513 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-06-03 01:14:28,513 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-06-03 01:14:28,930 [main] INFO freon.BaseFreonGenerator: Executing test with prefix om-prepare
2022-06-03 01:14:29,091 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-06-03 01:14:30,095 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-06-03 01:14:31,027 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2022-06-03 01:14:31,097 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-06-03 01:14:31,620 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with hadoop as owner and Versioning false and Storage Type set to DISK and Encryption set to false 
2022-06-03 01:14:32,098 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-06-03 01:14:33,099 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-06-03 01:14:34,101 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-06-03 01:14:35,102 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-06-03 01:14:36,103 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-06-03 01:14:36,103 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-06-03 01:14:36,970 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-06-03 01:14:37,104 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-06-03 01:14:38,107 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-06-03 01:14:39,108 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-06-03 01:14:40,111 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-06-03 01:14:41,113 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-06-03 01:14:42,114 [Thread-3] INFO freon.ProgressBar: Progress: 1.00 % (1 out of 100)
2022-06-03 01:14:43,115 [Thread-3] INFO freon.ProgressBar: Progress: 2.00 % (2 out of 100)
2022-06-03 01:14:44,116 [Thread-3] INFO freon.ProgressBar: Progress: 4.00 % (4 out of 100)
2022-06-03 01:14:45,117 [Thread-3] INFO freon.ProgressBar: Progress: 5.00 % (5 out of 100)
2022-06-03 01:14:46,118 [Thread-3] INFO freon.ProgressBar: Progress: 7.00 % (7 out of 100)
2022-06-03 01:14:47,124 [Thread-3] INFO freon.ProgressBar: Progress: 9.00 % (9 out of 100)
2022-06-03 01:14:48,129 [Thread-3] INFO freon.ProgressBar: Progress: 12.00 % (12 out of 100)
2022-06-03 01:14:49,130 [Thread-3] INFO freon.ProgressBar: Progress: 14.00 % (14 out of 100)
2022-06-03 01:14:50,130 [Thread-3] INFO freon.ProgressBar: Progress: 17.00 % (17 out of 100)
2022-06-03 01:14:51,133 [Thread-3] INFO freon.ProgressBar: Progress: 19.00 % (19 out of 100)
2022-06-03 01:14:52,134 [Thread-3] INFO freon.ProgressBar: Progress: 21.00 % (21 out of 100)
2022-06-03 01:14:53,137 [Thread-3] INFO freon.ProgressBar: Progress: 24.00 % (24 out of 100)
2022-06-03 01:14:54,138 [Thread-3] INFO freon.ProgressBar: Progress: 27.00 % (27 out of 100)
2022-06-03 01:14:55,138 [Thread-3] INFO freon.ProgressBar: Progress: 30.00 % (30 out of 100)
2022-06-03 01:14:56,139 [Thread-3] INFO freon.ProgressBar: Progress: 32.00 % (32 out of 100)
2022-06-03 01:14:57,141 [Thread-3] INFO freon.ProgressBar: Progress: 35.00 % (35 out of 100)
2022-06-03 01:14:58,147 [Thread-3] INFO freon.ProgressBar: Progress: 37.00 % (37 out of 100)
2022-06-03 01:14:59,151 [Thread-3] INFO freon.ProgressBar: Progress: 40.00 % (40 out of 100)
2022-06-03 01:15:00,152 [Thread-3] INFO freon.ProgressBar: Progress: 43.00 % (43 out of 100)
2022-06-03 01:15:01,153 [Thread-3] INFO freon.ProgressBar: Progress: 46.00 % (46 out of 100)
2022-06-03 01:15:02,157 [Thread-3] INFO freon.ProgressBar: Progress: 49.00 % (49 out of 100)
2022-06-03 01:15:03,158 [Thread-3] INFO freon.ProgressBar: Progress: 53.00 % (53 out of 100)
2022-06-03 01:15:04,168 [Thread-3] INFO freon.ProgressBar: Progress: 56.00 % (56 out of 100)
2022-06-03 01:15:05,173 [Thread-3] INFO freon.ProgressBar: Progress: 59.00 % (59 out of 100)
2022-06-03 01:15:06,175 [Thread-3] INFO freon.ProgressBar: Progress: 61.00 % (61 out of 100)
2022-06-03 01:15:07,176 [Thread-3] INFO freon.ProgressBar: Progress: 64.00 % (64 out of 100)
2022-06-03 01:15:08,177 [Thread-3] INFO freon.ProgressBar: Progress: 68.00 % (68 out of 100)
2022-06-03 01:15:09,178 [Thread-3] INFO freon.ProgressBar: Progress: 70.00 % (70 out of 100)
2022-06-03 01:15:10,185 [Thread-3] INFO freon.ProgressBar: Progress: 73.00 % (73 out of 100)
2022-06-03 01:15:11,187 [Thread-3] INFO freon.ProgressBar: Progress: 76.00 % (76 out of 100)
2022-06-03 01:15:12,189 [Thread-3] INFO freon.ProgressBar: Progress: 79.00 % (79 out of 100)
2022-06-03 01:15:13,193 [Thread-3] INFO freon.ProgressBar: Progress: 82.00 % (82 out of 100)
2022-06-03 01:15:14,205 [Thread-3] INFO freon.ProgressBar: Progress: 86.00 % (86 out of 100)
2022-06-03 01:15:15,206 [Thread-3] INFO freon.ProgressBar: Progress: 89.00 % (89 out of 100)
2022-06-03 01:15:16,207 [Thread-3] INFO freon.ProgressBar: Progress: 92.00 % (92 out of 100)
2022-06-03 01:15:17,208 [Thread-3] INFO freon.ProgressBar: Progress: 95.00 % (95 out of 100)
2022-06-03 01:15:18,213 [Thread-3] INFO freon.ProgressBar: Progress: 98.00 % (98 out of 100)
2022-06-03 01:15:19,214 [Thread-3] INFO freon.ProgressBar: Progress: 99.00 % (99 out of 100)
2022-06-03 01:15:20,215 [Thread-3] INFO freon.ProgressBar: Progress: 99.00 % (99 out of 100)
2022-06-03 01:15:21,215 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2022-06-03 01:15:21,387 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=100, min=206.937167, max=9749.542149, mean=462.41973268206647, stddev=844.1072813713579, median=347.308706, p75=391.402239, p95=650.226516, p98=2690.03488, p99=2690.03488, p999=9749.542149, mean_rate=2.0230159904479534, m1=1.2135585436596037, m5=0.29710298091256165, m15=0.10259682524189949, rate_unit=events/second, duration_unit=milliseconds
2022-06-03 01:15:21,389 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 52
2022-06-03 01:15:21,390 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-06-03 01:15:21,391 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20220603 01:15:21.819" endtime="20220603 01:15:21.820"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220603 01:15:21.822" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220603 01:15:21.821" endtime="20220603 01:15:21.822"/>
</kw>
<status status="PASS" starttime="20220603 01:14:24.443" endtime="20220603 01:15:21.823"/>
</kw>
<msg timestamp="20220603 01:15:21.823" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220603 01:14:24.442" endtime="20220603 01:15:21.826"/>
</kw>
<msg timestamp="20220603 01:15:21.827" level="INFO">${result} = 2022-06-03 01:14:28,221 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-06-03 01:14:28,513 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220603 01:14:24.440" endtime="20220603 01:15:21.827"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220603 01:15:21.827" endtime="20220603 01:15:21.828"/>
</kw>
<status status="PASS" starttime="20220603 01:14:24.438" endtime="20220603 01:15:21.828"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220603 01:15:21.830" level="INFO">${random} = 92621</msg>
<status status="PASS" starttime="20220603 01:15:21.829" endtime="20220603 01:15:21.830"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220603 01:15:21.832" level="INFO">${volume_name} = 92621-volume-for-prepare</msg>
<status status="PASS" starttime="20220603 01:15:21.830" endtime="20220603 01:15:21.832"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${bucket_name}</arg>
<arg>${random}-bucket-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220603 01:15:21.835" level="INFO">${bucket_name} = 92621-bucket-for-prepare</msg>
<status status="PASS" starttime="20220603 01:15:21.833" endtime="20220603 01:15:21.836"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create /${volume_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220603 01:15:21.846" level="INFO">Running command 'ozone sh volume create /92621-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20220603 01:15:28.630" level="INFO">${rc} = 0</msg>
<msg timestamp="20220603 01:15:28.630" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220603 01:15:21.841" endtime="20220603 01:15:28.631"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220603 01:15:28.633" level="INFO"/>
<status status="PASS" starttime="20220603 01:15:28.631" endtime="20220603 01:15:28.633"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220603 01:15:28.635" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220603 01:15:28.634" endtime="20220603 01:15:28.635"/>
</kw>
<status status="PASS" starttime="20220603 01:15:21.840" endtime="20220603 01:15:28.636"/>
</kw>
<msg timestamp="20220603 01:15:28.636" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220603 01:15:21.839" endtime="20220603 01:15:28.637"/>
</kw>
<status status="PASS" starttime="20220603 01:15:21.836" endtime="20220603 01:15:28.637"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume_name}/${bucket_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220603 01:15:28.646" level="INFO">Running command 'ozone sh bucket create /92621-volume-for-prepare/92621-bucket-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20220603 01:15:36.384" level="INFO">${rc} = 0</msg>
<msg timestamp="20220603 01:15:36.384" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220603 01:15:28.640" endtime="20220603 01:15:36.384"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220603 01:15:36.386" level="INFO"/>
<status status="PASS" starttime="20220603 01:15:36.385" endtime="20220603 01:15:36.386"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220603 01:15:36.387" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220603 01:15:36.387" endtime="20220603 01:15:36.388"/>
</kw>
<status status="PASS" starttime="20220603 01:15:28.639" endtime="20220603 01:15:36.388"/>
</kw>
<msg timestamp="20220603 01:15:36.388" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220603 01:15:28.639" endtime="20220603 01:15:36.390"/>
</kw>
<status status="PASS" starttime="20220603 01:15:28.637" endtime="20220603 01:15:36.390"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220603 01:15:36.398" level="INFO">Running command 'ozone sh key put /92621-volume-for-prepare/92621-bucket-for-prepare/prepare-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220603 01:15:48.546" level="INFO">${rc} = 0</msg>
<msg timestamp="20220603 01:15:48.546" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220603 01:15:36.394" endtime="20220603 01:15:48.546"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220603 01:15:48.548" level="INFO"/>
<status status="PASS" starttime="20220603 01:15:48.547" endtime="20220603 01:15:48.548"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220603 01:15:48.550" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220603 01:15:48.548" endtime="20220603 01:15:48.550"/>
</kw>
<status status="PASS" starttime="20220603 01:15:36.392" endtime="20220603 01:15:48.551"/>
</kw>
<msg timestamp="20220603 01:15:48.551" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220603 01:15:36.392" endtime="20220603 01:15:48.552"/>
</kw>
<status status="PASS" starttime="20220603 01:15:36.390" endtime="20220603 01:15:48.553"/>
</kw>
<status status="PASS" starttime="20220603 01:14:24.437" endtime="20220603 01:15:48.553"/>
</kw>
<test id="s1-s7-t1" name="Prepare Ozone Manager">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220603 01:15:48.556" endtime="20220603 01:15:48.557"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om prepare -id=omservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220603 01:15:48.567" level="INFO">Running command 'ozone admin om prepare -id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20220603 01:16:02.158" level="INFO">${rc} = 0</msg>
<msg timestamp="20220603 01:16:02.159" level="INFO">${output} = Ozone Manager Prepare Request successfully returned with Transaction Id : [413].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], C...</msg>
<status status="PASS" starttime="20220603 01:15:48.561" endtime="20220603 01:16:02.159"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220603 01:16:02.161" level="INFO">Ozone Manager Prepare Request successfully returned with Transaction Id : [413].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [413]
OM : [om3], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [413]
OM : [om2], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [413]

OM Preparation successful! 
All OMs are prepared
No new write requests will be allowed until preparation is cancelled or upgrade/downgrade is done.</msg>
<status status="PASS" starttime="20220603 01:16:02.160" endtime="20220603 01:16:02.162"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220603 01:16:02.164" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220603 01:16:02.162" endtime="20220603 01:16:02.164"/>
</kw>
<status status="PASS" starttime="20220603 01:15:48.559" endtime="20220603 01:16:02.165"/>
</kw>
<msg timestamp="20220603 01:16:02.165" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220603 01:15:48.559" endtime="20220603 01:16:02.166"/>
</kw>
<msg timestamp="20220603 01:16:02.167" level="INFO">${result} = Ozone Manager Prepare Request successfully returned with Transaction Id : [413].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], C...</msg>
<status status="PASS" starttime="20220603 01:15:48.558" endtime="20220603 01:16:02.167"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220603 01:16:02.168" endtime="20220603 01:16:02.170"/>
</kw>
<status status="PASS" starttime="20220603 01:16:02.167" endtime="20220603 01:16:02.170"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220603 01:15:48.553" endtime="20220603 01:16:02.170"/>
</test>
<test id="s1-s7-t2" name="Checks if the expected data is present in OM">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220603 01:16:02.178" endtime="20220603 01:16:02.179"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220603 01:16:02.188" level="INFO">Running command 'ozone sh key info /92621-volume-for-prepare/92621-bucket-for-prepare/prepare-key 2&gt;&amp;1'.</msg>
<msg timestamp="20220603 01:16:10.290" level="INFO">${rc} = 0</msg>
<msg timestamp="20220603 01:16:10.290" level="INFO">${output} = {
  "volumeName" : "92621-volume-for-prepare",
  "bucketName" : "92621-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17526,
  "creationTime" : "2022-06-03T01:15:43.218Z",
  "modificati...</msg>
<status status="PASS" starttime="20220603 01:16:02.182" endtime="20220603 01:16:10.290"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220603 01:16:10.293" level="INFO">{
  "volumeName" : "92621-volume-for-prepare",
  "bucketName" : "92621-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17526,
  "creationTime" : "2022-06-03T01:15:43.218Z",
  "modificationTime" : "2022-06-03T01:15:48.055Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "ozoneKeyLocations" : [ {
    "containerID" : 4,
    "localID" : 109611004723200101,
    "length" : 17526,
    "offset" : 0,
    "keyOffset" : 0
  } ],
  "metadata" : { }
}</msg>
<status status="PASS" starttime="20220603 01:16:10.291" endtime="20220603 01:16:10.294"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220603 01:16:10.295" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220603 01:16:10.294" endtime="20220603 01:16:10.295"/>
</kw>
<status status="PASS" starttime="20220603 01:16:02.181" endtime="20220603 01:16:10.296"/>
</kw>
<msg timestamp="20220603 01:16:10.296" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220603 01:16:02.181" endtime="20220603 01:16:10.297"/>
</kw>
<msg timestamp="20220603 01:16:10.298" level="INFO">${result} = {
  "volumeName" : "92621-volume-for-prepare",
  "bucketName" : "92621-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17526,
  "creationTime" : "2022-06-03T01:15:43.218Z",
  "modificati...</msg>
<status status="PASS" starttime="20220603 01:16:02.179" endtime="20220603 01:16:10.299"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"name\" : \"prepare-key\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220603 01:16:10.300" endtime="20220603 01:16:10.302"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220603 01:16:02.174" endtime="20220603 01:16:10.302"/>
</test>
<test id="s1-s7-t3" name="Test write operation fails">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220603 01:16:10.313" endtime="20220603 01:16:10.315"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key2 /opt/hadoop/NOTICE.txt</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220603 01:16:10.327" level="INFO">Running command 'ozone sh key put /92621-volume-for-prepare/92621-bucket-for-prepare/prepare-key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220603 01:16:17.480" level="INFO">${rc} = 255</msg>
<msg timestamp="20220603 01:16:17.480" level="INFO">${output} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20220603 01:16:10.318" endtime="20220603 01:16:17.481"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220603 01:16:17.483" level="INFO">NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20220603 01:16:17.481" endtime="20220603 01:16:17.483"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220603 01:16:17.484" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220603 01:16:17.483" endtime="20220603 01:16:17.485"/>
</kw>
<msg timestamp="20220603 01:16:17.486" level="INFO">${result} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20220603 01:16:10.315" endtime="20220603 01:16:17.486"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM is in prepare mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220603 01:16:17.486" endtime="20220603 01:16:17.487"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key2</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220603 01:16:17.493" level="INFO">Running command 'ozone sh key info /92621-volume-for-prepare/92621-bucket-for-prepare/prepare-key2 2&gt;&amp;1'.</msg>
<msg timestamp="20220603 01:16:24.552" level="INFO">${rc} = 255</msg>
<msg timestamp="20220603 01:16:24.552" level="INFO">${output} = KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<status status="PASS" starttime="20220603 01:16:17.489" endtime="20220603 01:16:24.552"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220603 01:16:24.554" level="INFO">KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<status status="PASS" starttime="20220603 01:16:24.553" endtime="20220603 01:16:24.555"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220603 01:16:24.556" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220603 01:16:24.555" endtime="20220603 01:16:24.556"/>
</kw>
<status status="PASS" starttime="20220603 01:16:17.487" endtime="20220603 01:16:24.557"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220603 01:16:10.308" endtime="20220603 01:16:24.557"/>
</test>
<doc>Smoke test to test preparing OMs in an OM HA cluster.</doc>
<status status="PASS" starttime="20220603 01:14:24.326" endtime="20220603 01:16:24.562"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="350502"/>
</suite>
<statistics>
<total>
<stat pass="14" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="14" fail="0" skip="0" id="s1" name="ozone-om-prepare">ozone-om-prepare</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1" name="Om-Cancel-Prepare">ozone-om-prepare.Om-Cancel-Prepare</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="Om-Prepare">ozone-om-prepare.Om-Prepare</stat>
<stat pass="2" fail="0" skip="0" id="s1-s3" name="Om-Prepared">ozone-om-prepare.Om-Prepared</stat>
<stat pass="2" fail="0" skip="0" id="s1-s4" name="Om-Prepared">ozone-om-prepare.Om-Prepared</stat>
<stat pass="1" fail="0" skip="0" id="s1-s5" name="Loaddata">ozone-om-prepare.Loaddata</stat>
<stat pass="1" fail="0" skip="0" id="s1-s6" name="Readdata">ozone-om-prepare.Readdata</stat>
<stat pass="3" fail="0" skip="0" id="s1-s7" name="Om-Prepare">ozone-om-prepare.Om-Prepare</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
