<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 5.0.1 (Python 3.6.9 on linux)" generated="20220602 01:36:05.072" rpa="false" schemaversion="3">
<suite id="s1" name="ozonesecure">
<suite id="s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic">
<suite id="s1-s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:08:37.378" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:08:37.383" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:08:37.383" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220602 01:08:37.375" endtime="20220602 01:08:37.383"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:08:37.384" level="INFO">scm</msg>
<status status="PASS" starttime="20220602 01:08:37.383" endtime="20220602 01:08:37.384"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:08:37.385" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:08:37.384" endtime="20220602 01:08:37.385"/>
</kw>
<status status="PASS" starttime="20220602 01:08:37.374" endtime="20220602 01:08:37.385"/>
</kw>
<msg timestamp="20220602 01:08:37.385" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:08:37.374" endtime="20220602 01:08:37.386"/>
</kw>
<msg timestamp="20220602 01:08:37.387" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20220602 01:08:37.373" endtime="20220602 01:08:37.387"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:08:37.390" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:08:37.397" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:08:37.397" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:08:37.388" endtime="20220602 01:08:37.397"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:08:37.399" level="INFO"/>
<status status="PASS" starttime="20220602 01:08:37.398" endtime="20220602 01:08:37.399"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:08:37.399" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:08:37.399" endtime="20220602 01:08:37.399"/>
</kw>
<status status="PASS" starttime="20220602 01:08:37.388" endtime="20220602 01:08:37.400"/>
</kw>
<msg timestamp="20220602 01:08:37.400" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:08:37.388" endtime="20220602 01:08:37.400"/>
</kw>
<status status="PASS" starttime="20220602 01:08:37.387" endtime="20220602 01:08:37.401"/>
</kw>
<status status="PASS" starttime="20220602 01:08:37.387" endtime="20220602 01:08:37.401"/>
</kw>
<status status="PASS" starttime="20220602 01:08:37.373" endtime="20220602 01:08:37.401"/>
</kw>
<status status="PASS" starttime="20220602 01:08:37.372" endtime="20220602 01:08:37.401"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -s -I http://${SCM}:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:08:37.404" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:08:37.526" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:08:37.526" level="INFO">${output} = HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
...</msg>
<status status="PASS" starttime="20220602 01:08:37.402" endtime="20220602 01:08:37.526"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:08:37.527" level="INFO">HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 484

HTTP/1.1 200 OK
Date: Thu, 02 Jun 2022 01:08:37 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCqkRzbHOxXtuJbYEaVdSHwJuOC7kQfBNiCtCSerszplsLS1kuQk+2FrX8Y1a3QvXUbT/zbIs3Jvp1JQpEglYkpt9L
Set-Cookie: hadoop.auth="u=root&amp;p=HTTP/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1654168117515&amp;s=h9sM0/+QItIiXrAbLoU+1v8VfCkNnNVL9fU5WDNg/vY="; Path=/; HttpOnly
Last-Modified: Thu, 02 Jun 2022 00:52:06 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20220602 01:08:37.526" endtime="20220602 01:08:37.527"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:08:37.528" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:08:37.527" endtime="20220602 01:08:37.528"/>
</kw>
<status status="PASS" starttime="20220602 01:08:37.402" endtime="20220602 01:08:37.528"/>
</kw>
<msg timestamp="20220602 01:08:37.528" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:08:37.402" endtime="20220602 01:08:37.529"/>
</kw>
<msg timestamp="20220602 01:08:37.529" level="INFO">${result} = HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
...</msg>
<status status="PASS" starttime="20220602 01:08:37.401" endtime="20220602 01:08:37.529"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220602 01:08:37.529" endtime="20220602 01:08:37.530"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220602 01:08:37.372" endtime="20220602 01:08:37.530"/>
</test>
<test id="s1-s1-s1-t2" name="Basic Freon smoketest">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:08:37.535" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:08:37.538" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:08:37.538" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220602 01:08:37.533" endtime="20220602 01:08:37.538"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:08:37.539" level="INFO">scm</msg>
<status status="PASS" starttime="20220602 01:08:37.539" endtime="20220602 01:08:37.540"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:08:37.540" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:08:37.540" endtime="20220602 01:08:37.540"/>
</kw>
<status status="PASS" starttime="20220602 01:08:37.533" endtime="20220602 01:08:37.540"/>
</kw>
<msg timestamp="20220602 01:08:37.540" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:08:37.533" endtime="20220602 01:08:37.541"/>
</kw>
<msg timestamp="20220602 01:08:37.541" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220602 01:08:37.532" endtime="20220602 01:08:37.541"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220602 01:08:37.543" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220602 01:08:37.541" endtime="20220602 01:08:37.543"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:08:37.547" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:08:37.554" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:08:37.554" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:08:37.545" endtime="20220602 01:08:37.554"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:08:37.555" level="INFO"/>
<status status="PASS" starttime="20220602 01:08:37.554" endtime="20220602 01:08:37.555"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:08:37.556" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:08:37.555" endtime="20220602 01:08:37.556"/>
</kw>
<status status="PASS" starttime="20220602 01:08:37.544" endtime="20220602 01:08:37.556"/>
</kw>
<msg timestamp="20220602 01:08:37.556" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:08:37.544" endtime="20220602 01:08:37.557"/>
</kw>
<status status="PASS" starttime="20220602 01:08:37.544" endtime="20220602 01:08:37.557"/>
</kw>
<status status="PASS" starttime="20220602 01:08:37.543" endtime="20220602 01:08:37.557"/>
</kw>
<status status="PASS" starttime="20220602 01:08:37.532" endtime="20220602 01:08:37.557"/>
</kw>
<status status="PASS" starttime="20220602 01:08:37.531" endtime="20220602 01:08:37.557"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>10</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220602 01:08:37.558" level="INFO">${random} = 1oMiZHJJI7</msg>
<status status="PASS" starttime="20220602 01:08:37.557" endtime="20220602 01:08:37.558"/>
</kw>
<kw name="Freon OCKG" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:08:37.563" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p 1oMiZHJJI7  2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:08:47.954" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:08:47.954" level="INFO">${output} = 2022-06-02 01:08:39,561 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-06-02 01:08:39,672 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220602 01:08:37.561" endtime="20220602 01:08:47.954"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:08:47.955" level="INFO">2022-06-02 01:08:39,561 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-06-02 01:08:39,672 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-06-02 01:08:39,672 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-06-02 01:08:39,868 [main] INFO freon.BaseFreonGenerator: Executing test with prefix 1oMiZHJJI7
2022-06-02 01:08:39,952 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-06-02 01:08:40,956 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-06-02 01:08:41,956 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-06-02 01:08:42,294 [main] INFO rpc.RpcClient: Creating Volume: vol1, with testuser as owner and space quota set to -1 bytes, counts quota set to -1
2022-06-02 01:08:42,452 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with testuser as owner and Versioning false and Storage Type set to DISK and Encryption set to false 
2022-06-02 01:08:42,956 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-06-02 01:08:43,449 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-06-02 01:08:43,819 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-06-02 01:08:43,957 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-06-02 01:08:44,960 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-06-02 01:08:45,961 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-06-02 01:08:46,961 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-06-02 01:08:47,582 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=4161.626948, max=4161.626948, mean=4161.626948, stddev=0.0, median=4161.626948, p75=4161.626948, p95=4161.626948, p98=4161.626948, p99=4161.626948, p999=4161.626948, mean_rate=0.19713940017786905, m1=0.2, m5=0.2, m15=0.2, rate_unit=events/second, duration_unit=milliseconds
2022-06-02 01:08:47,582 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 8
2022-06-02 01:08:47,583 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-06-02 01:08:47,583 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20220602 01:08:47.954" endtime="20220602 01:08:47.955"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:08:47.956" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:08:47.955" endtime="20220602 01:08:47.956"/>
</kw>
<status status="PASS" starttime="20220602 01:08:37.560" endtime="20220602 01:08:47.956"/>
</kw>
<msg timestamp="20220602 01:08:47.956" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:08:37.560" endtime="20220602 01:08:47.957"/>
</kw>
<msg timestamp="20220602 01:08:47.957" level="INFO">${result} = 2022-06-02 01:08:39,561 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-06-02 01:08:39,672 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220602 01:08:37.560" endtime="20220602 01:08:47.957"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220602 01:08:47.958" endtime="20220602 01:08:47.958"/>
</kw>
<status status="PASS" starttime="20220602 01:08:37.558" endtime="20220602 01:08:47.958"/>
</kw>
<kw name="Freon OCKV" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:08:47.963" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p 1oMiZHJJI7  2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:08:55.090" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:08:55.090" level="INFO">${output} = 2022-06-02 01:08:50,032 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-06-02 01:08:50,234 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220602 01:08:47.961" endtime="20220602 01:08:55.090"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:08:55.091" level="INFO">2022-06-02 01:08:50,032 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-06-02 01:08:50,234 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-06-02 01:08:50,234 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-06-02 01:08:50,413 [main] INFO freon.BaseFreonGenerator: Executing test with prefix 1oMiZHJJI7
2022-06-02 01:08:50,477 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-06-02 01:08:51,482 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-06-02 01:08:52,482 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-06-02 01:08:52,516 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-06-02 01:08:53,482 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-06-02 01:08:54,483 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-06-02 01:08:54,741 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=100.286622, max=100.286622, mean=100.286622, stddev=0.0, median=100.286622, p75=100.286622, p95=100.286622, p98=100.286622, p99=100.286622, p999=100.286622, mean_rate=0.9170053959275152, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-06-02 01:08:54,742 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 4
2022-06-02 01:08:54,742 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-06-02 01:08:54,742 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20220602 01:08:55.091" endtime="20220602 01:08:55.091"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:08:55.092" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:08:55.091" endtime="20220602 01:08:55.092"/>
</kw>
<status status="PASS" starttime="20220602 01:08:47.960" endtime="20220602 01:08:55.092"/>
</kw>
<msg timestamp="20220602 01:08:55.092" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:08:47.960" endtime="20220602 01:08:55.093"/>
</kw>
<msg timestamp="20220602 01:08:55.093" level="INFO">${result} = 2022-06-02 01:08:50,032 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-06-02 01:08:50,234 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220602 01:08:47.960" endtime="20220602 01:08:55.093"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220602 01:08:55.093" endtime="20220602 01:08:55.094"/>
</kw>
<status status="PASS" starttime="20220602 01:08:47.958" endtime="20220602 01:08:55.094"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220602 01:08:37.530" endtime="20220602 01:08:55.094"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20220602 01:08:37.341" endtime="20220602 01:08:55.095"/>
</suite>
<suite id="s1-s1-s2" name="Getconf" source="/opt/hadoop/smoketest/basic/getconf.robot">
<test id="s1-s1-s2-t1" name="Get OM">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:08:55.103" level="INFO">Running command 'ozone getconf ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:08:56.535" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:08:56.535" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20220602 01:08:55.101" endtime="20220602 01:08:56.535"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:08:56.536" level="INFO">om</msg>
<status status="PASS" starttime="20220602 01:08:56.536" endtime="20220602 01:08:56.537"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:08:56.537" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:08:56.537" endtime="20220602 01:08:56.537"/>
</kw>
<status status="PASS" starttime="20220602 01:08:55.101" endtime="20220602 01:08:56.538"/>
</kw>
<msg timestamp="20220602 01:08:56.538" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:08:55.101" endtime="20220602 01:08:56.538"/>
</kw>
<msg timestamp="20220602 01:08:56.538" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20220602 01:08:55.100" endtime="20220602 01:08:56.538"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220602 01:08:56.539" endtime="20220602 01:08:56.539"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:08:56.542" level="INFO">Running command 'ozone getconf -ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:08:57.772" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:08:57.772" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20220602 01:08:56.540" endtime="20220602 01:08:57.772"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:08:57.773" level="INFO">om</msg>
<status status="PASS" starttime="20220602 01:08:57.772" endtime="20220602 01:08:57.773"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:08:57.773" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:08:57.773" endtime="20220602 01:08:57.774"/>
</kw>
<status status="PASS" starttime="20220602 01:08:56.540" endtime="20220602 01:08:57.774"/>
</kw>
<msg timestamp="20220602 01:08:57.774" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:08:56.540" endtime="20220602 01:08:57.774"/>
</kw>
<msg timestamp="20220602 01:08:57.775" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20220602 01:08:56.539" endtime="20220602 01:08:57.775"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220602 01:08:57.775" endtime="20220602 01:08:57.775"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220602 01:08:55.100" endtime="20220602 01:08:57.775"/>
</test>
<test id="s1-s1-s2-t2" name="Get SCM">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:08:57.779" level="INFO">Running command 'ozone getconf storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:08:59.230" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:08:59.230" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220602 01:08:57.777" endtime="20220602 01:08:59.230"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:08:59.231" level="INFO">scm</msg>
<status status="PASS" starttime="20220602 01:08:59.230" endtime="20220602 01:08:59.231"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:08:59.232" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:08:59.231" endtime="20220602 01:08:59.232"/>
</kw>
<status status="PASS" starttime="20220602 01:08:57.777" endtime="20220602 01:08:59.232"/>
</kw>
<msg timestamp="20220602 01:08:59.232" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:08:57.777" endtime="20220602 01:08:59.233"/>
</kw>
<msg timestamp="20220602 01:08:59.233" level="INFO">${result} = scm</msg>
<status status="PASS" starttime="20220602 01:08:57.776" endtime="20220602 01:08:59.233"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220602 01:08:59.233" endtime="20220602 01:08:59.233"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:08:59.237" level="INFO">Running command 'ozone getconf -storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:09:00.702" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:09:00.702" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220602 01:08:59.235" endtime="20220602 01:09:00.702"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:09:00.704" level="INFO">scm</msg>
<status status="PASS" starttime="20220602 01:09:00.703" endtime="20220602 01:09:00.704"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:09:00.704" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:09:00.704" endtime="20220602 01:09:00.704"/>
</kw>
<status status="PASS" starttime="20220602 01:08:59.234" endtime="20220602 01:09:00.705"/>
</kw>
<msg timestamp="20220602 01:09:00.705" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:08:59.234" endtime="20220602 01:09:00.705"/>
</kw>
<msg timestamp="20220602 01:09:00.705" level="INFO">${result} = scm</msg>
<status status="PASS" starttime="20220602 01:08:59.233" endtime="20220602 01:09:00.705"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220602 01:09:00.706" endtime="20220602 01:09:00.706"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220602 01:08:57.776" endtime="20220602 01:09:00.706"/>
</test>
<test id="s1-s1-s2-t3" name="Get existing config key">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:09:00.711" level="INFO">Running command 'ozone getconf confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:09:01.968" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:09:01.968" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20220602 01:09:00.709" endtime="20220602 01:09:01.968"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:09:01.969" level="INFO">om</msg>
<status status="PASS" starttime="20220602 01:09:01.969" endtime="20220602 01:09:01.969"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:09:01.970" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:09:01.970" endtime="20220602 01:09:01.970"/>
</kw>
<status status="PASS" starttime="20220602 01:09:00.709" endtime="20220602 01:09:01.970"/>
</kw>
<msg timestamp="20220602 01:09:01.970" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:09:00.709" endtime="20220602 01:09:01.971"/>
</kw>
<msg timestamp="20220602 01:09:01.971" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20220602 01:09:00.708" endtime="20220602 01:09:01.971"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220602 01:09:01.971" endtime="20220602 01:09:01.972"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220602 01:09:01.972" endtime="20220602 01:09:01.972"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:09:01.976" level="INFO">Running command 'ozone getconf -confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:09:03.288" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:09:03.288" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20220602 01:09:01.973" endtime="20220602 01:09:03.288"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:09:03.289" level="INFO">om</msg>
<status status="PASS" starttime="20220602 01:09:03.288" endtime="20220602 01:09:03.289"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:09:03.290" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:09:03.289" endtime="20220602 01:09:03.290"/>
</kw>
<status status="PASS" starttime="20220602 01:09:01.973" endtime="20220602 01:09:03.290"/>
</kw>
<msg timestamp="20220602 01:09:03.290" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:09:01.973" endtime="20220602 01:09:03.291"/>
</kw>
<msg timestamp="20220602 01:09:03.291" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20220602 01:09:01.972" endtime="20220602 01:09:03.291"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220602 01:09:03.291" endtime="20220602 01:09:03.291"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220602 01:09:03.292" endtime="20220602 01:09:03.292"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220602 01:09:00.707" endtime="20220602 01:09:03.292"/>
</test>
<test id="s1-s1-s2-t4" name="Get undefined config key">
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:09:03.296" level="INFO">Running command 'ozone getconf confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:09:05.070" level="INFO">${rc} = 255</msg>
<msg timestamp="20220602 01:09:05.070" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20220602 01:09:03.294" endtime="20220602 01:09:05.070"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:09:05.071" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20220602 01:09:05.070" endtime="20220602 01:09:05.071"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:09:05.072" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:09:05.071" endtime="20220602 01:09:05.072"/>
</kw>
<msg timestamp="20220602 01:09:05.072" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20220602 01:09:03.294" endtime="20220602 01:09:05.072"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220602 01:09:05.072" endtime="20220602 01:09:05.073"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:09:05.075" level="INFO">Running command 'ozone getconf -confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:09:06.418" level="INFO">${rc} = 255</msg>
<msg timestamp="20220602 01:09:06.418" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20220602 01:09:05.073" endtime="20220602 01:09:06.418"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:09:06.419" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20220602 01:09:06.419" endtime="20220602 01:09:06.419"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:09:06.420" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:09:06.420" endtime="20220602 01:09:06.420"/>
</kw>
<msg timestamp="20220602 01:09:06.420" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20220602 01:09:05.073" endtime="20220602 01:09:06.420"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220602 01:09:06.420" endtime="20220602 01:09:06.421"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220602 01:09:03.293" endtime="20220602 01:09:06.421"/>
</test>
<doc>Test 'ozone getconf' command</doc>
<status status="PASS" starttime="20220602 01:08:55.096" endtime="20220602 01:09:06.422"/>
</suite>
<suite id="s1-s1-s3" name="Links" source="/opt/hadoop/smoketest/basic/links.robot">
<kw name="Create volumes" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220602 01:09:06.437" level="INFO">${random} = 65814</msg>
<status status="PASS" starttime="20220602 01:09:06.436" endtime="20220602 01:09:06.437"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${source}</arg>
<arg>${random}-source</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220602 01:09:06.438" level="INFO">${source} = 65814-source</msg>
<status status="PASS" starttime="20220602 01:09:06.437" endtime="20220602 01:09:06.438"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${target}</arg>
<arg>${random}-target</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220602 01:09:06.439" level="INFO">${target} = 65814-target</msg>
<status status="PASS" starttime="20220602 01:09:06.438" endtime="20220602 01:09:06.439"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:09:06.443" level="INFO">Running command 'ozone sh volume create 65814-source 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:09:10.311" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:09:10.311" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:09:06.440" endtime="20220602 01:09:10.311"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:09:10.312" level="INFO"/>
<status status="PASS" starttime="20220602 01:09:10.312" endtime="20220602 01:09:10.312"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:09:10.313" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:09:10.312" endtime="20220602 01:09:10.313"/>
</kw>
<status status="PASS" starttime="20220602 01:09:06.440" endtime="20220602 01:09:10.313"/>
</kw>
<msg timestamp="20220602 01:09:10.313" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:09:06.440" endtime="20220602 01:09:10.314"/>
</kw>
<status status="PASS" starttime="20220602 01:09:06.440" endtime="20220602 01:09:10.314"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:09:10.317" level="INFO">Running command 'ozone sh volume create 65814-target 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:09:14.329" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:09:14.329" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:09:10.315" endtime="20220602 01:09:14.329"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:09:14.330" level="INFO"/>
<status status="PASS" starttime="20220602 01:09:14.329" endtime="20220602 01:09:14.330"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:09:14.330" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:09:14.330" endtime="20220602 01:09:14.330"/>
</kw>
<status status="PASS" starttime="20220602 01:09:10.315" endtime="20220602 01:09:14.331"/>
</kw>
<msg timestamp="20220602 01:09:14.331" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:09:10.314" endtime="20220602 01:09:14.331"/>
</kw>
<status status="PASS" starttime="20220602 01:09:10.314" endtime="20220602 01:09:14.331"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:09:14.335" level="INFO">Running command 'ozone sh bucket create 65814-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:09:18.437" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:09:18.437" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:09:14.333" endtime="20220602 01:09:18.437"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:09:18.438" level="INFO"/>
<status status="PASS" starttime="20220602 01:09:18.437" endtime="20220602 01:09:18.438"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:09:18.438" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:09:18.438" endtime="20220602 01:09:18.439"/>
</kw>
<status status="PASS" starttime="20220602 01:09:14.333" endtime="20220602 01:09:18.439"/>
</kw>
<msg timestamp="20220602 01:09:18.439" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:09:14.332" endtime="20220602 01:09:18.439"/>
</kw>
<status status="PASS" starttime="20220602 01:09:14.332" endtime="20220602 01:09:18.440"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:09:18.443" level="INFO">Running command 'ozone sh key put 65814-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:09:24.303" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:09:24.303" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:09:18.441" endtime="20220602 01:09:24.303"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:09:24.305" level="INFO"/>
<status status="PASS" starttime="20220602 01:09:24.304" endtime="20220602 01:09:24.305"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:09:24.305" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:09:24.305" endtime="20220602 01:09:24.305"/>
</kw>
<status status="PASS" starttime="20220602 01:09:18.440" endtime="20220602 01:09:24.306"/>
</kw>
<msg timestamp="20220602 01:09:24.306" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:09:18.440" endtime="20220602 01:09:24.306"/>
</kw>
<status status="PASS" starttime="20220602 01:09:18.440" endtime="20220602 01:09:24.306"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:09:24.310" level="INFO">Running command 'ozone sh bucket create 65814-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:09:28.051" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:09:28.052" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:09:24.308" endtime="20220602 01:09:28.052"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:09:28.053" level="INFO"/>
<status status="PASS" starttime="20220602 01:09:28.052" endtime="20220602 01:09:28.053"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:09:28.053" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:09:28.053" endtime="20220602 01:09:28.053"/>
</kw>
<status status="PASS" starttime="20220602 01:09:24.308" endtime="20220602 01:09:28.054"/>
</kw>
<msg timestamp="20220602 01:09:28.054" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:09:24.307" endtime="20220602 01:09:28.054"/>
</kw>
<status status="PASS" starttime="20220602 01:09:24.307" endtime="20220602 01:09:28.054"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:09:28.058" level="INFO">Running command 'ozone sh bucket link 65814-source/readable-bucket 65814-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:09:31.735" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:09:31.736" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:09:28.056" endtime="20220602 01:09:31.736"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:09:31.737" level="INFO"/>
<status status="PASS" starttime="20220602 01:09:31.736" endtime="20220602 01:09:31.737"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:09:31.738" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:09:31.737" endtime="20220602 01:09:31.738"/>
</kw>
<status status="PASS" starttime="20220602 01:09:28.056" endtime="20220602 01:09:31.738"/>
</kw>
<msg timestamp="20220602 01:09:31.738" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:09:28.055" endtime="20220602 01:09:31.739"/>
</kw>
<status status="PASS" starttime="20220602 01:09:28.055" endtime="20220602 01:09:31.739"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:09:31.742" level="INFO">Running command 'ozone sh bucket link 65814-source/readable-bucket 65814-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:09:35.450" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:09:35.450" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:09:31.740" endtime="20220602 01:09:35.450"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:09:35.451" level="INFO"/>
<status status="PASS" starttime="20220602 01:09:35.451" endtime="20220602 01:09:35.451"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:09:35.452" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:09:35.451" endtime="20220602 01:09:35.452"/>
</kw>
<status status="PASS" starttime="20220602 01:09:31.740" endtime="20220602 01:09:35.452"/>
</kw>
<msg timestamp="20220602 01:09:35.452" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:09:31.739" endtime="20220602 01:09:35.453"/>
</kw>
<status status="PASS" starttime="20220602 01:09:31.739" endtime="20220602 01:09:35.453"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:09:35.456" level="INFO">Running command 'ozone sh bucket link 65814-source/unreadable-bucket 65814-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:09:39.423" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:09:39.423" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:09:35.454" endtime="20220602 01:09:39.423"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:09:39.424" level="INFO"/>
<status status="PASS" starttime="20220602 01:09:39.424" endtime="20220602 01:09:39.424"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:09:39.425" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:09:39.425" endtime="20220602 01:09:39.425"/>
</kw>
<status status="PASS" starttime="20220602 01:09:35.454" endtime="20220602 01:09:39.425"/>
</kw>
<msg timestamp="20220602 01:09:39.425" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:09:35.454" endtime="20220602 01:09:39.426"/>
</kw>
<status status="PASS" starttime="20220602 01:09:35.453" endtime="20220602 01:09:39.426"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:09:39.430" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 65814-target 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:09:43.270" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:09:43.270" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220602 01:09:39.427" endtime="20220602 01:09:43.270"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:09:43.271" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220602 01:09:43.270" endtime="20220602 01:09:43.271"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:09:43.272" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:09:43.271" endtime="20220602 01:09:43.272"/>
</kw>
<status status="PASS" starttime="20220602 01:09:39.427" endtime="20220602 01:09:43.272"/>
</kw>
<msg timestamp="20220602 01:09:43.272" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:09:39.427" endtime="20220602 01:09:43.272"/>
</kw>
<status status="PASS" starttime="20220602 01:09:39.426" endtime="20220602 01:09:43.273"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:09:43.276" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 65814-source 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:09:47.342" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:09:47.342" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220602 01:09:43.274" endtime="20220602 01:09:47.342"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:09:47.343" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220602 01:09:47.343" endtime="20220602 01:09:47.343"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:09:47.344" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:09:47.343" endtime="20220602 01:09:47.344"/>
</kw>
<status status="PASS" starttime="20220602 01:09:43.274" endtime="20220602 01:09:47.344"/>
</kw>
<msg timestamp="20220602 01:09:47.344" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:09:43.273" endtime="20220602 01:09:47.345"/>
</kw>
<status status="PASS" starttime="20220602 01:09:43.273" endtime="20220602 01:09:47.345"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:09:47.349" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 65814-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:09:50.862" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:09:50.862" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220602 01:09:47.347" endtime="20220602 01:09:50.862"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:09:50.863" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220602 01:09:50.862" endtime="20220602 01:09:50.863"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:09:50.863" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:09:50.863" endtime="20220602 01:09:50.864"/>
</kw>
<status status="PASS" starttime="20220602 01:09:47.346" endtime="20220602 01:09:50.864"/>
</kw>
<msg timestamp="20220602 01:09:50.864" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:09:47.346" endtime="20220602 01:09:50.864"/>
</kw>
<status status="PASS" starttime="20220602 01:09:47.345" endtime="20220602 01:09:50.864"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/readable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:09:50.868" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 65814-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:09:54.538" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:09:54.539" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220602 01:09:50.866" endtime="20220602 01:09:54.539"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:09:54.540" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220602 01:09:54.539" endtime="20220602 01:09:54.540"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:09:54.540" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:09:54.540" endtime="20220602 01:09:54.540"/>
</kw>
<status status="PASS" starttime="20220602 01:09:50.865" endtime="20220602 01:09:54.541"/>
</kw>
<msg timestamp="20220602 01:09:54.541" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:09:50.865" endtime="20220602 01:09:54.541"/>
</kw>
<status status="PASS" starttime="20220602 01:09:50.865" endtime="20220602 01:09:54.541"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:09:54.544" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 65814-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:09:58.263" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:09:58.263" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220602 01:09:54.543" endtime="20220602 01:09:58.263"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:09:58.264" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220602 01:09:58.264" endtime="20220602 01:09:58.264"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:09:58.265" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:09:58.264" endtime="20220602 01:09:58.265"/>
</kw>
<status status="PASS" starttime="20220602 01:09:54.542" endtime="20220602 01:09:58.265"/>
</kw>
<msg timestamp="20220602 01:09:58.265" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:09:54.542" endtime="20220602 01:09:58.266"/>
</kw>
<status status="PASS" starttime="20220602 01:09:54.541" endtime="20220602 01:09:58.266"/>
</kw>
<status status="PASS" starttime="20220602 01:09:14.332" endtime="20220602 01:09:58.266"/>
</kw>
<status status="PASS" starttime="20220602 01:09:14.331" endtime="20220602 01:09:58.266"/>
</kw>
<status status="PASS" starttime="20220602 01:09:06.436" endtime="20220602 01:09:58.266"/>
</kw>
<test id="s1-s1-s3-t1" name="Link to non-existent bucket">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:09:58.272" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:09:58.275" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:09:58.275" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220602 01:09:58.270" endtime="20220602 01:09:58.275"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:09:58.276" level="INFO">scm</msg>
<status status="PASS" starttime="20220602 01:09:58.276" endtime="20220602 01:09:58.276"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:09:58.277" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:09:58.277" endtime="20220602 01:09:58.277"/>
</kw>
<status status="PASS" starttime="20220602 01:09:58.269" endtime="20220602 01:09:58.278"/>
</kw>
<msg timestamp="20220602 01:09:58.278" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:09:58.269" endtime="20220602 01:09:58.278"/>
</kw>
<msg timestamp="20220602 01:09:58.278" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220602 01:09:58.269" endtime="20220602 01:09:58.278"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220602 01:09:58.280" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220602 01:09:58.278" endtime="20220602 01:09:58.280"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:09:58.285" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:09:58.294" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:09:58.294" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:09:58.282" endtime="20220602 01:09:58.294"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:09:58.295" level="INFO"/>
<status status="PASS" starttime="20220602 01:09:58.295" endtime="20220602 01:09:58.295"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:09:58.296" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:09:58.296" endtime="20220602 01:09:58.296"/>
</kw>
<status status="PASS" starttime="20220602 01:09:58.282" endtime="20220602 01:09:58.296"/>
</kw>
<msg timestamp="20220602 01:09:58.296" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:09:58.281" endtime="20220602 01:09:58.297"/>
</kw>
<status status="PASS" starttime="20220602 01:09:58.281" endtime="20220602 01:09:58.297"/>
</kw>
<status status="PASS" starttime="20220602 01:09:58.280" endtime="20220602 01:09:58.297"/>
</kw>
<status status="PASS" starttime="20220602 01:09:58.268" endtime="20220602 01:09:58.297"/>
</kw>
<status status="PASS" starttime="20220602 01:09:58.268" endtime="20220602 01:09:58.298"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:09:58.301" level="INFO">Running command 'ozone sh bucket link 65814-source/no-such-bucket 65814-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:10:02.021" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:10:02.021" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:09:58.299" endtime="20220602 01:10:02.021"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:10:02.023" level="INFO"/>
<status status="PASS" starttime="20220602 01:10:02.022" endtime="20220602 01:10:02.023"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:10:02.024" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:10:02.023" endtime="20220602 01:10:02.024"/>
</kw>
<status status="PASS" starttime="20220602 01:09:58.299" endtime="20220602 01:10:02.024"/>
</kw>
<msg timestamp="20220602 01:10:02.024" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:09:58.298" endtime="20220602 01:10:02.024"/>
</kw>
<status status="PASS" starttime="20220602 01:09:58.298" endtime="20220602 01:10:02.025"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/dangling-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:10:02.027" level="INFO">Running command 'ozone sh key list 65814-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:10:05.490" level="INFO">${rc} = 255</msg>
<msg timestamp="20220602 01:10:05.490" level="INFO">${output} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20220602 01:10:02.025" endtime="20220602 01:10:05.490"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:10:05.492" level="INFO">BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20220602 01:10:05.491" endtime="20220602 01:10:05.492"/>
</kw>
<msg timestamp="20220602 01:10:05.492" level="INFO">${result} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20220602 01:10:02.025" endtime="20220602 01:10:05.492"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220602 01:10:05.492" endtime="20220602 01:10:05.493"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220602 01:09:58.266" endtime="20220602 01:10:05.493"/>
</test>
<test id="s1-s1-s3-t2" name="Key create passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:10:05.499" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:10:05.503" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:10:05.503" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220602 01:10:05.497" endtime="20220602 01:10:05.503"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:10:05.504" level="INFO">scm</msg>
<status status="PASS" starttime="20220602 01:10:05.504" endtime="20220602 01:10:05.504"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:10:05.505" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:10:05.504" endtime="20220602 01:10:05.505"/>
</kw>
<status status="PASS" starttime="20220602 01:10:05.497" endtime="20220602 01:10:05.505"/>
</kw>
<msg timestamp="20220602 01:10:05.505" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:10:05.496" endtime="20220602 01:10:05.506"/>
</kw>
<msg timestamp="20220602 01:10:05.506" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220602 01:10:05.496" endtime="20220602 01:10:05.506"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220602 01:10:05.506" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220602 01:10:05.506" endtime="20220602 01:10:05.507"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:10:05.510" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:10:05.517" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:10:05.517" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:10:05.508" endtime="20220602 01:10:05.517"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:10:05.518" level="INFO"/>
<status status="PASS" starttime="20220602 01:10:05.517" endtime="20220602 01:10:05.518"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:10:05.519" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:10:05.518" endtime="20220602 01:10:05.519"/>
</kw>
<status status="PASS" starttime="20220602 01:10:05.508" endtime="20220602 01:10:05.520"/>
</kw>
<msg timestamp="20220602 01:10:05.520" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:10:05.508" endtime="20220602 01:10:05.520"/>
</kw>
<status status="PASS" starttime="20220602 01:10:05.507" endtime="20220602 01:10:05.521"/>
</kw>
<status status="PASS" starttime="20220602 01:10:05.507" endtime="20220602 01:10:05.521"/>
</kw>
<status status="PASS" starttime="20220602 01:10:05.495" endtime="20220602 01:10:05.521"/>
</kw>
<status status="PASS" starttime="20220602 01:10:05.495" endtime="20220602 01:10:05.521"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:10:05.524" level="INFO">Running command 'ozone sh bucket link 65814-source/bucket1 65814-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:10:09.406" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:10:09.406" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:10:05.522" endtime="20220602 01:10:09.406"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:10:09.407" level="INFO"/>
<status status="PASS" starttime="20220602 01:10:09.406" endtime="20220602 01:10:09.407"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:10:09.408" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:10:09.408" endtime="20220602 01:10:09.408"/>
</kw>
<status status="PASS" starttime="20220602 01:10:05.522" endtime="20220602 01:10:09.409"/>
</kw>
<msg timestamp="20220602 01:10:09.409" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:10:05.522" endtime="20220602 01:10:09.409"/>
</kw>
<status status="PASS" starttime="20220602 01:10:05.521" endtime="20220602 01:10:09.409"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:10:09.413" level="INFO">Running command 'ozone sh bucket create 65814-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:10:13.269" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:10:13.269" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:10:09.411" endtime="20220602 01:10:13.269"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:10:13.271" level="INFO"/>
<status status="PASS" starttime="20220602 01:10:13.270" endtime="20220602 01:10:13.271"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:10:13.271" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:10:13.271" endtime="20220602 01:10:13.271"/>
</kw>
<status status="PASS" starttime="20220602 01:10:09.411" endtime="20220602 01:10:13.272"/>
</kw>
<msg timestamp="20220602 01:10:13.272" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:10:09.410" endtime="20220602 01:10:13.272"/>
</kw>
<status status="PASS" starttime="20220602 01:10:09.410" endtime="20220602 01:10:13.273"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:10:13.276" level="INFO">Running command 'ozone sh key put 65814-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:10:19.619" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:10:19.619" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:10:13.274" endtime="20220602 01:10:19.619"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:10:19.620" level="INFO"/>
<status status="PASS" starttime="20220602 01:10:19.620" endtime="20220602 01:10:19.620"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:10:19.621" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:10:19.620" endtime="20220602 01:10:19.621"/>
</kw>
<status status="PASS" starttime="20220602 01:10:13.274" endtime="20220602 01:10:19.621"/>
</kw>
<msg timestamp="20220602 01:10:19.621" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:10:13.273" endtime="20220602 01:10:19.622"/>
</kw>
<status status="PASS" starttime="20220602 01:10:13.273" endtime="20220602 01:10:19.622"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220602 01:10:19.624" level="INFO">${postfix} = 39409</msg>
<status status="PASS" starttime="20220602 01:10:19.623" endtime="20220602 01:10:19.624"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220602 01:10:19.624" level="INFO">${tmpfile} = /tmp/tempkey-39409</msg>
<status status="PASS" starttime="20220602 01:10:19.624" endtime="20220602 01:10:19.624"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:10:19.628" level="INFO">Running command 'ozone sh key get 65814-target/link1/key1 /tmp/tempkey-39409 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:10:25.250" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:10:25.250" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:10:19.626" endtime="20220602 01:10:25.250"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:10:25.252" level="INFO"/>
<status status="PASS" starttime="20220602 01:10:25.251" endtime="20220602 01:10:25.252"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:10:25.252" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:10:25.252" endtime="20220602 01:10:25.252"/>
</kw>
<status status="PASS" starttime="20220602 01:10:19.625" endtime="20220602 01:10:25.253"/>
</kw>
<msg timestamp="20220602 01:10:25.253" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:10:19.625" endtime="20220602 01:10:25.253"/>
</kw>
<status status="PASS" starttime="20220602 01:10:19.624" endtime="20220602 01:10:25.254"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20220602 01:10:25.256" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-39409 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:10:25.260" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20220602 01:10:25.254" endtime="20220602 01:10:25.260"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:10:25.264" level="INFO">Running command 'rm -f /tmp/tempkey-39409 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:10:25.266" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:10:25.266" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:10:25.262" endtime="20220602 01:10:25.266"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:10:25.268" level="INFO"/>
<status status="PASS" starttime="20220602 01:10:25.267" endtime="20220602 01:10:25.268"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:10:25.268" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:10:25.268" endtime="20220602 01:10:25.268"/>
</kw>
<status status="PASS" starttime="20220602 01:10:25.261" endtime="20220602 01:10:25.269"/>
</kw>
<msg timestamp="20220602 01:10:25.269" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:10:25.261" endtime="20220602 01:10:25.269"/>
</kw>
<status status="PASS" starttime="20220602 01:10:25.260" endtime="20220602 01:10:25.269"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220602 01:10:25.270" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20220602 01:10:25.269" endtime="20220602 01:10:25.270"/>
</kw>
<msg timestamp="20220602 01:10:25.270" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20220602 01:10:19.623" endtime="20220602 01:10:25.270"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220602 01:10:25.270" endtime="20220602 01:10:25.271"/>
</kw>
<status status="PASS" starttime="20220602 01:10:19.622" endtime="20220602 01:10:25.271"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220602 01:10:05.494" endtime="20220602 01:10:25.271"/>
</test>
<test id="s1-s1-s3-t3" name="Key read passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:10:25.276" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:10:25.279" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:10:25.279" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220602 01:10:25.275" endtime="20220602 01:10:25.279"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:10:25.280" level="INFO">scm</msg>
<status status="PASS" starttime="20220602 01:10:25.279" endtime="20220602 01:10:25.280"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:10:25.280" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:10:25.280" endtime="20220602 01:10:25.280"/>
</kw>
<status status="PASS" starttime="20220602 01:10:25.274" endtime="20220602 01:10:25.281"/>
</kw>
<msg timestamp="20220602 01:10:25.281" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:10:25.274" endtime="20220602 01:10:25.281"/>
</kw>
<msg timestamp="20220602 01:10:25.282" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220602 01:10:25.274" endtime="20220602 01:10:25.282"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220602 01:10:25.282" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220602 01:10:25.282" endtime="20220602 01:10:25.282"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:10:25.286" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:10:25.293" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:10:25.293" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:10:25.284" endtime="20220602 01:10:25.293"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:10:25.294" level="INFO"/>
<status status="PASS" starttime="20220602 01:10:25.293" endtime="20220602 01:10:25.294"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:10:25.294" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:10:25.294" endtime="20220602 01:10:25.295"/>
</kw>
<status status="PASS" starttime="20220602 01:10:25.284" endtime="20220602 01:10:25.295"/>
</kw>
<msg timestamp="20220602 01:10:25.295" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:10:25.283" endtime="20220602 01:10:25.295"/>
</kw>
<status status="PASS" starttime="20220602 01:10:25.283" endtime="20220602 01:10:25.296"/>
</kw>
<status status="PASS" starttime="20220602 01:10:25.282" endtime="20220602 01:10:25.296"/>
</kw>
<status status="PASS" starttime="20220602 01:10:25.273" endtime="20220602 01:10:25.296"/>
</kw>
<status status="PASS" starttime="20220602 01:10:25.273" endtime="20220602 01:10:25.296"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:10:25.299" level="INFO">Running command 'ozone sh key put 65814-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:10:31.369" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:10:31.369" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:10:25.297" endtime="20220602 01:10:31.369"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:10:31.370" level="INFO"/>
<status status="PASS" starttime="20220602 01:10:31.370" endtime="20220602 01:10:31.371"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:10:31.371" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:10:31.371" endtime="20220602 01:10:31.371"/>
</kw>
<status status="PASS" starttime="20220602 01:10:25.297" endtime="20220602 01:10:31.371"/>
</kw>
<msg timestamp="20220602 01:10:31.372" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:10:25.296" endtime="20220602 01:10:31.372"/>
</kw>
<status status="PASS" starttime="20220602 01:10:25.296" endtime="20220602 01:10:31.372"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220602 01:10:31.374" level="INFO">${postfix} = 89848</msg>
<status status="PASS" starttime="20220602 01:10:31.373" endtime="20220602 01:10:31.374"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220602 01:10:31.374" level="INFO">${tmpfile} = /tmp/tempkey-89848</msg>
<status status="PASS" starttime="20220602 01:10:31.374" endtime="20220602 01:10:31.374"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:10:31.377" level="INFO">Running command 'ozone sh key get 65814-source/bucket1/key2 /tmp/tempkey-89848 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:10:36.905" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:10:36.905" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:10:31.375" endtime="20220602 01:10:36.905"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:10:36.906" level="INFO"/>
<status status="PASS" starttime="20220602 01:10:36.905" endtime="20220602 01:10:36.906"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:10:36.907" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:10:36.906" endtime="20220602 01:10:36.907"/>
</kw>
<status status="PASS" starttime="20220602 01:10:31.375" endtime="20220602 01:10:36.907"/>
</kw>
<msg timestamp="20220602 01:10:36.907" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:10:31.375" endtime="20220602 01:10:36.908"/>
</kw>
<status status="PASS" starttime="20220602 01:10:31.374" endtime="20220602 01:10:36.908"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20220602 01:10:36.910" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/tempkey-89848 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:10:36.912" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20220602 01:10:36.908" endtime="20220602 01:10:36.912"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:10:36.916" level="INFO">Running command 'rm -f /tmp/tempkey-89848 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:10:36.918" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:10:36.918" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:10:36.914" endtime="20220602 01:10:36.918"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:10:36.919" level="INFO"/>
<status status="PASS" starttime="20220602 01:10:36.918" endtime="20220602 01:10:36.919"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:10:36.920" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:10:36.919" endtime="20220602 01:10:36.920"/>
</kw>
<status status="PASS" starttime="20220602 01:10:36.914" endtime="20220602 01:10:36.920"/>
</kw>
<msg timestamp="20220602 01:10:36.920" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:10:36.913" endtime="20220602 01:10:36.921"/>
</kw>
<status status="PASS" starttime="20220602 01:10:36.913" endtime="20220602 01:10:36.921"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220602 01:10:36.922" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20220602 01:10:36.921" endtime="20220602 01:10:36.922"/>
</kw>
<msg timestamp="20220602 01:10:36.922" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20220602 01:10:31.373" endtime="20220602 01:10:36.922"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220602 01:10:36.922" endtime="20220602 01:10:36.922"/>
</kw>
<status status="PASS" starttime="20220602 01:10:31.372" endtime="20220602 01:10:36.922"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220602 01:10:25.272" endtime="20220602 01:10:36.923"/>
</test>
<test id="s1-s1-s3-t4" name="Key list passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:10:36.928" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:10:36.932" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:10:36.932" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220602 01:10:36.926" endtime="20220602 01:10:36.932"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:10:36.933" level="INFO">scm</msg>
<status status="PASS" starttime="20220602 01:10:36.932" endtime="20220602 01:10:36.933"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:10:36.933" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:10:36.933" endtime="20220602 01:10:36.934"/>
</kw>
<status status="PASS" starttime="20220602 01:10:36.926" endtime="20220602 01:10:36.934"/>
</kw>
<msg timestamp="20220602 01:10:36.934" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:10:36.926" endtime="20220602 01:10:36.934"/>
</kw>
<msg timestamp="20220602 01:10:36.935" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220602 01:10:36.925" endtime="20220602 01:10:36.935"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220602 01:10:36.935" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220602 01:10:36.935" endtime="20220602 01:10:36.935"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:10:36.940" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:10:36.947" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:10:36.947" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:10:36.938" endtime="20220602 01:10:36.947"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:10:36.948" level="INFO"/>
<status status="PASS" starttime="20220602 01:10:36.948" endtime="20220602 01:10:36.948"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:10:36.949" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:10:36.948" endtime="20220602 01:10:36.949"/>
</kw>
<status status="PASS" starttime="20220602 01:10:36.938" endtime="20220602 01:10:36.950"/>
</kw>
<msg timestamp="20220602 01:10:36.950" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:10:36.937" endtime="20220602 01:10:36.950"/>
</kw>
<status status="PASS" starttime="20220602 01:10:36.936" endtime="20220602 01:10:36.950"/>
</kw>
<status status="PASS" starttime="20220602 01:10:36.936" endtime="20220602 01:10:36.951"/>
</kw>
<status status="PASS" starttime="20220602 01:10:36.925" endtime="20220602 01:10:36.951"/>
</kw>
<status status="PASS" starttime="20220602 01:10:36.924" endtime="20220602 01:10:36.951"/>
</kw>
<kw name="Execute" library="os">
<var>${target_list}</var>
<arg>ozone sh key list ${target}/link1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:10:36.954" level="INFO">Running command 'ozone sh key list 65814-target/link1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:10:40.964" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:10:40.964" level="INFO">${output} = key1
key2</msg>
<status status="PASS" starttime="20220602 01:10:36.952" endtime="20220602 01:10:40.964"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:10:40.966" level="INFO">key1
key2</msg>
<status status="PASS" starttime="20220602 01:10:40.965" endtime="20220602 01:10:40.966"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:10:40.966" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:10:40.966" endtime="20220602 01:10:40.966"/>
</kw>
<status status="PASS" starttime="20220602 01:10:36.952" endtime="20220602 01:10:40.967"/>
</kw>
<msg timestamp="20220602 01:10:40.967" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:10:36.952" endtime="20220602 01:10:40.967"/>
</kw>
<msg timestamp="20220602 01:10:40.967" level="INFO">${target_list} = key1
key2</msg>
<status status="PASS" starttime="20220602 01:10:36.951" endtime="20220602 01:10:40.967"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:10:40.972" level="INFO">Running command 'ozone sh key list 65814-source/bucket1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:10:45.093" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:10:45.093" level="INFO">${output} = key1
key2</msg>
<status status="PASS" starttime="20220602 01:10:40.969" endtime="20220602 01:10:45.093"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:10:45.094" level="INFO">key1
key2</msg>
<status status="PASS" starttime="20220602 01:10:45.093" endtime="20220602 01:10:45.094"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:10:45.095" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:10:45.094" endtime="20220602 01:10:45.095"/>
</kw>
<status status="PASS" starttime="20220602 01:10:40.969" endtime="20220602 01:10:45.095"/>
</kw>
<msg timestamp="20220602 01:10:45.095" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:10:40.968" endtime="20220602 01:10:45.096"/>
</kw>
<msg timestamp="20220602 01:10:45.096" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" starttime="20220602 01:10:40.968" endtime="20220602 01:10:45.096"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${target_list}</arg>
<arg>${source_list}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220602 01:10:45.096" endtime="20220602 01:10:45.097"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220602 01:10:45.097" endtime="20220602 01:10:45.097"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220602 01:10:45.097" endtime="20220602 01:10:45.098"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220602 01:10:36.923" endtime="20220602 01:10:45.098"/>
</test>
<test id="s1-s1-s3-t5" name="Key delete passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:10:45.104" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:10:45.107" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:10:45.108" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220602 01:10:45.102" endtime="20220602 01:10:45.108"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:10:45.109" level="INFO">scm</msg>
<status status="PASS" starttime="20220602 01:10:45.108" endtime="20220602 01:10:45.109"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:10:45.109" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:10:45.109" endtime="20220602 01:10:45.109"/>
</kw>
<status status="PASS" starttime="20220602 01:10:45.101" endtime="20220602 01:10:45.110"/>
</kw>
<msg timestamp="20220602 01:10:45.110" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:10:45.101" endtime="20220602 01:10:45.110"/>
</kw>
<msg timestamp="20220602 01:10:45.110" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220602 01:10:45.101" endtime="20220602 01:10:45.110"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220602 01:10:45.111" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220602 01:10:45.111" endtime="20220602 01:10:45.111"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:10:45.115" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:10:45.122" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:10:45.122" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:10:45.113" endtime="20220602 01:10:45.122"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:10:45.123" level="INFO"/>
<status status="PASS" starttime="20220602 01:10:45.122" endtime="20220602 01:10:45.123"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:10:45.124" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:10:45.123" endtime="20220602 01:10:45.124"/>
</kw>
<status status="PASS" starttime="20220602 01:10:45.113" endtime="20220602 01:10:45.124"/>
</kw>
<msg timestamp="20220602 01:10:45.124" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:10:45.112" endtime="20220602 01:10:45.125"/>
</kw>
<status status="PASS" starttime="20220602 01:10:45.112" endtime="20220602 01:10:45.125"/>
</kw>
<status status="PASS" starttime="20220602 01:10:45.111" endtime="20220602 01:10:45.125"/>
</kw>
<status status="PASS" starttime="20220602 01:10:45.100" endtime="20220602 01:10:45.125"/>
</kw>
<status status="PASS" starttime="20220602 01:10:45.100" endtime="20220602 01:10:45.125"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${target}/link1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:10:45.129" level="INFO">Running command 'ozone sh key delete 65814-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:10:48.942" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:10:48.942" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:10:45.127" endtime="20220602 01:10:48.942"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:10:48.943" level="INFO"/>
<status status="PASS" starttime="20220602 01:10:48.943" endtime="20220602 01:10:48.943"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:10:48.944" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:10:48.944" endtime="20220602 01:10:48.944"/>
</kw>
<status status="PASS" starttime="20220602 01:10:45.126" endtime="20220602 01:10:48.944"/>
</kw>
<msg timestamp="20220602 01:10:48.944" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:10:45.126" endtime="20220602 01:10:48.945"/>
</kw>
<status status="PASS" starttime="20220602 01:10:45.125" endtime="20220602 01:10:48.945"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:10:48.949" level="INFO">Running command 'ozone sh key list 65814-source/bucket1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:10:52.616" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:10:52.616" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20220602 01:10:48.947" endtime="20220602 01:10:52.616"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:10:52.618" level="INFO">key1</msg>
<status status="PASS" starttime="20220602 01:10:52.617" endtime="20220602 01:10:52.618"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:10:52.618" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:10:52.618" endtime="20220602 01:10:52.618"/>
</kw>
<status status="PASS" starttime="20220602 01:10:48.946" endtime="20220602 01:10:52.619"/>
</kw>
<msg timestamp="20220602 01:10:52.619" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:10:48.946" endtime="20220602 01:10:52.619"/>
</kw>
<msg timestamp="20220602 01:10:52.619" level="INFO">${source_list} = key1</msg>
<status status="PASS" starttime="20220602 01:10:48.945" endtime="20220602 01:10:52.619"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220602 01:10:52.620" endtime="20220602 01:10:52.620"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220602 01:10:45.098" endtime="20220602 01:10:52.620"/>
</test>
<test id="s1-s1-s3-t6" name="Bucket list contains links">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:10:52.625" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:10:52.628" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:10:52.628" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220602 01:10:52.623" endtime="20220602 01:10:52.628"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:10:52.629" level="INFO">scm</msg>
<status status="PASS" starttime="20220602 01:10:52.628" endtime="20220602 01:10:52.629"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:10:52.629" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:10:52.629" endtime="20220602 01:10:52.629"/>
</kw>
<status status="PASS" starttime="20220602 01:10:52.623" endtime="20220602 01:10:52.630"/>
</kw>
<msg timestamp="20220602 01:10:52.630" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:10:52.622" endtime="20220602 01:10:52.630"/>
</kw>
<msg timestamp="20220602 01:10:52.630" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220602 01:10:52.622" endtime="20220602 01:10:52.630"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220602 01:10:52.631" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220602 01:10:52.630" endtime="20220602 01:10:52.631"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:10:52.634" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:10:52.641" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:10:52.641" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:10:52.633" endtime="20220602 01:10:52.641"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:10:52.642" level="INFO"/>
<status status="PASS" starttime="20220602 01:10:52.641" endtime="20220602 01:10:52.642"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:10:52.642" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:10:52.642" endtime="20220602 01:10:52.642"/>
</kw>
<status status="PASS" starttime="20220602 01:10:52.632" endtime="20220602 01:10:52.642"/>
</kw>
<msg timestamp="20220602 01:10:52.643" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:10:52.632" endtime="20220602 01:10:52.643"/>
</kw>
<status status="PASS" starttime="20220602 01:10:52.632" endtime="20220602 01:10:52.643"/>
</kw>
<status status="PASS" starttime="20220602 01:10:52.631" endtime="20220602 01:10:52.643"/>
</kw>
<status status="PASS" starttime="20220602 01:10:52.622" endtime="20220602 01:10:52.643"/>
</kw>
<status status="PASS" starttime="20220602 01:10:52.621" endtime="20220602 01:10:52.643"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:10:52.647" level="INFO">Running command 'ozone sh bucket list 65814-target 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:10:56.538" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:10:56.538" level="INFO">${output} = [ {
  "metadata" : { },
  "volumeName" : "65814-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "202...</msg>
<status status="PASS" starttime="20220602 01:10:52.645" endtime="20220602 01:10:56.538"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:10:56.539" level="INFO">[ {
  "metadata" : { },
  "volumeName" : "65814-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-06-02T01:10:01.952Z",
  "modificationTime" : "2022-06-02T01:10:01.952Z",
  "sourceVolume" : "65814-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY",
  "owner" : "testuser",
  "link" : true
}, {
  "metadata" : { },
  "volumeName" : "65814-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-06-02T01:09:39.173Z",
  "modificationTime" : "2022-06-02T01:09:58.100Z",
  "sourceVolume" : "65814-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY",
  "owner" : "testuser",
  "link" : true
}, {
  "metadata" : { },
  "volumeName" : "65814-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-06-02T01:10:09.321Z",
  "modificationTime" : "2022-06-02T01:10:09.321Z",
  "sourceVolume" : "65814-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY",
  "owner" : "testuser",
  "link" : true
}, {
  "metadata" : { },
  "volumeName" : "65814-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-06-02T01:09:31.671Z",
  "modificationTime" : "2022-06-02T01:09:54.345Z",
  "sourceVolume" : "65814-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY",
  "owner" : "testuser",
  "link" : true
}, {
  "metadata" : { },
  "volumeName" : "65814-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-06-02T01:09:35.369Z",
  "modificationTime" : "2022-06-02T01:09:35.369Z",
  "sourceVolume" : "65814-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY",
  "owner" : "testuser",
  "link" : true
} ]</msg>
<status status="PASS" starttime="20220602 01:10:56.539" endtime="20220602 01:10:56.539"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:10:56.540" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:10:56.540" endtime="20220602 01:10:56.540"/>
</kw>
<status status="PASS" starttime="20220602 01:10:52.644" endtime="20220602 01:10:56.540"/>
</kw>
<msg timestamp="20220602 01:10:56.540" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:10:52.644" endtime="20220602 01:10:56.541"/>
</kw>
<msg timestamp="20220602 01:10:56.541" level="INFO">${result} = [ {
  "metadata" : { },
  "volumeName" : "65814-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "202...</msg>
<status status="PASS" starttime="20220602 01:10:52.644" endtime="20220602 01:10:56.541"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220602 01:10:56.541" endtime="20220602 01:10:56.541"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dangling-link</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220602 01:10:56.542" endtime="20220602 01:10:56.542"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220602 01:10:52.620" endtime="20220602 01:10:56.542"/>
</test>
<test id="s1-s1-s3-t7" name="Bucket info shows source">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:10:56.547" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:10:56.550" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:10:56.550" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220602 01:10:56.546" endtime="20220602 01:10:56.550"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:10:56.551" level="INFO">scm</msg>
<status status="PASS" starttime="20220602 01:10:56.551" endtime="20220602 01:10:56.551"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:10:56.552" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:10:56.551" endtime="20220602 01:10:56.552"/>
</kw>
<status status="PASS" starttime="20220602 01:10:56.545" endtime="20220602 01:10:56.552"/>
</kw>
<msg timestamp="20220602 01:10:56.552" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:10:56.545" endtime="20220602 01:10:56.553"/>
</kw>
<msg timestamp="20220602 01:10:56.553" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220602 01:10:56.545" endtime="20220602 01:10:56.553"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220602 01:10:56.554" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220602 01:10:56.553" endtime="20220602 01:10:56.554"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:10:56.557" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:10:56.563" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:10:56.563" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:10:56.555" endtime="20220602 01:10:56.563"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:10:56.564" level="INFO"/>
<status status="PASS" starttime="20220602 01:10:56.563" endtime="20220602 01:10:56.564"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:10:56.565" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:10:56.564" endtime="20220602 01:10:56.565"/>
</kw>
<status status="PASS" starttime="20220602 01:10:56.555" endtime="20220602 01:10:56.565"/>
</kw>
<msg timestamp="20220602 01:10:56.565" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:10:56.555" endtime="20220602 01:10:56.565"/>
</kw>
<status status="PASS" starttime="20220602 01:10:56.554" endtime="20220602 01:10:56.566"/>
</kw>
<status status="PASS" starttime="20220602 01:10:56.554" endtime="20220602 01:10:56.566"/>
</kw>
<status status="PASS" starttime="20220602 01:10:56.544" endtime="20220602 01:10:56.566"/>
</kw>
<status status="PASS" starttime="20220602 01:10:56.544" endtime="20220602 01:10:56.566"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:10:56.569" level="INFO">Running command 'ozone sh bucket info 65814-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:11:00.255" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:11:00.255" level="INFO">${output} = {
  "volumeName" : "65814-target",
  "bucketName" : "link1",
  "sourceVolume" : "65814-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2022-06-02T01:10:09.321Z",
  "modificationTime" : "202...</msg>
<status status="PASS" starttime="20220602 01:10:56.567" endtime="20220602 01:11:00.255"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:11:00.257" level="INFO">{
  "volumeName" : "65814-target",
  "bucketName" : "link1",
  "sourceVolume" : "65814-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2022-06-02T01:10:09.321Z",
  "modificationTime" : "2022-06-02T01:10:09.321Z",
  "owner" : "testuser"
}</msg>
<status status="PASS" starttime="20220602 01:11:00.256" endtime="20220602 01:11:00.257"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:11:00.257" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:11:00.257" endtime="20220602 01:11:00.257"/>
</kw>
<status status="PASS" starttime="20220602 01:10:56.567" endtime="20220602 01:11:00.257"/>
</kw>
<msg timestamp="20220602 01:11:00.258" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:10:56.567" endtime="20220602 01:11:00.258"/>
</kw>
<msg timestamp="20220602 01:11:00.258" level="INFO">${result} = {
  "volumeName" : "65814-target",
  "bucketName" : "link1",
  "sourceVolume" : "65814-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2022-06-02T01:10:09.321Z",
  "modificationTime" : "202...</msg>
<status status="PASS" starttime="20220602 01:10:56.566" endtime="20220602 01:11:00.258"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${source}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220602 01:11:00.258" endtime="20220602 01:11:00.259"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bucket1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220602 01:11:00.259" endtime="20220602 01:11:00.259"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${target}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220602 01:11:00.259" endtime="20220602 01:11:00.260"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220602 01:11:00.260" endtime="20220602 01:11:00.260"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>modificationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220602 01:11:00.260" endtime="20220602 01:11:00.261"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220602 01:11:00.261" endtime="20220602 01:11:00.261"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>metadata</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220602 01:11:00.261" endtime="20220602 01:11:00.262"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220602 01:10:56.543" endtime="20220602 01:11:00.262"/>
</test>
<test id="s1-s1-s3-t8" name="Source and target have separate ACLs">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:11:00.267" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:11:00.270" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:11:00.270" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220602 01:11:00.265" endtime="20220602 01:11:00.270"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:11:00.271" level="INFO">scm</msg>
<status status="PASS" starttime="20220602 01:11:00.271" endtime="20220602 01:11:00.272"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:11:00.272" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:11:00.272" endtime="20220602 01:11:00.272"/>
</kw>
<status status="PASS" starttime="20220602 01:11:00.265" endtime="20220602 01:11:00.273"/>
</kw>
<msg timestamp="20220602 01:11:00.273" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:11:00.265" endtime="20220602 01:11:00.273"/>
</kw>
<msg timestamp="20220602 01:11:00.273" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220602 01:11:00.264" endtime="20220602 01:11:00.274"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220602 01:11:00.274" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220602 01:11:00.274" endtime="20220602 01:11:00.274"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:11:00.278" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:11:00.285" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:11:00.285" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:11:00.276" endtime="20220602 01:11:00.285"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:11:00.286" level="INFO"/>
<status status="PASS" starttime="20220602 01:11:00.286" endtime="20220602 01:11:00.286"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:11:00.287" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:11:00.287" endtime="20220602 01:11:00.287"/>
</kw>
<status status="PASS" starttime="20220602 01:11:00.276" endtime="20220602 01:11:00.288"/>
</kw>
<msg timestamp="20220602 01:11:00.288" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:11:00.275" endtime="20220602 01:11:00.288"/>
</kw>
<status status="PASS" starttime="20220602 01:11:00.275" endtime="20220602 01:11:00.288"/>
</kw>
<status status="PASS" starttime="20220602 01:11:00.274" endtime="20220602 01:11:00.289"/>
</kw>
<status status="PASS" starttime="20220602 01:11:00.264" endtime="20220602 01:11:00.289"/>
</kw>
<status status="PASS" starttime="20220602 01:11:00.263" endtime="20220602 01:11:00.289"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:11:00.292" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 65814-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:11:04.038" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:11:04.038" level="INFO">${output} = ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220602 01:11:00.290" endtime="20220602 01:11:04.038"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:11:04.039" level="INFO">ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220602 01:11:04.039" endtime="20220602 01:11:04.039"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:11:04.040" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:11:04.040" endtime="20220602 01:11:04.040"/>
</kw>
<status status="PASS" starttime="20220602 01:11:00.290" endtime="20220602 01:11:04.040"/>
</kw>
<msg timestamp="20220602 01:11:04.040" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:11:00.289" endtime="20220602 01:11:04.041"/>
</kw>
<status status="PASS" starttime="20220602 01:11:00.289" endtime="20220602 01:11:04.041"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:11:04.046" level="INFO">Running command 'ozone sh bucket getacl 65814-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:11:07.837" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:11:07.837" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20220602 01:11:04.044" endtime="20220602 01:11:07.837"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:11:07.839" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20220602 01:11:07.838" endtime="20220602 01:11:07.839"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:11:07.840" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:11:07.839" endtime="20220602 01:11:07.840"/>
</kw>
<status status="PASS" starttime="20220602 01:11:04.043" endtime="20220602 01:11:07.840"/>
</kw>
<msg timestamp="20220602 01:11:07.840" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:11:04.043" endtime="20220602 01:11:07.841"/>
</kw>
<msg timestamp="20220602 01:11:07.841" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20220602 01:11:04.042" endtime="20220602 01:11:07.841"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220602 01:11:07.841" endtime="20220602 01:11:07.842"/>
</kw>
<status status="PASS" starttime="20220602 01:11:04.041" endtime="20220602 01:11:07.842"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:11:07.847" level="INFO">Running command 'ozone sh bucket getacl 65814-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:11:12.023" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:11:12.023" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:11:07.845" endtime="20220602 01:11:12.023"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:11:12.024" level="INFO"/>
<status status="PASS" starttime="20220602 01:11:12.024" endtime="20220602 01:11:12.024"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:11:12.025" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:11:12.025" endtime="20220602 01:11:12.025"/>
</kw>
<status status="PASS" starttime="20220602 01:11:07.845" endtime="20220602 01:11:12.025"/>
</kw>
<msg timestamp="20220602 01:11:12.026" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:11:07.844" endtime="20220602 01:11:12.026"/>
</kw>
<msg timestamp="20220602 01:11:12.026" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20220602 01:11:07.844" endtime="20220602 01:11:12.026"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220602 01:11:12.026" endtime="20220602 01:11:12.027"/>
</kw>
<status status="PASS" starttime="20220602 01:11:07.842" endtime="20220602 01:11:12.027"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:11:12.031" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 65814-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:11:15.995" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:11:15.995" level="INFO">${output} = ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220602 01:11:12.029" endtime="20220602 01:11:15.995"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:11:15.996" level="INFO">ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220602 01:11:15.995" endtime="20220602 01:11:15.996"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:11:15.997" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:11:15.996" endtime="20220602 01:11:15.997"/>
</kw>
<status status="PASS" starttime="20220602 01:11:12.028" endtime="20220602 01:11:15.997"/>
</kw>
<msg timestamp="20220602 01:11:15.997" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:11:12.028" endtime="20220602 01:11:15.998"/>
</kw>
<status status="PASS" starttime="20220602 01:11:12.027" endtime="20220602 01:11:15.998"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:11:16.004" level="INFO">Running command 'ozone sh bucket getacl 65814-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:11:19.946" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:11:19.946" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:11:16.001" endtime="20220602 01:11:19.946"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:11:19.947" level="INFO"/>
<status status="PASS" starttime="20220602 01:11:19.947" endtime="20220602 01:11:19.947"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:11:19.948" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:11:19.948" endtime="20220602 01:11:19.948"/>
</kw>
<status status="PASS" starttime="20220602 01:11:16.001" endtime="20220602 01:11:19.948"/>
</kw>
<msg timestamp="20220602 01:11:19.949" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:11:16.000" endtime="20220602 01:11:19.949"/>
</kw>
<msg timestamp="20220602 01:11:19.949" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20220602 01:11:16.000" endtime="20220602 01:11:19.949"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220602 01:11:19.949" endtime="20220602 01:11:19.950"/>
</kw>
<status status="PASS" starttime="20220602 01:11:15.998" endtime="20220602 01:11:19.950"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:11:19.955" level="INFO">Running command 'ozone sh bucket getacl 65814-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:11:24.035" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:11:24.036" level="INFO">${output} = READ</msg>
<status status="PASS" starttime="20220602 01:11:19.953" endtime="20220602 01:11:24.036"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:11:24.038" level="INFO">READ</msg>
<status status="PASS" starttime="20220602 01:11:24.036" endtime="20220602 01:11:24.038"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:11:24.039" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:11:24.038" endtime="20220602 01:11:24.039"/>
</kw>
<status status="PASS" starttime="20220602 01:11:19.952" endtime="20220602 01:11:24.039"/>
</kw>
<msg timestamp="20220602 01:11:24.039" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:11:19.952" endtime="20220602 01:11:24.040"/>
</kw>
<msg timestamp="20220602 01:11:24.040" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" starttime="20220602 01:11:19.951" endtime="20220602 01:11:24.040"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220602 01:11:24.040" endtime="20220602 01:11:24.041"/>
</kw>
<status status="PASS" starttime="20220602 01:11:19.950" endtime="20220602 01:11:24.041"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220602 01:11:00.262" endtime="20220602 01:11:24.041"/>
</test>
<test id="s1-s1-s3-t9" name="Buckets and links share namespace">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:11:24.048" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:11:24.065" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:11:24.065" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220602 01:11:24.045" endtime="20220602 01:11:24.065"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:11:24.066" level="INFO">scm</msg>
<status status="PASS" starttime="20220602 01:11:24.066" endtime="20220602 01:11:24.067"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:11:24.067" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:11:24.067" endtime="20220602 01:11:24.067"/>
</kw>
<status status="PASS" starttime="20220602 01:11:24.045" endtime="20220602 01:11:24.068"/>
</kw>
<msg timestamp="20220602 01:11:24.068" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:11:24.044" endtime="20220602 01:11:24.068"/>
</kw>
<msg timestamp="20220602 01:11:24.068" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220602 01:11:24.044" endtime="20220602 01:11:24.068"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220602 01:11:24.069" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220602 01:11:24.068" endtime="20220602 01:11:24.069"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:11:24.080" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:11:24.159" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:11:24.160" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:11:24.073" endtime="20220602 01:11:24.160"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:11:24.161" level="INFO"/>
<status status="PASS" starttime="20220602 01:11:24.160" endtime="20220602 01:11:24.161"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:11:24.161" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:11:24.161" endtime="20220602 01:11:24.162"/>
</kw>
<status status="PASS" starttime="20220602 01:11:24.070" endtime="20220602 01:11:24.162"/>
</kw>
<msg timestamp="20220602 01:11:24.162" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:11:24.070" endtime="20220602 01:11:24.162"/>
</kw>
<status status="PASS" starttime="20220602 01:11:24.069" endtime="20220602 01:11:24.162"/>
</kw>
<status status="PASS" starttime="20220602 01:11:24.069" endtime="20220602 01:11:24.163"/>
</kw>
<status status="PASS" starttime="20220602 01:11:24.044" endtime="20220602 01:11:24.163"/>
</kw>
<status status="PASS" starttime="20220602 01:11:24.043" endtime="20220602 01:11:24.163"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:11:24.167" level="INFO">Running command 'ozone sh bucket link 65814-source/bucket2 65814-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:11:28.081" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:11:28.081" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:11:24.164" endtime="20220602 01:11:28.081"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:11:28.082" level="INFO"/>
<status status="PASS" starttime="20220602 01:11:28.081" endtime="20220602 01:11:28.082"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:11:28.082" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:11:28.082" endtime="20220602 01:11:28.082"/>
</kw>
<status status="PASS" starttime="20220602 01:11:24.164" endtime="20220602 01:11:28.083"/>
</kw>
<msg timestamp="20220602 01:11:28.083" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:11:24.163" endtime="20220602 01:11:28.083"/>
</kw>
<status status="PASS" starttime="20220602 01:11:24.163" endtime="20220602 01:11:28.083"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${target}/link2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:11:28.086" level="INFO">Running command 'ozone sh bucket create 65814-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:11:31.807" level="INFO">${rc} = 255</msg>
<msg timestamp="20220602 01:11:31.808" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20220602 01:11:28.084" endtime="20220602 01:11:31.808"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:11:31.809" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20220602 01:11:31.808" endtime="20220602 01:11:31.809"/>
</kw>
<msg timestamp="20220602 01:11:31.809" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20220602 01:11:28.084" endtime="20220602 01:11:31.809"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220602 01:11:31.809" endtime="20220602 01:11:31.810"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${target}/bucket3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:11:31.813" level="INFO">Running command 'ozone sh bucket create 65814-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:11:35.650" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:11:35.650" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:11:31.811" endtime="20220602 01:11:35.650"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:11:35.651" level="INFO"/>
<status status="PASS" starttime="20220602 01:11:35.650" endtime="20220602 01:11:35.651"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:11:35.652" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:11:35.651" endtime="20220602 01:11:35.652"/>
</kw>
<status status="PASS" starttime="20220602 01:11:31.810" endtime="20220602 01:11:35.652"/>
</kw>
<msg timestamp="20220602 01:11:35.652" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:11:31.810" endtime="20220602 01:11:35.653"/>
</kw>
<status status="PASS" starttime="20220602 01:11:31.810" endtime="20220602 01:11:35.653"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:11:35.656" level="INFO">Running command 'ozone sh bucket link 65814-source/bucket1 65814-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:11:39.370" level="INFO">${rc} = 255</msg>
<msg timestamp="20220602 01:11:39.370" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20220602 01:11:35.654" endtime="20220602 01:11:39.370"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:11:39.371" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20220602 01:11:39.370" endtime="20220602 01:11:39.371"/>
</kw>
<msg timestamp="20220602 01:11:39.371" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20220602 01:11:35.653" endtime="20220602 01:11:39.371"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220602 01:11:39.372" endtime="20220602 01:11:39.372"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220602 01:11:24.042" endtime="20220602 01:11:39.372"/>
</test>
<test id="s1-s1-s3-t10" name="Can follow link with read access">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:11:39.377" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:11:39.380" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:11:39.380" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220602 01:11:39.375" endtime="20220602 01:11:39.381"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:11:39.381" level="INFO">scm</msg>
<status status="PASS" starttime="20220602 01:11:39.381" endtime="20220602 01:11:39.382"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:11:39.382" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:11:39.382" endtime="20220602 01:11:39.382"/>
</kw>
<status status="PASS" starttime="20220602 01:11:39.375" endtime="20220602 01:11:39.382"/>
</kw>
<msg timestamp="20220602 01:11:39.382" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:11:39.375" endtime="20220602 01:11:39.383"/>
</kw>
<msg timestamp="20220602 01:11:39.383" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220602 01:11:39.374" endtime="20220602 01:11:39.383"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220602 01:11:39.384" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220602 01:11:39.383" endtime="20220602 01:11:39.384"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:11:39.388" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:11:39.394" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:11:39.394" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:11:39.386" endtime="20220602 01:11:39.394"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:11:39.395" level="INFO"/>
<status status="PASS" starttime="20220602 01:11:39.395" endtime="20220602 01:11:39.395"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:11:39.396" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:11:39.396" endtime="20220602 01:11:39.396"/>
</kw>
<status status="PASS" starttime="20220602 01:11:39.385" endtime="20220602 01:11:39.396"/>
</kw>
<msg timestamp="20220602 01:11:39.396" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:11:39.385" endtime="20220602 01:11:39.397"/>
</kw>
<status status="PASS" starttime="20220602 01:11:39.384" endtime="20220602 01:11:39.397"/>
</kw>
<status status="PASS" starttime="20220602 01:11:39.384" endtime="20220602 01:11:39.397"/>
</kw>
<status status="PASS" starttime="20220602 01:11:39.374" endtime="20220602 01:11:39.397"/>
</kw>
<status status="PASS" starttime="20220602 01:11:39.374" endtime="20220602 01:11:39.397"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:11:39.401" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:11:39.404" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:11:39.404" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:11:39.399" endtime="20220602 01:11:39.404"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:11:39.405" level="INFO"/>
<status status="PASS" starttime="20220602 01:11:39.404" endtime="20220602 01:11:39.405"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:11:39.406" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:11:39.405" endtime="20220602 01:11:39.406"/>
</kw>
<status status="PASS" starttime="20220602 01:11:39.399" endtime="20220602 01:11:39.406"/>
</kw>
<msg timestamp="20220602 01:11:39.406" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:11:39.399" endtime="20220602 01:11:39.406"/>
</kw>
<status status="PASS" starttime="20220602 01:11:39.398" endtime="20220602 01:11:39.407"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:11:39.410" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:11:39.413" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:11:39.413" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220602 01:11:39.408" endtime="20220602 01:11:39.413"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:11:39.414" level="INFO">scm</msg>
<status status="PASS" starttime="20220602 01:11:39.414" endtime="20220602 01:11:39.414"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:11:39.415" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:11:39.415" endtime="20220602 01:11:39.415"/>
</kw>
<status status="PASS" starttime="20220602 01:11:39.408" endtime="20220602 01:11:39.415"/>
</kw>
<msg timestamp="20220602 01:11:39.415" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:11:39.408" endtime="20220602 01:11:39.416"/>
</kw>
<msg timestamp="20220602 01:11:39.416" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220602 01:11:39.407" endtime="20220602 01:11:39.416"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220602 01:11:39.417" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220602 01:11:39.416" endtime="20220602 01:11:39.417"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:11:39.420" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:11:39.427" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:11:39.427" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:11:39.419" endtime="20220602 01:11:39.427"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:11:39.428" level="INFO"/>
<status status="PASS" starttime="20220602 01:11:39.427" endtime="20220602 01:11:39.428"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:11:39.429" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:11:39.428" endtime="20220602 01:11:39.429"/>
</kw>
<status status="PASS" starttime="20220602 01:11:39.418" endtime="20220602 01:11:39.429"/>
</kw>
<msg timestamp="20220602 01:11:39.429" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:11:39.418" endtime="20220602 01:11:39.429"/>
</kw>
<status status="PASS" starttime="20220602 01:11:39.417" endtime="20220602 01:11:39.430"/>
</kw>
<status status="PASS" starttime="20220602 01:11:39.417" endtime="20220602 01:11:39.430"/>
</kw>
<status status="PASS" starttime="20220602 01:11:39.407" endtime="20220602 01:11:39.430"/>
</kw>
<status status="PASS" starttime="20220602 01:11:39.407" endtime="20220602 01:11:39.430"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/readable-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:11:39.432" level="INFO">Running command 'ozone sh key list 65814-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:11:43.332" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:11:43.333" level="INFO">${output} = [ {
  "volumeName" : "65814-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2022-06-02T01:09:21.859Z",
  "modificationTime" : ...</msg>
<status status="PASS" starttime="20220602 01:11:39.430" endtime="20220602 01:11:43.333"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:11:43.334" level="INFO">[ {
  "volumeName" : "65814-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2022-06-02T01:09:21.859Z",
  "modificationTime" : "2022-06-02T01:09:23.887Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  }
} ]</msg>
<status status="PASS" starttime="20220602 01:11:43.333" endtime="20220602 01:11:43.334"/>
</kw>
<msg timestamp="20220602 01:11:43.334" level="INFO">${result} = [ {
  "volumeName" : "65814-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2022-06-02T01:09:21.859Z",
  "modificationTime" : ...</msg>
<status status="PASS" starttime="20220602 01:11:39.430" endtime="20220602 01:11:43.334"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220602 01:11:43.334" endtime="20220602 01:11:43.335"/>
</kw>
<status status="PASS" starttime="20220602 01:11:39.398" endtime="20220602 01:11:43.335"/>
</kw>
<status status="PASS" starttime="20220602 01:11:39.397" endtime="20220602 01:11:43.335"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220602 01:11:39.373" endtime="20220602 01:11:43.335"/>
</test>
<test id="s1-s1-s3-t11" name="Cannot follow link without read access">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:11:43.341" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:11:43.345" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:11:43.345" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220602 01:11:43.339" endtime="20220602 01:11:43.345"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:11:43.346" level="INFO">scm</msg>
<status status="PASS" starttime="20220602 01:11:43.345" endtime="20220602 01:11:43.346"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:11:43.347" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:11:43.346" endtime="20220602 01:11:43.347"/>
</kw>
<status status="PASS" starttime="20220602 01:11:43.339" endtime="20220602 01:11:43.347"/>
</kw>
<msg timestamp="20220602 01:11:43.347" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:11:43.338" endtime="20220602 01:11:43.348"/>
</kw>
<msg timestamp="20220602 01:11:43.348" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220602 01:11:43.338" endtime="20220602 01:11:43.348"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220602 01:11:43.350" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220602 01:11:43.349" endtime="20220602 01:11:43.350"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:11:43.354" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:11:43.360" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:11:43.360" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:11:43.352" endtime="20220602 01:11:43.360"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:11:43.361" level="INFO"/>
<status status="PASS" starttime="20220602 01:11:43.361" endtime="20220602 01:11:43.361"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:11:43.362" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:11:43.362" endtime="20220602 01:11:43.362"/>
</kw>
<status status="PASS" starttime="20220602 01:11:43.351" endtime="20220602 01:11:43.362"/>
</kw>
<msg timestamp="20220602 01:11:43.362" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:11:43.351" endtime="20220602 01:11:43.363"/>
</kw>
<status status="PASS" starttime="20220602 01:11:43.350" endtime="20220602 01:11:43.363"/>
</kw>
<status status="PASS" starttime="20220602 01:11:43.350" endtime="20220602 01:11:43.363"/>
</kw>
<status status="PASS" starttime="20220602 01:11:43.338" endtime="20220602 01:11:43.363"/>
</kw>
<status status="PASS" starttime="20220602 01:11:43.337" endtime="20220602 01:11:43.363"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:11:43.367" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:11:43.370" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:11:43.370" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:11:43.365" endtime="20220602 01:11:43.370"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:11:43.371" level="INFO"/>
<status status="PASS" starttime="20220602 01:11:43.370" endtime="20220602 01:11:43.371"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:11:43.372" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:11:43.371" endtime="20220602 01:11:43.372"/>
</kw>
<status status="PASS" starttime="20220602 01:11:43.365" endtime="20220602 01:11:43.372"/>
</kw>
<msg timestamp="20220602 01:11:43.372" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:11:43.364" endtime="20220602 01:11:43.373"/>
</kw>
<status status="PASS" starttime="20220602 01:11:43.364" endtime="20220602 01:11:43.373"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:11:43.376" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:11:43.379" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:11:43.379" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220602 01:11:43.375" endtime="20220602 01:11:43.379"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:11:43.380" level="INFO">scm</msg>
<status status="PASS" starttime="20220602 01:11:43.379" endtime="20220602 01:11:43.380"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:11:43.380" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:11:43.380" endtime="20220602 01:11:43.380"/>
</kw>
<status status="PASS" starttime="20220602 01:11:43.374" endtime="20220602 01:11:43.381"/>
</kw>
<msg timestamp="20220602 01:11:43.381" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:11:43.374" endtime="20220602 01:11:43.381"/>
</kw>
<msg timestamp="20220602 01:11:43.381" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220602 01:11:43.374" endtime="20220602 01:11:43.381"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220602 01:11:43.382" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220602 01:11:43.381" endtime="20220602 01:11:43.382"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:11:43.386" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:11:43.392" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:11:43.392" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:11:43.384" endtime="20220602 01:11:43.392"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:11:43.393" level="INFO"/>
<status status="PASS" starttime="20220602 01:11:43.392" endtime="20220602 01:11:43.393"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:11:43.393" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:11:43.393" endtime="20220602 01:11:43.393"/>
</kw>
<status status="PASS" starttime="20220602 01:11:43.383" endtime="20220602 01:11:43.393"/>
</kw>
<msg timestamp="20220602 01:11:43.393" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:11:43.383" endtime="20220602 01:11:43.394"/>
</kw>
<status status="PASS" starttime="20220602 01:11:43.382" endtime="20220602 01:11:43.394"/>
</kw>
<status status="PASS" starttime="20220602 01:11:43.382" endtime="20220602 01:11:43.394"/>
</kw>
<status status="PASS" starttime="20220602 01:11:43.373" endtime="20220602 01:11:43.394"/>
</kw>
<status status="PASS" starttime="20220602 01:11:43.373" endtime="20220602 01:11:43.394"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/unreadable-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:11:43.397" level="INFO">Running command 'ozone sh key list 65814-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:11:47.227" level="INFO">${rc} = 255</msg>
<msg timestamp="20220602 01:11:47.227" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket Volume:65814-target Bucket:unreadable-link </msg>
<status status="PASS" starttime="20220602 01:11:43.395" endtime="20220602 01:11:47.227"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:11:47.229" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket Volume:65814-target Bucket:unreadable-link </msg>
<status status="PASS" starttime="20220602 01:11:47.228" endtime="20220602 01:11:47.229"/>
</kw>
<msg timestamp="20220602 01:11:47.229" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket Volume:65814-target Bucket:unreadable-link </msg>
<status status="PASS" starttime="20220602 01:11:43.395" endtime="20220602 01:11:47.229"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220602 01:11:47.229" endtime="20220602 01:11:47.230"/>
</kw>
<status status="PASS" starttime="20220602 01:11:43.364" endtime="20220602 01:11:47.230"/>
</kw>
<status status="PASS" starttime="20220602 01:11:43.363" endtime="20220602 01:11:47.230"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220602 01:11:43.336" endtime="20220602 01:11:47.230"/>
</test>
<test id="s1-s1-s3-t12" name="ACL verified on source bucket">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:11:47.236" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:11:47.239" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:11:47.239" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220602 01:11:47.234" endtime="20220602 01:11:47.239"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:11:47.240" level="INFO">scm</msg>
<status status="PASS" starttime="20220602 01:11:47.239" endtime="20220602 01:11:47.240"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:11:47.241" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:11:47.240" endtime="20220602 01:11:47.241"/>
</kw>
<status status="PASS" starttime="20220602 01:11:47.233" endtime="20220602 01:11:47.241"/>
</kw>
<msg timestamp="20220602 01:11:47.241" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:11:47.233" endtime="20220602 01:11:47.241"/>
</kw>
<msg timestamp="20220602 01:11:47.242" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220602 01:11:47.233" endtime="20220602 01:11:47.242"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220602 01:11:47.242" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220602 01:11:47.242" endtime="20220602 01:11:47.242"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:11:47.246" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:11:47.252" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:11:47.252" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:11:47.244" endtime="20220602 01:11:47.252"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:11:47.253" level="INFO"/>
<status status="PASS" starttime="20220602 01:11:47.252" endtime="20220602 01:11:47.253"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:11:47.253" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:11:47.253" endtime="20220602 01:11:47.253"/>
</kw>
<status status="PASS" starttime="20220602 01:11:47.243" endtime="20220602 01:11:47.253"/>
</kw>
<msg timestamp="20220602 01:11:47.253" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:11:47.243" endtime="20220602 01:11:47.254"/>
</kw>
<status status="PASS" starttime="20220602 01:11:47.243" endtime="20220602 01:11:47.254"/>
</kw>
<status status="PASS" starttime="20220602 01:11:47.242" endtime="20220602 01:11:47.254"/>
</kw>
<status status="PASS" starttime="20220602 01:11:47.232" endtime="20220602 01:11:47.254"/>
</kw>
<status status="PASS" starttime="20220602 01:11:47.232" endtime="20220602 01:11:47.254"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:11:47.258" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:11:47.261" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:11:47.261" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:11:47.256" endtime="20220602 01:11:47.261"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:11:47.262" level="INFO"/>
<status status="PASS" starttime="20220602 01:11:47.261" endtime="20220602 01:11:47.262"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:11:47.262" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:11:47.262" endtime="20220602 01:11:47.262"/>
</kw>
<status status="PASS" starttime="20220602 01:11:47.256" endtime="20220602 01:11:47.262"/>
</kw>
<msg timestamp="20220602 01:11:47.263" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:11:47.256" endtime="20220602 01:11:47.263"/>
</kw>
<status status="PASS" starttime="20220602 01:11:47.255" endtime="20220602 01:11:47.263"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:11:47.266" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:11:47.269" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:11:47.269" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220602 01:11:47.265" endtime="20220602 01:11:47.269"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:11:47.270" level="INFO">scm</msg>
<status status="PASS" starttime="20220602 01:11:47.270" endtime="20220602 01:11:47.270"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:11:47.271" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:11:47.271" endtime="20220602 01:11:47.272"/>
</kw>
<status status="PASS" starttime="20220602 01:11:47.264" endtime="20220602 01:11:47.272"/>
</kw>
<msg timestamp="20220602 01:11:47.272" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:11:47.264" endtime="20220602 01:11:47.272"/>
</kw>
<msg timestamp="20220602 01:11:47.273" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220602 01:11:47.264" endtime="20220602 01:11:47.273"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220602 01:11:47.273" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220602 01:11:47.273" endtime="20220602 01:11:47.273"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:11:47.277" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:11:47.282" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:11:47.282" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:11:47.275" endtime="20220602 01:11:47.282"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:11:47.283" level="INFO"/>
<status status="PASS" starttime="20220602 01:11:47.283" endtime="20220602 01:11:47.283"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:11:47.284" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:11:47.283" endtime="20220602 01:11:47.284"/>
</kw>
<status status="PASS" starttime="20220602 01:11:47.275" endtime="20220602 01:11:47.284"/>
</kw>
<msg timestamp="20220602 01:11:47.284" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:11:47.274" endtime="20220602 01:11:47.285"/>
</kw>
<status status="PASS" starttime="20220602 01:11:47.274" endtime="20220602 01:11:47.285"/>
</kw>
<status status="PASS" starttime="20220602 01:11:47.274" endtime="20220602 01:11:47.285"/>
</kw>
<status status="PASS" starttime="20220602 01:11:47.264" endtime="20220602 01:11:47.285"/>
</kw>
<status status="PASS" starttime="20220602 01:11:47.263" endtime="20220602 01:11:47.285"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:11:47.288" level="INFO">Running command 'ozone sh bucket info 65814-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:11:51.166" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:11:51.166" level="INFO">${output} = {
  "volumeName" : "65814-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "65814-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2022-06-02T01:09:39.173Z...</msg>
<status status="PASS" starttime="20220602 01:11:47.286" endtime="20220602 01:11:51.166"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:11:51.167" level="INFO">{
  "volumeName" : "65814-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "65814-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2022-06-02T01:09:39.173Z",
  "modificationTime" : "2022-06-02T01:09:58.100Z",
  "owner" : "testuser"
}</msg>
<status status="PASS" starttime="20220602 01:11:51.167" endtime="20220602 01:11:51.167"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:11:51.168" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:11:51.168" endtime="20220602 01:11:51.168"/>
</kw>
<status status="PASS" starttime="20220602 01:11:47.286" endtime="20220602 01:11:51.168"/>
</kw>
<msg timestamp="20220602 01:11:51.169" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:11:47.286" endtime="20220602 01:11:51.169"/>
</kw>
<msg timestamp="20220602 01:11:51.169" level="INFO">${result} = {
  "volumeName" : "65814-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "65814-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2022-06-02T01:09:39.173Z...</msg>
<status status="PASS" starttime="20220602 01:11:47.285" endtime="20220602 01:11:51.169"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220602 01:11:51.170" endtime="20220602 01:11:51.170"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220602 01:11:51.170" endtime="20220602 01:11:51.170"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:11:51.173" level="INFO">Running command 'ozone sh key list 65814-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:11:54.893" level="INFO">${rc} = 255</msg>
<msg timestamp="20220602 01:11:54.893" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket Volume:65814-source Bucket:unreadable-bucket Key:</msg>
<status status="PASS" starttime="20220602 01:11:51.171" endtime="20220602 01:11:54.894"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:11:54.895" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket Volume:65814-source Bucket:unreadable-bucket Key:</msg>
<status status="PASS" starttime="20220602 01:11:54.894" endtime="20220602 01:11:54.895"/>
</kw>
<msg timestamp="20220602 01:11:54.895" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket Volume:65814-source Bucket:unreadable-bucket Key:</msg>
<status status="PASS" starttime="20220602 01:11:51.171" endtime="20220602 01:11:54.895"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220602 01:11:54.896" endtime="20220602 01:11:54.896"/>
</kw>
<status status="PASS" starttime="20220602 01:11:47.255" endtime="20220602 01:11:54.896"/>
</kw>
<status status="PASS" starttime="20220602 01:11:47.254" endtime="20220602 01:11:54.896"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220602 01:11:47.231" endtime="20220602 01:11:54.896"/>
</test>
<test id="s1-s1-s3-t13" name="Loop in link chain is detected">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:11:54.902" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:11:54.905" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:11:54.905" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220602 01:11:54.900" endtime="20220602 01:11:54.905"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:11:54.906" level="INFO">scm</msg>
<status status="PASS" starttime="20220602 01:11:54.906" endtime="20220602 01:11:54.906"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:11:54.907" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:11:54.906" endtime="20220602 01:11:54.907"/>
</kw>
<status status="PASS" starttime="20220602 01:11:54.899" endtime="20220602 01:11:54.907"/>
</kw>
<msg timestamp="20220602 01:11:54.907" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:11:54.899" endtime="20220602 01:11:54.908"/>
</kw>
<msg timestamp="20220602 01:11:54.908" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220602 01:11:54.898" endtime="20220602 01:11:54.908"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220602 01:11:54.909" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220602 01:11:54.908" endtime="20220602 01:11:54.909"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:11:54.912" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:11:54.919" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:11:54.919" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:11:54.911" endtime="20220602 01:11:54.919"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:11:54.920" level="INFO"/>
<status status="PASS" starttime="20220602 01:11:54.919" endtime="20220602 01:11:54.920"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:11:54.920" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:11:54.920" endtime="20220602 01:11:54.921"/>
</kw>
<status status="PASS" starttime="20220602 01:11:54.910" endtime="20220602 01:11:54.921"/>
</kw>
<msg timestamp="20220602 01:11:54.921" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:11:54.910" endtime="20220602 01:11:54.921"/>
</kw>
<status status="PASS" starttime="20220602 01:11:54.909" endtime="20220602 01:11:54.922"/>
</kw>
<status status="PASS" starttime="20220602 01:11:54.909" endtime="20220602 01:11:54.922"/>
</kw>
<status status="PASS" starttime="20220602 01:11:54.898" endtime="20220602 01:11:54.922"/>
</kw>
<status status="PASS" starttime="20220602 01:11:54.898" endtime="20220602 01:11:54.922"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:11:54.925" level="INFO">Running command 'ozone sh bucket link 65814-target/loop1 65814-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:12:00.998" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:12:00.998" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:11:54.923" endtime="20220602 01:12:00.998"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:12:01.000" level="INFO"/>
<status status="PASS" starttime="20220602 01:12:00.999" endtime="20220602 01:12:01.000"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:12:01.000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:12:01.000" endtime="20220602 01:12:01.001"/>
</kw>
<status status="PASS" starttime="20220602 01:11:54.923" endtime="20220602 01:12:01.001"/>
</kw>
<msg timestamp="20220602 01:12:01.001" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:11:54.923" endtime="20220602 01:12:01.002"/>
</kw>
<status status="PASS" starttime="20220602 01:11:54.922" endtime="20220602 01:12:01.002"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:12:01.006" level="INFO">Running command 'ozone sh bucket link 65814-target/loop2 65814-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:12:04.949" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:12:04.949" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:12:01.003" endtime="20220602 01:12:04.949"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:12:04.950" level="INFO"/>
<status status="PASS" starttime="20220602 01:12:04.950" endtime="20220602 01:12:04.950"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:12:04.951" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:12:04.951" endtime="20220602 01:12:04.951"/>
</kw>
<status status="PASS" starttime="20220602 01:12:01.003" endtime="20220602 01:12:04.951"/>
</kw>
<msg timestamp="20220602 01:12:04.951" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:12:01.003" endtime="20220602 01:12:04.952"/>
</kw>
<status status="PASS" starttime="20220602 01:12:01.002" endtime="20220602 01:12:04.952"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:12:04.955" level="INFO">Running command 'ozone sh bucket link 65814-target/loop3 65814-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:12:08.885" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:12:08.885" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:12:04.953" endtime="20220602 01:12:08.885"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:12:08.886" level="INFO"/>
<status status="PASS" starttime="20220602 01:12:08.885" endtime="20220602 01:12:08.886"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:12:08.887" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:12:08.886" endtime="20220602 01:12:08.887"/>
</kw>
<status status="PASS" starttime="20220602 01:12:04.953" endtime="20220602 01:12:08.887"/>
</kw>
<msg timestamp="20220602 01:12:08.887" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:12:04.953" endtime="20220602 01:12:08.888"/>
</kw>
<status status="PASS" starttime="20220602 01:12:04.952" endtime="20220602 01:12:08.888"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/loop2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:12:08.891" level="INFO">Running command 'ozone sh key list 65814-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:12:12.673" level="INFO">${rc} = 255</msg>
<msg timestamp="20220602 01:12:12.673" level="INFO">${output} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links. Bucket name: loop2, Volume name: 65814-target</msg>
<status status="PASS" starttime="20220602 01:12:08.889" endtime="20220602 01:12:12.673"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:12:12.675" level="INFO">DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links. Bucket name: loop2, Volume name: 65814-target</msg>
<status status="PASS" starttime="20220602 01:12:12.673" endtime="20220602 01:12:12.675"/>
</kw>
<msg timestamp="20220602 01:12:12.675" level="INFO">${result} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links. Bucket name: loop2, Volume name: 65814-target</msg>
<status status="PASS" starttime="20220602 01:12:08.888" endtime="20220602 01:12:12.675"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220602 01:12:12.675" endtime="20220602 01:12:12.676"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220602 01:11:54.897" endtime="20220602 01:12:12.676"/>
</test>
<test id="s1-s1-s3-t14" name="Multiple links to same bucket are allowed">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:12:12.681" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:12:12.685" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:12:12.685" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220602 01:12:12.680" endtime="20220602 01:12:12.685"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:12:12.686" level="INFO">scm</msg>
<status status="PASS" starttime="20220602 01:12:12.685" endtime="20220602 01:12:12.686"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:12:12.686" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:12:12.686" endtime="20220602 01:12:12.687"/>
</kw>
<status status="PASS" starttime="20220602 01:12:12.679" endtime="20220602 01:12:12.687"/>
</kw>
<msg timestamp="20220602 01:12:12.687" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:12:12.679" endtime="20220602 01:12:12.687"/>
</kw>
<msg timestamp="20220602 01:12:12.688" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220602 01:12:12.679" endtime="20220602 01:12:12.688"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220602 01:12:12.688" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220602 01:12:12.688" endtime="20220602 01:12:12.688"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:12:12.691" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:12:12.698" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:12:12.698" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:12:12.690" endtime="20220602 01:12:12.698"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:12:12.699" level="INFO"/>
<status status="PASS" starttime="20220602 01:12:12.698" endtime="20220602 01:12:12.699"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:12:12.699" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:12:12.699" endtime="20220602 01:12:12.699"/>
</kw>
<status status="PASS" starttime="20220602 01:12:12.689" endtime="20220602 01:12:12.700"/>
</kw>
<msg timestamp="20220602 01:12:12.700" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:12:12.689" endtime="20220602 01:12:12.700"/>
</kw>
<status status="PASS" starttime="20220602 01:12:12.689" endtime="20220602 01:12:12.700"/>
</kw>
<status status="PASS" starttime="20220602 01:12:12.688" endtime="20220602 01:12:12.700"/>
</kw>
<status status="PASS" starttime="20220602 01:12:12.678" endtime="20220602 01:12:12.700"/>
</kw>
<status status="PASS" starttime="20220602 01:12:12.678" endtime="20220602 01:12:12.700"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:12:12.703" level="INFO">Running command 'ozone sh bucket link 65814-source/bucket1 65814-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:12:16.443" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:12:16.443" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:12:12.702" endtime="20220602 01:12:16.443"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:12:16.444" level="INFO"/>
<status status="PASS" starttime="20220602 01:12:16.444" endtime="20220602 01:12:16.445"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:12:16.445" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:12:16.445" endtime="20220602 01:12:16.445"/>
</kw>
<status status="PASS" starttime="20220602 01:12:12.701" endtime="20220602 01:12:16.445"/>
</kw>
<msg timestamp="20220602 01:12:16.446" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:12:12.701" endtime="20220602 01:12:16.446"/>
</kw>
<status status="PASS" starttime="20220602 01:12:12.701" endtime="20220602 01:12:16.446"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:12:16.450" level="INFO">Running command 'ozone sh key put 65814-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:12:22.000" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:12:22.000" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:12:16.448" endtime="20220602 01:12:22.000"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:12:22.001" level="INFO"/>
<status status="PASS" starttime="20220602 01:12:22.001" endtime="20220602 01:12:22.001"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:12:22.002" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:12:22.001" endtime="20220602 01:12:22.002"/>
</kw>
<status status="PASS" starttime="20220602 01:12:16.447" endtime="20220602 01:12:22.002"/>
</kw>
<msg timestamp="20220602 01:12:22.002" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:12:16.447" endtime="20220602 01:12:22.003"/>
</kw>
<status status="PASS" starttime="20220602 01:12:16.446" endtime="20220602 01:12:22.003"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220602 01:12:22.004" level="INFO">${postfix} = 62066</msg>
<status status="PASS" starttime="20220602 01:12:22.004" endtime="20220602 01:12:22.005"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220602 01:12:22.005" level="INFO">${tmpfile} = /tmp/tempkey-62066</msg>
<status status="PASS" starttime="20220602 01:12:22.005" endtime="20220602 01:12:22.005"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:12:22.008" level="INFO">Running command 'ozone sh key get 65814-target/link1/key3 /tmp/tempkey-62066 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:12:27.583" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:12:27.583" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:12:22.006" endtime="20220602 01:12:27.583"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:12:27.584" level="INFO"/>
<status status="PASS" starttime="20220602 01:12:27.584" endtime="20220602 01:12:27.584"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:12:27.585" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:12:27.585" endtime="20220602 01:12:27.585"/>
</kw>
<status status="PASS" starttime="20220602 01:12:22.006" endtime="20220602 01:12:27.585"/>
</kw>
<msg timestamp="20220602 01:12:27.585" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:12:22.006" endtime="20220602 01:12:27.586"/>
</kw>
<status status="PASS" starttime="20220602 01:12:22.005" endtime="20220602 01:12:27.586"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20220602 01:12:27.589" level="INFO">Running command 'diff -q /etc/group /tmp/tempkey-62066 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:12:27.591" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20220602 01:12:27.587" endtime="20220602 01:12:27.591"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:12:27.597" level="INFO">Running command 'rm -f /tmp/tempkey-62066 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:12:27.599" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:12:27.599" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:12:27.595" endtime="20220602 01:12:27.599"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:12:27.600" level="INFO"/>
<status status="PASS" starttime="20220602 01:12:27.600" endtime="20220602 01:12:27.600"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:12:27.601" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:12:27.601" endtime="20220602 01:12:27.601"/>
</kw>
<status status="PASS" starttime="20220602 01:12:27.594" endtime="20220602 01:12:27.602"/>
</kw>
<msg timestamp="20220602 01:12:27.602" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:12:27.594" endtime="20220602 01:12:27.602"/>
</kw>
<status status="PASS" starttime="20220602 01:12:27.593" endtime="20220602 01:12:27.602"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220602 01:12:27.603" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20220602 01:12:27.603" endtime="20220602 01:12:27.603"/>
</kw>
<msg timestamp="20220602 01:12:27.603" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20220602 01:12:22.004" endtime="20220602 01:12:27.603"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220602 01:12:27.604" endtime="20220602 01:12:27.604"/>
</kw>
<status status="PASS" starttime="20220602 01:12:22.003" endtime="20220602 01:12:27.604"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220602 01:12:12.677" endtime="20220602 01:12:27.604"/>
</test>
<test id="s1-s1-s3-t15" name="Source bucket not affected by deleting link">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:12:27.610" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:12:27.612" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:12:27.612" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220602 01:12:27.607" endtime="20220602 01:12:27.613"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:12:27.614" level="INFO">scm</msg>
<status status="PASS" starttime="20220602 01:12:27.613" endtime="20220602 01:12:27.614"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:12:27.615" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:12:27.614" endtime="20220602 01:12:27.615"/>
</kw>
<status status="PASS" starttime="20220602 01:12:27.607" endtime="20220602 01:12:27.615"/>
</kw>
<msg timestamp="20220602 01:12:27.615" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:12:27.607" endtime="20220602 01:12:27.616"/>
</kw>
<msg timestamp="20220602 01:12:27.616" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220602 01:12:27.606" endtime="20220602 01:12:27.616"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220602 01:12:27.617" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220602 01:12:27.616" endtime="20220602 01:12:27.617"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:12:27.620" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:12:27.628" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:12:27.628" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:12:27.619" endtime="20220602 01:12:27.628"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:12:27.629" level="INFO"/>
<status status="PASS" starttime="20220602 01:12:27.628" endtime="20220602 01:12:27.629"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:12:27.630" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:12:27.629" endtime="20220602 01:12:27.630"/>
</kw>
<status status="PASS" starttime="20220602 01:12:27.618" endtime="20220602 01:12:27.630"/>
</kw>
<msg timestamp="20220602 01:12:27.630" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:12:27.618" endtime="20220602 01:12:27.630"/>
</kw>
<status status="PASS" starttime="20220602 01:12:27.617" endtime="20220602 01:12:27.631"/>
</kw>
<status status="PASS" starttime="20220602 01:12:27.617" endtime="20220602 01:12:27.631"/>
</kw>
<status status="PASS" starttime="20220602 01:12:27.606" endtime="20220602 01:12:27.631"/>
</kw>
<status status="PASS" starttime="20220602 01:12:27.605" endtime="20220602 01:12:27.631"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:12:27.634" level="INFO">Running command 'ozone sh bucket delete 65814-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:12:31.242" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:12:31.242" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:12:27.632" endtime="20220602 01:12:31.242"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:12:31.244" level="INFO"/>
<status status="PASS" starttime="20220602 01:12:31.243" endtime="20220602 01:12:31.244"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:12:31.244" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:12:31.244" endtime="20220602 01:12:31.244"/>
</kw>
<status status="PASS" starttime="20220602 01:12:27.632" endtime="20220602 01:12:31.245"/>
</kw>
<msg timestamp="20220602 01:12:31.245" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:12:27.631" endtime="20220602 01:12:31.245"/>
</kw>
<status status="PASS" starttime="20220602 01:12:27.631" endtime="20220602 01:12:31.245"/>
</kw>
<kw name="Execute" library="os">
<var>${bucket_list}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:12:31.249" level="INFO">Running command 'ozone sh bucket list 65814-target 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:12:35.193" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:12:35.193" level="INFO">${output} = [ {
  "metadata" : { },
  "volumeName" : "65814-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-06-0...</msg>
<status status="PASS" starttime="20220602 01:12:31.247" endtime="20220602 01:12:35.193"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:12:35.195" level="INFO">[ {
  "metadata" : { },
  "volumeName" : "65814-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-06-02T01:11:35.508Z",
  "modificationTime" : "2022-06-02T01:11:35.508Z",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY",
  "owner" : "testuser",
  "link" : false
}, {
  "metadata" : { },
  "volumeName" : "65814-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-06-02T01:10:01.952Z",
  "modificationTime" : "2022-06-02T01:10:01.952Z",
  "sourceVolume" : "65814-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY",
  "owner" : "testuser",
  "link" : true
}, {
  "metadata" : { },
  "volumeName" : "65814-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-06-02T01:09:39.173Z",
  "modificationTime" : "2022-06-02T01:09:58.100Z",
  "sourceVolume" : "65814-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY",
  "owner" : "testuser",
  "link" : true
}, {
  "metadata" : { },
  "volumeName" : "65814-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-06-02T01:11:28.011Z",
  "modificationTime" : "2022-06-02T01:11:28.011Z",
  "sourceVolume" : "65814-source",
  "sourceBucket" : "bucket2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY",
  "owner" : "testuser",
  "link" : true
}, {
  "metadata" : { },
  "volumeName" : "65814-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-06-02T01:12:16.384Z",
  "modificationTime" : "2022-06-02T01:12:16.384Z",
  "sourceVolume" : "65814-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY",
  "owner" : "testuser",
  "link" : true
}, {
  "metadata" : { },
  "volumeName" : "65814-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-06-02T01:12:08.701Z",
  "modificationTime" : "2022-06-02T01:12:08.701Z",
  "sourceVolume" : "65814-target",
  "sourceBucket" : "loop3",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY",
  "owner" : "testuser",
  "link" : true
}, {
  "metadata" : { },
  "volumeName" : "65814-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-06-02T01:12:00.814Z",
  "modificationTime" : "2022-06-02T01:12:00.814Z",
  "sourceVolume" : "65814-target",
  "sourceBucket" : "loop1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY",
  "owner" : "testuser",
  "link" : true
}, {
  "metadata" : { },
  "volumeName" : "65814-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-06-02T01:12:04.883Z",
  "modificationTime" : "2022-06-02T01:12:04.883Z",
  "sourceVolume" : "65814-target",
  "sourceBucket" : "loop2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY",
  "owner" : "testuser",
  "link" : true
}, {
  "metadata" : { },
  "volumeName" : "65814-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-06-02T01:09:31.671Z",
  "modificationTime" : "2022-06-02T01:09:54.345Z",
  "sourceVolume" : "65814-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY",
  "owner" : "testuser",
  "link" : true
}, {
  "metadata" : { },
  "volumeName" : "65814-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-06-02T01:09:35.369Z",
  "modificationTime" : "2022-06-02T01:09:35.369Z",
  "sourceVolume" : "65814-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY",
  "owner" : "testuser",
  "link" : true
} ]</msg>
<status status="PASS" starttime="20220602 01:12:35.194" endtime="20220602 01:12:35.195"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:12:35.196" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:12:35.195" endtime="20220602 01:12:35.196"/>
</kw>
<status status="PASS" starttime="20220602 01:12:31.246" endtime="20220602 01:12:35.196"/>
</kw>
<msg timestamp="20220602 01:12:35.196" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:12:31.246" endtime="20220602 01:12:35.197"/>
</kw>
<msg timestamp="20220602 01:12:35.197" level="INFO">${bucket_list} = [ {
  "metadata" : { },
  "volumeName" : "65814-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-06-0...</msg>
<status status="PASS" starttime="20220602 01:12:31.245" endtime="20220602 01:12:35.197"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${bucket_list}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220602 01:12:35.197" endtime="20220602 01:12:35.197"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:12:35.201" level="INFO">Running command 'ozone sh key list 65814-source/bucket1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:12:38.995" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:12:38.995" level="INFO">${output} = key1
key3</msg>
<status status="PASS" starttime="20220602 01:12:35.199" endtime="20220602 01:12:38.995"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:12:38.996" level="INFO">key1
key3</msg>
<status status="PASS" starttime="20220602 01:12:38.996" endtime="20220602 01:12:38.996"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:12:38.997" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:12:38.996" endtime="20220602 01:12:38.997"/>
</kw>
<status status="PASS" starttime="20220602 01:12:35.198" endtime="20220602 01:12:38.997"/>
</kw>
<msg timestamp="20220602 01:12:38.997" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:12:35.198" endtime="20220602 01:12:38.998"/>
</kw>
<msg timestamp="20220602 01:12:38.998" level="INFO">${source_list} = key1
key3</msg>
<status status="PASS" starttime="20220602 01:12:35.197" endtime="20220602 01:12:38.998"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220602 01:12:38.998" endtime="20220602 01:12:38.998"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220602 01:12:27.605" endtime="20220602 01:12:38.999"/>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="PASS" starttime="20220602 01:09:06.424" endtime="20220602 01:12:39.000"/>
</suite>
<suite id="s1-s1-s4" name="Ozone-Shell-Single" source="/opt/hadoop/smoketest/basic/ozone-shell-single.robot">
<kw name="Generate prefix" library="ozone-shell-lib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220602 01:12:39.023" level="INFO">${random} = 33600</msg>
<status status="PASS" starttime="20220602 01:12:39.023" endtime="20220602 01:12:39.023"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220602 01:12:39.024" level="INFO">${prefix} = 33600</msg>
<status status="PASS" starttime="20220602 01:12:39.023" endtime="20220602 01:12:39.024"/>
</kw>
<status status="PASS" starttime="20220602 01:12:39.022" endtime="20220602 01:12:39.024"/>
</kw>
<test id="s1-s1-s4-t1" name="Test ozone shell">
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-without-scheme</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:12:39.029" level="INFO">Running command 'ozone sh volume info /33600-without-scheme 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:12:42.571" level="INFO">${rc} = 255</msg>
<msg timestamp="20220602 01:12:42.571" level="INFO">${output} = VOLUME_NOT_FOUND Volume 33600-without-scheme is not found</msg>
<status status="PASS" starttime="20220602 01:12:39.027" endtime="20220602 01:12:42.571"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:12:42.572" level="INFO">VOLUME_NOT_FOUND Volume 33600-without-scheme is not found</msg>
<status status="PASS" starttime="20220602 01:12:42.571" endtime="20220602 01:12:42.572"/>
</kw>
<msg timestamp="20220602 01:12:42.572" level="INFO">${result} = VOLUME_NOT_FOUND Volume 33600-without-scheme is not found</msg>
<status status="PASS" starttime="20220602 01:12:39.026" endtime="20220602 01:12:42.572"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220602 01:12:42.573" endtime="20220602 01:12:42.573"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:12:42.576" level="INFO">Running command 'ozone sh volume create /33600-without-scheme --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:12:46.962" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:12:46.962" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:12:42.574" endtime="20220602 01:12:46.962"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:12:46.964" level="INFO"/>
<status status="PASS" starttime="20220602 01:12:46.963" endtime="20220602 01:12:46.964"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:12:46.965" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:12:46.964" endtime="20220602 01:12:46.965"/>
</kw>
<status status="PASS" starttime="20220602 01:12:42.574" endtime="20220602 01:12:46.965"/>
</kw>
<msg timestamp="20220602 01:12:46.965" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:12:42.574" endtime="20220602 01:12:46.966"/>
</kw>
<msg timestamp="20220602 01:12:46.966" level="INFO">${result} = </msg>
<status status="PASS" starttime="20220602 01:12:42.573" endtime="20220602 01:12:46.966"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220602 01:12:46.966" endtime="20220602 01:12:46.966"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:12:46.971" level="INFO">Running command 'ozone sh volume list / | jq -r '.[] | select(.name=="33600-without-scheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:12:50.811" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:12:50.811" level="INFO">${output} = {
  "metadata": {},
  "name": "33600-without-scheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime"...</msg>
<status status="PASS" starttime="20220602 01:12:46.968" endtime="20220602 01:12:50.811"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:12:50.812" level="INFO">{
  "metadata": {},
  "name": "33600-without-scheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2022-06-02T01:12:46.765Z",
  "modificationTime": "2022-06-02T01:12:46.765Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "refCount": 0
}</msg>
<status status="PASS" starttime="20220602 01:12:50.812" endtime="20220602 01:12:50.812"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:12:50.813" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:12:50.813" endtime="20220602 01:12:50.813"/>
</kw>
<status status="PASS" starttime="20220602 01:12:46.968" endtime="20220602 01:12:50.813"/>
</kw>
<msg timestamp="20220602 01:12:50.813" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:12:46.968" endtime="20220602 01:12:50.814"/>
</kw>
<msg timestamp="20220602 01:12:50.814" level="INFO">${result} = {
  "metadata": {},
  "name": "33600-without-scheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime"...</msg>
<status status="PASS" starttime="20220602 01:12:46.967" endtime="20220602 01:12:50.814"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220602 01:12:50.814" endtime="20220602 01:12:50.814"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:12:50.818" level="INFO">Running command 'ozone sh volume list | jq -r '.[] | select(.name=="33600-without-scheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:12:54.708" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:12:54.708" level="INFO">${output} = {
  "metadata": {},
  "name": "33600-without-scheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime"...</msg>
<status status="PASS" starttime="20220602 01:12:50.816" endtime="20220602 01:12:54.708"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:12:54.709" level="INFO">{
  "metadata": {},
  "name": "33600-without-scheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2022-06-02T01:12:46.765Z",
  "modificationTime": "2022-06-02T01:12:46.765Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "refCount": 0
}</msg>
<status status="PASS" starttime="20220602 01:12:54.708" endtime="20220602 01:12:54.709"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:12:54.710" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:12:54.710" endtime="20220602 01:12:54.710"/>
</kw>
<status status="PASS" starttime="20220602 01:12:50.816" endtime="20220602 01:12:54.710"/>
</kw>
<msg timestamp="20220602 01:12:54.711" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:12:50.816" endtime="20220602 01:12:54.711"/>
</kw>
<msg timestamp="20220602 01:12:54.711" level="INFO">${result} = {
  "metadata": {},
  "name": "33600-without-scheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime"...</msg>
<status status="PASS" starttime="20220602 01:12:50.815" endtime="20220602 01:12:54.711"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220602 01:12:54.712" endtime="20220602 01:12:54.712"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:12:54.717" level="INFO">Running command 'ozone sh volume setquota /33600-without-scheme --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:12:58.355" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:12:58.355" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:12:54.713" endtime="20220602 01:12:58.355"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:12:58.356" level="INFO"/>
<status status="PASS" starttime="20220602 01:12:58.355" endtime="20220602 01:12:58.356"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:12:58.357" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:12:58.356" endtime="20220602 01:12:58.357"/>
</kw>
<status status="PASS" starttime="20220602 01:12:54.713" endtime="20220602 01:12:58.357"/>
</kw>
<msg timestamp="20220602 01:12:58.357" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:12:54.713" endtime="20220602 01:12:58.358"/>
</kw>
<status status="PASS" starttime="20220602 01:12:54.712" endtime="20220602 01:12:58.358"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:12:58.362" level="INFO">Running command 'ozone sh volume info /33600-without-scheme | jq -r '. | select(.name=="33600-without-scheme") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:13:02.027" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:13:02.027" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20220602 01:12:58.359" endtime="20220602 01:13:02.027"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:13:02.028" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20220602 01:13:02.027" endtime="20220602 01:13:02.028"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:13:02.028" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:13:02.028" endtime="20220602 01:13:02.028"/>
</kw>
<status status="PASS" starttime="20220602 01:12:58.359" endtime="20220602 01:13:02.029"/>
</kw>
<msg timestamp="20220602 01:13:02.029" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:12:58.359" endtime="20220602 01:13:02.029"/>
</kw>
<msg timestamp="20220602 01:13:02.029" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20220602 01:12:58.358" endtime="20220602 01:13:02.030"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220602 01:13:02.030" endtime="20220602 01:13:02.030"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:13:02.034" level="INFO">Running command 'ozone sh bucket create /33600-without-scheme/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:13:05.737" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:13:05.737" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:13:02.031" endtime="20220602 01:13:05.737"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:13:05.738" level="INFO"/>
<status status="PASS" starttime="20220602 01:13:05.737" endtime="20220602 01:13:05.738"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:13:05.739" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:13:05.738" endtime="20220602 01:13:05.739"/>
</kw>
<status status="PASS" starttime="20220602 01:13:02.031" endtime="20220602 01:13:05.739"/>
</kw>
<msg timestamp="20220602 01:13:05.739" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:13:02.031" endtime="20220602 01:13:05.739"/>
</kw>
<status status="PASS" starttime="20220602 01:13:02.030" endtime="20220602 01:13:05.740"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:13:05.744" level="INFO">Running command 'ozone sh bucket info /33600-without-scheme/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:13:09.436" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:13:09.436" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20220602 01:13:05.741" endtime="20220602 01:13:09.436"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:13:09.437" level="INFO">DISK</msg>
<status status="PASS" starttime="20220602 01:13:09.436" endtime="20220602 01:13:09.437"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:13:09.438" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:13:09.437" endtime="20220602 01:13:09.438"/>
</kw>
<status status="PASS" starttime="20220602 01:13:05.741" endtime="20220602 01:13:09.438"/>
</kw>
<msg timestamp="20220602 01:13:09.438" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:13:05.741" endtime="20220602 01:13:09.439"/>
</kw>
<msg timestamp="20220602 01:13:09.439" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20220602 01:13:05.740" endtime="20220602 01:13:09.439"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220602 01:13:09.440" endtime="20220602 01:13:09.440"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:13:09.444" level="INFO">Running command 'ozone sh bucket info /33600-without-scheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:13:13.272" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:13:13.272" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20220602 01:13:09.442" endtime="20220602 01:13:13.272"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:13:13.273" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20220602 01:13:13.273" endtime="20220602 01:13:13.273"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:13:13.274" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:13:13.274" endtime="20220602 01:13:13.274"/>
</kw>
<status status="PASS" starttime="20220602 01:13:09.441" endtime="20220602 01:13:13.274"/>
</kw>
<msg timestamp="20220602 01:13:13.274" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:13:09.441" endtime="20220602 01:13:13.275"/>
</kw>
<msg timestamp="20220602 01:13:13.275" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20220602 01:13:09.440" endtime="20220602 01:13:13.275"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220602 01:13:13.275" endtime="20220602 01:13:13.276"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:13:13.280" level="INFO">Running command 'ozone sh bucket info /33600-without-scheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:13:17.999" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:13:17.999" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20220602 01:13:13.278" endtime="20220602 01:13:17.999"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:13:18.000" level="INFO">100</msg>
<status status="PASS" starttime="20220602 01:13:17.999" endtime="20220602 01:13:18.000"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:13:18.001" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:13:18.000" endtime="20220602 01:13:18.001"/>
</kw>
<status status="PASS" starttime="20220602 01:13:13.277" endtime="20220602 01:13:18.001"/>
</kw>
<msg timestamp="20220602 01:13:18.001" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:13:13.277" endtime="20220602 01:13:18.001"/>
</kw>
<msg timestamp="20220602 01:13:18.002" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20220602 01:13:13.276" endtime="20220602 01:13:18.002"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220602 01:13:18.002" endtime="20220602 01:13:18.002"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:13:18.006" level="INFO">Running command 'ozone sh bucket setquota /33600-without-scheme/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:13:21.709" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:13:21.709" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:13:18.004" endtime="20220602 01:13:21.709"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:13:21.710" level="INFO"/>
<status status="PASS" starttime="20220602 01:13:21.710" endtime="20220602 01:13:21.710"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:13:21.711" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:13:21.711" endtime="20220602 01:13:21.711"/>
</kw>
<status status="PASS" starttime="20220602 01:13:18.003" endtime="20220602 01:13:21.712"/>
</kw>
<msg timestamp="20220602 01:13:21.712" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:13:18.003" endtime="20220602 01:13:21.712"/>
</kw>
<status status="PASS" starttime="20220602 01:13:18.002" endtime="20220602 01:13:21.712"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:13:21.716" level="INFO">Running command 'ozone sh bucket info /33600-without-scheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:13:25.754" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:13:25.754" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20220602 01:13:21.714" endtime="20220602 01:13:25.755"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:13:25.756" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20220602 01:13:25.755" endtime="20220602 01:13:25.756"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:13:25.756" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:13:25.756" endtime="20220602 01:13:25.756"/>
</kw>
<status status="PASS" starttime="20220602 01:13:21.714" endtime="20220602 01:13:25.757"/>
</kw>
<msg timestamp="20220602 01:13:25.757" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:13:21.713" endtime="20220602 01:13:25.757"/>
</kw>
<msg timestamp="20220602 01:13:25.757" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20220602 01:13:21.712" endtime="20220602 01:13:25.757"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220602 01:13:25.758" endtime="20220602 01:13:25.758"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:13:25.762" level="INFO">Running command 'ozone sh bucket info /33600-without-scheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:13:29.774" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:13:29.774" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20220602 01:13:25.760" endtime="20220602 01:13:29.774"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:13:29.776" level="INFO">1000</msg>
<status status="PASS" starttime="20220602 01:13:29.775" endtime="20220602 01:13:29.776"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:13:29.776" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:13:29.776" endtime="20220602 01:13:29.776"/>
</kw>
<status status="PASS" starttime="20220602 01:13:25.759" endtime="20220602 01:13:29.777"/>
</kw>
<msg timestamp="20220602 01:13:29.777" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:13:25.759" endtime="20220602 01:13:29.777"/>
</kw>
<msg timestamp="20220602 01:13:29.777" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20220602 01:13:25.758" endtime="20220602 01:13:29.777"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220602 01:13:29.778" endtime="20220602 01:13:29.778"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '.[] | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:13:29.782" level="INFO">Running command 'ozone sh bucket list /33600-without-scheme/ | jq -r '.[] | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:13:33.491" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:13:33.491" level="INFO">${output} = 33600-without-scheme</msg>
<status status="PASS" starttime="20220602 01:13:29.780" endtime="20220602 01:13:33.491"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:13:33.492" level="INFO">33600-without-scheme</msg>
<status status="PASS" starttime="20220602 01:13:33.491" endtime="20220602 01:13:33.492"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:13:33.493" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:13:33.492" endtime="20220602 01:13:33.493"/>
</kw>
<status status="PASS" starttime="20220602 01:13:29.779" endtime="20220602 01:13:33.493"/>
</kw>
<msg timestamp="20220602 01:13:33.493" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:13:29.779" endtime="20220602 01:13:33.494"/>
</kw>
<msg timestamp="20220602 01:13:33.494" level="INFO">${result} = 33600-without-scheme</msg>
<status status="PASS" starttime="20220602 01:13:29.778" endtime="20220602 01:13:33.494"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220602 01:13:33.494" endtime="20220602 01:13:33.494"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:13:33.499" level="INFO">Running command 'ozone sh key put /33600-without-scheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:13:39.681" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:13:39.681" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:13:33.497" endtime="20220602 01:13:39.681"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:13:39.682" level="INFO"/>
<status status="PASS" starttime="20220602 01:13:39.681" endtime="20220602 01:13:39.682"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:13:39.683" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:13:39.682" endtime="20220602 01:13:39.683"/>
</kw>
<status status="PASS" starttime="20220602 01:13:33.496" endtime="20220602 01:13:39.683"/>
</kw>
<msg timestamp="20220602 01:13:39.683" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:13:33.496" endtime="20220602 01:13:39.684"/>
</kw>
<status status="PASS" starttime="20220602 01:13:33.495" endtime="20220602 01:13:39.684"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:13:39.687" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:13:39.690" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:13:39.690" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:13:39.685" endtime="20220602 01:13:39.690"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:13:39.691" level="INFO"/>
<status status="PASS" starttime="20220602 01:13:39.690" endtime="20220602 01:13:39.691"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:13:39.692" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:13:39.691" endtime="20220602 01:13:39.692"/>
</kw>
<status status="PASS" starttime="20220602 01:13:39.685" endtime="20220602 01:13:39.692"/>
</kw>
<msg timestamp="20220602 01:13:39.692" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:13:39.685" endtime="20220602 01:13:39.693"/>
</kw>
<status status="PASS" starttime="20220602 01:13:39.684" endtime="20220602 01:13:39.693"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:13:39.696" level="INFO">Running command 'ozone sh key get /33600-without-scheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:13:45.344" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:13:45.344" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:13:39.694" endtime="20220602 01:13:45.344"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:13:45.345" level="INFO"/>
<status status="PASS" starttime="20220602 01:13:45.344" endtime="20220602 01:13:45.345"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:13:45.346" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:13:45.345" endtime="20220602 01:13:45.346"/>
</kw>
<status status="PASS" starttime="20220602 01:13:39.694" endtime="20220602 01:13:45.346"/>
</kw>
<msg timestamp="20220602 01:13:45.346" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:13:39.694" endtime="20220602 01:13:45.347"/>
</kw>
<status status="PASS" starttime="20220602 01:13:39.693" endtime="20220602 01:13:45.347"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:13:45.351" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:13:45.353" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:13:45.353" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:13:45.349" endtime="20220602 01:13:45.353"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:13:45.354" level="INFO"/>
<status status="PASS" starttime="20220602 01:13:45.353" endtime="20220602 01:13:45.354"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:13:45.355" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:13:45.354" endtime="20220602 01:13:45.355"/>
</kw>
<status status="PASS" starttime="20220602 01:13:45.348" endtime="20220602 01:13:45.355"/>
</kw>
<msg timestamp="20220602 01:13:45.355" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:13:45.348" endtime="20220602 01:13:45.356"/>
</kw>
<status status="PASS" starttime="20220602 01:13:45.347" endtime="20220602 01:13:45.356"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:13:45.359" level="INFO">Running command 'ozone sh key put -t RATIS /33600-without-scheme/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:13:51.391" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:13:51.391" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:13:45.357" endtime="20220602 01:13:51.391"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:13:51.392" level="INFO"/>
<status status="PASS" starttime="20220602 01:13:51.392" endtime="20220602 01:13:51.392"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:13:51.393" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:13:51.393" endtime="20220602 01:13:51.393"/>
</kw>
<status status="PASS" starttime="20220602 01:13:45.357" endtime="20220602 01:13:51.394"/>
</kw>
<msg timestamp="20220602 01:13:51.394" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:13:45.357" endtime="20220602 01:13:51.394"/>
</kw>
<status status="PASS" starttime="20220602 01:13:45.356" endtime="20220602 01:13:51.395"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:13:51.398" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:13:51.400" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:13:51.400" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:13:51.396" endtime="20220602 01:13:51.400"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:13:51.401" level="INFO"/>
<status status="PASS" starttime="20220602 01:13:51.401" endtime="20220602 01:13:51.401"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:13:51.402" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:13:51.401" endtime="20220602 01:13:51.402"/>
</kw>
<status status="PASS" starttime="20220602 01:13:51.395" endtime="20220602 01:13:51.402"/>
</kw>
<msg timestamp="20220602 01:13:51.402" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:13:51.395" endtime="20220602 01:13:51.403"/>
</kw>
<status status="PASS" starttime="20220602 01:13:51.395" endtime="20220602 01:13:51.403"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:13:51.407" level="INFO">Running command 'ozone sh key get /33600-without-scheme/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:13:56.811" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:13:56.811" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:13:51.405" endtime="20220602 01:13:56.812"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:13:56.813" level="INFO"/>
<status status="PASS" starttime="20220602 01:13:56.812" endtime="20220602 01:13:56.813"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:13:56.813" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:13:56.813" endtime="20220602 01:13:56.813"/>
</kw>
<status status="PASS" starttime="20220602 01:13:51.404" endtime="20220602 01:13:56.814"/>
</kw>
<msg timestamp="20220602 01:13:56.814" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:13:51.404" endtime="20220602 01:13:56.814"/>
</kw>
<status status="PASS" starttime="20220602 01:13:51.403" endtime="20220602 01:13:56.814"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:13:56.818" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:13:56.820" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:13:56.820" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:13:56.816" endtime="20220602 01:13:56.820"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:13:56.821" level="INFO"/>
<status status="PASS" starttime="20220602 01:13:56.821" endtime="20220602 01:13:56.822"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:13:56.822" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:13:56.822" endtime="20220602 01:13:56.822"/>
</kw>
<status status="PASS" starttime="20220602 01:13:56.815" endtime="20220602 01:13:56.822"/>
</kw>
<msg timestamp="20220602 01:13:56.822" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:13:56.815" endtime="20220602 01:13:56.823"/>
</kw>
<status status="PASS" starttime="20220602 01:13:56.814" endtime="20220602 01:13:56.823"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:13:56.826" level="INFO">Running command 'ozone sh key info /33600-without-scheme/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:14:00.875" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:14:00.875" level="INFO">${output} = {
  "volumeName": "33600-without-scheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17526,
  "creationTime": "2022-06-02T01:13:49.117Z",
  "modificationTime": "2022-06-02T01:13:50.9...</msg>
<status status="PASS" starttime="20220602 01:13:56.825" endtime="20220602 01:14:00.875"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:14:00.876" level="INFO">{
  "volumeName": "33600-without-scheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17526,
  "creationTime": "2022-06-02T01:13:49.117Z",
  "modificationTime": "2022-06-02T01:13:50.981Z",
  "replicationConfig": {
    "replicationFactor": "THREE",
    "requiredNodes": 3,
    "replicationType": "RATIS"
  },
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 109611004723200000,
      "length": 17526,
      "offset": 0,
      "keyOffset": 0
    }
  ],
  "metadata": {}
}</msg>
<status status="PASS" starttime="20220602 01:14:00.876" endtime="20220602 01:14:00.877"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:14:00.877" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:14:00.877" endtime="20220602 01:14:00.877"/>
</kw>
<status status="PASS" starttime="20220602 01:13:56.824" endtime="20220602 01:14:00.878"/>
</kw>
<msg timestamp="20220602 01:14:00.878" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:13:56.824" endtime="20220602 01:14:00.878"/>
</kw>
<msg timestamp="20220602 01:14:00.879" level="INFO">${result} = {
  "volumeName": "33600-without-scheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17526,
  "creationTime": "2022-06-02T01:13:49.117Z",
  "modificationTime": "2022-06-02T01:13:50.9...</msg>
<status status="PASS" starttime="20220602 01:13:56.823" endtime="20220602 01:14:00.879"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220602 01:14:00.879" endtime="20220602 01:14:00.879"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:14:00.884" level="INFO">Running command 'ozone sh key delete /33600-without-scheme/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:14:04.538" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:14:04.538" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:14:00.881" endtime="20220602 01:14:04.538"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:14:04.540" level="INFO"/>
<status status="PASS" starttime="20220602 01:14:04.539" endtime="20220602 01:14:04.540"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:14:04.540" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:14:04.540" endtime="20220602 01:14:04.540"/>
</kw>
<status status="PASS" starttime="20220602 01:14:00.880" endtime="20220602 01:14:04.541"/>
</kw>
<msg timestamp="20220602 01:14:04.541" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:14:00.880" endtime="20220602 01:14:04.541"/>
</kw>
<status status="PASS" starttime="20220602 01:14:00.879" endtime="20220602 01:14:04.541"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:14:04.545" level="INFO">Running command 'ozone sh key cp /33600-without-scheme/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:14:10.878" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:14:10.878" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:14:04.543" endtime="20220602 01:14:10.878"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:14:10.879" level="INFO"/>
<status status="PASS" starttime="20220602 01:14:10.879" endtime="20220602 01:14:10.879"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:14:10.881" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:14:10.880" endtime="20220602 01:14:10.881"/>
</kw>
<status status="PASS" starttime="20220602 01:14:04.542" endtime="20220602 01:14:10.881"/>
</kw>
<msg timestamp="20220602 01:14:10.881" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:14:04.542" endtime="20220602 01:14:10.882"/>
</kw>
<status status="PASS" starttime="20220602 01:14:04.542" endtime="20220602 01:14:10.882"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:14:10.885" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:14:10.888" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:14:10.888" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:14:10.883" endtime="20220602 01:14:10.888"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:14:10.889" level="INFO"/>
<status status="PASS" starttime="20220602 01:14:10.888" endtime="20220602 01:14:10.889"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:14:10.889" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:14:10.889" endtime="20220602 01:14:10.889"/>
</kw>
<status status="PASS" starttime="20220602 01:14:10.883" endtime="20220602 01:14:10.889"/>
</kw>
<msg timestamp="20220602 01:14:10.889" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:14:10.883" endtime="20220602 01:14:10.890"/>
</kw>
<status status="PASS" starttime="20220602 01:14:10.882" endtime="20220602 01:14:10.890"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:14:10.893" level="INFO">Running command 'ozone sh key get /33600-without-scheme/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:14:16.572" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:14:16.572" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:14:10.891" endtime="20220602 01:14:16.572"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:14:16.574" level="INFO"/>
<status status="PASS" starttime="20220602 01:14:16.573" endtime="20220602 01:14:16.574"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:14:16.574" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:14:16.574" endtime="20220602 01:14:16.574"/>
</kw>
<status status="PASS" starttime="20220602 01:14:10.891" endtime="20220602 01:14:16.575"/>
</kw>
<msg timestamp="20220602 01:14:16.575" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:14:10.891" endtime="20220602 01:14:16.575"/>
</kw>
<status status="PASS" starttime="20220602 01:14:10.890" endtime="20220602 01:14:16.576"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:14:16.579" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:14:16.581" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:14:16.582" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:14:16.577" endtime="20220602 01:14:16.582"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:14:16.583" level="INFO"/>
<status status="PASS" starttime="20220602 01:14:16.582" endtime="20220602 01:14:16.583"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:14:16.583" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:14:16.583" endtime="20220602 01:14:16.583"/>
</kw>
<status status="PASS" starttime="20220602 01:14:16.576" endtime="20220602 01:14:16.584"/>
</kw>
<msg timestamp="20220602 01:14:16.584" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:14:16.576" endtime="20220602 01:14:16.584"/>
</kw>
<status status="PASS" starttime="20220602 01:14:16.576" endtime="20220602 01:14:16.585"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:14:16.588" level="INFO">Running command 'ozone sh key delete /33600-without-scheme/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:14:20.143" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:14:20.143" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:14:16.586" endtime="20220602 01:14:20.143"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:14:20.145" level="INFO"/>
<status status="PASS" starttime="20220602 01:14:20.144" endtime="20220602 01:14:20.145"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:14:20.145" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:14:20.145" endtime="20220602 01:14:20.145"/>
</kw>
<status status="PASS" starttime="20220602 01:14:16.586" endtime="20220602 01:14:20.146"/>
</kw>
<msg timestamp="20220602 01:14:20.146" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:14:16.585" endtime="20220602 01:14:20.146"/>
</kw>
<status status="PASS" starttime="20220602 01:14:16.585" endtime="20220602 01:14:20.146"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:14:20.149" level="INFO">Running command 'ozone sh key get /33600-without-scheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:14:23.542" level="INFO">${rc} = 255</msg>
<msg timestamp="20220602 01:14:23.542" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20220602 01:14:20.147" endtime="20220602 01:14:23.542"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:14:23.557" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20220602 01:14:23.542" endtime="20220602 01:14:23.557"/>
</kw>
<msg timestamp="20220602 01:14:23.558" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20220602 01:14:20.146" endtime="20220602 01:14:23.558"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220602 01:14:23.558" endtime="20220602 01:14:23.559"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:14:23.562" level="INFO">Running command 'ozone sh key get --force /33600-without-scheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:14:29.218" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:14:29.218" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:14:23.560" endtime="20220602 01:14:29.218"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:14:29.219" level="INFO"/>
<status status="PASS" starttime="20220602 01:14:29.219" endtime="20220602 01:14:29.219"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:14:29.220" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:14:29.220" endtime="20220602 01:14:29.220"/>
</kw>
<status status="PASS" starttime="20220602 01:14:23.560" endtime="20220602 01:14:29.220"/>
</kw>
<msg timestamp="20220602 01:14:29.220" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:14:23.559" endtime="20220602 01:14:29.221"/>
</kw>
<msg timestamp="20220602 01:14:29.221" level="INFO">${result} = </msg>
<status status="PASS" starttime="20220602 01:14:23.559" endtime="20220602 01:14:29.221"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220602 01:14:29.221" endtime="20220602 01:14:29.222"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:14:29.225" level="INFO">Running command 'ozone sh key info /33600-without-scheme/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:14:33.133" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:14:33.133" level="INFO">${output} = {
  "volumeName": "33600-without-scheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17526,
  "creationTime": "2022-06-02T01:13:37.268Z",
  "modificationTime": "2022-06-02T01:13:39.116Z",
...</msg>
<status status="PASS" starttime="20220602 01:14:29.224" endtime="20220602 01:14:33.133"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:14:33.135" level="INFO">{
  "volumeName": "33600-without-scheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17526,
  "creationTime": "2022-06-02T01:13:37.268Z",
  "modificationTime": "2022-06-02T01:13:39.116Z",
  "replicationConfig": {
    "replicationFactor": "ONE",
    "requiredNodes": 1,
    "replicationType": "RATIS"
  },
  "ozoneKeyLocations": [
    {
      "containerID": 2,
      "localID": 109611004723200000,
      "length": 17526,
      "offset": 0,
      "keyOffset": 0
    }
  ],
  "metadata": {}
}</msg>
<status status="PASS" starttime="20220602 01:14:33.134" endtime="20220602 01:14:33.135"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:14:33.135" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:14:33.135" endtime="20220602 01:14:33.136"/>
</kw>
<status status="PASS" starttime="20220602 01:14:29.223" endtime="20220602 01:14:33.136"/>
</kw>
<msg timestamp="20220602 01:14:33.136" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:14:29.223" endtime="20220602 01:14:33.137"/>
</kw>
<msg timestamp="20220602 01:14:33.137" level="INFO">${result} = {
  "volumeName": "33600-without-scheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17526,
  "creationTime": "2022-06-02T01:13:37.268Z",
  "modificationTime": "2022-06-02T01:13:39.116Z",
...</msg>
<status status="PASS" starttime="20220602 01:14:29.222" endtime="20220602 01:14:33.137"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220602 01:14:33.137" endtime="20220602 01:14:33.137"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[] | select(.name=="key1") | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:14:33.142" level="INFO">Running command 'ozone sh key list /33600-without-scheme/bb1 | jq -r '.[] | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:14:37.055" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:14:37.055" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20220602 01:14:33.139" endtime="20220602 01:14:37.055"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:14:37.056" level="INFO">key1</msg>
<status status="PASS" starttime="20220602 01:14:37.056" endtime="20220602 01:14:37.057"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:14:37.057" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:14:37.057" endtime="20220602 01:14:37.057"/>
</kw>
<status status="PASS" starttime="20220602 01:14:33.139" endtime="20220602 01:14:37.058"/>
</kw>
<msg timestamp="20220602 01:14:37.058" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:14:33.138" endtime="20220602 01:14:37.058"/>
</kw>
<msg timestamp="20220602 01:14:37.058" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20220602 01:14:33.138" endtime="20220602 01:14:37.058"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220602 01:14:37.059" endtime="20220602 01:14:37.059"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:14:37.063" level="INFO">Running command 'ozone sh key rename /33600-without-scheme/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:14:40.742" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:14:40.742" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:14:37.061" endtime="20220602 01:14:40.742"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:14:40.743" level="INFO"/>
<status status="PASS" starttime="20220602 01:14:40.743" endtime="20220602 01:14:40.743"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:14:40.744" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:14:40.744" endtime="20220602 01:14:40.744"/>
</kw>
<status status="PASS" starttime="20220602 01:14:37.060" endtime="20220602 01:14:40.744"/>
</kw>
<msg timestamp="20220602 01:14:40.744" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:14:37.060" endtime="20220602 01:14:40.745"/>
</kw>
<status status="PASS" starttime="20220602 01:14:37.059" endtime="20220602 01:14:40.745"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:14:40.749" level="INFO">Running command 'ozone sh key list /33600-without-scheme/bb1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:14:44.564" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:14:44.564" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20220602 01:14:40.747" endtime="20220602 01:14:44.564"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:14:44.565" level="INFO">key2</msg>
<status status="PASS" starttime="20220602 01:14:44.565" endtime="20220602 01:14:44.565"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:14:44.566" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:14:44.565" endtime="20220602 01:14:44.566"/>
</kw>
<status status="PASS" starttime="20220602 01:14:40.746" endtime="20220602 01:14:44.566"/>
</kw>
<msg timestamp="20220602 01:14:44.566" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:14:40.746" endtime="20220602 01:14:44.567"/>
</kw>
<msg timestamp="20220602 01:14:44.567" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20220602 01:14:40.745" endtime="20220602 01:14:44.567"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220602 01:14:44.567" endtime="20220602 01:14:44.568"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:14:44.571" level="INFO">Running command 'ozone sh key delete /33600-without-scheme/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:14:48.286" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:14:48.286" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:14:44.569" endtime="20220602 01:14:48.286"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:14:48.287" level="INFO"/>
<status status="PASS" starttime="20220602 01:14:48.286" endtime="20220602 01:14:48.287"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:14:48.288" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:14:48.287" endtime="20220602 01:14:48.288"/>
</kw>
<status status="PASS" starttime="20220602 01:14:44.569" endtime="20220602 01:14:48.288"/>
</kw>
<msg timestamp="20220602 01:14:48.288" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:14:44.568" endtime="20220602 01:14:48.289"/>
</kw>
<status status="PASS" starttime="20220602 01:14:44.568" endtime="20220602 01:14:48.289"/>
</kw>
<status status="PASS" starttime="20220602 01:13:33.495" endtime="20220602 01:14:48.289"/>
</kw>
<status status="PASS" starttime="20220602 01:13:33.495" endtime="20220602 01:14:48.289"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:14:48.292" level="INFO">Running command 'ozone sh volume clrquota --space-quota /33600-without-scheme 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:14:51.862" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:14:51.862" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:14:48.290" endtime="20220602 01:14:51.862"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:14:51.863" level="INFO"/>
<status status="PASS" starttime="20220602 01:14:51.862" endtime="20220602 01:14:51.863"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:14:51.864" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:14:51.863" endtime="20220602 01:14:51.864"/>
</kw>
<status status="PASS" starttime="20220602 01:14:48.290" endtime="20220602 01:14:51.864"/>
</kw>
<msg timestamp="20220602 01:14:51.865" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:14:48.290" endtime="20220602 01:14:51.865"/>
</kw>
<status status="PASS" starttime="20220602 01:14:48.289" endtime="20220602 01:14:51.865"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:14:51.869" level="INFO">Running command 'ozone sh volume info /33600-without-scheme | jq -r '. | select(.name=="33600-without-scheme") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:14:55.875" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:14:55.875" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20220602 01:14:51.867" endtime="20220602 01:14:55.875"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:14:55.876" level="INFO">-1</msg>
<status status="PASS" starttime="20220602 01:14:55.875" endtime="20220602 01:14:55.876"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:14:55.877" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:14:55.876" endtime="20220602 01:14:55.877"/>
</kw>
<status status="PASS" starttime="20220602 01:14:51.866" endtime="20220602 01:14:55.877"/>
</kw>
<msg timestamp="20220602 01:14:55.877" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:14:51.866" endtime="20220602 01:14:55.877"/>
</kw>
<msg timestamp="20220602 01:14:55.878" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20220602 01:14:51.865" endtime="20220602 01:14:55.878"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220602 01:14:55.878" endtime="20220602 01:14:55.878"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:14:55.882" level="INFO">Running command 'ozone sh volume clrquota --namespace-quota /33600-without-scheme 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:14:59.318" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:14:59.318" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:14:55.880" endtime="20220602 01:14:59.318"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:14:59.319" level="INFO"/>
<status status="PASS" starttime="20220602 01:14:59.318" endtime="20220602 01:14:59.319"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:14:59.320" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:14:59.319" endtime="20220602 01:14:59.320"/>
</kw>
<status status="PASS" starttime="20220602 01:14:55.879" endtime="20220602 01:14:59.320"/>
</kw>
<msg timestamp="20220602 01:14:59.320" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:14:55.879" endtime="20220602 01:14:59.321"/>
</kw>
<status status="PASS" starttime="20220602 01:14:55.878" endtime="20220602 01:14:59.321"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:14:59.325" level="INFO">Running command 'ozone sh volume info /33600-without-scheme | jq -r '. | select(.name=="33600-without-scheme") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:15:03.174" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:15:03.174" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20220602 01:14:59.323" endtime="20220602 01:15:03.174"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:15:03.176" level="INFO">-1</msg>
<status status="PASS" starttime="20220602 01:15:03.175" endtime="20220602 01:15:03.176"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:15:03.176" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:15:03.176" endtime="20220602 01:15:03.176"/>
</kw>
<status status="PASS" starttime="20220602 01:14:59.322" endtime="20220602 01:15:03.177"/>
</kw>
<msg timestamp="20220602 01:15:03.177" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:14:59.322" endtime="20220602 01:15:03.177"/>
</kw>
<msg timestamp="20220602 01:15:03.177" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20220602 01:14:59.321" endtime="20220602 01:15:03.177"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220602 01:15:03.177" endtime="20220602 01:15:03.178"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:15:03.181" level="INFO">Running command 'ozone sh bucket clrquota --space-quota /33600-without-scheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:15:06.955" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:15:06.956" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:15:03.179" endtime="20220602 01:15:06.956"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:15:06.957" level="INFO"/>
<status status="PASS" starttime="20220602 01:15:06.956" endtime="20220602 01:15:06.957"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:15:06.957" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:15:06.957" endtime="20220602 01:15:06.957"/>
</kw>
<status status="PASS" starttime="20220602 01:15:03.179" endtime="20220602 01:15:06.958"/>
</kw>
<msg timestamp="20220602 01:15:06.958" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:15:03.179" endtime="20220602 01:15:06.958"/>
</kw>
<status status="PASS" starttime="20220602 01:15:03.178" endtime="20220602 01:15:06.958"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:15:06.963" level="INFO">Running command 'ozone sh bucket info /33600-without-scheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:15:10.837" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:15:10.837" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20220602 01:15:06.961" endtime="20220602 01:15:10.837"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:15:10.838" level="INFO">-1</msg>
<status status="PASS" starttime="20220602 01:15:10.837" endtime="20220602 01:15:10.838"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:15:10.839" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:15:10.838" endtime="20220602 01:15:10.839"/>
</kw>
<status status="PASS" starttime="20220602 01:15:06.960" endtime="20220602 01:15:10.839"/>
</kw>
<msg timestamp="20220602 01:15:10.839" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:15:06.960" endtime="20220602 01:15:10.840"/>
</kw>
<msg timestamp="20220602 01:15:10.840" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20220602 01:15:06.959" endtime="20220602 01:15:10.840"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220602 01:15:10.840" endtime="20220602 01:15:10.840"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:15:10.844" level="INFO">Running command 'ozone sh bucket clrquota --namespace-quota /33600-without-scheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:15:14.405" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:15:14.405" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:15:10.842" endtime="20220602 01:15:14.405"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:15:14.406" level="INFO"/>
<status status="PASS" starttime="20220602 01:15:14.406" endtime="20220602 01:15:14.406"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:15:14.407" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:15:14.407" endtime="20220602 01:15:14.407"/>
</kw>
<status status="PASS" starttime="20220602 01:15:10.841" endtime="20220602 01:15:14.407"/>
</kw>
<msg timestamp="20220602 01:15:14.407" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:15:10.841" endtime="20220602 01:15:14.408"/>
</kw>
<status status="PASS" starttime="20220602 01:15:10.840" endtime="20220602 01:15:14.408"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:15:14.411" level="INFO">Running command 'ozone sh bucket info /33600-without-scheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:15:18.306" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:15:18.306" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20220602 01:15:14.410" endtime="20220602 01:15:18.307"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:15:18.308" level="INFO">-1</msg>
<status status="PASS" starttime="20220602 01:15:18.307" endtime="20220602 01:15:18.308"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:15:18.308" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:15:18.308" endtime="20220602 01:15:18.309"/>
</kw>
<status status="PASS" starttime="20220602 01:15:14.409" endtime="20220602 01:15:18.309"/>
</kw>
<msg timestamp="20220602 01:15:18.309" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:15:14.409" endtime="20220602 01:15:18.309"/>
</kw>
<msg timestamp="20220602 01:15:18.310" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20220602 01:15:14.408" endtime="20220602 01:15:18.310"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220602 01:15:18.310" endtime="20220602 01:15:18.310"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:15:18.313" level="INFO">Running command 'ozone sh bucket delete /33600-without-scheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:15:21.725" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:15:21.725" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:15:18.311" endtime="20220602 01:15:21.725"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:15:21.726" level="INFO"/>
<status status="PASS" starttime="20220602 01:15:21.725" endtime="20220602 01:15:21.726"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:15:21.727" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:15:21.726" endtime="20220602 01:15:21.727"/>
</kw>
<status status="PASS" starttime="20220602 01:15:18.311" endtime="20220602 01:15:21.728"/>
</kw>
<msg timestamp="20220602 01:15:21.728" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:15:18.311" endtime="20220602 01:15:21.728"/>
</kw>
<status status="PASS" starttime="20220602 01:15:18.310" endtime="20220602 01:15:21.728"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:15:21.732" level="INFO">Running command 'ozone sh volume delete /33600-without-scheme 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:15:25.354" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:15:25.354" level="INFO">${output} = Volume 33600-without-scheme is deleted</msg>
<status status="PASS" starttime="20220602 01:15:21.730" endtime="20220602 01:15:25.354"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:15:25.355" level="INFO">Volume 33600-without-scheme is deleted</msg>
<status status="PASS" starttime="20220602 01:15:25.354" endtime="20220602 01:15:25.355"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:15:25.356" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:15:25.356" endtime="20220602 01:15:25.356"/>
</kw>
<status status="PASS" starttime="20220602 01:15:21.729" endtime="20220602 01:15:25.356"/>
</kw>
<msg timestamp="20220602 01:15:25.356" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:15:21.729" endtime="20220602 01:15:25.357"/>
</kw>
<status status="PASS" starttime="20220602 01:15:21.729" endtime="20220602 01:15:25.357"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:15:25.361" level="INFO">Running command 'ozone sh volume create /33600-without-scheme 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:15:28.787" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:15:28.787" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:15:25.359" endtime="20220602 01:15:28.787"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:15:28.788" level="INFO"/>
<status status="PASS" starttime="20220602 01:15:28.788" endtime="20220602 01:15:28.788"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:15:28.789" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:15:28.788" endtime="20220602 01:15:28.789"/>
</kw>
<status status="PASS" starttime="20220602 01:15:25.358" endtime="20220602 01:15:28.789"/>
</kw>
<msg timestamp="20220602 01:15:28.789" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:15:25.358" endtime="20220602 01:15:28.790"/>
</kw>
<status status="PASS" starttime="20220602 01:15:25.358" endtime="20220602 01:15:28.790"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:15:28.794" level="INFO">Running command 'ozone sh volume info /33600-without-scheme | jq -r '. | select(.name=="33600-without-scheme") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:15:32.515" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:15:32.515" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20220602 01:15:28.792" endtime="20220602 01:15:32.515"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:15:32.516" level="INFO">-1</msg>
<status status="PASS" starttime="20220602 01:15:32.515" endtime="20220602 01:15:32.516"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:15:32.517" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:15:32.516" endtime="20220602 01:15:32.517"/>
</kw>
<status status="PASS" starttime="20220602 01:15:28.791" endtime="20220602 01:15:32.517"/>
</kw>
<msg timestamp="20220602 01:15:32.517" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:15:28.791" endtime="20220602 01:15:32.518"/>
</kw>
<msg timestamp="20220602 01:15:32.518" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20220602 01:15:28.790" endtime="20220602 01:15:32.518"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220602 01:15:32.518" endtime="20220602 01:15:32.519"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:15:32.523" level="INFO">Running command 'ozone sh volume info /33600-without-scheme | jq -r '. | select(.name=="33600-without-scheme") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:15:36.485" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:15:36.485" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20220602 01:15:32.520" endtime="20220602 01:15:36.485"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:15:36.486" level="INFO">-1</msg>
<status status="PASS" starttime="20220602 01:15:36.485" endtime="20220602 01:15:36.486"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:15:36.487" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:15:36.486" endtime="20220602 01:15:36.487"/>
</kw>
<status status="PASS" starttime="20220602 01:15:32.520" endtime="20220602 01:15:36.487"/>
</kw>
<msg timestamp="20220602 01:15:36.487" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:15:32.520" endtime="20220602 01:15:36.488"/>
</kw>
<msg timestamp="20220602 01:15:36.488" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20220602 01:15:32.519" endtime="20220602 01:15:36.488"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220602 01:15:36.488" endtime="20220602 01:15:36.488"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:15:36.492" level="INFO">Running command 'ozone sh bucket create /33600-without-scheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:15:40.125" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:15:40.125" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:15:36.490" endtime="20220602 01:15:40.125"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:15:40.126" level="INFO"/>
<status status="PASS" starttime="20220602 01:15:40.125" endtime="20220602 01:15:40.126"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:15:40.127" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:15:40.126" endtime="20220602 01:15:40.127"/>
</kw>
<status status="PASS" starttime="20220602 01:15:36.489" endtime="20220602 01:15:40.128"/>
</kw>
<msg timestamp="20220602 01:15:40.128" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:15:36.489" endtime="20220602 01:15:40.128"/>
</kw>
<status status="PASS" starttime="20220602 01:15:36.488" endtime="20220602 01:15:40.128"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:15:40.132" level="INFO">Running command 'ozone sh bucket info /33600-without-scheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:15:43.656" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:15:43.656" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20220602 01:15:40.130" endtime="20220602 01:15:43.656"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:15:43.657" level="INFO">-1</msg>
<status status="PASS" starttime="20220602 01:15:43.656" endtime="20220602 01:15:43.657"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:15:43.658" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:15:43.657" endtime="20220602 01:15:43.658"/>
</kw>
<status status="PASS" starttime="20220602 01:15:40.130" endtime="20220602 01:15:43.658"/>
</kw>
<msg timestamp="20220602 01:15:43.658" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:15:40.129" endtime="20220602 01:15:43.659"/>
</kw>
<msg timestamp="20220602 01:15:43.659" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20220602 01:15:40.129" endtime="20220602 01:15:43.659"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220602 01:15:43.659" endtime="20220602 01:15:43.659"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:15:43.663" level="INFO">Running command 'ozone sh bucket info /33600-without-scheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:15:47.659" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:15:47.659" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20220602 01:15:43.661" endtime="20220602 01:15:47.660"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:15:47.661" level="INFO">-1</msg>
<status status="PASS" starttime="20220602 01:15:47.660" endtime="20220602 01:15:47.661"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:15:47.661" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:15:47.661" endtime="20220602 01:15:47.661"/>
</kw>
<status status="PASS" starttime="20220602 01:15:43.660" endtime="20220602 01:15:47.662"/>
</kw>
<msg timestamp="20220602 01:15:47.662" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:15:43.660" endtime="20220602 01:15:47.662"/>
</kw>
<msg timestamp="20220602 01:15:47.662" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20220602 01:15:43.659" endtime="20220602 01:15:47.662"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220602 01:15:47.663" endtime="20220602 01:15:47.663"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:15:47.666" level="INFO">Running command 'ozone sh bucket delete /33600-without-scheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:15:51.169" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:15:51.169" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:15:47.664" endtime="20220602 01:15:51.169"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:15:51.170" level="INFO"/>
<status status="PASS" starttime="20220602 01:15:51.169" endtime="20220602 01:15:51.170"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:15:51.171" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:15:51.170" endtime="20220602 01:15:51.171"/>
</kw>
<status status="PASS" starttime="20220602 01:15:47.664" endtime="20220602 01:15:51.171"/>
</kw>
<msg timestamp="20220602 01:15:51.171" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:15:47.664" endtime="20220602 01:15:51.172"/>
</kw>
<status status="PASS" starttime="20220602 01:15:47.663" endtime="20220602 01:15:51.172"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:15:51.175" level="INFO">Running command 'ozone sh volume delete /33600-without-scheme 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:15:54.507" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:15:54.507" level="INFO">${output} = Volume 33600-without-scheme is deleted</msg>
<status status="PASS" starttime="20220602 01:15:51.173" endtime="20220602 01:15:54.507"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:15:54.508" level="INFO">Volume 33600-without-scheme is deleted</msg>
<status status="PASS" starttime="20220602 01:15:54.507" endtime="20220602 01:15:54.508"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:15:54.509" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:15:54.508" endtime="20220602 01:15:54.509"/>
</kw>
<status status="PASS" starttime="20220602 01:15:51.173" endtime="20220602 01:15:54.509"/>
</kw>
<msg timestamp="20220602 01:15:54.509" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:15:51.173" endtime="20220602 01:15:54.509"/>
</kw>
<status status="PASS" starttime="20220602 01:15:51.172" endtime="20220602 01:15:54.510"/>
</kw>
<status status="PASS" starttime="20220602 01:12:39.025" endtime="20220602 01:15:54.510"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220602 01:12:39.024" endtime="20220602 01:15:54.510"/>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="PASS" starttime="20220602 01:12:39.005" endtime="20220602 01:15:54.511"/>
</suite>
<suite id="s1-s1-s5" name="Ozone-Shell" source="/opt/hadoop/smoketest/basic/ozone-shell.robot">
<kw name="Generate prefix" library="ozone-shell-lib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220602 01:15:54.519" level="INFO">${random} = 24354</msg>
<status status="PASS" starttime="20220602 01:15:54.519" endtime="20220602 01:15:54.519"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220602 01:15:54.520" level="INFO">${prefix} = 24354</msg>
<status status="PASS" starttime="20220602 01:15:54.520" endtime="20220602 01:15:54.520"/>
</kw>
<status status="PASS" starttime="20220602 01:15:54.518" endtime="20220602 01:15:54.520"/>
</kw>
<test id="s1-s1-s5-t1" name="RpcClient with port">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:15:54.524" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:15:54.527" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:15:54.528" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220602 01:15:54.523" endtime="20220602 01:15:54.528"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:15:54.528" level="INFO">scm</msg>
<status status="PASS" starttime="20220602 01:15:54.528" endtime="20220602 01:15:54.529"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:15:54.529" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:15:54.529" endtime="20220602 01:15:54.529"/>
</kw>
<status status="PASS" starttime="20220602 01:15:54.522" endtime="20220602 01:15:54.529"/>
</kw>
<msg timestamp="20220602 01:15:54.529" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:15:54.522" endtime="20220602 01:15:54.530"/>
</kw>
<msg timestamp="20220602 01:15:54.530" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220602 01:15:54.521" endtime="20220602 01:15:54.530"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220602 01:15:54.532" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220602 01:15:54.530" endtime="20220602 01:15:54.532"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:15:54.535" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:15:54.541" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:15:54.541" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:15:54.533" endtime="20220602 01:15:54.541"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:15:54.542" level="INFO"/>
<status status="PASS" starttime="20220602 01:15:54.542" endtime="20220602 01:15:54.542"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:15:54.543" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:15:54.543" endtime="20220602 01:15:54.543"/>
</kw>
<status status="PASS" starttime="20220602 01:15:54.533" endtime="20220602 01:15:54.543"/>
</kw>
<msg timestamp="20220602 01:15:54.543" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:15:54.533" endtime="20220602 01:15:54.544"/>
</kw>
<status status="PASS" starttime="20220602 01:15:54.532" endtime="20220602 01:15:54.544"/>
</kw>
<status status="PASS" starttime="20220602 01:15:54.532" endtime="20220602 01:15:54.544"/>
</kw>
<status status="PASS" starttime="20220602 01:15:54.521" endtime="20220602 01:15:54.544"/>
</kw>
<status status="PASS" starttime="20220602 01:15:54.521" endtime="20220602 01:15:54.544"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-with-host</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:15:54.547" level="INFO">Running command 'ozone sh volume info o3://om:9862/24354-with-host 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:15:57.806" level="INFO">${rc} = 255</msg>
<msg timestamp="20220602 01:15:57.806" level="INFO">${output} = VOLUME_NOT_FOUND Volume 24354-with-host is not found</msg>
<status status="PASS" starttime="20220602 01:15:54.545" endtime="20220602 01:15:57.806"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:15:57.807" level="INFO">VOLUME_NOT_FOUND Volume 24354-with-host is not found</msg>
<status status="PASS" starttime="20220602 01:15:57.807" endtime="20220602 01:15:57.807"/>
</kw>
<msg timestamp="20220602 01:15:57.808" level="INFO">${result} = VOLUME_NOT_FOUND Volume 24354-with-host is not found</msg>
<status status="PASS" starttime="20220602 01:15:54.545" endtime="20220602 01:15:57.808"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220602 01:15:57.808" endtime="20220602 01:15:57.808"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:15:57.811" level="INFO">Running command 'ozone sh volume create o3://om:9862/24354-with-host --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:16:01.352" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:16:01.352" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:15:57.810" endtime="20220602 01:16:01.352"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:16:01.353" level="INFO"/>
<status status="PASS" starttime="20220602 01:16:01.352" endtime="20220602 01:16:01.353"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:16:01.354" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:16:01.353" endtime="20220602 01:16:01.354"/>
</kw>
<status status="PASS" starttime="20220602 01:15:57.809" endtime="20220602 01:16:01.354"/>
</kw>
<msg timestamp="20220602 01:16:01.354" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:15:57.809" endtime="20220602 01:16:01.355"/>
</kw>
<msg timestamp="20220602 01:16:01.355" level="INFO">${result} = </msg>
<status status="PASS" starttime="20220602 01:15:57.808" endtime="20220602 01:16:01.355"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220602 01:16:01.355" endtime="20220602 01:16:01.355"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:16:01.359" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '.[] | select(.name=="24354-with-host")' 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:16:05.415" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:16:05.415" level="INFO">${output} = {
  "metadata": {},
  "name": "24354-with-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20220602 01:16:01.357" endtime="20220602 01:16:05.415"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:16:05.417" level="INFO">{
  "metadata": {},
  "name": "24354-with-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2022-06-02T01:16:01.186Z",
  "modificationTime": "2022-06-02T01:16:01.186Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "refCount": 0
}</msg>
<status status="PASS" starttime="20220602 01:16:05.415" endtime="20220602 01:16:05.417"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:16:05.417" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:16:05.417" endtime="20220602 01:16:05.417"/>
</kw>
<status status="PASS" starttime="20220602 01:16:01.357" endtime="20220602 01:16:05.418"/>
</kw>
<msg timestamp="20220602 01:16:05.418" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:16:01.356" endtime="20220602 01:16:05.418"/>
</kw>
<msg timestamp="20220602 01:16:05.418" level="INFO">${result} = {
  "metadata": {},
  "name": "24354-with-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20220602 01:16:01.356" endtime="20220602 01:16:05.418"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220602 01:16:05.419" endtime="20220602 01:16:05.419"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:16:05.423" level="INFO">Running command 'ozone sh volume list | jq -r '.[] | select(.name=="24354-with-host")' 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:16:09.129" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:16:09.129" level="INFO">${output} = {
  "metadata": {},
  "name": "24354-with-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20220602 01:16:05.420" endtime="20220602 01:16:09.129"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:16:09.130" level="INFO">{
  "metadata": {},
  "name": "24354-with-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2022-06-02T01:16:01.186Z",
  "modificationTime": "2022-06-02T01:16:01.186Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "refCount": 0
}</msg>
<status status="PASS" starttime="20220602 01:16:09.129" endtime="20220602 01:16:09.130"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:16:09.131" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:16:09.130" endtime="20220602 01:16:09.131"/>
</kw>
<status status="PASS" starttime="20220602 01:16:05.420" endtime="20220602 01:16:09.131"/>
</kw>
<msg timestamp="20220602 01:16:09.131" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:16:05.420" endtime="20220602 01:16:09.132"/>
</kw>
<msg timestamp="20220602 01:16:09.132" level="INFO">${result} = {
  "metadata": {},
  "name": "24354-with-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20220602 01:16:05.419" endtime="20220602 01:16:09.132"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220602 01:16:09.132" endtime="20220602 01:16:09.132"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:16:09.136" level="INFO">Running command 'ozone sh volume setquota o3://om:9862/24354-with-host --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:16:12.709" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:16:12.709" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:16:09.134" endtime="20220602 01:16:12.709"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:16:12.710" level="INFO"/>
<status status="PASS" starttime="20220602 01:16:12.710" endtime="20220602 01:16:12.710"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:16:12.711" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:16:12.710" endtime="20220602 01:16:12.711"/>
</kw>
<status status="PASS" starttime="20220602 01:16:09.133" endtime="20220602 01:16:12.711"/>
</kw>
<msg timestamp="20220602 01:16:12.711" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:16:09.133" endtime="20220602 01:16:12.712"/>
</kw>
<status status="PASS" starttime="20220602 01:16:09.132" endtime="20220602 01:16:12.712"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:16:12.715" level="INFO">Running command 'ozone sh volume info o3://om:9862/24354-with-host | jq -r '. | select(.name=="24354-with-host") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:16:16.777" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:16:16.777" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20220602 01:16:12.714" endtime="20220602 01:16:16.777"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:16:16.778" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20220602 01:16:16.777" endtime="20220602 01:16:16.778"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:16:16.779" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:16:16.778" endtime="20220602 01:16:16.779"/>
</kw>
<status status="PASS" starttime="20220602 01:16:12.713" endtime="20220602 01:16:16.779"/>
</kw>
<msg timestamp="20220602 01:16:16.779" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:16:12.713" endtime="20220602 01:16:16.780"/>
</kw>
<msg timestamp="20220602 01:16:16.780" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20220602 01:16:12.712" endtime="20220602 01:16:16.780"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220602 01:16:16.780" endtime="20220602 01:16:16.781"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:16:16.784" level="INFO">Running command 'ozone sh bucket create o3://om:9862/24354-with-host/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:16:20.589" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:16:20.589" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:16:16.782" endtime="20220602 01:16:20.589"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:16:20.591" level="INFO"/>
<status status="PASS" starttime="20220602 01:16:20.590" endtime="20220602 01:16:20.591"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:16:20.592" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:16:20.592" endtime="20220602 01:16:20.592"/>
</kw>
<status status="PASS" starttime="20220602 01:16:16.782" endtime="20220602 01:16:20.593"/>
</kw>
<msg timestamp="20220602 01:16:20.593" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:16:16.781" endtime="20220602 01:16:20.593"/>
</kw>
<status status="PASS" starttime="20220602 01:16:16.781" endtime="20220602 01:16:20.593"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:16:20.597" level="INFO">Running command 'ozone sh bucket info o3://om:9862/24354-with-host/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:16:24.764" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:16:24.764" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20220602 01:16:20.595" endtime="20220602 01:16:24.764"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:16:24.765" level="INFO">DISK</msg>
<status status="PASS" starttime="20220602 01:16:24.764" endtime="20220602 01:16:24.765"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:16:24.766" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:16:24.765" endtime="20220602 01:16:24.766"/>
</kw>
<status status="PASS" starttime="20220602 01:16:20.595" endtime="20220602 01:16:24.766"/>
</kw>
<msg timestamp="20220602 01:16:24.766" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:16:20.594" endtime="20220602 01:16:24.767"/>
</kw>
<msg timestamp="20220602 01:16:24.767" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20220602 01:16:20.593" endtime="20220602 01:16:24.767"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220602 01:16:24.767" endtime="20220602 01:16:24.767"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:16:24.771" level="INFO">Running command 'ozone sh bucket info o3://om:9862/24354-with-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:16:28.489" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:16:28.489" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20220602 01:16:24.769" endtime="20220602 01:16:28.489"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:16:28.490" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20220602 01:16:28.489" endtime="20220602 01:16:28.490"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:16:28.491" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:16:28.490" endtime="20220602 01:16:28.491"/>
</kw>
<status status="PASS" starttime="20220602 01:16:24.769" endtime="20220602 01:16:28.491"/>
</kw>
<msg timestamp="20220602 01:16:28.491" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:16:24.768" endtime="20220602 01:16:28.492"/>
</kw>
<msg timestamp="20220602 01:16:28.492" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20220602 01:16:24.768" endtime="20220602 01:16:28.492"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220602 01:16:28.492" endtime="20220602 01:16:28.493"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:16:28.497" level="INFO">Running command 'ozone sh bucket info o3://om:9862/24354-with-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:16:32.184" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:16:32.184" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20220602 01:16:28.494" endtime="20220602 01:16:32.184"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:16:32.185" level="INFO">100</msg>
<status status="PASS" starttime="20220602 01:16:32.185" endtime="20220602 01:16:32.186"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:16:32.186" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:16:32.186" endtime="20220602 01:16:32.186"/>
</kw>
<status status="PASS" starttime="20220602 01:16:28.494" endtime="20220602 01:16:32.187"/>
</kw>
<msg timestamp="20220602 01:16:32.187" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:16:28.494" endtime="20220602 01:16:32.187"/>
</kw>
<msg timestamp="20220602 01:16:32.188" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20220602 01:16:28.493" endtime="20220602 01:16:32.188"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220602 01:16:32.188" endtime="20220602 01:16:32.188"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:16:32.192" level="INFO">Running command 'ozone sh bucket setquota o3://om:9862/24354-with-host/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:16:35.832" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:16:35.832" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:16:32.190" endtime="20220602 01:16:35.832"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:16:35.833" level="INFO"/>
<status status="PASS" starttime="20220602 01:16:35.833" endtime="20220602 01:16:35.833"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:16:35.835" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:16:35.834" endtime="20220602 01:16:35.835"/>
</kw>
<status status="PASS" starttime="20220602 01:16:32.189" endtime="20220602 01:16:35.835"/>
</kw>
<msg timestamp="20220602 01:16:35.835" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:16:32.189" endtime="20220602 01:16:35.836"/>
</kw>
<status status="PASS" starttime="20220602 01:16:32.188" endtime="20220602 01:16:35.836"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:16:35.840" level="INFO">Running command 'ozone sh bucket info o3://om:9862/24354-with-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:16:39.898" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:16:39.898" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20220602 01:16:35.838" endtime="20220602 01:16:39.898"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:16:39.900" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20220602 01:16:39.899" endtime="20220602 01:16:39.900"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:16:39.901" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:16:39.900" endtime="20220602 01:16:39.901"/>
</kw>
<status status="PASS" starttime="20220602 01:16:35.837" endtime="20220602 01:16:39.901"/>
</kw>
<msg timestamp="20220602 01:16:39.901" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:16:35.837" endtime="20220602 01:16:39.901"/>
</kw>
<msg timestamp="20220602 01:16:39.902" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20220602 01:16:35.836" endtime="20220602 01:16:39.902"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220602 01:16:39.902" endtime="20220602 01:16:39.902"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:16:39.906" level="INFO">Running command 'ozone sh bucket info o3://om:9862/24354-with-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:16:43.690" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:16:43.690" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20220602 01:16:39.904" endtime="20220602 01:16:43.690"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:16:43.691" level="INFO">1000</msg>
<status status="PASS" starttime="20220602 01:16:43.691" endtime="20220602 01:16:43.691"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:16:43.692" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:16:43.692" endtime="20220602 01:16:43.692"/>
</kw>
<status status="PASS" starttime="20220602 01:16:39.904" endtime="20220602 01:16:43.692"/>
</kw>
<msg timestamp="20220602 01:16:43.692" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:16:39.903" endtime="20220602 01:16:43.693"/>
</kw>
<msg timestamp="20220602 01:16:43.693" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20220602 01:16:39.902" endtime="20220602 01:16:43.693"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220602 01:16:43.693" endtime="20220602 01:16:43.694"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '.[] | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:16:43.697" level="INFO">Running command 'ozone sh bucket list o3://om:9862/24354-with-host/ | jq -r '.[] | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:16:47.743" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:16:47.743" level="INFO">${output} = 24354-with-host</msg>
<status status="PASS" starttime="20220602 01:16:43.695" endtime="20220602 01:16:47.743"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:16:47.744" level="INFO">24354-with-host</msg>
<status status="PASS" starttime="20220602 01:16:47.744" endtime="20220602 01:16:47.745"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:16:47.745" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:16:47.745" endtime="20220602 01:16:47.745"/>
</kw>
<status status="PASS" starttime="20220602 01:16:43.695" endtime="20220602 01:16:47.746"/>
</kw>
<msg timestamp="20220602 01:16:47.746" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:16:43.694" endtime="20220602 01:16:47.746"/>
</kw>
<msg timestamp="20220602 01:16:47.746" level="INFO">${result} = 24354-with-host</msg>
<status status="PASS" starttime="20220602 01:16:43.694" endtime="20220602 01:16:47.746"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220602 01:16:47.747" endtime="20220602 01:16:47.747"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:16:47.751" level="INFO">Running command 'ozone sh key put o3://om:9862/24354-with-host/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:16:54.186" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:16:54.186" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:16:47.749" endtime="20220602 01:16:54.186"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:16:54.187" level="INFO"/>
<status status="PASS" starttime="20220602 01:16:54.187" endtime="20220602 01:16:54.188"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:16:54.188" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:16:54.188" endtime="20220602 01:16:54.188"/>
</kw>
<status status="PASS" starttime="20220602 01:16:47.749" endtime="20220602 01:16:54.188"/>
</kw>
<msg timestamp="20220602 01:16:54.188" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:16:47.748" endtime="20220602 01:16:54.189"/>
</kw>
<status status="PASS" starttime="20220602 01:16:47.748" endtime="20220602 01:16:54.189"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:16:54.193" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:16:54.195" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:16:54.195" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:16:54.191" endtime="20220602 01:16:54.195"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:16:54.196" level="INFO"/>
<status status="PASS" starttime="20220602 01:16:54.195" endtime="20220602 01:16:54.196"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:16:54.197" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:16:54.196" endtime="20220602 01:16:54.197"/>
</kw>
<status status="PASS" starttime="20220602 01:16:54.190" endtime="20220602 01:16:54.197"/>
</kw>
<msg timestamp="20220602 01:16:54.197" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:16:54.190" endtime="20220602 01:16:54.198"/>
</kw>
<status status="PASS" starttime="20220602 01:16:54.189" endtime="20220602 01:16:54.198"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:16:54.201" level="INFO">Running command 'ozone sh key get o3://om:9862/24354-with-host/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:16:59.667" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:16:59.667" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:16:54.199" endtime="20220602 01:16:59.667"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:16:59.669" level="INFO"/>
<status status="PASS" starttime="20220602 01:16:59.668" endtime="20220602 01:16:59.669"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:16:59.669" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:16:59.669" endtime="20220602 01:16:59.669"/>
</kw>
<status status="PASS" starttime="20220602 01:16:54.199" endtime="20220602 01:16:59.670"/>
</kw>
<msg timestamp="20220602 01:16:59.670" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:16:54.198" endtime="20220602 01:16:59.670"/>
</kw>
<status status="PASS" starttime="20220602 01:16:54.198" endtime="20220602 01:16:59.670"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:16:59.674" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:16:59.676" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:16:59.676" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:16:59.672" endtime="20220602 01:16:59.676"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:16:59.677" level="INFO"/>
<status status="PASS" starttime="20220602 01:16:59.676" endtime="20220602 01:16:59.677"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:16:59.677" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:16:59.677" endtime="20220602 01:16:59.677"/>
</kw>
<status status="PASS" starttime="20220602 01:16:59.671" endtime="20220602 01:16:59.678"/>
</kw>
<msg timestamp="20220602 01:16:59.678" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:16:59.671" endtime="20220602 01:16:59.678"/>
</kw>
<status status="PASS" starttime="20220602 01:16:59.670" endtime="20220602 01:16:59.678"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:16:59.682" level="INFO">Running command 'ozone sh key put -t RATIS o3://om:9862/24354-with-host/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:17:05.881" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:17:05.881" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:16:59.680" endtime="20220602 01:17:05.881"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:17:05.882" level="INFO"/>
<status status="PASS" starttime="20220602 01:17:05.881" endtime="20220602 01:17:05.882"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:17:05.884" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:17:05.882" endtime="20220602 01:17:05.884"/>
</kw>
<status status="PASS" starttime="20220602 01:16:59.680" endtime="20220602 01:17:05.884"/>
</kw>
<msg timestamp="20220602 01:17:05.884" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:16:59.679" endtime="20220602 01:17:05.885"/>
</kw>
<status status="PASS" starttime="20220602 01:16:59.679" endtime="20220602 01:17:05.885"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:17:05.888" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:17:05.890" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:17:05.891" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:17:05.886" endtime="20220602 01:17:05.891"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:17:05.891" level="INFO"/>
<status status="PASS" starttime="20220602 01:17:05.891" endtime="20220602 01:17:05.892"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:17:05.892" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:17:05.892" endtime="20220602 01:17:05.892"/>
</kw>
<status status="PASS" starttime="20220602 01:17:05.886" endtime="20220602 01:17:05.893"/>
</kw>
<msg timestamp="20220602 01:17:05.893" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:17:05.886" endtime="20220602 01:17:05.893"/>
</kw>
<status status="PASS" starttime="20220602 01:17:05.885" endtime="20220602 01:17:05.893"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:17:05.897" level="INFO">Running command 'ozone sh key get o3://om:9862/24354-with-host/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:17:11.149" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:17:11.149" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:17:05.895" endtime="20220602 01:17:11.150"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:17:11.151" level="INFO"/>
<status status="PASS" starttime="20220602 01:17:11.150" endtime="20220602 01:17:11.151"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:17:11.151" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:17:11.151" endtime="20220602 01:17:11.152"/>
</kw>
<status status="PASS" starttime="20220602 01:17:05.894" endtime="20220602 01:17:11.152"/>
</kw>
<msg timestamp="20220602 01:17:11.152" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:17:05.894" endtime="20220602 01:17:11.152"/>
</kw>
<status status="PASS" starttime="20220602 01:17:05.893" endtime="20220602 01:17:11.153"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:17:11.156" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:17:11.158" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:17:11.159" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:17:11.154" endtime="20220602 01:17:11.159"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:17:11.160" level="INFO"/>
<status status="PASS" starttime="20220602 01:17:11.159" endtime="20220602 01:17:11.160"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:17:11.160" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:17:11.160" endtime="20220602 01:17:11.160"/>
</kw>
<status status="PASS" starttime="20220602 01:17:11.154" endtime="20220602 01:17:11.161"/>
</kw>
<msg timestamp="20220602 01:17:11.161" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:17:11.153" endtime="20220602 01:17:11.161"/>
</kw>
<status status="PASS" starttime="20220602 01:17:11.153" endtime="20220602 01:17:11.161"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:17:11.165" level="INFO">Running command 'ozone sh key info o3://om:9862/24354-with-host/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:17:15.034" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:17:15.035" level="INFO">${output} = {
  "volumeName": "24354-with-host",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17526,
  "creationTime": "2022-06-02T01:17:03.347Z",
  "modificationTime": "2022-06-02T01:17:05.359Z",...</msg>
<status status="PASS" starttime="20220602 01:17:11.163" endtime="20220602 01:17:15.035"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:17:15.036" level="INFO">{
  "volumeName": "24354-with-host",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17526,
  "creationTime": "2022-06-02T01:17:03.347Z",
  "modificationTime": "2022-06-02T01:17:05.359Z",
  "replicationConfig": {
    "replicationFactor": "THREE",
    "requiredNodes": 3,
    "replicationType": "RATIS"
  },
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 109611004723200020,
      "length": 17526,
      "offset": 0,
      "keyOffset": 0
    }
  ],
  "metadata": {}
}</msg>
<status status="PASS" starttime="20220602 01:17:15.035" endtime="20220602 01:17:15.036"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:17:15.036" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:17:15.036" endtime="20220602 01:17:15.036"/>
</kw>
<status status="PASS" starttime="20220602 01:17:11.163" endtime="20220602 01:17:15.037"/>
</kw>
<msg timestamp="20220602 01:17:15.037" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:17:11.162" endtime="20220602 01:17:15.037"/>
</kw>
<msg timestamp="20220602 01:17:15.037" level="INFO">${result} = {
  "volumeName": "24354-with-host",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17526,
  "creationTime": "2022-06-02T01:17:03.347Z",
  "modificationTime": "2022-06-02T01:17:05.359Z",...</msg>
<status status="PASS" starttime="20220602 01:17:11.161" endtime="20220602 01:17:15.038"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220602 01:17:15.038" endtime="20220602 01:17:15.038"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:17:15.042" level="INFO">Running command 'ozone sh key delete o3://om:9862/24354-with-host/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:17:18.611" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:17:18.611" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:17:15.040" endtime="20220602 01:17:18.611"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:17:18.612" level="INFO"/>
<status status="PASS" starttime="20220602 01:17:18.612" endtime="20220602 01:17:18.613"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:17:18.613" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:17:18.613" endtime="20220602 01:17:18.613"/>
</kw>
<status status="PASS" starttime="20220602 01:17:15.039" endtime="20220602 01:17:18.613"/>
</kw>
<msg timestamp="20220602 01:17:18.614" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:17:15.039" endtime="20220602 01:17:18.614"/>
</kw>
<status status="PASS" starttime="20220602 01:17:15.038" endtime="20220602 01:17:18.614"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:17:18.618" level="INFO">Running command 'ozone sh key cp o3://om:9862/24354-with-host/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:17:24.956" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:17:24.956" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:17:18.616" endtime="20220602 01:17:24.956"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:17:24.958" level="INFO"/>
<status status="PASS" starttime="20220602 01:17:24.957" endtime="20220602 01:17:24.958"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:17:24.958" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:17:24.958" endtime="20220602 01:17:24.958"/>
</kw>
<status status="PASS" starttime="20220602 01:17:18.615" endtime="20220602 01:17:24.959"/>
</kw>
<msg timestamp="20220602 01:17:24.959" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:17:18.615" endtime="20220602 01:17:24.959"/>
</kw>
<status status="PASS" starttime="20220602 01:17:18.614" endtime="20220602 01:17:24.960"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:17:24.963" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:17:24.966" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:17:24.966" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:17:24.961" endtime="20220602 01:17:24.966"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:17:24.967" level="INFO"/>
<status status="PASS" starttime="20220602 01:17:24.966" endtime="20220602 01:17:24.967"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:17:24.967" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:17:24.967" endtime="20220602 01:17:24.968"/>
</kw>
<status status="PASS" starttime="20220602 01:17:24.960" endtime="20220602 01:17:24.968"/>
</kw>
<msg timestamp="20220602 01:17:24.968" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:17:24.960" endtime="20220602 01:17:24.968"/>
</kw>
<status status="PASS" starttime="20220602 01:17:24.960" endtime="20220602 01:17:24.969"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:17:24.972" level="INFO">Running command 'ozone sh key get o3://om:9862/24354-with-host/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:17:30.559" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:17:30.559" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:17:24.970" endtime="20220602 01:17:30.559"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:17:30.560" level="INFO"/>
<status status="PASS" starttime="20220602 01:17:30.559" endtime="20220602 01:17:30.560"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:17:30.561" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:17:30.560" endtime="20220602 01:17:30.561"/>
</kw>
<status status="PASS" starttime="20220602 01:17:24.970" endtime="20220602 01:17:30.561"/>
</kw>
<msg timestamp="20220602 01:17:30.561" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:17:24.969" endtime="20220602 01:17:30.562"/>
</kw>
<status status="PASS" starttime="20220602 01:17:24.969" endtime="20220602 01:17:30.562"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:17:30.566" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:17:30.568" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:17:30.568" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:17:30.564" endtime="20220602 01:17:30.568"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:17:30.569" level="INFO"/>
<status status="PASS" starttime="20220602 01:17:30.569" endtime="20220602 01:17:30.569"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:17:30.570" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:17:30.570" endtime="20220602 01:17:30.570"/>
</kw>
<status status="PASS" starttime="20220602 01:17:30.563" endtime="20220602 01:17:30.570"/>
</kw>
<msg timestamp="20220602 01:17:30.570" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:17:30.563" endtime="20220602 01:17:30.571"/>
</kw>
<status status="PASS" starttime="20220602 01:17:30.562" endtime="20220602 01:17:30.571"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:17:30.575" level="INFO">Running command 'ozone sh key delete o3://om:9862/24354-with-host/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:17:34.399" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:17:34.399" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:17:30.573" endtime="20220602 01:17:34.399"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:17:34.401" level="INFO"/>
<status status="PASS" starttime="20220602 01:17:34.400" endtime="20220602 01:17:34.401"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:17:34.401" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:17:34.401" endtime="20220602 01:17:34.402"/>
</kw>
<status status="PASS" starttime="20220602 01:17:30.572" endtime="20220602 01:17:34.402"/>
</kw>
<msg timestamp="20220602 01:17:34.402" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:17:30.572" endtime="20220602 01:17:34.402"/>
</kw>
<status status="PASS" starttime="20220602 01:17:30.571" endtime="20220602 01:17:34.403"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:17:34.407" level="INFO">Running command 'ozone sh key get o3://om:9862/24354-with-host/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:17:38.094" level="INFO">${rc} = 255</msg>
<msg timestamp="20220602 01:17:38.094" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20220602 01:17:34.403" endtime="20220602 01:17:38.094"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:17:38.096" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20220602 01:17:38.095" endtime="20220602 01:17:38.096"/>
</kw>
<msg timestamp="20220602 01:17:38.096" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20220602 01:17:34.403" endtime="20220602 01:17:38.096"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220602 01:17:38.096" endtime="20220602 01:17:38.097"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:17:38.100" level="INFO">Running command 'ozone sh key get --force o3://om:9862/24354-with-host/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:17:44.018" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:17:44.018" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:17:38.098" endtime="20220602 01:17:44.018"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:17:44.020" level="INFO"/>
<status status="PASS" starttime="20220602 01:17:44.019" endtime="20220602 01:17:44.020"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:17:44.020" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:17:44.020" endtime="20220602 01:17:44.020"/>
</kw>
<status status="PASS" starttime="20220602 01:17:38.098" endtime="20220602 01:17:44.021"/>
</kw>
<msg timestamp="20220602 01:17:44.021" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:17:38.097" endtime="20220602 01:17:44.021"/>
</kw>
<msg timestamp="20220602 01:17:44.022" level="INFO">${result} = </msg>
<status status="PASS" starttime="20220602 01:17:38.097" endtime="20220602 01:17:44.022"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220602 01:17:44.022" endtime="20220602 01:17:44.022"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:17:44.026" level="INFO">Running command 'ozone sh key info o3://om:9862/24354-with-host/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:17:48.182" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:17:48.182" level="INFO">${output} = {
  "volumeName": "24354-with-host",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17526,
  "creationTime": "2022-06-02T01:16:51.553Z",
  "modificationTime": "2022-06-02T01:16:53.705Z",
  "re...</msg>
<status status="PASS" starttime="20220602 01:17:44.024" endtime="20220602 01:17:48.182"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:17:48.183" level="INFO">{
  "volumeName": "24354-with-host",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17526,
  "creationTime": "2022-06-02T01:16:51.553Z",
  "modificationTime": "2022-06-02T01:16:53.705Z",
  "replicationConfig": {
    "replicationFactor": "ONE",
    "requiredNodes": 1,
    "replicationType": "RATIS"
  },
  "ozoneKeyLocations": [
    {
      "containerID": 3,
      "localID": 109611004723200020,
      "length": 17526,
      "offset": 0,
      "keyOffset": 0
    }
  ],
  "metadata": {}
}</msg>
<status status="PASS" starttime="20220602 01:17:48.183" endtime="20220602 01:17:48.183"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:17:48.184" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:17:48.183" endtime="20220602 01:17:48.184"/>
</kw>
<status status="PASS" starttime="20220602 01:17:44.024" endtime="20220602 01:17:48.184"/>
</kw>
<msg timestamp="20220602 01:17:48.184" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:17:44.023" endtime="20220602 01:17:48.185"/>
</kw>
<msg timestamp="20220602 01:17:48.185" level="INFO">${result} = {
  "volumeName": "24354-with-host",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17526,
  "creationTime": "2022-06-02T01:16:51.553Z",
  "modificationTime": "2022-06-02T01:16:53.705Z",
  "re...</msg>
<status status="PASS" starttime="20220602 01:17:44.023" endtime="20220602 01:17:48.185"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220602 01:17:48.185" endtime="20220602 01:17:48.186"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[] | select(.name=="key1") | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:17:48.189" level="INFO">Running command 'ozone sh key list o3://om:9862/24354-with-host/bb1 | jq -r '.[] | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:17:52.032" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:17:52.032" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20220602 01:17:48.187" endtime="20220602 01:17:52.032"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:17:52.033" level="INFO">key1</msg>
<status status="PASS" starttime="20220602 01:17:52.032" endtime="20220602 01:17:52.033"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:17:52.034" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:17:52.033" endtime="20220602 01:17:52.034"/>
</kw>
<status status="PASS" starttime="20220602 01:17:48.187" endtime="20220602 01:17:52.034"/>
</kw>
<msg timestamp="20220602 01:17:52.034" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:17:48.186" endtime="20220602 01:17:52.035"/>
</kw>
<msg timestamp="20220602 01:17:52.035" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20220602 01:17:48.186" endtime="20220602 01:17:52.035"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220602 01:17:52.035" endtime="20220602 01:17:52.036"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:17:52.041" level="INFO">Running command 'ozone sh key rename o3://om:9862/24354-with-host/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:17:56.018" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:17:56.018" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:17:52.039" endtime="20220602 01:17:56.018"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:17:56.019" level="INFO"/>
<status status="PASS" starttime="20220602 01:17:56.019" endtime="20220602 01:17:56.019"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:17:56.020" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:17:56.020" endtime="20220602 01:17:56.020"/>
</kw>
<status status="PASS" starttime="20220602 01:17:52.038" endtime="20220602 01:17:56.021"/>
</kw>
<msg timestamp="20220602 01:17:56.021" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:17:52.038" endtime="20220602 01:17:56.021"/>
</kw>
<status status="PASS" starttime="20220602 01:17:52.036" endtime="20220602 01:17:56.021"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:17:56.025" level="INFO">Running command 'ozone sh key list o3://om:9862/24354-with-host/bb1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:18:00.080" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:18:00.080" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20220602 01:17:56.023" endtime="20220602 01:18:00.081"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:18:00.082" level="INFO">key2</msg>
<status status="PASS" starttime="20220602 01:18:00.081" endtime="20220602 01:18:00.082"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:18:00.083" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:18:00.082" endtime="20220602 01:18:00.083"/>
</kw>
<status status="PASS" starttime="20220602 01:17:56.023" endtime="20220602 01:18:00.083"/>
</kw>
<msg timestamp="20220602 01:18:00.083" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:17:56.022" endtime="20220602 01:18:00.084"/>
</kw>
<msg timestamp="20220602 01:18:00.084" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20220602 01:17:56.022" endtime="20220602 01:18:00.084"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220602 01:18:00.084" endtime="20220602 01:18:00.084"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:18:00.088" level="INFO">Running command 'ozone sh key delete o3://om:9862/24354-with-host/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:18:03.758" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:18:03.758" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:18:00.086" endtime="20220602 01:18:03.759"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:18:03.760" level="INFO"/>
<status status="PASS" starttime="20220602 01:18:03.759" endtime="20220602 01:18:03.760"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:18:03.760" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:18:03.760" endtime="20220602 01:18:03.760"/>
</kw>
<status status="PASS" starttime="20220602 01:18:00.086" endtime="20220602 01:18:03.761"/>
</kw>
<msg timestamp="20220602 01:18:03.761" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:18:00.085" endtime="20220602 01:18:03.761"/>
</kw>
<status status="PASS" starttime="20220602 01:18:00.085" endtime="20220602 01:18:03.762"/>
</kw>
<status status="PASS" starttime="20220602 01:16:47.747" endtime="20220602 01:18:03.762"/>
</kw>
<status status="PASS" starttime="20220602 01:16:47.747" endtime="20220602 01:18:03.762"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:18:03.765" level="INFO">Running command 'ozone sh volume clrquota --space-quota o3://om:9862/24354-with-host 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:18:07.440" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:18:07.440" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:18:03.763" endtime="20220602 01:18:07.440"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:18:07.441" level="INFO"/>
<status status="PASS" starttime="20220602 01:18:07.440" endtime="20220602 01:18:07.441"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:18:07.442" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:18:07.441" endtime="20220602 01:18:07.442"/>
</kw>
<status status="PASS" starttime="20220602 01:18:03.763" endtime="20220602 01:18:07.442"/>
</kw>
<msg timestamp="20220602 01:18:07.442" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:18:03.762" endtime="20220602 01:18:07.443"/>
</kw>
<status status="PASS" starttime="20220602 01:18:03.762" endtime="20220602 01:18:07.443"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:18:07.447" level="INFO">Running command 'ozone sh volume info o3://om:9862/24354-with-host | jq -r '. | select(.name=="24354-with-host") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:18:11.565" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:18:11.565" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20220602 01:18:07.445" endtime="20220602 01:18:11.565"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:18:11.567" level="INFO">-1</msg>
<status status="PASS" starttime="20220602 01:18:11.566" endtime="20220602 01:18:11.567"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:18:11.568" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:18:11.567" endtime="20220602 01:18:11.568"/>
</kw>
<status status="PASS" starttime="20220602 01:18:07.444" endtime="20220602 01:18:11.568"/>
</kw>
<msg timestamp="20220602 01:18:11.568" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:18:07.444" endtime="20220602 01:18:11.569"/>
</kw>
<msg timestamp="20220602 01:18:11.569" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20220602 01:18:07.443" endtime="20220602 01:18:11.569"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220602 01:18:11.569" endtime="20220602 01:18:11.570"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:18:11.574" level="INFO">Running command 'ozone sh volume clrquota --namespace-quota o3://om:9862/24354-with-host 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:18:15.369" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:18:15.369" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:18:11.571" endtime="20220602 01:18:15.369"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:18:15.370" level="INFO"/>
<status status="PASS" starttime="20220602 01:18:15.370" endtime="20220602 01:18:15.370"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:18:15.371" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:18:15.371" endtime="20220602 01:18:15.371"/>
</kw>
<status status="PASS" starttime="20220602 01:18:11.571" endtime="20220602 01:18:15.372"/>
</kw>
<msg timestamp="20220602 01:18:15.372" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:18:11.571" endtime="20220602 01:18:15.372"/>
</kw>
<status status="PASS" starttime="20220602 01:18:11.570" endtime="20220602 01:18:15.372"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:18:15.377" level="INFO">Running command 'ozone sh volume info o3://om:9862/24354-with-host | jq -r '. | select(.name=="24354-with-host") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:18:19.247" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:18:19.247" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20220602 01:18:15.375" endtime="20220602 01:18:19.247"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:18:19.249" level="INFO">-1</msg>
<status status="PASS" starttime="20220602 01:18:19.248" endtime="20220602 01:18:19.249"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:18:19.249" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:18:19.249" endtime="20220602 01:18:19.249"/>
</kw>
<status status="PASS" starttime="20220602 01:18:15.374" endtime="20220602 01:18:19.250"/>
</kw>
<msg timestamp="20220602 01:18:19.250" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:18:15.374" endtime="20220602 01:18:19.250"/>
</kw>
<msg timestamp="20220602 01:18:19.250" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20220602 01:18:15.373" endtime="20220602 01:18:19.250"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220602 01:18:19.251" endtime="20220602 01:18:19.251"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:18:19.255" level="INFO">Running command 'ozone sh bucket clrquota --space-quota o3://om:9862/24354-with-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:18:22.993" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:18:22.994" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:18:19.253" endtime="20220602 01:18:22.994"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:18:22.995" level="INFO"/>
<status status="PASS" starttime="20220602 01:18:22.994" endtime="20220602 01:18:22.995"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:18:22.996" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:18:22.995" endtime="20220602 01:18:22.996"/>
</kw>
<status status="PASS" starttime="20220602 01:18:19.252" endtime="20220602 01:18:22.996"/>
</kw>
<msg timestamp="20220602 01:18:22.996" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:18:19.252" endtime="20220602 01:18:22.997"/>
</kw>
<status status="PASS" starttime="20220602 01:18:19.251" endtime="20220602 01:18:22.997"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:18:23.001" level="INFO">Running command 'ozone sh bucket info o3://om:9862/24354-with-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:18:27.244" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:18:27.244" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20220602 01:18:22.999" endtime="20220602 01:18:27.244"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:18:27.245" level="INFO">-1</msg>
<status status="PASS" starttime="20220602 01:18:27.244" endtime="20220602 01:18:27.245"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:18:27.246" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:18:27.245" endtime="20220602 01:18:27.246"/>
</kw>
<status status="PASS" starttime="20220602 01:18:22.998" endtime="20220602 01:18:27.246"/>
</kw>
<msg timestamp="20220602 01:18:27.247" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:18:22.998" endtime="20220602 01:18:27.247"/>
</kw>
<msg timestamp="20220602 01:18:27.247" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20220602 01:18:22.997" endtime="20220602 01:18:27.247"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220602 01:18:27.248" endtime="20220602 01:18:27.248"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:18:27.252" level="INFO">Running command 'ozone sh bucket clrquota --namespace-quota o3://om:9862/24354-with-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:18:30.816" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:18:30.816" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:18:27.250" endtime="20220602 01:18:30.816"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:18:30.818" level="INFO"/>
<status status="PASS" starttime="20220602 01:18:30.817" endtime="20220602 01:18:30.818"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:18:30.819" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:18:30.818" endtime="20220602 01:18:30.819"/>
</kw>
<status status="PASS" starttime="20220602 01:18:27.249" endtime="20220602 01:18:30.819"/>
</kw>
<msg timestamp="20220602 01:18:30.819" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:18:27.249" endtime="20220602 01:18:30.820"/>
</kw>
<status status="PASS" starttime="20220602 01:18:27.248" endtime="20220602 01:18:30.820"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:18:30.823" level="INFO">Running command 'ozone sh bucket info o3://om:9862/24354-with-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:18:34.811" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:18:34.811" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20220602 01:18:30.822" endtime="20220602 01:18:34.812"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:18:34.813" level="INFO">-1</msg>
<status status="PASS" starttime="20220602 01:18:34.812" endtime="20220602 01:18:34.813"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:18:34.814" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:18:34.813" endtime="20220602 01:18:34.814"/>
</kw>
<status status="PASS" starttime="20220602 01:18:30.821" endtime="20220602 01:18:34.814"/>
</kw>
<msg timestamp="20220602 01:18:34.814" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:18:30.821" endtime="20220602 01:18:34.815"/>
</kw>
<msg timestamp="20220602 01:18:34.815" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20220602 01:18:30.820" endtime="20220602 01:18:34.815"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220602 01:18:34.815" endtime="20220602 01:18:34.816"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:18:34.819" level="INFO">Running command 'ozone sh bucket delete o3://om:9862/24354-with-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:18:38.586" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:18:38.586" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:18:34.817" endtime="20220602 01:18:38.586"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:18:38.587" level="INFO"/>
<status status="PASS" starttime="20220602 01:18:38.586" endtime="20220602 01:18:38.587"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:18:38.588" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:18:38.587" endtime="20220602 01:18:38.588"/>
</kw>
<status status="PASS" starttime="20220602 01:18:34.817" endtime="20220602 01:18:38.588"/>
</kw>
<msg timestamp="20220602 01:18:38.588" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:18:34.816" endtime="20220602 01:18:38.589"/>
</kw>
<status status="PASS" starttime="20220602 01:18:34.816" endtime="20220602 01:18:38.589"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:18:38.593" level="INFO">Running command 'ozone sh volume delete o3://om:9862/24354-with-host 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:18:42.562" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:18:42.562" level="INFO">${output} = Volume 24354-with-host is deleted</msg>
<status status="PASS" starttime="20220602 01:18:38.591" endtime="20220602 01:18:42.562"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:18:42.563" level="INFO">Volume 24354-with-host is deleted</msg>
<status status="PASS" starttime="20220602 01:18:42.562" endtime="20220602 01:18:42.563"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:18:42.564" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:18:42.563" endtime="20220602 01:18:42.564"/>
</kw>
<status status="PASS" starttime="20220602 01:18:38.590" endtime="20220602 01:18:42.564"/>
</kw>
<msg timestamp="20220602 01:18:42.564" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:18:38.590" endtime="20220602 01:18:42.565"/>
</kw>
<status status="PASS" starttime="20220602 01:18:38.589" endtime="20220602 01:18:42.565"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:18:42.569" level="INFO">Running command 'ozone sh volume create o3://om:9862/24354-with-host 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:18:46.362" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:18:46.362" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:18:42.567" endtime="20220602 01:18:46.362"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:18:46.363" level="INFO"/>
<status status="PASS" starttime="20220602 01:18:46.362" endtime="20220602 01:18:46.364"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:18:46.364" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:18:46.364" endtime="20220602 01:18:46.364"/>
</kw>
<status status="PASS" starttime="20220602 01:18:42.566" endtime="20220602 01:18:46.365"/>
</kw>
<msg timestamp="20220602 01:18:46.365" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:18:42.566" endtime="20220602 01:18:46.365"/>
</kw>
<status status="PASS" starttime="20220602 01:18:42.565" endtime="20220602 01:18:46.365"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:18:46.369" level="INFO">Running command 'ozone sh volume info o3://om:9862/24354-with-host | jq -r '. | select(.name=="24354-with-host") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:18:50.268" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:18:50.268" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20220602 01:18:46.367" endtime="20220602 01:18:50.268"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:18:50.269" level="INFO">-1</msg>
<status status="PASS" starttime="20220602 01:18:50.269" endtime="20220602 01:18:50.269"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:18:50.270" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:18:50.269" endtime="20220602 01:18:50.270"/>
</kw>
<status status="PASS" starttime="20220602 01:18:46.366" endtime="20220602 01:18:50.270"/>
</kw>
<msg timestamp="20220602 01:18:50.270" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:18:46.366" endtime="20220602 01:18:50.271"/>
</kw>
<msg timestamp="20220602 01:18:50.271" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20220602 01:18:46.365" endtime="20220602 01:18:50.271"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220602 01:18:50.271" endtime="20220602 01:18:50.272"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:18:50.275" level="INFO">Running command 'ozone sh volume info o3://om:9862/24354-with-host | jq -r '. | select(.name=="24354-with-host") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:18:54.470" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:18:54.470" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20220602 01:18:50.273" endtime="20220602 01:18:54.470"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:18:54.471" level="INFO">-1</msg>
<status status="PASS" starttime="20220602 01:18:54.470" endtime="20220602 01:18:54.471"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:18:54.472" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:18:54.471" endtime="20220602 01:18:54.472"/>
</kw>
<status status="PASS" starttime="20220602 01:18:50.273" endtime="20220602 01:18:54.472"/>
</kw>
<msg timestamp="20220602 01:18:54.472" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:18:50.273" endtime="20220602 01:18:54.472"/>
</kw>
<msg timestamp="20220602 01:18:54.473" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20220602 01:18:50.272" endtime="20220602 01:18:54.473"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220602 01:18:54.473" endtime="20220602 01:18:54.473"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:18:54.477" level="INFO">Running command 'ozone sh bucket create o3://om:9862/24354-with-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:18:58.275" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:18:58.275" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:18:54.475" endtime="20220602 01:18:58.275"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:18:58.276" level="INFO"/>
<status status="PASS" starttime="20220602 01:18:58.275" endtime="20220602 01:18:58.276"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:18:58.277" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:18:58.276" endtime="20220602 01:18:58.277"/>
</kw>
<status status="PASS" starttime="20220602 01:18:54.474" endtime="20220602 01:18:58.277"/>
</kw>
<msg timestamp="20220602 01:18:58.277" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:18:54.474" endtime="20220602 01:18:58.278"/>
</kw>
<status status="PASS" starttime="20220602 01:18:54.473" endtime="20220602 01:18:58.278"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:18:58.282" level="INFO">Running command 'ozone sh bucket info o3://om:9862/24354-with-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:19:02.259" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:19:02.259" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20220602 01:18:58.280" endtime="20220602 01:19:02.259"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:19:02.260" level="INFO">-1</msg>
<status status="PASS" starttime="20220602 01:19:02.259" endtime="20220602 01:19:02.260"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:19:02.261" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:19:02.260" endtime="20220602 01:19:02.261"/>
</kw>
<status status="PASS" starttime="20220602 01:18:58.279" endtime="20220602 01:19:02.261"/>
</kw>
<msg timestamp="20220602 01:19:02.261" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:18:58.279" endtime="20220602 01:19:02.262"/>
</kw>
<msg timestamp="20220602 01:19:02.262" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20220602 01:18:58.278" endtime="20220602 01:19:02.262"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220602 01:19:02.262" endtime="20220602 01:19:02.262"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:19:02.267" level="INFO">Running command 'ozone sh bucket info o3://om:9862/24354-with-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:19:06.092" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:19:06.092" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20220602 01:19:02.265" endtime="20220602 01:19:06.092"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:19:06.093" level="INFO">-1</msg>
<status status="PASS" starttime="20220602 01:19:06.092" endtime="20220602 01:19:06.093"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:19:06.093" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:19:06.093" endtime="20220602 01:19:06.093"/>
</kw>
<status status="PASS" starttime="20220602 01:19:02.264" endtime="20220602 01:19:06.094"/>
</kw>
<msg timestamp="20220602 01:19:06.094" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:19:02.263" endtime="20220602 01:19:06.094"/>
</kw>
<msg timestamp="20220602 01:19:06.094" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20220602 01:19:02.263" endtime="20220602 01:19:06.095"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220602 01:19:06.095" endtime="20220602 01:19:06.095"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:19:06.099" level="INFO">Running command 'ozone sh bucket delete o3://om:9862/24354-with-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:19:09.759" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:19:09.760" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:19:06.096" endtime="20220602 01:19:09.760"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:19:09.761" level="INFO"/>
<status status="PASS" starttime="20220602 01:19:09.760" endtime="20220602 01:19:09.761"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:19:09.762" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:19:09.761" endtime="20220602 01:19:09.762"/>
</kw>
<status status="PASS" starttime="20220602 01:19:06.096" endtime="20220602 01:19:09.762"/>
</kw>
<msg timestamp="20220602 01:19:09.762" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:19:06.096" endtime="20220602 01:19:09.763"/>
</kw>
<status status="PASS" starttime="20220602 01:19:06.095" endtime="20220602 01:19:09.763"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:19:09.767" level="INFO">Running command 'ozone sh volume delete o3://om:9862/24354-with-host 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:19:13.442" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:19:13.442" level="INFO">${output} = Volume 24354-with-host is deleted</msg>
<status status="PASS" starttime="20220602 01:19:09.765" endtime="20220602 01:19:13.442"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:19:13.443" level="INFO">Volume 24354-with-host is deleted</msg>
<status status="PASS" starttime="20220602 01:19:13.443" endtime="20220602 01:19:13.443"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:19:13.444" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:19:13.444" endtime="20220602 01:19:13.444"/>
</kw>
<status status="PASS" starttime="20220602 01:19:09.764" endtime="20220602 01:19:13.444"/>
</kw>
<msg timestamp="20220602 01:19:13.444" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:19:09.764" endtime="20220602 01:19:13.445"/>
</kw>
<status status="PASS" starttime="20220602 01:19:09.763" endtime="20220602 01:19:13.445"/>
</kw>
<status status="PASS" starttime="20220602 01:15:54.544" endtime="20220602 01:19:13.445"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220602 01:15:54.520" endtime="20220602 01:19:13.446"/>
</test>
<test id="s1-s1-s5-t2" name="RpcClient volume acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:19:13.452" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:19:13.455" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:19:13.455" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220602 01:19:13.449" endtime="20220602 01:19:13.455"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:19:13.456" level="INFO">scm</msg>
<status status="PASS" starttime="20220602 01:19:13.456" endtime="20220602 01:19:13.457"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:19:13.457" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:19:13.457" endtime="20220602 01:19:13.457"/>
</kw>
<status status="PASS" starttime="20220602 01:19:13.449" endtime="20220602 01:19:13.458"/>
</kw>
<msg timestamp="20220602 01:19:13.458" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:19:13.449" endtime="20220602 01:19:13.458"/>
</kw>
<msg timestamp="20220602 01:19:13.458" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220602 01:19:13.448" endtime="20220602 01:19:13.458"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220602 01:19:13.459" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220602 01:19:13.459" endtime="20220602 01:19:13.459"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:19:13.464" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:19:13.527" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:19:13.527" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:19:13.462" endtime="20220602 01:19:13.527"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:19:13.529" level="INFO"/>
<status status="PASS" starttime="20220602 01:19:13.528" endtime="20220602 01:19:13.529"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:19:13.529" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:19:13.529" endtime="20220602 01:19:13.529"/>
</kw>
<status status="PASS" starttime="20220602 01:19:13.461" endtime="20220602 01:19:13.530"/>
</kw>
<msg timestamp="20220602 01:19:13.530" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:19:13.461" endtime="20220602 01:19:13.530"/>
</kw>
<status status="PASS" starttime="20220602 01:19:13.460" endtime="20220602 01:19:13.531"/>
</kw>
<status status="PASS" starttime="20220602 01:19:13.459" endtime="20220602 01:19:13.531"/>
</kw>
<status status="PASS" starttime="20220602 01:19:13.448" endtime="20220602 01:19:13.531"/>
</kw>
<status status="PASS" starttime="20220602 01:19:13.447" endtime="20220602 01:19:13.531"/>
</kw>
<kw name="Test Volume Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-acls</arg>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:19:13.537" level="INFO">Running command 'ozone sh volume create o3://om:9862/24354-acls 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:19:17.163" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:19:17.163" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:19:13.533" endtime="20220602 01:19:17.163"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:19:17.164" level="INFO"/>
<status status="PASS" starttime="20220602 01:19:17.163" endtime="20220602 01:19:17.164"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:19:17.165" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:19:17.164" endtime="20220602 01:19:17.165"/>
</kw>
<status status="PASS" starttime="20220602 01:19:13.533" endtime="20220602 01:19:17.165"/>
</kw>
<msg timestamp="20220602 01:19:17.165" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:19:13.532" endtime="20220602 01:19:17.166"/>
</kw>
<status status="PASS" starttime="20220602 01:19:13.532" endtime="20220602 01:19:17.166"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:19:17.169" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/24354-acls 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:19:21.127" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:19:21.127" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20220602 01:19:17.167" endtime="20220602 01:19:21.127"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:19:21.128" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20220602 01:19:21.127" endtime="20220602 01:19:21.128"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:19:21.129" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:19:21.128" endtime="20220602 01:19:21.129"/>
</kw>
<status status="PASS" starttime="20220602 01:19:17.167" endtime="20220602 01:19:21.129"/>
</kw>
<msg timestamp="20220602 01:19:21.129" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:19:17.167" endtime="20220602 01:19:21.130"/>
</kw>
<msg timestamp="20220602 01:19:21.130" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20220602 01:19:17.166" endtime="20220602 01:19:21.130"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220602 01:19:21.130" endtime="20220602 01:19:21.131"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:19:21.135" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/24354-acls -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:19:25.095" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:19:25.095" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20220602 01:19:21.132" endtime="20220602 01:19:25.095"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:19:25.096" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20220602 01:19:25.095" endtime="20220602 01:19:25.096"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:19:25.097" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:19:25.096" endtime="20220602 01:19:25.097"/>
</kw>
<status status="PASS" starttime="20220602 01:19:21.132" endtime="20220602 01:19:25.098"/>
</kw>
<msg timestamp="20220602 01:19:25.098" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:19:21.132" endtime="20220602 01:19:25.098"/>
</kw>
<msg timestamp="20220602 01:19:25.098" level="INFO">${result} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20220602 01:19:21.131" endtime="20220602 01:19:25.098"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:19:25.102" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/24354-acls 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:19:29.225" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:19:29.226" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20220602 01:19:25.100" endtime="20220602 01:19:29.226"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:19:29.227" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20220602 01:19:29.226" endtime="20220602 01:19:29.227"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:19:29.228" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:19:29.227" endtime="20220602 01:19:29.228"/>
</kw>
<status status="PASS" starttime="20220602 01:19:25.099" endtime="20220602 01:19:29.228"/>
</kw>
<msg timestamp="20220602 01:19:29.228" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:19:25.099" endtime="20220602 01:19:29.229"/>
</kw>
<msg timestamp="20220602 01:19:29.229" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20220602 01:19:25.098" endtime="20220602 01:19:29.229"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220602 01:19:29.229" endtime="20220602 01:19:29.230"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:19:29.234" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/24354-acls -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:19:32.966" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:19:32.966" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20220602 01:19:29.232" endtime="20220602 01:19:32.966"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:19:32.968" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20220602 01:19:32.967" endtime="20220602 01:19:32.968"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:19:32.968" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:19:32.968" endtime="20220602 01:19:32.968"/>
</kw>
<status status="PASS" starttime="20220602 01:19:29.231" endtime="20220602 01:19:32.969"/>
</kw>
<msg timestamp="20220602 01:19:32.969" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:19:29.231" endtime="20220602 01:19:32.969"/>
</kw>
<msg timestamp="20220602 01:19:32.970" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20220602 01:19:29.230" endtime="20220602 01:19:32.970"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:19:32.973" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/24354-acls 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:19:36.780" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:19:36.780" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20220602 01:19:32.971" endtime="20220602 01:19:36.780"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:19:36.782" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20220602 01:19:36.781" endtime="20220602 01:19:36.782"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:19:36.782" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:19:36.782" endtime="20220602 01:19:36.783"/>
</kw>
<status status="PASS" starttime="20220602 01:19:32.971" endtime="20220602 01:19:36.783"/>
</kw>
<msg timestamp="20220602 01:19:36.783" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:19:32.970" endtime="20220602 01:19:36.783"/>
</kw>
<msg timestamp="20220602 01:19:36.784" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20220602 01:19:32.970" endtime="20220602 01:19:36.784"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220602 01:19:36.784" endtime="20220602 01:19:36.785"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy[DEFAULT],group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:19:36.789" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/24354-acls -al user:superuser1:rwxy[DEFAULT],group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:19:40.402" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:19:40.402" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20220602 01:19:36.787" endtime="20220602 01:19:40.402"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:19:40.403" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20220602 01:19:40.403" endtime="20220602 01:19:40.403"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:19:40.404" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:19:40.404" endtime="20220602 01:19:40.404"/>
</kw>
<status status="PASS" starttime="20220602 01:19:36.786" endtime="20220602 01:19:40.404"/>
</kw>
<msg timestamp="20220602 01:19:40.404" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:19:36.786" endtime="20220602 01:19:40.405"/>
</kw>
<msg timestamp="20220602 01:19:40.405" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20220602 01:19:36.785" endtime="20220602 01:19:40.405"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:19:40.409" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/24354-acls 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:19:44.380" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:19:44.380" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20220602 01:19:40.407" endtime="20220602 01:19:44.380"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:19:44.381" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20220602 01:19:44.380" endtime="20220602 01:19:44.381"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:19:44.382" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:19:44.381" endtime="20220602 01:19:44.382"/>
</kw>
<status status="PASS" starttime="20220602 01:19:40.407" endtime="20220602 01:19:44.382"/>
</kw>
<msg timestamp="20220602 01:19:44.382" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:19:40.406" endtime="20220602 01:19:44.383"/>
</kw>
<msg timestamp="20220602 01:19:44.383" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20220602 01:19:40.406" endtime="20220602 01:19:44.383"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220602 01:19:44.383" endtime="20220602 01:19:44.384"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220602 01:19:44.384" endtime="20220602 01:19:44.385"/>
</kw>
<status status="PASS" starttime="20220602 01:19:13.531" endtime="20220602 01:19:44.385"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220602 01:19:13.446" endtime="20220602 01:19:44.385"/>
</test>
<test id="s1-s1-s5-t3" name="RpcClient bucket acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:19:44.391" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:19:44.394" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:19:44.394" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220602 01:19:44.389" endtime="20220602 01:19:44.394"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:19:44.395" level="INFO">scm</msg>
<status status="PASS" starttime="20220602 01:19:44.395" endtime="20220602 01:19:44.396"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:19:44.396" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:19:44.396" endtime="20220602 01:19:44.396"/>
</kw>
<status status="PASS" starttime="20220602 01:19:44.388" endtime="20220602 01:19:44.397"/>
</kw>
<msg timestamp="20220602 01:19:44.397" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:19:44.388" endtime="20220602 01:19:44.397"/>
</kw>
<msg timestamp="20220602 01:19:44.398" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220602 01:19:44.387" endtime="20220602 01:19:44.398"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220602 01:19:44.398" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220602 01:19:44.398" endtime="20220602 01:19:44.399"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:19:44.402" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:19:44.410" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:19:44.410" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:19:44.400" endtime="20220602 01:19:44.410"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:19:44.411" level="INFO"/>
<status status="PASS" starttime="20220602 01:19:44.410" endtime="20220602 01:19:44.411"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:19:44.411" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:19:44.411" endtime="20220602 01:19:44.411"/>
</kw>
<status status="PASS" starttime="20220602 01:19:44.400" endtime="20220602 01:19:44.412"/>
</kw>
<msg timestamp="20220602 01:19:44.412" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:19:44.400" endtime="20220602 01:19:44.412"/>
</kw>
<status status="PASS" starttime="20220602 01:19:44.399" endtime="20220602 01:19:44.412"/>
</kw>
<status status="PASS" starttime="20220602 01:19:44.399" endtime="20220602 01:19:44.413"/>
</kw>
<status status="PASS" starttime="20220602 01:19:44.387" endtime="20220602 01:19:44.413"/>
</kw>
<status status="PASS" starttime="20220602 01:19:44.386" endtime="20220602 01:19:44.413"/>
</kw>
<kw name="Test Bucket Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-acls</arg>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:19:44.417" level="INFO">Running command 'ozone sh bucket create o3://om:9862/24354-acls/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:19:48.360" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:19:48.360" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:19:44.415" endtime="20220602 01:19:48.360"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:19:48.361" level="INFO"/>
<status status="PASS" starttime="20220602 01:19:48.361" endtime="20220602 01:19:48.361"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:19:48.362" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:19:48.361" endtime="20220602 01:19:48.362"/>
</kw>
<status status="PASS" starttime="20220602 01:19:44.415" endtime="20220602 01:19:48.363"/>
</kw>
<msg timestamp="20220602 01:19:48.363" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:19:44.414" endtime="20220602 01:19:48.363"/>
</kw>
<status status="PASS" starttime="20220602 01:19:44.414" endtime="20220602 01:19:48.364"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:19:48.367" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/24354-acls/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:19:52.322" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:19:52.322" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20220602 01:19:48.365" endtime="20220602 01:19:52.322"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:19:52.324" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20220602 01:19:52.323" endtime="20220602 01:19:52.324"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:19:52.324" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:19:52.324" endtime="20220602 01:19:52.324"/>
</kw>
<status status="PASS" starttime="20220602 01:19:48.365" endtime="20220602 01:19:52.325"/>
</kw>
<msg timestamp="20220602 01:19:52.325" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:19:48.365" endtime="20220602 01:19:52.325"/>
</kw>
<msg timestamp="20220602 01:19:52.326" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20220602 01:19:48.364" endtime="20220602 01:19:52.326"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220602 01:19:52.326" endtime="20220602 01:19:52.326"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:19:52.330" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/24354-acls/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:19:56.197" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:19:56.197" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20220602 01:19:52.328" endtime="20220602 01:19:56.198"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:19:56.199" level="INFO">ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20220602 01:19:56.198" endtime="20220602 01:19:56.199"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:19:56.199" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:19:56.199" endtime="20220602 01:19:56.200"/>
</kw>
<status status="PASS" starttime="20220602 01:19:52.327" endtime="20220602 01:19:56.200"/>
</kw>
<msg timestamp="20220602 01:19:56.200" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:19:52.327" endtime="20220602 01:19:56.200"/>
</kw>
<msg timestamp="20220602 01:19:56.201" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20220602 01:19:52.326" endtime="20220602 01:19:56.201"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:19:56.204" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/24354-acls/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:20:00.061" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:20:00.061" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20220602 01:19:56.202" endtime="20220602 01:20:00.061"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:20:00.062" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20220602 01:20:00.062" endtime="20220602 01:20:00.062"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:20:00.063" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:20:00.062" endtime="20220602 01:20:00.063"/>
</kw>
<status status="PASS" starttime="20220602 01:19:56.202" endtime="20220602 01:20:00.063"/>
</kw>
<msg timestamp="20220602 01:20:00.063" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:19:56.202" endtime="20220602 01:20:00.064"/>
</kw>
<msg timestamp="20220602 01:20:00.064" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20220602 01:19:56.201" endtime="20220602 01:20:00.064"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220602 01:20:00.064" endtime="20220602 01:20:00.065"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:20:00.069" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/24354-acls/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:20:03.984" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:20:03.984" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20220602 01:20:00.067" endtime="20220602 01:20:03.984"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:20:03.985" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20220602 01:20:03.984" endtime="20220602 01:20:03.985"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:20:03.986" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:20:03.985" endtime="20220602 01:20:03.986"/>
</kw>
<status status="PASS" starttime="20220602 01:20:00.066" endtime="20220602 01:20:03.986"/>
</kw>
<msg timestamp="20220602 01:20:03.986" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:20:00.066" endtime="20220602 01:20:03.987"/>
</kw>
<msg timestamp="20220602 01:20:03.987" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20220602 01:20:00.065" endtime="20220602 01:20:03.987"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:20:03.992" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/24354-acls/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:20:08.254" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:20:08.254" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20220602 01:20:03.989" endtime="20220602 01:20:08.254"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:20:08.255" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20220602 01:20:08.254" endtime="20220602 01:20:08.255"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:20:08.256" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:20:08.255" endtime="20220602 01:20:08.256"/>
</kw>
<status status="PASS" starttime="20220602 01:20:03.988" endtime="20220602 01:20:08.256"/>
</kw>
<msg timestamp="20220602 01:20:08.256" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:20:03.988" endtime="20220602 01:20:08.257"/>
</kw>
<msg timestamp="20220602 01:20:08.257" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20220602 01:20:03.987" endtime="20220602 01:20:08.257"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220602 01:20:08.257" endtime="20220602 01:20:08.258"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:20:08.262" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/24354-acls/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:20:12.145" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:20:12.145" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20220602 01:20:08.260" endtime="20220602 01:20:12.145"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:20:12.146" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20220602 01:20:12.145" endtime="20220602 01:20:12.146"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:20:12.147" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:20:12.146" endtime="20220602 01:20:12.147"/>
</kw>
<status status="PASS" starttime="20220602 01:20:08.259" endtime="20220602 01:20:12.147"/>
</kw>
<msg timestamp="20220602 01:20:12.147" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:20:08.259" endtime="20220602 01:20:12.148"/>
</kw>
<msg timestamp="20220602 01:20:12.148" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20220602 01:20:08.258" endtime="20220602 01:20:12.148"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:20:12.151" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/24354-acls/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:20:16.106" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:20:16.106" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20220602 01:20:12.149" endtime="20220602 01:20:16.106"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:20:16.108" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20220602 01:20:16.107" endtime="20220602 01:20:16.108"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:20:16.108" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:20:16.108" endtime="20220602 01:20:16.108"/>
</kw>
<status status="PASS" starttime="20220602 01:20:12.149" endtime="20220602 01:20:16.109"/>
</kw>
<msg timestamp="20220602 01:20:16.109" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:20:12.149" endtime="20220602 01:20:16.109"/>
</kw>
<msg timestamp="20220602 01:20:16.110" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20220602 01:20:12.148" endtime="20220602 01:20:16.110"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220602 01:20:16.110" endtime="20220602 01:20:16.110"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220602 01:20:16.110" endtime="20220602 01:20:16.111"/>
</kw>
<status status="PASS" starttime="20220602 01:19:44.413" endtime="20220602 01:20:16.111"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220602 01:19:44.386" endtime="20220602 01:20:16.111"/>
</test>
<test id="s1-s1-s5-t4" name="RpcClient key acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:20:16.116" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:20:16.120" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:20:16.120" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220602 01:20:16.114" endtime="20220602 01:20:16.120"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:20:16.121" level="INFO">scm</msg>
<status status="PASS" starttime="20220602 01:20:16.120" endtime="20220602 01:20:16.121"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:20:16.121" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:20:16.121" endtime="20220602 01:20:16.121"/>
</kw>
<status status="PASS" starttime="20220602 01:20:16.114" endtime="20220602 01:20:16.122"/>
</kw>
<msg timestamp="20220602 01:20:16.122" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:20:16.113" endtime="20220602 01:20:16.122"/>
</kw>
<msg timestamp="20220602 01:20:16.123" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220602 01:20:16.113" endtime="20220602 01:20:16.123"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220602 01:20:16.123" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220602 01:20:16.123" endtime="20220602 01:20:16.123"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:20:16.127" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:20:16.133" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:20:16.133" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:20:16.125" endtime="20220602 01:20:16.134"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:20:16.134" level="INFO"/>
<status status="PASS" starttime="20220602 01:20:16.134" endtime="20220602 01:20:16.134"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:20:16.135" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:20:16.135" endtime="20220602 01:20:16.135"/>
</kw>
<status status="PASS" starttime="20220602 01:20:16.125" endtime="20220602 01:20:16.135"/>
</kw>
<msg timestamp="20220602 01:20:16.135" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:20:16.124" endtime="20220602 01:20:16.136"/>
</kw>
<status status="PASS" starttime="20220602 01:20:16.124" endtime="20220602 01:20:16.136"/>
</kw>
<status status="PASS" starttime="20220602 01:20:16.123" endtime="20220602 01:20:16.136"/>
</kw>
<status status="PASS" starttime="20220602 01:20:16.113" endtime="20220602 01:20:16.136"/>
</kw>
<status status="PASS" starttime="20220602 01:20:16.112" endtime="20220602 01:20:16.136"/>
</kw>
<kw name="Test key Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-acls</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:20:16.141" level="INFO">Running command 'ozone sh key put o3://om:9862/24354-acls/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:20:22.024" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:20:22.024" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:20:16.138" endtime="20220602 01:20:22.024"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:20:22.026" level="INFO"/>
<status status="PASS" starttime="20220602 01:20:22.025" endtime="20220602 01:20:22.026"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:20:22.027" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:20:22.026" endtime="20220602 01:20:22.027"/>
</kw>
<status status="PASS" starttime="20220602 01:20:16.138" endtime="20220602 01:20:22.027"/>
</kw>
<msg timestamp="20220602 01:20:22.027" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:20:16.138" endtime="20220602 01:20:22.028"/>
</kw>
<status status="PASS" starttime="20220602 01:20:16.137" endtime="20220602 01:20:22.028"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:20:22.031" level="INFO">Running command 'ozone sh key getacl o3://om:9862/24354-acls/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:20:26.185" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:20:26.185" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20220602 01:20:22.029" endtime="20220602 01:20:26.185"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:20:26.187" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20220602 01:20:26.186" endtime="20220602 01:20:26.187"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:20:26.187" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:20:26.187" endtime="20220602 01:20:26.187"/>
</kw>
<status status="PASS" starttime="20220602 01:20:22.029" endtime="20220602 01:20:26.188"/>
</kw>
<msg timestamp="20220602 01:20:26.188" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:20:22.029" endtime="20220602 01:20:26.188"/>
</kw>
<msg timestamp="20220602 01:20:26.189" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20220602 01:20:22.028" endtime="20220602 01:20:26.189"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220602 01:20:26.189" endtime="20220602 01:20:26.189"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key addacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:20:26.193" level="INFO">Running command 'ozone sh key addacl o3://om:9862/24354-acls/bb1/key2 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:20:29.915" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:20:29.915" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220602 01:20:26.191" endtime="20220602 01:20:29.915"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:20:29.917" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220602 01:20:29.916" endtime="20220602 01:20:29.917"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:20:29.917" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:20:29.917" endtime="20220602 01:20:29.917"/>
</kw>
<status status="PASS" starttime="20220602 01:20:26.190" endtime="20220602 01:20:29.918"/>
</kw>
<msg timestamp="20220602 01:20:29.918" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:20:26.190" endtime="20220602 01:20:29.918"/>
</kw>
<msg timestamp="20220602 01:20:29.919" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220602 01:20:26.189" endtime="20220602 01:20:29.919"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:20:29.922" level="INFO">Running command 'ozone sh key getacl o3://om:9862/24354-acls/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:20:33.880" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:20:33.880" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20220602 01:20:29.920" endtime="20220602 01:20:33.880"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:20:33.881" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20220602 01:20:33.881" endtime="20220602 01:20:33.882"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:20:33.882" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:20:33.882" endtime="20220602 01:20:33.882"/>
</kw>
<status status="PASS" starttime="20220602 01:20:29.920" endtime="20220602 01:20:33.883"/>
</kw>
<msg timestamp="20220602 01:20:33.883" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:20:29.919" endtime="20220602 01:20:33.883"/>
</kw>
<msg timestamp="20220602 01:20:33.884" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20220602 01:20:29.919" endtime="20220602 01:20:33.884"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220602 01:20:33.884" endtime="20220602 01:20:33.885"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key removeacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:20:33.888" level="INFO">Running command 'ozone sh key removeacl o3://om:9862/24354-acls/bb1/key2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:20:37.568" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:20:37.569" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20220602 01:20:33.886" endtime="20220602 01:20:37.569"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:20:37.570" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20220602 01:20:37.569" endtime="20220602 01:20:37.570"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:20:37.571" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:20:37.570" endtime="20220602 01:20:37.571"/>
</kw>
<status status="PASS" starttime="20220602 01:20:33.886" endtime="20220602 01:20:37.571"/>
</kw>
<msg timestamp="20220602 01:20:37.571" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:20:33.886" endtime="20220602 01:20:37.572"/>
</kw>
<msg timestamp="20220602 01:20:37.572" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20220602 01:20:33.885" endtime="20220602 01:20:37.572"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:20:37.575" level="INFO">Running command 'ozone sh key getacl o3://om:9862/24354-acls/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:20:41.580" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:20:41.580" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20220602 01:20:37.573" endtime="20220602 01:20:41.580"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:20:41.582" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" starttime="20220602 01:20:41.581" endtime="20220602 01:20:41.582"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:20:41.582" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:20:41.582" endtime="20220602 01:20:41.582"/>
</kw>
<status status="PASS" starttime="20220602 01:20:37.573" endtime="20220602 01:20:41.583"/>
</kw>
<msg timestamp="20220602 01:20:41.583" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:20:37.573" endtime="20220602 01:20:41.583"/>
</kw>
<msg timestamp="20220602 01:20:41.584" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20220602 01:20:37.572" endtime="20220602 01:20:41.584"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220602 01:20:41.584" endtime="20220602 01:20:41.584"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key setacl ${protocol}${server}/${volume}/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:20:41.588" level="INFO">Running command 'ozone sh key setacl o3://om:9862/24354-acls/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:20:45.429" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:20:45.429" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20220602 01:20:41.586" endtime="20220602 01:20:45.429"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:20:45.430" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20220602 01:20:45.430" endtime="20220602 01:20:45.430"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:20:45.431" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:20:45.431" endtime="20220602 01:20:45.431"/>
</kw>
<status status="PASS" starttime="20220602 01:20:41.585" endtime="20220602 01:20:45.431"/>
</kw>
<msg timestamp="20220602 01:20:45.431" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:20:41.585" endtime="20220602 01:20:45.432"/>
</kw>
<msg timestamp="20220602 01:20:45.432" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20220602 01:20:41.584" endtime="20220602 01:20:45.432"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:20:45.436" level="INFO">Running command 'ozone sh key getacl o3://om:9862/24354-acls/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:20:49.358" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:20:49.358" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20220602 01:20:45.434" endtime="20220602 01:20:49.358"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:20:49.359" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20220602 01:20:49.359" endtime="20220602 01:20:49.359"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:20:49.360" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:20:49.360" endtime="20220602 01:20:49.360"/>
</kw>
<status status="PASS" starttime="20220602 01:20:45.434" endtime="20220602 01:20:49.360"/>
</kw>
<msg timestamp="20220602 01:20:49.360" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:20:45.433" endtime="20220602 01:20:49.361"/>
</kw>
<msg timestamp="20220602 01:20:49.361" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20220602 01:20:45.432" endtime="20220602 01:20:49.361"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220602 01:20:49.361" endtime="20220602 01:20:49.362"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220602 01:20:49.362" endtime="20220602 01:20:49.362"/>
</kw>
<status status="PASS" starttime="20220602 01:20:16.136" endtime="20220602 01:20:49.363"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220602 01:20:16.111" endtime="20220602 01:20:49.363"/>
</test>
<test id="s1-s1-s5-t5" name="RpcClient prefix acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:20:49.369" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:20:49.372" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:20:49.372" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220602 01:20:49.367" endtime="20220602 01:20:49.372"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:20:49.373" level="INFO">scm</msg>
<status status="PASS" starttime="20220602 01:20:49.373" endtime="20220602 01:20:49.374"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:20:49.374" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:20:49.374" endtime="20220602 01:20:49.375"/>
</kw>
<status status="PASS" starttime="20220602 01:20:49.366" endtime="20220602 01:20:49.375"/>
</kw>
<msg timestamp="20220602 01:20:49.375" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:20:49.366" endtime="20220602 01:20:49.375"/>
</kw>
<msg timestamp="20220602 01:20:49.376" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220602 01:20:49.366" endtime="20220602 01:20:49.376"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220602 01:20:49.376" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220602 01:20:49.376" endtime="20220602 01:20:49.376"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:20:49.380" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:20:49.387" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:20:49.387" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:20:49.379" endtime="20220602 01:20:49.387"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:20:49.388" level="INFO"/>
<status status="PASS" starttime="20220602 01:20:49.387" endtime="20220602 01:20:49.388"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:20:49.389" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:20:49.388" endtime="20220602 01:20:49.389"/>
</kw>
<status status="PASS" starttime="20220602 01:20:49.378" endtime="20220602 01:20:49.389"/>
</kw>
<msg timestamp="20220602 01:20:49.389" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:20:49.378" endtime="20220602 01:20:49.390"/>
</kw>
<status status="PASS" starttime="20220602 01:20:49.377" endtime="20220602 01:20:49.390"/>
</kw>
<status status="PASS" starttime="20220602 01:20:49.377" endtime="20220602 01:20:49.390"/>
</kw>
<status status="PASS" starttime="20220602 01:20:49.365" endtime="20220602 01:20:49.390"/>
</kw>
<status status="PASS" starttime="20220602 01:20:49.365" endtime="20220602 01:20:49.390"/>
</kw>
<kw name="Test prefix Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-acls</arg>
<kw name="Execute" library="os">
<arg>ozone sh prefix addacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:20:49.394" level="INFO">Running command 'ozone sh prefix addacl o3://om:9862/24354-acls/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:20:53.401" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:20:53.401" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20220602 01:20:49.392" endtime="20220602 01:20:53.401"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:20:53.402" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20220602 01:20:53.402" endtime="20220602 01:20:53.402"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:20:53.403" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:20:53.403" endtime="20220602 01:20:53.403"/>
</kw>
<status status="PASS" starttime="20220602 01:20:49.392" endtime="20220602 01:20:53.403"/>
</kw>
<msg timestamp="20220602 01:20:53.404" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:20:49.391" endtime="20220602 01:20:53.404"/>
</kw>
<status status="PASS" starttime="20220602 01:20:49.391" endtime="20220602 01:20:53.404"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:20:53.408" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/24354-acls/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:20:57.391" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:20:57.391" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20220602 01:20:53.406" endtime="20220602 01:20:57.391"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:20:57.393" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20220602 01:20:57.392" endtime="20220602 01:20:57.393"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:20:57.393" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:20:57.393" endtime="20220602 01:20:57.393"/>
</kw>
<status status="PASS" starttime="20220602 01:20:53.405" endtime="20220602 01:20:57.394"/>
</kw>
<msg timestamp="20220602 01:20:57.394" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:20:53.405" endtime="20220602 01:20:57.394"/>
</kw>
<msg timestamp="20220602 01:20:57.395" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20220602 01:20:53.404" endtime="20220602 01:20:57.395"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220602 01:20:57.395" endtime="20220602 01:20:57.396"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix removeacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:20:57.400" level="INFO">Running command 'ozone sh prefix removeacl o3://om:9862/24354-acls/bb1/prefix1/ -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:21:01.324" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:21:01.324" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20220602 01:20:57.397" endtime="20220602 01:21:01.324"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:21:01.325" level="INFO">ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20220602 01:21:01.324" endtime="20220602 01:21:01.325"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:21:01.326" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:21:01.325" endtime="20220602 01:21:01.326"/>
</kw>
<status status="PASS" starttime="20220602 01:20:57.397" endtime="20220602 01:21:01.326"/>
</kw>
<msg timestamp="20220602 01:21:01.326" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:20:57.397" endtime="20220602 01:21:01.327"/>
</kw>
<msg timestamp="20220602 01:21:01.327" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20220602 01:20:57.396" endtime="20220602 01:21:01.327"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:21:01.331" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/24354-acls/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:21:05.367" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:21:05.368" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20220602 01:21:01.329" endtime="20220602 01:21:05.368"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:21:05.369" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20220602 01:21:05.368" endtime="20220602 01:21:05.369"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:21:05.370" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:21:05.369" endtime="20220602 01:21:05.370"/>
</kw>
<status status="PASS" starttime="20220602 01:21:01.328" endtime="20220602 01:21:05.370"/>
</kw>
<msg timestamp="20220602 01:21:05.370" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:21:01.328" endtime="20220602 01:21:05.371"/>
</kw>
<msg timestamp="20220602 01:21:05.371" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20220602 01:21:01.327" endtime="20220602 01:21:05.371"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220602 01:21:05.371" endtime="20220602 01:21:05.372"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix setacl ${protocol}${server}/${volume}/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:21:05.376" level="INFO">Running command 'ozone sh prefix setacl o3://om:9862/24354-acls/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:21:09.303" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:21:09.303" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20220602 01:21:05.374" endtime="20220602 01:21:09.303"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:21:09.305" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20220602 01:21:09.304" endtime="20220602 01:21:09.305"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:21:09.305" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:21:09.305" endtime="20220602 01:21:09.305"/>
</kw>
<status status="PASS" starttime="20220602 01:21:05.373" endtime="20220602 01:21:09.306"/>
</kw>
<msg timestamp="20220602 01:21:09.306" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:21:05.373" endtime="20220602 01:21:09.306"/>
</kw>
<msg timestamp="20220602 01:21:09.307" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20220602 01:21:05.372" endtime="20220602 01:21:09.307"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:21:09.311" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/24354-acls/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:21:13.320" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:21:13.320" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "D...</msg>
<status status="PASS" starttime="20220602 01:21:09.309" endtime="20220602 01:21:13.320"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:21:13.321" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20220602 01:21:13.320" endtime="20220602 01:21:13.321"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:21:13.322" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:21:13.321" endtime="20220602 01:21:13.322"/>
</kw>
<status status="PASS" starttime="20220602 01:21:09.308" endtime="20220602 01:21:13.322"/>
</kw>
<msg timestamp="20220602 01:21:13.322" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:21:09.307" endtime="20220602 01:21:13.323"/>
</kw>
<msg timestamp="20220602 01:21:13.323" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "D...</msg>
<status status="PASS" starttime="20220602 01:21:09.307" endtime="20220602 01:21:13.323"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220602 01:21:13.323" endtime="20220602 01:21:13.324"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220602 01:21:13.324" endtime="20220602 01:21:13.324"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:21:13.329" level="INFO">Running command 'ozone sh key put o3://om:9862/24354-acls/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:21:19.624" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:21:19.624" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:21:13.326" endtime="20220602 01:21:19.624"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:21:19.625" level="INFO"/>
<status status="PASS" starttime="20220602 01:21:19.625" endtime="20220602 01:21:19.625"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:21:19.626" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:21:19.626" endtime="20220602 01:21:19.626"/>
</kw>
<status status="PASS" starttime="20220602 01:21:13.325" endtime="20220602 01:21:19.626"/>
</kw>
<msg timestamp="20220602 01:21:19.627" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:21:13.325" endtime="20220602 01:21:19.627"/>
</kw>
<status status="PASS" starttime="20220602 01:21:13.325" endtime="20220602 01:21:19.627"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/prefix1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:21:19.631" level="INFO">Running command 'ozone sh key getacl o3://om:9862/24354-acls/bb1/prefix1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:21:23.475" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:21:23.475" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20220602 01:21:19.629" endtime="20220602 01:21:23.475"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:21:23.477" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20220602 01:21:23.476" endtime="20220602 01:21:23.477"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:21:23.477" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:21:23.477" endtime="20220602 01:21:23.477"/>
</kw>
<status status="PASS" starttime="20220602 01:21:19.628" endtime="20220602 01:21:23.478"/>
</kw>
<msg timestamp="20220602 01:21:23.478" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:21:19.628" endtime="20220602 01:21:23.478"/>
</kw>
<msg timestamp="20220602 01:21:23.479" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20220602 01:21:19.628" endtime="20220602 01:21:23.479"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220602 01:21:23.479" endtime="20220602 01:21:23.479"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220602 01:21:23.479" endtime="20220602 01:21:23.480"/>
</kw>
<status status="PASS" starttime="20220602 01:20:49.390" endtime="20220602 01:21:23.480"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220602 01:20:49.364" endtime="20220602 01:21:23.480"/>
</test>
<test id="s1-s1-s5-t6" name="RpcClient without host">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:21:23.488" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:21:23.491" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:21:23.491" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220602 01:21:23.484" endtime="20220602 01:21:23.491"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:21:23.493" level="INFO">scm</msg>
<status status="PASS" starttime="20220602 01:21:23.491" endtime="20220602 01:21:23.493"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:21:23.494" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:21:23.493" endtime="20220602 01:21:23.494"/>
</kw>
<status status="PASS" starttime="20220602 01:21:23.484" endtime="20220602 01:21:23.494"/>
</kw>
<msg timestamp="20220602 01:21:23.494" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:21:23.484" endtime="20220602 01:21:23.495"/>
</kw>
<msg timestamp="20220602 01:21:23.495" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220602 01:21:23.483" endtime="20220602 01:21:23.495"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220602 01:21:23.496" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220602 01:21:23.495" endtime="20220602 01:21:23.496"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:21:23.500" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:21:23.508" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:21:23.508" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:21:23.498" endtime="20220602 01:21:23.508"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:21:23.509" level="INFO"/>
<status status="PASS" starttime="20220602 01:21:23.509" endtime="20220602 01:21:23.510"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:21:23.510" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:21:23.510" endtime="20220602 01:21:23.510"/>
</kw>
<status status="PASS" starttime="20220602 01:21:23.497" endtime="20220602 01:21:23.511"/>
</kw>
<msg timestamp="20220602 01:21:23.511" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:21:23.497" endtime="20220602 01:21:23.511"/>
</kw>
<status status="PASS" starttime="20220602 01:21:23.496" endtime="20220602 01:21:23.512"/>
</kw>
<status status="PASS" starttime="20220602 01:21:23.496" endtime="20220602 01:21:23.512"/>
</kw>
<status status="PASS" starttime="20220602 01:21:23.483" endtime="20220602 01:21:23.512"/>
</kw>
<status status="PASS" starttime="20220602 01:21:23.482" endtime="20220602 01:21:23.512"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-without-host</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:21:23.516" level="INFO">Running command 'ozone sh volume info o3:///24354-without-host 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:21:27.214" level="INFO">${rc} = 255</msg>
<msg timestamp="20220602 01:21:27.214" level="INFO">${output} = VOLUME_NOT_FOUND Volume 24354-without-host is not found</msg>
<status status="PASS" starttime="20220602 01:21:23.514" endtime="20220602 01:21:27.214"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:21:27.216" level="INFO">VOLUME_NOT_FOUND Volume 24354-without-host is not found</msg>
<status status="PASS" starttime="20220602 01:21:27.215" endtime="20220602 01:21:27.216"/>
</kw>
<msg timestamp="20220602 01:21:27.216" level="INFO">${result} = VOLUME_NOT_FOUND Volume 24354-without-host is not found</msg>
<status status="PASS" starttime="20220602 01:21:23.514" endtime="20220602 01:21:27.216"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220602 01:21:27.216" endtime="20220602 01:21:27.217"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:21:27.220" level="INFO">Running command 'ozone sh volume create o3:///24354-without-host --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:21:31.003" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:21:31.003" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:21:27.218" endtime="20220602 01:21:31.003"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:21:31.005" level="INFO"/>
<status status="PASS" starttime="20220602 01:21:31.004" endtime="20220602 01:21:31.005"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:21:31.005" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:21:31.005" endtime="20220602 01:21:31.005"/>
</kw>
<status status="PASS" starttime="20220602 01:21:27.218" endtime="20220602 01:21:31.006"/>
</kw>
<msg timestamp="20220602 01:21:31.006" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:21:27.217" endtime="20220602 01:21:31.006"/>
</kw>
<msg timestamp="20220602 01:21:31.006" level="INFO">${result} = </msg>
<status status="PASS" starttime="20220602 01:21:27.217" endtime="20220602 01:21:31.006"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220602 01:21:31.007" endtime="20220602 01:21:31.007"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:21:31.011" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '.[] | select(.name=="24354-without-host")' 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:21:34.940" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:21:34.941" level="INFO">${output} = {
  "metadata": {},
  "name": "24354-without-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": ...</msg>
<status status="PASS" starttime="20220602 01:21:31.009" endtime="20220602 01:21:34.941"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:21:34.942" level="INFO">{
  "metadata": {},
  "name": "24354-without-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2022-06-02T01:21:30.946Z",
  "modificationTime": "2022-06-02T01:21:30.946Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "refCount": 0
}</msg>
<status status="PASS" starttime="20220602 01:21:34.941" endtime="20220602 01:21:34.942"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:21:34.943" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:21:34.942" endtime="20220602 01:21:34.943"/>
</kw>
<status status="PASS" starttime="20220602 01:21:31.008" endtime="20220602 01:21:34.943"/>
</kw>
<msg timestamp="20220602 01:21:34.943" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:21:31.008" endtime="20220602 01:21:34.944"/>
</kw>
<msg timestamp="20220602 01:21:34.944" level="INFO">${result} = {
  "metadata": {},
  "name": "24354-without-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": ...</msg>
<status status="PASS" starttime="20220602 01:21:31.007" endtime="20220602 01:21:34.944"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220602 01:21:34.944" endtime="20220602 01:21:34.944"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:21:34.948" level="INFO">Running command 'ozone sh volume list | jq -r '.[] | select(.name=="24354-without-host")' 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:21:38.942" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:21:38.942" level="INFO">${output} = {
  "metadata": {},
  "name": "24354-without-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": ...</msg>
<status status="PASS" starttime="20220602 01:21:34.946" endtime="20220602 01:21:38.942"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:21:38.944" level="INFO">{
  "metadata": {},
  "name": "24354-without-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2022-06-02T01:21:30.946Z",
  "modificationTime": "2022-06-02T01:21:30.946Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "refCount": 0
}</msg>
<status status="PASS" starttime="20220602 01:21:38.943" endtime="20220602 01:21:38.944"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:21:38.944" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:21:38.944" endtime="20220602 01:21:38.944"/>
</kw>
<status status="PASS" starttime="20220602 01:21:34.945" endtime="20220602 01:21:38.945"/>
</kw>
<msg timestamp="20220602 01:21:38.945" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:21:34.945" endtime="20220602 01:21:38.946"/>
</kw>
<msg timestamp="20220602 01:21:38.946" level="INFO">${result} = {
  "metadata": {},
  "name": "24354-without-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": ...</msg>
<status status="PASS" starttime="20220602 01:21:34.945" endtime="20220602 01:21:38.946"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220602 01:21:38.946" endtime="20220602 01:21:38.947"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:21:38.958" level="INFO">Running command 'ozone sh volume setquota o3:///24354-without-host --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:21:42.545" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:21:42.545" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:21:38.949" endtime="20220602 01:21:42.545"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:21:42.546" level="INFO"/>
<status status="PASS" starttime="20220602 01:21:42.546" endtime="20220602 01:21:42.546"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:21:42.547" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:21:42.547" endtime="20220602 01:21:42.547"/>
</kw>
<status status="PASS" starttime="20220602 01:21:38.948" endtime="20220602 01:21:42.547"/>
</kw>
<msg timestamp="20220602 01:21:42.547" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:21:38.948" endtime="20220602 01:21:42.548"/>
</kw>
<status status="PASS" starttime="20220602 01:21:38.947" endtime="20220602 01:21:42.548"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:21:42.552" level="INFO">Running command 'ozone sh volume info o3:///24354-without-host | jq -r '. | select(.name=="24354-without-host") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:21:46.452" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:21:46.452" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20220602 01:21:42.550" endtime="20220602 01:21:46.452"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:21:46.453" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20220602 01:21:46.453" endtime="20220602 01:21:46.453"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:21:46.454" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:21:46.454" endtime="20220602 01:21:46.454"/>
</kw>
<status status="PASS" starttime="20220602 01:21:42.550" endtime="20220602 01:21:46.454"/>
</kw>
<msg timestamp="20220602 01:21:46.454" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:21:42.549" endtime="20220602 01:21:46.455"/>
</kw>
<msg timestamp="20220602 01:21:46.455" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20220602 01:21:42.548" endtime="20220602 01:21:46.455"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220602 01:21:46.456" endtime="20220602 01:21:46.456"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:21:46.460" level="INFO">Running command 'ozone sh bucket create o3:///24354-without-host/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:21:50.337" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:21:50.337" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:21:46.457" endtime="20220602 01:21:50.337"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:21:50.338" level="INFO"/>
<status status="PASS" starttime="20220602 01:21:50.338" endtime="20220602 01:21:50.339"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:21:50.339" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:21:50.339" endtime="20220602 01:21:50.339"/>
</kw>
<status status="PASS" starttime="20220602 01:21:46.457" endtime="20220602 01:21:50.340"/>
</kw>
<msg timestamp="20220602 01:21:50.340" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:21:46.457" endtime="20220602 01:21:50.340"/>
</kw>
<status status="PASS" starttime="20220602 01:21:46.456" endtime="20220602 01:21:50.340"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:21:50.345" level="INFO">Running command 'ozone sh bucket info o3:///24354-without-host/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:21:54.390" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:21:54.390" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20220602 01:21:50.342" endtime="20220602 01:21:54.390"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:21:54.392" level="INFO">DISK</msg>
<status status="PASS" starttime="20220602 01:21:54.391" endtime="20220602 01:21:54.392"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:21:54.392" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:21:54.392" endtime="20220602 01:21:54.392"/>
</kw>
<status status="PASS" starttime="20220602 01:21:50.342" endtime="20220602 01:21:54.393"/>
</kw>
<msg timestamp="20220602 01:21:54.393" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:21:50.341" endtime="20220602 01:21:54.393"/>
</kw>
<msg timestamp="20220602 01:21:54.394" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20220602 01:21:50.341" endtime="20220602 01:21:54.394"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220602 01:21:54.394" endtime="20220602 01:21:54.394"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:21:54.398" level="INFO">Running command 'ozone sh bucket info o3:///24354-without-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:21:58.267" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:21:58.267" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20220602 01:21:54.396" endtime="20220602 01:21:58.267"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:21:58.269" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20220602 01:21:58.268" endtime="20220602 01:21:58.269"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:21:58.269" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:21:58.269" endtime="20220602 01:21:58.270"/>
</kw>
<status status="PASS" starttime="20220602 01:21:54.396" endtime="20220602 01:21:58.270"/>
</kw>
<msg timestamp="20220602 01:21:58.270" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:21:54.395" endtime="20220602 01:21:58.270"/>
</kw>
<msg timestamp="20220602 01:21:58.271" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20220602 01:21:54.394" endtime="20220602 01:21:58.271"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220602 01:21:58.271" endtime="20220602 01:21:58.272"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:21:58.275" level="INFO">Running command 'ozone sh bucket info o3:///24354-without-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:22:02.203" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:22:02.204" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20220602 01:21:58.273" endtime="20220602 01:22:02.204"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:22:02.205" level="INFO">100</msg>
<status status="PASS" starttime="20220602 01:22:02.204" endtime="20220602 01:22:02.205"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:22:02.205" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:22:02.205" endtime="20220602 01:22:02.206"/>
</kw>
<status status="PASS" starttime="20220602 01:21:58.273" endtime="20220602 01:22:02.206"/>
</kw>
<msg timestamp="20220602 01:22:02.206" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:21:58.273" endtime="20220602 01:22:02.206"/>
</kw>
<msg timestamp="20220602 01:22:02.207" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20220602 01:21:58.272" endtime="20220602 01:22:02.207"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220602 01:22:02.207" endtime="20220602 01:22:02.207"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:22:02.211" level="INFO">Running command 'ozone sh bucket setquota o3:///24354-without-host/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:22:05.809" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:22:05.809" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:22:02.209" endtime="20220602 01:22:05.809"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:22:05.811" level="INFO"/>
<status status="PASS" starttime="20220602 01:22:05.810" endtime="20220602 01:22:05.811"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:22:05.811" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:22:05.811" endtime="20220602 01:22:05.811"/>
</kw>
<status status="PASS" starttime="20220602 01:22:02.208" endtime="20220602 01:22:05.812"/>
</kw>
<msg timestamp="20220602 01:22:05.812" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:22:02.208" endtime="20220602 01:22:05.812"/>
</kw>
<status status="PASS" starttime="20220602 01:22:02.207" endtime="20220602 01:22:05.813"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:22:05.816" level="INFO">Running command 'ozone sh bucket info o3:///24354-without-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:22:09.744" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:22:09.744" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20220602 01:22:05.814" endtime="20220602 01:22:09.744"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:22:09.745" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20220602 01:22:09.744" endtime="20220602 01:22:09.745"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:22:09.746" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:22:09.745" endtime="20220602 01:22:09.746"/>
</kw>
<status status="PASS" starttime="20220602 01:22:05.814" endtime="20220602 01:22:09.747"/>
</kw>
<msg timestamp="20220602 01:22:09.747" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:22:05.814" endtime="20220602 01:22:09.747"/>
</kw>
<msg timestamp="20220602 01:22:09.747" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20220602 01:22:05.813" endtime="20220602 01:22:09.747"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220602 01:22:09.748" endtime="20220602 01:22:09.748"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:22:09.751" level="INFO">Running command 'ozone sh bucket info o3:///24354-without-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:22:13.857" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:22:13.857" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20220602 01:22:09.749" endtime="20220602 01:22:13.857"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:22:13.858" level="INFO">1000</msg>
<status status="PASS" starttime="20220602 01:22:13.857" endtime="20220602 01:22:13.858"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:22:13.859" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:22:13.858" endtime="20220602 01:22:13.859"/>
</kw>
<status status="PASS" starttime="20220602 01:22:09.749" endtime="20220602 01:22:13.859"/>
</kw>
<msg timestamp="20220602 01:22:13.859" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:22:09.749" endtime="20220602 01:22:13.860"/>
</kw>
<msg timestamp="20220602 01:22:13.860" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20220602 01:22:09.748" endtime="20220602 01:22:13.860"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220602 01:22:13.860" endtime="20220602 01:22:13.861"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '.[] | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:22:13.865" level="INFO">Running command 'ozone sh bucket list o3:///24354-without-host/ | jq -r '.[] | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:22:17.906" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:22:17.906" level="INFO">${output} = 24354-without-host</msg>
<status status="PASS" starttime="20220602 01:22:13.863" endtime="20220602 01:22:17.906"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:22:17.907" level="INFO">24354-without-host</msg>
<status status="PASS" starttime="20220602 01:22:17.907" endtime="20220602 01:22:17.908"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:22:17.908" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:22:17.908" endtime="20220602 01:22:17.908"/>
</kw>
<status status="PASS" starttime="20220602 01:22:13.862" endtime="20220602 01:22:17.909"/>
</kw>
<msg timestamp="20220602 01:22:17.909" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:22:13.862" endtime="20220602 01:22:17.909"/>
</kw>
<msg timestamp="20220602 01:22:17.909" level="INFO">${result} = 24354-without-host</msg>
<status status="PASS" starttime="20220602 01:22:13.861" endtime="20220602 01:22:17.909"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220602 01:22:17.910" endtime="20220602 01:22:17.910"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:22:17.915" level="INFO">Running command 'ozone sh key put o3:///24354-without-host/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:22:24.016" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:22:24.016" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:22:17.913" endtime="20220602 01:22:24.016"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:22:24.017" level="INFO"/>
<status status="PASS" starttime="20220602 01:22:24.016" endtime="20220602 01:22:24.017"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:22:24.018" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:22:24.017" endtime="20220602 01:22:24.018"/>
</kw>
<status status="PASS" starttime="20220602 01:22:17.912" endtime="20220602 01:22:24.018"/>
</kw>
<msg timestamp="20220602 01:22:24.018" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:22:17.912" endtime="20220602 01:22:24.019"/>
</kw>
<status status="PASS" starttime="20220602 01:22:17.911" endtime="20220602 01:22:24.019"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:22:24.023" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:22:24.026" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:22:24.026" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:22:24.021" endtime="20220602 01:22:24.026"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:22:24.027" level="INFO"/>
<status status="PASS" starttime="20220602 01:22:24.026" endtime="20220602 01:22:24.027"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:22:24.027" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:22:24.027" endtime="20220602 01:22:24.028"/>
</kw>
<status status="PASS" starttime="20220602 01:22:24.020" endtime="20220602 01:22:24.028"/>
</kw>
<msg timestamp="20220602 01:22:24.028" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:22:24.020" endtime="20220602 01:22:24.028"/>
</kw>
<status status="PASS" starttime="20220602 01:22:24.019" endtime="20220602 01:22:24.029"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:22:24.032" level="INFO">Running command 'ozone sh key get o3:///24354-without-host/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:22:29.975" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:22:29.975" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:22:24.030" endtime="20220602 01:22:29.975"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:22:29.977" level="INFO"/>
<status status="PASS" starttime="20220602 01:22:29.976" endtime="20220602 01:22:29.977"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:22:29.977" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:22:29.977" endtime="20220602 01:22:29.978"/>
</kw>
<status status="PASS" starttime="20220602 01:22:24.030" endtime="20220602 01:22:29.978"/>
</kw>
<msg timestamp="20220602 01:22:29.978" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:22:24.029" endtime="20220602 01:22:29.978"/>
</kw>
<status status="PASS" starttime="20220602 01:22:24.029" endtime="20220602 01:22:29.979"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:22:29.982" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:22:29.985" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:22:29.985" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:22:29.980" endtime="20220602 01:22:29.985"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:22:29.986" level="INFO"/>
<status status="PASS" starttime="20220602 01:22:29.986" endtime="20220602 01:22:29.986"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:22:29.987" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:22:29.986" endtime="20220602 01:22:29.987"/>
</kw>
<status status="PASS" starttime="20220602 01:22:29.980" endtime="20220602 01:22:29.987"/>
</kw>
<msg timestamp="20220602 01:22:29.987" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:22:29.980" endtime="20220602 01:22:29.988"/>
</kw>
<status status="PASS" starttime="20220602 01:22:29.979" endtime="20220602 01:22:29.988"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:22:29.992" level="INFO">Running command 'ozone sh key put -t RATIS o3:///24354-without-host/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:22:35.854" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:22:35.854" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:22:29.990" endtime="20220602 01:22:35.855"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:22:35.856" level="INFO"/>
<status status="PASS" starttime="20220602 01:22:35.855" endtime="20220602 01:22:35.856"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:22:35.856" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:22:35.856" endtime="20220602 01:22:35.856"/>
</kw>
<status status="PASS" starttime="20220602 01:22:29.989" endtime="20220602 01:22:35.857"/>
</kw>
<msg timestamp="20220602 01:22:35.857" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:22:29.989" endtime="20220602 01:22:35.857"/>
</kw>
<status status="PASS" starttime="20220602 01:22:29.988" endtime="20220602 01:22:35.858"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:22:35.862" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:22:35.864" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:22:35.864" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:22:35.859" endtime="20220602 01:22:35.864"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:22:35.865" level="INFO"/>
<status status="PASS" starttime="20220602 01:22:35.865" endtime="20220602 01:22:35.865"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:22:35.866" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:22:35.866" endtime="20220602 01:22:35.867"/>
</kw>
<status status="PASS" starttime="20220602 01:22:35.859" endtime="20220602 01:22:35.867"/>
</kw>
<msg timestamp="20220602 01:22:35.867" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:22:35.858" endtime="20220602 01:22:35.868"/>
</kw>
<status status="PASS" starttime="20220602 01:22:35.858" endtime="20220602 01:22:35.868"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:22:35.872" level="INFO">Running command 'ozone sh key get o3:///24354-without-host/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:22:41.659" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:22:41.659" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:22:35.869" endtime="20220602 01:22:41.659"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:22:41.660" level="INFO"/>
<status status="PASS" starttime="20220602 01:22:41.659" endtime="20220602 01:22:41.660"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:22:41.660" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:22:41.660" endtime="20220602 01:22:41.661"/>
</kw>
<status status="PASS" starttime="20220602 01:22:35.869" endtime="20220602 01:22:41.661"/>
</kw>
<msg timestamp="20220602 01:22:41.661" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:22:35.869" endtime="20220602 01:22:41.662"/>
</kw>
<status status="PASS" starttime="20220602 01:22:35.868" endtime="20220602 01:22:41.662"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:22:41.665" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:22:41.667" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:22:41.667" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:22:41.663" endtime="20220602 01:22:41.668"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:22:41.668" level="INFO"/>
<status status="PASS" starttime="20220602 01:22:41.668" endtime="20220602 01:22:41.668"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:22:41.669" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:22:41.669" endtime="20220602 01:22:41.669"/>
</kw>
<status status="PASS" starttime="20220602 01:22:41.663" endtime="20220602 01:22:41.669"/>
</kw>
<msg timestamp="20220602 01:22:41.669" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:22:41.662" endtime="20220602 01:22:41.670"/>
</kw>
<status status="PASS" starttime="20220602 01:22:41.662" endtime="20220602 01:22:41.670"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:22:41.674" level="INFO">Running command 'ozone sh key info o3:///24354-without-host/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:22:46.010" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:22:46.010" level="INFO">${output} = {
  "volumeName": "24354-without-host",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17526,
  "creationTime": "2022-06-02T01:22:33.474Z",
  "modificationTime": "2022-06-02T01:22:35.272...</msg>
<status status="PASS" starttime="20220602 01:22:41.672" endtime="20220602 01:22:46.010"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:22:46.011" level="INFO">{
  "volumeName": "24354-without-host",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17526,
  "creationTime": "2022-06-02T01:22:33.474Z",
  "modificationTime": "2022-06-02T01:22:35.272Z",
  "replicationConfig": {
    "replicationFactor": "THREE",
    "requiredNodes": 3,
    "replicationType": "RATIS"
  },
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 109611004723200020,
      "length": 17526,
      "offset": 0,
      "keyOffset": 0
    }
  ],
  "metadata": {}
}</msg>
<status status="PASS" starttime="20220602 01:22:46.011" endtime="20220602 01:22:46.011"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:22:46.012" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:22:46.012" endtime="20220602 01:22:46.012"/>
</kw>
<status status="PASS" starttime="20220602 01:22:41.671" endtime="20220602 01:22:46.012"/>
</kw>
<msg timestamp="20220602 01:22:46.013" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:22:41.671" endtime="20220602 01:22:46.013"/>
</kw>
<msg timestamp="20220602 01:22:46.013" level="INFO">${result} = {
  "volumeName": "24354-without-host",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17526,
  "creationTime": "2022-06-02T01:22:33.474Z",
  "modificationTime": "2022-06-02T01:22:35.272...</msg>
<status status="PASS" starttime="20220602 01:22:41.670" endtime="20220602 01:22:46.013"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220602 01:22:46.014" endtime="20220602 01:22:46.014"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:22:46.018" level="INFO">Running command 'ozone sh key delete o3:///24354-without-host/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:22:49.491" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:22:49.491" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:22:46.016" endtime="20220602 01:22:49.491"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:22:49.492" level="INFO"/>
<status status="PASS" starttime="20220602 01:22:49.491" endtime="20220602 01:22:49.492"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:22:49.493" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:22:49.492" endtime="20220602 01:22:49.493"/>
</kw>
<status status="PASS" starttime="20220602 01:22:46.015" endtime="20220602 01:22:49.493"/>
</kw>
<msg timestamp="20220602 01:22:49.493" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:22:46.015" endtime="20220602 01:22:49.494"/>
</kw>
<status status="PASS" starttime="20220602 01:22:46.014" endtime="20220602 01:22:49.494"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:22:49.500" level="INFO">Running command 'ozone sh key cp o3:///24354-without-host/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:22:55.732" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:22:55.732" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:22:49.496" endtime="20220602 01:22:55.732"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:22:55.733" level="INFO"/>
<status status="PASS" starttime="20220602 01:22:55.732" endtime="20220602 01:22:55.733"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:22:55.734" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:22:55.733" endtime="20220602 01:22:55.734"/>
</kw>
<status status="PASS" starttime="20220602 01:22:49.496" endtime="20220602 01:22:55.734"/>
</kw>
<msg timestamp="20220602 01:22:55.734" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:22:49.495" endtime="20220602 01:22:55.735"/>
</kw>
<status status="PASS" starttime="20220602 01:22:49.494" endtime="20220602 01:22:55.735"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:22:55.738" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:22:55.741" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:22:55.741" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:22:55.736" endtime="20220602 01:22:55.741"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:22:55.742" level="INFO"/>
<status status="PASS" starttime="20220602 01:22:55.741" endtime="20220602 01:22:55.742"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:22:55.743" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:22:55.742" endtime="20220602 01:22:55.743"/>
</kw>
<status status="PASS" starttime="20220602 01:22:55.736" endtime="20220602 01:22:55.743"/>
</kw>
<msg timestamp="20220602 01:22:55.743" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:22:55.736" endtime="20220602 01:22:55.744"/>
</kw>
<status status="PASS" starttime="20220602 01:22:55.735" endtime="20220602 01:22:55.744"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:22:55.747" level="INFO">Running command 'ozone sh key get o3:///24354-without-host/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:23:01.493" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:23:01.493" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:22:55.745" endtime="20220602 01:23:01.493"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:23:01.494" level="INFO"/>
<status status="PASS" starttime="20220602 01:23:01.493" endtime="20220602 01:23:01.494"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:23:01.495" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:23:01.494" endtime="20220602 01:23:01.495"/>
</kw>
<status status="PASS" starttime="20220602 01:22:55.745" endtime="20220602 01:23:01.495"/>
</kw>
<msg timestamp="20220602 01:23:01.495" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:22:55.745" endtime="20220602 01:23:01.496"/>
</kw>
<status status="PASS" starttime="20220602 01:22:55.744" endtime="20220602 01:23:01.496"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:23:01.500" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:23:01.502" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:23:01.502" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:23:01.497" endtime="20220602 01:23:01.502"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:23:01.503" level="INFO"/>
<status status="PASS" starttime="20220602 01:23:01.503" endtime="20220602 01:23:01.504"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:23:01.504" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:23:01.504" endtime="20220602 01:23:01.504"/>
</kw>
<status status="PASS" starttime="20220602 01:23:01.497" endtime="20220602 01:23:01.505"/>
</kw>
<msg timestamp="20220602 01:23:01.505" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:23:01.497" endtime="20220602 01:23:01.505"/>
</kw>
<status status="PASS" starttime="20220602 01:23:01.496" endtime="20220602 01:23:01.505"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:23:01.509" level="INFO">Running command 'ozone sh key delete o3:///24354-without-host/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:23:08.152" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:23:08.152" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:23:01.507" endtime="20220602 01:23:08.152"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:23:08.153" level="INFO"/>
<status status="PASS" starttime="20220602 01:23:08.152" endtime="20220602 01:23:08.153"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:23:08.154" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:23:08.153" endtime="20220602 01:23:08.155"/>
</kw>
<status status="PASS" starttime="20220602 01:23:01.506" endtime="20220602 01:23:08.155"/>
</kw>
<msg timestamp="20220602 01:23:08.155" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:23:01.506" endtime="20220602 01:23:08.156"/>
</kw>
<status status="PASS" starttime="20220602 01:23:01.506" endtime="20220602 01:23:08.156"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:23:08.159" level="INFO">Running command 'ozone sh key get o3:///24354-without-host/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:23:14.439" level="INFO">${rc} = 255</msg>
<msg timestamp="20220602 01:23:14.439" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20220602 01:23:08.157" endtime="20220602 01:23:14.439"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:23:14.440" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20220602 01:23:14.440" endtime="20220602 01:23:14.441"/>
</kw>
<msg timestamp="20220602 01:23:14.441" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20220602 01:23:08.156" endtime="20220602 01:23:14.441"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220602 01:23:14.441" endtime="20220602 01:23:14.442"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:23:14.446" level="INFO">Running command 'ozone sh key get --force o3:///24354-without-host/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:23:20.315" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:23:20.315" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:23:14.444" endtime="20220602 01:23:20.315"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:23:20.317" level="INFO"/>
<status status="PASS" starttime="20220602 01:23:20.316" endtime="20220602 01:23:20.317"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:23:20.317" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:23:20.317" endtime="20220602 01:23:20.317"/>
</kw>
<status status="PASS" starttime="20220602 01:23:14.443" endtime="20220602 01:23:20.318"/>
</kw>
<msg timestamp="20220602 01:23:20.318" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:23:14.443" endtime="20220602 01:23:20.318"/>
</kw>
<msg timestamp="20220602 01:23:20.319" level="INFO">${result} = </msg>
<status status="PASS" starttime="20220602 01:23:14.442" endtime="20220602 01:23:20.319"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220602 01:23:20.319" endtime="20220602 01:23:20.319"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:23:20.323" level="INFO">Running command 'ozone sh key info o3:///24354-without-host/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:23:24.519" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:23:24.520" level="INFO">${output} = {
  "volumeName": "24354-without-host",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17526,
  "creationTime": "2022-06-02T01:22:21.608Z",
  "modificationTime": "2022-06-02T01:22:23.456Z",
  ...</msg>
<status status="PASS" starttime="20220602 01:23:20.321" endtime="20220602 01:23:24.520"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:23:24.521" level="INFO">{
  "volumeName": "24354-without-host",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17526,
  "creationTime": "2022-06-02T01:22:21.608Z",
  "modificationTime": "2022-06-02T01:22:23.456Z",
  "replicationConfig": {
    "replicationFactor": "ONE",
    "requiredNodes": 1,
    "replicationType": "RATIS"
  },
  "ozoneKeyLocations": [
    {
      "containerID": 3,
      "localID": 109611004723200020,
      "length": 17526,
      "offset": 0,
      "keyOffset": 0
    }
  ],
  "metadata": {}
}</msg>
<status status="PASS" starttime="20220602 01:23:24.520" endtime="20220602 01:23:24.521"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:23:24.522" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:23:24.521" endtime="20220602 01:23:24.522"/>
</kw>
<status status="PASS" starttime="20220602 01:23:20.320" endtime="20220602 01:23:24.522"/>
</kw>
<msg timestamp="20220602 01:23:24.522" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:23:20.320" endtime="20220602 01:23:24.523"/>
</kw>
<msg timestamp="20220602 01:23:24.523" level="INFO">${result} = {
  "volumeName": "24354-without-host",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17526,
  "creationTime": "2022-06-02T01:22:21.608Z",
  "modificationTime": "2022-06-02T01:22:23.456Z",
  ...</msg>
<status status="PASS" starttime="20220602 01:23:20.319" endtime="20220602 01:23:24.523"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220602 01:23:24.523" endtime="20220602 01:23:24.523"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[] | select(.name=="key1") | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:23:24.529" level="INFO">Running command 'ozone sh key list o3:///24354-without-host/bb1 | jq -r '.[] | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:23:28.547" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:23:28.547" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20220602 01:23:24.525" endtime="20220602 01:23:28.547"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:23:28.548" level="INFO">key1</msg>
<status status="PASS" starttime="20220602 01:23:28.547" endtime="20220602 01:23:28.548"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:23:28.549" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:23:28.548" endtime="20220602 01:23:28.549"/>
</kw>
<status status="PASS" starttime="20220602 01:23:24.525" endtime="20220602 01:23:28.549"/>
</kw>
<msg timestamp="20220602 01:23:28.549" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:23:24.524" endtime="20220602 01:23:28.550"/>
</kw>
<msg timestamp="20220602 01:23:28.550" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20220602 01:23:24.524" endtime="20220602 01:23:28.550"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220602 01:23:28.550" endtime="20220602 01:23:28.551"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:23:28.555" level="INFO">Running command 'ozone sh key rename o3:///24354-without-host/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:23:32.164" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:23:32.164" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:23:28.552" endtime="20220602 01:23:32.164"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:23:32.166" level="INFO"/>
<status status="PASS" starttime="20220602 01:23:32.165" endtime="20220602 01:23:32.166"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:23:32.166" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:23:32.166" endtime="20220602 01:23:32.166"/>
</kw>
<status status="PASS" starttime="20220602 01:23:28.552" endtime="20220602 01:23:32.167"/>
</kw>
<msg timestamp="20220602 01:23:32.167" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:23:28.552" endtime="20220602 01:23:32.167"/>
</kw>
<status status="PASS" starttime="20220602 01:23:28.551" endtime="20220602 01:23:32.168"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:23:32.172" level="INFO">Running command 'ozone sh key list o3:///24354-without-host/bb1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:23:36.234" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:23:36.234" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20220602 01:23:32.169" endtime="20220602 01:23:36.234"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:23:36.235" level="INFO">key2</msg>
<status status="PASS" starttime="20220602 01:23:36.234" endtime="20220602 01:23:36.235"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:23:36.236" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:23:36.235" endtime="20220602 01:23:36.236"/>
</kw>
<status status="PASS" starttime="20220602 01:23:32.169" endtime="20220602 01:23:36.236"/>
</kw>
<msg timestamp="20220602 01:23:36.236" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:23:32.168" endtime="20220602 01:23:36.237"/>
</kw>
<msg timestamp="20220602 01:23:36.237" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20220602 01:23:32.168" endtime="20220602 01:23:36.237"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220602 01:23:36.237" endtime="20220602 01:23:36.238"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:23:36.241" level="INFO">Running command 'ozone sh key delete o3:///24354-without-host/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:23:40.010" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:23:40.010" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:23:36.239" endtime="20220602 01:23:40.010"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:23:40.012" level="INFO"/>
<status status="PASS" starttime="20220602 01:23:40.011" endtime="20220602 01:23:40.012"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:23:40.012" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:23:40.012" endtime="20220602 01:23:40.012"/>
</kw>
<status status="PASS" starttime="20220602 01:23:36.239" endtime="20220602 01:23:40.013"/>
</kw>
<msg timestamp="20220602 01:23:40.013" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:23:36.239" endtime="20220602 01:23:40.013"/>
</kw>
<status status="PASS" starttime="20220602 01:23:36.238" endtime="20220602 01:23:40.013"/>
</kw>
<status status="PASS" starttime="20220602 01:22:17.910" endtime="20220602 01:23:40.014"/>
</kw>
<status status="PASS" starttime="20220602 01:22:17.910" endtime="20220602 01:23:40.014"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:23:40.017" level="INFO">Running command 'ozone sh volume clrquota --space-quota o3:///24354-without-host 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:23:43.702" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:23:43.702" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:23:40.015" endtime="20220602 01:23:43.702"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:23:43.703" level="INFO"/>
<status status="PASS" starttime="20220602 01:23:43.702" endtime="20220602 01:23:43.703"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:23:43.704" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:23:43.703" endtime="20220602 01:23:43.704"/>
</kw>
<status status="PASS" starttime="20220602 01:23:40.015" endtime="20220602 01:23:43.705"/>
</kw>
<msg timestamp="20220602 01:23:43.705" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:23:40.015" endtime="20220602 01:23:43.705"/>
</kw>
<status status="PASS" starttime="20220602 01:23:40.014" endtime="20220602 01:23:43.705"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:23:43.709" level="INFO">Running command 'ozone sh volume info o3:///24354-without-host | jq -r '. | select(.name=="24354-without-host") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:23:47.845" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:23:47.845" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20220602 01:23:43.707" endtime="20220602 01:23:47.845"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:23:47.846" level="INFO">-1</msg>
<status status="PASS" starttime="20220602 01:23:47.845" endtime="20220602 01:23:47.846"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:23:47.847" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:23:47.846" endtime="20220602 01:23:47.847"/>
</kw>
<status status="PASS" starttime="20220602 01:23:43.707" endtime="20220602 01:23:47.847"/>
</kw>
<msg timestamp="20220602 01:23:47.847" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:23:43.706" endtime="20220602 01:23:47.848"/>
</kw>
<msg timestamp="20220602 01:23:47.848" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20220602 01:23:43.706" endtime="20220602 01:23:47.848"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220602 01:23:47.848" endtime="20220602 01:23:47.849"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:23:47.853" level="INFO">Running command 'ozone sh volume clrquota --namespace-quota o3:///24354-without-host 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:23:51.954" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:23:51.954" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:23:47.851" endtime="20220602 01:23:51.954"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:23:51.955" level="INFO"/>
<status status="PASS" starttime="20220602 01:23:51.954" endtime="20220602 01:23:51.955"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:23:51.956" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:23:51.955" endtime="20220602 01:23:51.956"/>
</kw>
<status status="PASS" starttime="20220602 01:23:47.850" endtime="20220602 01:23:51.956"/>
</kw>
<msg timestamp="20220602 01:23:51.956" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:23:47.850" endtime="20220602 01:23:51.957"/>
</kw>
<status status="PASS" starttime="20220602 01:23:47.849" endtime="20220602 01:23:51.957"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:23:51.961" level="INFO">Running command 'ozone sh volume info o3:///24354-without-host | jq -r '. | select(.name=="24354-without-host") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:23:56.205" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:23:56.205" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20220602 01:23:51.959" endtime="20220602 01:23:56.205"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:23:56.206" level="INFO">-1</msg>
<status status="PASS" starttime="20220602 01:23:56.206" endtime="20220602 01:23:56.206"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:23:56.207" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:23:56.207" endtime="20220602 01:23:56.207"/>
</kw>
<status status="PASS" starttime="20220602 01:23:51.958" endtime="20220602 01:23:56.207"/>
</kw>
<msg timestamp="20220602 01:23:56.208" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:23:51.958" endtime="20220602 01:23:56.208"/>
</kw>
<msg timestamp="20220602 01:23:56.208" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20220602 01:23:51.957" endtime="20220602 01:23:56.209"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220602 01:23:56.209" endtime="20220602 01:23:56.209"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:23:56.213" level="INFO">Running command 'ozone sh bucket clrquota --space-quota o3:///24354-without-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:23:59.938" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:23:59.938" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:23:56.211" endtime="20220602 01:23:59.939"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:23:59.940" level="INFO"/>
<status status="PASS" starttime="20220602 01:23:59.939" endtime="20220602 01:23:59.940"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:23:59.940" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:23:59.940" endtime="20220602 01:23:59.940"/>
</kw>
<status status="PASS" starttime="20220602 01:23:56.210" endtime="20220602 01:23:59.941"/>
</kw>
<msg timestamp="20220602 01:23:59.941" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:23:56.210" endtime="20220602 01:23:59.942"/>
</kw>
<status status="PASS" starttime="20220602 01:23:56.209" endtime="20220602 01:23:59.942"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:23:59.946" level="INFO">Running command 'ozone sh bucket info o3:///24354-without-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:24:04.025" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:24:04.026" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20220602 01:23:59.944" endtime="20220602 01:24:04.026"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:24:04.027" level="INFO">-1</msg>
<status status="PASS" starttime="20220602 01:24:04.026" endtime="20220602 01:24:04.027"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:24:04.028" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:24:04.027" endtime="20220602 01:24:04.028"/>
</kw>
<status status="PASS" starttime="20220602 01:23:59.943" endtime="20220602 01:24:04.028"/>
</kw>
<msg timestamp="20220602 01:24:04.028" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:23:59.943" endtime="20220602 01:24:04.029"/>
</kw>
<msg timestamp="20220602 01:24:04.029" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20220602 01:23:59.942" endtime="20220602 01:24:04.029"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220602 01:24:04.029" endtime="20220602 01:24:04.030"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:24:04.033" level="INFO">Running command 'ozone sh bucket clrquota --namespace-quota o3:///24354-without-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:24:07.737" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:24:07.737" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:24:04.031" endtime="20220602 01:24:07.737"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:24:07.739" level="INFO"/>
<status status="PASS" starttime="20220602 01:24:07.737" endtime="20220602 01:24:07.739"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:24:07.739" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:24:07.739" endtime="20220602 01:24:07.739"/>
</kw>
<status status="PASS" starttime="20220602 01:24:04.031" endtime="20220602 01:24:07.740"/>
</kw>
<msg timestamp="20220602 01:24:07.740" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:24:04.030" endtime="20220602 01:24:07.740"/>
</kw>
<status status="PASS" starttime="20220602 01:24:04.030" endtime="20220602 01:24:07.740"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:24:07.744" level="INFO">Running command 'ozone sh bucket info o3:///24354-without-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:24:11.822" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:24:11.822" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20220602 01:24:07.742" endtime="20220602 01:24:11.822"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:24:11.823" level="INFO">-1</msg>
<status status="PASS" starttime="20220602 01:24:11.823" endtime="20220602 01:24:11.823"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:24:11.824" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:24:11.824" endtime="20220602 01:24:11.824"/>
</kw>
<status status="PASS" starttime="20220602 01:24:07.742" endtime="20220602 01:24:11.824"/>
</kw>
<msg timestamp="20220602 01:24:11.824" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:24:07.741" endtime="20220602 01:24:11.825"/>
</kw>
<msg timestamp="20220602 01:24:11.825" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20220602 01:24:07.741" endtime="20220602 01:24:11.825"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220602 01:24:11.825" endtime="20220602 01:24:11.826"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:24:11.830" level="INFO">Running command 'ozone sh bucket delete o3:///24354-without-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:24:15.518" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:24:15.518" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:24:11.828" endtime="20220602 01:24:15.518"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:24:15.519" level="INFO"/>
<status status="PASS" starttime="20220602 01:24:15.519" endtime="20220602 01:24:15.520"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:24:15.520" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:24:15.520" endtime="20220602 01:24:15.520"/>
</kw>
<status status="PASS" starttime="20220602 01:24:11.827" endtime="20220602 01:24:15.521"/>
</kw>
<msg timestamp="20220602 01:24:15.521" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:24:11.827" endtime="20220602 01:24:15.521"/>
</kw>
<status status="PASS" starttime="20220602 01:24:11.826" endtime="20220602 01:24:15.521"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:24:15.525" level="INFO">Running command 'ozone sh volume delete o3:///24354-without-host 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:24:19.129" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:24:19.129" level="INFO">${output} = Volume 24354-without-host is deleted</msg>
<status status="PASS" starttime="20220602 01:24:15.523" endtime="20220602 01:24:19.130"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:24:19.131" level="INFO">Volume 24354-without-host is deleted</msg>
<status status="PASS" starttime="20220602 01:24:19.130" endtime="20220602 01:24:19.131"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:24:19.131" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:24:19.131" endtime="20220602 01:24:19.132"/>
</kw>
<status status="PASS" starttime="20220602 01:24:15.522" endtime="20220602 01:24:19.132"/>
</kw>
<msg timestamp="20220602 01:24:19.132" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:24:15.522" endtime="20220602 01:24:19.132"/>
</kw>
<status status="PASS" starttime="20220602 01:24:15.522" endtime="20220602 01:24:19.133"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:24:19.137" level="INFO">Running command 'ozone sh volume create o3:///24354-without-host 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:24:22.576" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:24:22.576" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:24:19.134" endtime="20220602 01:24:22.576"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:24:22.577" level="INFO"/>
<status status="PASS" starttime="20220602 01:24:22.576" endtime="20220602 01:24:22.577"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:24:22.578" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:24:22.577" endtime="20220602 01:24:22.578"/>
</kw>
<status status="PASS" starttime="20220602 01:24:19.134" endtime="20220602 01:24:22.578"/>
</kw>
<msg timestamp="20220602 01:24:22.578" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:24:19.134" endtime="20220602 01:24:22.579"/>
</kw>
<status status="PASS" starttime="20220602 01:24:19.133" endtime="20220602 01:24:22.579"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:24:22.583" level="INFO">Running command 'ozone sh volume info o3:///24354-without-host | jq -r '. | select(.name=="24354-without-host") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:24:26.707" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:24:26.707" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20220602 01:24:22.581" endtime="20220602 01:24:26.707"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:24:26.708" level="INFO">-1</msg>
<status status="PASS" starttime="20220602 01:24:26.707" endtime="20220602 01:24:26.708"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:24:26.709" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:24:26.708" endtime="20220602 01:24:26.709"/>
</kw>
<status status="PASS" starttime="20220602 01:24:22.580" endtime="20220602 01:24:26.709"/>
</kw>
<msg timestamp="20220602 01:24:26.709" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:24:22.580" endtime="20220602 01:24:26.710"/>
</kw>
<msg timestamp="20220602 01:24:26.710" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20220602 01:24:22.579" endtime="20220602 01:24:26.710"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220602 01:24:26.710" endtime="20220602 01:24:26.711"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:24:26.714" level="INFO">Running command 'ozone sh volume info o3:///24354-without-host | jq -r '. | select(.name=="24354-without-host") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:24:30.758" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:24:30.758" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20220602 01:24:26.712" endtime="20220602 01:24:30.758"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:24:30.759" level="INFO">-1</msg>
<status status="PASS" starttime="20220602 01:24:30.758" endtime="20220602 01:24:30.759"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:24:30.760" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:24:30.759" endtime="20220602 01:24:30.760"/>
</kw>
<status status="PASS" starttime="20220602 01:24:26.712" endtime="20220602 01:24:30.760"/>
</kw>
<msg timestamp="20220602 01:24:30.760" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:24:26.712" endtime="20220602 01:24:30.761"/>
</kw>
<msg timestamp="20220602 01:24:30.761" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20220602 01:24:26.711" endtime="20220602 01:24:30.761"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220602 01:24:30.761" endtime="20220602 01:24:30.762"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:24:30.765" level="INFO">Running command 'ozone sh bucket create o3:///24354-without-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:24:34.419" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:24:34.419" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:24:30.763" endtime="20220602 01:24:34.419"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:24:34.420" level="INFO"/>
<status status="PASS" starttime="20220602 01:24:34.419" endtime="20220602 01:24:34.420"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:24:34.421" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:24:34.420" endtime="20220602 01:24:34.421"/>
</kw>
<status status="PASS" starttime="20220602 01:24:30.763" endtime="20220602 01:24:34.421"/>
</kw>
<msg timestamp="20220602 01:24:34.421" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:24:30.762" endtime="20220602 01:24:34.422"/>
</kw>
<status status="PASS" starttime="20220602 01:24:30.762" endtime="20220602 01:24:34.422"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:24:34.426" level="INFO">Running command 'ozone sh bucket info o3:///24354-without-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:24:38.404" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:24:38.404" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20220602 01:24:34.424" endtime="20220602 01:24:38.404"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:24:38.405" level="INFO">-1</msg>
<status status="PASS" starttime="20220602 01:24:38.404" endtime="20220602 01:24:38.405"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:24:38.406" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:24:38.405" endtime="20220602 01:24:38.406"/>
</kw>
<status status="PASS" starttime="20220602 01:24:34.424" endtime="20220602 01:24:38.406"/>
</kw>
<msg timestamp="20220602 01:24:38.406" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:24:34.423" endtime="20220602 01:24:38.407"/>
</kw>
<msg timestamp="20220602 01:24:38.407" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20220602 01:24:34.422" endtime="20220602 01:24:38.407"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220602 01:24:38.407" endtime="20220602 01:24:38.408"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:24:38.413" level="INFO">Running command 'ozone sh bucket info o3:///24354-without-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:24:42.102" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:24:42.102" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20220602 01:24:38.410" endtime="20220602 01:24:42.102"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:24:42.103" level="INFO">-1</msg>
<status status="PASS" starttime="20220602 01:24:42.103" endtime="20220602 01:24:42.103"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:24:42.104" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:24:42.104" endtime="20220602 01:24:42.104"/>
</kw>
<status status="PASS" starttime="20220602 01:24:38.409" endtime="20220602 01:24:42.104"/>
</kw>
<msg timestamp="20220602 01:24:42.104" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:24:38.409" endtime="20220602 01:24:42.105"/>
</kw>
<msg timestamp="20220602 01:24:42.105" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20220602 01:24:38.408" endtime="20220602 01:24:42.105"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220602 01:24:42.106" endtime="20220602 01:24:42.106"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:24:42.109" level="INFO">Running command 'ozone sh bucket delete o3:///24354-without-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:24:45.699" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:24:45.699" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:24:42.107" endtime="20220602 01:24:45.699"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:24:45.700" level="INFO"/>
<status status="PASS" starttime="20220602 01:24:45.699" endtime="20220602 01:24:45.700"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:24:45.701" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:24:45.700" endtime="20220602 01:24:45.701"/>
</kw>
<status status="PASS" starttime="20220602 01:24:42.107" endtime="20220602 01:24:45.701"/>
</kw>
<msg timestamp="20220602 01:24:45.701" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:24:42.107" endtime="20220602 01:24:45.702"/>
</kw>
<status status="PASS" starttime="20220602 01:24:42.106" endtime="20220602 01:24:45.702"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:24:45.705" level="INFO">Running command 'ozone sh volume delete o3:///24354-without-host 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:24:49.355" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:24:49.355" level="INFO">${output} = Volume 24354-without-host is deleted</msg>
<status status="PASS" starttime="20220602 01:24:45.703" endtime="20220602 01:24:49.355"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:24:49.357" level="INFO">Volume 24354-without-host is deleted</msg>
<status status="PASS" starttime="20220602 01:24:49.356" endtime="20220602 01:24:49.357"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:24:49.357" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:24:49.357" endtime="20220602 01:24:49.357"/>
</kw>
<status status="PASS" starttime="20220602 01:24:45.703" endtime="20220602 01:24:49.358"/>
</kw>
<msg timestamp="20220602 01:24:49.358" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:24:45.703" endtime="20220602 01:24:49.358"/>
</kw>
<status status="PASS" starttime="20220602 01:24:45.702" endtime="20220602 01:24:49.358"/>
</kw>
<status status="PASS" starttime="20220602 01:21:23.512" endtime="20220602 01:24:49.359"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220602 01:21:23.481" endtime="20220602 01:24:49.359"/>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="PASS" starttime="20220602 01:15:54.512" endtime="20220602 01:24:49.360"/>
</suite>
<suite id="s1-s1-s6" name="Single Node" source="/opt/hadoop/smoketest/basic/single_node.robot">
<test id="s1-s1-s6-t1" name="Basic Freon smoketest for one datanode">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:24:49.375" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:24:49.378" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:24:49.379" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220602 01:24:49.373" endtime="20220602 01:24:49.379"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:24:49.380" level="INFO">scm</msg>
<status status="PASS" starttime="20220602 01:24:49.379" endtime="20220602 01:24:49.380"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:24:49.380" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:24:49.380" endtime="20220602 01:24:49.380"/>
</kw>
<status status="PASS" starttime="20220602 01:24:49.373" endtime="20220602 01:24:49.381"/>
</kw>
<msg timestamp="20220602 01:24:49.381" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:24:49.373" endtime="20220602 01:24:49.381"/>
</kw>
<msg timestamp="20220602 01:24:49.382" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220602 01:24:49.372" endtime="20220602 01:24:49.382"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220602 01:24:49.383" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220602 01:24:49.382" endtime="20220602 01:24:49.383"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:24:49.387" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:24:49.438" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:24:49.438" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:24:49.385" endtime="20220602 01:24:49.438"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:24:49.440" level="INFO"/>
<status status="PASS" starttime="20220602 01:24:49.439" endtime="20220602 01:24:49.440"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:24:49.440" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:24:49.440" endtime="20220602 01:24:49.440"/>
</kw>
<status status="PASS" starttime="20220602 01:24:49.385" endtime="20220602 01:24:49.441"/>
</kw>
<msg timestamp="20220602 01:24:49.441" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:24:49.384" endtime="20220602 01:24:49.441"/>
</kw>
<status status="PASS" starttime="20220602 01:24:49.384" endtime="20220602 01:24:49.441"/>
</kw>
<status status="PASS" starttime="20220602 01:24:49.384" endtime="20220602 01:24:49.442"/>
</kw>
<status status="PASS" starttime="20220602 01:24:49.372" endtime="20220602 01:24:49.442"/>
</kw>
<status status="PASS" starttime="20220602 01:24:49.371" endtime="20220602 01:24:49.442"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>10</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220602 01:24:49.443" level="INFO">${random} = 8UYTkQx6mW</msg>
<status status="PASS" starttime="20220602 01:24:49.442" endtime="20220602 01:24:49.443"/>
</kw>
<kw name="Freon OCKG" library="freon">
<arg>prefix=${random}</arg>
<arg>args=--replication ONE --replication-type RATIS</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:24:49.448" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p 8UYTkQx6mW --replication ONE --replication-type RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:24:56.278" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:24:56.278" level="INFO">${output} = 2022-06-02 01:24:51,414 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-06-02 01:24:51,557 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220602 01:24:49.445" endtime="20220602 01:24:56.278"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:24:56.280" level="INFO">2022-06-02 01:24:51,414 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-06-02 01:24:51,557 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-06-02 01:24:51,557 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-06-02 01:24:51,733 [main] INFO freon.BaseFreonGenerator: Executing test with prefix 8UYTkQx6mW
2022-06-02 01:24:51,832 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-06-02 01:24:52,843 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-06-02 01:24:53,844 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-06-02 01:24:53,957 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-06-02 01:24:54,290 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-06-02 01:24:54,844 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-06-02 01:24:55,845 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-06-02 01:24:55,917 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=1806.476949, max=1806.476949, mean=1806.476949, stddev=0.0, median=1806.476949, p75=1806.476949, p95=1806.476949, p98=1806.476949, p99=1806.476949, p999=1806.476949, mean_rate=0.3863014270578505, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-06-02 01:24:55,918 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 4
2022-06-02 01:24:55,919 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-06-02 01:24:55,919 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20220602 01:24:56.279" endtime="20220602 01:24:56.280"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:24:56.280" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:24:56.280" endtime="20220602 01:24:56.281"/>
</kw>
<status status="PASS" starttime="20220602 01:24:49.444" endtime="20220602 01:24:56.281"/>
</kw>
<msg timestamp="20220602 01:24:56.281" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:24:49.444" endtime="20220602 01:24:56.281"/>
</kw>
<msg timestamp="20220602 01:24:56.282" level="INFO">${result} = 2022-06-02 01:24:51,414 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-06-02 01:24:51,557 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220602 01:24:49.443" endtime="20220602 01:24:56.282"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220602 01:24:56.282" endtime="20220602 01:24:56.283"/>
</kw>
<status status="PASS" starttime="20220602 01:24:49.443" endtime="20220602 01:24:56.283"/>
</kw>
<kw name="Freon OCKV" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:24:56.288" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p 8UYTkQx6mW  2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:25:02.999" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:25:02.999" level="INFO">${output} = 2022-06-02 01:24:58,259 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-06-02 01:24:58,389 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220602 01:24:56.286" endtime="20220602 01:25:02.999"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:25:03.001" level="INFO">2022-06-02 01:24:58,259 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-06-02 01:24:58,389 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-06-02 01:24:58,389 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-06-02 01:24:58,579 [main] INFO freon.BaseFreonGenerator: Executing test with prefix 8UYTkQx6mW
2022-06-02 01:24:58,663 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-06-02 01:24:59,667 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-06-02 01:25:00,549 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-06-02 01:25:00,667 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-06-02 01:25:01,668 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-06-02 01:25:02,644 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=48.084973, max=48.084973, mean=48.084973, stddev=0.0, median=48.084973, p75=48.084973, p95=48.084973, p98=48.084973, p99=48.084973, p999=48.084973, mean_rate=0.9426396531580774, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-06-02 01:25:02,644 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 4
2022-06-02 01:25:02,645 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-06-02 01:25:02,645 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20220602 01:25:03.000" endtime="20220602 01:25:03.001"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:25:03.001" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:25:03.001" endtime="20220602 01:25:03.001"/>
</kw>
<status status="PASS" starttime="20220602 01:24:56.285" endtime="20220602 01:25:03.002"/>
</kw>
<msg timestamp="20220602 01:25:03.002" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:24:56.285" endtime="20220602 01:25:03.002"/>
</kw>
<msg timestamp="20220602 01:25:03.003" level="INFO">${result} = 2022-06-02 01:24:58,259 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-06-02 01:24:58,389 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220602 01:24:56.284" endtime="20220602 01:25:03.003"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220602 01:25:03.003" endtime="20220602 01:25:03.003"/>
</kw>
<status status="PASS" starttime="20220602 01:24:56.283" endtime="20220602 01:25:03.003"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220602 01:24:49.370" endtime="20220602 01:25:03.004"/>
</test>
<doc>Smoketest for one datanode</doc>
<status status="PASS" starttime="20220602 01:24:49.363" endtime="20220602 01:25:03.005"/>
</suite>
<status status="PASS" starttime="20220602 01:08:37.317" endtime="20220602 01:25:03.008"/>
</suite>
<suite id="s1-s2" name="Security" source="/opt/hadoop/smoketest/security">
<suite id="s1-s2-s1" name="Admin-Cert" source="/opt/hadoop/smoketest/security/admin-cert.robot">
<kw name="Setup Test" type="SETUP">
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:25:08.473" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:25:08.476" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:25:08.476" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220602 01:25:08.468" endtime="20220602 01:25:08.476"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:25:08.477" level="INFO">scm</msg>
<status status="PASS" starttime="20220602 01:25:08.476" endtime="20220602 01:25:08.477"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:25:08.477" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:25:08.477" endtime="20220602 01:25:08.478"/>
</kw>
<status status="PASS" starttime="20220602 01:25:08.468" endtime="20220602 01:25:08.478"/>
</kw>
<msg timestamp="20220602 01:25:08.478" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:25:08.468" endtime="20220602 01:25:08.479"/>
</kw>
<msg timestamp="20220602 01:25:08.480" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220602 01:25:08.467" endtime="20220602 01:25:08.480"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220602 01:25:08.482" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220602 01:25:08.480" endtime="20220602 01:25:08.482"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:25:08.486" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:25:08.493" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:25:08.493" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:25:08.484" endtime="20220602 01:25:08.493"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:25:08.494" level="INFO"/>
<status status="PASS" starttime="20220602 01:25:08.494" endtime="20220602 01:25:08.494"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:25:08.495" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:25:08.494" endtime="20220602 01:25:08.495"/>
</kw>
<status status="PASS" starttime="20220602 01:25:08.483" endtime="20220602 01:25:08.495"/>
</kw>
<msg timestamp="20220602 01:25:08.495" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:25:08.483" endtime="20220602 01:25:08.496"/>
</kw>
<status status="PASS" starttime="20220602 01:25:08.483" endtime="20220602 01:25:08.496"/>
</kw>
<status status="PASS" starttime="20220602 01:25:08.482" endtime="20220602 01:25:08.496"/>
</kw>
<status status="PASS" starttime="20220602 01:25:08.467" endtime="20220602 01:25:08.496"/>
</kw>
<status status="PASS" starttime="20220602 01:25:08.467" endtime="20220602 01:25:08.496"/>
</kw>
<status status="PASS" starttime="20220602 01:25:08.466" endtime="20220602 01:25:08.496"/>
</kw>
<test id="s1-s2-s1-t1" name="List valid certificates">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin cert list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:25:08.501" level="INFO">Running command 'ozone admin cert list 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:25:11.560" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:25:11.560" level="INFO">${output} = Total 7 valid certificates: 
SerialNumber      Valid From                     Expiry                         Subject                                                                                    ...</msg>
<status status="PASS" starttime="20220602 01:25:08.499" endtime="20220602 01:25:11.560"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:25:11.561" level="INFO">Total 7 valid certificates: 
SerialNumber      Valid From                     Expiry                         Subject                                                                                                       
1                 Thu Jun 02 00:00:00 UTC 2022   Sun Jul 11 23:59:59 UTC 2027   O=CID-0422519f-9c91-400b-8817-d8826ef13deb, OU=7a156472-c881-43da-bab1-802799d6ed8f, CN=scm@scm               
275857534228      Thu Jun 02 00:00:00 UTC 2022   Sun Jul 11 00:00:00 UTC 2027   O=CID-0422519f-9c91-400b-8817-d8826ef13deb, OU=7a156472-c881-43da-bab1-802799d6ed8f, CN=scm-sub@scm           
283127386708      Thu Jun 02 00:00:00 UTC 2022   Fri Jun 02 00:00:00 UTC 2023   O=CID-0422519f-9c91-400b-8817-d8826ef13deb, OU=7a156472-c881-43da-bab1-802799d6ed8f, CN=root@02a32fdb6774     
283421415125      Thu Jun 02 00:00:00 UTC 2022   Fri Jun 02 00:00:00 UTC 2023   O=CID-0422519f-9c91-400b-8817-d8826ef13deb, OU=7a156472-c881-43da-bab1-802799d6ed8f, CN=root@recon            
283566432895      Thu Jun 02 00:00:00 UTC 2022   Fri Jun 02 00:00:00 UTC 2023   O=CID-0422519f-9c91-400b-8817-d8826ef13deb, OU=7a156472-c881-43da-bab1-802799d6ed8f, CN=root@50794f477141     
283730022947      Thu Jun 02 00:00:00 UTC 2022   Fri Jun 02 00:00:00 UTC 2023   O=CID-0422519f-9c91-400b-8817-d8826ef13deb, OU=7a156472-c881-43da-bab1-802799d6ed8f, CN=root@bb4300892ec1     
289382181233      Thu Jun 02 00:00:00 UTC 2022   Fri Jun 02 00:00:00 UTC 2023   O=CID-0422519f-9c91-400b-8817-d8826ef13deb, OU=7a156472-c881-43da-bab1-802799d6ed8f, CN=om                    </msg>
<status status="PASS" starttime="20220602 01:25:11.560" endtime="20220602 01:25:11.561"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:25:11.562" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:25:11.562" endtime="20220602 01:25:11.562"/>
</kw>
<status status="PASS" starttime="20220602 01:25:08.499" endtime="20220602 01:25:11.562"/>
</kw>
<msg timestamp="20220602 01:25:11.563" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:25:08.498" endtime="20220602 01:25:11.563"/>
</kw>
<msg timestamp="20220602 01:25:11.563" level="INFO">${output} = Total 7 valid certificates: 
SerialNumber      Valid From                     Expiry                         Subject                                                                                    ...</msg>
<status status="PASS" starttime="20220602 01:25:08.498" endtime="20220602 01:25:11.563"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>valid certificates</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220602 01:25:11.564" endtime="20220602 01:25:11.564"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220602 01:25:08.497" endtime="20220602 01:25:11.564"/>
</test>
<test id="s1-s2-s1-t2" name="List revoked certificates">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin cert list -t revoked</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:25:11.569" level="INFO">Running command 'ozone admin cert list -t revoked 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:25:14.704" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:25:14.704" level="INFO">${output} = Total 0 revoked certificates: 
SerialNumber      Valid From                     Expiry                         Subject                                                                                  ...</msg>
<status status="PASS" starttime="20220602 01:25:11.567" endtime="20220602 01:25:14.704"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:25:14.705" level="INFO">Total 0 revoked certificates: 
SerialNumber      Valid From                     Expiry                         Subject                                                                                                       </msg>
<status status="PASS" starttime="20220602 01:25:14.704" endtime="20220602 01:25:14.705"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:25:14.706" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:25:14.705" endtime="20220602 01:25:14.706"/>
</kw>
<status status="PASS" starttime="20220602 01:25:11.566" endtime="20220602 01:25:14.706"/>
</kw>
<msg timestamp="20220602 01:25:14.706" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:25:11.566" endtime="20220602 01:25:14.707"/>
</kw>
<msg timestamp="20220602 01:25:14.707" level="INFO">${output} = Total 0 revoked certificates: 
SerialNumber      Valid From                     Expiry                         Subject                                                                                  ...</msg>
<status status="PASS" starttime="20220602 01:25:11.565" endtime="20220602 01:25:14.707"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Total 0 revoked certificates</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220602 01:25:14.707" endtime="20220602 01:25:14.707"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220602 01:25:11.565" endtime="20220602 01:25:14.708"/>
</test>
<test id="s1-s2-s1-t3" name="Info of the cert">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>for id in $(ozone admin cert list -c 1|grep UTC|awk '{print $1}'); do ozone admin cert info $id; done</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:25:14.713" level="INFO">Running command 'for id in $(ozone admin cert list -c 1|grep UTC|awk '{print $1}'); do ozone admin cert info $id; done 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:25:21.253" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:25:21.253" level="INFO">${output} = Certificate id: 1
[
[
  Version: V3
  Subject: O=CID-0422519f-9c91-400b-8817-d8826ef13deb, OU=7a156472-c881-43da-bab1-802799d6ed8f, CN=scm@scm
  Signature Algorithm: SHA256withRSA, OID = 1.2.840.11354...</msg>
<status status="PASS" starttime="20220602 01:25:14.711" endtime="20220602 01:25:21.253"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:25:21.255" level="INFO">Certificate id: 1
[
[
  Version: V3
  Subject: O=CID-0422519f-9c91-400b-8817-d8826ef13deb, OU=7a156472-c881-43da-bab1-802799d6ed8f, CN=scm@scm
  Signature Algorithm: SHA256withRSA, OID = 1.2.840.113549.1.1.11

  Key:  Sun RSA public key, 2048 bits
  params: null
  modulus: 27723374032307944205091052141760380836709769948116131302108375074708695059492437696525601748795641036912626087470081398509311330107449098037179567947461490401646168995927326677648114230644377637481614137441295005730516624778094437202215330498218091448526221105404051171072810858331464757045092242732848773860524894551457081206673248825337792077452860255649485695223259565632093338875389362155443058962712816572846990801141335484577862146562318336099385994212615090074180128243436887152021764657878409876425191139582562306319565862212572696013148043116764201302518407962713349386831704113332775043937801445976628063147
  public exponent: 65537
  Validity: [From: Thu Jun 02 00:00:00 UTC 2022,
               To: Sun Jul 11 23:59:59 UTC 2027]
  Issuer: O=CID-0422519f-9c91-400b-8817-d8826ef13deb, OU=7a156472-c881-43da-bab1-802799d6ed8f, CN=scm@scm
  SerialNumber: [    01]

Certificate Extensions: 3
[1]: ObjectId: 2.5.29.19 Criticality=true
BasicConstraints:[
  CA:true
  PathLen:2147483647
]

[2]: ObjectId: 2.5.29.15 Criticality=true
KeyUsage [
  Key_CertSign
  Crl_Sign
]

[3]: ObjectId: 2.5.29.17 Criticality=false
SubjectAlternativeName [
  IPAddress: 172.18.0.9
]

]
  Algorithm: [SHA256withRSA]
  Signature:
0000: 6F B9 85 24 C3 91 D3 06   35 9B 54 20 EE F7 28 74  o..$....5.T ..(t
0010: 01 66 58 52 D3 55 5B F8   BF 1F 6C D1 0F 02 82 46  .fXR.U[...l....F
0020: F1 44 CD 71 F9 1F 05 A7   DD C4 98 C7 E8 A8 54 DF  .D.q..........T.
0030: 0F A9 9A 69 B2 F0 0F AD   C4 D3 A8 47 AC 8B A8 39  ...i.......G...9
0040: C7 F1 6F 1F E5 DC EF F6   A2 8B 84 81 16 68 F1 6B  ..o..........h.k
0050: B6 07 32 C1 C1 C8 A3 E0   D0 A5 95 E5 79 F3 48 90  ..2.........y.H.
0060: 7E 73 C3 FD 89 1C 7D 51   9A 64 EF A3 E0 45 49 F9  .s.....Q.d...EI.
0070: 7D AD CC 14 08 17 F7 44   7F A2 0F A9 D7 F0 94 AB  .......D........
0080: 3B A6 AF 44 7F 8E 67 B0   C7 BD DD 7F 97 9A 3F 0D  ;..D..g.......?.
0090: 85 E3 42 29 AE BD D5 BF   5E 30 AB 1D C1 8E E5 33  ..B)....^0.....3
00A0: 12 DE CE F1 91 F0 A2 D4   2E B0 11 65 4D 6F B2 A2  ...........eMo..
00B0: 1A CF 16 B8 0B 25 B6 32   B1 60 DA 3C 80 64 81 69  .....%.2.`.&lt;.d.i
00C0: B9 14 F3 41 A6 BE 41 DE   82 CC E0 01 95 60 2B F5  ...A..A......`+.
00D0: 92 97 D9 9A 49 64 D0 18   94 F4 2B A9 60 E4 15 4F  ....Id....+.`..O
00E0: 4C 6A 25 51 5F 99 95 F9   BE 2C A1 ED 8C 87 D0 11  Lj%Q_....,......
00F0: 08 E5 9D A2 F2 2F 06 5A   2C 7C E0 7B 24 23 D7 93  ...../.Z,...$#..

]</msg>
<status status="PASS" starttime="20220602 01:25:21.254" endtime="20220602 01:25:21.255"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:25:21.255" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:25:21.255" endtime="20220602 01:25:21.256"/>
</kw>
<status status="PASS" starttime="20220602 01:25:14.710" endtime="20220602 01:25:21.256"/>
</kw>
<msg timestamp="20220602 01:25:21.256" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:25:14.710" endtime="20220602 01:25:21.256"/>
</kw>
<msg timestamp="20220602 01:25:21.257" level="INFO">${output} = Certificate id: 1
[
[
  Version: V3
  Subject: O=CID-0422519f-9c91-400b-8817-d8826ef13deb, OU=7a156472-c881-43da-bab1-802799d6ed8f, CN=scm@scm
  Signature Algorithm: SHA256withRSA, OID = 1.2.840.11354...</msg>
<status status="PASS" starttime="20220602 01:25:14.710" endtime="20220602 01:25:21.257"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Certificate not found</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220602 01:25:21.257" endtime="20220602 01:25:21.257"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220602 01:25:14.709" endtime="20220602 01:25:21.258"/>
</test>
<doc>Test for ozone admin cert command</doc>
<status status="PASS" starttime="20220602 01:25:08.434" endtime="20220602 01:25:21.259"/>
</suite>
<suite id="s1-s2-s2" name="Bucket-Encryption" source="/opt/hadoop/smoketest/security/bucket-encryption.robot">
<kw name="Setup Test" type="SETUP">
<kw name="Create Random Volume" library="shell">
<var>${volume}</var>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220602 01:25:21.271" level="INFO">${random} = eyhlg</msg>
<status status="PASS" starttime="20220602 01:25:21.270" endtime="20220602 01:25:21.271"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create o3://${OM_SERVICE_ID}/vol-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:25:21.274" level="INFO">Running command 'ozone sh volume create o3://om/vol-eyhlg 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:25:25.061" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:25:25.061" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:25:21.272" endtime="20220602 01:25:25.061"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:25:25.062" level="INFO"/>
<status status="PASS" starttime="20220602 01:25:25.062" endtime="20220602 01:25:25.062"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:25:25.063" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:25:25.062" endtime="20220602 01:25:25.063"/>
</kw>
<status status="PASS" starttime="20220602 01:25:21.271" endtime="20220602 01:25:25.063"/>
</kw>
<msg timestamp="20220602 01:25:25.063" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:25:21.271" endtime="20220602 01:25:25.064"/>
</kw>
<status status="PASS" starttime="20220602 01:25:21.271" endtime="20220602 01:25:25.064"/>
</kw>
<msg timestamp="20220602 01:25:25.064" level="INFO">${volume} = vol-eyhlg</msg>
<status status="PASS" starttime="20220602 01:25:21.269" endtime="20220602 01:25:25.064"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${VOLUME}</arg>
<arg>${volume}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220602 01:25:25.065" level="INFO">${VOLUME} = vol-eyhlg</msg>
<status status="PASS" starttime="20220602 01:25:25.064" endtime="20220602 01:25:25.065"/>
</kw>
<status status="PASS" starttime="20220602 01:25:21.269" endtime="20220602 01:25:25.065"/>
</kw>
<test id="s1-s2-s2-t1" name="Create Encrypted Bucket">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create -k ${KEY_NAME} o3://${OM_SERVICE_ID}/${VOLUME}/encrypted-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:25:25.070" level="INFO">Running command 'ozone sh bucket create -k key1 o3://om/vol-eyhlg/encrypted-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:25:29.137" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:25:29.138" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:25:25.068" endtime="20220602 01:25:29.138"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:25:29.139" level="INFO"/>
<status status="PASS" starttime="20220602 01:25:29.138" endtime="20220602 01:25:29.139"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:25:29.140" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:25:29.139" endtime="20220602 01:25:29.140"/>
</kw>
<status status="PASS" starttime="20220602 01:25:25.067" endtime="20220602 01:25:29.140"/>
</kw>
<msg timestamp="20220602 01:25:29.140" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:25:25.067" endtime="20220602 01:25:29.141"/>
</kw>
<msg timestamp="20220602 01:25:29.141" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:25:25.066" endtime="20220602 01:25:29.141"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>INVALID_REQUEST</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220602 01:25:29.141" endtime="20220602 01:25:29.141"/>
</kw>
<kw name="Bucket Exists" library="shell">
<arg>o3://${OM_SERVICE_ID}/${VOLUME}/encrypted-bucket</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:25:29.144" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://om/vol-eyhlg/encrypted-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:25:32.983" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:25:32.983" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "vol-eyhlg",
  "name" : "encrypted-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-...</msg>
<status status="PASS" starttime="20220602 01:25:29.142" endtime="20220602 01:25:32.983"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20220602 01:25:32.983" endtime="20220602 01:25:32.984"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'VOLUME_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20220602 01:25:32.984" endtime="20220602 01:25:32.984"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'BUCKET_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20220602 01:25:32.985" endtime="20220602 01:25:32.985"/>
</kw>
<status status="PASS" starttime="20220602 01:25:29.142" endtime="20220602 01:25:32.985"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220602 01:25:25.065" endtime="20220602 01:25:32.985"/>
</test>
<test id="s1-s2-s2-t2" name="Create Key in Encrypted Bucket">
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>o3://${OM_SERVICE_ID}/${VOLUME}/encrypted-bucket/passwd</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220602 01:25:32.988" level="INFO">${key} = o3://om/vol-eyhlg/encrypted-bucket/passwd</msg>
<status status="PASS" starttime="20220602 01:25:32.987" endtime="20220602 01:25:32.988"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put ${key} /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:25:32.994" level="INFO">Running command 'ozone sh key put o3://om/vol-eyhlg/encrypted-bucket/passwd /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:25:39.462" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:25:39.463" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:25:32.989" endtime="20220602 01:25:39.463"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:25:39.464" level="INFO"/>
<status status="PASS" starttime="20220602 01:25:39.463" endtime="20220602 01:25:39.464"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:25:39.465" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:25:39.464" endtime="20220602 01:25:39.465"/>
</kw>
<status status="PASS" starttime="20220602 01:25:32.989" endtime="20220602 01:25:39.465"/>
</kw>
<msg timestamp="20220602 01:25:39.465" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:25:32.988" endtime="20220602 01:25:39.466"/>
</kw>
<msg timestamp="20220602 01:25:39.466" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:25:32.988" endtime="20220602 01:25:39.466"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${key}</arg>
<arg>/etc/passwd</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220602 01:25:39.468" level="INFO">${postfix} = 71983</msg>
<status status="PASS" starttime="20220602 01:25:39.468" endtime="20220602 01:25:39.468"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220602 01:25:39.469" level="INFO">${tmpfile} = /tmp/tempkey-71983</msg>
<status status="PASS" starttime="20220602 01:25:39.468" endtime="20220602 01:25:39.469"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:25:39.472" level="INFO">Running command 'ozone sh key get o3://om/vol-eyhlg/encrypted-bucket/passwd /tmp/tempkey-71983 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:25:45.442" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:25:45.442" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:25:39.470" endtime="20220602 01:25:45.442"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:25:45.443" level="INFO"/>
<status status="PASS" starttime="20220602 01:25:45.442" endtime="20220602 01:25:45.443"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:25:45.444" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:25:45.443" endtime="20220602 01:25:45.444"/>
</kw>
<status status="PASS" starttime="20220602 01:25:39.469" endtime="20220602 01:25:45.444"/>
</kw>
<msg timestamp="20220602 01:25:45.444" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:25:39.469" endtime="20220602 01:25:45.445"/>
</kw>
<status status="PASS" starttime="20220602 01:25:39.469" endtime="20220602 01:25:45.445"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20220602 01:25:45.449" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-71983 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:25:45.450" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20220602 01:25:45.445" endtime="20220602 01:25:45.450"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:25:45.454" level="INFO">Running command 'rm -f /tmp/tempkey-71983 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:25:45.459" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:25:45.460" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:25:45.452" endtime="20220602 01:25:45.460"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:25:45.463" level="INFO"/>
<status status="PASS" starttime="20220602 01:25:45.461" endtime="20220602 01:25:45.463"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:25:45.465" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:25:45.464" endtime="20220602 01:25:45.465"/>
</kw>
<status status="PASS" starttime="20220602 01:25:45.452" endtime="20220602 01:25:45.466"/>
</kw>
<msg timestamp="20220602 01:25:45.466" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:25:45.452" endtime="20220602 01:25:45.468"/>
</kw>
<status status="PASS" starttime="20220602 01:25:45.451" endtime="20220602 01:25:45.469"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220602 01:25:45.470" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20220602 01:25:45.469" endtime="20220602 01:25:45.471"/>
</kw>
<msg timestamp="20220602 01:25:45.471" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20220602 01:25:39.467" endtime="20220602 01:25:45.471"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220602 01:25:45.472" endtime="20220602 01:25:45.473"/>
</kw>
<status status="PASS" starttime="20220602 01:25:39.466" endtime="20220602 01:25:45.473"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220602 01:25:32.986" endtime="20220602 01:25:45.474"/>
</test>
<doc>Test for bucket encryption</doc>
<status status="PASS" starttime="20220602 01:25:21.260" endtime="20220602 01:25:45.476"/>
</suite>
<suite id="s1-s2-s3" name="Ozone-Secure-Fs" source="/opt/hadoop/smoketest/security/ozone-secure-fs.robot">
<test id="s1-s2-s3-t1" name="Create volume bucket with wrong credentials">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:25:45.490" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:25:45.493" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:25:45.493" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:25:45.487" endtime="20220602 01:25:45.493"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:25:45.494" level="INFO"/>
<status status="PASS" starttime="20220602 01:25:45.494" endtime="20220602 01:25:45.494"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:25:45.495" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:25:45.494" endtime="20220602 01:25:45.495"/>
</kw>
<status status="PASS" starttime="20220602 01:25:45.487" endtime="20220602 01:25:45.495"/>
</kw>
<msg timestamp="20220602 01:25:45.495" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:25:45.487" endtime="20220602 01:25:45.496"/>
</kw>
<status status="PASS" starttime="20220602 01:25:45.486" endtime="20220602 01:25:45.496"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>ozone sh volume create o3://om/fstest</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:25:45.498" level="INFO">Running command 'ozone sh volume create o3://om/fstest 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:25:48.697" level="INFO">${rc} = 255</msg>
<msg timestamp="20220602 01:25:48.697" level="INFO">${output} = org.apache.hadoop.security.AccessControlException: Client cannot authenticate via:[TOKEN, KERBEROS]</msg>
<status status="PASS" starttime="20220602 01:25:45.496" endtime="20220602 01:25:48.697"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Client cannot authenticate via</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220602 01:25:48.698" endtime="20220602 01:25:48.699"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220602 01:25:45.485" endtime="20220602 01:25:48.699"/>
</test>
<test id="s1-s2-s3-t2" name="Create volume with non-admin user">
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:25:48.705" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:25:48.709" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:25:48.709" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220602 01:25:48.703" endtime="20220602 01:25:48.709"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:25:48.710" level="INFO">scm</msg>
<status status="PASS" starttime="20220602 01:25:48.709" endtime="20220602 01:25:48.710"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:25:48.711" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:25:48.710" endtime="20220602 01:25:48.711"/>
</kw>
<status status="PASS" starttime="20220602 01:25:48.702" endtime="20220602 01:25:48.711"/>
</kw>
<msg timestamp="20220602 01:25:48.712" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:25:48.702" endtime="20220602 01:25:48.712"/>
</kw>
<msg timestamp="20220602 01:25:48.712" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220602 01:25:48.702" endtime="20220602 01:25:48.712"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220602 01:25:48.714" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220602 01:25:48.713" endtime="20220602 01:25:48.714"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:25:48.718" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:25:48.725" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:25:48.725" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:25:48.716" endtime="20220602 01:25:48.725"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:25:48.726" level="INFO"/>
<status status="PASS" starttime="20220602 01:25:48.725" endtime="20220602 01:25:48.726"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:25:48.726" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:25:48.726" endtime="20220602 01:25:48.727"/>
</kw>
<status status="PASS" starttime="20220602 01:25:48.716" endtime="20220602 01:25:48.727"/>
</kw>
<msg timestamp="20220602 01:25:48.727" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:25:48.715" endtime="20220602 01:25:48.727"/>
</kw>
<status status="PASS" starttime="20220602 01:25:48.715" endtime="20220602 01:25:48.728"/>
</kw>
<status status="PASS" starttime="20220602 01:25:48.714" endtime="20220602 01:25:48.728"/>
</kw>
<status status="PASS" starttime="20220602 01:25:48.701" endtime="20220602 01:25:48.728"/>
</kw>
<status status="PASS" starttime="20220602 01:25:48.701" endtime="20220602 01:25:48.728"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>ozone sh volume create o3://om/fstest</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:25:48.730" level="INFO">Running command 'ozone sh volume create o3://om/fstest 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:25:52.711" level="INFO">${rc} = 255</msg>
<msg timestamp="20220602 01:25:52.711" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have CREATE permission to access volume Volume:fstest </msg>
<status status="PASS" starttime="20220602 01:25:48.728" endtime="20220602 01:25:52.711"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>doesn't have CREATE permission to access volume</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220602 01:25:52.711" endtime="20220602 01:25:52.712"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220602 01:25:48.700" endtime="20220602 01:25:52.712"/>
</test>
<test id="s1-s2-s3-t3" name="Create bucket with non-admin owner(testuser2)">
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:25:52.718" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:25:52.722" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:25:52.722" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220602 01:25:52.716" endtime="20220602 01:25:52.722"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:25:52.723" level="INFO">scm</msg>
<status status="PASS" starttime="20220602 01:25:52.722" endtime="20220602 01:25:52.723"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:25:52.724" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:25:52.723" endtime="20220602 01:25:52.724"/>
</kw>
<status status="PASS" starttime="20220602 01:25:52.716" endtime="20220602 01:25:52.724"/>
</kw>
<msg timestamp="20220602 01:25:52.724" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:25:52.716" endtime="20220602 01:25:52.725"/>
</kw>
<msg timestamp="20220602 01:25:52.725" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220602 01:25:52.715" endtime="20220602 01:25:52.725"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220602 01:25:52.726" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220602 01:25:52.725" endtime="20220602 01:25:52.726"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:25:52.730" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:25:52.736" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:25:52.736" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:25:52.728" endtime="20220602 01:25:52.736"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:25:52.737" level="INFO"/>
<status status="PASS" starttime="20220602 01:25:52.736" endtime="20220602 01:25:52.737"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:25:52.738" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:25:52.737" endtime="20220602 01:25:52.738"/>
</kw>
<status status="PASS" starttime="20220602 01:25:52.727" endtime="20220602 01:25:52.738"/>
</kw>
<msg timestamp="20220602 01:25:52.738" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:25:52.727" endtime="20220602 01:25:52.739"/>
</kw>
<status status="PASS" starttime="20220602 01:25:52.726" endtime="20220602 01:25:52.739"/>
</kw>
<status status="PASS" starttime="20220602 01:25:52.726" endtime="20220602 01:25:52.739"/>
</kw>
<status status="PASS" starttime="20220602 01:25:52.715" endtime="20220602 01:25:52.739"/>
</kw>
<status status="PASS" starttime="20220602 01:25:52.714" endtime="20220602 01:25:52.739"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup volume names</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup volume names">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>2</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220602 01:25:52.740" level="INFO">${random} = 57</msg>
<status status="PASS" starttime="20220602 01:25:52.740" endtime="20220602 01:25:52.740"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume1}</arg>
<arg>fstest${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220602 01:25:52.742" level="INFO">${volume1} = fstest57</msg>
<status status="PASS" starttime="20220602 01:25:52.741" endtime="20220602 01:25:52.742"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume2}</arg>
<arg>fstest2${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220602 01:25:52.744" level="INFO">${volume2} = fstest257</msg>
<status status="PASS" starttime="20220602 01:25:52.742" endtime="20220602 01:25:52.744"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume3}</arg>
<arg>fstest3${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220602 01:25:52.745" level="INFO">${volume3} = fstest357</msg>
<status status="PASS" starttime="20220602 01:25:52.744" endtime="20220602 01:25:52.745"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume4}</arg>
<arg>fstest4${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220602 01:25:52.747" level="INFO">${volume4} = fstest457</msg>
<status status="PASS" starttime="20220602 01:25:52.745" endtime="20220602 01:25:52.747"/>
</kw>
<status status="PASS" starttime="20220602 01:25:52.740" endtime="20220602 01:25:52.747"/>
</kw>
<status status="PASS" starttime="20220602 01:25:52.739" endtime="20220602 01:25:52.747"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create o3://om/${volume4} -u testuser2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:25:52.750" level="INFO">Running command 'ozone sh volume create o3://om/fstest457 -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:25:56.496" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:25:56.496" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:25:52.749" endtime="20220602 01:25:56.496"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:25:56.497" level="INFO"/>
<status status="PASS" starttime="20220602 01:25:56.496" endtime="20220602 01:25:56.497"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:25:56.498" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:25:56.497" endtime="20220602 01:25:56.498"/>
</kw>
<status status="PASS" starttime="20220602 01:25:52.748" endtime="20220602 01:25:56.498"/>
</kw>
<msg timestamp="20220602 01:25:56.498" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:25:52.748" endtime="20220602 01:25:56.499"/>
</kw>
<status status="PASS" starttime="20220602 01:25:52.747" endtime="20220602 01:25:56.499"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:25:56.503" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:25:56.507" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:25:56.507" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220602 01:25:56.501" endtime="20220602 01:25:56.507"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:25:56.508" level="INFO">scm</msg>
<status status="PASS" starttime="20220602 01:25:56.508" endtime="20220602 01:25:56.508"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:25:56.509" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:25:56.508" endtime="20220602 01:25:56.509"/>
</kw>
<status status="PASS" starttime="20220602 01:25:56.501" endtime="20220602 01:25:56.509"/>
</kw>
<msg timestamp="20220602 01:25:56.509" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:25:56.500" endtime="20220602 01:25:56.510"/>
</kw>
<msg timestamp="20220602 01:25:56.510" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220602 01:25:56.500" endtime="20220602 01:25:56.510"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220602 01:25:56.511" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220602 01:25:56.510" endtime="20220602 01:25:56.511"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:25:56.515" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:25:56.522" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:25:56.522" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:25:56.513" endtime="20220602 01:25:56.522"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:25:56.523" level="INFO"/>
<status status="PASS" starttime="20220602 01:25:56.522" endtime="20220602 01:25:56.523"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:25:56.524" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:25:56.523" endtime="20220602 01:25:56.524"/>
</kw>
<status status="PASS" starttime="20220602 01:25:56.512" endtime="20220602 01:25:56.524"/>
</kw>
<msg timestamp="20220602 01:25:56.525" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:25:56.512" endtime="20220602 01:25:56.525"/>
</kw>
<status status="PASS" starttime="20220602 01:25:56.511" endtime="20220602 01:25:56.525"/>
</kw>
<status status="PASS" starttime="20220602 01:25:56.511" endtime="20220602 01:25:56.525"/>
</kw>
<status status="PASS" starttime="20220602 01:25:56.499" endtime="20220602 01:25:56.525"/>
</kw>
<status status="PASS" starttime="20220602 01:25:56.499" endtime="20220602 01:25:56.526"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create o3://om/${volume4}/bucket1 --layout FILE_SYSTEM_OPTIMIZED</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:25:56.529" level="INFO">Running command 'ozone sh bucket create o3://om/fstest457/bucket1 --layout FILE_SYSTEM_OPTIMIZED 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:26:00.311" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:26:00.311" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:25:56.527" endtime="20220602 01:26:00.311"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:26:00.312" level="INFO"/>
<status status="PASS" starttime="20220602 01:26:00.312" endtime="20220602 01:26:00.312"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:26:00.313" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:26:00.313" endtime="20220602 01:26:00.313"/>
</kw>
<status status="PASS" starttime="20220602 01:25:56.526" endtime="20220602 01:26:00.313"/>
</kw>
<msg timestamp="20220602 01:26:00.313" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:25:56.526" endtime="20220602 01:26:00.314"/>
</kw>
<msg timestamp="20220602 01:26:00.314" level="INFO">${result} = </msg>
<status status="PASS" starttime="20220602 01:25:56.526" endtime="20220602 01:26:00.314"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220602 01:26:00.314" endtime="20220602 01:26:00.315"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put ${volume4}/bucket1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:26:00.320" level="INFO">Running command 'ozone sh key put fstest457/bucket1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:26:06.119" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:26:06.120" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:26:00.316" endtime="20220602 01:26:06.120"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:26:06.122" level="INFO"/>
<status status="PASS" starttime="20220602 01:26:06.120" endtime="20220602 01:26:06.122"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:26:06.122" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:26:06.122" endtime="20220602 01:26:06.122"/>
</kw>
<status status="PASS" starttime="20220602 01:26:00.316" endtime="20220602 01:26:06.123"/>
</kw>
<msg timestamp="20220602 01:26:06.123" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:26:00.315" endtime="20220602 01:26:06.123"/>
</kw>
<msg timestamp="20220602 01:26:06.123" level="INFO">${result} = </msg>
<status status="PASS" starttime="20220602 01:26:00.315" endtime="20220602 01:26:06.123"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220602 01:26:06.124" endtime="20220602 01:26:06.124"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${volume4}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:26:06.128" level="INFO">Running command 'ozone sh key list fstest457/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:26:10.414" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:26:10.414" level="INFO">${output} = [ {
  "volumeName" : "fstest457",
  "bucketName" : "bucket1",
  "name" : "key1",
  "dataSize" : 17526,
  "creationTime" : "2022-06-02T01:26:03.902Z",
  "modificationTime" : "2022-06-02T01:26:05.725Z",...</msg>
<status status="PASS" starttime="20220602 01:26:06.125" endtime="20220602 01:26:10.415"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:26:10.416" level="INFO">[ {
  "volumeName" : "fstest457",
  "bucketName" : "bucket1",
  "name" : "key1",
  "dataSize" : 17526,
  "creationTime" : "2022-06-02T01:26:03.902Z",
  "modificationTime" : "2022-06-02T01:26:05.725Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  }
} ]</msg>
<status status="PASS" starttime="20220602 01:26:10.415" endtime="20220602 01:26:10.416"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:26:10.417" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:26:10.416" endtime="20220602 01:26:10.417"/>
</kw>
<status status="PASS" starttime="20220602 01:26:06.125" endtime="20220602 01:26:10.417"/>
</kw>
<msg timestamp="20220602 01:26:10.417" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:26:06.125" endtime="20220602 01:26:10.417"/>
</kw>
<msg timestamp="20220602 01:26:10.418" level="INFO">${result} = [ {
  "volumeName" : "fstest457",
  "bucketName" : "bucket1",
  "name" : "key1",
  "dataSize" : 17526,
  "creationTime" : "2022-06-02T01:26:03.902Z",
  "modificationTime" : "2022-06-02T01:26:05.725Z",...</msg>
<status status="PASS" starttime="20220602 01:26:06.124" endtime="20220602 01:26:10.418"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220602 01:26:10.418" endtime="20220602 01:26:10.418"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key delete ${volume4}/bucket1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:26:10.422" level="INFO">Running command 'ozone sh key delete fstest457/bucket1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:26:14.443" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:26:14.443" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:26:10.420" endtime="20220602 01:26:14.443"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:26:14.445" level="INFO"/>
<status status="PASS" starttime="20220602 01:26:14.444" endtime="20220602 01:26:14.445"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:26:14.446" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:26:14.445" endtime="20220602 01:26:14.446"/>
</kw>
<status status="PASS" starttime="20220602 01:26:10.419" endtime="20220602 01:26:14.446"/>
</kw>
<msg timestamp="20220602 01:26:14.446" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:26:10.419" endtime="20220602 01:26:14.447"/>
</kw>
<msg timestamp="20220602 01:26:14.447" level="INFO">${result} = </msg>
<status status="PASS" starttime="20220602 01:26:10.418" endtime="20220602 01:26:14.447"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220602 01:26:14.447" endtime="20220602 01:26:14.448"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket delete ${volume4}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:26:14.451" level="INFO">Running command 'ozone sh bucket delete fstest457/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:26:18.401" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:26:18.401" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:26:14.449" endtime="20220602 01:26:18.401"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:26:18.402" level="INFO"/>
<status status="PASS" starttime="20220602 01:26:18.401" endtime="20220602 01:26:18.402"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:26:18.403" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:26:18.402" endtime="20220602 01:26:18.403"/>
</kw>
<status status="PASS" starttime="20220602 01:26:14.449" endtime="20220602 01:26:18.403"/>
</kw>
<msg timestamp="20220602 01:26:18.403" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:26:14.448" endtime="20220602 01:26:18.404"/>
</kw>
<msg timestamp="20220602 01:26:18.404" level="INFO">${result} = </msg>
<status status="PASS" starttime="20220602 01:26:14.448" endtime="20220602 01:26:18.404"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220602 01:26:18.404" endtime="20220602 01:26:18.404"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220602 01:25:52.713" endtime="20220602 01:26:18.405"/>
</test>
<test id="s1-s2-s3-t4" name="Create volume bucket with credentials">
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:26:18.411" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:26:18.414" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:26:18.414" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220602 01:26:18.408" endtime="20220602 01:26:18.414"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:26:18.416" level="INFO">scm</msg>
<status status="PASS" starttime="20220602 01:26:18.415" endtime="20220602 01:26:18.416"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:26:18.417" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:26:18.416" endtime="20220602 01:26:18.417"/>
</kw>
<status status="PASS" starttime="20220602 01:26:18.408" endtime="20220602 01:26:18.417"/>
</kw>
<msg timestamp="20220602 01:26:18.417" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:26:18.408" endtime="20220602 01:26:18.418"/>
</kw>
<msg timestamp="20220602 01:26:18.418" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220602 01:26:18.407" endtime="20220602 01:26:18.418"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220602 01:26:18.419" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220602 01:26:18.418" endtime="20220602 01:26:18.419"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:26:18.423" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:26:18.431" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:26:18.431" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:26:18.421" endtime="20220602 01:26:18.431"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:26:18.432" level="INFO"/>
<status status="PASS" starttime="20220602 01:26:18.432" endtime="20220602 01:26:18.432"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:26:18.434" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:26:18.433" endtime="20220602 01:26:18.434"/>
</kw>
<status status="PASS" starttime="20220602 01:26:18.420" endtime="20220602 01:26:18.434"/>
</kw>
<msg timestamp="20220602 01:26:18.434" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:26:18.420" endtime="20220602 01:26:18.435"/>
</kw>
<status status="PASS" starttime="20220602 01:26:18.419" endtime="20220602 01:26:18.435"/>
</kw>
<status status="PASS" starttime="20220602 01:26:18.419" endtime="20220602 01:26:18.435"/>
</kw>
<status status="PASS" starttime="20220602 01:26:18.407" endtime="20220602 01:26:18.435"/>
</kw>
<status status="PASS" starttime="20220602 01:26:18.406" endtime="20220602 01:26:18.435"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup volume names</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup volume names">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>2</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220602 01:26:18.436" level="INFO">${random} = 94</msg>
<status status="PASS" starttime="20220602 01:26:18.436" endtime="20220602 01:26:18.436"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume1}</arg>
<arg>fstest${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220602 01:26:18.437" level="INFO">${volume1} = fstest94</msg>
<status status="PASS" starttime="20220602 01:26:18.437" endtime="20220602 01:26:18.437"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume2}</arg>
<arg>fstest2${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220602 01:26:18.437" level="INFO">${volume2} = fstest294</msg>
<status status="PASS" starttime="20220602 01:26:18.437" endtime="20220602 01:26:18.438"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume3}</arg>
<arg>fstest3${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220602 01:26:18.438" level="INFO">${volume3} = fstest394</msg>
<status status="PASS" starttime="20220602 01:26:18.438" endtime="20220602 01:26:18.438"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume4}</arg>
<arg>fstest4${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220602 01:26:18.439" level="INFO">${volume4} = fstest494</msg>
<status status="PASS" starttime="20220602 01:26:18.438" endtime="20220602 01:26:18.439"/>
</kw>
<status status="PASS" starttime="20220602 01:26:18.435" endtime="20220602 01:26:18.439"/>
</kw>
<status status="PASS" starttime="20220602 01:26:18.435" endtime="20220602 01:26:18.439"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create o3://om/${volume1}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:26:18.442" level="INFO">Running command 'ozone sh volume create o3://om/fstest94 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:26:22.137" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:26:22.137" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:26:18.440" endtime="20220602 01:26:22.137"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:26:22.139" level="INFO"/>
<status status="PASS" starttime="20220602 01:26:22.138" endtime="20220602 01:26:22.139"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:26:22.139" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:26:22.139" endtime="20220602 01:26:22.140"/>
</kw>
<status status="PASS" starttime="20220602 01:26:18.440" endtime="20220602 01:26:22.140"/>
</kw>
<msg timestamp="20220602 01:26:22.140" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:26:18.439" endtime="20220602 01:26:22.140"/>
</kw>
<status status="PASS" starttime="20220602 01:26:18.439" endtime="20220602 01:26:22.141"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create o3://om/${volume2}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:26:22.144" level="INFO">Running command 'ozone sh volume create o3://om/fstest294 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:26:25.762" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:26:25.762" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:26:22.142" endtime="20220602 01:26:25.762"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:26:25.763" level="INFO"/>
<status status="PASS" starttime="20220602 01:26:25.762" endtime="20220602 01:26:25.763"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:26:25.764" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:26:25.763" endtime="20220602 01:26:25.764"/>
</kw>
<status status="PASS" starttime="20220602 01:26:22.142" endtime="20220602 01:26:25.764"/>
</kw>
<msg timestamp="20220602 01:26:25.764" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:26:22.141" endtime="20220602 01:26:25.765"/>
</kw>
<status status="PASS" starttime="20220602 01:26:22.141" endtime="20220602 01:26:25.765"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create o3://om/${volume1}/bucket1 --layout FILE_SYSTEM_OPTIMIZED</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:26:25.769" level="INFO">Running command 'ozone sh bucket create o3://om/fstest94/bucket1 --layout FILE_SYSTEM_OPTIMIZED 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:26:29.372" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:26:29.372" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:26:25.766" endtime="20220602 01:26:29.372"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:26:29.373" level="INFO"/>
<status status="PASS" starttime="20220602 01:26:29.373" endtime="20220602 01:26:29.374"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:26:29.374" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:26:29.374" endtime="20220602 01:26:29.374"/>
</kw>
<status status="PASS" starttime="20220602 01:26:25.766" endtime="20220602 01:26:29.375"/>
</kw>
<msg timestamp="20220602 01:26:29.375" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:26:25.766" endtime="20220602 01:26:29.375"/>
</kw>
<status status="PASS" starttime="20220602 01:26:25.765" endtime="20220602 01:26:29.375"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create o3://om/${volume1}/bucket2 --layout FILE_SYSTEM_OPTIMIZED</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:26:29.379" level="INFO">Running command 'ozone sh bucket create o3://om/fstest94/bucket2 --layout FILE_SYSTEM_OPTIMIZED 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:26:32.945" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:26:32.945" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:26:29.377" endtime="20220602 01:26:32.945"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:26:32.946" level="INFO"/>
<status status="PASS" starttime="20220602 01:26:32.945" endtime="20220602 01:26:32.946"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:26:32.947" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:26:32.947" endtime="20220602 01:26:32.947"/>
</kw>
<status status="PASS" starttime="20220602 01:26:29.376" endtime="20220602 01:26:32.947"/>
</kw>
<msg timestamp="20220602 01:26:32.947" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:26:29.376" endtime="20220602 01:26:32.948"/>
</kw>
<status status="PASS" starttime="20220602 01:26:29.375" endtime="20220602 01:26:32.948"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create o3://om/${volume2}/bucket3 --layout FILE_SYSTEM_OPTIMIZED</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:26:32.951" level="INFO">Running command 'ozone sh bucket create o3://om/fstest294/bucket3 --layout FILE_SYSTEM_OPTIMIZED 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:26:36.555" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:26:36.555" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:26:32.949" endtime="20220602 01:26:36.555"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:26:36.556" level="INFO"/>
<status status="PASS" starttime="20220602 01:26:36.556" endtime="20220602 01:26:36.556"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:26:36.557" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:26:36.556" endtime="20220602 01:26:36.557"/>
</kw>
<status status="PASS" starttime="20220602 01:26:32.949" endtime="20220602 01:26:36.557"/>
</kw>
<msg timestamp="20220602 01:26:36.557" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:26:32.948" endtime="20220602 01:26:36.558"/>
</kw>
<status status="PASS" starttime="20220602 01:26:32.948" endtime="20220602 01:26:36.558"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220602 01:26:18.405" endtime="20220602 01:26:36.558"/>
</test>
<test id="s1-s2-s3-t5" name="Check volume from ozonefs">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls o3fs://bucket1.${volume1}/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:26:36.563" level="INFO">Running command 'ozone fs -ls o3fs://bucket1.fstest94/ 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:26:39.670" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:26:39.670" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:26:36.561" endtime="20220602 01:26:39.670"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:26:39.671" level="INFO"/>
<status status="PASS" starttime="20220602 01:26:39.671" endtime="20220602 01:26:39.671"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:26:39.672" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:26:39.672" endtime="20220602 01:26:39.672"/>
</kw>
<status status="PASS" starttime="20220602 01:26:36.561" endtime="20220602 01:26:39.672"/>
</kw>
<msg timestamp="20220602 01:26:39.672" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:26:36.560" endtime="20220602 01:26:39.673"/>
</kw>
<msg timestamp="20220602 01:26:39.673" level="INFO">${result} = </msg>
<status status="PASS" starttime="20220602 01:26:36.560" endtime="20220602 01:26:39.673"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220602 01:26:36.559" endtime="20220602 01:26:39.673"/>
</test>
<test id="s1-s2-s3-t6" name="Test Volume Acls">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${volume3}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:26:39.678" level="INFO">Running command 'ozone sh volume create fstest394 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:26:43.192" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:26:43.192" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:26:39.676" endtime="20220602 01:26:43.192"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:26:43.193" level="INFO"/>
<status status="PASS" starttime="20220602 01:26:43.192" endtime="20220602 01:26:43.193"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:26:43.194" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:26:43.193" endtime="20220602 01:26:43.194"/>
</kw>
<status status="PASS" starttime="20220602 01:26:39.676" endtime="20220602 01:26:43.194"/>
</kw>
<msg timestamp="20220602 01:26:43.194" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:26:39.675" endtime="20220602 01:26:43.195"/>
</kw>
<msg timestamp="20220602 01:26:43.195" level="INFO">${result} = </msg>
<status status="PASS" starttime="20220602 01:26:39.675" endtime="20220602 01:26:43.195"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220602 01:26:43.195" endtime="20220602 01:26:43.196"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${volume3}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:26:43.199" level="INFO">Running command 'ozone sh volume getacl fstest394 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:26:48.176" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:26:48.176" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20220602 01:26:43.197" endtime="20220602 01:26:48.176"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:26:48.178" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20220602 01:26:48.177" endtime="20220602 01:26:48.178"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:26:48.178" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:26:48.178" endtime="20220602 01:26:48.178"/>
</kw>
<status status="PASS" starttime="20220602 01:26:43.196" endtime="20220602 01:26:48.179"/>
</kw>
<msg timestamp="20220602 01:26:48.179" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:26:43.196" endtime="20220602 01:26:48.179"/>
</kw>
<msg timestamp="20220602 01:26:48.180" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20220602 01:26:43.196" endtime="20220602 01:26:48.180"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220602 01:26:48.180" endtime="20220602 01:26:48.181"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume addacl ${volume3} -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:26:48.185" level="INFO">Running command 'ozone sh volume addacl fstest394 -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:26:52.082" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:26:52.082" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20220602 01:26:48.182" endtime="20220602 01:26:52.082"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:26:52.084" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20220602 01:26:52.083" endtime="20220602 01:26:52.084"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:26:52.084" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:26:52.084" endtime="20220602 01:26:52.084"/>
</kw>
<status status="PASS" starttime="20220602 01:26:48.182" endtime="20220602 01:26:52.085"/>
</kw>
<msg timestamp="20220602 01:26:52.085" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:26:48.181" endtime="20220602 01:26:52.085"/>
</kw>
<msg timestamp="20220602 01:26:52.085" level="INFO">${result} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20220602 01:26:48.181" endtime="20220602 01:26:52.085"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${volume3}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:26:52.089" level="INFO">Running command 'ozone sh volume getacl fstest394 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:26:56.065" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:26:56.065" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20220602 01:26:52.087" endtime="20220602 01:26:56.065"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:26:56.066" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20220602 01:26:56.065" endtime="20220602 01:26:56.066"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:26:56.067" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:26:56.066" endtime="20220602 01:26:56.067"/>
</kw>
<status status="PASS" starttime="20220602 01:26:52.086" endtime="20220602 01:26:56.067"/>
</kw>
<msg timestamp="20220602 01:26:56.067" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:26:52.086" endtime="20220602 01:26:56.068"/>
</kw>
<msg timestamp="20220602 01:26:56.068" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20220602 01:26:52.086" endtime="20220602 01:26:56.068"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220602 01:26:56.068" endtime="20220602 01:26:56.069"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume removeacl ${volume3} -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:26:56.072" level="INFO">Running command 'ozone sh volume removeacl fstest394 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:26:59.602" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:26:59.602" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20220602 01:26:56.070" endtime="20220602 01:26:59.602"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:26:59.604" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20220602 01:26:59.603" endtime="20220602 01:26:59.604"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:26:59.604" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:26:59.604" endtime="20220602 01:26:59.604"/>
</kw>
<status status="PASS" starttime="20220602 01:26:56.070" endtime="20220602 01:26:59.605"/>
</kw>
<msg timestamp="20220602 01:26:59.605" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:26:56.069" endtime="20220602 01:26:59.605"/>
</kw>
<msg timestamp="20220602 01:26:59.605" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20220602 01:26:56.069" endtime="20220602 01:26:59.605"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${volume3}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:26:59.609" level="INFO">Running command 'ozone sh volume getacl fstest394 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:27:03.397" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:27:03.398" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20220602 01:26:59.607" endtime="20220602 01:27:03.398"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:27:03.399" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20220602 01:27:03.398" endtime="20220602 01:27:03.399"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:27:03.400" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:27:03.399" endtime="20220602 01:27:03.400"/>
</kw>
<status status="PASS" starttime="20220602 01:26:59.606" endtime="20220602 01:27:03.400"/>
</kw>
<msg timestamp="20220602 01:27:03.400" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:26:59.606" endtime="20220602 01:27:03.401"/>
</kw>
<msg timestamp="20220602 01:27:03.401" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20220602 01:26:59.605" endtime="20220602 01:27:03.401"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220602 01:27:03.401" endtime="20220602 01:27:03.402"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume setacl ${volume3} -al user:superuser1:rwxy,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:27:03.405" level="INFO">Running command 'ozone sh volume setacl fstest394 -al user:superuser1:rwxy,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:27:07.054" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:27:07.054" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20220602 01:27:03.403" endtime="20220602 01:27:07.054"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:27:07.055" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20220602 01:27:07.054" endtime="20220602 01:27:07.055"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:27:07.055" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:27:07.055" endtime="20220602 01:27:07.056"/>
</kw>
<status status="PASS" starttime="20220602 01:27:03.403" endtime="20220602 01:27:07.056"/>
</kw>
<msg timestamp="20220602 01:27:07.056" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:27:03.402" endtime="20220602 01:27:07.056"/>
</kw>
<msg timestamp="20220602 01:27:07.057" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20220602 01:27:03.402" endtime="20220602 01:27:07.057"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${volume3}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:27:07.060" level="INFO">Running command 'ozone sh volume getacl fstest394 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:27:10.842" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:27:10.842" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" starttime="20220602 01:27:07.058" endtime="20220602 01:27:10.842"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:27:10.844" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20220602 01:27:10.843" endtime="20220602 01:27:10.844"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:27:10.844" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:27:10.844" endtime="20220602 01:27:10.844"/>
</kw>
<status status="PASS" starttime="20220602 01:27:07.057" endtime="20220602 01:27:10.845"/>
</kw>
<msg timestamp="20220602 01:27:10.845" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:27:07.057" endtime="20220602 01:27:10.845"/>
</kw>
<msg timestamp="20220602 01:27:10.845" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" starttime="20220602 01:27:07.057" endtime="20220602 01:27:10.845"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220602 01:27:10.846" endtime="20220602 01:27:10.846"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220602 01:27:10.847" endtime="20220602 01:27:10.847"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220602 01:26:39.674" endtime="20220602 01:27:10.848"/>
</test>
<test id="s1-s2-s3-t7" name="Test Bucket Acls">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${volume3}/bk1 --layout FILE_SYSTEM_OPTIMIZED</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:27:10.853" level="INFO">Running command 'ozone sh bucket create fstest394/bk1 --layout FILE_SYSTEM_OPTIMIZED 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:27:14.563" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:27:14.564" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:27:10.851" endtime="20220602 01:27:14.564"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:27:14.565" level="INFO"/>
<status status="PASS" starttime="20220602 01:27:14.564" endtime="20220602 01:27:14.565"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:27:14.565" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:27:14.565" endtime="20220602 01:27:14.566"/>
</kw>
<status status="PASS" starttime="20220602 01:27:10.850" endtime="20220602 01:27:14.566"/>
</kw>
<msg timestamp="20220602 01:27:14.566" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:27:10.850" endtime="20220602 01:27:14.566"/>
</kw>
<msg timestamp="20220602 01:27:14.567" level="INFO">${result} = </msg>
<status status="PASS" starttime="20220602 01:27:10.849" endtime="20220602 01:27:14.567"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220602 01:27:14.567" endtime="20220602 01:27:14.567"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${volume3}/bk1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:27:14.571" level="INFO">Running command 'ozone sh bucket getacl fstest394/bk1 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:27:18.317" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:27:18.318" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20220602 01:27:14.569" endtime="20220602 01:27:18.318"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:27:18.319" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20220602 01:27:18.318" endtime="20220602 01:27:18.319"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:27:18.319" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:27:18.319" endtime="20220602 01:27:18.320"/>
</kw>
<status status="PASS" starttime="20220602 01:27:14.568" endtime="20220602 01:27:18.320"/>
</kw>
<msg timestamp="20220602 01:27:18.320" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:27:14.568" endtime="20220602 01:27:18.320"/>
</kw>
<msg timestamp="20220602 01:27:18.321" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20220602 01:27:14.567" endtime="20220602 01:27:18.321"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220602 01:27:18.321" endtime="20220602 01:27:18.321"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket addacl ${volume3}/bk1 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:27:18.324" level="INFO">Running command 'ozone sh bucket addacl fstest394/bk1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:27:21.999" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:27:21.999" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220602 01:27:18.322" endtime="20220602 01:27:21.999"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:27:22.001" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220602 01:27:22.000" endtime="20220602 01:27:22.001"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:27:22.001" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:27:22.001" endtime="20220602 01:27:22.001"/>
</kw>
<status status="PASS" starttime="20220602 01:27:18.322" endtime="20220602 01:27:22.002"/>
</kw>
<msg timestamp="20220602 01:27:22.002" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:27:18.322" endtime="20220602 01:27:22.002"/>
</kw>
<msg timestamp="20220602 01:27:22.002" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220602 01:27:18.321" endtime="20220602 01:27:22.002"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${volume3}/bk1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:27:22.006" level="INFO">Running command 'ozone sh bucket getacl fstest394/bk1 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:27:25.790" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:27:25.790" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20220602 01:27:22.004" endtime="20220602 01:27:25.790"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:27:25.792" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20220602 01:27:25.791" endtime="20220602 01:27:25.792"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:27:25.792" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:27:25.792" endtime="20220602 01:27:25.792"/>
</kw>
<status status="PASS" starttime="20220602 01:27:22.003" endtime="20220602 01:27:25.793"/>
</kw>
<msg timestamp="20220602 01:27:25.793" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:27:22.003" endtime="20220602 01:27:25.793"/>
</kw>
<msg timestamp="20220602 01:27:25.793" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20220602 01:27:22.003" endtime="20220602 01:27:25.793"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220602 01:27:25.794" endtime="20220602 01:27:25.794"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket removeacl ${volume3}/bk1 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:27:25.797" level="INFO">Running command 'ozone sh bucket removeacl fstest394/bk1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:27:29.408" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:27:29.408" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20220602 01:27:25.795" endtime="20220602 01:27:29.408"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:27:29.409" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20220602 01:27:29.408" endtime="20220602 01:27:29.409"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:27:29.410" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:27:29.409" endtime="20220602 01:27:29.410"/>
</kw>
<status status="PASS" starttime="20220602 01:27:25.795" endtime="20220602 01:27:29.410"/>
</kw>
<msg timestamp="20220602 01:27:29.410" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:27:25.795" endtime="20220602 01:27:29.410"/>
</kw>
<msg timestamp="20220602 01:27:29.411" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20220602 01:27:25.794" endtime="20220602 01:27:29.411"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${volume3}/bk1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:27:29.416" level="INFO">Running command 'ozone sh bucket getacl fstest394/bk1 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:27:33.525" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:27:33.525" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20220602 01:27:29.412" endtime="20220602 01:27:33.525"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:27:33.526" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" starttime="20220602 01:27:33.525" endtime="20220602 01:27:33.526"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:27:33.527" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:27:33.526" endtime="20220602 01:27:33.527"/>
</kw>
<status status="PASS" starttime="20220602 01:27:29.412" endtime="20220602 01:27:33.527"/>
</kw>
<msg timestamp="20220602 01:27:33.527" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:27:29.412" endtime="20220602 01:27:33.528"/>
</kw>
<msg timestamp="20220602 01:27:33.528" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20220602 01:27:29.411" endtime="20220602 01:27:33.528"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220602 01:27:33.528" endtime="20220602 01:27:33.529"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket setacl ${volume3}/bk1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:27:33.533" level="INFO">Running command 'ozone sh bucket setacl fstest394/bk1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:27:37.247" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:27:37.247" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20220602 01:27:33.530" endtime="20220602 01:27:37.247"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:27:37.248" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20220602 01:27:37.247" endtime="20220602 01:27:37.248"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:27:37.249" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:27:37.248" endtime="20220602 01:27:37.249"/>
</kw>
<status status="PASS" starttime="20220602 01:27:33.530" endtime="20220602 01:27:37.249"/>
</kw>
<msg timestamp="20220602 01:27:37.249" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:27:33.530" endtime="20220602 01:27:37.249"/>
</kw>
<msg timestamp="20220602 01:27:37.250" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20220602 01:27:33.529" endtime="20220602 01:27:37.250"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${volume3}/bk1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:27:37.253" level="INFO">Running command 'ozone sh bucket getacl fstest394/bk1 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:27:41.288" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:27:41.288" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20220602 01:27:37.251" endtime="20220602 01:27:41.288"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:27:41.290" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20220602 01:27:41.289" endtime="20220602 01:27:41.290"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:27:41.290" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:27:41.290" endtime="20220602 01:27:41.290"/>
</kw>
<status status="PASS" starttime="20220602 01:27:37.251" endtime="20220602 01:27:41.291"/>
</kw>
<msg timestamp="20220602 01:27:41.291" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:27:37.250" endtime="20220602 01:27:41.291"/>
</kw>
<msg timestamp="20220602 01:27:41.292" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20220602 01:27:37.250" endtime="20220602 01:27:41.292"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220602 01:27:41.292" endtime="20220602 01:27:41.292"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220602 01:27:41.292" endtime="20220602 01:27:41.293"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220602 01:27:10.848" endtime="20220602 01:27:41.293"/>
</test>
<test id="s1-s2-s3-t8" name="Test key Acls">
<kw name="Execute" library="os">
<arg>ozone sh key put ${volume3}/bk1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:27:41.299" level="INFO">Running command 'ozone sh key put fstest394/bk1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:27:47.515" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:27:47.515" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:27:41.297" endtime="20220602 01:27:47.515"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:27:47.516" level="INFO"/>
<status status="PASS" starttime="20220602 01:27:47.515" endtime="20220602 01:27:47.516"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:27:47.517" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:27:47.516" endtime="20220602 01:27:47.517"/>
</kw>
<status status="PASS" starttime="20220602 01:27:41.296" endtime="20220602 01:27:47.517"/>
</kw>
<msg timestamp="20220602 01:27:47.517" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:27:41.296" endtime="20220602 01:27:47.517"/>
</kw>
<status status="PASS" starttime="20220602 01:27:41.295" endtime="20220602 01:27:47.518"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${volume3}/bk1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:27:47.521" level="INFO">Running command 'ozone sh key getacl fstest394/bk1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:27:51.155" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:27:51.155" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20220602 01:27:47.519" endtime="20220602 01:27:51.155"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:27:51.156" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20220602 01:27:51.155" endtime="20220602 01:27:51.156"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:27:51.157" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:27:51.157" endtime="20220602 01:27:51.157"/>
</kw>
<status status="PASS" starttime="20220602 01:27:47.519" endtime="20220602 01:27:51.157"/>
</kw>
<msg timestamp="20220602 01:27:51.157" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:27:47.518" endtime="20220602 01:27:51.158"/>
</kw>
<msg timestamp="20220602 01:27:51.158" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20220602 01:27:47.518" endtime="20220602 01:27:51.158"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220602 01:27:51.158" endtime="20220602 01:27:51.158"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key addacl ${volume3}/bk1/key1 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:27:51.162" level="INFO">Running command 'ozone sh key addacl fstest394/bk1/key1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:27:54.734" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:27:54.735" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220602 01:27:51.160" endtime="20220602 01:27:54.735"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:27:54.736" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220602 01:27:54.735" endtime="20220602 01:27:54.736"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:27:54.737" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:27:54.736" endtime="20220602 01:27:54.737"/>
</kw>
<status status="PASS" starttime="20220602 01:27:51.159" endtime="20220602 01:27:54.737"/>
</kw>
<msg timestamp="20220602 01:27:54.737" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:27:51.159" endtime="20220602 01:27:54.737"/>
</kw>
<msg timestamp="20220602 01:27:54.738" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220602 01:27:51.159" endtime="20220602 01:27:54.738"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${volume3}/bk1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:27:54.742" level="INFO">Running command 'ozone sh key getacl fstest394/bk1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:27:58.492" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:27:58.492" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20220602 01:27:54.739" endtime="20220602 01:27:58.492"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:27:58.493" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20220602 01:27:58.492" endtime="20220602 01:27:58.493"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:27:58.493" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:27:58.493" endtime="20220602 01:27:58.493"/>
</kw>
<status status="PASS" starttime="20220602 01:27:54.739" endtime="20220602 01:27:58.494"/>
</kw>
<msg timestamp="20220602 01:27:58.494" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:27:54.738" endtime="20220602 01:27:58.494"/>
</kw>
<msg timestamp="20220602 01:27:58.494" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20220602 01:27:54.738" endtime="20220602 01:27:58.494"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220602 01:27:58.495" endtime="20220602 01:27:58.495"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key removeacl ${volume3}/bk1/key1 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:27:58.499" level="INFO">Running command 'ozone sh key removeacl fstest394/bk1/key1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:28:01.833" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:28:01.834" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20220602 01:27:58.497" endtime="20220602 01:28:01.834"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:28:01.835" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20220602 01:28:01.834" endtime="20220602 01:28:01.835"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:28:01.835" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:28:01.835" endtime="20220602 01:28:01.835"/>
</kw>
<status status="PASS" starttime="20220602 01:27:58.496" endtime="20220602 01:28:01.836"/>
</kw>
<msg timestamp="20220602 01:28:01.836" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:27:58.496" endtime="20220602 01:28:01.836"/>
</kw>
<msg timestamp="20220602 01:28:01.836" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20220602 01:27:58.495" endtime="20220602 01:28:01.836"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${volume3}/bk1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:28:01.840" level="INFO">Running command 'ozone sh key getacl fstest394/bk1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:28:05.637" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:28:05.637" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20220602 01:28:01.838" endtime="20220602 01:28:05.637"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:28:05.639" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" starttime="20220602 01:28:05.638" endtime="20220602 01:28:05.639"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:28:05.639" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:28:05.639" endtime="20220602 01:28:05.639"/>
</kw>
<status status="PASS" starttime="20220602 01:28:01.837" endtime="20220602 01:28:05.640"/>
</kw>
<msg timestamp="20220602 01:28:05.640" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:28:01.837" endtime="20220602 01:28:05.640"/>
</kw>
<msg timestamp="20220602 01:28:05.641" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20220602 01:28:01.837" endtime="20220602 01:28:05.641"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220602 01:28:05.641" endtime="20220602 01:28:05.641"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key setacl ${volume3}/bk1/key1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:28:05.645" level="INFO">Running command 'ozone sh key setacl fstest394/bk1/key1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:28:09.378" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:28:09.378" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20220602 01:28:05.643" endtime="20220602 01:28:09.378"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:28:09.379" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20220602 01:28:09.379" endtime="20220602 01:28:09.379"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:28:09.380" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:28:09.380" endtime="20220602 01:28:09.380"/>
</kw>
<status status="PASS" starttime="20220602 01:28:05.642" endtime="20220602 01:28:09.380"/>
</kw>
<msg timestamp="20220602 01:28:09.380" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:28:05.642" endtime="20220602 01:28:09.381"/>
</kw>
<msg timestamp="20220602 01:28:09.381" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20220602 01:28:05.641" endtime="20220602 01:28:09.381"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${volume3}/bk1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:28:09.385" level="INFO">Running command 'ozone sh key getacl fstest394/bk1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:28:13.220" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:28:13.220" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20220602 01:28:09.382" endtime="20220602 01:28:13.220"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:28:13.222" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20220602 01:28:13.221" endtime="20220602 01:28:13.222"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:28:13.222" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:28:13.222" endtime="20220602 01:28:13.223"/>
</kw>
<status status="PASS" starttime="20220602 01:28:09.382" endtime="20220602 01:28:13.223"/>
</kw>
<msg timestamp="20220602 01:28:13.223" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:28:09.382" endtime="20220602 01:28:13.223"/>
</kw>
<msg timestamp="20220602 01:28:13.224" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20220602 01:28:09.381" endtime="20220602 01:28:13.224"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220602 01:28:13.224" endtime="20220602 01:28:13.224"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220602 01:28:13.224" endtime="20220602 01:28:13.225"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220602 01:27:41.294" endtime="20220602 01:28:13.225"/>
</test>
<test id="s1-s2-s3-t9" name="Test native authorizer">
<kw name="Execute" library="os">
<arg>ozone sh volume removeacl ${volume3} -a group:root:a</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:28:13.230" level="INFO">Running command 'ozone sh volume removeacl fstest394 -a group:root:a 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:28:16.876" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:28:16.876" level="INFO">${output} = ACL group:root:a[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20220602 01:28:13.228" endtime="20220602 01:28:16.876"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:28:16.877" level="INFO">ACL group:root:a[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20220602 01:28:16.876" endtime="20220602 01:28:16.877"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:28:16.878" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:28:16.877" endtime="20220602 01:28:16.878"/>
</kw>
<status status="PASS" starttime="20220602 01:28:13.228" endtime="20220602 01:28:16.878"/>
</kw>
<msg timestamp="20220602 01:28:16.878" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:28:13.228" endtime="20220602 01:28:16.879"/>
</kw>
<status status="PASS" starttime="20220602 01:28:13.227" endtime="20220602 01:28:16.879"/>
</kw>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:28:16.882" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:28:16.886" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:28:16.886" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:28:16.880" endtime="20220602 01:28:16.886"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:28:16.887" level="INFO"/>
<status status="PASS" starttime="20220602 01:28:16.886" endtime="20220602 01:28:16.887"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:28:16.888" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:28:16.887" endtime="20220602 01:28:16.888"/>
</kw>
<status status="PASS" starttime="20220602 01:28:16.880" endtime="20220602 01:28:16.888"/>
</kw>
<msg timestamp="20220602 01:28:16.888" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:28:16.879" endtime="20220602 01:28:16.888"/>
</kw>
<status status="PASS" starttime="20220602 01:28:16.879" endtime="20220602 01:28:16.889"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:28:16.894" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:28:16.897" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:28:16.897" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220602 01:28:16.891" endtime="20220602 01:28:16.897"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:28:16.898" level="INFO">scm</msg>
<status status="PASS" starttime="20220602 01:28:16.898" endtime="20220602 01:28:16.898"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:28:16.899" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:28:16.898" endtime="20220602 01:28:16.899"/>
</kw>
<status status="PASS" starttime="20220602 01:28:16.891" endtime="20220602 01:28:16.899"/>
</kw>
<msg timestamp="20220602 01:28:16.899" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:28:16.890" endtime="20220602 01:28:16.900"/>
</kw>
<msg timestamp="20220602 01:28:16.900" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220602 01:28:16.890" endtime="20220602 01:28:16.900"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220602 01:28:16.901" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220602 01:28:16.900" endtime="20220602 01:28:16.901"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:28:16.904" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:28:16.932" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:28:16.932" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:28:16.903" endtime="20220602 01:28:16.932"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:28:16.933" level="INFO"/>
<status status="PASS" starttime="20220602 01:28:16.933" endtime="20220602 01:28:16.933"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:28:16.934" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:28:16.934" endtime="20220602 01:28:16.934"/>
</kw>
<status status="PASS" starttime="20220602 01:28:16.902" endtime="20220602 01:28:16.934"/>
</kw>
<msg timestamp="20220602 01:28:16.934" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:28:16.902" endtime="20220602 01:28:16.935"/>
</kw>
<status status="PASS" starttime="20220602 01:28:16.901" endtime="20220602 01:28:16.935"/>
</kw>
<status status="PASS" starttime="20220602 01:28:16.901" endtime="20220602 01:28:16.935"/>
</kw>
<status status="PASS" starttime="20220602 01:28:16.889" endtime="20220602 01:28:16.935"/>
</kw>
<status status="PASS" starttime="20220602 01:28:16.889" endtime="20220602 01:28:16.935"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket list /${volume3}/</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:28:16.937" level="INFO">Running command 'ozone sh bucket list /fstest394/ 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:28:20.668" level="INFO">${rc} = 255</msg>
<msg timestamp="20220602 01:28:20.668" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access volume Volume:fstest394 </msg>
<status status="PASS" starttime="20220602 01:28:16.936" endtime="20220602 01:28:20.668"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:28:20.669" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access volume Volume:fstest394 </msg>
<status status="PASS" starttime="20220602 01:28:20.669" endtime="20220602 01:28:20.670"/>
</kw>
<msg timestamp="20220602 01:28:20.670" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access volume Volume:fstest394 </msg>
<status status="PASS" starttime="20220602 01:28:16.935" endtime="20220602 01:28:20.670"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220602 01:28:20.670" endtime="20220602 01:28:20.670"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list /${volume3}/bk1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:28:20.673" level="INFO">Running command 'ozone sh key list /fstest394/bk1 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:28:24.353" level="INFO">${rc} = 255</msg>
<msg timestamp="20220602 01:28:24.353" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access volume Volume:fstest394 </msg>
<status status="PASS" starttime="20220602 01:28:20.671" endtime="20220602 01:28:24.353"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:28:24.354" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access volume Volume:fstest394 </msg>
<status status="PASS" starttime="20220602 01:28:24.354" endtime="20220602 01:28:24.354"/>
</kw>
<msg timestamp="20220602 01:28:24.355" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access volume Volume:fstest394 </msg>
<status status="PASS" starttime="20220602 01:28:20.671" endtime="20220602 01:28:24.355"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220602 01:28:24.355" endtime="20220602 01:28:24.355"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume addacl ${volume3} -a user:testuser2/scm@EXAMPLE.COM:xy</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:28:24.358" level="INFO">Running command 'ozone sh volume addacl fstest394 -a user:testuser2/scm@EXAMPLE.COM:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:28:27.877" level="INFO">${rc} = 255</msg>
<msg timestamp="20220602 01:28:27.878" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have WRITE_ACL permission to access volume Volume:fstest394 </msg>
<status status="PASS" starttime="20220602 01:28:24.356" endtime="20220602 01:28:27.878"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:28:27.879" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have WRITE_ACL permission to access volume Volume:fstest394 </msg>
<status status="PASS" starttime="20220602 01:28:27.878" endtime="20220602 01:28:27.879"/>
</kw>
<msg timestamp="20220602 01:28:27.879" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have WRITE_ACL permission to access volume Volume:fstest394 </msg>
<status status="PASS" starttime="20220602 01:28:24.356" endtime="20220602 01:28:27.879"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have WRITE_ACL permission to access volume</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220602 01:28:27.879" endtime="20220602 01:28:27.880"/>
</kw>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:28:27.883" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:28:27.886" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:28:27.886" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:28:27.881" endtime="20220602 01:28:27.886"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:28:27.887" level="INFO"/>
<status status="PASS" starttime="20220602 01:28:27.887" endtime="20220602 01:28:27.887"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:28:27.888" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:28:27.887" endtime="20220602 01:28:27.888"/>
</kw>
<status status="PASS" starttime="20220602 01:28:27.880" endtime="20220602 01:28:27.888"/>
</kw>
<msg timestamp="20220602 01:28:27.888" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:28:27.880" endtime="20220602 01:28:27.888"/>
</kw>
<status status="PASS" starttime="20220602 01:28:27.880" endtime="20220602 01:28:27.889"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:28:27.893" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:28:27.896" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:28:27.896" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220602 01:28:27.891" endtime="20220602 01:28:27.896"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:28:27.897" level="INFO">scm</msg>
<status status="PASS" starttime="20220602 01:28:27.896" endtime="20220602 01:28:27.897"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:28:27.897" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:28:27.897" endtime="20220602 01:28:27.897"/>
</kw>
<status status="PASS" starttime="20220602 01:28:27.890" endtime="20220602 01:28:27.898"/>
</kw>
<msg timestamp="20220602 01:28:27.898" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:28:27.890" endtime="20220602 01:28:27.898"/>
</kw>
<msg timestamp="20220602 01:28:27.898" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220602 01:28:27.889" endtime="20220602 01:28:27.898"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220602 01:28:27.899" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220602 01:28:27.899" endtime="20220602 01:28:27.899"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:28:27.903" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:28:27.910" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:28:27.910" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:28:27.901" endtime="20220602 01:28:27.910"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:28:27.911" level="INFO"/>
<status status="PASS" starttime="20220602 01:28:27.910" endtime="20220602 01:28:27.911"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:28:27.912" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:28:27.911" endtime="20220602 01:28:27.912"/>
</kw>
<status status="PASS" starttime="20220602 01:28:27.900" endtime="20220602 01:28:27.912"/>
</kw>
<msg timestamp="20220602 01:28:27.912" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:28:27.900" endtime="20220602 01:28:27.913"/>
</kw>
<status status="PASS" starttime="20220602 01:28:27.900" endtime="20220602 01:28:27.913"/>
</kw>
<status status="PASS" starttime="20220602 01:28:27.899" endtime="20220602 01:28:27.913"/>
</kw>
<status status="PASS" starttime="20220602 01:28:27.889" endtime="20220602 01:28:27.913"/>
</kw>
<status status="PASS" starttime="20220602 01:28:27.889" endtime="20220602 01:28:27.913"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl ${volume3} -a user:testuser2/scm@EXAMPLE.COM:xyrw</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:28:27.916" level="INFO">Running command 'ozone sh volume addacl fstest394 -a user:testuser2/scm@EXAMPLE.COM:xyrw 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:28:31.415" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:28:31.415" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220602 01:28:27.914" endtime="20220602 01:28:31.415"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:28:31.416" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220602 01:28:31.416" endtime="20220602 01:28:31.416"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:28:31.417" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:28:31.417" endtime="20220602 01:28:31.417"/>
</kw>
<status status="PASS" starttime="20220602 01:28:27.914" endtime="20220602 01:28:31.417"/>
</kw>
<msg timestamp="20220602 01:28:31.417" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:28:27.914" endtime="20220602 01:28:31.418"/>
</kw>
<status status="PASS" starttime="20220602 01:28:27.913" endtime="20220602 01:28:31.418"/>
</kw>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:28:31.422" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:28:31.425" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:28:31.425" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:28:31.419" endtime="20220602 01:28:31.425"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:28:31.426" level="INFO"/>
<status status="PASS" starttime="20220602 01:28:31.425" endtime="20220602 01:28:31.426"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:28:31.427" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:28:31.426" endtime="20220602 01:28:31.427"/>
</kw>
<status status="PASS" starttime="20220602 01:28:31.419" endtime="20220602 01:28:31.427"/>
</kw>
<msg timestamp="20220602 01:28:31.427" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:28:31.419" endtime="20220602 01:28:31.427"/>
</kw>
<status status="PASS" starttime="20220602 01:28:31.418" endtime="20220602 01:28:31.428"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:28:31.432" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:28:31.435" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:28:31.435" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220602 01:28:31.430" endtime="20220602 01:28:31.436"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:28:31.437" level="INFO">scm</msg>
<status status="PASS" starttime="20220602 01:28:31.436" endtime="20220602 01:28:31.437"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:28:31.437" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:28:31.437" endtime="20220602 01:28:31.437"/>
</kw>
<status status="PASS" starttime="20220602 01:28:31.429" endtime="20220602 01:28:31.438"/>
</kw>
<msg timestamp="20220602 01:28:31.438" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:28:31.429" endtime="20220602 01:28:31.438"/>
</kw>
<msg timestamp="20220602 01:28:31.438" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220602 01:28:31.428" endtime="20220602 01:28:31.438"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220602 01:28:31.439" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220602 01:28:31.439" endtime="20220602 01:28:31.439"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:28:31.444" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:28:31.451" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:28:31.452" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:28:31.442" endtime="20220602 01:28:31.452"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:28:31.453" level="INFO"/>
<status status="PASS" starttime="20220602 01:28:31.452" endtime="20220602 01:28:31.453"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:28:31.453" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:28:31.453" endtime="20220602 01:28:31.454"/>
</kw>
<status status="PASS" starttime="20220602 01:28:31.441" endtime="20220602 01:28:31.454"/>
</kw>
<msg timestamp="20220602 01:28:31.454" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:28:31.440" endtime="20220602 01:28:31.454"/>
</kw>
<status status="PASS" starttime="20220602 01:28:31.440" endtime="20220602 01:28:31.455"/>
</kw>
<status status="PASS" starttime="20220602 01:28:31.439" endtime="20220602 01:28:31.455"/>
</kw>
<status status="PASS" starttime="20220602 01:28:31.428" endtime="20220602 01:28:31.455"/>
</kw>
<status status="PASS" starttime="20220602 01:28:31.428" endtime="20220602 01:28:31.455"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket list /${volume3}/</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:28:31.458" level="INFO">Running command 'ozone sh bucket list /fstest394/ 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:28:35.020" level="INFO">${rc} = 255</msg>
<msg timestamp="20220602 01:28:35.020" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access volume Volume:fstest394 </msg>
<status status="PASS" starttime="20220602 01:28:31.456" endtime="20220602 01:28:35.020"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:28:35.022" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access volume Volume:fstest394 </msg>
<status status="PASS" starttime="20220602 01:28:35.021" endtime="20220602 01:28:35.022"/>
</kw>
<msg timestamp="20220602 01:28:35.022" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access volume Volume:fstest394 </msg>
<status status="PASS" starttime="20220602 01:28:31.455" endtime="20220602 01:28:35.022"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access volume</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220602 01:28:35.022" endtime="20220602 01:28:35.023"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl ${volume3} -a user:testuser2/scm@EXAMPLE.COM:l</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:28:35.026" level="INFO">Running command 'ozone sh volume addacl fstest394 -a user:testuser2/scm@EXAMPLE.COM:l 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:28:38.400" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:28:38.400" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:l[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220602 01:28:35.024" endtime="20220602 01:28:38.400"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:28:38.401" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:l[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220602 01:28:38.400" endtime="20220602 01:28:38.401"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:28:38.402" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:28:38.401" endtime="20220602 01:28:38.402"/>
</kw>
<status status="PASS" starttime="20220602 01:28:35.023" endtime="20220602 01:28:38.402"/>
</kw>
<msg timestamp="20220602 01:28:38.402" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:28:35.023" endtime="20220602 01:28:38.402"/>
</kw>
<status status="PASS" starttime="20220602 01:28:35.023" endtime="20220602 01:28:38.403"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket list /${volume3}/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:28:38.406" level="INFO">Running command 'ozone sh bucket list /fstest394/ 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:28:42.111" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:28:42.111" level="INFO">${output} = [ {
  "metadata" : { },
  "volumeName" : "fstest394",
  "name" : "bk1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 52578,
  "usedNamespace" : 1,
  "creationTime" : "2022-06-02T0...</msg>
<status status="PASS" starttime="20220602 01:28:38.404" endtime="20220602 01:28:42.112"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:28:42.113" level="INFO">[ {
  "metadata" : { },
  "volumeName" : "fstest394",
  "name" : "bk1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 52578,
  "usedNamespace" : 1,
  "creationTime" : "2022-06-02T01:27:14.411Z",
  "modificationTime" : "2022-06-02T01:27:37.161Z",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "FILE_SYSTEM_OPTIMIZED",
  "owner" : "testuser",
  "link" : false
} ]</msg>
<status status="PASS" starttime="20220602 01:28:42.112" endtime="20220602 01:28:42.113"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:28:42.113" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:28:42.113" endtime="20220602 01:28:42.114"/>
</kw>
<status status="PASS" starttime="20220602 01:28:38.403" endtime="20220602 01:28:42.114"/>
</kw>
<msg timestamp="20220602 01:28:42.114" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:28:38.403" endtime="20220602 01:28:42.114"/>
</kw>
<status status="PASS" starttime="20220602 01:28:38.403" endtime="20220602 01:28:42.115"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume getacl /${volume3}/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:28:42.119" level="INFO">Running command 'ozone sh volume getacl /fstest394/ 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:28:45.813" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:28:45.813" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" starttime="20220602 01:28:42.117" endtime="20220602 01:28:45.813"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:28:45.814" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser2/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "LIST", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20220602 01:28:45.813" endtime="20220602 01:28:45.814"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:28:45.815" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:28:45.814" endtime="20220602 01:28:45.815"/>
</kw>
<status status="PASS" starttime="20220602 01:28:42.116" endtime="20220602 01:28:45.815"/>
</kw>
<msg timestamp="20220602 01:28:45.815" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:28:42.116" endtime="20220602 01:28:45.816"/>
</kw>
<status status="PASS" starttime="20220602 01:28:42.115" endtime="20220602 01:28:45.816"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list /${volume3}/bk1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:28:45.818" level="INFO">Running command 'ozone sh key list /fstest394/bk1 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:28:49.438" level="INFO">${rc} = 255</msg>
<msg timestamp="20220602 01:28:49.438" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket Volume:fstest394 Bucket:bk1 </msg>
<status status="PASS" starttime="20220602 01:28:45.816" endtime="20220602 01:28:49.438"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:28:49.440" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket Volume:fstest394 Bucket:bk1 </msg>
<status status="PASS" starttime="20220602 01:28:49.439" endtime="20220602 01:28:49.440"/>
</kw>
<msg timestamp="20220602 01:28:49.440" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket Volume:fstest394 Bucket:bk1 </msg>
<status status="PASS" starttime="20220602 01:28:45.816" endtime="20220602 01:28:49.440"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220602 01:28:49.440" endtime="20220602 01:28:49.441"/>
</kw>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:28:49.444" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:28:49.448" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:28:49.448" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:28:49.442" endtime="20220602 01:28:49.448"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:28:49.449" level="INFO"/>
<status status="PASS" starttime="20220602 01:28:49.448" endtime="20220602 01:28:49.449"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:28:49.450" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:28:49.449" endtime="20220602 01:28:49.450"/>
</kw>
<status status="PASS" starttime="20220602 01:28:49.442" endtime="20220602 01:28:49.450"/>
</kw>
<msg timestamp="20220602 01:28:49.450" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:28:49.441" endtime="20220602 01:28:49.451"/>
</kw>
<status status="PASS" starttime="20220602 01:28:49.441" endtime="20220602 01:28:49.451"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:28:49.455" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:28:49.458" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:28:49.458" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220602 01:28:49.453" endtime="20220602 01:28:49.458"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:28:49.459" level="INFO">scm</msg>
<status status="PASS" starttime="20220602 01:28:49.458" endtime="20220602 01:28:49.459"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:28:49.459" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:28:49.459" endtime="20220602 01:28:49.459"/>
</kw>
<status status="PASS" starttime="20220602 01:28:49.453" endtime="20220602 01:28:49.460"/>
</kw>
<msg timestamp="20220602 01:28:49.460" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:28:49.452" endtime="20220602 01:28:49.460"/>
</kw>
<msg timestamp="20220602 01:28:49.460" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220602 01:28:49.452" endtime="20220602 01:28:49.460"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220602 01:28:49.462" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220602 01:28:49.461" endtime="20220602 01:28:49.462"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:28:49.466" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:28:49.472" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:28:49.472" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:28:49.464" endtime="20220602 01:28:49.472"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:28:49.474" level="INFO"/>
<status status="PASS" starttime="20220602 01:28:49.473" endtime="20220602 01:28:49.474"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:28:49.474" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:28:49.474" endtime="20220602 01:28:49.475"/>
</kw>
<status status="PASS" starttime="20220602 01:28:49.464" endtime="20220602 01:28:49.475"/>
</kw>
<msg timestamp="20220602 01:28:49.475" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:28:49.463" endtime="20220602 01:28:49.475"/>
</kw>
<status status="PASS" starttime="20220602 01:28:49.463" endtime="20220602 01:28:49.476"/>
</kw>
<status status="PASS" starttime="20220602 01:28:49.462" endtime="20220602 01:28:49.476"/>
</kw>
<status status="PASS" starttime="20220602 01:28:49.451" endtime="20220602 01:28:49.476"/>
</kw>
<status status="PASS" starttime="20220602 01:28:49.451" endtime="20220602 01:28:49.476"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl ${volume3}/bk1 -a user:testuser2/scm@EXAMPLE.COM:a</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:28:49.479" level="INFO">Running command 'ozone sh bucket addacl fstest394/bk1 -a user:testuser2/scm@EXAMPLE.COM:a 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:28:52.985" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:28:52.985" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:a[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220602 01:28:49.477" endtime="20220602 01:28:52.985"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:28:52.986" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:a[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220602 01:28:52.985" endtime="20220602 01:28:52.986"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:28:52.987" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:28:52.986" endtime="20220602 01:28:52.987"/>
</kw>
<status status="PASS" starttime="20220602 01:28:49.477" endtime="20220602 01:28:52.987"/>
</kw>
<msg timestamp="20220602 01:28:52.987" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:28:49.476" endtime="20220602 01:28:52.988"/>
</kw>
<status status="PASS" starttime="20220602 01:28:49.476" endtime="20220602 01:28:52.988"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket getacl /${volume3}/bk1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:28:52.991" level="INFO">Running command 'ozone sh bucket getacl /fstest394/bk1 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:28:56.787" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:28:56.787" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20220602 01:28:52.989" endtime="20220602 01:28:56.787"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:28:56.788" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser2/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20220602 01:28:56.787" endtime="20220602 01:28:56.788"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:28:56.789" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:28:56.788" endtime="20220602 01:28:56.789"/>
</kw>
<status status="PASS" starttime="20220602 01:28:52.989" endtime="20220602 01:28:56.789"/>
</kw>
<msg timestamp="20220602 01:28:56.789" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:28:52.989" endtime="20220602 01:28:56.790"/>
</kw>
<status status="PASS" starttime="20220602 01:28:52.988" endtime="20220602 01:28:56.790"/>
</kw>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:28:56.793" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:28:56.797" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:28:56.797" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:28:56.791" endtime="20220602 01:28:56.797"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:28:56.798" level="INFO"/>
<status status="PASS" starttime="20220602 01:28:56.797" endtime="20220602 01:28:56.798"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:28:56.798" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:28:56.798" endtime="20220602 01:28:56.799"/>
</kw>
<status status="PASS" starttime="20220602 01:28:56.791" endtime="20220602 01:28:56.799"/>
</kw>
<msg timestamp="20220602 01:28:56.799" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:28:56.791" endtime="20220602 01:28:56.799"/>
</kw>
<status status="PASS" starttime="20220602 01:28:56.790" endtime="20220602 01:28:56.800"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:28:56.803" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:28:56.806" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:28:56.806" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220602 01:28:56.802" endtime="20220602 01:28:56.806"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:28:56.807" level="INFO">scm</msg>
<status status="PASS" starttime="20220602 01:28:56.806" endtime="20220602 01:28:56.807"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:28:56.807" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:28:56.807" endtime="20220602 01:28:56.808"/>
</kw>
<status status="PASS" starttime="20220602 01:28:56.801" endtime="20220602 01:28:56.808"/>
</kw>
<msg timestamp="20220602 01:28:56.808" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:28:56.801" endtime="20220602 01:28:56.808"/>
</kw>
<msg timestamp="20220602 01:28:56.808" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220602 01:28:56.800" endtime="20220602 01:28:56.808"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220602 01:28:56.809" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220602 01:28:56.809" endtime="20220602 01:28:56.809"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:28:56.812" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:28:56.818" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:28:56.819" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:28:56.811" endtime="20220602 01:28:56.819"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:28:56.820" level="INFO"/>
<status status="PASS" starttime="20220602 01:28:56.819" endtime="20220602 01:28:56.820"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:28:56.820" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:28:56.820" endtime="20220602 01:28:56.820"/>
</kw>
<status status="PASS" starttime="20220602 01:28:56.810" endtime="20220602 01:28:56.821"/>
</kw>
<msg timestamp="20220602 01:28:56.821" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:28:56.810" endtime="20220602 01:28:56.821"/>
</kw>
<status status="PASS" starttime="20220602 01:28:56.809" endtime="20220602 01:28:56.821"/>
</kw>
<status status="PASS" starttime="20220602 01:28:56.809" endtime="20220602 01:28:56.821"/>
</kw>
<status status="PASS" starttime="20220602 01:28:56.800" endtime="20220602 01:28:56.822"/>
</kw>
<status status="PASS" starttime="20220602 01:28:56.800" endtime="20220602 01:28:56.822"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket getacl /${volume3}/bk1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:28:56.825" level="INFO">Running command 'ozone sh bucket getacl /fstest394/bk1 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:29:00.753" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:29:00.753" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20220602 01:28:56.823" endtime="20220602 01:29:00.753"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:29:00.754" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser2/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20220602 01:29:00.754" endtime="20220602 01:29:00.754"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:29:00.755" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:29:00.755" endtime="20220602 01:29:00.755"/>
</kw>
<status status="PASS" starttime="20220602 01:28:56.823" endtime="20220602 01:29:00.756"/>
</kw>
<msg timestamp="20220602 01:29:00.756" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:28:56.822" endtime="20220602 01:29:00.756"/>
</kw>
<status status="PASS" starttime="20220602 01:28:56.822" endtime="20220602 01:29:00.756"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key list /${volume3}/bk1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:29:00.760" level="INFO">Running command 'ozone sh key list /fstest394/bk1 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:29:04.622" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:29:04.623" level="INFO">${output} = [ {
  "volumeName" : "fstest394",
  "bucketName" : "bk1",
  "name" : "key1",
  "dataSize" : 17526,
  "creationTime" : "2022-06-02T01:27:44.890Z",
  "modificationTime" : "2022-06-02T01:28:09.158Z",
  "...</msg>
<status status="PASS" starttime="20220602 01:29:00.758" endtime="20220602 01:29:04.623"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:29:04.624" level="INFO">[ {
  "volumeName" : "fstest394",
  "bucketName" : "bk1",
  "name" : "key1",
  "dataSize" : 17526,
  "creationTime" : "2022-06-02T01:27:44.890Z",
  "modificationTime" : "2022-06-02T01:28:09.158Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  }
} ]</msg>
<status status="PASS" starttime="20220602 01:29:04.623" endtime="20220602 01:29:04.624"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:29:04.624" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:29:04.624" endtime="20220602 01:29:04.624"/>
</kw>
<status status="PASS" starttime="20220602 01:29:00.757" endtime="20220602 01:29:04.625"/>
</kw>
<msg timestamp="20220602 01:29:04.625" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:29:00.757" endtime="20220602 01:29:04.625"/>
</kw>
<status status="PASS" starttime="20220602 01:29:00.756" endtime="20220602 01:29:04.625"/>
</kw>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:29:04.629" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:29:04.632" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:29:04.632" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:29:04.627" endtime="20220602 01:29:04.632"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:29:04.633" level="INFO"/>
<status status="PASS" starttime="20220602 01:29:04.632" endtime="20220602 01:29:04.633"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:29:04.633" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:29:04.633" endtime="20220602 01:29:04.633"/>
</kw>
<status status="PASS" starttime="20220602 01:29:04.626" endtime="20220602 01:29:04.634"/>
</kw>
<msg timestamp="20220602 01:29:04.634" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:29:04.626" endtime="20220602 01:29:04.634"/>
</kw>
<status status="PASS" starttime="20220602 01:29:04.626" endtime="20220602 01:29:04.634"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:29:04.638" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:29:04.641" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:29:04.641" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220602 01:29:04.637" endtime="20220602 01:29:04.642"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:29:04.643" level="INFO">scm</msg>
<status status="PASS" starttime="20220602 01:29:04.642" endtime="20220602 01:29:04.643"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:29:04.643" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:29:04.643" endtime="20220602 01:29:04.643"/>
</kw>
<status status="PASS" starttime="20220602 01:29:04.636" endtime="20220602 01:29:04.644"/>
</kw>
<msg timestamp="20220602 01:29:04.644" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:29:04.636" endtime="20220602 01:29:04.644"/>
</kw>
<msg timestamp="20220602 01:29:04.644" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220602 01:29:04.635" endtime="20220602 01:29:04.645"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220602 01:29:04.645" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220602 01:29:04.645" endtime="20220602 01:29:04.645"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:29:04.649" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:29:04.656" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:29:04.656" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:29:04.647" endtime="20220602 01:29:04.656"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:29:04.657" level="INFO"/>
<status status="PASS" starttime="20220602 01:29:04.656" endtime="20220602 01:29:04.657"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:29:04.657" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:29:04.657" endtime="20220602 01:29:04.658"/>
</kw>
<status status="PASS" starttime="20220602 01:29:04.647" endtime="20220602 01:29:04.658"/>
</kw>
<msg timestamp="20220602 01:29:04.658" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:29:04.646" endtime="20220602 01:29:04.659"/>
</kw>
<status status="PASS" starttime="20220602 01:29:04.646" endtime="20220602 01:29:04.659"/>
</kw>
<status status="PASS" starttime="20220602 01:29:04.645" endtime="20220602 01:29:04.659"/>
</kw>
<status status="PASS" starttime="20220602 01:29:04.635" endtime="20220602 01:29:04.659"/>
</kw>
<status status="PASS" starttime="20220602 01:29:04.635" endtime="20220602 01:29:04.659"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220602 01:28:13.226" endtime="20220602 01:29:04.659"/>
</test>
<doc>Smoke test to start cluster with docker-compose environments.</doc>
<status status="PASS" starttime="20220602 01:25:45.478" endtime="20220602 01:29:04.661"/>
</suite>
<suite id="s1-s2-s4" name="Ozone-Secure-S3" source="/opt/hadoop/smoketest/security/ozone-secure-s3.robot">
<test id="s1-s2-s4-t1" name="Secure S3 test Success">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup s3 tests</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup s3 tests" library="commonawslib">
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220602 01:29:04.694" level="INFO">${randStr} = 8270221981</msg>
<status status="PASS" starttime="20220602 01:29:04.693" endtime="20220602 01:29:04.694"/>
</kw>
<msg timestamp="20220602 01:29:04.694" level="INFO">${random} = ozone-test-8270221981</msg>
<status status="PASS" starttime="20220602 01:29:04.693" endtime="20220602 01:29:04.694"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220602 01:29:04.695" level="INFO">${PREFIX} = ozone-test-8270221981</msg>
<status status="PASS" starttime="20220602 01:29:04.694" endtime="20220602 01:29:04.696"/>
</kw>
<status status="PASS" starttime="20220602 01:29:04.692" endtime="20220602 01:29:04.696"/>
</kw>
<status status="PASS" starttime="20220602 01:29:04.692" endtime="20220602 01:29:04.696"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which apt-get</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:29:04.699" level="INFO">Running command 'which apt-get 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:29:04.701" level="INFO">${rc} = 1</msg>
<msg timestamp="20220602 01:29:04.701" level="INFO">${output} = which: no apt-get in (/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin)</msg>
<status status="PASS" starttime="20220602 01:29:04.696" endtime="20220602 01:29:04.701"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220602 01:29:04.702" endtime="20220602 01:29:04.702"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>yum --help</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:29:04.704" level="INFO">Running command 'yum --help 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:29:04.982" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:29:04.982" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
ovl: Error while doing RPMdb copy-up:
[Errno 13] Permission denied: '/var/lib/rpm/Obsoletename'
Usage: yum [options] COMMAND

List of Commands:

check          Check...</msg>
<status status="PASS" starttime="20220602 01:29:04.702" endtime="20220602 01:29:04.982"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Install aws cli s3 centos" library="commonawslib">
<kw name="Execute" library="os">
<arg>sudo -E yum install -y awscli</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:29:04.988" level="INFO">Running command 'sudo -E yum install -y awscli 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:34:04.692" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20220602 01:29:04.986" endtime="20220602 01:34:04.692"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20220602 01:34:04.693" endtime="20220602 01:34:04.693"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20220602 01:34:04.693" endtime="20220602 01:34:04.693"/>
</kw>
<status status="FAIL" starttime="20220602 01:29:04.985" endtime="20220602 01:34:04.693"/>
</kw>
<msg timestamp="20220602 01:34:04.693" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20220602 01:29:04.985" endtime="20220602 01:34:04.694"/>
</kw>
<status status="FAIL" starttime="20220602 01:29:04.984" endtime="20220602 01:34:04.694"/>
</kw>
<status status="FAIL" starttime="20220602 01:29:04.984" endtime="20220602 01:34:04.694"/>
</kw>
<status status="FAIL" starttime="20220602 01:29:04.983" endtime="20220602 01:34:04.694"/>
</kw>
<status status="FAIL" starttime="20220602 01:29:04.696" endtime="20220602 01:34:04.695"/>
</kw>
<status status="FAIL" starttime="20220602 01:29:04.696" endtime="20220602 01:34:04.695"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20220602 01:34:04.695" endtime="20220602 01:34:04.695"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${BUCKET}</var>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20220602 01:34:04.695" endtime="20220602 01:34:04.695"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" starttime="20220602 01:34:04.695" endtime="20220602 01:34:04.695"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20220602 01:34:04.695" endtime="20220602 01:34:04.695"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20220602 01:34:04.695" endtime="20220602 01:34:04.696"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20220602 01:34:04.696" endtime="20220602 01:34:04.696"/>
</kw>
<status status="FAIL" starttime="20220602 01:29:04.692" endtime="20220602 01:34:04.696"/>
</kw>
<status status="FAIL" starttime="20220602 01:29:04.692" endtime="20220602 01:34:04.696"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} create-bucket --bucket bucket-test123</arg>
<status status="NOT RUN" starttime="20220602 01:34:04.696" endtime="20220602 01:34:04.696"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} list-buckets</arg>
<status status="NOT RUN" starttime="20220602 01:34:04.696" endtime="20220602 01:34:04.696"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>bucket-test123</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220602 01:34:04.696" endtime="20220602 01:34:04.696"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20220602 01:29:04.691" endtime="20220602 01:34:04.697">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-s2-s4-t2" name="Secure S3 put-object test">
<kw name="Set Variable" library="BuiltIn">
<var>${testFilePath}</var>
<arg>${TEMPDIR}/${TEST_FILE}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220602 01:34:04.699" level="INFO">${testFilePath} = /tmp/NOTICE.txt</msg>
<status status="PASS" starttime="20220602 01:34:04.698" endtime="20220602 01:34:04.699"/>
</kw>
<kw name="Copy File" library="OperatingSystem">
<arg>${TEST_FILE}</arg>
<arg>${testFilePath}</arg>
<doc>Copies the source file into the destination.</doc>
<msg timestamp="20220602 01:34:04.700" level="INFO" html="true">Copied file from '&lt;a href="file:///opt/hadoop/NOTICE.txt"&gt;/opt/hadoop/NOTICE.txt&lt;/a&gt;' to '&lt;a href="file:///tmp/NOTICE.txt"&gt;/tmp/NOTICE.txt&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20220602 01:34:04.699" endtime="20220602 01:34:04.700"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint ${ENDPOINT_URL} put-object --bucket=bucket-test123 --key=tmp1/tmp2/NOTICE.txt --body=${testFilePath}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:34:04.704" level="INFO">Running command 'aws s3api --endpoint http://s3g:9878 put-object --bucket=bucket-test123 --key=tmp1/tmp2/NOTICE.txt --body=/tmp/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:34:05.274" level="INFO">${rc} = 255</msg>
<msg timestamp="20220602 01:34:05.275" level="INFO">${output} = Unable to locate credentials. You can configure credentials by running "aws configure".</msg>
<status status="PASS" starttime="20220602 01:34:04.702" endtime="20220602 01:34:05.275"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:34:05.276" level="INFO">Unable to locate credentials. You can configure credentials by running "aws configure".</msg>
<status status="PASS" starttime="20220602 01:34:05.275" endtime="20220602 01:34:05.276"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:34:05.276" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20220602 01:34:05.277" level="FAIL">255 != 0</msg>
<status status="FAIL" starttime="20220602 01:34:05.276" endtime="20220602 01:34:05.277"/>
</kw>
<status status="FAIL" starttime="20220602 01:34:04.701" endtime="20220602 01:34:05.278"/>
</kw>
<msg timestamp="20220602 01:34:05.278" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20220602 01:34:04.701" endtime="20220602 01:34:05.278"/>
</kw>
<status status="FAIL" starttime="20220602 01:34:04.700" endtime="20220602 01:34:05.279"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint ${ENDPOINT_URL} list-objects --bucket=bucket-test123</arg>
<status status="NOT RUN" starttime="20220602 01:34:05.279" endtime="20220602 01:34:05.279"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>tmp1/tmp2/NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220602 01:34:05.279" endtime="20220602 01:34:05.279"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint ${ENDPOINT_URL} put-object --bucket=bucket-test123 --key=tmp3//tmp4/NOTICE.txt --body=${testFilePath}</arg>
<status status="NOT RUN" starttime="20220602 01:34:05.280" endtime="20220602 01:34:05.280"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint ${ENDPOINT_URL} list-objects --bucket=bucket-test123</arg>
<status status="NOT RUN" starttime="20220602 01:34:05.280" endtime="20220602 01:34:05.280"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>tmp3//tmp4/NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220602 01:34:05.280" endtime="20220602 01:34:05.280"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint ${ENDPOINT_URL} put-object --bucket=bucket-test123 --key=//tmp5/tmp6/NOTICE.txt --body=${testFilePath}</arg>
<status status="NOT RUN" starttime="20220602 01:34:05.280" endtime="20220602 01:34:05.280"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint ${ENDPOINT_URL} list-objects --bucket=bucket-test123</arg>
<status status="NOT RUN" starttime="20220602 01:34:05.280" endtime="20220602 01:34:05.280"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>//tmp5/tmp6/NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220602 01:34:05.280" endtime="20220602 01:34:05.280"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20220602 01:34:04.697" endtime="20220602 01:34:05.281">255 != 0</status>
</test>
<test id="s1-s2-s4-t3" name="Secure S3 test Failure">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:34:05.286" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:34:05.696" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:34:05.696" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:34:05.284" endtime="20220602 01:34:05.696"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:34:05.697" level="INFO"/>
<status status="PASS" starttime="20220602 01:34:05.697" endtime="20220602 01:34:05.697"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:34:05.698" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:34:05.698" endtime="20220602 01:34:05.698"/>
</kw>
<status status="PASS" starttime="20220602 01:34:05.283" endtime="20220602 01:34:05.698"/>
</kw>
<msg timestamp="20220602 01:34:05.698" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:34:05.283" endtime="20220602 01:34:05.699"/>
</kw>
<status status="PASS" starttime="20220602 01:34:05.282" endtime="20220602 01:34:05.699"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:34:05.703" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:34:06.156" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:34:06.156" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:34:05.700" endtime="20220602 01:34:06.156"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:34:06.158" level="INFO"/>
<status status="PASS" starttime="20220602 01:34:06.157" endtime="20220602 01:34:06.158"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:34:06.158" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:34:06.158" endtime="20220602 01:34:06.158"/>
</kw>
<status status="PASS" starttime="20220602 01:34:05.700" endtime="20220602 01:34:06.159"/>
</kw>
<msg timestamp="20220602 01:34:06.159" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:34:05.700" endtime="20220602 01:34:06.159"/>
</kw>
<status status="PASS" starttime="20220602 01:34:05.699" endtime="20220602 01:34:06.159"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:34:06.163" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:34:06.595" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:34:06.596" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:34:06.161" endtime="20220602 01:34:06.596"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:34:06.597" level="INFO"/>
<status status="PASS" starttime="20220602 01:34:06.596" endtime="20220602 01:34:06.597"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:34:06.598" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:34:06.597" endtime="20220602 01:34:06.598"/>
</kw>
<status status="PASS" starttime="20220602 01:34:06.160" endtime="20220602 01:34:06.598"/>
</kw>
<msg timestamp="20220602 01:34:06.598" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:34:06.160" endtime="20220602 01:34:06.599"/>
</kw>
<status status="PASS" starttime="20220602 01:34:06.160" endtime="20220602 01:34:06.599"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:34:06.603" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:34:07.074" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:34:07.074" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:34:06.600" endtime="20220602 01:34:07.074"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:34:07.075" level="INFO"/>
<status status="PASS" starttime="20220602 01:34:07.074" endtime="20220602 01:34:07.075"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:34:07.076" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:34:07.075" endtime="20220602 01:34:07.076"/>
</kw>
<status status="PASS" starttime="20220602 01:34:06.600" endtime="20220602 01:34:07.076"/>
</kw>
<msg timestamp="20220602 01:34:07.076" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:34:06.600" endtime="20220602 01:34:07.077"/>
</kw>
<status status="PASS" starttime="20220602 01:34:06.599" endtime="20220602 01:34:07.077"/>
</kw>
<status status="PASS" starttime="20220602 01:34:05.282" endtime="20220602 01:34:07.077"/>
</kw>
<status status="PASS" starttime="20220602 01:34:05.282" endtime="20220602 01:34:07.077"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${result}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} create-bucket --bucket bucket-test123</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:34:07.080" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-test123 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:34:09.565" level="INFO">${rc} = 255</msg>
<msg timestamp="20220602 01:34:09.565" level="INFO">${result} = 
An error occurred (AccessDenied) when calling the CreateBucket operation: User doesn't have the right to access this resource.</msg>
<status status="PASS" starttime="20220602 01:34:07.077" endtime="20220602 01:34:09.565"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${rc} &gt; 0</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220602 01:34:09.566" endtime="20220602 01:34:09.567"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220602 01:34:05.281" endtime="20220602 01:34:09.567"/>
</test>
<doc>Smoke test to start cluster with docker-compose environments.</doc>
<status status="FAIL" starttime="20220602 01:29:04.664" endtime="20220602 01:34:09.568"/>
</suite>
<suite id="s1-s2-s5" name="Ozone-Secure-Tenant" source="/opt/hadoop/smoketest/security/ozone-secure-tenant.robot">
<test id="s1-s2-s5-t1" name="Create Tenant Success with Cluster Admin">
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:34:09.585" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:34:09.588" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:34:09.588" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220602 01:34:09.583" endtime="20220602 01:34:09.588"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:34:09.589" level="INFO">scm</msg>
<status status="PASS" starttime="20220602 01:34:09.589" endtime="20220602 01:34:09.590"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:34:09.590" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:34:09.590" endtime="20220602 01:34:09.590"/>
</kw>
<status status="PASS" starttime="20220602 01:34:09.582" endtime="20220602 01:34:09.591"/>
</kw>
<msg timestamp="20220602 01:34:09.591" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:34:09.582" endtime="20220602 01:34:09.591"/>
</kw>
<msg timestamp="20220602 01:34:09.592" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220602 01:34:09.582" endtime="20220602 01:34:09.592"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220602 01:34:09.593" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220602 01:34:09.592" endtime="20220602 01:34:09.593"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:34:09.597" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:34:09.660" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:34:09.660" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:34:09.595" endtime="20220602 01:34:09.660"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:34:09.662" level="INFO"/>
<status status="PASS" starttime="20220602 01:34:09.661" endtime="20220602 01:34:09.662"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:34:09.662" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:34:09.662" endtime="20220602 01:34:09.662"/>
</kw>
<status status="PASS" starttime="20220602 01:34:09.595" endtime="20220602 01:34:09.663"/>
</kw>
<msg timestamp="20220602 01:34:09.663" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:34:09.595" endtime="20220602 01:34:09.663"/>
</kw>
<status status="PASS" starttime="20220602 01:34:09.594" endtime="20220602 01:34:09.664"/>
</kw>
<status status="PASS" starttime="20220602 01:34:09.594" endtime="20220602 01:34:09.664"/>
</kw>
<status status="PASS" starttime="20220602 01:34:09.581" endtime="20220602 01:34:09.664"/>
</kw>
<status status="PASS" starttime="20220602 01:34:09.581" endtime="20220602 01:34:09.664"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone tenant --verbose create tenantone</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:34:09.668" level="INFO">Running command 'ozone tenant --verbose create tenantone 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:34:12.939" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:34:12.939" level="INFO">${output} = 2022-06-02 01:34:12,710 [main] INFO rpc.RpcClient: Creating Tenant: 'tenantone', with new volume: 'tenantone'
{
  "tenantId": "tenantone"
}</msg>
<status status="PASS" starttime="20220602 01:34:09.665" endtime="20220602 01:34:12.940"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:34:12.941" level="INFO">2022-06-02 01:34:12,710 [main] INFO rpc.RpcClient: Creating Tenant: 'tenantone', with new volume: 'tenantone'
{
  "tenantId": "tenantone"
}</msg>
<status status="PASS" starttime="20220602 01:34:12.940" endtime="20220602 01:34:12.941"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:34:12.941" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:34:12.941" endtime="20220602 01:34:12.942"/>
</kw>
<status status="PASS" starttime="20220602 01:34:09.665" endtime="20220602 01:34:12.942"/>
</kw>
<msg timestamp="20220602 01:34:12.942" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:34:09.664" endtime="20220602 01:34:12.942"/>
</kw>
<msg timestamp="20220602 01:34:12.943" level="INFO">${output} = 2022-06-02 01:34:12,710 [main] INFO rpc.RpcClient: Creating Tenant: 'tenantone', with new volume: 'tenantone'
{
  "tenantId": "tenantone"
}</msg>
<status status="PASS" starttime="20220602 01:34:09.664" endtime="20220602 01:34:12.943"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"tenantId": "tenantone"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220602 01:34:12.943" endtime="20220602 01:34:12.943"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220602 01:34:09.580" endtime="20220602 01:34:12.943"/>
</test>
<test id="s1-s2-s5-t2" name="Assign User Success with Cluster Admin">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone tenant --verbose user assign testuser --tenant=tenantone</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:34:12.949" level="INFO">Running command 'ozone tenant --verbose user assign testuser --tenant=tenantone 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:34:16.230" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:34:16.230" level="INFO">${output} = export AWS_ACCESS_KEY_ID='tenantone$testuser'
export AWS_SECRET_ACCESS_KEY='70cec7938599422802e318b26bd25d5544e01140b96af423e7bb45295575934d'
Assigned 'testuser' to 'tenantone' with accessId 'tenanton...</msg>
<status status="PASS" starttime="20220602 01:34:12.947" endtime="20220602 01:34:16.230"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:34:16.231" level="INFO">export AWS_ACCESS_KEY_ID='tenantone$testuser'
export AWS_SECRET_ACCESS_KEY='70cec7938599422802e318b26bd25d5544e01140b96af423e7bb45295575934d'
Assigned 'testuser' to 'tenantone' with accessId 'tenantone$testuser'.</msg>
<status status="PASS" starttime="20220602 01:34:16.230" endtime="20220602 01:34:16.231"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:34:16.232" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:34:16.232" endtime="20220602 01:34:16.232"/>
</kw>
<status status="PASS" starttime="20220602 01:34:12.947" endtime="20220602 01:34:16.232"/>
</kw>
<msg timestamp="20220602 01:34:16.232" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:34:12.946" endtime="20220602 01:34:16.233"/>
</kw>
<msg timestamp="20220602 01:34:16.233" level="INFO">${output} = export AWS_ACCESS_KEY_ID='tenantone$testuser'
export AWS_SECRET_ACCESS_KEY='70cec7938599422802e318b26bd25d5544e01140b96af423e7bb45295575934d'
Assigned 'testuser' to 'tenantone' with accessId 'tenanton...</msg>
<status status="PASS" starttime="20220602 01:34:12.945" endtime="20220602 01:34:16.233"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Assigned 'testuser' to 'tenantone'</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220602 01:34:16.233" endtime="20220602 01:34:16.234"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${accessId}</var>
<arg>${output}</arg>
<arg>(?&lt;=export AWS_ACCESS_KEY_ID=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20220602 01:34:16.235" level="INFO">${accessId} = ["'tenantone$testuser'"]</msg>
<status status="PASS" starttime="20220602 01:34:16.234" endtime="20220602 01:34:16.235"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secretKey}</var>
<arg>${output}</arg>
<arg>(?&lt;=export AWS_SECRET_ACCESS_KEY=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20220602 01:34:16.235" level="INFO">${secretKey} = ["'70cec7938599422802e318b26bd25d5544e01140b96af423e7bb45295575934d'"]</msg>
<status status="PASS" starttime="20220602 01:34:16.235" endtime="20220602 01:34:16.236"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessId}</var>
<arg>${accessId[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220602 01:34:16.237" level="INFO">${accessId} = 'tenantone$testuser'</msg>
<status status="PASS" starttime="20220602 01:34:16.236" endtime="20220602 01:34:16.237"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secretKey}</var>
<arg>${secretKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220602 01:34:16.238" level="INFO">${secretKey} = '70cec7938599422802e318b26bd25d5544e01140b96af423e7bb45295575934d'</msg>
<status status="PASS" starttime="20220602 01:34:16.237" endtime="20220602 01:34:16.238"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${ACCESS_ID}</arg>
<arg>${accessId}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20220602 01:34:16.239" level="INFO">${ACCESS_ID} = 'tenantone$testuser'</msg>
<status status="PASS" starttime="20220602 01:34:16.238" endtime="20220602 01:34:16.239"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${SECRET_KEY}</arg>
<arg>${secretKey}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20220602 01:34:16.239" level="INFO">${SECRET_KEY} = '70cec7938599422802e318b26bd25d5544e01140b96af423e7bb45295575934d'</msg>
<status status="PASS" starttime="20220602 01:34:16.239" endtime="20220602 01:34:16.239"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220602 01:34:12.945" endtime="20220602 01:34:16.240"/>
</test>
<test id="s1-s2-s5-t3" name="Assign User Failure to Non-existent Tenant">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>ozone tenant user assign testuser --tenant=thistenantdoesnotexist</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:34:16.243" level="INFO">Running command 'ozone tenant user assign testuser --tenant=thistenantdoesnotexist 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:34:19.198" level="INFO">${rc} = 255</msg>
<msg timestamp="20220602 01:34:19.198" level="INFO">${output} = TENANT_NOT_FOUND Tenant 'thistenantdoesnotexist' doesn't exist.</msg>
<status status="PASS" starttime="20220602 01:34:16.241" endtime="20220602 01:34:19.198"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Tenant 'thistenantdoesnotexist' doesn't exist</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220602 01:34:19.198" endtime="20220602 01:34:19.199"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220602 01:34:16.240" endtime="20220602 01:34:19.199"/>
</test>
<test id="s1-s2-s5-t4" name="GetUserInfo Success">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone tenant user info testuser</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:34:19.204" level="INFO">Running command 'ozone tenant user info testuser 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:34:22.316" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:34:22.316" level="INFO">${output} = User 'testuser' is assigned to:
- Tenant 'tenantone' with accessId 'tenantone$testuser'</msg>
<status status="PASS" starttime="20220602 01:34:19.202" endtime="20220602 01:34:22.316"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:34:22.317" level="INFO">User 'testuser' is assigned to:
- Tenant 'tenantone' with accessId 'tenantone$testuser'</msg>
<status status="PASS" starttime="20220602 01:34:22.317" endtime="20220602 01:34:22.317"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:34:22.318" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:34:22.317" endtime="20220602 01:34:22.318"/>
</kw>
<status status="PASS" starttime="20220602 01:34:19.202" endtime="20220602 01:34:22.318"/>
</kw>
<msg timestamp="20220602 01:34:22.318" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:34:19.201" endtime="20220602 01:34:22.319"/>
</kw>
<msg timestamp="20220602 01:34:22.319" level="INFO">${output} = User 'testuser' is assigned to:
- Tenant 'tenantone' with accessId 'tenantone$testuser'</msg>
<status status="PASS" starttime="20220602 01:34:19.201" endtime="20220602 01:34:22.319"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Tenant 'tenantone' with accessId 'tenantone$testuser'</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220602 01:34:22.319" endtime="20220602 01:34:22.320"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220602 01:34:19.200" endtime="20220602 01:34:22.320"/>
</test>
<test id="s1-s2-s5-t5" name="GetUserInfo as JSON Success">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone tenant user info --json testuser | jq '.tenants | .[].accessId'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:34:22.325" level="INFO">Running command 'ozone tenant user info --json testuser | jq '.tenants | .[].accessId' 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:34:25.811" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:34:25.811" level="INFO">${output} = "tenantone$testuser"</msg>
<status status="PASS" starttime="20220602 01:34:22.322" endtime="20220602 01:34:25.811"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:34:25.812" level="INFO">"tenantone$testuser"</msg>
<status status="PASS" starttime="20220602 01:34:25.811" endtime="20220602 01:34:25.812"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:34:25.813" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:34:25.812" endtime="20220602 01:34:25.813"/>
</kw>
<status status="PASS" starttime="20220602 01:34:22.322" endtime="20220602 01:34:25.813"/>
</kw>
<msg timestamp="20220602 01:34:25.813" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:34:22.322" endtime="20220602 01:34:25.814"/>
</kw>
<msg timestamp="20220602 01:34:25.814" level="INFO">${output} = "tenantone$testuser"</msg>
<status status="PASS" starttime="20220602 01:34:22.321" endtime="20220602 01:34:25.814"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"tenantone$testuser"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220602 01:34:25.814" endtime="20220602 01:34:25.815"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220602 01:34:22.320" endtime="20220602 01:34:25.815"/>
</test>
<test id="s1-s2-s5-t6" name="Create Bucket 1 Success via S3 API">
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${ACCESS_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:34:25.820" level="INFO">Running command 'aws configure set aws_access_key_id 'tenantone$testuser' 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:34:26.291" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:34:26.291" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:34:25.818" endtime="20220602 01:34:26.291"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:34:26.292" level="INFO"/>
<status status="PASS" starttime="20220602 01:34:26.292" endtime="20220602 01:34:26.292"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:34:26.293" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:34:26.293" endtime="20220602 01:34:26.293"/>
</kw>
<status status="PASS" starttime="20220602 01:34:25.817" endtime="20220602 01:34:26.294"/>
</kw>
<msg timestamp="20220602 01:34:26.294" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:34:25.817" endtime="20220602 01:34:26.294"/>
</kw>
<status status="PASS" starttime="20220602 01:34:25.816" endtime="20220602 01:34:26.294"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${SECRET_KEY}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:34:26.298" level="INFO">Running command 'aws configure set aws_secret_access_key '70cec7938599422802e318b26bd25d5544e01140b96af423e7bb45295575934d' 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:34:26.768" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:34:26.768" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:34:26.296" endtime="20220602 01:34:26.769"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:34:26.770" level="INFO"/>
<status status="PASS" starttime="20220602 01:34:26.769" endtime="20220602 01:34:26.770"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:34:26.770" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:34:26.770" endtime="20220602 01:34:26.771"/>
</kw>
<status status="PASS" starttime="20220602 01:34:26.295" endtime="20220602 01:34:26.771"/>
</kw>
<msg timestamp="20220602 01:34:26.771" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:34:26.295" endtime="20220602 01:34:26.771"/>
</kw>
<status status="PASS" starttime="20220602 01:34:26.294" endtime="20220602 01:34:26.772"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${S3G_ENDPOINT_URL} create-bucket --bucket bucket-test1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:34:26.775" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-test1 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:34:27.439" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:34:27.439" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-test1"
}</msg>
<status status="PASS" starttime="20220602 01:34:26.773" endtime="20220602 01:34:27.439"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:34:27.441" level="INFO">{
    "Location": "http://s3g:9878/bucket-test1"
}</msg>
<status status="PASS" starttime="20220602 01:34:27.440" endtime="20220602 01:34:27.441"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:34:27.441" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:34:27.441" endtime="20220602 01:34:27.442"/>
</kw>
<status status="PASS" starttime="20220602 01:34:26.773" endtime="20220602 01:34:27.442"/>
</kw>
<msg timestamp="20220602 01:34:27.442" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:34:26.772" endtime="20220602 01:34:27.442"/>
</kw>
<msg timestamp="20220602 01:34:27.443" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-test1"
}</msg>
<status status="PASS" starttime="20220602 01:34:26.772" endtime="20220602 01:34:27.443"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>bucket-test1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220602 01:34:27.443" endtime="20220602 01:34:27.443"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${S3G_ENDPOINT_URL} list-buckets</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:34:27.448" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-buckets 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:34:28.041" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:34:28.041" level="INFO">${output} = {
    "Buckets": [
        {
            "Name": "bucket-test1",
            "CreationDate": "2022-06-02T01:34:27.356Z"
        }
    ]
}</msg>
<status status="PASS" starttime="20220602 01:34:27.445" endtime="20220602 01:34:28.041"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:34:28.043" level="INFO">{
    "Buckets": [
        {
            "Name": "bucket-test1",
            "CreationDate": "2022-06-02T01:34:27.356Z"
        }
    ]
}</msg>
<status status="PASS" starttime="20220602 01:34:28.042" endtime="20220602 01:34:28.043"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:34:28.044" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:34:28.043" endtime="20220602 01:34:28.044"/>
</kw>
<status status="PASS" starttime="20220602 01:34:27.444" endtime="20220602 01:34:28.044"/>
</kw>
<msg timestamp="20220602 01:34:28.044" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:34:27.444" endtime="20220602 01:34:28.045"/>
</kw>
<msg timestamp="20220602 01:34:28.045" level="INFO">${output} = {
    "Buckets": [
        {
            "Name": "bucket-test1",
            "CreationDate": "2022-06-02T01:34:27.356Z"
        }
    ]
}</msg>
<status status="PASS" starttime="20220602 01:34:27.444" endtime="20220602 01:34:28.045"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>bucket-test1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220602 01:34:28.045" endtime="20220602 01:34:28.045"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220602 01:34:25.816" endtime="20220602 01:34:28.046"/>
</test>
<test id="s1-s2-s5-t7" name="Verify Bucket 1 Owner">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /tenantone/bucket-test1 | jq -r '.owner'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:34:28.051" level="INFO">Running command 'ozone sh bucket info /tenantone/bucket-test1 | jq -r '.owner' 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:34:31.860" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:34:31.860" level="INFO">${output} = testuser</msg>
<status status="PASS" starttime="20220602 01:34:28.048" endtime="20220602 01:34:31.860"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:34:31.861" level="INFO">testuser</msg>
<status status="PASS" starttime="20220602 01:34:31.860" endtime="20220602 01:34:31.861"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:34:31.862" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:34:31.861" endtime="20220602 01:34:31.862"/>
</kw>
<status status="PASS" starttime="20220602 01:34:28.048" endtime="20220602 01:34:31.862"/>
</kw>
<msg timestamp="20220602 01:34:31.862" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:34:28.047" endtime="20220602 01:34:31.863"/>
</kw>
<msg timestamp="20220602 01:34:31.863" level="INFO">${result} = testuser</msg>
<status status="PASS" starttime="20220602 01:34:28.047" endtime="20220602 01:34:31.863"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>testuser</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220602 01:34:31.863" endtime="20220602 01:34:31.864"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220602 01:34:28.046" endtime="20220602 01:34:31.864"/>
</test>
<test id="s1-s2-s5-t8" name="SetSecret Success with Cluster Admin">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone tenant user setsecret 'tenantone$testuser' --secret=somesecret1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:34:31.869" level="INFO">Running command 'ozone tenant user setsecret 'tenantone$testuser' --secret=somesecret1 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:34:35.025" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:34:35.025" level="INFO">${output} = export AWS_ACCESS_KEY_ID='tenantone$testuser'
export AWS_SECRET_ACCESS_KEY='somesecret1'</msg>
<status status="PASS" starttime="20220602 01:34:31.867" endtime="20220602 01:34:35.025"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:34:35.026" level="INFO">export AWS_ACCESS_KEY_ID='tenantone$testuser'
export AWS_SECRET_ACCESS_KEY='somesecret1'</msg>
<status status="PASS" starttime="20220602 01:34:35.026" endtime="20220602 01:34:35.026"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:34:35.027" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:34:35.027" endtime="20220602 01:34:35.027"/>
</kw>
<status status="PASS" starttime="20220602 01:34:31.867" endtime="20220602 01:34:35.027"/>
</kw>
<msg timestamp="20220602 01:34:35.028" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:34:31.866" endtime="20220602 01:34:35.028"/>
</kw>
<msg timestamp="20220602 01:34:35.028" level="INFO">${output} = export AWS_ACCESS_KEY_ID='tenantone$testuser'
export AWS_SECRET_ACCESS_KEY='somesecret1'</msg>
<status status="PASS" starttime="20220602 01:34:31.866" endtime="20220602 01:34:35.028"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>export AWS_SECRET_ACCESS_KEY='somesecret1'</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220602 01:34:35.028" endtime="20220602 01:34:35.029"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220602 01:34:31.865" endtime="20220602 01:34:35.029"/>
</test>
<test id="s1-s2-s5-t9" name="SetSecret Failure For Invalid Secret 1">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>ozone tenant user setsecret 'tenantone$testuser' --secret=''</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:34:35.033" level="INFO">Running command 'ozone tenant user setsecret 'tenantone$testuser' --secret='' 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:34:38.219" level="INFO">${rc} = 255</msg>
<msg timestamp="20220602 01:34:38.220" level="INFO">${output} = secretKey cannot be null or empty.</msg>
<status status="PASS" starttime="20220602 01:34:35.031" endtime="20220602 01:34:38.220"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>secretKey cannot be null or empty.</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220602 01:34:38.220" endtime="20220602 01:34:38.221"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220602 01:34:35.030" endtime="20220602 01:34:38.221"/>
</test>
<test id="s1-s2-s5-t10" name="SetSecret Failure For Invalid Secret 2">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>ozone tenant user setsecret 'tenantone$testuser' --secret=short</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:34:38.224" level="INFO">Running command 'ozone tenant user setsecret 'tenantone$testuser' --secret=short 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:34:41.457" level="INFO">${rc} = 255</msg>
<msg timestamp="20220602 01:34:41.457" level="INFO">${output} = INVALID_REQUEST Secret key length should be at least 8 characters</msg>
<status status="PASS" starttime="20220602 01:34:38.222" endtime="20220602 01:34:41.457"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Secret key length should be at least 8 characters</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220602 01:34:41.458" endtime="20220602 01:34:41.459"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220602 01:34:38.222" endtime="20220602 01:34:41.459"/>
</test>
<test id="s1-s2-s5-t11" name="GetSecret Success">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone tenant user getsecret 'tenantone$testuser'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:34:41.464" level="INFO">Running command 'ozone tenant user getsecret 'tenantone$testuser' 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:34:44.614" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:34:44.614" level="INFO">${output} = export AWS_ACCESS_KEY_ID='tenantone$testuser'
export AWS_SECRET_ACCESS_KEY='somesecret1'</msg>
<status status="PASS" starttime="20220602 01:34:41.462" endtime="20220602 01:34:44.614"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:34:44.615" level="INFO">export AWS_ACCESS_KEY_ID='tenantone$testuser'
export AWS_SECRET_ACCESS_KEY='somesecret1'</msg>
<status status="PASS" starttime="20220602 01:34:44.614" endtime="20220602 01:34:44.615"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:34:44.616" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:34:44.615" endtime="20220602 01:34:44.616"/>
</kw>
<status status="PASS" starttime="20220602 01:34:41.461" endtime="20220602 01:34:44.616"/>
</kw>
<msg timestamp="20220602 01:34:44.616" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:34:41.461" endtime="20220602 01:34:44.617"/>
</kw>
<msg timestamp="20220602 01:34:44.617" level="INFO">${output} = export AWS_ACCESS_KEY_ID='tenantone$testuser'
export AWS_SECRET_ACCESS_KEY='somesecret1'</msg>
<status status="PASS" starttime="20220602 01:34:41.460" endtime="20220602 01:34:44.617"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>export AWS_SECRET_ACCESS_KEY='somesecret1'</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220602 01:34:44.617" endtime="20220602 01:34:44.617"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220602 01:34:41.459" endtime="20220602 01:34:44.618"/>
</test>
<test id="s1-s2-s5-t12" name="Delete Bucket 1 Failure With Old SecretKey via S3 API">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>aws s3api --endpoint-url ${S3G_ENDPOINT_URL} delete-bucket --bucket bucket-test1</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:34:44.622" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-bucket --bucket bucket-test1 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:34:45.216" level="INFO">${rc} = 255</msg>
<msg timestamp="20220602 01:34:45.216" level="INFO">${output} = 
An error occurred (AccessDenied) when calling the DeleteBucket operation: User doesn't have the right to access this resource.</msg>
<status status="PASS" starttime="20220602 01:34:44.620" endtime="20220602 01:34:45.216"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${rc} &gt; 0</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220602 01:34:45.217" endtime="20220602 01:34:45.218"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220602 01:34:44.619" endtime="20220602 01:34:45.218"/>
</test>
<test id="s1-s2-s5-t13" name="Delete Bucket 1 Success With Newly Set SecretKey via S3 API">
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key 'somesecret1'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:34:45.224" level="INFO">Running command 'aws configure set aws_secret_access_key 'somesecret1' 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:34:45.721" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:34:45.721" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:34:45.221" endtime="20220602 01:34:45.721"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:34:45.722" level="INFO"/>
<status status="PASS" starttime="20220602 01:34:45.721" endtime="20220602 01:34:45.722"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:34:45.723" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:34:45.722" endtime="20220602 01:34:45.723"/>
</kw>
<status status="PASS" starttime="20220602 01:34:45.221" endtime="20220602 01:34:45.723"/>
</kw>
<msg timestamp="20220602 01:34:45.723" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:34:45.221" endtime="20220602 01:34:45.724"/>
</kw>
<status status="PASS" starttime="20220602 01:34:45.220" endtime="20220602 01:34:45.724"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${S3G_ENDPOINT_URL} delete-bucket --bucket bucket-test1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:34:45.728" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-bucket --bucket bucket-test1 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:34:46.380" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:34:46.380" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:34:45.726" endtime="20220602 01:34:46.380"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:34:46.382" level="INFO"/>
<status status="PASS" starttime="20220602 01:34:46.381" endtime="20220602 01:34:46.382"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:34:46.382" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:34:46.382" endtime="20220602 01:34:46.382"/>
</kw>
<status status="PASS" starttime="20220602 01:34:45.725" endtime="20220602 01:34:46.383"/>
</kw>
<msg timestamp="20220602 01:34:46.383" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:34:45.725" endtime="20220602 01:34:46.383"/>
</kw>
<msg timestamp="20220602 01:34:46.384" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:34:45.724" endtime="20220602 01:34:46.384"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220602 01:34:45.219" endtime="20220602 01:34:46.384"/>
</test>
<test id="s1-s2-s5-t14" name="Delete Tenant Failure Tenant Not Empty">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>ozone tenant delete tenantone</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:34:46.388" level="INFO">Running command 'ozone tenant delete tenantone 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:34:49.799" level="INFO">${rc} = 255</msg>
<msg timestamp="20220602 01:34:49.799" level="INFO">${output} = TENANT_NOT_EMPTY Tenant 'tenantone' is not empty. All accessIds associated to this tenant must be revoked before the tenant can be deleted. See `ozone tenant user revoke`</msg>
<status status="PASS" starttime="20220602 01:34:46.386" endtime="20220602 01:34:49.799"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>TENANT_NOT_EMPTY Tenant 'tenantone' is not empty. All accessIds associated to this tenant must be revoked before the tenant can be deleted. See `ozone tenant user revoke`</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220602 01:34:49.800" endtime="20220602 01:34:49.801"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220602 01:34:46.385" endtime="20220602 01:34:49.801"/>
</test>
<test id="s1-s2-s5-t15" name="Create Tenant Failure with Regular User">
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:34:49.808" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:34:49.812" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:34:49.812" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220602 01:34:49.805" endtime="20220602 01:34:49.812"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:34:49.813" level="INFO">scm</msg>
<status status="PASS" starttime="20220602 01:34:49.812" endtime="20220602 01:34:49.813"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:34:49.813" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:34:49.813" endtime="20220602 01:34:49.813"/>
</kw>
<status status="PASS" starttime="20220602 01:34:49.805" endtime="20220602 01:34:49.814"/>
</kw>
<msg timestamp="20220602 01:34:49.814" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:34:49.805" endtime="20220602 01:34:49.814"/>
</kw>
<msg timestamp="20220602 01:34:49.815" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220602 01:34:49.804" endtime="20220602 01:34:49.815"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220602 01:34:49.815" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220602 01:34:49.815" endtime="20220602 01:34:49.815"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:34:49.819" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:34:49.826" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:34:49.826" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:34:49.817" endtime="20220602 01:34:49.826"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:34:49.827" level="INFO"/>
<status status="PASS" starttime="20220602 01:34:49.826" endtime="20220602 01:34:49.827"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:34:49.828" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:34:49.827" endtime="20220602 01:34:49.828"/>
</kw>
<status status="PASS" starttime="20220602 01:34:49.817" endtime="20220602 01:34:49.828"/>
</kw>
<msg timestamp="20220602 01:34:49.828" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:34:49.816" endtime="20220602 01:34:49.829"/>
</kw>
<status status="PASS" starttime="20220602 01:34:49.816" endtime="20220602 01:34:49.829"/>
</kw>
<status status="PASS" starttime="20220602 01:34:49.815" endtime="20220602 01:34:49.829"/>
</kw>
<status status="PASS" starttime="20220602 01:34:49.803" endtime="20220602 01:34:49.829"/>
</kw>
<status status="PASS" starttime="20220602 01:34:49.803" endtime="20220602 01:34:49.829"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>ozone tenant create tenanttwo</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:34:49.831" level="INFO">Running command 'ozone tenant create tenanttwo 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:34:54.954" level="INFO">${rc} = 255</msg>
<msg timestamp="20220602 01:34:54.954" level="INFO">${output} = 2022-06-02 01:34:54,894 [main] INFO rpc.RpcClient: Creating Tenant: 'tenanttwo', with new volume: 'tenanttwo'
PERMISSION_DENIED User 'testuser2/scm@EXAMPLE.COM' or 'testuser2' is not an Ozone admin</msg>
<status status="PASS" starttime="20220602 01:34:49.829" endtime="20220602 01:34:54.955"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>PERMISSION_DENIED User 'testuser2/scm@EXAMPLE.COM' or 'testuser2' is not an Ozone admin</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220602 01:34:54.955" endtime="20220602 01:34:54.956"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220602 01:34:49.802" endtime="20220602 01:34:54.956"/>
</test>
<test id="s1-s2-s5-t16" name="SetSecret Failure with Regular User">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>ozone tenant user set-secret 'tenantone$testuser' --secret=somesecret2</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:34:54.961" level="INFO">Running command 'ozone tenant user set-secret 'tenantone$testuser' --secret=somesecret2 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:34:58.174" level="INFO">${rc} = 255</msg>
<msg timestamp="20220602 01:34:58.174" level="INFO">${output} = USER_MISMATCH Requested accessId 'tenantone$testuser' doesn't belong to current user 'testuser2/scm@EXAMPLE.COM', nor does current user have Ozone or tenant administrator privilege</msg>
<status status="PASS" starttime="20220602 01:34:54.958" endtime="20220602 01:34:58.174"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>USER_MISMATCH Requested accessId 'tenantone$testuser' doesn't belong to current user 'testuser2/scm@EXAMPLE.COM', nor does current user have Ozone or tenant administrator privilege</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220602 01:34:58.174" endtime="20220602 01:34:58.175"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220602 01:34:54.957" endtime="20220602 01:34:58.175"/>
</test>
<test id="s1-s2-s5-t17" name="Create Bucket 2 Success with somesecret1 via S3 API">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${S3G_ENDPOINT_URL} create-bucket --bucket bucket-test2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:34:58.181" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-test2 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:34:58.802" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:34:58.802" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-test2"
}</msg>
<status status="PASS" starttime="20220602 01:34:58.179" endtime="20220602 01:34:58.802"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:34:58.804" level="INFO">{
    "Location": "http://s3g:9878/bucket-test2"
}</msg>
<status status="PASS" starttime="20220602 01:34:58.803" endtime="20220602 01:34:58.804"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:34:58.804" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:34:58.804" endtime="20220602 01:34:58.805"/>
</kw>
<status status="PASS" starttime="20220602 01:34:58.178" endtime="20220602 01:34:58.805"/>
</kw>
<msg timestamp="20220602 01:34:58.805" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:34:58.178" endtime="20220602 01:34:58.805"/>
</kw>
<msg timestamp="20220602 01:34:58.806" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-test2"
}</msg>
<status status="PASS" starttime="20220602 01:34:58.177" endtime="20220602 01:34:58.806"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>bucket-test2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220602 01:34:58.806" endtime="20220602 01:34:58.806"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220602 01:34:58.176" endtime="20220602 01:34:58.806"/>
</test>
<test id="s1-s2-s5-t18" name="Delete Bucket 2 Failure with somesecret2 via S3 API">
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key 'somesecret2'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:34:58.812" level="INFO">Running command 'aws configure set aws_secret_access_key 'somesecret2' 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:34:59.298" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:34:59.298" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:34:58.810" endtime="20220602 01:34:59.298"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:34:59.299" level="INFO"/>
<status status="PASS" starttime="20220602 01:34:59.298" endtime="20220602 01:34:59.299"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:34:59.300" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:34:59.299" endtime="20220602 01:34:59.300"/>
</kw>
<status status="PASS" starttime="20220602 01:34:58.809" endtime="20220602 01:34:59.300"/>
</kw>
<msg timestamp="20220602 01:34:59.300" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:34:58.809" endtime="20220602 01:34:59.301"/>
</kw>
<status status="PASS" starttime="20220602 01:34:58.808" endtime="20220602 01:34:59.301"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>aws s3api --endpoint-url ${S3G_ENDPOINT_URL} delete-bucket --bucket bucket-test2</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:34:59.303" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-bucket --bucket bucket-test2 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:34:59.834" level="INFO">${rc} = 255</msg>
<msg timestamp="20220602 01:34:59.834" level="INFO">${output} = 
An error occurred (AccessDenied) when calling the DeleteBucket operation: User doesn't have the right to access this resource.</msg>
<status status="PASS" starttime="20220602 01:34:59.301" endtime="20220602 01:34:59.834"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${rc} &gt; 0</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220602 01:34:59.835" endtime="20220602 01:34:59.835"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220602 01:34:58.807" endtime="20220602 01:34:59.836"/>
</test>
<test id="s1-s2-s5-t19" name="Delete Bucket 2 Success with somesecret1 via S3 API">
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key 'somesecret1'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:34:59.841" level="INFO">Running command 'aws configure set aws_secret_access_key 'somesecret1' 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:35:00.305" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:35:00.305" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:34:59.838" endtime="20220602 01:35:00.305"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:35:00.307" level="INFO"/>
<status status="PASS" starttime="20220602 01:35:00.306" endtime="20220602 01:35:00.307"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:35:00.307" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:35:00.307" endtime="20220602 01:35:00.308"/>
</kw>
<status status="PASS" starttime="20220602 01:34:59.838" endtime="20220602 01:35:00.308"/>
</kw>
<msg timestamp="20220602 01:35:00.308" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:34:59.838" endtime="20220602 01:35:00.308"/>
</kw>
<status status="PASS" starttime="20220602 01:34:59.837" endtime="20220602 01:35:00.309"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${S3G_ENDPOINT_URL} delete-bucket --bucket bucket-test2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:35:00.312" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-bucket --bucket bucket-test2 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:35:00.875" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:35:00.875" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:35:00.310" endtime="20220602 01:35:00.875"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:35:00.876" level="INFO"/>
<status status="PASS" starttime="20220602 01:35:00.876" endtime="20220602 01:35:00.876"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:35:00.877" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:35:00.877" endtime="20220602 01:35:00.877"/>
</kw>
<status status="PASS" starttime="20220602 01:35:00.310" endtime="20220602 01:35:00.877"/>
</kw>
<msg timestamp="20220602 01:35:00.877" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:35:00.309" endtime="20220602 01:35:00.878"/>
</kw>
<msg timestamp="20220602 01:35:00.878" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:35:00.309" endtime="20220602 01:35:00.878"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220602 01:34:59.836" endtime="20220602 01:35:00.878"/>
</test>
<test id="s1-s2-s5-t20" name="Revoke User AccessId Success with Cluster Admin">
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:35:00.884" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:35:00.887" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:35:00.887" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220602 01:35:00.882" endtime="20220602 01:35:00.887"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:35:00.888" level="INFO">scm</msg>
<status status="PASS" starttime="20220602 01:35:00.887" endtime="20220602 01:35:00.888"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:35:00.889" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:35:00.888" endtime="20220602 01:35:00.889"/>
</kw>
<status status="PASS" starttime="20220602 01:35:00.881" endtime="20220602 01:35:00.889"/>
</kw>
<msg timestamp="20220602 01:35:00.889" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:35:00.881" endtime="20220602 01:35:00.890"/>
</kw>
<msg timestamp="20220602 01:35:00.890" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220602 01:35:00.880" endtime="20220602 01:35:00.890"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220602 01:35:00.890" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220602 01:35:00.890" endtime="20220602 01:35:00.891"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:35:00.895" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:35:00.902" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:35:00.902" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:35:00.893" endtime="20220602 01:35:00.902"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:35:00.903" level="INFO"/>
<status status="PASS" starttime="20220602 01:35:00.903" endtime="20220602 01:35:00.903"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:35:00.904" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:35:00.904" endtime="20220602 01:35:00.904"/>
</kw>
<status status="PASS" starttime="20220602 01:35:00.892" endtime="20220602 01:35:00.904"/>
</kw>
<msg timestamp="20220602 01:35:00.904" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:35:00.892" endtime="20220602 01:35:00.905"/>
</kw>
<status status="PASS" starttime="20220602 01:35:00.891" endtime="20220602 01:35:00.905"/>
</kw>
<status status="PASS" starttime="20220602 01:35:00.891" endtime="20220602 01:35:00.905"/>
</kw>
<status status="PASS" starttime="20220602 01:35:00.880" endtime="20220602 01:35:00.906"/>
</kw>
<status status="PASS" starttime="20220602 01:35:00.880" endtime="20220602 01:35:00.906"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone tenant --verbose user revoke 'tenantone$testuser'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:35:00.909" level="INFO">Running command 'ozone tenant --verbose user revoke 'tenantone$testuser' 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:35:04.221" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:35:04.221" level="INFO">${output} = Revoked accessId 'tenantone$testuser'.</msg>
<status status="PASS" starttime="20220602 01:35:00.907" endtime="20220602 01:35:04.221"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:35:04.222" level="INFO">Revoked accessId 'tenantone$testuser'.</msg>
<status status="PASS" starttime="20220602 01:35:04.221" endtime="20220602 01:35:04.222"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:35:04.223" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:35:04.223" endtime="20220602 01:35:04.223"/>
</kw>
<status status="PASS" starttime="20220602 01:35:00.907" endtime="20220602 01:35:04.223"/>
</kw>
<msg timestamp="20220602 01:35:04.224" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:35:00.906" endtime="20220602 01:35:04.224"/>
</kw>
<msg timestamp="20220602 01:35:04.224" level="INFO">${output} = Revoked accessId 'tenantone$testuser'.</msg>
<status status="PASS" starttime="20220602 01:35:00.906" endtime="20220602 01:35:04.224"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Revoked accessId 'tenantone$testuser'.</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220602 01:35:04.224" endtime="20220602 01:35:04.225"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220602 01:35:00.879" endtime="20220602 01:35:04.225"/>
</test>
<test id="s1-s2-s5-t21" name="Create Bucket 3 Failure with Revoked AccessId via S3 API">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>aws s3api --endpoint-url ${S3G_ENDPOINT_URL} create-bucket --bucket bucket-test3</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:35:04.229" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-test3 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:35:04.782" level="INFO">${rc} = 255</msg>
<msg timestamp="20220602 01:35:04.782" level="INFO">${output} = 
An error occurred (AccessDenied) when calling the CreateBucket operation: User doesn't have the right to access this resource.</msg>
<status status="PASS" starttime="20220602 01:35:04.227" endtime="20220602 01:35:04.782"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${rc} &gt; 0</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220602 01:35:04.782" endtime="20220602 01:35:04.783"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220602 01:35:04.226" endtime="20220602 01:35:04.784"/>
</test>
<test id="s1-s2-s5-t22" name="Delete Tenant Success with Cluster Admin">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone tenant delete tenantone</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:35:04.789" level="INFO">Running command 'ozone tenant delete tenantone 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:35:07.902" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:35:07.902" level="INFO">${output} = Deleted tenant 'tenantone'.
But the associated volume 'tenantone' is not removed. To delete it, run
    ozone sh volume delete tenantone
</msg>
<status status="PASS" starttime="20220602 01:35:04.787" endtime="20220602 01:35:07.902"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:35:07.905" level="INFO">Deleted tenant 'tenantone'.
But the associated volume 'tenantone' is not removed. To delete it, run
    ozone sh volume delete tenantone
</msg>
<status status="PASS" starttime="20220602 01:35:07.903" endtime="20220602 01:35:07.905"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:35:07.906" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:35:07.905" endtime="20220602 01:35:07.906"/>
</kw>
<status status="PASS" starttime="20220602 01:35:04.786" endtime="20220602 01:35:07.906"/>
</kw>
<msg timestamp="20220602 01:35:07.906" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:35:04.786" endtime="20220602 01:35:07.907"/>
</kw>
<msg timestamp="20220602 01:35:07.907" level="INFO">${output} = Deleted tenant 'tenantone'.
But the associated volume 'tenantone' is not removed. To delete it, run
    ozone sh volume delete tenantone
</msg>
<status status="PASS" starttime="20220602 01:35:04.785" endtime="20220602 01:35:07.907"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Deleted tenant 'tenantone'.</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220602 01:35:07.907" endtime="20220602 01:35:07.908"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220602 01:35:04.785" endtime="20220602 01:35:07.908"/>
</test>
<test id="s1-s2-s5-t23" name="Delete Volume Success with Cluster Admin">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume delete tenantone</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:35:07.913" level="INFO">Running command 'ozone sh volume delete tenantone 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:35:11.531" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:35:11.531" level="INFO">${output} = Volume tenantone is deleted</msg>
<status status="PASS" starttime="20220602 01:35:07.911" endtime="20220602 01:35:11.531"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:35:11.532" level="INFO">Volume tenantone is deleted</msg>
<status status="PASS" starttime="20220602 01:35:11.531" endtime="20220602 01:35:11.532"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:35:11.533" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:35:11.532" endtime="20220602 01:35:11.533"/>
</kw>
<status status="PASS" starttime="20220602 01:35:07.910" endtime="20220602 01:35:11.533"/>
</kw>
<msg timestamp="20220602 01:35:11.533" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:35:07.910" endtime="20220602 01:35:11.534"/>
</kw>
<msg timestamp="20220602 01:35:11.534" level="INFO">${output} = Volume tenantone is deleted</msg>
<status status="PASS" starttime="20220602 01:35:07.909" endtime="20220602 01:35:11.534"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Volume tenantone is deleted</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220602 01:35:11.534" endtime="20220602 01:35:11.534"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220602 01:35:07.908" endtime="20220602 01:35:11.535"/>
</test>
<test id="s1-s2-s5-t24" name="List Tenant Expect Empty Result">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone tenant list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:35:11.539" level="INFO">Running command 'ozone tenant list 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:35:14.758" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:35:14.758" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:35:11.537" endtime="20220602 01:35:14.758"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:35:14.760" level="INFO"/>
<status status="PASS" starttime="20220602 01:35:14.759" endtime="20220602 01:35:14.760"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:35:14.761" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:35:14.760" endtime="20220602 01:35:14.761"/>
</kw>
<status status="PASS" starttime="20220602 01:35:11.537" endtime="20220602 01:35:14.761"/>
</kw>
<msg timestamp="20220602 01:35:14.761" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:35:11.537" endtime="20220602 01:35:14.762"/>
</kw>
<msg timestamp="20220602 01:35:14.762" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:35:11.536" endtime="20220602 01:35:14.762"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>tenantone</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220602 01:35:14.762" endtime="20220602 01:35:14.763"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220602 01:35:11.535" endtime="20220602 01:35:14.763"/>
</test>
<doc>Smoke test for ozone secure tenant commands</doc>
<status status="PASS" starttime="20220602 01:34:09.570" endtime="20220602 01:35:14.765"/>
</suite>
<suite id="s1-s2-s6" name="Ozone-Secure-Token" source="/opt/hadoop/smoketest/security/ozone-secure-token.robot">
<test id="s1-s2-s6-t1" name="Token Test">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Token Test in Unsecure Cluster</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220602 01:35:14.793" endtime="20220602 01:35:14.793"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Token Test in Secure Cluster</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Token Test in Secure Cluster">
<kw name="Get and use Token in Secure Cluster">
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:35:14.798" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:35:14.801" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:35:14.802" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220602 01:35:14.796" endtime="20220602 01:35:14.802"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:35:14.803" level="INFO">scm</msg>
<status status="PASS" starttime="20220602 01:35:14.802" endtime="20220602 01:35:14.803"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:35:14.804" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:35:14.803" endtime="20220602 01:35:14.804"/>
</kw>
<status status="PASS" starttime="20220602 01:35:14.796" endtime="20220602 01:35:14.804"/>
</kw>
<msg timestamp="20220602 01:35:14.804" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:35:14.795" endtime="20220602 01:35:14.805"/>
</kw>
<msg timestamp="20220602 01:35:14.805" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220602 01:35:14.795" endtime="20220602 01:35:14.805"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220602 01:35:14.807" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220602 01:35:14.805" endtime="20220602 01:35:14.807"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:35:14.810" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:35:14.818" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:35:14.818" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:35:14.808" endtime="20220602 01:35:14.818"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:35:14.819" level="INFO"/>
<status status="PASS" starttime="20220602 01:35:14.818" endtime="20220602 01:35:14.819"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:35:14.819" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:35:14.819" endtime="20220602 01:35:14.820"/>
</kw>
<status status="PASS" starttime="20220602 01:35:14.808" endtime="20220602 01:35:14.820"/>
</kw>
<msg timestamp="20220602 01:35:14.820" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:35:14.808" endtime="20220602 01:35:14.821"/>
</kw>
<status status="PASS" starttime="20220602 01:35:14.807" endtime="20220602 01:35:14.821"/>
</kw>
<status status="PASS" starttime="20220602 01:35:14.807" endtime="20220602 01:35:14.821"/>
</kw>
<status status="PASS" starttime="20220602 01:35:14.795" endtime="20220602 01:35:14.821"/>
</kw>
<status status="PASS" starttime="20220602 01:35:14.794" endtime="20220602 01:35:14.821"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh token get -t /tmp/ozone.token</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:35:14.825" level="INFO">Running command 'ozone sh token get -t /tmp/ozone.token 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:35:18.544" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:35:18.544" level="INFO">${output} = Successfully get token for service 172.18.0.11:9862
Kind: OzoneToken, Service: 172.18.0.11:9862, Ident: (OzoneToken owner=testuser/scm@EXAMPLE.COM, renewer=testuser, realUser=, issueDate=2022-06-02T01...</msg>
<status status="PASS" starttime="20220602 01:35:14.823" endtime="20220602 01:35:18.544"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:35:18.546" level="INFO">Successfully get token for service 172.18.0.11:9862
Kind: OzoneToken, Service: 172.18.0.11:9862, Ident: (OzoneToken owner=testuser/scm@EXAMPLE.COM, renewer=testuser, realUser=, issueDate=2022-06-02T01:35:18.427Z, maxDate=2022-06-09T01:35:18.427Z, sequenceNumber=1, masterKeyId=1, strToSign=null, signature=null, awsAccessKeyId=null, omServiceId=omServiceIdDefault)
Token persisted to /tmp/ozone.token successfully!</msg>
<status status="PASS" starttime="20220602 01:35:18.545" endtime="20220602 01:35:18.546"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:35:18.546" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:35:18.546" endtime="20220602 01:35:18.547"/>
</kw>
<status status="PASS" starttime="20220602 01:35:14.822" endtime="20220602 01:35:18.550"/>
</kw>
<msg timestamp="20220602 01:35:18.550" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:35:14.822" endtime="20220602 01:35:18.551"/>
</kw>
<status status="PASS" starttime="20220602 01:35:14.821" endtime="20220602 01:35:18.551"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>/tmp/ozone.token</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20220602 01:35:18.552" level="INFO" html="true">File '&lt;a href="file:///tmp/ozone.token"&gt;/tmp/ozone.token&lt;/a&gt;' contains 404 bytes.</msg>
<status status="PASS" starttime="20220602 01:35:18.551" endtime="20220602 01:35:18.552"/>
</kw>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:35:18.555" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:35:18.558" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:35:18.559" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:35:18.553" endtime="20220602 01:35:18.559"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:35:18.560" level="INFO"/>
<status status="PASS" starttime="20220602 01:35:18.559" endtime="20220602 01:35:18.560"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:35:18.560" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:35:18.560" endtime="20220602 01:35:18.561"/>
</kw>
<status status="PASS" starttime="20220602 01:35:18.552" endtime="20220602 01:35:18.561"/>
</kw>
<msg timestamp="20220602 01:35:18.561" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:35:18.552" endtime="20220602 01:35:18.562"/>
</kw>
<status status="PASS" starttime="20220602 01:35:18.552" endtime="20220602 01:35:18.562"/>
</kw>
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>HADOOP_TOKEN_FILE_LOCATION</arg>
<arg>/tmp/ozone.token</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20220602 01:35:18.562" level="INFO">Environment variable 'HADOOP_TOKEN_FILE_LOCATION' set to value '/tmp/ozone.token'.</msg>
<status status="PASS" starttime="20220602 01:35:18.562" endtime="20220602 01:35:18.562"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume list /</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:35:18.565" level="INFO">Running command 'ozone sh volume list / 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:35:22.419" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:35:22.419" level="INFO">${output} = [ ]</msg>
<status status="PASS" starttime="20220602 01:35:18.563" endtime="20220602 01:35:22.419"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:35:22.420" level="INFO">[ ]</msg>
<status status="PASS" starttime="20220602 01:35:22.420" endtime="20220602 01:35:22.420"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:35:22.421" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:35:22.421" endtime="20220602 01:35:22.421"/>
</kw>
<status status="PASS" starttime="20220602 01:35:18.563" endtime="20220602 01:35:22.421"/>
</kw>
<msg timestamp="20220602 01:35:22.421" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:35:18.563" endtime="20220602 01:35:22.422"/>
</kw>
<msg timestamp="20220602 01:35:22.422" level="INFO">${output} = [ ]</msg>
<status status="PASS" starttime="20220602 01:35:18.562" endtime="20220602 01:35:22.422"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Client cannot authenticate</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220602 01:35:22.422" endtime="20220602 01:35:22.423"/>
</kw>
<kw name="Remove Environment Variable" library="OperatingSystem">
<arg>HADOOP_TOKEN_FILE_LOCATION</arg>
<doc>Deletes the specified environment variable.</doc>
<msg timestamp="20220602 01:35:22.423" level="INFO">Environment variable 'HADOOP_TOKEN_FILE_LOCATION' deleted.</msg>
<status status="PASS" starttime="20220602 01:35:22.423" endtime="20220602 01:35:22.423"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${output}</var>
<arg>ozone sh volume list /</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:35:22.426" level="INFO">Running command 'ozone sh volume list / 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:35:25.707" level="INFO">${rc} = 255</msg>
<msg timestamp="20220602 01:35:25.707" level="INFO">${output} = org.apache.hadoop.security.AccessControlException: Client cannot authenticate via:[TOKEN, KERBEROS]</msg>
<status status="PASS" starttime="20220602 01:35:22.424" endtime="20220602 01:35:25.707"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:35:25.708" level="INFO">org.apache.hadoop.security.AccessControlException: Client cannot authenticate via:[TOKEN, KERBEROS]</msg>
<status status="PASS" starttime="20220602 01:35:25.707" endtime="20220602 01:35:25.708"/>
</kw>
<msg timestamp="20220602 01:35:25.708" level="INFO">${output} = org.apache.hadoop.security.AccessControlException: Client cannot authenticate via:[TOKEN, KERBEROS]</msg>
<status status="PASS" starttime="20220602 01:35:22.424" endtime="20220602 01:35:25.708"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Client cannot authenticate</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220602 01:35:25.709" endtime="20220602 01:35:25.709"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:35:25.714" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:35:25.717" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:35:25.717" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220602 01:35:25.712" endtime="20220602 01:35:25.717"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:35:25.718" level="INFO">scm</msg>
<status status="PASS" starttime="20220602 01:35:25.717" endtime="20220602 01:35:25.718"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:35:25.719" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:35:25.718" endtime="20220602 01:35:25.719"/>
</kw>
<status status="PASS" starttime="20220602 01:35:25.711" endtime="20220602 01:35:25.719"/>
</kw>
<msg timestamp="20220602 01:35:25.719" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:35:25.710" endtime="20220602 01:35:25.720"/>
</kw>
<msg timestamp="20220602 01:35:25.720" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220602 01:35:25.710" endtime="20220602 01:35:25.720"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220602 01:35:25.721" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220602 01:35:25.720" endtime="20220602 01:35:25.721"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:35:25.725" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:35:25.731" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:35:25.732" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:35:25.723" endtime="20220602 01:35:25.732"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:35:25.733" level="INFO"/>
<status status="PASS" starttime="20220602 01:35:25.732" endtime="20220602 01:35:25.733"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:35:25.733" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:35:25.733" endtime="20220602 01:35:25.734"/>
</kw>
<status status="PASS" starttime="20220602 01:35:25.723" endtime="20220602 01:35:25.734"/>
</kw>
<msg timestamp="20220602 01:35:25.734" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:35:25.722" endtime="20220602 01:35:25.734"/>
</kw>
<status status="PASS" starttime="20220602 01:35:25.722" endtime="20220602 01:35:25.735"/>
</kw>
<status status="PASS" starttime="20220602 01:35:25.721" endtime="20220602 01:35:25.735"/>
</kw>
<status status="PASS" starttime="20220602 01:35:25.709" endtime="20220602 01:35:25.735"/>
</kw>
<status status="PASS" starttime="20220602 01:35:25.709" endtime="20220602 01:35:25.735"/>
</kw>
<status status="PASS" starttime="20220602 01:35:14.794" endtime="20220602 01:35:25.735"/>
</kw>
<kw name="Print Valid Token File">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh token print</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:35:25.738" level="INFO">Running command 'ozone sh token print 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:35:27.767" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:35:27.767" level="INFO">${output} = Kind: OzoneToken, Service: 172.18.0.11:9862, Ident: (OzoneToken owner=testuser/scm@EXAMPLE.COM, renewer=testuser, realUser=, issueDate=2022-06-02T01:35:18.427Z, maxDate=2022-06-09T01:35:18.427Z, seque...</msg>
<status status="PASS" starttime="20220602 01:35:25.737" endtime="20220602 01:35:27.767"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:35:27.768" level="INFO">Kind: OzoneToken, Service: 172.18.0.11:9862, Ident: (OzoneToken owner=testuser/scm@EXAMPLE.COM, renewer=testuser, realUser=, issueDate=2022-06-02T01:35:18.427Z, maxDate=2022-06-09T01:35:18.427Z, sequenceNumber=1, masterKeyId=1, strToSign=null, signature=null, awsAccessKeyId=null, omServiceId=omServiceIdDefault)</msg>
<status status="PASS" starttime="20220602 01:35:27.767" endtime="20220602 01:35:27.768"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:35:27.769" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:35:27.768" endtime="20220602 01:35:27.769"/>
</kw>
<status status="PASS" starttime="20220602 01:35:25.736" endtime="20220602 01:35:27.769"/>
</kw>
<msg timestamp="20220602 01:35:27.769" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:35:25.736" endtime="20220602 01:35:27.770"/>
</kw>
<msg timestamp="20220602 01:35:27.770" level="INFO">${output} = Kind: OzoneToken, Service: 172.18.0.11:9862, Ident: (OzoneToken owner=testuser/scm@EXAMPLE.COM, renewer=testuser, realUser=, issueDate=2022-06-02T01:35:18.427Z, maxDate=2022-06-09T01:35:18.427Z, seque...</msg>
<status status="PASS" starttime="20220602 01:35:25.736" endtime="20220602 01:35:27.770"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${output}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220602 01:35:27.771" level="INFO">Length is 312</msg>
<status status="PASS" starttime="20220602 01:35:27.770" endtime="20220602 01:35:27.771"/>
</kw>
<status status="PASS" starttime="20220602 01:35:25.735" endtime="20220602 01:35:27.771"/>
</kw>
<kw name="Renew Token in Secure Cluster">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh token renew</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:35:27.774" level="INFO">Running command 'ozone sh token renew 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:35:31.166" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:35:31.166" level="INFO">${output} = Token renewed successfully, expiry time: 2022-06-03T01:35:31.103Z.</msg>
<status status="PASS" starttime="20220602 01:35:27.772" endtime="20220602 01:35:31.166"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:35:31.167" level="INFO">Token renewed successfully, expiry time: 2022-06-03T01:35:31.103Z.</msg>
<status status="PASS" starttime="20220602 01:35:31.166" endtime="20220602 01:35:31.167"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:35:31.168" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:35:31.167" endtime="20220602 01:35:31.168"/>
</kw>
<status status="PASS" starttime="20220602 01:35:27.772" endtime="20220602 01:35:31.168"/>
</kw>
<msg timestamp="20220602 01:35:31.168" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:35:27.772" endtime="20220602 01:35:31.169"/>
</kw>
<msg timestamp="20220602 01:35:31.169" level="INFO">${output} = Token renewed successfully, expiry time: 2022-06-03T01:35:31.103Z.</msg>
<status status="PASS" starttime="20220602 01:35:27.771" endtime="20220602 01:35:31.169"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Token renewed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220602 01:35:31.169" endtime="20220602 01:35:31.170"/>
</kw>
<status status="PASS" starttime="20220602 01:35:27.771" endtime="20220602 01:35:31.170"/>
</kw>
<kw name="Cancel Token in Secure Cluster">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh token cancel</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:35:31.174" level="INFO">Running command 'ozone sh token cancel 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:35:35.041" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:35:35.041" level="INFO">${output} = Token canceled successfully.</msg>
<status status="PASS" starttime="20220602 01:35:31.172" endtime="20220602 01:35:35.041"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:35:35.042" level="INFO">Token canceled successfully.</msg>
<status status="PASS" starttime="20220602 01:35:35.041" endtime="20220602 01:35:35.042"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:35:35.043" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:35:35.042" endtime="20220602 01:35:35.043"/>
</kw>
<status status="PASS" starttime="20220602 01:35:31.172" endtime="20220602 01:35:35.043"/>
</kw>
<msg timestamp="20220602 01:35:35.043" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:35:31.171" endtime="20220602 01:35:35.044"/>
</kw>
<msg timestamp="20220602 01:35:35.044" level="INFO">${output} = Token canceled successfully.</msg>
<status status="PASS" starttime="20220602 01:35:31.170" endtime="20220602 01:35:35.044"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Token canceled successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220602 01:35:35.045" endtime="20220602 01:35:35.045"/>
</kw>
<status status="PASS" starttime="20220602 01:35:31.170" endtime="20220602 01:35:35.045"/>
</kw>
<status status="PASS" starttime="20220602 01:35:14.794" endtime="20220602 01:35:35.045"/>
</kw>
<status status="PASS" starttime="20220602 01:35:14.793" endtime="20220602 01:35:35.045"/>
</kw>
<kw name="Print Nonexistent Token File">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh token print -t /asdf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:35:35.049" level="INFO">Running command 'ozone sh token print -t /asdf 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:35:37.152" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:35:37.152" level="INFO">${output} = Error: token operation failed as token file: /asdf containing encoded token doesn't exist.</msg>
<status status="PASS" starttime="20220602 01:35:35.047" endtime="20220602 01:35:37.152"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:35:37.154" level="INFO">Error: token operation failed as token file: /asdf containing encoded token doesn't exist.</msg>
<status status="PASS" starttime="20220602 01:35:37.153" endtime="20220602 01:35:37.154"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:35:37.154" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:35:37.154" endtime="20220602 01:35:37.154"/>
</kw>
<status status="PASS" starttime="20220602 01:35:35.046" endtime="20220602 01:35:37.155"/>
</kw>
<msg timestamp="20220602 01:35:37.155" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:35:35.046" endtime="20220602 01:35:37.155"/>
</kw>
<msg timestamp="20220602 01:35:37.156" level="INFO">${output} = Error: token operation failed as token file: /asdf containing encoded token doesn't exist.</msg>
<status status="PASS" starttime="20220602 01:35:35.046" endtime="20220602 01:35:37.156"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>operation failed as token file: /asdf</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220602 01:35:37.156" endtime="20220602 01:35:37.156"/>
</kw>
<status status="PASS" starttime="20220602 01:35:35.045" endtime="20220602 01:35:37.156"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220602 01:35:14.792" endtime="20220602 01:35:37.156"/>
</test>
<doc>Test token operations</doc>
<status status="PASS" starttime="20220602 01:35:14.771" endtime="20220602 01:35:37.157"/>
</suite>
<status status="FAIL" starttime="20220602 01:25:08.406" endtime="20220602 01:35:37.161"/>
</suite>
<suite id="s1-s3" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s3-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:08:31.739" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:08:31.745" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:08:31.745" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220602 01:08:31.734" endtime="20220602 01:08:31.745"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:08:31.746" level="INFO">scm</msg>
<status status="PASS" starttime="20220602 01:08:31.745" endtime="20220602 01:08:31.746"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:08:31.746" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:08:31.746" endtime="20220602 01:08:31.746"/>
</kw>
<status status="PASS" starttime="20220602 01:08:31.734" endtime="20220602 01:08:31.747"/>
</kw>
<msg timestamp="20220602 01:08:31.747" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:08:31.734" endtime="20220602 01:08:31.748"/>
</kw>
<msg timestamp="20220602 01:08:31.748" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220602 01:08:31.733" endtime="20220602 01:08:31.748"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220602 01:08:31.749" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220602 01:08:31.748" endtime="20220602 01:08:31.749"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220602 01:08:31.753" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220602 01:08:31.760" level="INFO">${rc} = 0</msg>
<msg timestamp="20220602 01:08:31.760" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220602 01:08:31.751" endtime="20220602 01:08:31.760"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220602 01:08:31.761" level="INFO"/>
<status status="PASS" starttime="20220602 01:08:31.761" endtime="20220602 01:08:31.762"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220602 01:08:31.762" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220602 01:08:31.762" endtime="20220602 01:08:31.762"/>
</kw>
<status status="PASS" starttime="20220602 01:08:31.750" endtime="20220602 01:08:31.762"/>
</kw>
<msg timestamp="20220602 01:08:31.762" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220602 01:08:31.750" endtime="20220602 01:08:31.763"/>
</kw>
<status status="PASS" starttime="20220602 01:08:31.750" endtime="20220602 01:08:31.763"/>
</kw>
<status status="PASS" starttime="20220602 01:08:31.749" endtime="20220602 01:08:31.763"/>
</kw>
<status status="PASS" starttime="20220602 01:08:31.733" endtime="20220602 01:08:31.763"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220602 01:08:31.732" endtime="20220602 01:08:31.764"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20220602 01:08:31.684" endtime="20220602 01:08:31.765"/>
</suite>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="1614527"/>
</suite>
<statistics>
<total>
<stat pass="70" fail="2" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="70" fail="2" skip="0" id="s1" name="ozonesecure">ozonesecure</stat>
<stat pass="29" fail="0" skip="0" id="s1-s1" name="Basic">ozonesecure.Basic</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1-s1" name="Basic">ozonesecure.Basic.Basic</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s2" name="Getconf">ozonesecure.Basic.Getconf</stat>
<stat pass="15" fail="0" skip="0" id="s1-s1-s3" name="Links">ozonesecure.Basic.Links</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s4" name="Ozone-Shell-Single">ozonesecure.Basic.Ozone-Shell-Single</stat>
<stat pass="6" fail="0" skip="0" id="s1-s1-s5" name="Ozone-Shell">ozonesecure.Basic.Ozone-Shell</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s6" name="Single Node">ozonesecure.Basic.Single Node</stat>
<stat pass="40" fail="2" skip="0" id="s1-s2" name="Security">ozonesecure.Security</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2-s1" name="Admin-Cert">ozonesecure.Security.Admin-Cert</stat>
<stat pass="2" fail="0" skip="0" id="s1-s2-s2" name="Bucket-Encryption">ozonesecure.Security.Bucket-Encryption</stat>
<stat pass="9" fail="0" skip="0" id="s1-s2-s3" name="Ozone-Secure-Fs">ozonesecure.Security.Ozone-Secure-Fs</stat>
<stat pass="1" fail="2" skip="0" id="s1-s2-s4" name="Ozone-Secure-S3">ozonesecure.Security.Ozone-Secure-S3</stat>
<stat pass="24" fail="0" skip="0" id="s1-s2-s5" name="Ozone-Secure-Tenant">ozonesecure.Security.Ozone-Secure-Tenant</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s6" name="Ozone-Secure-Token">ozonesecure.Security.Ozone-Secure-Token</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3" name="Kinit">ozonesecure.Kinit</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
