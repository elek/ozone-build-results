<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 5.0.1 (Python 3.6.9 on linux)" generated="20220516 20:13:46.131" rpa="false" schemaversion="3">
<suite id="s1" name="ozonesecure">
<suite id="s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic">
<suite id="s1-s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:48:58.319" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:48:58.322" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:48:58.322" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220516 17:48:58.314" endtime="20220516 17:48:58.322"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:48:58.323" level="INFO">scm</msg>
<status status="PASS" starttime="20220516 17:48:58.322" endtime="20220516 17:48:58.323"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:48:58.324" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:48:58.323" endtime="20220516 17:48:58.325"/>
</kw>
<status status="PASS" starttime="20220516 17:48:58.314" endtime="20220516 17:48:58.325"/>
</kw>
<msg timestamp="20220516 17:48:58.325" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:48:58.313" endtime="20220516 17:48:58.326"/>
</kw>
<msg timestamp="20220516 17:48:58.327" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20220516 17:48:58.312" endtime="20220516 17:48:58.327"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:48:58.331" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:48:58.340" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:48:58.340" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 17:48:58.329" endtime="20220516 17:48:58.340"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:48:58.342" level="INFO"/>
<status status="PASS" starttime="20220516 17:48:58.341" endtime="20220516 17:48:58.342"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:48:58.342" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:48:58.342" endtime="20220516 17:48:58.343"/>
</kw>
<status status="PASS" starttime="20220516 17:48:58.329" endtime="20220516 17:48:58.343"/>
</kw>
<msg timestamp="20220516 17:48:58.343" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:48:58.328" endtime="20220516 17:48:58.344"/>
</kw>
<status status="PASS" starttime="20220516 17:48:58.328" endtime="20220516 17:48:58.344"/>
</kw>
<status status="PASS" starttime="20220516 17:48:58.327" endtime="20220516 17:48:58.345"/>
</kw>
<status status="PASS" starttime="20220516 17:48:58.312" endtime="20220516 17:48:58.345"/>
</kw>
<status status="PASS" starttime="20220516 17:48:58.311" endtime="20220516 17:48:58.345"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -s -I http://${SCM}:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:48:58.349" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:48:58.497" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:48:58.497" level="INFO">${output} = HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
...</msg>
<status status="PASS" starttime="20220516 17:48:58.347" endtime="20220516 17:48:58.497"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:48:58.498" level="INFO">HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 484

HTTP/1.1 200 OK
Date: Mon, 16 May 2022 17:48:58 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCp8RtUVRFdCzcIv/0cxUhHu1iaLQo2PT3WchVYAjGX6xhwUQOx70TNNhoQR0WyU5Ll5feDqSMOpcDRH3m2y1dhGDc
Set-Cookie: hadoop.auth="u=root&amp;p=HTTP/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1652759338486&amp;s=IzlkGOOaDI9mq3u7zOvPL77JFkxXRE8U3j3mzeEX11g="; Path=/; HttpOnly
Last-Modified: Mon, 16 May 2022 17:36:06 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20220516 17:48:58.498" endtime="20220516 17:48:58.499"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:48:58.500" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:48:58.499" endtime="20220516 17:48:58.500"/>
</kw>
<status status="PASS" starttime="20220516 17:48:58.347" endtime="20220516 17:48:58.500"/>
</kw>
<msg timestamp="20220516 17:48:58.501" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:48:58.346" endtime="20220516 17:48:58.501"/>
</kw>
<msg timestamp="20220516 17:48:58.502" level="INFO">${result} = HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
...</msg>
<status status="PASS" starttime="20220516 17:48:58.345" endtime="20220516 17:48:58.502"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 17:48:58.502" endtime="20220516 17:48:58.502"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220516 17:48:58.310" endtime="20220516 17:48:58.503"/>
</test>
<test id="s1-s1-s1-t2" name="Basic Freon smoketest">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:48:58.515" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:48:58.524" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:48:58.524" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220516 17:48:58.512" endtime="20220516 17:48:58.524"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:48:58.525" level="INFO">scm</msg>
<status status="PASS" starttime="20220516 17:48:58.525" endtime="20220516 17:48:58.526"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:48:58.526" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:48:58.526" endtime="20220516 17:48:58.527"/>
</kw>
<status status="PASS" starttime="20220516 17:48:58.511" endtime="20220516 17:48:58.527"/>
</kw>
<msg timestamp="20220516 17:48:58.527" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:48:58.511" endtime="20220516 17:48:58.528"/>
</kw>
<msg timestamp="20220516 17:48:58.528" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220516 17:48:58.510" endtime="20220516 17:48:58.528"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220516 17:48:58.530" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220516 17:48:58.528" endtime="20220516 17:48:58.531"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:48:58.537" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:48:58.545" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:48:58.546" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 17:48:58.533" endtime="20220516 17:48:58.546"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:48:58.547" level="INFO"/>
<status status="PASS" starttime="20220516 17:48:58.546" endtime="20220516 17:48:58.547"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:48:58.548" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:48:58.547" endtime="20220516 17:48:58.548"/>
</kw>
<status status="PASS" starttime="20220516 17:48:58.532" endtime="20220516 17:48:58.550"/>
</kw>
<msg timestamp="20220516 17:48:58.550" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:48:58.532" endtime="20220516 17:48:58.551"/>
</kw>
<status status="PASS" starttime="20220516 17:48:58.531" endtime="20220516 17:48:58.551"/>
</kw>
<status status="PASS" starttime="20220516 17:48:58.531" endtime="20220516 17:48:58.551"/>
</kw>
<status status="PASS" starttime="20220516 17:48:58.509" endtime="20220516 17:48:58.552"/>
</kw>
<status status="PASS" starttime="20220516 17:48:58.509" endtime="20220516 17:48:58.552"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>10</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220516 17:48:58.553" level="INFO">${random} = ppPmOIAB1C</msg>
<status status="PASS" starttime="20220516 17:48:58.552" endtime="20220516 17:48:58.553"/>
</kw>
<kw name="Freon OCKG" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:48:58.559" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p ppPmOIAB1C  2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:49:12.389" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:49:12.389" level="INFO">${output} = 2022-05-16 17:49:01,322 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-05-16 17:49:01,444 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220516 17:48:58.556" endtime="20220516 17:49:12.389"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:49:12.390" level="INFO">2022-05-16 17:49:01,322 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-05-16 17:49:01,444 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-05-16 17:49:01,444 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-05-16 17:49:01,632 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ppPmOIAB1C
2022-05-16 17:49:01,727 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-05-16 17:49:02,738 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-05-16 17:49:03,553 [main] INFO rpc.RpcClient: Creating Volume: vol1, with testuser as owner and space quota set to -1 bytes, counts quota set to -1
2022-05-16 17:49:03,739 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-05-16 17:49:03,820 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with testuser as owner and Versioning false and Storage Type set to DISK and Encryption set to false 
2022-05-16 17:49:04,739 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-05-16 17:49:05,271 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-05-16 17:49:05,635 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-05-16 17:49:05,740 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-05-16 17:49:06,740 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-05-16 17:49:07,748 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-05-16 17:49:08,749 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-05-16 17:49:09,749 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-05-16 17:49:10,750 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-05-16 17:49:11,750 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-05-16 17:49:11,990 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=7000.178346, max=7000.178346, mean=7000.178346, stddev=0.0, median=7000.178346, p75=7000.178346, p95=7000.178346, p98=7000.178346, p99=7000.178346, p999=7000.178346, mean_rate=0.1237774209848508, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-05-16 17:49:11,991 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 10
2022-05-16 17:49:11,993 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-05-16 17:49:11,993 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20220516 17:49:12.389" endtime="20220516 17:49:12.390"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:49:12.392" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:49:12.391" endtime="20220516 17:49:12.392"/>
</kw>
<status status="PASS" starttime="20220516 17:48:58.556" endtime="20220516 17:49:12.393"/>
</kw>
<msg timestamp="20220516 17:49:12.393" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:48:58.555" endtime="20220516 17:49:12.394"/>
</kw>
<msg timestamp="20220516 17:49:12.394" level="INFO">${result} = 2022-05-16 17:49:01,322 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-05-16 17:49:01,444 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220516 17:48:58.555" endtime="20220516 17:49:12.394"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 17:49:12.394" endtime="20220516 17:49:12.395"/>
</kw>
<status status="PASS" starttime="20220516 17:48:58.553" endtime="20220516 17:49:12.395"/>
</kw>
<kw name="Freon OCKV" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:49:12.402" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p ppPmOIAB1C  2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:49:21.222" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:49:21.223" level="INFO">${output} = 2022-05-16 17:49:14,829 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-05-16 17:49:14,997 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220516 17:49:12.399" endtime="20220516 17:49:21.223"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:49:21.224" level="INFO">2022-05-16 17:49:14,829 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-05-16 17:49:14,997 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-05-16 17:49:14,997 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-05-16 17:49:15,247 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ppPmOIAB1C
2022-05-16 17:49:15,385 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-05-16 17:49:16,392 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-05-16 17:49:17,392 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-05-16 17:49:18,167 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-05-16 17:49:18,393 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-05-16 17:49:19,393 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-05-16 17:49:20,394 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-05-16 17:49:20,846 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=109.911597, max=109.911597, mean=109.911597, stddev=0.0, median=109.911597, p75=109.911597, p95=109.911597, p98=109.911597, p99=109.911597, p999=109.911597, mean_rate=0.7812221701808469, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-05-16 17:49:20,847 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 5
2022-05-16 17:49:20,848 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-05-16 17:49:20,848 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20220516 17:49:21.223" endtime="20220516 17:49:21.224"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:49:21.225" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:49:21.224" endtime="20220516 17:49:21.225"/>
</kw>
<status status="PASS" starttime="20220516 17:49:12.399" endtime="20220516 17:49:21.226"/>
</kw>
<msg timestamp="20220516 17:49:21.226" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:49:12.398" endtime="20220516 17:49:21.226"/>
</kw>
<msg timestamp="20220516 17:49:21.227" level="INFO">${result} = 2022-05-16 17:49:14,829 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-05-16 17:49:14,997 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220516 17:49:12.397" endtime="20220516 17:49:21.227"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 17:49:21.227" endtime="20220516 17:49:21.228"/>
</kw>
<status status="PASS" starttime="20220516 17:49:12.395" endtime="20220516 17:49:21.228"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220516 17:48:58.507" endtime="20220516 17:49:21.228"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20220516 17:48:58.264" endtime="20220516 17:49:21.230"/>
</suite>
<suite id="s1-s1-s2" name="Getconf" source="/opt/hadoop/smoketest/basic/getconf.robot">
<test id="s1-s1-s2-t1" name="Get OM">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:49:21.243" level="INFO">Running command 'ozone getconf ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:49:23.287" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:49:23.287" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20220516 17:49:21.241" endtime="20220516 17:49:23.287"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:49:23.288" level="INFO">om</msg>
<status status="PASS" starttime="20220516 17:49:23.288" endtime="20220516 17:49:23.289"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:49:23.289" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:49:23.289" endtime="20220516 17:49:23.290"/>
</kw>
<status status="PASS" starttime="20220516 17:49:21.240" endtime="20220516 17:49:23.290"/>
</kw>
<msg timestamp="20220516 17:49:23.290" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:49:21.240" endtime="20220516 17:49:23.291"/>
</kw>
<msg timestamp="20220516 17:49:23.291" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20220516 17:49:21.239" endtime="20220516 17:49:23.291"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 17:49:23.291" endtime="20220516 17:49:23.292"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:49:23.296" level="INFO">Running command 'ozone getconf -ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:49:25.025" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:49:25.026" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20220516 17:49:23.294" endtime="20220516 17:49:25.026"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:49:25.027" level="INFO">om</msg>
<status status="PASS" starttime="20220516 17:49:25.026" endtime="20220516 17:49:25.027"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:49:25.028" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:49:25.027" endtime="20220516 17:49:25.028"/>
</kw>
<status status="PASS" starttime="20220516 17:49:23.293" endtime="20220516 17:49:25.029"/>
</kw>
<msg timestamp="20220516 17:49:25.029" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:49:23.293" endtime="20220516 17:49:25.029"/>
</kw>
<msg timestamp="20220516 17:49:25.030" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20220516 17:49:23.292" endtime="20220516 17:49:25.030"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 17:49:25.030" endtime="20220516 17:49:25.030"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220516 17:49:21.238" endtime="20220516 17:49:25.031"/>
</test>
<test id="s1-s1-s2-t2" name="Get SCM">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:49:25.036" level="INFO">Running command 'ozone getconf storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:49:26.848" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:49:26.848" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220516 17:49:25.034" endtime="20220516 17:49:26.848"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:49:26.850" level="INFO">scm</msg>
<status status="PASS" starttime="20220516 17:49:26.849" endtime="20220516 17:49:26.850"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:49:26.851" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:49:26.850" endtime="20220516 17:49:26.852"/>
</kw>
<status status="PASS" starttime="20220516 17:49:25.033" endtime="20220516 17:49:26.852"/>
</kw>
<msg timestamp="20220516 17:49:26.852" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:49:25.033" endtime="20220516 17:49:26.853"/>
</kw>
<msg timestamp="20220516 17:49:26.853" level="INFO">${result} = scm</msg>
<status status="PASS" starttime="20220516 17:49:25.032" endtime="20220516 17:49:26.853"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 17:49:26.853" endtime="20220516 17:49:26.854"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:49:26.858" level="INFO">Running command 'ozone getconf -storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:49:28.806" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:49:28.806" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220516 17:49:26.856" endtime="20220516 17:49:28.806"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:49:28.807" level="INFO">scm</msg>
<status status="PASS" starttime="20220516 17:49:28.806" endtime="20220516 17:49:28.808"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:49:28.810" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:49:28.809" endtime="20220516 17:49:28.810"/>
</kw>
<status status="PASS" starttime="20220516 17:49:26.855" endtime="20220516 17:49:28.810"/>
</kw>
<msg timestamp="20220516 17:49:28.811" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:49:26.855" endtime="20220516 17:49:28.811"/>
</kw>
<msg timestamp="20220516 17:49:28.811" level="INFO">${result} = scm</msg>
<status status="PASS" starttime="20220516 17:49:26.854" endtime="20220516 17:49:28.811"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 17:49:28.812" endtime="20220516 17:49:28.812"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220516 17:49:25.031" endtime="20220516 17:49:28.813"/>
</test>
<test id="s1-s1-s2-t3" name="Get existing config key">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:49:28.819" level="INFO">Running command 'ozone getconf confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:49:30.526" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:49:30.526" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20220516 17:49:28.816" endtime="20220516 17:49:30.526"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:49:30.527" level="INFO">om</msg>
<status status="PASS" starttime="20220516 17:49:30.527" endtime="20220516 17:49:30.528"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:49:30.528" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:49:30.528" endtime="20220516 17:49:30.529"/>
</kw>
<status status="PASS" starttime="20220516 17:49:28.815" endtime="20220516 17:49:30.529"/>
</kw>
<msg timestamp="20220516 17:49:30.529" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:49:28.815" endtime="20220516 17:49:30.530"/>
</kw>
<msg timestamp="20220516 17:49:30.530" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20220516 17:49:28.814" endtime="20220516 17:49:30.530"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 17:49:30.531" endtime="20220516 17:49:30.531"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 17:49:30.531" endtime="20220516 17:49:30.532"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:49:30.535" level="INFO">Running command 'ozone getconf -confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:49:32.149" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:49:32.149" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20220516 17:49:30.533" endtime="20220516 17:49:32.150"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:49:32.151" level="INFO">om</msg>
<status status="PASS" starttime="20220516 17:49:32.150" endtime="20220516 17:49:32.151"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:49:32.152" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:49:32.151" endtime="20220516 17:49:32.152"/>
</kw>
<status status="PASS" starttime="20220516 17:49:30.533" endtime="20220516 17:49:32.152"/>
</kw>
<msg timestamp="20220516 17:49:32.152" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:49:30.533" endtime="20220516 17:49:32.153"/>
</kw>
<msg timestamp="20220516 17:49:32.153" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20220516 17:49:30.532" endtime="20220516 17:49:32.153"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 17:49:32.154" endtime="20220516 17:49:32.154"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 17:49:32.154" endtime="20220516 17:49:32.155"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220516 17:49:28.813" endtime="20220516 17:49:32.155"/>
</test>
<test id="s1-s1-s2-t4" name="Get undefined config key">
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:49:32.161" level="INFO">Running command 'ozone getconf confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:49:33.808" level="INFO">${rc} = 255</msg>
<msg timestamp="20220516 17:49:33.808" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20220516 17:49:32.158" endtime="20220516 17:49:33.808"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:49:33.810" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20220516 17:49:33.809" endtime="20220516 17:49:33.810"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:49:33.811" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:49:33.810" endtime="20220516 17:49:33.811"/>
</kw>
<msg timestamp="20220516 17:49:33.811" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20220516 17:49:32.157" endtime="20220516 17:49:33.811"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 17:49:33.812" endtime="20220516 17:49:33.812"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:49:33.817" level="INFO">Running command 'ozone getconf -confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:49:35.487" level="INFO">${rc} = 255</msg>
<msg timestamp="20220516 17:49:35.487" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20220516 17:49:33.813" endtime="20220516 17:49:35.487"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:49:35.489" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20220516 17:49:35.488" endtime="20220516 17:49:35.489"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:49:35.490" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:49:35.489" endtime="20220516 17:49:35.490"/>
</kw>
<msg timestamp="20220516 17:49:35.491" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20220516 17:49:33.812" endtime="20220516 17:49:35.491"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 17:49:35.491" endtime="20220516 17:49:35.492"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220516 17:49:32.156" endtime="20220516 17:49:35.492"/>
</test>
<doc>Test 'ozone getconf' command</doc>
<status status="PASS" starttime="20220516 17:49:21.232" endtime="20220516 17:49:35.493"/>
</suite>
<suite id="s1-s1-s3" name="Links" source="/opt/hadoop/smoketest/basic/links.robot">
<kw name="Create volumes" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220516 17:49:35.520" level="INFO">${random} = 52499</msg>
<status status="PASS" starttime="20220516 17:49:35.518" endtime="20220516 17:49:35.520"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${source}</arg>
<arg>${random}-source</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220516 17:49:35.523" level="INFO">${source} = 52499-source</msg>
<status status="PASS" starttime="20220516 17:49:35.520" endtime="20220516 17:49:35.523"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${target}</arg>
<arg>${random}-target</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220516 17:49:35.524" level="INFO">${target} = 52499-target</msg>
<status status="PASS" starttime="20220516 17:49:35.523" endtime="20220516 17:49:35.524"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:49:35.528" level="INFO">Running command 'ozone sh volume create 52499-source 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:49:40.611" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:49:40.612" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 17:49:35.526" endtime="20220516 17:49:40.612"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:49:40.613" level="INFO"/>
<status status="PASS" starttime="20220516 17:49:40.612" endtime="20220516 17:49:40.613"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:49:40.614" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:49:40.613" endtime="20220516 17:49:40.614"/>
</kw>
<status status="PASS" starttime="20220516 17:49:35.525" endtime="20220516 17:49:40.614"/>
</kw>
<msg timestamp="20220516 17:49:40.615" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:49:35.525" endtime="20220516 17:49:40.615"/>
</kw>
<status status="PASS" starttime="20220516 17:49:35.525" endtime="20220516 17:49:40.616"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:49:40.620" level="INFO">Running command 'ozone sh volume create 52499-target 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:49:45.503" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:49:45.503" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 17:49:40.617" endtime="20220516 17:49:45.504"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:49:45.505" level="INFO"/>
<status status="PASS" starttime="20220516 17:49:45.504" endtime="20220516 17:49:45.505"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:49:45.506" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:49:45.505" endtime="20220516 17:49:45.506"/>
</kw>
<status status="PASS" starttime="20220516 17:49:40.617" endtime="20220516 17:49:45.507"/>
</kw>
<msg timestamp="20220516 17:49:45.507" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:49:40.616" endtime="20220516 17:49:45.508"/>
</kw>
<status status="PASS" starttime="20220516 17:49:40.616" endtime="20220516 17:49:45.508"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:49:45.513" level="INFO">Running command 'ozone sh bucket create 52499-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:49:50.578" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:49:50.578" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 17:49:45.511" endtime="20220516 17:49:50.578"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:49:50.580" level="INFO"/>
<status status="PASS" starttime="20220516 17:49:50.579" endtime="20220516 17:49:50.580"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:49:50.580" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:49:50.580" endtime="20220516 17:49:50.581"/>
</kw>
<status status="PASS" starttime="20220516 17:49:45.510" endtime="20220516 17:49:50.581"/>
</kw>
<msg timestamp="20220516 17:49:50.581" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:49:45.510" endtime="20220516 17:49:50.582"/>
</kw>
<status status="PASS" starttime="20220516 17:49:45.509" endtime="20220516 17:49:50.582"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:49:50.586" level="INFO">Running command 'ozone sh key put 52499-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:50:00.914" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:50:00.914" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 17:49:50.584" endtime="20220516 17:50:00.914"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:50:00.915" level="INFO"/>
<status status="PASS" starttime="20220516 17:50:00.914" endtime="20220516 17:50:00.915"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:50:00.916" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:50:00.915" endtime="20220516 17:50:00.916"/>
</kw>
<status status="PASS" starttime="20220516 17:49:50.583" endtime="20220516 17:50:00.916"/>
</kw>
<msg timestamp="20220516 17:50:00.916" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:49:50.583" endtime="20220516 17:50:00.917"/>
</kw>
<status status="PASS" starttime="20220516 17:49:50.582" endtime="20220516 17:50:00.918"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:50:00.922" level="INFO">Running command 'ozone sh bucket create 52499-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:50:05.757" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:50:05.757" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 17:50:00.920" endtime="20220516 17:50:05.757"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:50:05.759" level="INFO"/>
<status status="PASS" starttime="20220516 17:50:05.758" endtime="20220516 17:50:05.759"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:50:05.759" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:50:05.759" endtime="20220516 17:50:05.760"/>
</kw>
<status status="PASS" starttime="20220516 17:50:00.919" endtime="20220516 17:50:05.760"/>
</kw>
<msg timestamp="20220516 17:50:05.760" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:50:00.919" endtime="20220516 17:50:05.761"/>
</kw>
<status status="PASS" starttime="20220516 17:50:00.918" endtime="20220516 17:50:05.761"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:50:05.765" level="INFO">Running command 'ozone sh bucket link 52499-source/readable-bucket 52499-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:50:10.890" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:50:10.890" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 17:50:05.763" endtime="20220516 17:50:10.891"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:50:10.892" level="INFO"/>
<status status="PASS" starttime="20220516 17:50:10.891" endtime="20220516 17:50:10.892"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:50:10.893" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:50:10.893" endtime="20220516 17:50:10.893"/>
</kw>
<status status="PASS" starttime="20220516 17:50:05.763" endtime="20220516 17:50:10.894"/>
</kw>
<msg timestamp="20220516 17:50:10.894" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:50:05.762" endtime="20220516 17:50:10.894"/>
</kw>
<status status="PASS" starttime="20220516 17:50:05.761" endtime="20220516 17:50:10.895"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:50:10.899" level="INFO">Running command 'ozone sh bucket link 52499-source/readable-bucket 52499-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:50:15.466" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:50:15.466" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 17:50:10.897" endtime="20220516 17:50:15.466"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:50:15.468" level="INFO"/>
<status status="PASS" starttime="20220516 17:50:15.467" endtime="20220516 17:50:15.468"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:50:15.468" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:50:15.468" endtime="20220516 17:50:15.468"/>
</kw>
<status status="PASS" starttime="20220516 17:50:10.896" endtime="20220516 17:50:15.469"/>
</kw>
<msg timestamp="20220516 17:50:15.469" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:50:10.896" endtime="20220516 17:50:15.470"/>
</kw>
<status status="PASS" starttime="20220516 17:50:10.895" endtime="20220516 17:50:15.470"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:50:15.474" level="INFO">Running command 'ozone sh bucket link 52499-source/unreadable-bucket 52499-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:50:20.486" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:50:20.486" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 17:50:15.472" endtime="20220516 17:50:20.486"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:50:20.488" level="INFO"/>
<status status="PASS" starttime="20220516 17:50:20.487" endtime="20220516 17:50:20.488"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:50:20.488" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:50:20.488" endtime="20220516 17:50:20.488"/>
</kw>
<status status="PASS" starttime="20220516 17:50:15.471" endtime="20220516 17:50:20.489"/>
</kw>
<msg timestamp="20220516 17:50:20.489" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:50:15.471" endtime="20220516 17:50:20.490"/>
</kw>
<status status="PASS" starttime="20220516 17:50:15.470" endtime="20220516 17:50:20.490"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:50:20.494" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 52499-target 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:50:25.613" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:50:25.614" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220516 17:50:20.492" endtime="20220516 17:50:25.614"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:50:25.615" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220516 17:50:25.614" endtime="20220516 17:50:25.615"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:50:25.616" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:50:25.615" endtime="20220516 17:50:25.616"/>
</kw>
<status status="PASS" starttime="20220516 17:50:20.491" endtime="20220516 17:50:25.616"/>
</kw>
<msg timestamp="20220516 17:50:25.616" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:50:20.491" endtime="20220516 17:50:25.618"/>
</kw>
<status status="PASS" starttime="20220516 17:50:20.490" endtime="20220516 17:50:25.619"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:50:25.623" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 52499-source 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:50:30.621" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:50:30.622" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220516 17:50:25.621" endtime="20220516 17:50:30.622"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:50:30.623" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220516 17:50:30.622" endtime="20220516 17:50:30.623"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:50:30.624" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:50:30.623" endtime="20220516 17:50:30.624"/>
</kw>
<status status="PASS" starttime="20220516 17:50:25.620" endtime="20220516 17:50:30.624"/>
</kw>
<msg timestamp="20220516 17:50:30.625" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:50:25.620" endtime="20220516 17:50:30.625"/>
</kw>
<status status="PASS" starttime="20220516 17:50:25.619" endtime="20220516 17:50:30.625"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:50:30.630" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 52499-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:50:35.326" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:50:35.326" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220516 17:50:30.628" endtime="20220516 17:50:35.327"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:50:35.328" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220516 17:50:35.327" endtime="20220516 17:50:35.328"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:50:35.329" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:50:35.328" endtime="20220516 17:50:35.329"/>
</kw>
<status status="PASS" starttime="20220516 17:50:30.627" endtime="20220516 17:50:35.329"/>
</kw>
<msg timestamp="20220516 17:50:35.329" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:50:30.626" endtime="20220516 17:50:35.330"/>
</kw>
<status status="PASS" starttime="20220516 17:50:30.626" endtime="20220516 17:50:35.331"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/readable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:50:35.335" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 52499-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:50:40.047" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:50:40.047" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220516 17:50:35.333" endtime="20220516 17:50:40.047"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:50:40.048" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220516 17:50:40.047" endtime="20220516 17:50:40.048"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:50:40.049" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:50:40.048" endtime="20220516 17:50:40.049"/>
</kw>
<status status="PASS" starttime="20220516 17:50:35.333" endtime="20220516 17:50:40.049"/>
</kw>
<msg timestamp="20220516 17:50:40.050" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:50:35.332" endtime="20220516 17:50:40.050"/>
</kw>
<status status="PASS" starttime="20220516 17:50:35.332" endtime="20220516 17:50:40.051"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:50:40.055" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 52499-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:50:44.625" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:50:44.625" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220516 17:50:40.052" endtime="20220516 17:50:44.625"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:50:44.626" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220516 17:50:44.625" endtime="20220516 17:50:44.626"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:50:44.627" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:50:44.627" endtime="20220516 17:50:44.627"/>
</kw>
<status status="PASS" starttime="20220516 17:50:40.052" endtime="20220516 17:50:44.628"/>
</kw>
<msg timestamp="20220516 17:50:44.628" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:50:40.051" endtime="20220516 17:50:44.629"/>
</kw>
<status status="PASS" starttime="20220516 17:50:40.051" endtime="20220516 17:50:44.629"/>
</kw>
<status status="PASS" starttime="20220516 17:49:45.509" endtime="20220516 17:50:44.629"/>
</kw>
<status status="PASS" starttime="20220516 17:49:45.508" endtime="20220516 17:50:44.629"/>
</kw>
<status status="PASS" starttime="20220516 17:49:35.518" endtime="20220516 17:50:44.629"/>
</kw>
<test id="s1-s1-s3-t1" name="Link to non-existent bucket">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:50:44.637" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:50:44.640" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:50:44.640" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220516 17:50:44.634" endtime="20220516 17:50:44.640"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:50:44.642" level="INFO">scm</msg>
<status status="PASS" starttime="20220516 17:50:44.641" endtime="20220516 17:50:44.642"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:50:44.643" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:50:44.642" endtime="20220516 17:50:44.643"/>
</kw>
<status status="PASS" starttime="20220516 17:50:44.634" endtime="20220516 17:50:44.644"/>
</kw>
<msg timestamp="20220516 17:50:44.644" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:50:44.633" endtime="20220516 17:50:44.645"/>
</kw>
<msg timestamp="20220516 17:50:44.645" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220516 17:50:44.632" endtime="20220516 17:50:44.645"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220516 17:50:44.648" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220516 17:50:44.645" endtime="20220516 17:50:44.648"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:50:44.655" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:50:44.666" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:50:44.666" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 17:50:44.652" endtime="20220516 17:50:44.666"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:50:44.668" level="INFO"/>
<status status="PASS" starttime="20220516 17:50:44.667" endtime="20220516 17:50:44.668"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:50:44.668" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:50:44.668" endtime="20220516 17:50:44.669"/>
</kw>
<status status="PASS" starttime="20220516 17:50:44.651" endtime="20220516 17:50:44.669"/>
</kw>
<msg timestamp="20220516 17:50:44.669" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:50:44.650" endtime="20220516 17:50:44.670"/>
</kw>
<status status="PASS" starttime="20220516 17:50:44.649" endtime="20220516 17:50:44.670"/>
</kw>
<status status="PASS" starttime="20220516 17:50:44.648" endtime="20220516 17:50:44.670"/>
</kw>
<status status="PASS" starttime="20220516 17:50:44.632" endtime="20220516 17:50:44.671"/>
</kw>
<status status="PASS" starttime="20220516 17:50:44.631" endtime="20220516 17:50:44.671"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:50:44.675" level="INFO">Running command 'ozone sh bucket link 52499-source/no-such-bucket 52499-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:50:49.719" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:50:49.720" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 17:50:44.673" endtime="20220516 17:50:49.720"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:50:49.721" level="INFO"/>
<status status="PASS" starttime="20220516 17:50:49.720" endtime="20220516 17:50:49.721"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:50:49.722" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:50:49.722" endtime="20220516 17:50:49.722"/>
</kw>
<status status="PASS" starttime="20220516 17:50:44.672" endtime="20220516 17:50:49.723"/>
</kw>
<msg timestamp="20220516 17:50:49.723" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:50:44.672" endtime="20220516 17:50:49.723"/>
</kw>
<status status="PASS" starttime="20220516 17:50:44.671" endtime="20220516 17:50:49.724"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/dangling-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:50:49.727" level="INFO">Running command 'ozone sh key list 52499-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:50:54.323" level="INFO">${rc} = 255</msg>
<msg timestamp="20220516 17:50:54.324" level="INFO">${output} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20220516 17:50:49.725" endtime="20220516 17:50:54.324"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:50:54.325" level="INFO">BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20220516 17:50:54.324" endtime="20220516 17:50:54.325"/>
</kw>
<msg timestamp="20220516 17:50:54.326" level="INFO">${result} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20220516 17:50:49.724" endtime="20220516 17:50:54.326"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 17:50:54.326" endtime="20220516 17:50:54.327"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220516 17:50:44.630" endtime="20220516 17:50:54.327"/>
</test>
<test id="s1-s1-s3-t2" name="Key create passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:50:54.334" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:50:54.339" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:50:54.339" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220516 17:50:54.332" endtime="20220516 17:50:54.340"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:50:54.341" level="INFO">scm</msg>
<status status="PASS" starttime="20220516 17:50:54.340" endtime="20220516 17:50:54.341"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:50:54.342" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:50:54.341" endtime="20220516 17:50:54.342"/>
</kw>
<status status="PASS" starttime="20220516 17:50:54.331" endtime="20220516 17:50:54.342"/>
</kw>
<msg timestamp="20220516 17:50:54.342" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:50:54.331" endtime="20220516 17:50:54.343"/>
</kw>
<msg timestamp="20220516 17:50:54.344" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220516 17:50:54.330" endtime="20220516 17:50:54.344"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220516 17:50:54.345" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220516 17:50:54.344" endtime="20220516 17:50:54.345"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:50:54.350" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:50:54.363" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:50:54.364" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 17:50:54.348" endtime="20220516 17:50:54.364"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:50:54.365" level="INFO"/>
<status status="PASS" starttime="20220516 17:50:54.364" endtime="20220516 17:50:54.365"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:50:54.366" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:50:54.365" endtime="20220516 17:50:54.366"/>
</kw>
<status status="PASS" starttime="20220516 17:50:54.347" endtime="20220516 17:50:54.367"/>
</kw>
<msg timestamp="20220516 17:50:54.367" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:50:54.347" endtime="20220516 17:50:54.367"/>
</kw>
<status status="PASS" starttime="20220516 17:50:54.346" endtime="20220516 17:50:54.368"/>
</kw>
<status status="PASS" starttime="20220516 17:50:54.345" endtime="20220516 17:50:54.368"/>
</kw>
<status status="PASS" starttime="20220516 17:50:54.329" endtime="20220516 17:50:54.368"/>
</kw>
<status status="PASS" starttime="20220516 17:50:54.329" endtime="20220516 17:50:54.368"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:50:54.372" level="INFO">Running command 'ozone sh bucket link 52499-source/bucket1 52499-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:50:59.770" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:50:59.770" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 17:50:54.370" endtime="20220516 17:50:59.771"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:50:59.772" level="INFO"/>
<status status="PASS" starttime="20220516 17:50:59.771" endtime="20220516 17:50:59.772"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:50:59.773" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:50:59.772" endtime="20220516 17:50:59.773"/>
</kw>
<status status="PASS" starttime="20220516 17:50:54.370" endtime="20220516 17:50:59.773"/>
</kw>
<msg timestamp="20220516 17:50:59.773" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:50:54.369" endtime="20220516 17:50:59.774"/>
</kw>
<status status="PASS" starttime="20220516 17:50:54.368" endtime="20220516 17:50:59.774"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:50:59.779" level="INFO">Running command 'ozone sh bucket create 52499-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:51:04.736" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:51:04.736" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 17:50:59.776" endtime="20220516 17:51:04.736"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:51:04.738" level="INFO"/>
<status status="PASS" starttime="20220516 17:51:04.737" endtime="20220516 17:51:04.738"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:51:04.739" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:51:04.738" endtime="20220516 17:51:04.739"/>
</kw>
<status status="PASS" starttime="20220516 17:50:59.776" endtime="20220516 17:51:04.739"/>
</kw>
<msg timestamp="20220516 17:51:04.740" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:50:59.775" endtime="20220516 17:51:04.740"/>
</kw>
<status status="PASS" starttime="20220516 17:50:59.775" endtime="20220516 17:51:04.740"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:51:04.754" level="INFO">Running command 'ozone sh key put 52499-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:51:15.424" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:51:15.424" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 17:51:04.743" endtime="20220516 17:51:15.425"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:51:15.426" level="INFO"/>
<status status="PASS" starttime="20220516 17:51:15.425" endtime="20220516 17:51:15.426"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:51:15.427" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:51:15.426" endtime="20220516 17:51:15.427"/>
</kw>
<status status="PASS" starttime="20220516 17:51:04.742" endtime="20220516 17:51:15.427"/>
</kw>
<msg timestamp="20220516 17:51:15.428" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:51:04.742" endtime="20220516 17:51:15.428"/>
</kw>
<status status="PASS" starttime="20220516 17:51:04.741" endtime="20220516 17:51:15.428"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220516 17:51:15.431" level="INFO">${postfix} = 12986</msg>
<status status="PASS" starttime="20220516 17:51:15.430" endtime="20220516 17:51:15.431"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220516 17:51:15.431" level="INFO">${tmpfile} = /tmp/tempkey-12986</msg>
<status status="PASS" starttime="20220516 17:51:15.431" endtime="20220516 17:51:15.431"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:51:15.436" level="INFO">Running command 'ozone sh key get 52499-target/link1/key1 /tmp/tempkey-12986 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:51:22.806" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:51:22.806" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 17:51:15.434" endtime="20220516 17:51:22.806"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:51:22.808" level="INFO"/>
<status status="PASS" starttime="20220516 17:51:22.807" endtime="20220516 17:51:22.808"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:51:22.808" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:51:22.808" endtime="20220516 17:51:22.809"/>
</kw>
<status status="PASS" starttime="20220516 17:51:15.433" endtime="20220516 17:51:22.809"/>
</kw>
<msg timestamp="20220516 17:51:22.809" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:51:15.432" endtime="20220516 17:51:22.810"/>
</kw>
<status status="PASS" starttime="20220516 17:51:15.432" endtime="20220516 17:51:22.810"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20220516 17:51:22.813" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-12986 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:51:22.816" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20220516 17:51:22.810" endtime="20220516 17:51:22.816"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:51:22.821" level="INFO">Running command 'rm -f /tmp/tempkey-12986 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:51:22.824" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:51:22.825" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 17:51:22.819" endtime="20220516 17:51:22.825"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:51:22.826" level="INFO"/>
<status status="PASS" starttime="20220516 17:51:22.825" endtime="20220516 17:51:22.826"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:51:22.827" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:51:22.826" endtime="20220516 17:51:22.827"/>
</kw>
<status status="PASS" starttime="20220516 17:51:22.819" endtime="20220516 17:51:22.827"/>
</kw>
<msg timestamp="20220516 17:51:22.827" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:51:22.818" endtime="20220516 17:51:22.828"/>
</kw>
<status status="PASS" starttime="20220516 17:51:22.817" endtime="20220516 17:51:22.828"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220516 17:51:22.829" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20220516 17:51:22.829" endtime="20220516 17:51:22.829"/>
</kw>
<msg timestamp="20220516 17:51:22.830" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20220516 17:51:15.429" endtime="20220516 17:51:22.830"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220516 17:51:22.830" endtime="20220516 17:51:22.830"/>
</kw>
<status status="PASS" starttime="20220516 17:51:15.428" endtime="20220516 17:51:22.830"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220516 17:50:54.328" endtime="20220516 17:51:22.831"/>
</test>
<test id="s1-s1-s3-t3" name="Key read passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:51:22.838" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:51:22.841" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:51:22.841" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220516 17:51:22.836" endtime="20220516 17:51:22.842"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:51:22.843" level="INFO">scm</msg>
<status status="PASS" starttime="20220516 17:51:22.842" endtime="20220516 17:51:22.843"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:51:22.844" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:51:22.843" endtime="20220516 17:51:22.844"/>
</kw>
<status status="PASS" starttime="20220516 17:51:22.835" endtime="20220516 17:51:22.844"/>
</kw>
<msg timestamp="20220516 17:51:22.845" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:51:22.835" endtime="20220516 17:51:22.845"/>
</kw>
<msg timestamp="20220516 17:51:22.846" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220516 17:51:22.834" endtime="20220516 17:51:22.846"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220516 17:51:22.847" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220516 17:51:22.846" endtime="20220516 17:51:22.847"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:51:22.852" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:51:22.861" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:51:22.861" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 17:51:22.849" endtime="20220516 17:51:22.861"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:51:22.862" level="INFO"/>
<status status="PASS" starttime="20220516 17:51:22.862" endtime="20220516 17:51:22.863"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:51:22.864" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:51:22.863" endtime="20220516 17:51:22.864"/>
</kw>
<status status="PASS" starttime="20220516 17:51:22.849" endtime="20220516 17:51:22.865"/>
</kw>
<msg timestamp="20220516 17:51:22.865" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:51:22.848" endtime="20220516 17:51:22.866"/>
</kw>
<status status="PASS" starttime="20220516 17:51:22.847" endtime="20220516 17:51:22.866"/>
</kw>
<status status="PASS" starttime="20220516 17:51:22.847" endtime="20220516 17:51:22.866"/>
</kw>
<status status="PASS" starttime="20220516 17:51:22.833" endtime="20220516 17:51:22.866"/>
</kw>
<status status="PASS" starttime="20220516 17:51:22.833" endtime="20220516 17:51:22.866"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:51:22.871" level="INFO">Running command 'ozone sh key put 52499-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:51:33.088" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:51:33.088" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 17:51:22.868" endtime="20220516 17:51:33.089"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:51:33.090" level="INFO"/>
<status status="PASS" starttime="20220516 17:51:33.089" endtime="20220516 17:51:33.090"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:51:33.091" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:51:33.090" endtime="20220516 17:51:33.091"/>
</kw>
<status status="PASS" starttime="20220516 17:51:22.868" endtime="20220516 17:51:33.091"/>
</kw>
<msg timestamp="20220516 17:51:33.091" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:51:22.867" endtime="20220516 17:51:33.092"/>
</kw>
<status status="PASS" starttime="20220516 17:51:22.867" endtime="20220516 17:51:33.092"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220516 17:51:33.096" level="INFO">${postfix} = 46402</msg>
<status status="PASS" starttime="20220516 17:51:33.095" endtime="20220516 17:51:33.096"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220516 17:51:33.097" level="INFO">${tmpfile} = /tmp/tempkey-46402</msg>
<status status="PASS" starttime="20220516 17:51:33.096" endtime="20220516 17:51:33.097"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:51:33.101" level="INFO">Running command 'ozone sh key get 52499-source/bucket1/key2 /tmp/tempkey-46402 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:51:40.872" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:51:40.873" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 17:51:33.099" endtime="20220516 17:51:40.873"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:51:40.874" level="INFO"/>
<status status="PASS" starttime="20220516 17:51:40.873" endtime="20220516 17:51:40.874"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:51:40.875" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:51:40.874" endtime="20220516 17:51:40.875"/>
</kw>
<status status="PASS" starttime="20220516 17:51:33.098" endtime="20220516 17:51:40.876"/>
</kw>
<msg timestamp="20220516 17:51:40.876" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:51:33.097" endtime="20220516 17:51:40.877"/>
</kw>
<status status="PASS" starttime="20220516 17:51:33.097" endtime="20220516 17:51:40.877"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20220516 17:51:40.880" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/tempkey-46402 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:51:40.883" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20220516 17:51:40.877" endtime="20220516 17:51:40.883"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:51:40.891" level="INFO">Running command 'rm -f /tmp/tempkey-46402 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:51:40.894" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:51:40.894" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 17:51:40.887" endtime="20220516 17:51:40.894"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:51:40.896" level="INFO"/>
<status status="PASS" starttime="20220516 17:51:40.895" endtime="20220516 17:51:40.896"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:51:40.896" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:51:40.896" endtime="20220516 17:51:40.897"/>
</kw>
<status status="PASS" starttime="20220516 17:51:40.885" endtime="20220516 17:51:40.897"/>
</kw>
<msg timestamp="20220516 17:51:40.897" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:51:40.884" endtime="20220516 17:51:40.898"/>
</kw>
<status status="PASS" starttime="20220516 17:51:40.883" endtime="20220516 17:51:40.898"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220516 17:51:40.899" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20220516 17:51:40.898" endtime="20220516 17:51:40.899"/>
</kw>
<msg timestamp="20220516 17:51:40.900" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20220516 17:51:33.093" endtime="20220516 17:51:40.900"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220516 17:51:40.900" endtime="20220516 17:51:40.900"/>
</kw>
<status status="PASS" starttime="20220516 17:51:33.092" endtime="20220516 17:51:40.900"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220516 17:51:22.832" endtime="20220516 17:51:40.901"/>
</test>
<test id="s1-s1-s3-t4" name="Key list passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:51:40.907" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:51:40.911" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:51:40.911" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220516 17:51:40.906" endtime="20220516 17:51:40.911"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:51:40.913" level="INFO">scm</msg>
<status status="PASS" starttime="20220516 17:51:40.912" endtime="20220516 17:51:40.913"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:51:40.913" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:51:40.913" endtime="20220516 17:51:40.914"/>
</kw>
<status status="PASS" starttime="20220516 17:51:40.905" endtime="20220516 17:51:40.914"/>
</kw>
<msg timestamp="20220516 17:51:40.914" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:51:40.905" endtime="20220516 17:51:40.915"/>
</kw>
<msg timestamp="20220516 17:51:40.915" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220516 17:51:40.904" endtime="20220516 17:51:40.916"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220516 17:51:40.916" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220516 17:51:40.916" endtime="20220516 17:51:40.916"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:51:40.921" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:51:40.930" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:51:40.930" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 17:51:40.919" endtime="20220516 17:51:40.930"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:51:40.931" level="INFO"/>
<status status="PASS" starttime="20220516 17:51:40.930" endtime="20220516 17:51:40.931"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:51:40.933" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:51:40.931" endtime="20220516 17:51:40.934"/>
</kw>
<status status="PASS" starttime="20220516 17:51:40.918" endtime="20220516 17:51:40.934"/>
</kw>
<msg timestamp="20220516 17:51:40.934" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:51:40.918" endtime="20220516 17:51:40.935"/>
</kw>
<status status="PASS" starttime="20220516 17:51:40.917" endtime="20220516 17:51:40.936"/>
</kw>
<status status="PASS" starttime="20220516 17:51:40.917" endtime="20220516 17:51:40.936"/>
</kw>
<status status="PASS" starttime="20220516 17:51:40.904" endtime="20220516 17:51:40.936"/>
</kw>
<status status="PASS" starttime="20220516 17:51:40.903" endtime="20220516 17:51:40.936"/>
</kw>
<kw name="Execute" library="os">
<var>${target_list}</var>
<arg>ozone sh key list ${target}/link1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:51:40.941" level="INFO">Running command 'ozone sh key list 52499-target/link1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:51:46.216" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:51:46.217" level="INFO">${output} = key1
key2</msg>
<status status="PASS" starttime="20220516 17:51:40.938" endtime="20220516 17:51:46.217"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:51:46.218" level="INFO">key1
key2</msg>
<status status="PASS" starttime="20220516 17:51:46.217" endtime="20220516 17:51:46.218"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:51:46.219" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:51:46.218" endtime="20220516 17:51:46.219"/>
</kw>
<status status="PASS" starttime="20220516 17:51:40.938" endtime="20220516 17:51:46.219"/>
</kw>
<msg timestamp="20220516 17:51:46.220" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:51:40.937" endtime="20220516 17:51:46.220"/>
</kw>
<msg timestamp="20220516 17:51:46.220" level="INFO">${target_list} = key1
key2</msg>
<status status="PASS" starttime="20220516 17:51:40.936" endtime="20220516 17:51:46.221"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:51:46.229" level="INFO">Running command 'ozone sh key list 52499-source/bucket1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:51:51.192" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:51:51.192" level="INFO">${output} = key1
key2</msg>
<status status="PASS" starttime="20220516 17:51:46.223" endtime="20220516 17:51:51.192"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:51:51.193" level="INFO">key1
key2</msg>
<status status="PASS" starttime="20220516 17:51:51.192" endtime="20220516 17:51:51.194"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:51:51.194" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:51:51.194" endtime="20220516 17:51:51.195"/>
</kw>
<status status="PASS" starttime="20220516 17:51:46.222" endtime="20220516 17:51:51.195"/>
</kw>
<msg timestamp="20220516 17:51:51.195" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:51:46.221" endtime="20220516 17:51:51.196"/>
</kw>
<msg timestamp="20220516 17:51:51.196" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" starttime="20220516 17:51:46.221" endtime="20220516 17:51:51.196"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${target_list}</arg>
<arg>${source_list}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220516 17:51:51.196" endtime="20220516 17:51:51.197"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 17:51:51.197" endtime="20220516 17:51:51.198"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 17:51:51.198" endtime="20220516 17:51:51.199"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220516 17:51:40.902" endtime="20220516 17:51:51.199"/>
</test>
<test id="s1-s1-s3-t5" name="Key delete passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:51:51.206" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:51:51.214" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:51:51.214" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220516 17:51:51.203" endtime="20220516 17:51:51.214"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:51:51.215" level="INFO">scm</msg>
<status status="PASS" starttime="20220516 17:51:51.214" endtime="20220516 17:51:51.215"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:51:51.216" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:51:51.216" endtime="20220516 17:51:51.217"/>
</kw>
<status status="PASS" starttime="20220516 17:51:51.203" endtime="20220516 17:51:51.217"/>
</kw>
<msg timestamp="20220516 17:51:51.217" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:51:51.203" endtime="20220516 17:51:51.218"/>
</kw>
<msg timestamp="20220516 17:51:51.218" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220516 17:51:51.202" endtime="20220516 17:51:51.218"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220516 17:51:51.219" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220516 17:51:51.218" endtime="20220516 17:51:51.219"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:51:51.223" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:51:51.233" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:51:51.233" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 17:51:51.221" endtime="20220516 17:51:51.233"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:51:51.234" level="INFO"/>
<status status="PASS" starttime="20220516 17:51:51.233" endtime="20220516 17:51:51.234"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:51:51.235" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:51:51.235" endtime="20220516 17:51:51.236"/>
</kw>
<status status="PASS" starttime="20220516 17:51:51.221" endtime="20220516 17:51:51.236"/>
</kw>
<msg timestamp="20220516 17:51:51.236" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:51:51.220" endtime="20220516 17:51:51.237"/>
</kw>
<status status="PASS" starttime="20220516 17:51:51.220" endtime="20220516 17:51:51.237"/>
</kw>
<status status="PASS" starttime="20220516 17:51:51.219" endtime="20220516 17:51:51.237"/>
</kw>
<status status="PASS" starttime="20220516 17:51:51.201" endtime="20220516 17:51:51.237"/>
</kw>
<status status="PASS" starttime="20220516 17:51:51.201" endtime="20220516 17:51:51.238"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${target}/link1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:51:51.242" level="INFO">Running command 'ozone sh key delete 52499-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:51:56.155" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:51:56.155" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 17:51:51.240" endtime="20220516 17:51:56.155"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:51:56.159" level="INFO"/>
<status status="PASS" starttime="20220516 17:51:56.156" endtime="20220516 17:51:56.160"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:51:56.161" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:51:56.160" endtime="20220516 17:51:56.161"/>
</kw>
<status status="PASS" starttime="20220516 17:51:51.239" endtime="20220516 17:51:56.161"/>
</kw>
<msg timestamp="20220516 17:51:56.161" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:51:51.239" endtime="20220516 17:51:56.162"/>
</kw>
<status status="PASS" starttime="20220516 17:51:51.238" endtime="20220516 17:51:56.162"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:51:56.170" level="INFO">Running command 'ozone sh key list 52499-source/bucket1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:52:01.430" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:52:01.430" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20220516 17:51:56.165" endtime="20220516 17:52:01.430"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:52:01.432" level="INFO">key1</msg>
<status status="PASS" starttime="20220516 17:52:01.431" endtime="20220516 17:52:01.432"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:52:01.433" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:52:01.432" endtime="20220516 17:52:01.433"/>
</kw>
<status status="PASS" starttime="20220516 17:51:56.163" endtime="20220516 17:52:01.433"/>
</kw>
<msg timestamp="20220516 17:52:01.434" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:51:56.163" endtime="20220516 17:52:01.434"/>
</kw>
<msg timestamp="20220516 17:52:01.435" level="INFO">${source_list} = key1</msg>
<status status="PASS" starttime="20220516 17:51:56.162" endtime="20220516 17:52:01.435"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 17:52:01.435" endtime="20220516 17:52:01.436"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220516 17:51:51.200" endtime="20220516 17:52:01.436"/>
</test>
<test id="s1-s1-s3-t6" name="Bucket list contains links">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:52:01.445" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:52:01.449" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:52:01.449" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220516 17:52:01.442" endtime="20220516 17:52:01.449"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:52:01.450" level="INFO">scm</msg>
<status status="PASS" starttime="20220516 17:52:01.449" endtime="20220516 17:52:01.450"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:52:01.451" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:52:01.450" endtime="20220516 17:52:01.451"/>
</kw>
<status status="PASS" starttime="20220516 17:52:01.441" endtime="20220516 17:52:01.451"/>
</kw>
<msg timestamp="20220516 17:52:01.451" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:52:01.441" endtime="20220516 17:52:01.452"/>
</kw>
<msg timestamp="20220516 17:52:01.452" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220516 17:52:01.440" endtime="20220516 17:52:01.453"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220516 17:52:01.453" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220516 17:52:01.453" endtime="20220516 17:52:01.454"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:52:01.458" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:52:01.466" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:52:01.466" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 17:52:01.456" endtime="20220516 17:52:01.467"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:52:01.468" level="INFO"/>
<status status="PASS" starttime="20220516 17:52:01.467" endtime="20220516 17:52:01.468"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:52:01.469" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:52:01.468" endtime="20220516 17:52:01.469"/>
</kw>
<status status="PASS" starttime="20220516 17:52:01.456" endtime="20220516 17:52:01.470"/>
</kw>
<msg timestamp="20220516 17:52:01.470" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:52:01.455" endtime="20220516 17:52:01.470"/>
</kw>
<status status="PASS" starttime="20220516 17:52:01.454" endtime="20220516 17:52:01.471"/>
</kw>
<status status="PASS" starttime="20220516 17:52:01.454" endtime="20220516 17:52:01.471"/>
</kw>
<status status="PASS" starttime="20220516 17:52:01.439" endtime="20220516 17:52:01.471"/>
</kw>
<status status="PASS" starttime="20220516 17:52:01.439" endtime="20220516 17:52:01.471"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:52:01.475" level="INFO">Running command 'ozone sh bucket list 52499-target 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:52:06.628" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:52:06.628" level="INFO">${output} = [ {
  "metadata" : { },
  "volumeName" : "52499-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "202...</msg>
<status status="PASS" starttime="20220516 17:52:01.473" endtime="20220516 17:52:06.628"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:52:06.630" level="INFO">[ {
  "metadata" : { },
  "volumeName" : "52499-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-05-16T17:50:49.463Z",
  "modificationTime" : "2022-05-16T17:50:49.463Z",
  "sourceVolume" : "52499-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY",
  "owner" : "testuser",
  "link" : true
}, {
  "metadata" : { },
  "volumeName" : "52499-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-05-16T17:50:20.366Z",
  "modificationTime" : "2022-05-16T17:50:44.559Z",
  "sourceVolume" : "52499-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY",
  "owner" : "testuser",
  "link" : true
}, {
  "metadata" : { },
  "volumeName" : "52499-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-05-16T17:50:59.520Z",
  "modificationTime" : "2022-05-16T17:50:59.520Z",
  "sourceVolume" : "52499-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY",
  "owner" : "testuser",
  "link" : true
}, {
  "metadata" : { },
  "volumeName" : "52499-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-05-16T17:50:10.750Z",
  "modificationTime" : "2022-05-16T17:50:39.973Z",
  "sourceVolume" : "52499-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY",
  "owner" : "testuser",
  "link" : true
}, {
  "metadata" : { },
  "volumeName" : "52499-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-05-16T17:50:15.245Z",
  "modificationTime" : "2022-05-16T17:50:15.245Z",
  "sourceVolume" : "52499-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY",
  "owner" : "testuser",
  "link" : true
} ]</msg>
<status status="PASS" starttime="20220516 17:52:06.629" endtime="20220516 17:52:06.630"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:52:06.630" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:52:06.630" endtime="20220516 17:52:06.631"/>
</kw>
<status status="PASS" starttime="20220516 17:52:01.472" endtime="20220516 17:52:06.631"/>
</kw>
<msg timestamp="20220516 17:52:06.631" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:52:01.472" endtime="20220516 17:52:06.632"/>
</kw>
<msg timestamp="20220516 17:52:06.632" level="INFO">${result} = [ {
  "metadata" : { },
  "volumeName" : "52499-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "202...</msg>
<status status="PASS" starttime="20220516 17:52:01.471" endtime="20220516 17:52:06.632"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 17:52:06.633" endtime="20220516 17:52:06.633"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dangling-link</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 17:52:06.633" endtime="20220516 17:52:06.634"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220516 17:52:01.437" endtime="20220516 17:52:06.635"/>
</test>
<test id="s1-s1-s3-t7" name="Bucket info shows source">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:52:06.642" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:52:06.646" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:52:06.647" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220516 17:52:06.639" endtime="20220516 17:52:06.647"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:52:06.648" level="INFO">scm</msg>
<status status="PASS" starttime="20220516 17:52:06.647" endtime="20220516 17:52:06.648"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:52:06.649" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:52:06.648" endtime="20220516 17:52:06.649"/>
</kw>
<status status="PASS" starttime="20220516 17:52:06.639" endtime="20220516 17:52:06.649"/>
</kw>
<msg timestamp="20220516 17:52:06.650" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:52:06.638" endtime="20220516 17:52:06.650"/>
</kw>
<msg timestamp="20220516 17:52:06.651" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220516 17:52:06.638" endtime="20220516 17:52:06.651"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220516 17:52:06.651" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220516 17:52:06.651" endtime="20220516 17:52:06.652"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:52:06.656" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:52:06.735" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:52:06.735" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 17:52:06.654" endtime="20220516 17:52:06.735"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:52:06.736" level="INFO"/>
<status status="PASS" starttime="20220516 17:52:06.735" endtime="20220516 17:52:06.736"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:52:06.737" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:52:06.736" endtime="20220516 17:52:06.737"/>
</kw>
<status status="PASS" starttime="20220516 17:52:06.654" endtime="20220516 17:52:06.738"/>
</kw>
<msg timestamp="20220516 17:52:06.738" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:52:06.653" endtime="20220516 17:52:06.739"/>
</kw>
<status status="PASS" starttime="20220516 17:52:06.652" endtime="20220516 17:52:06.739"/>
</kw>
<status status="PASS" starttime="20220516 17:52:06.652" endtime="20220516 17:52:06.739"/>
</kw>
<status status="PASS" starttime="20220516 17:52:06.637" endtime="20220516 17:52:06.739"/>
</kw>
<status status="PASS" starttime="20220516 17:52:06.636" endtime="20220516 17:52:06.739"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:52:06.744" level="INFO">Running command 'ozone sh bucket info 52499-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:52:11.905" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:52:11.905" level="INFO">${output} = {
  "volumeName" : "52499-target",
  "bucketName" : "link1",
  "sourceVolume" : "52499-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2022-05-16T17:50:59.520Z",
  "modificationTime" : "202...</msg>
<status status="PASS" starttime="20220516 17:52:06.741" endtime="20220516 17:52:11.905"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:52:11.907" level="INFO">{
  "volumeName" : "52499-target",
  "bucketName" : "link1",
  "sourceVolume" : "52499-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2022-05-16T17:50:59.520Z",
  "modificationTime" : "2022-05-16T17:50:59.520Z",
  "owner" : "testuser"
}</msg>
<status status="PASS" starttime="20220516 17:52:11.906" endtime="20220516 17:52:11.907"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:52:11.908" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:52:11.907" endtime="20220516 17:52:11.908"/>
</kw>
<status status="PASS" starttime="20220516 17:52:06.741" endtime="20220516 17:52:11.908"/>
</kw>
<msg timestamp="20220516 17:52:11.908" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:52:06.740" endtime="20220516 17:52:11.909"/>
</kw>
<msg timestamp="20220516 17:52:11.909" level="INFO">${result} = {
  "volumeName" : "52499-target",
  "bucketName" : "link1",
  "sourceVolume" : "52499-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2022-05-16T17:50:59.520Z",
  "modificationTime" : "202...</msg>
<status status="PASS" starttime="20220516 17:52:06.740" endtime="20220516 17:52:11.909"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${source}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 17:52:11.910" endtime="20220516 17:52:11.910"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bucket1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 17:52:11.910" endtime="20220516 17:52:11.911"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${target}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 17:52:11.911" endtime="20220516 17:52:11.912"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 17:52:11.912" endtime="20220516 17:52:11.912"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>modificationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 17:52:11.913" endtime="20220516 17:52:11.913"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 17:52:11.913" endtime="20220516 17:52:11.914"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>metadata</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 17:52:11.914" endtime="20220516 17:52:11.915"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220516 17:52:06.636" endtime="20220516 17:52:11.916"/>
</test>
<test id="s1-s1-s3-t8" name="Source and target have separate ACLs">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:52:11.923" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:52:11.928" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:52:11.928" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220516 17:52:11.920" endtime="20220516 17:52:11.928"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:52:11.929" level="INFO">scm</msg>
<status status="PASS" starttime="20220516 17:52:11.928" endtime="20220516 17:52:11.929"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:52:11.930" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:52:11.929" endtime="20220516 17:52:11.930"/>
</kw>
<status status="PASS" starttime="20220516 17:52:11.920" endtime="20220516 17:52:11.930"/>
</kw>
<msg timestamp="20220516 17:52:11.930" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:52:11.919" endtime="20220516 17:52:11.931"/>
</kw>
<msg timestamp="20220516 17:52:11.931" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220516 17:52:11.919" endtime="20220516 17:52:11.931"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220516 17:52:11.932" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220516 17:52:11.932" endtime="20220516 17:52:11.932"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:52:11.938" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:52:11.947" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:52:11.947" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 17:52:11.935" endtime="20220516 17:52:11.947"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:52:11.948" level="INFO"/>
<status status="PASS" starttime="20220516 17:52:11.947" endtime="20220516 17:52:11.948"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:52:11.949" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:52:11.948" endtime="20220516 17:52:11.949"/>
</kw>
<status status="PASS" starttime="20220516 17:52:11.934" endtime="20220516 17:52:11.949"/>
</kw>
<msg timestamp="20220516 17:52:11.949" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:52:11.934" endtime="20220516 17:52:11.950"/>
</kw>
<status status="PASS" starttime="20220516 17:52:11.933" endtime="20220516 17:52:11.950"/>
</kw>
<status status="PASS" starttime="20220516 17:52:11.932" endtime="20220516 17:52:11.951"/>
</kw>
<status status="PASS" starttime="20220516 17:52:11.918" endtime="20220516 17:52:11.951"/>
</kw>
<status status="PASS" starttime="20220516 17:52:11.918" endtime="20220516 17:52:11.951"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:52:11.955" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 52499-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:52:16.677" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:52:16.677" level="INFO">${output} = ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220516 17:52:11.953" endtime="20220516 17:52:16.678"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:52:16.679" level="INFO">ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220516 17:52:16.678" endtime="20220516 17:52:16.679"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:52:16.680" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:52:16.679" endtime="20220516 17:52:16.680"/>
</kw>
<status status="PASS" starttime="20220516 17:52:11.952" endtime="20220516 17:52:16.680"/>
</kw>
<msg timestamp="20220516 17:52:16.680" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:52:11.952" endtime="20220516 17:52:16.681"/>
</kw>
<status status="PASS" starttime="20220516 17:52:11.951" endtime="20220516 17:52:16.681"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:52:16.688" level="INFO">Running command 'ozone sh bucket getacl 52499-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:52:21.851" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:52:21.851" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20220516 17:52:16.685" endtime="20220516 17:52:21.851"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:52:21.853" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20220516 17:52:21.852" endtime="20220516 17:52:21.853"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:52:21.854" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:52:21.853" endtime="20220516 17:52:21.854"/>
</kw>
<status status="PASS" starttime="20220516 17:52:16.684" endtime="20220516 17:52:21.854"/>
</kw>
<msg timestamp="20220516 17:52:21.855" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:52:16.683" endtime="20220516 17:52:21.856"/>
</kw>
<msg timestamp="20220516 17:52:21.856" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20220516 17:52:16.683" endtime="20220516 17:52:21.856"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220516 17:52:21.857" endtime="20220516 17:52:21.858"/>
</kw>
<status status="PASS" starttime="20220516 17:52:16.682" endtime="20220516 17:52:21.858"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:52:21.869" level="INFO">Running command 'ozone sh bucket getacl 52499-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:52:26.853" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:52:26.853" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 17:52:21.866" endtime="20220516 17:52:26.854"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:52:26.855" level="INFO"/>
<status status="PASS" starttime="20220516 17:52:26.854" endtime="20220516 17:52:26.855"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:52:26.856" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:52:26.855" endtime="20220516 17:52:26.856"/>
</kw>
<status status="PASS" starttime="20220516 17:52:21.865" endtime="20220516 17:52:26.856"/>
</kw>
<msg timestamp="20220516 17:52:26.856" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:52:21.864" endtime="20220516 17:52:26.857"/>
</kw>
<msg timestamp="20220516 17:52:26.857" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20220516 17:52:21.862" endtime="20220516 17:52:26.857"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220516 17:52:26.858" endtime="20220516 17:52:26.858"/>
</kw>
<status status="PASS" starttime="20220516 17:52:21.859" endtime="20220516 17:52:26.859"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:52:26.863" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 52499-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:52:31.704" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:52:31.704" level="INFO">${output} = ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220516 17:52:26.861" endtime="20220516 17:52:31.704"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:52:31.705" level="INFO">ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220516 17:52:31.705" endtime="20220516 17:52:31.706"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:52:31.706" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:52:31.706" endtime="20220516 17:52:31.706"/>
</kw>
<status status="PASS" starttime="20220516 17:52:26.860" endtime="20220516 17:52:31.707"/>
</kw>
<msg timestamp="20220516 17:52:31.707" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:52:26.859" endtime="20220516 17:52:31.707"/>
</kw>
<status status="PASS" starttime="20220516 17:52:26.859" endtime="20220516 17:52:31.708"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:52:31.714" level="INFO">Running command 'ozone sh bucket getacl 52499-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:52:36.603" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:52:36.603" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 17:52:31.712" endtime="20220516 17:52:36.603"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:52:36.604" level="INFO"/>
<status status="PASS" starttime="20220516 17:52:36.603" endtime="20220516 17:52:36.605"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:52:36.605" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:52:36.605" endtime="20220516 17:52:36.605"/>
</kw>
<status status="PASS" starttime="20220516 17:52:31.711" endtime="20220516 17:52:36.606"/>
</kw>
<msg timestamp="20220516 17:52:36.606" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:52:31.711" endtime="20220516 17:52:36.607"/>
</kw>
<msg timestamp="20220516 17:52:36.607" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20220516 17:52:31.710" endtime="20220516 17:52:36.607"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220516 17:52:36.607" endtime="20220516 17:52:36.608"/>
</kw>
<status status="PASS" starttime="20220516 17:52:31.708" endtime="20220516 17:52:36.608"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:52:36.614" level="INFO">Running command 'ozone sh bucket getacl 52499-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:52:42.119" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:52:42.119" level="INFO">${output} = READ</msg>
<status status="PASS" starttime="20220516 17:52:36.612" endtime="20220516 17:52:42.119"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:52:42.120" level="INFO">READ</msg>
<status status="PASS" starttime="20220516 17:52:42.119" endtime="20220516 17:52:42.121"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:52:42.121" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:52:42.121" endtime="20220516 17:52:42.122"/>
</kw>
<status status="PASS" starttime="20220516 17:52:36.611" endtime="20220516 17:52:42.122"/>
</kw>
<msg timestamp="20220516 17:52:42.122" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:52:36.611" endtime="20220516 17:52:42.123"/>
</kw>
<msg timestamp="20220516 17:52:42.123" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" starttime="20220516 17:52:36.609" endtime="20220516 17:52:42.123"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220516 17:52:42.123" endtime="20220516 17:52:42.124"/>
</kw>
<status status="PASS" starttime="20220516 17:52:36.608" endtime="20220516 17:52:42.124"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220516 17:52:11.917" endtime="20220516 17:52:42.124"/>
</test>
<test id="s1-s1-s3-t9" name="Buckets and links share namespace">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:52:42.131" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:52:42.135" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:52:42.135" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220516 17:52:42.129" endtime="20220516 17:52:42.135"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:52:42.136" level="INFO">scm</msg>
<status status="PASS" starttime="20220516 17:52:42.136" endtime="20220516 17:52:42.137"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:52:42.137" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:52:42.137" endtime="20220516 17:52:42.138"/>
</kw>
<status status="PASS" starttime="20220516 17:52:42.128" endtime="20220516 17:52:42.138"/>
</kw>
<msg timestamp="20220516 17:52:42.138" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:52:42.128" endtime="20220516 17:52:42.139"/>
</kw>
<msg timestamp="20220516 17:52:42.139" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220516 17:52:42.127" endtime="20220516 17:52:42.139"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220516 17:52:42.140" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220516 17:52:42.139" endtime="20220516 17:52:42.140"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:52:42.145" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:52:42.154" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:52:42.154" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 17:52:42.143" endtime="20220516 17:52:42.154"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:52:42.155" level="INFO"/>
<status status="PASS" starttime="20220516 17:52:42.155" endtime="20220516 17:52:42.156"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:52:42.156" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:52:42.156" endtime="20220516 17:52:42.156"/>
</kw>
<status status="PASS" starttime="20220516 17:52:42.142" endtime="20220516 17:52:42.157"/>
</kw>
<msg timestamp="20220516 17:52:42.157" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:52:42.142" endtime="20220516 17:52:42.157"/>
</kw>
<status status="PASS" starttime="20220516 17:52:42.141" endtime="20220516 17:52:42.158"/>
</kw>
<status status="PASS" starttime="20220516 17:52:42.140" endtime="20220516 17:52:42.158"/>
</kw>
<status status="PASS" starttime="20220516 17:52:42.127" endtime="20220516 17:52:42.158"/>
</kw>
<status status="PASS" starttime="20220516 17:52:42.126" endtime="20220516 17:52:42.158"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:52:42.163" level="INFO">Running command 'ozone sh bucket link 52499-source/bucket2 52499-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:52:46.995" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:52:46.995" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 17:52:42.160" endtime="20220516 17:52:46.995"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:52:46.997" level="INFO"/>
<status status="PASS" starttime="20220516 17:52:46.996" endtime="20220516 17:52:46.997"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:52:46.998" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:52:46.997" endtime="20220516 17:52:46.998"/>
</kw>
<status status="PASS" starttime="20220516 17:52:42.160" endtime="20220516 17:52:46.998"/>
</kw>
<msg timestamp="20220516 17:52:46.998" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:52:42.159" endtime="20220516 17:52:46.999"/>
</kw>
<status status="PASS" starttime="20220516 17:52:42.159" endtime="20220516 17:52:46.999"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${target}/link2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:52:47.003" level="INFO">Running command 'ozone sh bucket create 52499-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:52:52.061" level="INFO">${rc} = 255</msg>
<msg timestamp="20220516 17:52:52.061" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20220516 17:52:47.001" endtime="20220516 17:52:52.061"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:52:52.063" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20220516 17:52:52.062" endtime="20220516 17:52:52.063"/>
</kw>
<msg timestamp="20220516 17:52:52.063" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20220516 17:52:47.000" endtime="20220516 17:52:52.063"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 17:52:52.064" endtime="20220516 17:52:52.064"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${target}/bucket3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:52:52.069" level="INFO">Running command 'ozone sh bucket create 52499-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:52:56.804" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:52:56.804" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 17:52:52.067" endtime="20220516 17:52:56.804"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:52:56.806" level="INFO"/>
<status status="PASS" starttime="20220516 17:52:56.805" endtime="20220516 17:52:56.806"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:52:56.807" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:52:56.806" endtime="20220516 17:52:56.807"/>
</kw>
<status status="PASS" starttime="20220516 17:52:52.066" endtime="20220516 17:52:56.807"/>
</kw>
<msg timestamp="20220516 17:52:56.808" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:52:52.065" endtime="20220516 17:52:56.808"/>
</kw>
<status status="PASS" starttime="20220516 17:52:52.064" endtime="20220516 17:52:56.809"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:52:56.812" level="INFO">Running command 'ozone sh bucket link 52499-source/bucket1 52499-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:53:01.617" level="INFO">${rc} = 255</msg>
<msg timestamp="20220516 17:53:01.617" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20220516 17:52:56.810" endtime="20220516 17:53:01.617"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:53:01.619" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20220516 17:53:01.618" endtime="20220516 17:53:01.619"/>
</kw>
<msg timestamp="20220516 17:53:01.619" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20220516 17:52:56.809" endtime="20220516 17:53:01.620"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 17:53:01.620" endtime="20220516 17:53:01.620"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220516 17:52:42.125" endtime="20220516 17:53:01.621"/>
</test>
<test id="s1-s1-s3-t10" name="Can follow link with read access">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:53:01.629" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:53:01.633" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:53:01.633" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220516 17:53:01.627" endtime="20220516 17:53:01.633"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:53:01.634" level="INFO">scm</msg>
<status status="PASS" starttime="20220516 17:53:01.633" endtime="20220516 17:53:01.634"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:53:01.635" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:53:01.635" endtime="20220516 17:53:01.635"/>
</kw>
<status status="PASS" starttime="20220516 17:53:01.626" endtime="20220516 17:53:01.636"/>
</kw>
<msg timestamp="20220516 17:53:01.636" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:53:01.625" endtime="20220516 17:53:01.636"/>
</kw>
<msg timestamp="20220516 17:53:01.637" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220516 17:53:01.625" endtime="20220516 17:53:01.637"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220516 17:53:01.638" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220516 17:53:01.637" endtime="20220516 17:53:01.638"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:53:01.642" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:53:01.651" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:53:01.651" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 17:53:01.641" endtime="20220516 17:53:01.651"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:53:01.653" level="INFO"/>
<status status="PASS" starttime="20220516 17:53:01.652" endtime="20220516 17:53:01.653"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:53:01.654" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:53:01.653" endtime="20220516 17:53:01.654"/>
</kw>
<status status="PASS" starttime="20220516 17:53:01.640" endtime="20220516 17:53:01.654"/>
</kw>
<msg timestamp="20220516 17:53:01.654" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:53:01.639" endtime="20220516 17:53:01.655"/>
</kw>
<status status="PASS" starttime="20220516 17:53:01.638" endtime="20220516 17:53:01.655"/>
</kw>
<status status="PASS" starttime="20220516 17:53:01.638" endtime="20220516 17:53:01.655"/>
</kw>
<status status="PASS" starttime="20220516 17:53:01.624" endtime="20220516 17:53:01.655"/>
</kw>
<status status="PASS" starttime="20220516 17:53:01.623" endtime="20220516 17:53:01.655"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:53:01.667" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:53:01.675" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:53:01.675" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 17:53:01.665" endtime="20220516 17:53:01.675"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:53:01.678" level="INFO"/>
<status status="PASS" starttime="20220516 17:53:01.677" endtime="20220516 17:53:01.678"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:53:01.679" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:53:01.678" endtime="20220516 17:53:01.679"/>
</kw>
<status status="PASS" starttime="20220516 17:53:01.664" endtime="20220516 17:53:01.679"/>
</kw>
<msg timestamp="20220516 17:53:01.679" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:53:01.664" endtime="20220516 17:53:01.680"/>
</kw>
<status status="PASS" starttime="20220516 17:53:01.663" endtime="20220516 17:53:01.680"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:53:01.692" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:53:01.695" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:53:01.695" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220516 17:53:01.686" endtime="20220516 17:53:01.695"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:53:01.696" level="INFO">scm</msg>
<status status="PASS" starttime="20220516 17:53:01.696" endtime="20220516 17:53:01.696"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:53:01.697" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:53:01.697" endtime="20220516 17:53:01.697"/>
</kw>
<status status="PASS" starttime="20220516 17:53:01.685" endtime="20220516 17:53:01.698"/>
</kw>
<msg timestamp="20220516 17:53:01.698" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:53:01.683" endtime="20220516 17:53:01.699"/>
</kw>
<msg timestamp="20220516 17:53:01.699" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220516 17:53:01.682" endtime="20220516 17:53:01.699"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220516 17:53:01.700" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220516 17:53:01.699" endtime="20220516 17:53:01.700"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:53:01.707" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:53:01.715" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:53:01.716" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 17:53:01.703" endtime="20220516 17:53:01.716"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:53:01.717" level="INFO"/>
<status status="PASS" starttime="20220516 17:53:01.716" endtime="20220516 17:53:01.717"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:53:01.718" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:53:01.717" endtime="20220516 17:53:01.718"/>
</kw>
<status status="PASS" starttime="20220516 17:53:01.702" endtime="20220516 17:53:01.719"/>
</kw>
<msg timestamp="20220516 17:53:01.719" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:53:01.702" endtime="20220516 17:53:01.719"/>
</kw>
<status status="PASS" starttime="20220516 17:53:01.701" endtime="20220516 17:53:01.720"/>
</kw>
<status status="PASS" starttime="20220516 17:53:01.700" endtime="20220516 17:53:01.720"/>
</kw>
<status status="PASS" starttime="20220516 17:53:01.681" endtime="20220516 17:53:01.720"/>
</kw>
<status status="PASS" starttime="20220516 17:53:01.680" endtime="20220516 17:53:01.720"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/readable-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:53:01.724" level="INFO">Running command 'ozone sh key list 52499-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:53:06.828" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:53:06.828" level="INFO">${output} = [ {
  "volumeName" : "52499-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2022-05-16T17:49:55.256Z",
  "modificationTime" : ...</msg>
<status status="PASS" starttime="20220516 17:53:01.721" endtime="20220516 17:53:06.828"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:53:06.829" level="INFO">[ {
  "volumeName" : "52499-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2022-05-16T17:49:55.256Z",
  "modificationTime" : "2022-05-16T17:50:00.299Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  }
} ]</msg>
<status status="PASS" starttime="20220516 17:53:06.828" endtime="20220516 17:53:06.829"/>
</kw>
<msg timestamp="20220516 17:53:06.830" level="INFO">${result} = [ {
  "volumeName" : "52499-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2022-05-16T17:49:55.256Z",
  "modificationTime" : ...</msg>
<status status="PASS" starttime="20220516 17:53:01.720" endtime="20220516 17:53:06.830"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 17:53:06.830" endtime="20220516 17:53:06.831"/>
</kw>
<status status="PASS" starttime="20220516 17:53:01.663" endtime="20220516 17:53:06.831"/>
</kw>
<status status="PASS" starttime="20220516 17:53:01.656" endtime="20220516 17:53:06.831"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220516 17:53:01.622" endtime="20220516 17:53:06.831"/>
</test>
<test id="s1-s1-s3-t11" name="Cannot follow link without read access">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:53:06.838" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:53:06.842" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:53:06.842" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220516 17:53:06.836" endtime="20220516 17:53:06.842"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:53:06.843" level="INFO">scm</msg>
<status status="PASS" starttime="20220516 17:53:06.842" endtime="20220516 17:53:06.843"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:53:06.844" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:53:06.844" endtime="20220516 17:53:06.844"/>
</kw>
<status status="PASS" starttime="20220516 17:53:06.835" endtime="20220516 17:53:06.845"/>
</kw>
<msg timestamp="20220516 17:53:06.845" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:53:06.835" endtime="20220516 17:53:06.846"/>
</kw>
<msg timestamp="20220516 17:53:06.846" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220516 17:53:06.834" endtime="20220516 17:53:06.846"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220516 17:53:06.847" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220516 17:53:06.846" endtime="20220516 17:53:06.847"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:53:06.853" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:53:06.860" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:53:06.860" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 17:53:06.850" endtime="20220516 17:53:06.861"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:53:06.862" level="INFO"/>
<status status="PASS" starttime="20220516 17:53:06.861" endtime="20220516 17:53:06.862"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:53:06.863" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:53:06.862" endtime="20220516 17:53:06.863"/>
</kw>
<status status="PASS" starttime="20220516 17:53:06.849" endtime="20220516 17:53:06.863"/>
</kw>
<msg timestamp="20220516 17:53:06.863" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:53:06.849" endtime="20220516 17:53:06.864"/>
</kw>
<status status="PASS" starttime="20220516 17:53:06.848" endtime="20220516 17:53:06.864"/>
</kw>
<status status="PASS" starttime="20220516 17:53:06.847" endtime="20220516 17:53:06.864"/>
</kw>
<status status="PASS" starttime="20220516 17:53:06.834" endtime="20220516 17:53:06.864"/>
</kw>
<status status="PASS" starttime="20220516 17:53:06.833" endtime="20220516 17:53:06.865"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:53:06.870" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:53:06.874" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:53:06.874" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 17:53:06.867" endtime="20220516 17:53:06.874"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:53:06.875" level="INFO"/>
<status status="PASS" starttime="20220516 17:53:06.874" endtime="20220516 17:53:06.875"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:53:06.876" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:53:06.875" endtime="20220516 17:53:06.876"/>
</kw>
<status status="PASS" starttime="20220516 17:53:06.867" endtime="20220516 17:53:06.877"/>
</kw>
<msg timestamp="20220516 17:53:06.877" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:53:06.866" endtime="20220516 17:53:06.877"/>
</kw>
<status status="PASS" starttime="20220516 17:53:06.866" endtime="20220516 17:53:06.878"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:53:06.883" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:53:06.886" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:53:06.886" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220516 17:53:06.881" endtime="20220516 17:53:06.886"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:53:06.888" level="INFO">scm</msg>
<status status="PASS" starttime="20220516 17:53:06.887" endtime="20220516 17:53:06.888"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:53:06.889" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:53:06.888" endtime="20220516 17:53:06.889"/>
</kw>
<status status="PASS" starttime="20220516 17:53:06.880" endtime="20220516 17:53:06.889"/>
</kw>
<msg timestamp="20220516 17:53:06.889" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:53:06.879" endtime="20220516 17:53:06.890"/>
</kw>
<msg timestamp="20220516 17:53:06.891" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220516 17:53:06.879" endtime="20220516 17:53:06.891"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220516 17:53:06.892" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220516 17:53:06.891" endtime="20220516 17:53:06.892"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:53:06.896" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:53:06.904" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:53:06.904" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 17:53:06.894" endtime="20220516 17:53:06.904"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:53:06.905" level="INFO"/>
<status status="PASS" starttime="20220516 17:53:06.904" endtime="20220516 17:53:06.905"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:53:06.906" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:53:06.905" endtime="20220516 17:53:06.906"/>
</kw>
<status status="PASS" starttime="20220516 17:53:06.893" endtime="20220516 17:53:06.906"/>
</kw>
<msg timestamp="20220516 17:53:06.906" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:53:06.893" endtime="20220516 17:53:06.907"/>
</kw>
<status status="PASS" starttime="20220516 17:53:06.892" endtime="20220516 17:53:06.907"/>
</kw>
<status status="PASS" starttime="20220516 17:53:06.892" endtime="20220516 17:53:06.908"/>
</kw>
<status status="PASS" starttime="20220516 17:53:06.878" endtime="20220516 17:53:06.908"/>
</kw>
<status status="PASS" starttime="20220516 17:53:06.878" endtime="20220516 17:53:06.908"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/unreadable-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:53:06.913" level="INFO">Running command 'ozone sh key list 52499-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:53:11.869" level="INFO">${rc} = 255</msg>
<msg timestamp="20220516 17:53:11.869" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket Volume:52499-target Bucket:unreadable-link </msg>
<status status="PASS" starttime="20220516 17:53:06.909" endtime="20220516 17:53:11.869"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:53:11.870" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket Volume:52499-target Bucket:unreadable-link </msg>
<status status="PASS" starttime="20220516 17:53:11.869" endtime="20220516 17:53:11.870"/>
</kw>
<msg timestamp="20220516 17:53:11.871" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket Volume:52499-target Bucket:unreadable-link </msg>
<status status="PASS" starttime="20220516 17:53:06.908" endtime="20220516 17:53:11.871"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 17:53:11.871" endtime="20220516 17:53:11.872"/>
</kw>
<status status="PASS" starttime="20220516 17:53:06.865" endtime="20220516 17:53:11.872"/>
</kw>
<status status="PASS" starttime="20220516 17:53:06.865" endtime="20220516 17:53:11.872"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220516 17:53:06.832" endtime="20220516 17:53:11.872"/>
</test>
<test id="s1-s1-s3-t12" name="ACL verified on source bucket">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:53:11.880" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:53:11.884" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:53:11.884" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220516 17:53:11.877" endtime="20220516 17:53:11.884"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:53:11.885" level="INFO">scm</msg>
<status status="PASS" starttime="20220516 17:53:11.884" endtime="20220516 17:53:11.885"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:53:11.886" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:53:11.885" endtime="20220516 17:53:11.886"/>
</kw>
<status status="PASS" starttime="20220516 17:53:11.876" endtime="20220516 17:53:11.886"/>
</kw>
<msg timestamp="20220516 17:53:11.886" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:53:11.876" endtime="20220516 17:53:11.887"/>
</kw>
<msg timestamp="20220516 17:53:11.887" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220516 17:53:11.875" endtime="20220516 17:53:11.887"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220516 17:53:11.889" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220516 17:53:11.888" endtime="20220516 17:53:11.889"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:53:11.894" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:53:11.903" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:53:11.903" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 17:53:11.892" endtime="20220516 17:53:11.903"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:53:11.904" level="INFO"/>
<status status="PASS" starttime="20220516 17:53:11.903" endtime="20220516 17:53:11.904"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:53:11.905" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:53:11.904" endtime="20220516 17:53:11.905"/>
</kw>
<status status="PASS" starttime="20220516 17:53:11.891" endtime="20220516 17:53:11.905"/>
</kw>
<msg timestamp="20220516 17:53:11.905" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:53:11.891" endtime="20220516 17:53:11.906"/>
</kw>
<status status="PASS" starttime="20220516 17:53:11.890" endtime="20220516 17:53:11.907"/>
</kw>
<status status="PASS" starttime="20220516 17:53:11.889" endtime="20220516 17:53:11.907"/>
</kw>
<status status="PASS" starttime="20220516 17:53:11.875" endtime="20220516 17:53:11.907"/>
</kw>
<status status="PASS" starttime="20220516 17:53:11.874" endtime="20220516 17:53:11.907"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:53:11.912" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:53:11.916" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:53:11.916" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 17:53:11.910" endtime="20220516 17:53:11.916"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:53:11.918" level="INFO"/>
<status status="PASS" starttime="20220516 17:53:11.917" endtime="20220516 17:53:11.918"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:53:11.919" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:53:11.918" endtime="20220516 17:53:11.919"/>
</kw>
<status status="PASS" starttime="20220516 17:53:11.910" endtime="20220516 17:53:11.919"/>
</kw>
<msg timestamp="20220516 17:53:11.919" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:53:11.909" endtime="20220516 17:53:11.920"/>
</kw>
<status status="PASS" starttime="20220516 17:53:11.909" endtime="20220516 17:53:11.920"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:53:11.925" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:53:11.929" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:53:11.930" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220516 17:53:11.923" endtime="20220516 17:53:11.931"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:53:11.932" level="INFO">scm</msg>
<status status="PASS" starttime="20220516 17:53:11.931" endtime="20220516 17:53:11.932"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:53:11.934" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:53:11.932" endtime="20220516 17:53:11.934"/>
</kw>
<status status="PASS" starttime="20220516 17:53:11.922" endtime="20220516 17:53:11.934"/>
</kw>
<msg timestamp="20220516 17:53:11.934" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:53:11.922" endtime="20220516 17:53:11.935"/>
</kw>
<msg timestamp="20220516 17:53:11.935" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220516 17:53:11.921" endtime="20220516 17:53:11.935"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220516 17:53:11.936" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220516 17:53:11.935" endtime="20220516 17:53:11.936"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:53:11.942" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:53:11.950" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:53:11.950" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 17:53:11.939" endtime="20220516 17:53:11.950"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:53:11.952" level="INFO"/>
<status status="PASS" starttime="20220516 17:53:11.951" endtime="20220516 17:53:11.952"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:53:11.953" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:53:11.952" endtime="20220516 17:53:11.953"/>
</kw>
<status status="PASS" starttime="20220516 17:53:11.938" endtime="20220516 17:53:11.953"/>
</kw>
<msg timestamp="20220516 17:53:11.953" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:53:11.938" endtime="20220516 17:53:11.954"/>
</kw>
<status status="PASS" starttime="20220516 17:53:11.937" endtime="20220516 17:53:11.954"/>
</kw>
<status status="PASS" starttime="20220516 17:53:11.937" endtime="20220516 17:53:11.954"/>
</kw>
<status status="PASS" starttime="20220516 17:53:11.921" endtime="20220516 17:53:11.955"/>
</kw>
<status status="PASS" starttime="20220516 17:53:11.921" endtime="20220516 17:53:11.955"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:53:11.959" level="INFO">Running command 'ozone sh bucket info 52499-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:53:16.928" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:53:16.929" level="INFO">${output} = {
  "volumeName" : "52499-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "52499-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2022-05-16T17:50:20.366Z...</msg>
<status status="PASS" starttime="20220516 17:53:11.957" endtime="20220516 17:53:16.929"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:53:16.930" level="INFO">{
  "volumeName" : "52499-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "52499-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2022-05-16T17:50:20.366Z",
  "modificationTime" : "2022-05-16T17:50:44.559Z",
  "owner" : "testuser"
}</msg>
<status status="PASS" starttime="20220516 17:53:16.929" endtime="20220516 17:53:16.930"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:53:16.931" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:53:16.931" endtime="20220516 17:53:16.931"/>
</kw>
<status status="PASS" starttime="20220516 17:53:11.956" endtime="20220516 17:53:16.932"/>
</kw>
<msg timestamp="20220516 17:53:16.932" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:53:11.955" endtime="20220516 17:53:16.933"/>
</kw>
<msg timestamp="20220516 17:53:16.933" level="INFO">${result} = {
  "volumeName" : "52499-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "52499-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2022-05-16T17:50:20.366Z...</msg>
<status status="PASS" starttime="20220516 17:53:11.955" endtime="20220516 17:53:16.933"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 17:53:16.933" endtime="20220516 17:53:16.934"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 17:53:16.934" endtime="20220516 17:53:16.934"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:53:16.938" level="INFO">Running command 'ozone sh key list 52499-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:53:21.551" level="INFO">${rc} = 255</msg>
<msg timestamp="20220516 17:53:21.552" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket Volume:52499-source Bucket:unreadable-bucket Key:</msg>
<status status="PASS" starttime="20220516 17:53:16.935" endtime="20220516 17:53:21.552"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:53:21.555" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket Volume:52499-source Bucket:unreadable-bucket Key:</msg>
<status status="PASS" starttime="20220516 17:53:21.553" endtime="20220516 17:53:21.555"/>
</kw>
<msg timestamp="20220516 17:53:21.556" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket Volume:52499-source Bucket:unreadable-bucket Key:</msg>
<status status="PASS" starttime="20220516 17:53:16.935" endtime="20220516 17:53:21.556"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 17:53:21.556" endtime="20220516 17:53:21.557"/>
</kw>
<status status="PASS" starttime="20220516 17:53:11.908" endtime="20220516 17:53:21.557"/>
</kw>
<status status="PASS" starttime="20220516 17:53:11.907" endtime="20220516 17:53:21.558"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220516 17:53:11.873" endtime="20220516 17:53:21.558"/>
</test>
<test id="s1-s1-s3-t13" name="Loop in link chain is detected">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:53:21.571" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:53:21.580" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:53:21.580" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220516 17:53:21.566" endtime="20220516 17:53:21.580"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:53:21.582" level="INFO">scm</msg>
<status status="PASS" starttime="20220516 17:53:21.581" endtime="20220516 17:53:21.582"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:53:21.586" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:53:21.584" endtime="20220516 17:53:21.586"/>
</kw>
<status status="PASS" starttime="20220516 17:53:21.565" endtime="20220516 17:53:21.587"/>
</kw>
<msg timestamp="20220516 17:53:21.587" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:53:21.564" endtime="20220516 17:53:21.588"/>
</kw>
<msg timestamp="20220516 17:53:21.589" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220516 17:53:21.563" endtime="20220516 17:53:21.589"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220516 17:53:21.590" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220516 17:53:21.589" endtime="20220516 17:53:21.591"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:53:21.599" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:53:21.609" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:53:21.609" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 17:53:21.595" endtime="20220516 17:53:21.609"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:53:21.611" level="INFO"/>
<status status="PASS" starttime="20220516 17:53:21.610" endtime="20220516 17:53:21.612"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:53:21.613" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:53:21.612" endtime="20220516 17:53:21.613"/>
</kw>
<status status="PASS" starttime="20220516 17:53:21.594" endtime="20220516 17:53:21.614"/>
</kw>
<msg timestamp="20220516 17:53:21.614" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:53:21.593" endtime="20220516 17:53:21.615"/>
</kw>
<status status="PASS" starttime="20220516 17:53:21.592" endtime="20220516 17:53:21.616"/>
</kw>
<status status="PASS" starttime="20220516 17:53:21.591" endtime="20220516 17:53:21.616"/>
</kw>
<status status="PASS" starttime="20220516 17:53:21.562" endtime="20220516 17:53:21.616"/>
</kw>
<status status="PASS" starttime="20220516 17:53:21.561" endtime="20220516 17:53:21.617"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:53:21.623" level="INFO">Running command 'ozone sh bucket link 52499-target/loop1 52499-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:53:26.444" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:53:26.444" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 17:53:21.620" endtime="20220516 17:53:26.444"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:53:26.446" level="INFO"/>
<status status="PASS" starttime="20220516 17:53:26.445" endtime="20220516 17:53:26.446"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:53:26.447" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:53:26.446" endtime="20220516 17:53:26.447"/>
</kw>
<status status="PASS" starttime="20220516 17:53:21.619" endtime="20220516 17:53:26.447"/>
</kw>
<msg timestamp="20220516 17:53:26.447" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:53:21.619" endtime="20220516 17:53:26.448"/>
</kw>
<status status="PASS" starttime="20220516 17:53:21.617" endtime="20220516 17:53:26.448"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:53:26.453" level="INFO">Running command 'ozone sh bucket link 52499-target/loop2 52499-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:53:31.214" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:53:31.214" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 17:53:26.450" endtime="20220516 17:53:31.214"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:53:31.215" level="INFO"/>
<status status="PASS" starttime="20220516 17:53:31.215" endtime="20220516 17:53:31.216"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:53:31.216" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:53:31.216" endtime="20220516 17:53:31.217"/>
</kw>
<status status="PASS" starttime="20220516 17:53:26.450" endtime="20220516 17:53:31.217"/>
</kw>
<msg timestamp="20220516 17:53:31.218" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:53:26.449" endtime="20220516 17:53:31.218"/>
</kw>
<status status="PASS" starttime="20220516 17:53:26.449" endtime="20220516 17:53:31.219"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:53:31.223" level="INFO">Running command 'ozone sh bucket link 52499-target/loop3 52499-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:53:36.216" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:53:36.216" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 17:53:31.221" endtime="20220516 17:53:36.216"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:53:36.218" level="INFO"/>
<status status="PASS" starttime="20220516 17:53:36.217" endtime="20220516 17:53:36.218"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:53:36.219" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:53:36.218" endtime="20220516 17:53:36.219"/>
</kw>
<status status="PASS" starttime="20220516 17:53:31.220" endtime="20220516 17:53:36.219"/>
</kw>
<msg timestamp="20220516 17:53:36.219" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:53:31.220" endtime="20220516 17:53:36.220"/>
</kw>
<status status="PASS" starttime="20220516 17:53:31.219" endtime="20220516 17:53:36.220"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/loop2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:53:36.223" level="INFO">Running command 'ozone sh key list 52499-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:53:40.934" level="INFO">${rc} = 255</msg>
<msg timestamp="20220516 17:53:40.934" level="INFO">${output} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links. Bucket name: loop2, Volume name: 52499-target</msg>
<status status="PASS" starttime="20220516 17:53:36.221" endtime="20220516 17:53:40.934"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:53:40.936" level="INFO">DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links. Bucket name: loop2, Volume name: 52499-target</msg>
<status status="PASS" starttime="20220516 17:53:40.935" endtime="20220516 17:53:40.936"/>
</kw>
<msg timestamp="20220516 17:53:40.937" level="INFO">${result} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links. Bucket name: loop2, Volume name: 52499-target</msg>
<status status="PASS" starttime="20220516 17:53:36.220" endtime="20220516 17:53:40.937"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 17:53:40.937" endtime="20220516 17:53:40.938"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220516 17:53:21.559" endtime="20220516 17:53:40.938"/>
</test>
<test id="s1-s1-s3-t14" name="Multiple links to same bucket are allowed">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:53:40.946" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:53:40.951" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:53:40.951" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220516 17:53:40.944" endtime="20220516 17:53:40.951"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:53:40.952" level="INFO">scm</msg>
<status status="PASS" starttime="20220516 17:53:40.951" endtime="20220516 17:53:40.952"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:53:40.953" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:53:40.953" endtime="20220516 17:53:40.953"/>
</kw>
<status status="PASS" starttime="20220516 17:53:40.943" endtime="20220516 17:53:40.954"/>
</kw>
<msg timestamp="20220516 17:53:40.954" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:53:40.943" endtime="20220516 17:53:40.955"/>
</kw>
<msg timestamp="20220516 17:53:40.955" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220516 17:53:40.942" endtime="20220516 17:53:40.955"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220516 17:53:40.956" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220516 17:53:40.955" endtime="20220516 17:53:40.956"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:53:40.961" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:53:40.969" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:53:40.969" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 17:53:40.959" endtime="20220516 17:53:40.970"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:53:40.971" level="INFO"/>
<status status="PASS" starttime="20220516 17:53:40.970" endtime="20220516 17:53:40.971"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:53:40.972" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:53:40.971" endtime="20220516 17:53:40.972"/>
</kw>
<status status="PASS" starttime="20220516 17:53:40.958" endtime="20220516 17:53:40.972"/>
</kw>
<msg timestamp="20220516 17:53:40.972" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:53:40.958" endtime="20220516 17:53:40.973"/>
</kw>
<status status="PASS" starttime="20220516 17:53:40.957" endtime="20220516 17:53:40.973"/>
</kw>
<status status="PASS" starttime="20220516 17:53:40.956" endtime="20220516 17:53:40.973"/>
</kw>
<status status="PASS" starttime="20220516 17:53:40.941" endtime="20220516 17:53:40.974"/>
</kw>
<status status="PASS" starttime="20220516 17:53:40.940" endtime="20220516 17:53:40.974"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:53:40.978" level="INFO">Running command 'ozone sh bucket link 52499-source/bucket1 52499-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:53:45.690" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:53:45.690" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 17:53:40.976" endtime="20220516 17:53:45.690"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:53:45.692" level="INFO"/>
<status status="PASS" starttime="20220516 17:53:45.691" endtime="20220516 17:53:45.692"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:53:45.692" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:53:45.692" endtime="20220516 17:53:45.693"/>
</kw>
<status status="PASS" starttime="20220516 17:53:40.975" endtime="20220516 17:53:45.693"/>
</kw>
<msg timestamp="20220516 17:53:45.693" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:53:40.975" endtime="20220516 17:53:45.694"/>
</kw>
<status status="PASS" starttime="20220516 17:53:40.974" endtime="20220516 17:53:45.694"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:53:45.699" level="INFO">Running command 'ozone sh key put 52499-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:53:55.732" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:53:55.732" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 17:53:45.696" endtime="20220516 17:53:55.732"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:53:55.734" level="INFO"/>
<status status="PASS" starttime="20220516 17:53:55.733" endtime="20220516 17:53:55.734"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:53:55.734" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:53:55.734" endtime="20220516 17:53:55.735"/>
</kw>
<status status="PASS" starttime="20220516 17:53:45.695" endtime="20220516 17:53:55.735"/>
</kw>
<msg timestamp="20220516 17:53:55.735" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:53:45.695" endtime="20220516 17:53:55.736"/>
</kw>
<status status="PASS" starttime="20220516 17:53:45.694" endtime="20220516 17:53:55.736"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220516 17:53:55.738" level="INFO">${postfix} = 99437</msg>
<status status="PASS" starttime="20220516 17:53:55.738" endtime="20220516 17:53:55.738"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220516 17:53:55.739" level="INFO">${tmpfile} = /tmp/tempkey-99437</msg>
<status status="PASS" starttime="20220516 17:53:55.739" endtime="20220516 17:53:55.739"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:53:55.743" level="INFO">Running command 'ozone sh key get 52499-target/link1/key3 /tmp/tempkey-99437 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:54:03.492" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:54:03.492" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 17:53:55.741" endtime="20220516 17:54:03.492"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:54:03.493" level="INFO"/>
<status status="PASS" starttime="20220516 17:54:03.493" endtime="20220516 17:54:03.494"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:54:03.494" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:54:03.494" endtime="20220516 17:54:03.494"/>
</kw>
<status status="PASS" starttime="20220516 17:53:55.740" endtime="20220516 17:54:03.495"/>
</kw>
<msg timestamp="20220516 17:54:03.495" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:53:55.740" endtime="20220516 17:54:03.502"/>
</kw>
<status status="PASS" starttime="20220516 17:53:55.739" endtime="20220516 17:54:03.503"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20220516 17:54:03.505" level="INFO">Running command 'diff -q /etc/group /tmp/tempkey-99437 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:54:03.509" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20220516 17:54:03.503" endtime="20220516 17:54:03.509"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:54:03.514" level="INFO">Running command 'rm -f /tmp/tempkey-99437 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:54:03.517" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:54:03.517" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 17:54:03.512" endtime="20220516 17:54:03.517"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:54:03.518" level="INFO"/>
<status status="PASS" starttime="20220516 17:54:03.518" endtime="20220516 17:54:03.519"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:54:03.520" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:54:03.519" endtime="20220516 17:54:03.520"/>
</kw>
<status status="PASS" starttime="20220516 17:54:03.511" endtime="20220516 17:54:03.520"/>
</kw>
<msg timestamp="20220516 17:54:03.520" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:54:03.511" endtime="20220516 17:54:03.521"/>
</kw>
<status status="PASS" starttime="20220516 17:54:03.510" endtime="20220516 17:54:03.521"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220516 17:54:03.522" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20220516 17:54:03.521" endtime="20220516 17:54:03.522"/>
</kw>
<msg timestamp="20220516 17:54:03.523" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20220516 17:53:55.737" endtime="20220516 17:54:03.523"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220516 17:54:03.523" endtime="20220516 17:54:03.523"/>
</kw>
<status status="PASS" starttime="20220516 17:53:55.736" endtime="20220516 17:54:03.523"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220516 17:53:40.939" endtime="20220516 17:54:03.524"/>
</test>
<test id="s1-s1-s3-t15" name="Source bucket not affected by deleting link">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:54:03.531" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:54:03.535" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:54:03.535" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220516 17:54:03.528" endtime="20220516 17:54:03.535"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:54:03.536" level="INFO">scm</msg>
<status status="PASS" starttime="20220516 17:54:03.535" endtime="20220516 17:54:03.536"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:54:03.537" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:54:03.536" endtime="20220516 17:54:03.537"/>
</kw>
<status status="PASS" starttime="20220516 17:54:03.527" endtime="20220516 17:54:03.538"/>
</kw>
<msg timestamp="20220516 17:54:03.538" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:54:03.527" endtime="20220516 17:54:03.539"/>
</kw>
<msg timestamp="20220516 17:54:03.539" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220516 17:54:03.527" endtime="20220516 17:54:03.539"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220516 17:54:03.540" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220516 17:54:03.539" endtime="20220516 17:54:03.540"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:54:03.545" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:54:03.554" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:54:03.554" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 17:54:03.543" endtime="20220516 17:54:03.554"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:54:03.556" level="INFO"/>
<status status="PASS" starttime="20220516 17:54:03.555" endtime="20220516 17:54:03.556"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:54:03.557" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:54:03.556" endtime="20220516 17:54:03.557"/>
</kw>
<status status="PASS" starttime="20220516 17:54:03.542" endtime="20220516 17:54:03.557"/>
</kw>
<msg timestamp="20220516 17:54:03.557" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:54:03.542" endtime="20220516 17:54:03.558"/>
</kw>
<status status="PASS" starttime="20220516 17:54:03.541" endtime="20220516 17:54:03.558"/>
</kw>
<status status="PASS" starttime="20220516 17:54:03.540" endtime="20220516 17:54:03.558"/>
</kw>
<status status="PASS" starttime="20220516 17:54:03.526" endtime="20220516 17:54:03.559"/>
</kw>
<status status="PASS" starttime="20220516 17:54:03.525" endtime="20220516 17:54:03.559"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:54:03.564" level="INFO">Running command 'ozone sh bucket delete 52499-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:54:08.415" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:54:08.415" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 17:54:03.561" endtime="20220516 17:54:08.415"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:54:08.417" level="INFO"/>
<status status="PASS" starttime="20220516 17:54:08.416" endtime="20220516 17:54:08.417"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:54:08.419" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:54:08.418" endtime="20220516 17:54:08.419"/>
</kw>
<status status="PASS" starttime="20220516 17:54:03.560" endtime="20220516 17:54:08.419"/>
</kw>
<msg timestamp="20220516 17:54:08.419" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:54:03.560" endtime="20220516 17:54:08.421"/>
</kw>
<status status="PASS" starttime="20220516 17:54:03.559" endtime="20220516 17:54:08.421"/>
</kw>
<kw name="Execute" library="os">
<var>${bucket_list}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:54:08.426" level="INFO">Running command 'ozone sh bucket list 52499-target 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:54:13.892" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:54:13.892" level="INFO">${output} = [ {
  "metadata" : { },
  "volumeName" : "52499-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-05-1...</msg>
<status status="PASS" starttime="20220516 17:54:08.424" endtime="20220516 17:54:13.892"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:54:13.894" level="INFO">[ {
  "metadata" : { },
  "volumeName" : "52499-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-05-16T17:52:56.721Z",
  "modificationTime" : "2022-05-16T17:52:56.721Z",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY",
  "owner" : "testuser",
  "link" : false
}, {
  "metadata" : { },
  "volumeName" : "52499-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-05-16T17:50:49.463Z",
  "modificationTime" : "2022-05-16T17:50:49.463Z",
  "sourceVolume" : "52499-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY",
  "owner" : "testuser",
  "link" : true
}, {
  "metadata" : { },
  "volumeName" : "52499-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-05-16T17:50:20.366Z",
  "modificationTime" : "2022-05-16T17:50:44.559Z",
  "sourceVolume" : "52499-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY",
  "owner" : "testuser",
  "link" : true
}, {
  "metadata" : { },
  "volumeName" : "52499-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-05-16T17:52:46.924Z",
  "modificationTime" : "2022-05-16T17:52:46.924Z",
  "sourceVolume" : "52499-source",
  "sourceBucket" : "bucket2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY",
  "owner" : "testuser",
  "link" : true
}, {
  "metadata" : { },
  "volumeName" : "52499-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-05-16T17:53:45.624Z",
  "modificationTime" : "2022-05-16T17:53:45.624Z",
  "sourceVolume" : "52499-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY",
  "owner" : "testuser",
  "link" : true
}, {
  "metadata" : { },
  "volumeName" : "52499-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-05-16T17:53:36.139Z",
  "modificationTime" : "2022-05-16T17:53:36.139Z",
  "sourceVolume" : "52499-target",
  "sourceBucket" : "loop3",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY",
  "owner" : "testuser",
  "link" : true
}, {
  "metadata" : { },
  "volumeName" : "52499-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-05-16T17:53:26.372Z",
  "modificationTime" : "2022-05-16T17:53:26.372Z",
  "sourceVolume" : "52499-target",
  "sourceBucket" : "loop1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY",
  "owner" : "testuser",
  "link" : true
}, {
  "metadata" : { },
  "volumeName" : "52499-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-05-16T17:53:31.140Z",
  "modificationTime" : "2022-05-16T17:53:31.140Z",
  "sourceVolume" : "52499-target",
  "sourceBucket" : "loop2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY",
  "owner" : "testuser",
  "link" : true
}, {
  "metadata" : { },
  "volumeName" : "52499-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-05-16T17:50:10.750Z",
  "modificationTime" : "2022-05-16T17:50:39.973Z",
  "sourceVolume" : "52499-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY",
  "owner" : "testuser",
  "link" : true
}, {
  "metadata" : { },
  "volumeName" : "52499-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-05-16T17:50:15.245Z",
  "modificationTime" : "2022-05-16T17:50:15.245Z",
  "sourceVolume" : "52499-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY",
  "owner" : "testuser",
  "link" : true
} ]</msg>
<status status="PASS" starttime="20220516 17:54:13.893" endtime="20220516 17:54:13.894"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:54:13.895" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:54:13.894" endtime="20220516 17:54:13.895"/>
</kw>
<status status="PASS" starttime="20220516 17:54:08.423" endtime="20220516 17:54:13.895"/>
</kw>
<msg timestamp="20220516 17:54:13.895" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:54:08.423" endtime="20220516 17:54:13.896"/>
</kw>
<msg timestamp="20220516 17:54:13.897" level="INFO">${bucket_list} = [ {
  "metadata" : { },
  "volumeName" : "52499-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-05-1...</msg>
<status status="PASS" starttime="20220516 17:54:08.422" endtime="20220516 17:54:13.897"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${bucket_list}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 17:54:13.897" endtime="20220516 17:54:13.898"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:54:13.902" level="INFO">Running command 'ozone sh key list 52499-source/bucket1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:54:19.332" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:54:19.332" level="INFO">${output} = key1
key3</msg>
<status status="PASS" starttime="20220516 17:54:13.900" endtime="20220516 17:54:19.332"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:54:19.334" level="INFO">key1
key3</msg>
<status status="PASS" starttime="20220516 17:54:19.333" endtime="20220516 17:54:19.334"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:54:19.334" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:54:19.334" endtime="20220516 17:54:19.335"/>
</kw>
<status status="PASS" starttime="20220516 17:54:13.899" endtime="20220516 17:54:19.335"/>
</kw>
<msg timestamp="20220516 17:54:19.335" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:54:13.898" endtime="20220516 17:54:19.335"/>
</kw>
<msg timestamp="20220516 17:54:19.336" level="INFO">${source_list} = key1
key3</msg>
<status status="PASS" starttime="20220516 17:54:13.898" endtime="20220516 17:54:19.336"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 17:54:19.336" endtime="20220516 17:54:19.336"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220516 17:54:03.524" endtime="20220516 17:54:19.337"/>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="PASS" starttime="20220516 17:49:35.499" endtime="20220516 17:54:19.340"/>
</suite>
<suite id="s1-s1-s4" name="Ozone-Shell-Single" source="/opt/hadoop/smoketest/basic/ozone-shell-single.robot">
<kw name="Generate prefix" library="ozone-shell-lib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220516 17:54:19.369" level="INFO">${random} = 22025</msg>
<status status="PASS" starttime="20220516 17:54:19.369" endtime="20220516 17:54:19.369"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220516 17:54:19.370" level="INFO">${prefix} = 22025</msg>
<status status="PASS" starttime="20220516 17:54:19.370" endtime="20220516 17:54:19.370"/>
</kw>
<status status="PASS" starttime="20220516 17:54:19.368" endtime="20220516 17:54:19.371"/>
</kw>
<test id="s1-s1-s4-t1" name="Test ozone shell">
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-without-scheme</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:54:19.377" level="INFO">Running command 'ozone sh volume info /22025-without-scheme 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:54:24.464" level="INFO">${rc} = 255</msg>
<msg timestamp="20220516 17:54:24.464" level="INFO">${output} = VOLUME_NOT_FOUND Volume 22025-without-scheme is not found</msg>
<status status="PASS" starttime="20220516 17:54:19.374" endtime="20220516 17:54:24.464"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:54:24.465" level="INFO">VOLUME_NOT_FOUND Volume 22025-without-scheme is not found</msg>
<status status="PASS" starttime="20220516 17:54:24.465" endtime="20220516 17:54:24.466"/>
</kw>
<msg timestamp="20220516 17:54:24.466" level="INFO">${result} = VOLUME_NOT_FOUND Volume 22025-without-scheme is not found</msg>
<status status="PASS" starttime="20220516 17:54:19.374" endtime="20220516 17:54:24.466"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 17:54:24.466" endtime="20220516 17:54:24.467"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:54:24.471" level="INFO">Running command 'ozone sh volume create /22025-without-scheme --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:54:29.403" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:54:29.403" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 17:54:24.469" endtime="20220516 17:54:29.403"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:54:29.405" level="INFO"/>
<status status="PASS" starttime="20220516 17:54:29.404" endtime="20220516 17:54:29.405"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:54:29.406" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:54:29.405" endtime="20220516 17:54:29.406"/>
</kw>
<status status="PASS" starttime="20220516 17:54:24.468" endtime="20220516 17:54:29.406"/>
</kw>
<msg timestamp="20220516 17:54:29.406" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:54:24.468" endtime="20220516 17:54:29.407"/>
</kw>
<msg timestamp="20220516 17:54:29.407" level="INFO">${result} = </msg>
<status status="PASS" starttime="20220516 17:54:24.467" endtime="20220516 17:54:29.407"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 17:54:29.407" endtime="20220516 17:54:29.408"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:54:29.413" level="INFO">Running command 'ozone sh volume list / | jq -r '.[] | select(.name=="22025-without-scheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:54:34.585" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:54:34.585" level="INFO">${output} = {
  "metadata": {},
  "name": "22025-without-scheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime"...</msg>
<status status="PASS" starttime="20220516 17:54:29.411" endtime="20220516 17:54:34.586"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:54:34.587" level="INFO">{
  "metadata": {},
  "name": "22025-without-scheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2022-05-16T17:54:29.317Z",
  "modificationTime": "2022-05-16T17:54:29.317Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20220516 17:54:34.586" endtime="20220516 17:54:34.587"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:54:34.588" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:54:34.587" endtime="20220516 17:54:34.588"/>
</kw>
<status status="PASS" starttime="20220516 17:54:29.410" endtime="20220516 17:54:34.588"/>
</kw>
<msg timestamp="20220516 17:54:34.589" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:54:29.410" endtime="20220516 17:54:34.589"/>
</kw>
<msg timestamp="20220516 17:54:34.589" level="INFO">${result} = {
  "metadata": {},
  "name": "22025-without-scheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime"...</msg>
<status status="PASS" starttime="20220516 17:54:29.408" endtime="20220516 17:54:34.590"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 17:54:34.590" endtime="20220516 17:54:34.590"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:54:34.595" level="INFO">Running command 'ozone sh volume list | jq -r '.[] | select(.name=="22025-without-scheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:54:39.802" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:54:39.802" level="INFO">${output} = {
  "metadata": {},
  "name": "22025-without-scheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime"...</msg>
<status status="PASS" starttime="20220516 17:54:34.593" endtime="20220516 17:54:39.802"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:54:39.803" level="INFO">{
  "metadata": {},
  "name": "22025-without-scheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2022-05-16T17:54:29.317Z",
  "modificationTime": "2022-05-16T17:54:29.317Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20220516 17:54:39.802" endtime="20220516 17:54:39.803"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:54:39.804" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:54:39.804" endtime="20220516 17:54:39.804"/>
</kw>
<status status="PASS" starttime="20220516 17:54:34.592" endtime="20220516 17:54:39.805"/>
</kw>
<msg timestamp="20220516 17:54:39.805" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:54:34.592" endtime="20220516 17:54:39.805"/>
</kw>
<msg timestamp="20220516 17:54:39.806" level="INFO">${result} = {
  "metadata": {},
  "name": "22025-without-scheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime"...</msg>
<status status="PASS" starttime="20220516 17:54:34.590" endtime="20220516 17:54:39.806"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 17:54:39.806" endtime="20220516 17:54:39.806"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:54:39.811" level="INFO">Running command 'ozone sh volume setquota /22025-without-scheme --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:54:44.642" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:54:44.642" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 17:54:39.808" endtime="20220516 17:54:44.642"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:54:44.644" level="INFO"/>
<status status="PASS" starttime="20220516 17:54:44.643" endtime="20220516 17:54:44.644"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:54:44.645" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:54:44.644" endtime="20220516 17:54:44.645"/>
</kw>
<status status="PASS" starttime="20220516 17:54:39.808" endtime="20220516 17:54:44.645"/>
</kw>
<msg timestamp="20220516 17:54:44.645" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:54:39.807" endtime="20220516 17:54:44.646"/>
</kw>
<status status="PASS" starttime="20220516 17:54:39.807" endtime="20220516 17:54:44.646"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:54:44.652" level="INFO">Running command 'ozone sh volume info /22025-without-scheme | jq -r '. | select(.name=="22025-without-scheme") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:54:49.670" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:54:49.670" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20220516 17:54:44.649" endtime="20220516 17:54:49.670"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:54:49.672" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20220516 17:54:49.671" endtime="20220516 17:54:49.672"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:54:49.673" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:54:49.673" endtime="20220516 17:54:49.673"/>
</kw>
<status status="PASS" starttime="20220516 17:54:44.648" endtime="20220516 17:54:49.674"/>
</kw>
<msg timestamp="20220516 17:54:49.674" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:54:44.648" endtime="20220516 17:54:49.675"/>
</kw>
<msg timestamp="20220516 17:54:49.675" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20220516 17:54:44.647" endtime="20220516 17:54:49.675"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220516 17:54:49.675" endtime="20220516 17:54:49.676"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:54:49.680" level="INFO">Running command 'ozone sh bucket create /22025-without-scheme/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:54:54.376" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:54:54.376" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 17:54:49.678" endtime="20220516 17:54:54.376"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:54:54.377" level="INFO"/>
<status status="PASS" starttime="20220516 17:54:54.376" endtime="20220516 17:54:54.377"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:54:54.378" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:54:54.377" endtime="20220516 17:54:54.378"/>
</kw>
<status status="PASS" starttime="20220516 17:54:49.677" endtime="20220516 17:54:54.379"/>
</kw>
<msg timestamp="20220516 17:54:54.379" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:54:49.677" endtime="20220516 17:54:54.380"/>
</kw>
<status status="PASS" starttime="20220516 17:54:49.676" endtime="20220516 17:54:54.380"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:54:54.386" level="INFO">Running command 'ozone sh bucket info /22025-without-scheme/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:54:59.561" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:54:59.562" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20220516 17:54:54.383" endtime="20220516 17:54:59.562"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:54:59.563" level="INFO">DISK</msg>
<status status="PASS" starttime="20220516 17:54:59.562" endtime="20220516 17:54:59.563"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:54:59.564" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:54:59.564" endtime="20220516 17:54:59.564"/>
</kw>
<status status="PASS" starttime="20220516 17:54:54.382" endtime="20220516 17:54:59.565"/>
</kw>
<msg timestamp="20220516 17:54:59.565" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:54:54.382" endtime="20220516 17:54:59.566"/>
</kw>
<msg timestamp="20220516 17:54:59.566" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20220516 17:54:54.381" endtime="20220516 17:54:59.566"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220516 17:54:59.566" endtime="20220516 17:54:59.567"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:54:59.571" level="INFO">Running command 'ozone sh bucket info /22025-without-scheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:55:04.509" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:55:04.509" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20220516 17:54:59.569" endtime="20220516 17:55:04.509"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:55:04.511" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20220516 17:55:04.510" endtime="20220516 17:55:04.511"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:55:04.512" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:55:04.511" endtime="20220516 17:55:04.512"/>
</kw>
<status status="PASS" starttime="20220516 17:54:59.569" endtime="20220516 17:55:04.512"/>
</kw>
<msg timestamp="20220516 17:55:04.513" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:54:59.568" endtime="20220516 17:55:04.513"/>
</kw>
<msg timestamp="20220516 17:55:04.514" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20220516 17:54:59.567" endtime="20220516 17:55:04.514"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220516 17:55:04.514" endtime="20220516 17:55:04.514"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:55:04.519" level="INFO">Running command 'ozone sh bucket info /22025-without-scheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:55:10.001" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:55:10.001" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20220516 17:55:04.517" endtime="20220516 17:55:10.001"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:55:10.003" level="INFO">100</msg>
<status status="PASS" starttime="20220516 17:55:10.002" endtime="20220516 17:55:10.003"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:55:10.004" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:55:10.003" endtime="20220516 17:55:10.004"/>
</kw>
<status status="PASS" starttime="20220516 17:55:04.516" endtime="20220516 17:55:10.004"/>
</kw>
<msg timestamp="20220516 17:55:10.005" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:55:04.516" endtime="20220516 17:55:10.005"/>
</kw>
<msg timestamp="20220516 17:55:10.006" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20220516 17:55:04.515" endtime="20220516 17:55:10.006"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220516 17:55:10.006" endtime="20220516 17:55:10.006"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:55:10.011" level="INFO">Running command 'ozone sh bucket setquota /22025-without-scheme/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:55:14.753" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:55:14.754" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 17:55:10.009" endtime="20220516 17:55:14.754"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:55:14.755" level="INFO"/>
<status status="PASS" starttime="20220516 17:55:14.754" endtime="20220516 17:55:14.755"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:55:14.756" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:55:14.756" endtime="20220516 17:55:14.756"/>
</kw>
<status status="PASS" starttime="20220516 17:55:10.008" endtime="20220516 17:55:14.757"/>
</kw>
<msg timestamp="20220516 17:55:14.757" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:55:10.007" endtime="20220516 17:55:14.757"/>
</kw>
<status status="PASS" starttime="20220516 17:55:10.007" endtime="20220516 17:55:14.758"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:55:14.762" level="INFO">Running command 'ozone sh bucket info /22025-without-scheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:55:19.873" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:55:19.873" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20220516 17:55:14.760" endtime="20220516 17:55:19.873"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:55:19.875" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20220516 17:55:19.874" endtime="20220516 17:55:19.875"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:55:19.876" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:55:19.875" endtime="20220516 17:55:19.876"/>
</kw>
<status status="PASS" starttime="20220516 17:55:14.760" endtime="20220516 17:55:19.876"/>
</kw>
<msg timestamp="20220516 17:55:19.876" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:55:14.759" endtime="20220516 17:55:19.877"/>
</kw>
<msg timestamp="20220516 17:55:19.877" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20220516 17:55:14.758" endtime="20220516 17:55:19.877"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220516 17:55:19.878" endtime="20220516 17:55:19.878"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:55:19.883" level="INFO">Running command 'ozone sh bucket info /22025-without-scheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:55:24.943" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:55:24.943" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20220516 17:55:19.881" endtime="20220516 17:55:24.943"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:55:24.944" level="INFO">1000</msg>
<status status="PASS" starttime="20220516 17:55:24.943" endtime="20220516 17:55:24.944"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:55:24.945" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:55:24.945" endtime="20220516 17:55:24.945"/>
</kw>
<status status="PASS" starttime="20220516 17:55:19.880" endtime="20220516 17:55:24.946"/>
</kw>
<msg timestamp="20220516 17:55:24.946" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:55:19.880" endtime="20220516 17:55:24.947"/>
</kw>
<msg timestamp="20220516 17:55:24.947" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20220516 17:55:19.878" endtime="20220516 17:55:24.947"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220516 17:55:24.947" endtime="20220516 17:55:24.948"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '.[] | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:55:24.952" level="INFO">Running command 'ozone sh bucket list /22025-without-scheme/ | jq -r '.[] | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:55:30.150" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:55:30.150" level="INFO">${output} = 22025-without-scheme</msg>
<status status="PASS" starttime="20220516 17:55:24.950" endtime="20220516 17:55:30.150"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:55:30.152" level="INFO">22025-without-scheme</msg>
<status status="PASS" starttime="20220516 17:55:30.151" endtime="20220516 17:55:30.152"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:55:30.153" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:55:30.152" endtime="20220516 17:55:30.153"/>
</kw>
<status status="PASS" starttime="20220516 17:55:24.949" endtime="20220516 17:55:30.153"/>
</kw>
<msg timestamp="20220516 17:55:30.153" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:55:24.949" endtime="20220516 17:55:30.154"/>
</kw>
<msg timestamp="20220516 17:55:30.154" level="INFO">${result} = 22025-without-scheme</msg>
<status status="PASS" starttime="20220516 17:55:24.948" endtime="20220516 17:55:30.154"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220516 17:55:30.155" endtime="20220516 17:55:30.156"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:55:30.164" level="INFO">Running command 'ozone sh key put /22025-without-scheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:55:37.683" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:55:37.683" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 17:55:30.161" endtime="20220516 17:55:37.683"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:55:37.684" level="INFO"/>
<status status="PASS" starttime="20220516 17:55:37.683" endtime="20220516 17:55:37.684"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:55:37.685" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:55:37.685" endtime="20220516 17:55:37.685"/>
</kw>
<status status="PASS" starttime="20220516 17:55:30.160" endtime="20220516 17:55:37.686"/>
</kw>
<msg timestamp="20220516 17:55:37.686" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:55:30.159" endtime="20220516 17:55:37.687"/>
</kw>
<status status="PASS" starttime="20220516 17:55:30.158" endtime="20220516 17:55:37.687"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:55:37.691" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:55:37.694" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:55:37.694" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 17:55:37.689" endtime="20220516 17:55:37.694"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:55:37.695" level="INFO"/>
<status status="PASS" starttime="20220516 17:55:37.694" endtime="20220516 17:55:37.695"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:55:37.697" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:55:37.695" endtime="20220516 17:55:37.697"/>
</kw>
<status status="PASS" starttime="20220516 17:55:37.688" endtime="20220516 17:55:37.697"/>
</kw>
<msg timestamp="20220516 17:55:37.697" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:55:37.688" endtime="20220516 17:55:37.698"/>
</kw>
<status status="PASS" starttime="20220516 17:55:37.687" endtime="20220516 17:55:37.698"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:55:37.702" level="INFO">Running command 'ozone sh key get /22025-without-scheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:55:45.071" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:55:45.071" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 17:55:37.700" endtime="20220516 17:55:45.071"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:55:45.072" level="INFO"/>
<status status="PASS" starttime="20220516 17:55:45.071" endtime="20220516 17:55:45.072"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:55:45.073" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:55:45.073" endtime="20220516 17:55:45.073"/>
</kw>
<status status="PASS" starttime="20220516 17:55:37.699" endtime="20220516 17:55:45.074"/>
</kw>
<msg timestamp="20220516 17:55:45.074" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:55:37.699" endtime="20220516 17:55:45.075"/>
</kw>
<status status="PASS" starttime="20220516 17:55:37.698" endtime="20220516 17:55:45.075"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:55:45.079" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:55:45.083" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:55:45.084" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 17:55:45.077" endtime="20220516 17:55:45.084"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:55:45.085" level="INFO"/>
<status status="PASS" starttime="20220516 17:55:45.084" endtime="20220516 17:55:45.085"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:55:45.086" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:55:45.085" endtime="20220516 17:55:45.086"/>
</kw>
<status status="PASS" starttime="20220516 17:55:45.076" endtime="20220516 17:55:45.087"/>
</kw>
<msg timestamp="20220516 17:55:45.087" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:55:45.076" endtime="20220516 17:55:45.088"/>
</kw>
<status status="PASS" starttime="20220516 17:55:45.075" endtime="20220516 17:55:45.088"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:55:45.092" level="INFO">Running command 'ozone sh key put -t RATIS /22025-without-scheme/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:55:55.188" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:55:55.189" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 17:55:45.090" endtime="20220516 17:55:55.189"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:55:55.190" level="INFO"/>
<status status="PASS" starttime="20220516 17:55:55.189" endtime="20220516 17:55:55.190"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:55:55.191" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:55:55.190" endtime="20220516 17:55:55.191"/>
</kw>
<status status="PASS" starttime="20220516 17:55:45.089" endtime="20220516 17:55:55.192"/>
</kw>
<msg timestamp="20220516 17:55:55.192" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:55:45.089" endtime="20220516 17:55:55.193"/>
</kw>
<status status="PASS" starttime="20220516 17:55:45.088" endtime="20220516 17:55:55.193"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:55:55.197" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:55:55.200" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:55:55.200" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 17:55:55.195" endtime="20220516 17:55:55.200"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:55:55.201" level="INFO"/>
<status status="PASS" starttime="20220516 17:55:55.200" endtime="20220516 17:55:55.201"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:55:55.202" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:55:55.201" endtime="20220516 17:55:55.203"/>
</kw>
<status status="PASS" starttime="20220516 17:55:55.194" endtime="20220516 17:55:55.203"/>
</kw>
<msg timestamp="20220516 17:55:55.203" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:55:55.194" endtime="20220516 17:55:55.204"/>
</kw>
<status status="PASS" starttime="20220516 17:55:55.193" endtime="20220516 17:55:55.204"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:55:55.209" level="INFO">Running command 'ozone sh key get /22025-without-scheme/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:56:02.812" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:56:02.812" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 17:55:55.207" endtime="20220516 17:56:02.812"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:56:02.813" level="INFO"/>
<status status="PASS" starttime="20220516 17:56:02.813" endtime="20220516 17:56:02.814"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:56:02.814" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:56:02.814" endtime="20220516 17:56:02.815"/>
</kw>
<status status="PASS" starttime="20220516 17:55:55.206" endtime="20220516 17:56:02.815"/>
</kw>
<msg timestamp="20220516 17:56:02.815" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:55:55.205" endtime="20220516 17:56:02.816"/>
</kw>
<status status="PASS" starttime="20220516 17:55:55.204" endtime="20220516 17:56:02.816"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:56:02.821" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:56:02.824" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:56:02.824" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 17:56:02.818" endtime="20220516 17:56:02.824"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:56:02.825" level="INFO"/>
<status status="PASS" starttime="20220516 17:56:02.825" endtime="20220516 17:56:02.825"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:56:02.826" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:56:02.826" endtime="20220516 17:56:02.827"/>
</kw>
<status status="PASS" starttime="20220516 17:56:02.818" endtime="20220516 17:56:02.827"/>
</kw>
<msg timestamp="20220516 17:56:02.827" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:56:02.817" endtime="20220516 17:56:02.828"/>
</kw>
<status status="PASS" starttime="20220516 17:56:02.817" endtime="20220516 17:56:02.828"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:56:02.832" level="INFO">Running command 'ozone sh key info /22025-without-scheme/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:56:08.255" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:56:08.255" level="INFO">${output} = {
  "volumeName": "22025-without-scheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17526,
  "creationTime": "2022-05-16T17:55:49.785Z",
  "modificationTime": "2022-05-16T17:55:54.6...</msg>
<status status="PASS" starttime="20220516 17:56:02.830" endtime="20220516 17:56:08.256"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:56:08.257" level="INFO">{
  "volumeName": "22025-without-scheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17526,
  "creationTime": "2022-05-16T17:55:49.785Z",
  "modificationTime": "2022-05-16T17:55:54.681Z",
  "replicationConfig": {
    "replicationFactor": "THREE",
    "requiredNodes": 3,
    "replicationType": "RATIS"
  },
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 109611004723200000,
      "length": 17526,
      "offset": 0,
      "keyOffset": 0
    }
  ],
  "metadata": {}
}</msg>
<status status="PASS" starttime="20220516 17:56:08.256" endtime="20220516 17:56:08.257"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:56:08.258" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:56:08.258" endtime="20220516 17:56:08.258"/>
</kw>
<status status="PASS" starttime="20220516 17:56:02.830" endtime="20220516 17:56:08.259"/>
</kw>
<msg timestamp="20220516 17:56:08.259" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:56:02.829" endtime="20220516 17:56:08.260"/>
</kw>
<msg timestamp="20220516 17:56:08.260" level="INFO">${result} = {
  "volumeName": "22025-without-scheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17526,
  "creationTime": "2022-05-16T17:55:49.785Z",
  "modificationTime": "2022-05-16T17:55:54.6...</msg>
<status status="PASS" starttime="20220516 17:56:02.828" endtime="20220516 17:56:08.260"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 17:56:08.260" endtime="20220516 17:56:08.261"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:56:08.265" level="INFO">Running command 'ozone sh key delete /22025-without-scheme/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:56:13.198" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:56:13.198" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 17:56:08.263" endtime="20220516 17:56:13.198"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:56:13.200" level="INFO"/>
<status status="PASS" starttime="20220516 17:56:13.199" endtime="20220516 17:56:13.200"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:56:13.200" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:56:13.200" endtime="20220516 17:56:13.201"/>
</kw>
<status status="PASS" starttime="20220516 17:56:08.262" endtime="20220516 17:56:13.201"/>
</kw>
<msg timestamp="20220516 17:56:13.201" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:56:08.262" endtime="20220516 17:56:13.202"/>
</kw>
<status status="PASS" starttime="20220516 17:56:08.261" endtime="20220516 17:56:13.202"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:56:13.206" level="INFO">Running command 'ozone sh key cp /22025-without-scheme/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:56:21.222" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:56:21.223" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 17:56:13.204" endtime="20220516 17:56:21.223"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:56:21.224" level="INFO"/>
<status status="PASS" starttime="20220516 17:56:21.223" endtime="20220516 17:56:21.224"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:56:21.226" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:56:21.224" endtime="20220516 17:56:21.226"/>
</kw>
<status status="PASS" starttime="20220516 17:56:13.203" endtime="20220516 17:56:21.227"/>
</kw>
<msg timestamp="20220516 17:56:21.227" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:56:13.203" endtime="20220516 17:56:21.228"/>
</kw>
<status status="PASS" starttime="20220516 17:56:13.202" endtime="20220516 17:56:21.228"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:56:21.232" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:56:21.235" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:56:21.235" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 17:56:21.230" endtime="20220516 17:56:21.235"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:56:21.236" level="INFO"/>
<status status="PASS" starttime="20220516 17:56:21.236" endtime="20220516 17:56:21.237"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:56:21.237" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:56:21.237" endtime="20220516 17:56:21.238"/>
</kw>
<status status="PASS" starttime="20220516 17:56:21.229" endtime="20220516 17:56:21.238"/>
</kw>
<msg timestamp="20220516 17:56:21.238" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:56:21.229" endtime="20220516 17:56:21.239"/>
</kw>
<status status="PASS" starttime="20220516 17:56:21.228" endtime="20220516 17:56:21.239"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:56:21.243" level="INFO">Running command 'ozone sh key get /22025-without-scheme/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:56:28.514" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:56:28.515" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 17:56:21.241" endtime="20220516 17:56:28.515"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:56:28.516" level="INFO"/>
<status status="PASS" starttime="20220516 17:56:28.515" endtime="20220516 17:56:28.516"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:56:28.517" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:56:28.516" endtime="20220516 17:56:28.517"/>
</kw>
<status status="PASS" starttime="20220516 17:56:21.241" endtime="20220516 17:56:28.517"/>
</kw>
<msg timestamp="20220516 17:56:28.517" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:56:21.240" endtime="20220516 17:56:28.518"/>
</kw>
<status status="PASS" starttime="20220516 17:56:21.239" endtime="20220516 17:56:28.518"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:56:28.523" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:56:28.525" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:56:28.525" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 17:56:28.520" endtime="20220516 17:56:28.525"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:56:28.526" level="INFO"/>
<status status="PASS" starttime="20220516 17:56:28.526" endtime="20220516 17:56:28.527"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:56:28.527" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:56:28.527" endtime="20220516 17:56:28.527"/>
</kw>
<status status="PASS" starttime="20220516 17:56:28.519" endtime="20220516 17:56:28.528"/>
</kw>
<msg timestamp="20220516 17:56:28.528" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:56:28.519" endtime="20220516 17:56:28.528"/>
</kw>
<status status="PASS" starttime="20220516 17:56:28.519" endtime="20220516 17:56:28.529"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:56:28.535" level="INFO">Running command 'ozone sh key delete /22025-without-scheme/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:56:33.008" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:56:33.008" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 17:56:28.532" endtime="20220516 17:56:33.008"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:56:33.010" level="INFO"/>
<status status="PASS" starttime="20220516 17:56:33.009" endtime="20220516 17:56:33.010"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:56:33.011" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:56:33.010" endtime="20220516 17:56:33.011"/>
</kw>
<status status="PASS" starttime="20220516 17:56:28.531" endtime="20220516 17:56:33.011"/>
</kw>
<msg timestamp="20220516 17:56:33.011" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:56:28.530" endtime="20220516 17:56:33.012"/>
</kw>
<status status="PASS" starttime="20220516 17:56:28.529" endtime="20220516 17:56:33.012"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:56:33.016" level="INFO">Running command 'ozone sh key get /22025-without-scheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:56:37.533" level="INFO">${rc} = 255</msg>
<msg timestamp="20220516 17:56:37.534" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20220516 17:56:33.014" endtime="20220516 17:56:37.534"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:56:37.546" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20220516 17:56:37.534" endtime="20220516 17:56:37.546"/>
</kw>
<msg timestamp="20220516 17:56:37.547" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20220516 17:56:33.013" endtime="20220516 17:56:37.547"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 17:56:37.547" endtime="20220516 17:56:37.548"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:56:37.552" level="INFO">Running command 'ozone sh key get --force /22025-without-scheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:56:44.796" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:56:44.797" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 17:56:37.550" endtime="20220516 17:56:44.797"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:56:44.798" level="INFO"/>
<status status="PASS" starttime="20220516 17:56:44.797" endtime="20220516 17:56:44.798"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:56:44.799" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:56:44.799" endtime="20220516 17:56:44.799"/>
</kw>
<status status="PASS" starttime="20220516 17:56:37.549" endtime="20220516 17:56:44.800"/>
</kw>
<msg timestamp="20220516 17:56:44.800" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:56:37.549" endtime="20220516 17:56:44.801"/>
</kw>
<msg timestamp="20220516 17:56:44.801" level="INFO">${result} = </msg>
<status status="PASS" starttime="20220516 17:56:37.548" endtime="20220516 17:56:44.801"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 17:56:44.801" endtime="20220516 17:56:44.802"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:56:44.806" level="INFO">Running command 'ozone sh key info /22025-without-scheme/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:56:49.816" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:56:49.816" level="INFO">${output} = {
  "volumeName": "22025-without-scheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17526,
  "creationTime": "2022-05-16T17:55:34.679Z",
  "modificationTime": "2022-05-16T17:55:37.255Z",
...</msg>
<status status="PASS" starttime="20220516 17:56:44.804" endtime="20220516 17:56:49.816"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:56:49.818" level="INFO">{
  "volumeName": "22025-without-scheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17526,
  "creationTime": "2022-05-16T17:55:34.679Z",
  "modificationTime": "2022-05-16T17:55:37.255Z",
  "replicationConfig": {
    "replicationFactor": "ONE",
    "requiredNodes": 1,
    "replicationType": "RATIS"
  },
  "ozoneKeyLocations": [
    {
      "containerID": 2,
      "localID": 109611004723200000,
      "length": 17526,
      "offset": 0,
      "keyOffset": 0
    }
  ],
  "metadata": {}
}</msg>
<status status="PASS" starttime="20220516 17:56:49.817" endtime="20220516 17:56:49.818"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:56:49.819" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:56:49.818" endtime="20220516 17:56:49.819"/>
</kw>
<status status="PASS" starttime="20220516 17:56:44.803" endtime="20220516 17:56:49.819"/>
</kw>
<msg timestamp="20220516 17:56:49.819" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:56:44.803" endtime="20220516 17:56:49.820"/>
</kw>
<msg timestamp="20220516 17:56:49.820" level="INFO">${result} = {
  "volumeName": "22025-without-scheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17526,
  "creationTime": "2022-05-16T17:55:34.679Z",
  "modificationTime": "2022-05-16T17:55:37.255Z",
...</msg>
<status status="PASS" starttime="20220516 17:56:44.802" endtime="20220516 17:56:49.821"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 17:56:49.821" endtime="20220516 17:56:49.821"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[] | select(.name=="key1") | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:56:49.826" level="INFO">Running command 'ozone sh key list /22025-without-scheme/bb1 | jq -r '.[] | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:56:54.792" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:56:54.792" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20220516 17:56:49.824" endtime="20220516 17:56:54.792"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:56:54.793" level="INFO">key1</msg>
<status status="PASS" starttime="20220516 17:56:54.793" endtime="20220516 17:56:54.794"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:56:54.794" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:56:54.794" endtime="20220516 17:56:54.794"/>
</kw>
<status status="PASS" starttime="20220516 17:56:49.823" endtime="20220516 17:56:54.795"/>
</kw>
<msg timestamp="20220516 17:56:54.795" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:56:49.823" endtime="20220516 17:56:54.796"/>
</kw>
<msg timestamp="20220516 17:56:54.796" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20220516 17:56:49.821" endtime="20220516 17:56:54.796"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220516 17:56:54.796" endtime="20220516 17:56:54.797"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:56:54.801" level="INFO">Running command 'ozone sh key rename /22025-without-scheme/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:56:59.647" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:56:59.647" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 17:56:54.799" endtime="20220516 17:56:59.647"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:56:59.649" level="INFO"/>
<status status="PASS" starttime="20220516 17:56:59.648" endtime="20220516 17:56:59.649"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:56:59.650" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:56:59.650" endtime="20220516 17:56:59.651"/>
</kw>
<status status="PASS" starttime="20220516 17:56:54.798" endtime="20220516 17:56:59.651"/>
</kw>
<msg timestamp="20220516 17:56:59.651" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:56:54.798" endtime="20220516 17:56:59.652"/>
</kw>
<status status="PASS" starttime="20220516 17:56:54.797" endtime="20220516 17:56:59.652"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:56:59.657" level="INFO">Running command 'ozone sh key list /22025-without-scheme/bb1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:57:04.929" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:57:04.929" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20220516 17:56:59.655" endtime="20220516 17:57:04.929"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:57:04.930" level="INFO">key2</msg>
<status status="PASS" starttime="20220516 17:57:04.930" endtime="20220516 17:57:04.931"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:57:04.931" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:57:04.931" endtime="20220516 17:57:04.932"/>
</kw>
<status status="PASS" starttime="20220516 17:56:59.654" endtime="20220516 17:57:04.932"/>
</kw>
<msg timestamp="20220516 17:57:04.932" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:56:59.654" endtime="20220516 17:57:04.933"/>
</kw>
<msg timestamp="20220516 17:57:04.934" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20220516 17:56:59.652" endtime="20220516 17:57:04.934"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220516 17:57:04.934" endtime="20220516 17:57:04.935"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:57:04.939" level="INFO">Running command 'ozone sh key delete /22025-without-scheme/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:57:09.828" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:57:09.828" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 17:57:04.937" endtime="20220516 17:57:09.828"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:57:09.830" level="INFO"/>
<status status="PASS" starttime="20220516 17:57:09.829" endtime="20220516 17:57:09.830"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:57:09.831" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:57:09.830" endtime="20220516 17:57:09.831"/>
</kw>
<status status="PASS" starttime="20220516 17:57:04.936" endtime="20220516 17:57:09.831"/>
</kw>
<msg timestamp="20220516 17:57:09.832" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:57:04.936" endtime="20220516 17:57:09.832"/>
</kw>
<status status="PASS" starttime="20220516 17:57:04.935" endtime="20220516 17:57:09.833"/>
</kw>
<status status="PASS" starttime="20220516 17:55:30.157" endtime="20220516 17:57:09.833"/>
</kw>
<status status="PASS" starttime="20220516 17:55:30.156" endtime="20220516 17:57:09.833"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:57:09.837" level="INFO">Running command 'ozone sh volume clrquota --space-quota /22025-without-scheme 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:57:14.379" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:57:14.379" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 17:57:09.835" endtime="20220516 17:57:14.380"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:57:14.381" level="INFO"/>
<status status="PASS" starttime="20220516 17:57:14.380" endtime="20220516 17:57:14.381"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:57:14.382" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:57:14.381" endtime="20220516 17:57:14.383"/>
</kw>
<status status="PASS" starttime="20220516 17:57:09.834" endtime="20220516 17:57:14.383"/>
</kw>
<msg timestamp="20220516 17:57:14.383" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:57:09.834" endtime="20220516 17:57:14.384"/>
</kw>
<status status="PASS" starttime="20220516 17:57:09.833" endtime="20220516 17:57:14.384"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:57:14.388" level="INFO">Running command 'ozone sh volume info /22025-without-scheme | jq -r '. | select(.name=="22025-without-scheme") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:57:19.323" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:57:19.323" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20220516 17:57:14.386" endtime="20220516 17:57:19.323"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:57:19.325" level="INFO">-1</msg>
<status status="PASS" starttime="20220516 17:57:19.324" endtime="20220516 17:57:19.325"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:57:19.326" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:57:19.325" endtime="20220516 17:57:19.326"/>
</kw>
<status status="PASS" starttime="20220516 17:57:14.386" endtime="20220516 17:57:19.326"/>
</kw>
<msg timestamp="20220516 17:57:19.326" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:57:14.385" endtime="20220516 17:57:19.327"/>
</kw>
<msg timestamp="20220516 17:57:19.327" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20220516 17:57:14.384" endtime="20220516 17:57:19.327"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220516 17:57:19.328" endtime="20220516 17:57:19.328"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:57:19.332" level="INFO">Running command 'ozone sh volume clrquota --namespace-quota /22025-without-scheme 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:57:24.083" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:57:24.083" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 17:57:19.330" endtime="20220516 17:57:24.083"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:57:24.085" level="INFO"/>
<status status="PASS" starttime="20220516 17:57:24.084" endtime="20220516 17:57:24.085"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:57:24.086" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:57:24.085" endtime="20220516 17:57:24.086"/>
</kw>
<status status="PASS" starttime="20220516 17:57:19.329" endtime="20220516 17:57:24.087"/>
</kw>
<msg timestamp="20220516 17:57:24.087" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:57:19.329" endtime="20220516 17:57:24.087"/>
</kw>
<status status="PASS" starttime="20220516 17:57:19.328" endtime="20220516 17:57:24.088"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:57:24.092" level="INFO">Running command 'ozone sh volume info /22025-without-scheme | jq -r '. | select(.name=="22025-without-scheme") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:57:29.470" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:57:29.470" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20220516 17:57:24.090" endtime="20220516 17:57:29.470"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:57:29.472" level="INFO">-1</msg>
<status status="PASS" starttime="20220516 17:57:29.471" endtime="20220516 17:57:29.472"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:57:29.473" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:57:29.472" endtime="20220516 17:57:29.473"/>
</kw>
<status status="PASS" starttime="20220516 17:57:24.089" endtime="20220516 17:57:29.474"/>
</kw>
<msg timestamp="20220516 17:57:29.474" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:57:24.089" endtime="20220516 17:57:29.475"/>
</kw>
<msg timestamp="20220516 17:57:29.475" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20220516 17:57:24.088" endtime="20220516 17:57:29.475"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220516 17:57:29.476" endtime="20220516 17:57:29.476"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:57:29.482" level="INFO">Running command 'ozone sh bucket clrquota --space-quota /22025-without-scheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:57:34.343" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:57:34.343" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 17:57:29.479" endtime="20220516 17:57:34.343"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:57:34.345" level="INFO"/>
<status status="PASS" starttime="20220516 17:57:34.344" endtime="20220516 17:57:34.345"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:57:34.346" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:57:34.345" endtime="20220516 17:57:34.346"/>
</kw>
<status status="PASS" starttime="20220516 17:57:29.478" endtime="20220516 17:57:34.346"/>
</kw>
<msg timestamp="20220516 17:57:34.346" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:57:29.478" endtime="20220516 17:57:34.347"/>
</kw>
<status status="PASS" starttime="20220516 17:57:29.477" endtime="20220516 17:57:34.347"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:57:34.353" level="INFO">Running command 'ozone sh bucket info /22025-without-scheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:57:39.595" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:57:39.595" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20220516 17:57:34.351" endtime="20220516 17:57:39.595"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:57:39.597" level="INFO">-1</msg>
<status status="PASS" starttime="20220516 17:57:39.596" endtime="20220516 17:57:39.597"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:57:39.599" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:57:39.597" endtime="20220516 17:57:39.599"/>
</kw>
<status status="PASS" starttime="20220516 17:57:34.350" endtime="20220516 17:57:39.599"/>
</kw>
<msg timestamp="20220516 17:57:39.599" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:57:34.349" endtime="20220516 17:57:39.600"/>
</kw>
<msg timestamp="20220516 17:57:39.600" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20220516 17:57:34.348" endtime="20220516 17:57:39.600"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220516 17:57:39.600" endtime="20220516 17:57:39.601"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:57:39.605" level="INFO">Running command 'ozone sh bucket clrquota --namespace-quota /22025-without-scheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:57:44.222" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:57:44.222" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 17:57:39.603" endtime="20220516 17:57:44.222"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:57:44.223" level="INFO"/>
<status status="PASS" starttime="20220516 17:57:44.223" endtime="20220516 17:57:44.223"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:57:44.224" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:57:44.224" endtime="20220516 17:57:44.224"/>
</kw>
<status status="PASS" starttime="20220516 17:57:39.602" endtime="20220516 17:57:44.225"/>
</kw>
<msg timestamp="20220516 17:57:44.225" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:57:39.602" endtime="20220516 17:57:44.226"/>
</kw>
<status status="PASS" starttime="20220516 17:57:39.601" endtime="20220516 17:57:44.226"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:57:44.230" level="INFO">Running command 'ozone sh bucket info /22025-without-scheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:57:49.474" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:57:49.474" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20220516 17:57:44.228" endtime="20220516 17:57:49.474"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:57:49.476" level="INFO">-1</msg>
<status status="PASS" starttime="20220516 17:57:49.475" endtime="20220516 17:57:49.476"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:57:49.476" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:57:49.476" endtime="20220516 17:57:49.477"/>
</kw>
<status status="PASS" starttime="20220516 17:57:44.228" endtime="20220516 17:57:49.477"/>
</kw>
<msg timestamp="20220516 17:57:49.477" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:57:44.227" endtime="20220516 17:57:49.478"/>
</kw>
<msg timestamp="20220516 17:57:49.478" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20220516 17:57:44.226" endtime="20220516 17:57:49.478"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220516 17:57:49.478" endtime="20220516 17:57:49.479"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:57:49.483" level="INFO">Running command 'ozone sh bucket delete /22025-without-scheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:57:54.150" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:57:54.150" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 17:57:49.481" endtime="20220516 17:57:54.150"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:57:54.152" level="INFO"/>
<status status="PASS" starttime="20220516 17:57:54.151" endtime="20220516 17:57:54.152"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:57:54.153" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:57:54.152" endtime="20220516 17:57:54.153"/>
</kw>
<status status="PASS" starttime="20220516 17:57:49.480" endtime="20220516 17:57:54.153"/>
</kw>
<msg timestamp="20220516 17:57:54.153" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:57:49.480" endtime="20220516 17:57:54.154"/>
</kw>
<status status="PASS" starttime="20220516 17:57:49.479" endtime="20220516 17:57:54.155"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:57:54.163" level="INFO">Running command 'ozone sh volume delete /22025-without-scheme 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:57:58.819" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:57:58.819" level="INFO">${output} = Volume 22025-without-scheme is deleted</msg>
<status status="PASS" starttime="20220516 17:57:54.159" endtime="20220516 17:57:58.819"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:57:58.821" level="INFO">Volume 22025-without-scheme is deleted</msg>
<status status="PASS" starttime="20220516 17:57:58.820" endtime="20220516 17:57:58.821"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:57:58.822" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:57:58.821" endtime="20220516 17:57:58.822"/>
</kw>
<status status="PASS" starttime="20220516 17:57:54.158" endtime="20220516 17:57:58.822"/>
</kw>
<msg timestamp="20220516 17:57:58.823" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:57:54.158" endtime="20220516 17:57:58.824"/>
</kw>
<status status="PASS" starttime="20220516 17:57:54.155" endtime="20220516 17:57:58.824"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:57:58.829" level="INFO">Running command 'ozone sh volume create /22025-without-scheme 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:58:03.498" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:58:03.498" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 17:57:58.826" endtime="20220516 17:58:03.498"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:58:03.500" level="INFO"/>
<status status="PASS" starttime="20220516 17:58:03.499" endtime="20220516 17:58:03.500"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:58:03.501" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:58:03.500" endtime="20220516 17:58:03.501"/>
</kw>
<status status="PASS" starttime="20220516 17:57:58.825" endtime="20220516 17:58:03.501"/>
</kw>
<msg timestamp="20220516 17:58:03.502" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:57:58.825" endtime="20220516 17:58:03.502"/>
</kw>
<status status="PASS" starttime="20220516 17:57:58.824" endtime="20220516 17:58:03.503"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:58:03.508" level="INFO">Running command 'ozone sh volume info /22025-without-scheme | jq -r '. | select(.name=="22025-without-scheme") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:58:08.679" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:58:08.679" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20220516 17:58:03.505" endtime="20220516 17:58:08.679"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:58:08.680" level="INFO">-1</msg>
<status status="PASS" starttime="20220516 17:58:08.679" endtime="20220516 17:58:08.680"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:58:08.681" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:58:08.681" endtime="20220516 17:58:08.681"/>
</kw>
<status status="PASS" starttime="20220516 17:58:03.504" endtime="20220516 17:58:08.682"/>
</kw>
<msg timestamp="20220516 17:58:08.682" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:58:03.504" endtime="20220516 17:58:08.683"/>
</kw>
<msg timestamp="20220516 17:58:08.683" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20220516 17:58:03.503" endtime="20220516 17:58:08.683"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220516 17:58:08.683" endtime="20220516 17:58:08.684"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:58:08.689" level="INFO">Running command 'ozone sh volume info /22025-without-scheme | jq -r '. | select(.name=="22025-without-scheme") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:58:13.720" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:58:13.721" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20220516 17:58:08.687" endtime="20220516 17:58:13.721"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:58:13.722" level="INFO">-1</msg>
<status status="PASS" starttime="20220516 17:58:13.722" endtime="20220516 17:58:13.723"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:58:13.723" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:58:13.723" endtime="20220516 17:58:13.723"/>
</kw>
<status status="PASS" starttime="20220516 17:58:08.686" endtime="20220516 17:58:13.724"/>
</kw>
<msg timestamp="20220516 17:58:13.724" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:58:08.686" endtime="20220516 17:58:13.725"/>
</kw>
<msg timestamp="20220516 17:58:13.725" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20220516 17:58:08.684" endtime="20220516 17:58:13.725"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220516 17:58:13.725" endtime="20220516 17:58:13.726"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:58:13.730" level="INFO">Running command 'ozone sh bucket create /22025-without-scheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:58:18.440" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:58:18.440" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 17:58:13.728" endtime="20220516 17:58:18.440"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:58:18.442" level="INFO"/>
<status status="PASS" starttime="20220516 17:58:18.441" endtime="20220516 17:58:18.442"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:58:18.443" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:58:18.442" endtime="20220516 17:58:18.443"/>
</kw>
<status status="PASS" starttime="20220516 17:58:13.727" endtime="20220516 17:58:18.444"/>
</kw>
<msg timestamp="20220516 17:58:18.444" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:58:13.727" endtime="20220516 17:58:18.445"/>
</kw>
<status status="PASS" starttime="20220516 17:58:13.726" endtime="20220516 17:58:18.445"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:58:18.451" level="INFO">Running command 'ozone sh bucket info /22025-without-scheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:58:23.687" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:58:23.687" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20220516 17:58:18.448" endtime="20220516 17:58:23.687"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:58:23.689" level="INFO">-1</msg>
<status status="PASS" starttime="20220516 17:58:23.688" endtime="20220516 17:58:23.689"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:58:23.689" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:58:23.689" endtime="20220516 17:58:23.690"/>
</kw>
<status status="PASS" starttime="20220516 17:58:18.447" endtime="20220516 17:58:23.690"/>
</kw>
<msg timestamp="20220516 17:58:23.697" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:58:18.447" endtime="20220516 17:58:23.697"/>
</kw>
<msg timestamp="20220516 17:58:23.698" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20220516 17:58:18.446" endtime="20220516 17:58:23.698"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220516 17:58:23.698" endtime="20220516 17:58:23.699"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:58:23.704" level="INFO">Running command 'ozone sh bucket info /22025-without-scheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:58:28.812" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:58:28.812" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20220516 17:58:23.701" endtime="20220516 17:58:28.812"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:58:28.813" level="INFO">-1</msg>
<status status="PASS" starttime="20220516 17:58:28.812" endtime="20220516 17:58:28.813"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:58:28.815" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:58:28.814" endtime="20220516 17:58:28.815"/>
</kw>
<status status="PASS" starttime="20220516 17:58:23.700" endtime="20220516 17:58:28.815"/>
</kw>
<msg timestamp="20220516 17:58:28.815" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:58:23.700" endtime="20220516 17:58:28.816"/>
</kw>
<msg timestamp="20220516 17:58:28.816" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20220516 17:58:23.699" endtime="20220516 17:58:28.816"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220516 17:58:28.817" endtime="20220516 17:58:28.817"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:58:28.822" level="INFO">Running command 'ozone sh bucket delete /22025-without-scheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:58:33.552" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:58:33.552" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 17:58:28.819" endtime="20220516 17:58:33.552"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:58:33.554" level="INFO"/>
<status status="PASS" starttime="20220516 17:58:33.553" endtime="20220516 17:58:33.554"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:58:33.555" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:58:33.555" endtime="20220516 17:58:33.556"/>
</kw>
<status status="PASS" starttime="20220516 17:58:28.819" endtime="20220516 17:58:33.556"/>
</kw>
<msg timestamp="20220516 17:58:33.556" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:58:28.818" endtime="20220516 17:58:33.557"/>
</kw>
<status status="PASS" starttime="20220516 17:58:28.817" endtime="20220516 17:58:33.557"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:58:33.562" level="INFO">Running command 'ozone sh volume delete /22025-without-scheme 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:58:38.338" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:58:38.338" level="INFO">${output} = Volume 22025-without-scheme is deleted</msg>
<status status="PASS" starttime="20220516 17:58:33.559" endtime="20220516 17:58:38.338"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:58:38.340" level="INFO">Volume 22025-without-scheme is deleted</msg>
<status status="PASS" starttime="20220516 17:58:38.339" endtime="20220516 17:58:38.340"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:58:38.341" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:58:38.340" endtime="20220516 17:58:38.341"/>
</kw>
<status status="PASS" starttime="20220516 17:58:33.559" endtime="20220516 17:58:38.341"/>
</kw>
<msg timestamp="20220516 17:58:38.341" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:58:33.558" endtime="20220516 17:58:38.342"/>
</kw>
<status status="PASS" starttime="20220516 17:58:33.557" endtime="20220516 17:58:38.342"/>
</kw>
<status status="PASS" starttime="20220516 17:54:19.372" endtime="20220516 17:58:38.343"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220516 17:54:19.371" endtime="20220516 17:58:38.343"/>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="PASS" starttime="20220516 17:54:19.345" endtime="20220516 17:58:38.344"/>
</suite>
<suite id="s1-s1-s5" name="Ozone-Shell" source="/opt/hadoop/smoketest/basic/ozone-shell.robot">
<kw name="Generate prefix" library="ozone-shell-lib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220516 17:58:38.356" level="INFO">${random} = 58091</msg>
<status status="PASS" starttime="20220516 17:58:38.356" endtime="20220516 17:58:38.356"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220516 17:58:38.357" level="INFO">${prefix} = 58091</msg>
<status status="PASS" starttime="20220516 17:58:38.357" endtime="20220516 17:58:38.357"/>
</kw>
<status status="PASS" starttime="20220516 17:58:38.356" endtime="20220516 17:58:38.358"/>
</kw>
<test id="s1-s1-s5-t1" name="RpcClient with port">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:58:38.365" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:58:38.369" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:58:38.369" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220516 17:58:38.363" endtime="20220516 17:58:38.370"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:58:38.371" level="INFO">scm</msg>
<status status="PASS" starttime="20220516 17:58:38.370" endtime="20220516 17:58:38.371"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:58:38.372" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:58:38.371" endtime="20220516 17:58:38.372"/>
</kw>
<status status="PASS" starttime="20220516 17:58:38.362" endtime="20220516 17:58:38.372"/>
</kw>
<msg timestamp="20220516 17:58:38.372" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:58:38.360" endtime="20220516 17:58:38.373"/>
</kw>
<msg timestamp="20220516 17:58:38.373" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220516 17:58:38.359" endtime="20220516 17:58:38.373"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220516 17:58:38.376" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220516 17:58:38.374" endtime="20220516 17:58:38.376"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:58:38.381" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:58:38.455" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:58:38.455" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 17:58:38.378" endtime="20220516 17:58:38.456"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:58:38.457" level="INFO"/>
<status status="PASS" starttime="20220516 17:58:38.456" endtime="20220516 17:58:38.457"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:58:38.458" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:58:38.457" endtime="20220516 17:58:38.458"/>
</kw>
<status status="PASS" starttime="20220516 17:58:38.378" endtime="20220516 17:58:38.459"/>
</kw>
<msg timestamp="20220516 17:58:38.459" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:58:38.377" endtime="20220516 17:58:38.459"/>
</kw>
<status status="PASS" starttime="20220516 17:58:38.376" endtime="20220516 17:58:38.460"/>
</kw>
<status status="PASS" starttime="20220516 17:58:38.376" endtime="20220516 17:58:38.460"/>
</kw>
<status status="PASS" starttime="20220516 17:58:38.359" endtime="20220516 17:58:38.460"/>
</kw>
<status status="PASS" starttime="20220516 17:58:38.358" endtime="20220516 17:58:38.460"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-with-host</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:58:38.465" level="INFO">Running command 'ozone sh volume info o3://om:9862/58091-with-host 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:58:43.276" level="INFO">${rc} = 255</msg>
<msg timestamp="20220516 17:58:43.276" level="INFO">${output} = VOLUME_NOT_FOUND Volume 58091-with-host is not found</msg>
<status status="PASS" starttime="20220516 17:58:38.462" endtime="20220516 17:58:43.276"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:58:43.278" level="INFO">VOLUME_NOT_FOUND Volume 58091-with-host is not found</msg>
<status status="PASS" starttime="20220516 17:58:43.277" endtime="20220516 17:58:43.278"/>
</kw>
<msg timestamp="20220516 17:58:43.279" level="INFO">${result} = VOLUME_NOT_FOUND Volume 58091-with-host is not found</msg>
<status status="PASS" starttime="20220516 17:58:38.461" endtime="20220516 17:58:43.279"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 17:58:43.279" endtime="20220516 17:58:43.279"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:58:43.284" level="INFO">Running command 'ozone sh volume create o3://om:9862/58091-with-host --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:58:47.982" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:58:47.982" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 17:58:43.282" endtime="20220516 17:58:47.982"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:58:47.984" level="INFO"/>
<status status="PASS" starttime="20220516 17:58:47.983" endtime="20220516 17:58:47.984"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:58:47.985" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:58:47.985" endtime="20220516 17:58:47.986"/>
</kw>
<status status="PASS" starttime="20220516 17:58:43.281" endtime="20220516 17:58:47.986"/>
</kw>
<msg timestamp="20220516 17:58:47.986" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:58:43.281" endtime="20220516 17:58:47.987"/>
</kw>
<msg timestamp="20220516 17:58:47.988" level="INFO">${result} = </msg>
<status status="PASS" starttime="20220516 17:58:43.280" endtime="20220516 17:58:47.988"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 17:58:47.989" endtime="20220516 17:58:47.989"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:58:47.994" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '.[] | select(.name=="58091-with-host")' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:58:53.140" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:58:53.140" level="INFO">${output} = {
  "metadata": {},
  "name": "58091-with-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20220516 17:58:47.992" endtime="20220516 17:58:53.141"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:58:53.144" level="INFO">{
  "metadata": {},
  "name": "58091-with-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2022-05-16T17:58:47.910Z",
  "modificationTime": "2022-05-16T17:58:47.910Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20220516 17:58:53.141" endtime="20220516 17:58:53.144"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:58:53.145" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:58:53.144" endtime="20220516 17:58:53.145"/>
</kw>
<status status="PASS" starttime="20220516 17:58:47.991" endtime="20220516 17:58:53.145"/>
</kw>
<msg timestamp="20220516 17:58:53.145" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:58:47.990" endtime="20220516 17:58:53.146"/>
</kw>
<msg timestamp="20220516 17:58:53.146" level="INFO">${result} = {
  "metadata": {},
  "name": "58091-with-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20220516 17:58:47.989" endtime="20220516 17:58:53.146"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 17:58:53.146" endtime="20220516 17:58:53.147"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:58:53.152" level="INFO">Running command 'ozone sh volume list | jq -r '.[] | select(.name=="58091-with-host")' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:58:58.417" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:58:58.417" level="INFO">${output} = {
  "metadata": {},
  "name": "58091-with-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20220516 17:58:53.150" endtime="20220516 17:58:58.417"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:58:58.419" level="INFO">{
  "metadata": {},
  "name": "58091-with-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2022-05-16T17:58:47.910Z",
  "modificationTime": "2022-05-16T17:58:47.910Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20220516 17:58:58.418" endtime="20220516 17:58:58.419"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:58:58.420" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:58:58.419" endtime="20220516 17:58:58.420"/>
</kw>
<status status="PASS" starttime="20220516 17:58:53.149" endtime="20220516 17:58:58.420"/>
</kw>
<msg timestamp="20220516 17:58:58.420" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:58:53.149" endtime="20220516 17:58:58.421"/>
</kw>
<msg timestamp="20220516 17:58:58.421" level="INFO">${result} = {
  "metadata": {},
  "name": "58091-with-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20220516 17:58:53.147" endtime="20220516 17:58:58.421"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 17:58:58.422" endtime="20220516 17:58:58.422"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:58:58.427" level="INFO">Running command 'ozone sh volume setquota o3://om:9862/58091-with-host --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:59:03.182" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:59:03.182" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 17:58:58.425" endtime="20220516 17:59:03.182"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:59:03.183" level="INFO"/>
<status status="PASS" starttime="20220516 17:59:03.183" endtime="20220516 17:59:03.184"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:59:03.184" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:59:03.184" endtime="20220516 17:59:03.184"/>
</kw>
<status status="PASS" starttime="20220516 17:58:58.424" endtime="20220516 17:59:03.185"/>
</kw>
<msg timestamp="20220516 17:59:03.185" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:58:58.424" endtime="20220516 17:59:03.186"/>
</kw>
<status status="PASS" starttime="20220516 17:58:58.422" endtime="20220516 17:59:03.186"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:59:03.191" level="INFO">Running command 'ozone sh volume info o3://om:9862/58091-with-host | jq -r '. | select(.name=="58091-with-host") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:59:08.004" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:59:08.004" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20220516 17:59:03.189" endtime="20220516 17:59:08.004"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:59:08.006" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20220516 17:59:08.005" endtime="20220516 17:59:08.006"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:59:08.007" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:59:08.006" endtime="20220516 17:59:08.007"/>
</kw>
<status status="PASS" starttime="20220516 17:59:03.188" endtime="20220516 17:59:08.007"/>
</kw>
<msg timestamp="20220516 17:59:08.007" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:59:03.188" endtime="20220516 17:59:08.008"/>
</kw>
<msg timestamp="20220516 17:59:08.008" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20220516 17:59:03.186" endtime="20220516 17:59:08.008"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220516 17:59:08.008" endtime="20220516 17:59:08.009"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:59:08.014" level="INFO">Running command 'ozone sh bucket create o3://om:9862/58091-with-host/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:59:12.759" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:59:12.759" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 17:59:08.011" endtime="20220516 17:59:12.759"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:59:12.761" level="INFO"/>
<status status="PASS" starttime="20220516 17:59:12.759" endtime="20220516 17:59:12.761"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:59:12.762" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:59:12.761" endtime="20220516 17:59:12.762"/>
</kw>
<status status="PASS" starttime="20220516 17:59:08.011" endtime="20220516 17:59:12.762"/>
</kw>
<msg timestamp="20220516 17:59:12.762" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:59:08.010" endtime="20220516 17:59:12.763"/>
</kw>
<status status="PASS" starttime="20220516 17:59:08.009" endtime="20220516 17:59:12.763"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:59:12.768" level="INFO">Running command 'ozone sh bucket info o3://om:9862/58091-with-host/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:59:17.773" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:59:17.774" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20220516 17:59:12.766" endtime="20220516 17:59:17.774"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:59:17.775" level="INFO">DISK</msg>
<status status="PASS" starttime="20220516 17:59:17.774" endtime="20220516 17:59:17.775"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:59:17.776" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:59:17.775" endtime="20220516 17:59:17.776"/>
</kw>
<status status="PASS" starttime="20220516 17:59:12.765" endtime="20220516 17:59:17.777"/>
</kw>
<msg timestamp="20220516 17:59:17.777" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:59:12.765" endtime="20220516 17:59:17.777"/>
</kw>
<msg timestamp="20220516 17:59:17.778" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20220516 17:59:12.764" endtime="20220516 17:59:17.778"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220516 17:59:17.778" endtime="20220516 17:59:17.779"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:59:17.786" level="INFO">Running command 'ozone sh bucket info o3://om:9862/58091-with-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:59:22.905" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:59:22.905" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20220516 17:59:17.782" endtime="20220516 17:59:22.905"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:59:22.907" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20220516 17:59:22.906" endtime="20220516 17:59:22.907"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:59:22.907" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:59:22.907" endtime="20220516 17:59:22.908"/>
</kw>
<status status="PASS" starttime="20220516 17:59:17.781" endtime="20220516 17:59:22.908"/>
</kw>
<msg timestamp="20220516 17:59:22.908" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:59:17.780" endtime="20220516 17:59:22.909"/>
</kw>
<msg timestamp="20220516 17:59:22.910" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20220516 17:59:17.779" endtime="20220516 17:59:22.910"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220516 17:59:22.910" endtime="20220516 17:59:22.910"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:59:22.915" level="INFO">Running command 'ozone sh bucket info o3://om:9862/58091-with-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:59:28.022" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:59:28.022" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20220516 17:59:22.913" endtime="20220516 17:59:28.022"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:59:28.024" level="INFO">100</msg>
<status status="PASS" starttime="20220516 17:59:28.023" endtime="20220516 17:59:28.024"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:59:28.024" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:59:28.024" endtime="20220516 17:59:28.025"/>
</kw>
<status status="PASS" starttime="20220516 17:59:22.912" endtime="20220516 17:59:28.025"/>
</kw>
<msg timestamp="20220516 17:59:28.025" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:59:22.912" endtime="20220516 17:59:28.028"/>
</kw>
<msg timestamp="20220516 17:59:28.028" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20220516 17:59:22.911" endtime="20220516 17:59:28.029"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220516 17:59:28.029" endtime="20220516 17:59:28.029"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:59:28.034" level="INFO">Running command 'ozone sh bucket setquota o3://om:9862/58091-with-host/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:59:33.052" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:59:33.052" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 17:59:28.032" endtime="20220516 17:59:33.052"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:59:33.054" level="INFO"/>
<status status="PASS" starttime="20220516 17:59:33.053" endtime="20220516 17:59:33.054"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:59:33.055" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:59:33.054" endtime="20220516 17:59:33.056"/>
</kw>
<status status="PASS" starttime="20220516 17:59:28.031" endtime="20220516 17:59:33.056"/>
</kw>
<msg timestamp="20220516 17:59:33.056" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:59:28.031" endtime="20220516 17:59:33.057"/>
</kw>
<status status="PASS" starttime="20220516 17:59:28.030" endtime="20220516 17:59:33.057"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:59:33.062" level="INFO">Running command 'ozone sh bucket info o3://om:9862/58091-with-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:59:38.032" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:59:38.033" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20220516 17:59:33.060" endtime="20220516 17:59:38.033"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:59:38.034" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20220516 17:59:38.033" endtime="20220516 17:59:38.035"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:59:38.035" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:59:38.035" endtime="20220516 17:59:38.036"/>
</kw>
<status status="PASS" starttime="20220516 17:59:33.059" endtime="20220516 17:59:38.036"/>
</kw>
<msg timestamp="20220516 17:59:38.036" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:59:33.059" endtime="20220516 17:59:38.037"/>
</kw>
<msg timestamp="20220516 17:59:38.037" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20220516 17:59:33.057" endtime="20220516 17:59:38.037"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220516 17:59:38.037" endtime="20220516 17:59:38.038"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:59:38.042" level="INFO">Running command 'ozone sh bucket info o3://om:9862/58091-with-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:59:43.303" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:59:43.303" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20220516 17:59:38.040" endtime="20220516 17:59:43.303"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:59:43.305" level="INFO">1000</msg>
<status status="PASS" starttime="20220516 17:59:43.304" endtime="20220516 17:59:43.305"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:59:43.306" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:59:43.305" endtime="20220516 17:59:43.306"/>
</kw>
<status status="PASS" starttime="20220516 17:59:38.040" endtime="20220516 17:59:43.307"/>
</kw>
<msg timestamp="20220516 17:59:43.307" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:59:38.039" endtime="20220516 17:59:43.307"/>
</kw>
<msg timestamp="20220516 17:59:43.308" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20220516 17:59:38.038" endtime="20220516 17:59:43.308"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220516 17:59:43.308" endtime="20220516 17:59:43.308"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '.[] | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:59:43.313" level="INFO">Running command 'ozone sh bucket list o3://om:9862/58091-with-host/ | jq -r '.[] | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:59:48.593" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:59:48.593" level="INFO">${output} = 58091-with-host</msg>
<status status="PASS" starttime="20220516 17:59:43.311" endtime="20220516 17:59:48.593"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:59:48.594" level="INFO">58091-with-host</msg>
<status status="PASS" starttime="20220516 17:59:48.593" endtime="20220516 17:59:48.594"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:59:48.595" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:59:48.595" endtime="20220516 17:59:48.596"/>
</kw>
<status status="PASS" starttime="20220516 17:59:43.310" endtime="20220516 17:59:48.596"/>
</kw>
<msg timestamp="20220516 17:59:48.596" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:59:43.310" endtime="20220516 17:59:48.597"/>
</kw>
<msg timestamp="20220516 17:59:48.597" level="INFO">${result} = 58091-with-host</msg>
<status status="PASS" starttime="20220516 17:59:43.309" endtime="20220516 17:59:48.597"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220516 17:59:48.597" endtime="20220516 17:59:48.598"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:59:48.604" level="INFO">Running command 'ozone sh key put o3://om:9862/58091-with-host/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:59:56.174" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:59:56.174" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 17:59:48.602" endtime="20220516 17:59:56.174"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:59:56.175" level="INFO"/>
<status status="PASS" starttime="20220516 17:59:56.175" endtime="20220516 17:59:56.176"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:59:56.176" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:59:56.176" endtime="20220516 17:59:56.177"/>
</kw>
<status status="PASS" starttime="20220516 17:59:48.601" endtime="20220516 17:59:56.177"/>
</kw>
<msg timestamp="20220516 17:59:56.177" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:59:48.601" endtime="20220516 17:59:56.178"/>
</kw>
<status status="PASS" starttime="20220516 17:59:48.600" endtime="20220516 17:59:56.178"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:59:56.183" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:59:56.186" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:59:56.186" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 17:59:56.180" endtime="20220516 17:59:56.186"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:59:56.187" level="INFO"/>
<status status="PASS" starttime="20220516 17:59:56.186" endtime="20220516 17:59:56.187"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:59:56.188" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:59:56.187" endtime="20220516 17:59:56.188"/>
</kw>
<status status="PASS" starttime="20220516 17:59:56.179" endtime="20220516 17:59:56.189"/>
</kw>
<msg timestamp="20220516 17:59:56.189" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:59:56.179" endtime="20220516 17:59:56.190"/>
</kw>
<status status="PASS" starttime="20220516 17:59:56.178" endtime="20220516 17:59:56.190"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:59:56.195" level="INFO">Running command 'ozone sh key get o3://om:9862/58091-with-host/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:00:03.480" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:00:03.481" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 17:59:56.192" endtime="20220516 18:00:03.481"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:00:03.482" level="INFO"/>
<status status="PASS" starttime="20220516 18:00:03.481" endtime="20220516 18:00:03.482"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:00:03.483" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:00:03.482" endtime="20220516 18:00:03.483"/>
</kw>
<status status="PASS" starttime="20220516 17:59:56.192" endtime="20220516 18:00:03.484"/>
</kw>
<msg timestamp="20220516 18:00:03.484" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:59:56.191" endtime="20220516 18:00:03.484"/>
</kw>
<status status="PASS" starttime="20220516 17:59:56.190" endtime="20220516 18:00:03.485"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:00:03.489" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:00:03.492" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:00:03.492" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:00:03.487" endtime="20220516 18:00:03.492"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:00:03.494" level="INFO"/>
<status status="PASS" starttime="20220516 18:00:03.493" endtime="20220516 18:00:03.494"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:00:03.495" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:00:03.494" endtime="20220516 18:00:03.495"/>
</kw>
<status status="PASS" starttime="20220516 18:00:03.486" endtime="20220516 18:00:03.496"/>
</kw>
<msg timestamp="20220516 18:00:03.496" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:00:03.486" endtime="20220516 18:00:03.496"/>
</kw>
<status status="PASS" starttime="20220516 18:00:03.485" endtime="20220516 18:00:03.497"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:00:03.503" level="INFO">Running command 'ozone sh key put -t RATIS o3://om:9862/58091-with-host/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:00:13.724" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:00:13.724" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:00:03.499" endtime="20220516 18:00:13.724"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:00:13.726" level="INFO"/>
<status status="PASS" starttime="20220516 18:00:13.724" endtime="20220516 18:00:13.726"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:00:13.732" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:00:13.726" endtime="20220516 18:00:13.732"/>
</kw>
<status status="PASS" starttime="20220516 18:00:03.498" endtime="20220516 18:00:13.733"/>
</kw>
<msg timestamp="20220516 18:00:13.733" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:00:03.498" endtime="20220516 18:00:13.733"/>
</kw>
<status status="PASS" starttime="20220516 18:00:03.497" endtime="20220516 18:00:13.734"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:00:13.739" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:00:13.742" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:00:13.743" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:00:13.736" endtime="20220516 18:00:13.743"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:00:13.744" level="INFO"/>
<status status="PASS" starttime="20220516 18:00:13.743" endtime="20220516 18:00:13.744"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:00:13.745" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:00:13.744" endtime="20220516 18:00:13.745"/>
</kw>
<status status="PASS" starttime="20220516 18:00:13.736" endtime="20220516 18:00:13.745"/>
</kw>
<msg timestamp="20220516 18:00:13.745" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:00:13.735" endtime="20220516 18:00:13.746"/>
</kw>
<status status="PASS" starttime="20220516 18:00:13.734" endtime="20220516 18:00:13.747"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:00:13.751" level="INFO">Running command 'ozone sh key get o3://om:9862/58091-with-host/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:00:20.922" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:00:20.922" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:00:13.749" endtime="20220516 18:00:20.922"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:00:20.923" level="INFO"/>
<status status="PASS" starttime="20220516 18:00:20.923" endtime="20220516 18:00:20.924"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:00:20.924" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:00:20.924" endtime="20220516 18:00:20.924"/>
</kw>
<status status="PASS" starttime="20220516 18:00:13.748" endtime="20220516 18:00:20.925"/>
</kw>
<msg timestamp="20220516 18:00:20.925" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:00:13.748" endtime="20220516 18:00:20.926"/>
</kw>
<status status="PASS" starttime="20220516 18:00:13.747" endtime="20220516 18:00:20.926"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:00:20.931" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:00:20.933" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:00:20.934" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:00:20.928" endtime="20220516 18:00:20.934"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:00:20.935" level="INFO"/>
<status status="PASS" starttime="20220516 18:00:20.934" endtime="20220516 18:00:20.935"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:00:20.936" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:00:20.935" endtime="20220516 18:00:20.936"/>
</kw>
<status status="PASS" starttime="20220516 18:00:20.927" endtime="20220516 18:00:20.936"/>
</kw>
<msg timestamp="20220516 18:00:20.936" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:00:20.927" endtime="20220516 18:00:20.937"/>
</kw>
<status status="PASS" starttime="20220516 18:00:20.926" endtime="20220516 18:00:20.937"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:00:20.942" level="INFO">Running command 'ozone sh key info o3://om:9862/58091-with-host/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:00:26.340" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:00:26.340" level="INFO">${output} = {
  "volumeName": "58091-with-host",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17526,
  "creationTime": "2022-05-16T18:00:08.326Z",
  "modificationTime": "2022-05-16T18:00:13.259Z",...</msg>
<status status="PASS" starttime="20220516 18:00:20.940" endtime="20220516 18:00:26.340"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:00:26.342" level="INFO">{
  "volumeName": "58091-with-host",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17526,
  "creationTime": "2022-05-16T18:00:08.326Z",
  "modificationTime": "2022-05-16T18:00:13.259Z",
  "replicationConfig": {
    "replicationFactor": "THREE",
    "requiredNodes": 3,
    "replicationType": "RATIS"
  },
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 109611004723200020,
      "length": 17526,
      "offset": 0,
      "keyOffset": 0
    }
  ],
  "metadata": {}
}</msg>
<status status="PASS" starttime="20220516 18:00:26.341" endtime="20220516 18:00:26.342"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:00:26.343" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:00:26.342" endtime="20220516 18:00:26.343"/>
</kw>
<status status="PASS" starttime="20220516 18:00:20.939" endtime="20220516 18:00:26.344"/>
</kw>
<msg timestamp="20220516 18:00:26.344" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:00:20.939" endtime="20220516 18:00:26.345"/>
</kw>
<msg timestamp="20220516 18:00:26.345" level="INFO">${result} = {
  "volumeName": "58091-with-host",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17526,
  "creationTime": "2022-05-16T18:00:08.326Z",
  "modificationTime": "2022-05-16T18:00:13.259Z",...</msg>
<status status="PASS" starttime="20220516 18:00:20.938" endtime="20220516 18:00:26.346"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 18:00:26.346" endtime="20220516 18:00:26.347"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:00:26.352" level="INFO">Running command 'ozone sh key delete o3://om:9862/58091-with-host/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:00:30.974" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:00:30.974" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:00:26.349" endtime="20220516 18:00:30.974"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:00:30.975" level="INFO"/>
<status status="PASS" starttime="20220516 18:00:30.975" endtime="20220516 18:00:30.976"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:00:30.977" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:00:30.976" endtime="20220516 18:00:30.977"/>
</kw>
<status status="PASS" starttime="20220516 18:00:26.348" endtime="20220516 18:00:30.977"/>
</kw>
<msg timestamp="20220516 18:00:30.977" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:00:26.348" endtime="20220516 18:00:30.978"/>
</kw>
<status status="PASS" starttime="20220516 18:00:26.347" endtime="20220516 18:00:30.978"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:00:30.983" level="INFO">Running command 'ozone sh key cp o3://om:9862/58091-with-host/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:00:39.314" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:00:39.314" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:00:30.980" endtime="20220516 18:00:39.314"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:00:39.316" level="INFO"/>
<status status="PASS" starttime="20220516 18:00:39.315" endtime="20220516 18:00:39.316"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:00:39.317" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:00:39.317" endtime="20220516 18:00:39.317"/>
</kw>
<status status="PASS" starttime="20220516 18:00:30.980" endtime="20220516 18:00:39.318"/>
</kw>
<msg timestamp="20220516 18:00:39.318" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:00:30.979" endtime="20220516 18:00:39.319"/>
</kw>
<status status="PASS" starttime="20220516 18:00:30.979" endtime="20220516 18:00:39.319"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:00:39.323" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:00:39.326" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:00:39.326" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:00:39.321" endtime="20220516 18:00:39.326"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:00:39.327" level="INFO"/>
<status status="PASS" starttime="20220516 18:00:39.327" endtime="20220516 18:00:39.327"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:00:39.328" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:00:39.328" endtime="20220516 18:00:39.328"/>
</kw>
<status status="PASS" starttime="20220516 18:00:39.320" endtime="20220516 18:00:39.329"/>
</kw>
<msg timestamp="20220516 18:00:39.329" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:00:39.320" endtime="20220516 18:00:39.330"/>
</kw>
<status status="PASS" starttime="20220516 18:00:39.319" endtime="20220516 18:00:39.330"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:00:39.335" level="INFO">Running command 'ozone sh key get o3://om:9862/58091-with-host/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:00:46.868" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:00:46.869" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:00:39.332" endtime="20220516 18:00:46.869"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:00:46.870" level="INFO"/>
<status status="PASS" starttime="20220516 18:00:46.869" endtime="20220516 18:00:46.870"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:00:46.871" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:00:46.871" endtime="20220516 18:00:46.871"/>
</kw>
<status status="PASS" starttime="20220516 18:00:39.332" endtime="20220516 18:00:46.872"/>
</kw>
<msg timestamp="20220516 18:00:46.872" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:00:39.331" endtime="20220516 18:00:46.873"/>
</kw>
<status status="PASS" starttime="20220516 18:00:39.330" endtime="20220516 18:00:46.874"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:00:46.879" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:00:46.882" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:00:46.882" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:00:46.876" endtime="20220516 18:00:46.882"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:00:46.884" level="INFO"/>
<status status="PASS" starttime="20220516 18:00:46.883" endtime="20220516 18:00:46.884"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:00:46.885" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:00:46.884" endtime="20220516 18:00:46.885"/>
</kw>
<status status="PASS" starttime="20220516 18:00:46.875" endtime="20220516 18:00:46.885"/>
</kw>
<msg timestamp="20220516 18:00:46.885" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:00:46.875" endtime="20220516 18:00:46.886"/>
</kw>
<status status="PASS" starttime="20220516 18:00:46.874" endtime="20220516 18:00:46.887"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:00:46.893" level="INFO">Running command 'ozone sh key delete o3://om:9862/58091-with-host/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:00:51.762" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:00:51.762" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:00:46.891" endtime="20220516 18:00:51.762"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:00:51.763" level="INFO"/>
<status status="PASS" starttime="20220516 18:00:51.762" endtime="20220516 18:00:51.763"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:00:51.764" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:00:51.764" endtime="20220516 18:00:51.764"/>
</kw>
<status status="PASS" starttime="20220516 18:00:46.888" endtime="20220516 18:00:51.765"/>
</kw>
<msg timestamp="20220516 18:00:51.765" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:00:46.888" endtime="20220516 18:00:51.765"/>
</kw>
<status status="PASS" starttime="20220516 18:00:46.887" endtime="20220516 18:00:51.766"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:00:51.769" level="INFO">Running command 'ozone sh key get o3://om:9862/58091-with-host/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:00:56.636" level="INFO">${rc} = 255</msg>
<msg timestamp="20220516 18:00:56.636" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20220516 18:00:51.767" endtime="20220516 18:00:56.636"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:00:56.637" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20220516 18:00:56.637" endtime="20220516 18:00:56.638"/>
</kw>
<msg timestamp="20220516 18:00:56.638" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20220516 18:00:51.766" endtime="20220516 18:00:56.638"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 18:00:56.639" endtime="20220516 18:00:56.639"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:00:56.643" level="INFO">Running command 'ozone sh key get --force o3://om:9862/58091-with-host/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:01:04.046" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:01:04.046" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:00:56.641" endtime="20220516 18:01:04.046"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:01:04.047" level="INFO"/>
<status status="PASS" starttime="20220516 18:01:04.046" endtime="20220516 18:01:04.047"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:01:04.048" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:01:04.048" endtime="20220516 18:01:04.048"/>
</kw>
<status status="PASS" starttime="20220516 18:00:56.640" endtime="20220516 18:01:04.049"/>
</kw>
<msg timestamp="20220516 18:01:04.049" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:00:56.640" endtime="20220516 18:01:04.051"/>
</kw>
<msg timestamp="20220516 18:01:04.051" level="INFO">${result} = </msg>
<status status="PASS" starttime="20220516 18:00:56.639" endtime="20220516 18:01:04.051"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 18:01:04.052" endtime="20220516 18:01:04.052"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:01:04.057" level="INFO">Running command 'ozone sh key info o3://om:9862/58091-with-host/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:01:09.281" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:01:09.281" level="INFO">${output} = {
  "volumeName": "58091-with-host",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17526,
  "creationTime": "2022-05-16T17:59:53.244Z",
  "modificationTime": "2022-05-16T17:59:55.770Z",
  "re...</msg>
<status status="PASS" starttime="20220516 18:01:04.055" endtime="20220516 18:01:09.281"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:01:09.283" level="INFO">{
  "volumeName": "58091-with-host",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17526,
  "creationTime": "2022-05-16T17:59:53.244Z",
  "modificationTime": "2022-05-16T17:59:55.770Z",
  "replicationConfig": {
    "replicationFactor": "ONE",
    "requiredNodes": 1,
    "replicationType": "RATIS"
  },
  "ozoneKeyLocations": [
    {
      "containerID": 4,
      "localID": 109611004723200020,
      "length": 17526,
      "offset": 0,
      "keyOffset": 0
    }
  ],
  "metadata": {}
}</msg>
<status status="PASS" starttime="20220516 18:01:09.282" endtime="20220516 18:01:09.283"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:01:09.284" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:01:09.283" endtime="20220516 18:01:09.284"/>
</kw>
<status status="PASS" starttime="20220516 18:01:04.054" endtime="20220516 18:01:09.285"/>
</kw>
<msg timestamp="20220516 18:01:09.285" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:01:04.054" endtime="20220516 18:01:09.285"/>
</kw>
<msg timestamp="20220516 18:01:09.286" level="INFO">${result} = {
  "volumeName": "58091-with-host",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17526,
  "creationTime": "2022-05-16T17:59:53.244Z",
  "modificationTime": "2022-05-16T17:59:55.770Z",
  "re...</msg>
<status status="PASS" starttime="20220516 18:01:04.053" endtime="20220516 18:01:09.286"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 18:01:09.286" endtime="20220516 18:01:09.287"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[] | select(.name=="key1") | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:01:09.291" level="INFO">Running command 'ozone sh key list o3://om:9862/58091-with-host/bb1 | jq -r '.[] | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:01:14.376" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:01:14.377" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20220516 18:01:09.289" endtime="20220516 18:01:14.377"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:01:14.378" level="INFO">key1</msg>
<status status="PASS" starttime="20220516 18:01:14.377" endtime="20220516 18:01:14.378"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:01:14.379" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:01:14.378" endtime="20220516 18:01:14.379"/>
</kw>
<status status="PASS" starttime="20220516 18:01:09.288" endtime="20220516 18:01:14.380"/>
</kw>
<msg timestamp="20220516 18:01:14.380" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:01:09.288" endtime="20220516 18:01:14.381"/>
</kw>
<msg timestamp="20220516 18:01:14.381" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20220516 18:01:09.287" endtime="20220516 18:01:14.381"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220516 18:01:14.381" endtime="20220516 18:01:14.382"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:01:14.387" level="INFO">Running command 'ozone sh key rename o3://om:9862/58091-with-host/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:01:19.384" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:01:19.384" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:01:14.385" endtime="20220516 18:01:19.384"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:01:19.385" level="INFO"/>
<status status="PASS" starttime="20220516 18:01:19.385" endtime="20220516 18:01:19.386"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:01:19.386" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:01:19.386" endtime="20220516 18:01:19.387"/>
</kw>
<status status="PASS" starttime="20220516 18:01:14.384" endtime="20220516 18:01:19.387"/>
</kw>
<msg timestamp="20220516 18:01:19.387" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:01:14.383" endtime="20220516 18:01:19.388"/>
</kw>
<status status="PASS" starttime="20220516 18:01:14.382" endtime="20220516 18:01:19.388"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:01:19.393" level="INFO">Running command 'ozone sh key list o3://om:9862/58091-with-host/bb1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:01:24.595" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:01:24.595" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20220516 18:01:19.390" endtime="20220516 18:01:24.596"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:01:24.597" level="INFO">key2</msg>
<status status="PASS" starttime="20220516 18:01:24.596" endtime="20220516 18:01:24.598"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:01:24.598" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:01:24.598" endtime="20220516 18:01:24.599"/>
</kw>
<status status="PASS" starttime="20220516 18:01:19.390" endtime="20220516 18:01:24.599"/>
</kw>
<msg timestamp="20220516 18:01:24.599" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:01:19.389" endtime="20220516 18:01:24.601"/>
</kw>
<msg timestamp="20220516 18:01:24.602" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20220516 18:01:19.388" endtime="20220516 18:01:24.602"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220516 18:01:24.602" endtime="20220516 18:01:24.603"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:01:24.609" level="INFO">Running command 'ozone sh key delete o3://om:9862/58091-with-host/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:01:29.447" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:01:29.448" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:01:24.607" endtime="20220516 18:01:29.448"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:01:29.449" level="INFO"/>
<status status="PASS" starttime="20220516 18:01:29.448" endtime="20220516 18:01:29.449"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:01:29.450" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:01:29.450" endtime="20220516 18:01:29.450"/>
</kw>
<status status="PASS" starttime="20220516 18:01:24.605" endtime="20220516 18:01:29.451"/>
</kw>
<msg timestamp="20220516 18:01:29.451" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:01:24.604" endtime="20220516 18:01:29.453"/>
</kw>
<status status="PASS" starttime="20220516 18:01:24.603" endtime="20220516 18:01:29.453"/>
</kw>
<status status="PASS" starttime="20220516 17:59:48.599" endtime="20220516 18:01:29.453"/>
</kw>
<status status="PASS" starttime="20220516 17:59:48.598" endtime="20220516 18:01:29.453"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:01:29.458" level="INFO">Running command 'ozone sh volume clrquota --space-quota o3://om:9862/58091-with-host 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:01:34.050" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:01:34.050" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:01:29.455" endtime="20220516 18:01:34.050"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:01:34.052" level="INFO"/>
<status status="PASS" starttime="20220516 18:01:34.051" endtime="20220516 18:01:34.052"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:01:34.053" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:01:34.052" endtime="20220516 18:01:34.053"/>
</kw>
<status status="PASS" starttime="20220516 18:01:29.455" endtime="20220516 18:01:34.053"/>
</kw>
<msg timestamp="20220516 18:01:34.053" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:01:29.455" endtime="20220516 18:01:34.054"/>
</kw>
<status status="PASS" starttime="20220516 18:01:29.454" endtime="20220516 18:01:34.054"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:01:34.060" level="INFO">Running command 'ozone sh volume info o3://om:9862/58091-with-host | jq -r '. | select(.name=="58091-with-host") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:01:39.125" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:01:39.125" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20220516 18:01:34.057" endtime="20220516 18:01:39.125"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:01:39.127" level="INFO">-1</msg>
<status status="PASS" starttime="20220516 18:01:39.126" endtime="20220516 18:01:39.128"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:01:39.128" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:01:39.128" endtime="20220516 18:01:39.129"/>
</kw>
<status status="PASS" starttime="20220516 18:01:34.056" endtime="20220516 18:01:39.129"/>
</kw>
<msg timestamp="20220516 18:01:39.129" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:01:34.056" endtime="20220516 18:01:39.130"/>
</kw>
<msg timestamp="20220516 18:01:39.130" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20220516 18:01:34.055" endtime="20220516 18:01:39.130"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220516 18:01:39.130" endtime="20220516 18:01:39.131"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:01:39.135" level="INFO">Running command 'ozone sh volume clrquota --namespace-quota o3://om:9862/58091-with-host 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:01:44.020" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:01:44.020" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:01:39.133" endtime="20220516 18:01:44.020"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:01:44.022" level="INFO"/>
<status status="PASS" starttime="20220516 18:01:44.021" endtime="20220516 18:01:44.022"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:01:44.023" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:01:44.022" endtime="20220516 18:01:44.023"/>
</kw>
<status status="PASS" starttime="20220516 18:01:39.132" endtime="20220516 18:01:44.023"/>
</kw>
<msg timestamp="20220516 18:01:44.023" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:01:39.132" endtime="20220516 18:01:44.024"/>
</kw>
<status status="PASS" starttime="20220516 18:01:39.131" endtime="20220516 18:01:44.024"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:01:44.029" level="INFO">Running command 'ozone sh volume info o3://om:9862/58091-with-host | jq -r '. | select(.name=="58091-with-host") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:01:49.192" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:01:49.192" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20220516 18:01:44.027" endtime="20220516 18:01:49.192"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:01:49.194" level="INFO">-1</msg>
<status status="PASS" starttime="20220516 18:01:49.193" endtime="20220516 18:01:49.194"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:01:49.195" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:01:49.194" endtime="20220516 18:01:49.195"/>
</kw>
<status status="PASS" starttime="20220516 18:01:44.026" endtime="20220516 18:01:49.196"/>
</kw>
<msg timestamp="20220516 18:01:49.196" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:01:44.026" endtime="20220516 18:01:49.197"/>
</kw>
<msg timestamp="20220516 18:01:49.197" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20220516 18:01:44.024" endtime="20220516 18:01:49.197"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220516 18:01:49.197" endtime="20220516 18:01:49.198"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:01:49.202" level="INFO">Running command 'ozone sh bucket clrquota --space-quota o3://om:9862/58091-with-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:01:54.096" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:01:54.096" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:01:49.200" endtime="20220516 18:01:54.096"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:01:54.098" level="INFO"/>
<status status="PASS" starttime="20220516 18:01:54.097" endtime="20220516 18:01:54.098"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:01:54.099" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:01:54.098" endtime="20220516 18:01:54.099"/>
</kw>
<status status="PASS" starttime="20220516 18:01:49.199" endtime="20220516 18:01:54.100"/>
</kw>
<msg timestamp="20220516 18:01:54.100" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:01:49.199" endtime="20220516 18:01:54.100"/>
</kw>
<status status="PASS" starttime="20220516 18:01:49.198" endtime="20220516 18:01:54.101"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:01:54.105" level="INFO">Running command 'ozone sh bucket info o3://om:9862/58091-with-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:01:58.970" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:01:58.970" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20220516 18:01:54.103" endtime="20220516 18:01:58.970"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:01:58.971" level="INFO">-1</msg>
<status status="PASS" starttime="20220516 18:01:58.970" endtime="20220516 18:01:58.971"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:01:58.972" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:01:58.972" endtime="20220516 18:01:58.972"/>
</kw>
<status status="PASS" starttime="20220516 18:01:54.102" endtime="20220516 18:01:58.973"/>
</kw>
<msg timestamp="20220516 18:01:58.973" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:01:54.102" endtime="20220516 18:01:58.974"/>
</kw>
<msg timestamp="20220516 18:01:58.974" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20220516 18:01:54.101" endtime="20220516 18:01:58.974"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220516 18:01:58.974" endtime="20220516 18:01:58.975"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:01:58.980" level="INFO">Running command 'ozone sh bucket clrquota --namespace-quota o3://om:9862/58091-with-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:02:03.735" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:02:03.735" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:01:58.977" endtime="20220516 18:02:03.735"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:02:03.737" level="INFO"/>
<status status="PASS" starttime="20220516 18:02:03.736" endtime="20220516 18:02:03.737"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:02:03.738" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:02:03.737" endtime="20220516 18:02:03.738"/>
</kw>
<status status="PASS" starttime="20220516 18:01:58.977" endtime="20220516 18:02:03.738"/>
</kw>
<msg timestamp="20220516 18:02:03.738" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:01:58.976" endtime="20220516 18:02:03.739"/>
</kw>
<status status="PASS" starttime="20220516 18:01:58.975" endtime="20220516 18:02:03.739"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:02:03.744" level="INFO">Running command 'ozone sh bucket info o3://om:9862/58091-with-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:02:08.587" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:02:08.587" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20220516 18:02:03.742" endtime="20220516 18:02:08.587"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:02:08.588" level="INFO">-1</msg>
<status status="PASS" starttime="20220516 18:02:08.588" endtime="20220516 18:02:08.589"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:02:08.589" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:02:08.589" endtime="20220516 18:02:08.590"/>
</kw>
<status status="PASS" starttime="20220516 18:02:03.741" endtime="20220516 18:02:08.590"/>
</kw>
<msg timestamp="20220516 18:02:08.590" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:02:03.741" endtime="20220516 18:02:08.591"/>
</kw>
<msg timestamp="20220516 18:02:08.591" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20220516 18:02:03.739" endtime="20220516 18:02:08.591"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220516 18:02:08.591" endtime="20220516 18:02:08.592"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:02:08.598" level="INFO">Running command 'ozone sh bucket delete o3://om:9862/58091-with-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:02:13.467" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:02:13.467" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:02:08.594" endtime="20220516 18:02:13.468"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:02:13.469" level="INFO"/>
<status status="PASS" starttime="20220516 18:02:13.468" endtime="20220516 18:02:13.469"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:02:13.470" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:02:13.469" endtime="20220516 18:02:13.470"/>
</kw>
<status status="PASS" starttime="20220516 18:02:08.593" endtime="20220516 18:02:13.470"/>
</kw>
<msg timestamp="20220516 18:02:13.470" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:02:08.593" endtime="20220516 18:02:13.471"/>
</kw>
<status status="PASS" starttime="20220516 18:02:08.592" endtime="20220516 18:02:13.471"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:02:13.476" level="INFO">Running command 'ozone sh volume delete o3://om:9862/58091-with-host 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:02:18.335" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:02:18.335" level="INFO">${output} = Volume 58091-with-host is deleted</msg>
<status status="PASS" starttime="20220516 18:02:13.473" endtime="20220516 18:02:18.335"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:02:18.336" level="INFO">Volume 58091-with-host is deleted</msg>
<status status="PASS" starttime="20220516 18:02:18.336" endtime="20220516 18:02:18.337"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:02:18.337" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:02:18.337" endtime="20220516 18:02:18.338"/>
</kw>
<status status="PASS" starttime="20220516 18:02:13.473" endtime="20220516 18:02:18.338"/>
</kw>
<msg timestamp="20220516 18:02:18.338" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:02:13.472" endtime="20220516 18:02:18.339"/>
</kw>
<status status="PASS" starttime="20220516 18:02:13.471" endtime="20220516 18:02:18.339"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:02:18.344" level="INFO">Running command 'ozone sh volume create o3://om:9862/58091-with-host 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:02:23.201" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:02:23.201" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:02:18.342" endtime="20220516 18:02:23.201"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:02:23.204" level="INFO"/>
<status status="PASS" starttime="20220516 18:02:23.202" endtime="20220516 18:02:23.204"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:02:23.204" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:02:23.204" endtime="20220516 18:02:23.205"/>
</kw>
<status status="PASS" starttime="20220516 18:02:18.341" endtime="20220516 18:02:23.205"/>
</kw>
<msg timestamp="20220516 18:02:23.205" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:02:18.340" endtime="20220516 18:02:23.206"/>
</kw>
<status status="PASS" starttime="20220516 18:02:18.339" endtime="20220516 18:02:23.206"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:02:23.211" level="INFO">Running command 'ozone sh volume info o3://om:9862/58091-with-host | jq -r '. | select(.name=="58091-with-host") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:02:28.521" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:02:28.521" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20220516 18:02:23.208" endtime="20220516 18:02:28.521"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:02:28.522" level="INFO">-1</msg>
<status status="PASS" starttime="20220516 18:02:28.521" endtime="20220516 18:02:28.522"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:02:28.523" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:02:28.523" endtime="20220516 18:02:28.523"/>
</kw>
<status status="PASS" starttime="20220516 18:02:23.208" endtime="20220516 18:02:28.524"/>
</kw>
<msg timestamp="20220516 18:02:28.524" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:02:23.207" endtime="20220516 18:02:28.525"/>
</kw>
<msg timestamp="20220516 18:02:28.525" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20220516 18:02:23.206" endtime="20220516 18:02:28.525"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220516 18:02:28.525" endtime="20220516 18:02:28.526"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:02:28.531" level="INFO">Running command 'ozone sh volume info o3://om:9862/58091-with-host | jq -r '. | select(.name=="58091-with-host") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:02:33.555" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:02:33.555" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20220516 18:02:28.528" endtime="20220516 18:02:33.555"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:02:33.557" level="INFO">-1</msg>
<status status="PASS" starttime="20220516 18:02:33.556" endtime="20220516 18:02:33.557"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:02:33.557" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:02:33.557" endtime="20220516 18:02:33.558"/>
</kw>
<status status="PASS" starttime="20220516 18:02:28.528" endtime="20220516 18:02:33.558"/>
</kw>
<msg timestamp="20220516 18:02:33.558" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:02:28.527" endtime="20220516 18:02:33.559"/>
</kw>
<msg timestamp="20220516 18:02:33.559" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20220516 18:02:28.526" endtime="20220516 18:02:33.559"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220516 18:02:33.559" endtime="20220516 18:02:33.560"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:02:33.564" level="INFO">Running command 'ozone sh bucket create o3://om:9862/58091-with-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:02:38.583" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:02:38.583" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:02:33.562" endtime="20220516 18:02:38.583"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:02:38.585" level="INFO"/>
<status status="PASS" starttime="20220516 18:02:38.584" endtime="20220516 18:02:38.585"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:02:38.585" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:02:38.585" endtime="20220516 18:02:38.586"/>
</kw>
<status status="PASS" starttime="20220516 18:02:33.561" endtime="20220516 18:02:38.586"/>
</kw>
<msg timestamp="20220516 18:02:38.586" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:02:33.561" endtime="20220516 18:02:38.587"/>
</kw>
<status status="PASS" starttime="20220516 18:02:33.560" endtime="20220516 18:02:38.587"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:02:38.592" level="INFO">Running command 'ozone sh bucket info o3://om:9862/58091-with-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:02:43.669" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:02:43.669" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20220516 18:02:38.589" endtime="20220516 18:02:43.669"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:02:43.671" level="INFO">-1</msg>
<status status="PASS" starttime="20220516 18:02:43.670" endtime="20220516 18:02:43.671"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:02:43.671" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:02:43.671" endtime="20220516 18:02:43.672"/>
</kw>
<status status="PASS" starttime="20220516 18:02:38.589" endtime="20220516 18:02:43.672"/>
</kw>
<msg timestamp="20220516 18:02:43.672" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:02:38.588" endtime="20220516 18:02:43.673"/>
</kw>
<msg timestamp="20220516 18:02:43.673" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20220516 18:02:38.587" endtime="20220516 18:02:43.673"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220516 18:02:43.673" endtime="20220516 18:02:43.674"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:02:43.679" level="INFO">Running command 'ozone sh bucket info o3://om:9862/58091-with-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:02:48.421" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:02:48.422" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20220516 18:02:43.677" endtime="20220516 18:02:48.422"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:02:48.423" level="INFO">-1</msg>
<status status="PASS" starttime="20220516 18:02:48.422" endtime="20220516 18:02:48.423"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:02:48.424" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:02:48.423" endtime="20220516 18:02:48.424"/>
</kw>
<status status="PASS" starttime="20220516 18:02:43.676" endtime="20220516 18:02:48.424"/>
</kw>
<msg timestamp="20220516 18:02:48.424" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:02:43.675" endtime="20220516 18:02:48.425"/>
</kw>
<msg timestamp="20220516 18:02:48.425" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20220516 18:02:43.674" endtime="20220516 18:02:48.425"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220516 18:02:48.426" endtime="20220516 18:02:48.426"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:02:48.430" level="INFO">Running command 'ozone sh bucket delete o3://om:9862/58091-with-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:02:52.830" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:02:52.831" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:02:48.428" endtime="20220516 18:02:52.831"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:02:52.832" level="INFO"/>
<status status="PASS" starttime="20220516 18:02:52.831" endtime="20220516 18:02:52.832"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:02:52.833" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:02:52.832" endtime="20220516 18:02:52.833"/>
</kw>
<status status="PASS" starttime="20220516 18:02:48.427" endtime="20220516 18:02:52.834"/>
</kw>
<msg timestamp="20220516 18:02:52.834" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:02:48.427" endtime="20220516 18:02:52.835"/>
</kw>
<status status="PASS" starttime="20220516 18:02:48.426" endtime="20220516 18:02:52.835"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:02:52.840" level="INFO">Running command 'ozone sh volume delete o3://om:9862/58091-with-host 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:02:57.568" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:02:57.568" level="INFO">${output} = Volume 58091-with-host is deleted</msg>
<status status="PASS" starttime="20220516 18:02:52.838" endtime="20220516 18:02:57.568"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:02:57.570" level="INFO">Volume 58091-with-host is deleted</msg>
<status status="PASS" starttime="20220516 18:02:57.569" endtime="20220516 18:02:57.570"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:02:57.571" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:02:57.570" endtime="20220516 18:02:57.571"/>
</kw>
<status status="PASS" starttime="20220516 18:02:52.837" endtime="20220516 18:02:57.571"/>
</kw>
<msg timestamp="20220516 18:02:57.571" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:02:52.836" endtime="20220516 18:02:57.572"/>
</kw>
<status status="PASS" starttime="20220516 18:02:52.836" endtime="20220516 18:02:57.572"/>
</kw>
<status status="PASS" starttime="20220516 17:58:38.460" endtime="20220516 18:02:57.573"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220516 17:58:38.358" endtime="20220516 18:02:57.573"/>
</test>
<test id="s1-s1-s5-t2" name="RpcClient volume acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:02:57.580" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:02:57.585" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:02:57.585" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220516 18:02:57.578" endtime="20220516 18:02:57.585"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:02:57.586" level="INFO">scm</msg>
<status status="PASS" starttime="20220516 18:02:57.585" endtime="20220516 18:02:57.586"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:02:57.587" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:02:57.586" endtime="20220516 18:02:57.587"/>
</kw>
<status status="PASS" starttime="20220516 18:02:57.578" endtime="20220516 18:02:57.588"/>
</kw>
<msg timestamp="20220516 18:02:57.588" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:02:57.577" endtime="20220516 18:02:57.588"/>
</kw>
<msg timestamp="20220516 18:02:57.589" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220516 18:02:57.577" endtime="20220516 18:02:57.589"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220516 18:02:57.589" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220516 18:02:57.589" endtime="20220516 18:02:57.590"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:02:57.595" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:02:57.603" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:02:57.603" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:02:57.593" endtime="20220516 18:02:57.603"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:02:57.605" level="INFO"/>
<status status="PASS" starttime="20220516 18:02:57.604" endtime="20220516 18:02:57.605"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:02:57.605" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:02:57.605" endtime="20220516 18:02:57.606"/>
</kw>
<status status="PASS" starttime="20220516 18:02:57.592" endtime="20220516 18:02:57.606"/>
</kw>
<msg timestamp="20220516 18:02:57.606" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:02:57.591" endtime="20220516 18:02:57.607"/>
</kw>
<status status="PASS" starttime="20220516 18:02:57.590" endtime="20220516 18:02:57.607"/>
</kw>
<status status="PASS" starttime="20220516 18:02:57.590" endtime="20220516 18:02:57.607"/>
</kw>
<status status="PASS" starttime="20220516 18:02:57.576" endtime="20220516 18:02:57.607"/>
</kw>
<status status="PASS" starttime="20220516 18:02:57.575" endtime="20220516 18:02:57.608"/>
</kw>
<kw name="Test Volume Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-acls</arg>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:02:57.612" level="INFO">Running command 'ozone sh volume create o3://om:9862/58091-acls 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:03:02.429" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:03:02.430" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:02:57.610" endtime="20220516 18:03:02.430"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:03:02.431" level="INFO"/>
<status status="PASS" starttime="20220516 18:03:02.430" endtime="20220516 18:03:02.431"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:03:02.432" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:03:02.431" endtime="20220516 18:03:02.432"/>
</kw>
<status status="PASS" starttime="20220516 18:02:57.610" endtime="20220516 18:03:02.433"/>
</kw>
<msg timestamp="20220516 18:03:02.433" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:02:57.609" endtime="20220516 18:03:02.434"/>
</kw>
<status status="PASS" starttime="20220516 18:02:57.609" endtime="20220516 18:03:02.434"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:03:02.438" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/58091-acls 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:03:07.585" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:03:07.586" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20220516 18:03:02.436" endtime="20220516 18:03:07.586"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:03:07.587" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20220516 18:03:07.586" endtime="20220516 18:03:07.587"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:03:07.588" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:03:07.588" endtime="20220516 18:03:07.588"/>
</kw>
<status status="PASS" starttime="20220516 18:03:02.435" endtime="20220516 18:03:07.589"/>
</kw>
<msg timestamp="20220516 18:03:07.589" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:03:02.435" endtime="20220516 18:03:07.589"/>
</kw>
<msg timestamp="20220516 18:03:07.590" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20220516 18:03:02.434" endtime="20220516 18:03:07.590"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220516 18:03:07.590" endtime="20220516 18:03:07.591"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:03:07.596" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/58091-acls -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:03:12.388" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:03:12.388" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20220516 18:03:07.593" endtime="20220516 18:03:12.388"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:03:12.389" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20220516 18:03:12.388" endtime="20220516 18:03:12.389"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:03:12.391" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:03:12.390" endtime="20220516 18:03:12.391"/>
</kw>
<status status="PASS" starttime="20220516 18:03:07.593" endtime="20220516 18:03:12.392"/>
</kw>
<msg timestamp="20220516 18:03:12.392" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:03:07.592" endtime="20220516 18:03:12.392"/>
</kw>
<msg timestamp="20220516 18:03:12.393" level="INFO">${result} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20220516 18:03:07.591" endtime="20220516 18:03:12.393"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:03:12.397" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/58091-acls 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:03:17.591" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:03:17.591" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20220516 18:03:12.395" endtime="20220516 18:03:17.592"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:03:17.593" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20220516 18:03:17.592" endtime="20220516 18:03:17.593"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:03:17.594" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:03:17.593" endtime="20220516 18:03:17.594"/>
</kw>
<status status="PASS" starttime="20220516 18:03:12.394" endtime="20220516 18:03:17.605"/>
</kw>
<msg timestamp="20220516 18:03:17.605" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:03:12.394" endtime="20220516 18:03:17.606"/>
</kw>
<msg timestamp="20220516 18:03:17.606" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20220516 18:03:12.393" endtime="20220516 18:03:17.606"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220516 18:03:17.607" endtime="20220516 18:03:17.608"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:03:17.614" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/58091-acls -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:03:22.619" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:03:22.619" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20220516 18:03:17.610" endtime="20220516 18:03:22.619"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:03:22.621" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20220516 18:03:22.620" endtime="20220516 18:03:22.621"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:03:22.622" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:03:22.621" endtime="20220516 18:03:22.622"/>
</kw>
<status status="PASS" starttime="20220516 18:03:17.609" endtime="20220516 18:03:22.622"/>
</kw>
<msg timestamp="20220516 18:03:22.623" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:03:17.609" endtime="20220516 18:03:22.623"/>
</kw>
<msg timestamp="20220516 18:03:22.624" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20220516 18:03:17.608" endtime="20220516 18:03:22.624"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:03:22.629" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/58091-acls 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:03:27.699" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:03:27.699" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20220516 18:03:22.627" endtime="20220516 18:03:27.700"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:03:27.701" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20220516 18:03:27.700" endtime="20220516 18:03:27.701"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:03:27.702" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:03:27.701" endtime="20220516 18:03:27.702"/>
</kw>
<status status="PASS" starttime="20220516 18:03:22.625" endtime="20220516 18:03:27.702"/>
</kw>
<msg timestamp="20220516 18:03:27.702" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:03:22.625" endtime="20220516 18:03:27.703"/>
</kw>
<msg timestamp="20220516 18:03:27.703" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20220516 18:03:22.624" endtime="20220516 18:03:27.704"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220516 18:03:27.704" endtime="20220516 18:03:27.705"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy[DEFAULT],group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:03:27.712" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/58091-acls -al user:superuser1:rwxy[DEFAULT],group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:03:32.535" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:03:32.535" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20220516 18:03:27.707" endtime="20220516 18:03:32.535"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:03:32.537" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20220516 18:03:32.536" endtime="20220516 18:03:32.537"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:03:32.538" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:03:32.537" endtime="20220516 18:03:32.538"/>
</kw>
<status status="PASS" starttime="20220516 18:03:27.706" endtime="20220516 18:03:32.539"/>
</kw>
<msg timestamp="20220516 18:03:32.539" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:03:27.706" endtime="20220516 18:03:32.539"/>
</kw>
<msg timestamp="20220516 18:03:32.540" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20220516 18:03:27.705" endtime="20220516 18:03:32.540"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:03:32.544" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/58091-acls 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:03:37.628" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:03:37.628" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20220516 18:03:32.542" endtime="20220516 18:03:37.628"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:03:37.631" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20220516 18:03:37.629" endtime="20220516 18:03:37.631"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:03:37.632" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:03:37.632" endtime="20220516 18:03:37.633"/>
</kw>
<status status="PASS" starttime="20220516 18:03:32.541" endtime="20220516 18:03:37.633"/>
</kw>
<msg timestamp="20220516 18:03:37.633" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:03:32.541" endtime="20220516 18:03:37.634"/>
</kw>
<msg timestamp="20220516 18:03:37.634" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20220516 18:03:32.540" endtime="20220516 18:03:37.634"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220516 18:03:37.634" endtime="20220516 18:03:37.635"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220516 18:03:37.635" endtime="20220516 18:03:37.636"/>
</kw>
<status status="PASS" starttime="20220516 18:02:57.608" endtime="20220516 18:03:37.636"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220516 18:02:57.574" endtime="20220516 18:03:37.637"/>
</test>
<test id="s1-s1-s5-t3" name="RpcClient bucket acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:03:37.645" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:03:37.649" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:03:37.649" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220516 18:03:37.642" endtime="20220516 18:03:37.649"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:03:37.650" level="INFO">scm</msg>
<status status="PASS" starttime="20220516 18:03:37.650" endtime="20220516 18:03:37.650"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:03:37.651" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:03:37.651" endtime="20220516 18:03:37.651"/>
</kw>
<status status="PASS" starttime="20220516 18:03:37.642" endtime="20220516 18:03:37.652"/>
</kw>
<msg timestamp="20220516 18:03:37.652" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:03:37.641" endtime="20220516 18:03:37.653"/>
</kw>
<msg timestamp="20220516 18:03:37.653" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220516 18:03:37.641" endtime="20220516 18:03:37.653"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220516 18:03:37.654" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220516 18:03:37.653" endtime="20220516 18:03:37.654"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:03:37.660" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:03:37.669" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:03:37.669" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:03:37.657" endtime="20220516 18:03:37.669"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:03:37.671" level="INFO"/>
<status status="PASS" starttime="20220516 18:03:37.670" endtime="20220516 18:03:37.671"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:03:37.672" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:03:37.671" endtime="20220516 18:03:37.672"/>
</kw>
<status status="PASS" starttime="20220516 18:03:37.656" endtime="20220516 18:03:37.672"/>
</kw>
<msg timestamp="20220516 18:03:37.673" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:03:37.656" endtime="20220516 18:03:37.673"/>
</kw>
<status status="PASS" starttime="20220516 18:03:37.655" endtime="20220516 18:03:37.674"/>
</kw>
<status status="PASS" starttime="20220516 18:03:37.655" endtime="20220516 18:03:37.674"/>
</kw>
<status status="PASS" starttime="20220516 18:03:37.640" endtime="20220516 18:03:37.674"/>
</kw>
<status status="PASS" starttime="20220516 18:03:37.639" endtime="20220516 18:03:37.674"/>
</kw>
<kw name="Test Bucket Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-acls</arg>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:03:37.680" level="INFO">Running command 'ozone sh bucket create o3://om:9862/58091-acls/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:03:42.402" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:03:42.402" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:03:37.677" endtime="20220516 18:03:42.402"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:03:42.403" level="INFO"/>
<status status="PASS" starttime="20220516 18:03:42.402" endtime="20220516 18:03:42.403"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:03:42.404" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:03:42.403" endtime="20220516 18:03:42.404"/>
</kw>
<status status="PASS" starttime="20220516 18:03:37.676" endtime="20220516 18:03:42.405"/>
</kw>
<msg timestamp="20220516 18:03:42.405" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:03:37.676" endtime="20220516 18:03:42.405"/>
</kw>
<status status="PASS" starttime="20220516 18:03:37.675" endtime="20220516 18:03:42.406"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:03:42.410" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/58091-acls/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:03:47.603" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:03:47.604" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20220516 18:03:42.408" endtime="20220516 18:03:47.604"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:03:47.605" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20220516 18:03:47.604" endtime="20220516 18:03:47.605"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:03:47.606" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:03:47.605" endtime="20220516 18:03:47.606"/>
</kw>
<status status="PASS" starttime="20220516 18:03:42.407" endtime="20220516 18:03:47.606"/>
</kw>
<msg timestamp="20220516 18:03:47.607" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:03:42.407" endtime="20220516 18:03:47.607"/>
</kw>
<msg timestamp="20220516 18:03:47.608" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20220516 18:03:42.406" endtime="20220516 18:03:47.608"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220516 18:03:47.608" endtime="20220516 18:03:47.609"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:03:47.613" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/58091-acls/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:03:52.281" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:03:52.281" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20220516 18:03:47.611" endtime="20220516 18:03:52.282"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:03:52.283" level="INFO">ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20220516 18:03:52.282" endtime="20220516 18:03:52.283"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:03:52.284" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:03:52.283" endtime="20220516 18:03:52.284"/>
</kw>
<status status="PASS" starttime="20220516 18:03:47.610" endtime="20220516 18:03:52.284"/>
</kw>
<msg timestamp="20220516 18:03:52.284" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:03:47.610" endtime="20220516 18:03:52.285"/>
</kw>
<msg timestamp="20220516 18:03:52.285" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20220516 18:03:47.609" endtime="20220516 18:03:52.286"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:03:52.290" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/58091-acls/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:03:57.149" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:03:57.149" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20220516 18:03:52.288" endtime="20220516 18:03:57.149"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:03:57.150" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20220516 18:03:57.150" endtime="20220516 18:03:57.151"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:03:57.151" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:03:57.151" endtime="20220516 18:03:57.151"/>
</kw>
<status status="PASS" starttime="20220516 18:03:52.287" endtime="20220516 18:03:57.152"/>
</kw>
<msg timestamp="20220516 18:03:57.152" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:03:52.286" endtime="20220516 18:03:57.153"/>
</kw>
<msg timestamp="20220516 18:03:57.153" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20220516 18:03:52.286" endtime="20220516 18:03:57.153"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220516 18:03:57.153" endtime="20220516 18:03:57.155"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:03:57.161" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/58091-acls/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:04:01.719" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:04:01.719" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20220516 18:03:57.158" endtime="20220516 18:04:01.719"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:04:01.720" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20220516 18:04:01.719" endtime="20220516 18:04:01.720"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:04:01.721" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:04:01.721" endtime="20220516 18:04:01.721"/>
</kw>
<status status="PASS" starttime="20220516 18:03:57.156" endtime="20220516 18:04:01.722"/>
</kw>
<msg timestamp="20220516 18:04:01.722" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:03:57.156" endtime="20220516 18:04:01.722"/>
</kw>
<msg timestamp="20220516 18:04:01.723" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20220516 18:03:57.155" endtime="20220516 18:04:01.723"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:04:01.727" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/58091-acls/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:04:06.805" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:04:06.806" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20220516 18:04:01.725" endtime="20220516 18:04:06.806"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:04:06.807" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20220516 18:04:06.806" endtime="20220516 18:04:06.807"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:04:06.808" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:04:06.808" endtime="20220516 18:04:06.808"/>
</kw>
<status status="PASS" starttime="20220516 18:04:01.724" endtime="20220516 18:04:06.809"/>
</kw>
<msg timestamp="20220516 18:04:06.809" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:04:01.724" endtime="20220516 18:04:06.809"/>
</kw>
<msg timestamp="20220516 18:04:06.810" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20220516 18:04:01.723" endtime="20220516 18:04:06.810"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220516 18:04:06.810" endtime="20220516 18:04:06.811"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:04:06.815" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/58091-acls/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:04:11.672" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:04:11.672" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20220516 18:04:06.813" endtime="20220516 18:04:11.672"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:04:11.674" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20220516 18:04:11.673" endtime="20220516 18:04:11.674"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:04:11.675" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:04:11.674" endtime="20220516 18:04:11.675"/>
</kw>
<status status="PASS" starttime="20220516 18:04:06.812" endtime="20220516 18:04:11.676"/>
</kw>
<msg timestamp="20220516 18:04:11.676" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:04:06.812" endtime="20220516 18:04:11.676"/>
</kw>
<msg timestamp="20220516 18:04:11.677" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20220516 18:04:06.811" endtime="20220516 18:04:11.677"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:04:11.681" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/58091-acls/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:04:16.758" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:04:16.758" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20220516 18:04:11.679" endtime="20220516 18:04:16.758"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:04:16.760" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20220516 18:04:16.759" endtime="20220516 18:04:16.760"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:04:16.761" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:04:16.760" endtime="20220516 18:04:16.761"/>
</kw>
<status status="PASS" starttime="20220516 18:04:11.678" endtime="20220516 18:04:16.762"/>
</kw>
<msg timestamp="20220516 18:04:16.762" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:04:11.678" endtime="20220516 18:04:16.763"/>
</kw>
<msg timestamp="20220516 18:04:16.763" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20220516 18:04:11.677" endtime="20220516 18:04:16.763"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220516 18:04:16.763" endtime="20220516 18:04:16.764"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220516 18:04:16.764" endtime="20220516 18:04:16.765"/>
</kw>
<status status="PASS" starttime="20220516 18:03:37.674" endtime="20220516 18:04:16.765"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220516 18:03:37.638" endtime="20220516 18:04:16.765"/>
</test>
<test id="s1-s1-s5-t4" name="RpcClient key acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:04:16.772" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:04:16.776" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:04:16.776" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220516 18:04:16.770" endtime="20220516 18:04:16.776"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:04:16.778" level="INFO">scm</msg>
<status status="PASS" starttime="20220516 18:04:16.776" endtime="20220516 18:04:16.778"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:04:16.778" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:04:16.778" endtime="20220516 18:04:16.779"/>
</kw>
<status status="PASS" starttime="20220516 18:04:16.769" endtime="20220516 18:04:16.779"/>
</kw>
<msg timestamp="20220516 18:04:16.779" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:04:16.768" endtime="20220516 18:04:16.780"/>
</kw>
<msg timestamp="20220516 18:04:16.780" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220516 18:04:16.768" endtime="20220516 18:04:16.780"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220516 18:04:16.781" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220516 18:04:16.780" endtime="20220516 18:04:16.781"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:04:16.786" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:04:16.850" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:04:16.850" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:04:16.784" endtime="20220516 18:04:16.850"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:04:16.851" level="INFO"/>
<status status="PASS" starttime="20220516 18:04:16.851" endtime="20220516 18:04:16.852"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:04:16.853" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:04:16.852" endtime="20220516 18:04:16.853"/>
</kw>
<status status="PASS" starttime="20220516 18:04:16.783" endtime="20220516 18:04:16.853"/>
</kw>
<msg timestamp="20220516 18:04:16.853" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:04:16.783" endtime="20220516 18:04:16.854"/>
</kw>
<status status="PASS" starttime="20220516 18:04:16.782" endtime="20220516 18:04:16.854"/>
</kw>
<status status="PASS" starttime="20220516 18:04:16.781" endtime="20220516 18:04:16.854"/>
</kw>
<status status="PASS" starttime="20220516 18:04:16.767" endtime="20220516 18:04:16.855"/>
</kw>
<status status="PASS" starttime="20220516 18:04:16.767" endtime="20220516 18:04:16.855"/>
</kw>
<kw name="Test key Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-acls</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:04:16.861" level="INFO">Running command 'ozone sh key put o3://om:9862/58091-acls/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:04:27.156" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:04:27.157" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:04:16.857" endtime="20220516 18:04:27.157"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:04:27.158" level="INFO"/>
<status status="PASS" starttime="20220516 18:04:27.157" endtime="20220516 18:04:27.158"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:04:27.159" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:04:27.158" endtime="20220516 18:04:27.159"/>
</kw>
<status status="PASS" starttime="20220516 18:04:16.857" endtime="20220516 18:04:27.160"/>
</kw>
<msg timestamp="20220516 18:04:27.160" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:04:16.856" endtime="20220516 18:04:27.160"/>
</kw>
<status status="PASS" starttime="20220516 18:04:16.856" endtime="20220516 18:04:27.160"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:04:27.165" level="INFO">Running command 'ozone sh key getacl o3://om:9862/58091-acls/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:04:32.348" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:04:32.348" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20220516 18:04:27.163" endtime="20220516 18:04:32.348"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:04:32.350" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20220516 18:04:32.349" endtime="20220516 18:04:32.350"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:04:32.351" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:04:32.350" endtime="20220516 18:04:32.351"/>
</kw>
<status status="PASS" starttime="20220516 18:04:27.162" endtime="20220516 18:04:32.351"/>
</kw>
<msg timestamp="20220516 18:04:32.351" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:04:27.162" endtime="20220516 18:04:32.352"/>
</kw>
<msg timestamp="20220516 18:04:32.352" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20220516 18:04:27.161" endtime="20220516 18:04:32.352"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220516 18:04:32.352" endtime="20220516 18:04:32.353"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key addacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:04:32.358" level="INFO">Running command 'ozone sh key addacl o3://om:9862/58091-acls/bb1/key2 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:04:37.149" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:04:37.149" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220516 18:04:32.355" endtime="20220516 18:04:37.149"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:04:37.151" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220516 18:04:37.150" endtime="20220516 18:04:37.151"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:04:37.152" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:04:37.151" endtime="20220516 18:04:37.152"/>
</kw>
<status status="PASS" starttime="20220516 18:04:32.355" endtime="20220516 18:04:37.152"/>
</kw>
<msg timestamp="20220516 18:04:37.152" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:04:32.354" endtime="20220516 18:04:37.153"/>
</kw>
<msg timestamp="20220516 18:04:37.154" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220516 18:04:32.353" endtime="20220516 18:04:37.154"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:04:37.162" level="INFO">Running command 'ozone sh key getacl o3://om:9862/58091-acls/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:04:42.264" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:04:42.264" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20220516 18:04:37.158" endtime="20220516 18:04:42.264"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:04:42.266" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20220516 18:04:42.265" endtime="20220516 18:04:42.267"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:04:42.268" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:04:42.267" endtime="20220516 18:04:42.268"/>
</kw>
<status status="PASS" starttime="20220516 18:04:37.157" endtime="20220516 18:04:42.269"/>
</kw>
<msg timestamp="20220516 18:04:42.269" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:04:37.155" endtime="20220516 18:04:42.270"/>
</kw>
<msg timestamp="20220516 18:04:42.270" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20220516 18:04:37.154" endtime="20220516 18:04:42.270"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220516 18:04:42.271" endtime="20220516 18:04:42.272"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key removeacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:04:42.277" level="INFO">Running command 'ozone sh key removeacl o3://om:9862/58091-acls/bb1/key2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:04:46.770" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:04:46.770" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20220516 18:04:42.274" endtime="20220516 18:04:46.770"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:04:46.771" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20220516 18:04:46.770" endtime="20220516 18:04:46.771"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:04:46.772" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:04:46.772" endtime="20220516 18:04:46.772"/>
</kw>
<status status="PASS" starttime="20220516 18:04:42.274" endtime="20220516 18:04:46.773"/>
</kw>
<msg timestamp="20220516 18:04:46.773" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:04:42.273" endtime="20220516 18:04:46.774"/>
</kw>
<msg timestamp="20220516 18:04:46.775" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20220516 18:04:42.272" endtime="20220516 18:04:46.775"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:04:46.780" level="INFO">Running command 'ozone sh key getacl o3://om:9862/58091-acls/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:04:51.815" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:04:51.815" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20220516 18:04:46.778" endtime="20220516 18:04:51.818"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:04:51.819" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" starttime="20220516 18:04:51.819" endtime="20220516 18:04:51.819"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:04:51.820" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:04:51.820" endtime="20220516 18:04:51.820"/>
</kw>
<status status="PASS" starttime="20220516 18:04:46.777" endtime="20220516 18:04:51.821"/>
</kw>
<msg timestamp="20220516 18:04:51.821" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:04:46.777" endtime="20220516 18:04:51.822"/>
</kw>
<msg timestamp="20220516 18:04:51.822" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20220516 18:04:46.776" endtime="20220516 18:04:51.822"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220516 18:04:51.822" endtime="20220516 18:04:51.823"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key setacl ${protocol}${server}/${volume}/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:04:51.828" level="INFO">Running command 'ozone sh key setacl o3://om:9862/58091-acls/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:04:56.697" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:04:56.697" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20220516 18:04:51.825" endtime="20220516 18:04:56.697"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:04:56.698" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20220516 18:04:56.698" endtime="20220516 18:04:56.698"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:04:56.699" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:04:56.699" endtime="20220516 18:04:56.700"/>
</kw>
<status status="PASS" starttime="20220516 18:04:51.824" endtime="20220516 18:04:56.700"/>
</kw>
<msg timestamp="20220516 18:04:56.700" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:04:51.824" endtime="20220516 18:04:56.701"/>
</kw>
<msg timestamp="20220516 18:04:56.701" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20220516 18:04:51.823" endtime="20220516 18:04:56.701"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:04:56.706" level="INFO">Running command 'ozone sh key getacl o3://om:9862/58091-acls/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:05:01.860" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:05:01.860" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20220516 18:04:56.704" endtime="20220516 18:05:01.860"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:05:01.862" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20220516 18:05:01.861" endtime="20220516 18:05:01.862"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:05:01.863" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:05:01.862" endtime="20220516 18:05:01.863"/>
</kw>
<status status="PASS" starttime="20220516 18:04:56.703" endtime="20220516 18:05:01.863"/>
</kw>
<msg timestamp="20220516 18:05:01.863" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:04:56.702" endtime="20220516 18:05:01.864"/>
</kw>
<msg timestamp="20220516 18:05:01.864" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20220516 18:04:56.701" endtime="20220516 18:05:01.864"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220516 18:05:01.864" endtime="20220516 18:05:01.865"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220516 18:05:01.865" endtime="20220516 18:05:01.866"/>
</kw>
<status status="PASS" starttime="20220516 18:04:16.855" endtime="20220516 18:05:01.867"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220516 18:04:16.766" endtime="20220516 18:05:01.867"/>
</test>
<test id="s1-s1-s5-t5" name="RpcClient prefix acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:05:01.874" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:05:01.878" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:05:01.878" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220516 18:05:01.872" endtime="20220516 18:05:01.878"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:05:01.880" level="INFO">scm</msg>
<status status="PASS" starttime="20220516 18:05:01.879" endtime="20220516 18:05:01.880"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:05:01.881" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:05:01.880" endtime="20220516 18:05:01.881"/>
</kw>
<status status="PASS" starttime="20220516 18:05:01.871" endtime="20220516 18:05:01.881"/>
</kw>
<msg timestamp="20220516 18:05:01.881" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:05:01.871" endtime="20220516 18:05:01.882"/>
</kw>
<msg timestamp="20220516 18:05:01.882" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220516 18:05:01.870" endtime="20220516 18:05:01.882"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220516 18:05:01.883" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220516 18:05:01.882" endtime="20220516 18:05:01.883"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:05:01.890" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:05:01.899" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:05:01.900" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:05:01.888" endtime="20220516 18:05:01.900"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:05:01.901" level="INFO"/>
<status status="PASS" starttime="20220516 18:05:01.900" endtime="20220516 18:05:01.901"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:05:01.902" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:05:01.901" endtime="20220516 18:05:01.902"/>
</kw>
<status status="PASS" starttime="20220516 18:05:01.887" endtime="20220516 18:05:01.903"/>
</kw>
<msg timestamp="20220516 18:05:01.903" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:05:01.887" endtime="20220516 18:05:01.904"/>
</kw>
<status status="PASS" starttime="20220516 18:05:01.886" endtime="20220516 18:05:01.904"/>
</kw>
<status status="PASS" starttime="20220516 18:05:01.883" endtime="20220516 18:05:01.904"/>
</kw>
<status status="PASS" starttime="20220516 18:05:01.870" endtime="20220516 18:05:01.904"/>
</kw>
<status status="PASS" starttime="20220516 18:05:01.869" endtime="20220516 18:05:01.905"/>
</kw>
<kw name="Test prefix Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-acls</arg>
<kw name="Execute" library="os">
<arg>ozone sh prefix addacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:05:01.910" level="INFO">Running command 'ozone sh prefix addacl o3://om:9862/58091-acls/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:05:06.622" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:05:06.622" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20220516 18:05:01.907" endtime="20220516 18:05:06.622"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:05:06.623" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20220516 18:05:06.623" endtime="20220516 18:05:06.624"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:05:06.625" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:05:06.624" endtime="20220516 18:05:06.625"/>
</kw>
<status status="PASS" starttime="20220516 18:05:01.907" endtime="20220516 18:05:06.625"/>
</kw>
<msg timestamp="20220516 18:05:06.625" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:05:01.906" endtime="20220516 18:05:06.626"/>
</kw>
<status status="PASS" starttime="20220516 18:05:01.906" endtime="20220516 18:05:06.626"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:05:06.631" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/58091-acls/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:05:11.708" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:05:11.708" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20220516 18:05:06.628" endtime="20220516 18:05:11.708"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:05:11.710" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20220516 18:05:11.709" endtime="20220516 18:05:11.710"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:05:11.711" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:05:11.711" endtime="20220516 18:05:11.711"/>
</kw>
<status status="PASS" starttime="20220516 18:05:06.628" endtime="20220516 18:05:11.712"/>
</kw>
<msg timestamp="20220516 18:05:11.712" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:05:06.627" endtime="20220516 18:05:11.712"/>
</kw>
<msg timestamp="20220516 18:05:11.713" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20220516 18:05:06.626" endtime="20220516 18:05:11.713"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220516 18:05:11.713" endtime="20220516 18:05:11.714"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix removeacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:05:11.718" level="INFO">Running command 'ozone sh prefix removeacl o3://om:9862/58091-acls/bb1/prefix1/ -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:05:16.330" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:05:16.330" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20220516 18:05:11.716" endtime="20220516 18:05:16.330"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:05:16.331" level="INFO">ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20220516 18:05:16.330" endtime="20220516 18:05:16.331"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:05:16.332" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:05:16.332" endtime="20220516 18:05:16.332"/>
</kw>
<status status="PASS" starttime="20220516 18:05:11.716" endtime="20220516 18:05:16.333"/>
</kw>
<msg timestamp="20220516 18:05:16.333" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:05:11.715" endtime="20220516 18:05:16.333"/>
</kw>
<msg timestamp="20220516 18:05:16.334" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20220516 18:05:11.714" endtime="20220516 18:05:16.334"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:05:16.339" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/58091-acls/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:05:21.386" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:05:21.386" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20220516 18:05:16.336" endtime="20220516 18:05:21.386"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:05:21.388" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20220516 18:05:21.387" endtime="20220516 18:05:21.388"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:05:21.389" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:05:21.388" endtime="20220516 18:05:21.389"/>
</kw>
<status status="PASS" starttime="20220516 18:05:16.335" endtime="20220516 18:05:21.389"/>
</kw>
<msg timestamp="20220516 18:05:21.389" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:05:16.335" endtime="20220516 18:05:21.390"/>
</kw>
<msg timestamp="20220516 18:05:21.391" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20220516 18:05:16.334" endtime="20220516 18:05:21.391"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220516 18:05:21.391" endtime="20220516 18:05:21.392"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix setacl ${protocol}${server}/${volume}/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:05:21.397" level="INFO">Running command 'ozone sh prefix setacl o3://om:9862/58091-acls/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:05:26.460" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:05:26.461" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20220516 18:05:21.394" endtime="20220516 18:05:26.461"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:05:26.462" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20220516 18:05:26.461" endtime="20220516 18:05:26.462"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:05:26.463" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:05:26.462" endtime="20220516 18:05:26.463"/>
</kw>
<status status="PASS" starttime="20220516 18:05:21.394" endtime="20220516 18:05:26.464"/>
</kw>
<msg timestamp="20220516 18:05:26.464" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:05:21.393" endtime="20220516 18:05:26.464"/>
</kw>
<msg timestamp="20220516 18:05:26.465" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20220516 18:05:21.392" endtime="20220516 18:05:26.465"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:05:26.470" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/58091-acls/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:05:31.509" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:05:31.509" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "D...</msg>
<status status="PASS" starttime="20220516 18:05:26.468" endtime="20220516 18:05:31.510"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:05:31.511" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20220516 18:05:31.511" endtime="20220516 18:05:31.512"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:05:31.512" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:05:31.512" endtime="20220516 18:05:31.513"/>
</kw>
<status status="PASS" starttime="20220516 18:05:26.467" endtime="20220516 18:05:31.513"/>
</kw>
<msg timestamp="20220516 18:05:31.513" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:05:26.466" endtime="20220516 18:05:31.514"/>
</kw>
<msg timestamp="20220516 18:05:31.514" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "D...</msg>
<status status="PASS" starttime="20220516 18:05:26.465" endtime="20220516 18:05:31.514"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220516 18:05:31.514" endtime="20220516 18:05:31.515"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220516 18:05:31.515" endtime="20220516 18:05:31.516"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:05:31.520" level="INFO">Running command 'ozone sh key put o3://om:9862/58091-acls/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:05:41.426" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:05:41.426" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:05:31.518" endtime="20220516 18:05:41.426"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:05:41.428" level="INFO"/>
<status status="PASS" starttime="20220516 18:05:41.427" endtime="20220516 18:05:41.428"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:05:41.429" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:05:41.428" endtime="20220516 18:05:41.429"/>
</kw>
<status status="PASS" starttime="20220516 18:05:31.517" endtime="20220516 18:05:41.430"/>
</kw>
<msg timestamp="20220516 18:05:41.430" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:05:31.517" endtime="20220516 18:05:41.430"/>
</kw>
<status status="PASS" starttime="20220516 18:05:31.516" endtime="20220516 18:05:41.431"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/prefix1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:05:41.435" level="INFO">Running command 'ozone sh key getacl o3://om:9862/58091-acls/bb1/prefix1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:05:46.431" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:05:46.431" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20220516 18:05:41.433" endtime="20220516 18:05:46.431"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:05:46.433" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20220516 18:05:46.432" endtime="20220516 18:05:46.433"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:05:46.434" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:05:46.433" endtime="20220516 18:05:46.434"/>
</kw>
<status status="PASS" starttime="20220516 18:05:41.432" endtime="20220516 18:05:46.435"/>
</kw>
<msg timestamp="20220516 18:05:46.435" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:05:41.432" endtime="20220516 18:05:46.436"/>
</kw>
<msg timestamp="20220516 18:05:46.436" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20220516 18:05:41.431" endtime="20220516 18:05:46.436"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220516 18:05:46.436" endtime="20220516 18:05:46.437"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220516 18:05:46.437" endtime="20220516 18:05:46.438"/>
</kw>
<status status="PASS" starttime="20220516 18:05:01.905" endtime="20220516 18:05:46.438"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220516 18:05:01.867" endtime="20220516 18:05:46.439"/>
</test>
<test id="s1-s1-s5-t6" name="RpcClient without host">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:05:46.446" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:05:46.450" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:05:46.450" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220516 18:05:46.444" endtime="20220516 18:05:46.450"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:05:46.452" level="INFO">scm</msg>
<status status="PASS" starttime="20220516 18:05:46.451" endtime="20220516 18:05:46.452"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:05:46.453" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:05:46.452" endtime="20220516 18:05:46.453"/>
</kw>
<status status="PASS" starttime="20220516 18:05:46.443" endtime="20220516 18:05:46.454"/>
</kw>
<msg timestamp="20220516 18:05:46.454" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:05:46.443" endtime="20220516 18:05:46.454"/>
</kw>
<msg timestamp="20220516 18:05:46.455" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220516 18:05:46.442" endtime="20220516 18:05:46.455"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220516 18:05:46.456" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220516 18:05:46.455" endtime="20220516 18:05:46.456"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:05:46.460" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:05:46.469" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:05:46.469" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:05:46.458" endtime="20220516 18:05:46.469"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:05:46.470" level="INFO"/>
<status status="PASS" starttime="20220516 18:05:46.470" endtime="20220516 18:05:46.471"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:05:46.471" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:05:46.471" endtime="20220516 18:05:46.471"/>
</kw>
<status status="PASS" starttime="20220516 18:05:46.457" endtime="20220516 18:05:46.472"/>
</kw>
<msg timestamp="20220516 18:05:46.472" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:05:46.457" endtime="20220516 18:05:46.473"/>
</kw>
<status status="PASS" starttime="20220516 18:05:46.456" endtime="20220516 18:05:46.473"/>
</kw>
<status status="PASS" starttime="20220516 18:05:46.456" endtime="20220516 18:05:46.473"/>
</kw>
<status status="PASS" starttime="20220516 18:05:46.441" endtime="20220516 18:05:46.473"/>
</kw>
<status status="PASS" starttime="20220516 18:05:46.441" endtime="20220516 18:05:46.474"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-without-host</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:05:46.479" level="INFO">Running command 'ozone sh volume info o3:///58091-without-host 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:05:51.284" level="INFO">${rc} = 255</msg>
<msg timestamp="20220516 18:05:51.284" level="INFO">${output} = VOLUME_NOT_FOUND Volume 58091-without-host is not found</msg>
<status status="PASS" starttime="20220516 18:05:46.476" endtime="20220516 18:05:51.284"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:05:51.286" level="INFO">VOLUME_NOT_FOUND Volume 58091-without-host is not found</msg>
<status status="PASS" starttime="20220516 18:05:51.285" endtime="20220516 18:05:51.286"/>
</kw>
<msg timestamp="20220516 18:05:51.286" level="INFO">${result} = VOLUME_NOT_FOUND Volume 58091-without-host is not found</msg>
<status status="PASS" starttime="20220516 18:05:46.476" endtime="20220516 18:05:51.286"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 18:05:51.286" endtime="20220516 18:05:51.287"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:05:51.291" level="INFO">Running command 'ozone sh volume create o3:///58091-without-host --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:05:56.031" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:05:56.031" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:05:51.289" endtime="20220516 18:05:56.031"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:05:56.033" level="INFO"/>
<status status="PASS" starttime="20220516 18:05:56.032" endtime="20220516 18:05:56.033"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:05:56.034" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:05:56.033" endtime="20220516 18:05:56.034"/>
</kw>
<status status="PASS" starttime="20220516 18:05:51.288" endtime="20220516 18:05:56.035"/>
</kw>
<msg timestamp="20220516 18:05:56.035" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:05:51.288" endtime="20220516 18:05:56.035"/>
</kw>
<msg timestamp="20220516 18:05:56.036" level="INFO">${result} = </msg>
<status status="PASS" starttime="20220516 18:05:51.287" endtime="20220516 18:05:56.036"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 18:05:56.036" endtime="20220516 18:05:56.036"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:05:56.041" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '.[] | select(.name=="58091-without-host")' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:06:01.304" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:06:01.304" level="INFO">${output} = {
  "metadata": {},
  "name": "58091-without-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": ...</msg>
<status status="PASS" starttime="20220516 18:05:56.039" endtime="20220516 18:06:01.304"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:06:01.305" level="INFO">{
  "metadata": {},
  "name": "58091-without-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2022-05-16T18:05:55.869Z",
  "modificationTime": "2022-05-16T18:05:55.869Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20220516 18:06:01.304" endtime="20220516 18:06:01.305"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:06:01.306" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:06:01.306" endtime="20220516 18:06:01.306"/>
</kw>
<status status="PASS" starttime="20220516 18:05:56.038" endtime="20220516 18:06:01.307"/>
</kw>
<msg timestamp="20220516 18:06:01.307" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:05:56.038" endtime="20220516 18:06:01.308"/>
</kw>
<msg timestamp="20220516 18:06:01.308" level="INFO">${result} = {
  "metadata": {},
  "name": "58091-without-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": ...</msg>
<status status="PASS" starttime="20220516 18:05:56.037" endtime="20220516 18:06:01.308"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 18:06:01.308" endtime="20220516 18:06:01.309"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:06:01.316" level="INFO">Running command 'ozone sh volume list | jq -r '.[] | select(.name=="58091-without-host")' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:06:06.359" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:06:06.359" level="INFO">${output} = {
  "metadata": {},
  "name": "58091-without-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": ...</msg>
<status status="PASS" starttime="20220516 18:06:01.314" endtime="20220516 18:06:06.359"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:06:06.361" level="INFO">{
  "metadata": {},
  "name": "58091-without-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2022-05-16T18:05:55.869Z",
  "modificationTime": "2022-05-16T18:05:55.869Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20220516 18:06:06.360" endtime="20220516 18:06:06.361"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:06:06.362" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:06:06.361" endtime="20220516 18:06:06.362"/>
</kw>
<status status="PASS" starttime="20220516 18:06:01.311" endtime="20220516 18:06:06.363"/>
</kw>
<msg timestamp="20220516 18:06:06.363" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:06:01.310" endtime="20220516 18:06:06.364"/>
</kw>
<msg timestamp="20220516 18:06:06.364" level="INFO">${result} = {
  "metadata": {},
  "name": "58091-without-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": ...</msg>
<status status="PASS" starttime="20220516 18:06:01.309" endtime="20220516 18:06:06.364"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 18:06:06.364" endtime="20220516 18:06:06.365"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:06:06.370" level="INFO">Running command 'ozone sh volume setquota o3:///58091-without-host --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:06:11.340" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:06:11.340" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:06:06.367" endtime="20220516 18:06:11.340"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:06:11.342" level="INFO"/>
<status status="PASS" starttime="20220516 18:06:11.341" endtime="20220516 18:06:11.342"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:06:11.343" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:06:11.342" endtime="20220516 18:06:11.343"/>
</kw>
<status status="PASS" starttime="20220516 18:06:06.367" endtime="20220516 18:06:11.343"/>
</kw>
<msg timestamp="20220516 18:06:11.343" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:06:06.366" endtime="20220516 18:06:11.344"/>
</kw>
<status status="PASS" starttime="20220516 18:06:06.365" endtime="20220516 18:06:11.344"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:06:11.349" level="INFO">Running command 'ozone sh volume info o3:///58091-without-host | jq -r '. | select(.name=="58091-without-host") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:06:16.373" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:06:16.373" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20220516 18:06:11.347" endtime="20220516 18:06:16.373"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:06:16.375" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20220516 18:06:16.374" endtime="20220516 18:06:16.375"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:06:16.376" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:06:16.375" endtime="20220516 18:06:16.376"/>
</kw>
<status status="PASS" starttime="20220516 18:06:11.346" endtime="20220516 18:06:16.377"/>
</kw>
<msg timestamp="20220516 18:06:16.377" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:06:11.346" endtime="20220516 18:06:16.377"/>
</kw>
<msg timestamp="20220516 18:06:16.378" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20220516 18:06:11.345" endtime="20220516 18:06:16.378"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220516 18:06:16.378" endtime="20220516 18:06:16.379"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:06:16.383" level="INFO">Running command 'ozone sh bucket create o3:///58091-without-host/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:06:21.105" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:06:21.105" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:06:16.381" endtime="20220516 18:06:21.105"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:06:21.107" level="INFO"/>
<status status="PASS" starttime="20220516 18:06:21.106" endtime="20220516 18:06:21.107"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:06:21.108" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:06:21.107" endtime="20220516 18:06:21.108"/>
</kw>
<status status="PASS" starttime="20220516 18:06:16.380" endtime="20220516 18:06:21.108"/>
</kw>
<msg timestamp="20220516 18:06:21.108" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:06:16.380" endtime="20220516 18:06:21.109"/>
</kw>
<status status="PASS" starttime="20220516 18:06:16.379" endtime="20220516 18:06:21.109"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:06:21.115" level="INFO">Running command 'ozone sh bucket info o3:///58091-without-host/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:06:26.250" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:06:26.250" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20220516 18:06:21.112" endtime="20220516 18:06:26.250"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:06:26.251" level="INFO">DISK</msg>
<status status="PASS" starttime="20220516 18:06:26.251" endtime="20220516 18:06:26.252"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:06:26.253" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:06:26.252" endtime="20220516 18:06:26.253"/>
</kw>
<status status="PASS" starttime="20220516 18:06:21.111" endtime="20220516 18:06:26.253"/>
</kw>
<msg timestamp="20220516 18:06:26.254" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:06:21.111" endtime="20220516 18:06:26.254"/>
</kw>
<msg timestamp="20220516 18:06:26.255" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20220516 18:06:21.110" endtime="20220516 18:06:26.255"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220516 18:06:26.255" endtime="20220516 18:06:26.255"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:06:26.260" level="INFO">Running command 'ozone sh bucket info o3:///58091-without-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:06:31.167" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:06:31.167" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20220516 18:06:26.258" endtime="20220516 18:06:31.167"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:06:31.169" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20220516 18:06:31.168" endtime="20220516 18:06:31.169"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:06:31.170" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:06:31.169" endtime="20220516 18:06:31.170"/>
</kw>
<status status="PASS" starttime="20220516 18:06:26.257" endtime="20220516 18:06:31.170"/>
</kw>
<msg timestamp="20220516 18:06:31.170" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:06:26.257" endtime="20220516 18:06:31.171"/>
</kw>
<msg timestamp="20220516 18:06:31.171" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20220516 18:06:26.255" endtime="20220516 18:06:31.171"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220516 18:06:31.172" endtime="20220516 18:06:31.172"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:06:31.177" level="INFO">Running command 'ozone sh bucket info o3:///58091-without-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:06:36.332" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:06:36.332" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20220516 18:06:31.174" endtime="20220516 18:06:36.332"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:06:36.333" level="INFO">100</msg>
<status status="PASS" starttime="20220516 18:06:36.332" endtime="20220516 18:06:36.333"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:06:36.334" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:06:36.333" endtime="20220516 18:06:36.334"/>
</kw>
<status status="PASS" starttime="20220516 18:06:31.174" endtime="20220516 18:06:36.335"/>
</kw>
<msg timestamp="20220516 18:06:36.335" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:06:31.173" endtime="20220516 18:06:36.335"/>
</kw>
<msg timestamp="20220516 18:06:36.336" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20220516 18:06:31.172" endtime="20220516 18:06:36.336"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220516 18:06:36.336" endtime="20220516 18:06:36.336"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:06:36.344" level="INFO">Running command 'ozone sh bucket setquota o3:///58091-without-host/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:06:41.165" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:06:41.166" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:06:36.342" endtime="20220516 18:06:41.166"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:06:41.169" level="INFO"/>
<status status="PASS" starttime="20220516 18:06:41.168" endtime="20220516 18:06:41.169"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:06:41.170" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:06:41.169" endtime="20220516 18:06:41.170"/>
</kw>
<status status="PASS" starttime="20220516 18:06:36.338" endtime="20220516 18:06:41.170"/>
</kw>
<msg timestamp="20220516 18:06:41.171" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:06:36.338" endtime="20220516 18:06:41.171"/>
</kw>
<status status="PASS" starttime="20220516 18:06:36.337" endtime="20220516 18:06:41.172"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:06:41.177" level="INFO">Running command 'ozone sh bucket info o3:///58091-without-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:06:46.113" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:06:46.113" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20220516 18:06:41.175" endtime="20220516 18:06:46.114"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:06:46.115" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20220516 18:06:46.114" endtime="20220516 18:06:46.115"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:06:46.116" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:06:46.115" endtime="20220516 18:06:46.116"/>
</kw>
<status status="PASS" starttime="20220516 18:06:41.174" endtime="20220516 18:06:46.117"/>
</kw>
<msg timestamp="20220516 18:06:46.117" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:06:41.173" endtime="20220516 18:06:46.117"/>
</kw>
<msg timestamp="20220516 18:06:46.118" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20220516 18:06:41.172" endtime="20220516 18:06:46.118"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220516 18:06:46.118" endtime="20220516 18:06:46.119"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:06:46.123" level="INFO">Running command 'ozone sh bucket info o3:///58091-without-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:06:50.969" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:06:50.969" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20220516 18:06:46.121" endtime="20220516 18:06:50.969"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:06:50.970" level="INFO">1000</msg>
<status status="PASS" starttime="20220516 18:06:50.969" endtime="20220516 18:06:50.970"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:06:50.971" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:06:50.971" endtime="20220516 18:06:50.972"/>
</kw>
<status status="PASS" starttime="20220516 18:06:46.120" endtime="20220516 18:06:50.972"/>
</kw>
<msg timestamp="20220516 18:06:50.972" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:06:46.120" endtime="20220516 18:06:50.973"/>
</kw>
<msg timestamp="20220516 18:06:50.973" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20220516 18:06:46.119" endtime="20220516 18:06:50.973"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220516 18:06:50.973" endtime="20220516 18:06:50.974"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '.[] | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:06:50.978" level="INFO">Running command 'ozone sh bucket list o3:///58091-without-host/ | jq -r '.[] | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:06:56.200" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:06:56.200" level="INFO">${output} = 58091-without-host</msg>
<status status="PASS" starttime="20220516 18:06:50.976" endtime="20220516 18:06:56.200"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:06:56.202" level="INFO">58091-without-host</msg>
<status status="PASS" starttime="20220516 18:06:56.201" endtime="20220516 18:06:56.202"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:06:56.203" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:06:56.202" endtime="20220516 18:06:56.203"/>
</kw>
<status status="PASS" starttime="20220516 18:06:50.976" endtime="20220516 18:06:56.203"/>
</kw>
<msg timestamp="20220516 18:06:56.203" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:06:50.975" endtime="20220516 18:06:56.204"/>
</kw>
<msg timestamp="20220516 18:06:56.205" level="INFO">${result} = 58091-without-host</msg>
<status status="PASS" starttime="20220516 18:06:50.974" endtime="20220516 18:06:56.205"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220516 18:06:56.205" endtime="20220516 18:06:56.205"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:06:56.222" level="INFO">Running command 'ozone sh key put o3:///58091-without-host/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:07:03.744" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:07:03.744" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:06:56.209" endtime="20220516 18:07:03.744"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:07:03.745" level="INFO"/>
<status status="PASS" starttime="20220516 18:07:03.744" endtime="20220516 18:07:03.745"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:07:03.746" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:07:03.746" endtime="20220516 18:07:03.746"/>
</kw>
<status status="PASS" starttime="20220516 18:06:56.208" endtime="20220516 18:07:03.747"/>
</kw>
<msg timestamp="20220516 18:07:03.747" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:06:56.208" endtime="20220516 18:07:03.748"/>
</kw>
<status status="PASS" starttime="20220516 18:06:56.207" endtime="20220516 18:07:03.748"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:07:03.754" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:07:03.757" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:07:03.757" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:07:03.751" endtime="20220516 18:07:03.757"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:07:03.758" level="INFO"/>
<status status="PASS" starttime="20220516 18:07:03.757" endtime="20220516 18:07:03.759"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:07:03.759" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:07:03.759" endtime="20220516 18:07:03.760"/>
</kw>
<status status="PASS" starttime="20220516 18:07:03.750" endtime="20220516 18:07:03.760"/>
</kw>
<msg timestamp="20220516 18:07:03.760" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:07:03.750" endtime="20220516 18:07:03.761"/>
</kw>
<status status="PASS" starttime="20220516 18:07:03.749" endtime="20220516 18:07:03.761"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:07:03.766" level="INFO">Running command 'ozone sh key get o3:///58091-without-host/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:07:10.948" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:07:10.948" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:07:03.763" endtime="20220516 18:07:10.949"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:07:10.951" level="INFO"/>
<status status="PASS" starttime="20220516 18:07:10.949" endtime="20220516 18:07:10.951"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:07:10.952" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:07:10.951" endtime="20220516 18:07:10.952"/>
</kw>
<status status="PASS" starttime="20220516 18:07:03.763" endtime="20220516 18:07:10.952"/>
</kw>
<msg timestamp="20220516 18:07:10.952" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:07:03.762" endtime="20220516 18:07:10.953"/>
</kw>
<status status="PASS" starttime="20220516 18:07:03.761" endtime="20220516 18:07:10.953"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:07:10.960" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:07:10.964" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:07:10.964" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:07:10.955" endtime="20220516 18:07:10.964"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:07:10.965" level="INFO"/>
<status status="PASS" starttime="20220516 18:07:10.964" endtime="20220516 18:07:10.965"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:07:10.966" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:07:10.965" endtime="20220516 18:07:10.966"/>
</kw>
<status status="PASS" starttime="20220516 18:07:10.954" endtime="20220516 18:07:10.966"/>
</kw>
<msg timestamp="20220516 18:07:10.966" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:07:10.954" endtime="20220516 18:07:10.967"/>
</kw>
<status status="PASS" starttime="20220516 18:07:10.953" endtime="20220516 18:07:10.967"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:07:10.972" level="INFO">Running command 'ozone sh key put -t RATIS o3:///58091-without-host/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:07:20.726" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:07:20.726" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:07:10.969" endtime="20220516 18:07:20.726"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:07:20.727" level="INFO"/>
<status status="PASS" starttime="20220516 18:07:20.727" endtime="20220516 18:07:20.727"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:07:20.728" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:07:20.728" endtime="20220516 18:07:20.729"/>
</kw>
<status status="PASS" starttime="20220516 18:07:10.969" endtime="20220516 18:07:20.729"/>
</kw>
<msg timestamp="20220516 18:07:20.729" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:07:10.968" endtime="20220516 18:07:20.730"/>
</kw>
<status status="PASS" starttime="20220516 18:07:10.968" endtime="20220516 18:07:20.730"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:07:20.734" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:07:20.737" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:07:20.737" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:07:20.732" endtime="20220516 18:07:20.737"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:07:20.738" level="INFO"/>
<status status="PASS" starttime="20220516 18:07:20.737" endtime="20220516 18:07:20.738"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:07:20.739" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:07:20.738" endtime="20220516 18:07:20.739"/>
</kw>
<status status="PASS" starttime="20220516 18:07:20.731" endtime="20220516 18:07:20.740"/>
</kw>
<msg timestamp="20220516 18:07:20.740" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:07:20.731" endtime="20220516 18:07:20.741"/>
</kw>
<status status="PASS" starttime="20220516 18:07:20.730" endtime="20220516 18:07:20.741"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:07:20.744" level="INFO">Running command 'ozone sh key get o3:///58091-without-host/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:07:27.917" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:07:27.918" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:07:20.743" endtime="20220516 18:07:27.918"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:07:27.919" level="INFO"/>
<status status="PASS" starttime="20220516 18:07:27.918" endtime="20220516 18:07:27.920"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:07:27.920" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:07:27.920" endtime="20220516 18:07:27.921"/>
</kw>
<status status="PASS" starttime="20220516 18:07:20.742" endtime="20220516 18:07:27.921"/>
</kw>
<msg timestamp="20220516 18:07:27.921" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:07:20.742" endtime="20220516 18:07:27.922"/>
</kw>
<status status="PASS" starttime="20220516 18:07:20.741" endtime="20220516 18:07:27.922"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:07:27.927" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:07:27.930" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:07:27.930" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:07:27.925" endtime="20220516 18:07:27.930"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:07:27.931" level="INFO"/>
<status status="PASS" starttime="20220516 18:07:27.931" endtime="20220516 18:07:27.931"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:07:27.932" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:07:27.931" endtime="20220516 18:07:27.932"/>
</kw>
<status status="PASS" starttime="20220516 18:07:27.924" endtime="20220516 18:07:27.933"/>
</kw>
<msg timestamp="20220516 18:07:27.933" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:07:27.924" endtime="20220516 18:07:27.933"/>
</kw>
<status status="PASS" starttime="20220516 18:07:27.923" endtime="20220516 18:07:27.934"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:07:27.938" level="INFO">Running command 'ozone sh key info o3:///58091-without-host/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:07:33.133" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:07:33.134" level="INFO">${output} = {
  "volumeName": "58091-without-host",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17526,
  "creationTime": "2022-05-16T18:07:15.450Z",
  "modificationTime": "2022-05-16T18:07:20.263...</msg>
<status status="PASS" starttime="20220516 18:07:27.936" endtime="20220516 18:07:33.134"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:07:33.135" level="INFO">{
  "volumeName": "58091-without-host",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17526,
  "creationTime": "2022-05-16T18:07:15.450Z",
  "modificationTime": "2022-05-16T18:07:20.263Z",
  "replicationConfig": {
    "replicationFactor": "THREE",
    "requiredNodes": 3,
    "replicationType": "RATIS"
  },
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 109611004723200020,
      "length": 17526,
      "offset": 0,
      "keyOffset": 0
    }
  ],
  "metadata": {}
}</msg>
<status status="PASS" starttime="20220516 18:07:33.134" endtime="20220516 18:07:33.135"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:07:33.136" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:07:33.136" endtime="20220516 18:07:33.136"/>
</kw>
<status status="PASS" starttime="20220516 18:07:27.935" endtime="20220516 18:07:33.137"/>
</kw>
<msg timestamp="20220516 18:07:33.137" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:07:27.935" endtime="20220516 18:07:33.138"/>
</kw>
<msg timestamp="20220516 18:07:33.138" level="INFO">${result} = {
  "volumeName": "58091-without-host",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17526,
  "creationTime": "2022-05-16T18:07:15.450Z",
  "modificationTime": "2022-05-16T18:07:20.263...</msg>
<status status="PASS" starttime="20220516 18:07:27.934" endtime="20220516 18:07:33.138"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 18:07:33.138" endtime="20220516 18:07:33.139"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:07:33.153" level="INFO">Running command 'ozone sh key delete o3:///58091-without-host/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:07:37.804" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:07:37.804" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:07:33.141" endtime="20220516 18:07:37.804"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:07:37.805" level="INFO"/>
<status status="PASS" starttime="20220516 18:07:37.805" endtime="20220516 18:07:37.805"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:07:37.806" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:07:37.806" endtime="20220516 18:07:37.806"/>
</kw>
<status status="PASS" starttime="20220516 18:07:33.141" endtime="20220516 18:07:37.807"/>
</kw>
<msg timestamp="20220516 18:07:37.807" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:07:33.140" endtime="20220516 18:07:37.808"/>
</kw>
<status status="PASS" starttime="20220516 18:07:33.139" endtime="20220516 18:07:37.808"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:07:37.814" level="INFO">Running command 'ozone sh key cp o3:///58091-without-host/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:07:45.550" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:07:45.550" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:07:37.812" endtime="20220516 18:07:45.550"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:07:45.551" level="INFO"/>
<status status="PASS" starttime="20220516 18:07:45.550" endtime="20220516 18:07:45.551"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:07:45.552" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:07:45.552" endtime="20220516 18:07:45.552"/>
</kw>
<status status="PASS" starttime="20220516 18:07:37.811" endtime="20220516 18:07:45.553"/>
</kw>
<msg timestamp="20220516 18:07:45.553" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:07:37.809" endtime="20220516 18:07:45.554"/>
</kw>
<status status="PASS" starttime="20220516 18:07:37.808" endtime="20220516 18:07:45.554"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:07:45.558" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:07:45.561" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:07:45.561" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:07:45.556" endtime="20220516 18:07:45.561"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:07:45.563" level="INFO"/>
<status status="PASS" starttime="20220516 18:07:45.562" endtime="20220516 18:07:45.563"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:07:45.563" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:07:45.563" endtime="20220516 18:07:45.564"/>
</kw>
<status status="PASS" starttime="20220516 18:07:45.555" endtime="20220516 18:07:45.564"/>
</kw>
<msg timestamp="20220516 18:07:45.564" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:07:45.555" endtime="20220516 18:07:45.565"/>
</kw>
<status status="PASS" starttime="20220516 18:07:45.554" endtime="20220516 18:07:45.566"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:07:45.570" level="INFO">Running command 'ozone sh key get o3:///58091-without-host/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:07:52.559" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:07:52.560" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:07:45.568" endtime="20220516 18:07:52.560"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:07:52.561" level="INFO"/>
<status status="PASS" starttime="20220516 18:07:52.560" endtime="20220516 18:07:52.561"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:07:52.562" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:07:52.561" endtime="20220516 18:07:52.562"/>
</kw>
<status status="PASS" starttime="20220516 18:07:45.567" endtime="20220516 18:07:52.563"/>
</kw>
<msg timestamp="20220516 18:07:52.563" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:07:45.567" endtime="20220516 18:07:52.563"/>
</kw>
<status status="PASS" starttime="20220516 18:07:45.566" endtime="20220516 18:07:52.564"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:07:52.569" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:07:52.572" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:07:52.572" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:07:52.566" endtime="20220516 18:07:52.572"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:07:52.573" level="INFO"/>
<status status="PASS" starttime="20220516 18:07:52.572" endtime="20220516 18:07:52.573"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:07:52.574" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:07:52.573" endtime="20220516 18:07:52.574"/>
</kw>
<status status="PASS" starttime="20220516 18:07:52.565" endtime="20220516 18:07:52.574"/>
</kw>
<msg timestamp="20220516 18:07:52.574" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:07:52.565" endtime="20220516 18:07:52.575"/>
</kw>
<status status="PASS" starttime="20220516 18:07:52.564" endtime="20220516 18:07:52.575"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:07:52.581" level="INFO">Running command 'ozone sh key delete o3:///58091-without-host/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:07:57.487" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:07:57.488" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:07:52.578" endtime="20220516 18:07:57.488"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:07:57.489" level="INFO"/>
<status status="PASS" starttime="20220516 18:07:57.488" endtime="20220516 18:07:57.489"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:07:57.491" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:07:57.490" endtime="20220516 18:07:57.491"/>
</kw>
<status status="PASS" starttime="20220516 18:07:52.577" endtime="20220516 18:07:57.491"/>
</kw>
<msg timestamp="20220516 18:07:57.491" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:07:52.577" endtime="20220516 18:07:57.492"/>
</kw>
<status status="PASS" starttime="20220516 18:07:52.576" endtime="20220516 18:07:57.492"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:07:57.496" level="INFO">Running command 'ozone sh key get o3:///58091-without-host/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:08:02.183" level="INFO">${rc} = 255</msg>
<msg timestamp="20220516 18:08:02.183" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20220516 18:07:57.493" endtime="20220516 18:08:02.183"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:08:02.185" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20220516 18:08:02.184" endtime="20220516 18:08:02.185"/>
</kw>
<msg timestamp="20220516 18:08:02.185" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20220516 18:07:57.493" endtime="20220516 18:08:02.185"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 18:08:02.185" endtime="20220516 18:08:02.186"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:08:02.191" level="INFO">Running command 'ozone sh key get --force o3:///58091-without-host/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:08:09.370" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:08:09.370" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:08:02.188" endtime="20220516 18:08:09.370"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:08:09.372" level="INFO"/>
<status status="PASS" starttime="20220516 18:08:09.371" endtime="20220516 18:08:09.372"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:08:09.373" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:08:09.372" endtime="20220516 18:08:09.373"/>
</kw>
<status status="PASS" starttime="20220516 18:08:02.188" endtime="20220516 18:08:09.373"/>
</kw>
<msg timestamp="20220516 18:08:09.373" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:08:02.187" endtime="20220516 18:08:09.374"/>
</kw>
<msg timestamp="20220516 18:08:09.375" level="INFO">${result} = </msg>
<status status="PASS" starttime="20220516 18:08:02.186" endtime="20220516 18:08:09.375"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 18:08:09.375" endtime="20220516 18:08:09.376"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:08:09.380" level="INFO">Running command 'ozone sh key info o3:///58091-without-host/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:08:14.713" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:08:14.713" level="INFO">${output} = {
  "volumeName": "58091-without-host",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17526,
  "creationTime": "2022-05-16T18:07:01.046Z",
  "modificationTime": "2022-05-16T18:07:03.260Z",
  ...</msg>
<status status="PASS" starttime="20220516 18:08:09.378" endtime="20220516 18:08:14.713"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:08:14.714" level="INFO">{
  "volumeName": "58091-without-host",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17526,
  "creationTime": "2022-05-16T18:07:01.046Z",
  "modificationTime": "2022-05-16T18:07:03.260Z",
  "replicationConfig": {
    "replicationFactor": "ONE",
    "requiredNodes": 1,
    "replicationType": "RATIS"
  },
  "ozoneKeyLocations": [
    {
      "containerID": 2,
      "localID": 109611004723200020,
      "length": 17526,
      "offset": 0,
      "keyOffset": 0
    }
  ],
  "metadata": {}
}</msg>
<status status="PASS" starttime="20220516 18:08:14.713" endtime="20220516 18:08:14.714"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:08:14.715" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:08:14.715" endtime="20220516 18:08:14.715"/>
</kw>
<status status="PASS" starttime="20220516 18:08:09.377" endtime="20220516 18:08:14.716"/>
</kw>
<msg timestamp="20220516 18:08:14.716" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:08:09.377" endtime="20220516 18:08:14.717"/>
</kw>
<msg timestamp="20220516 18:08:14.717" level="INFO">${result} = {
  "volumeName": "58091-without-host",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17526,
  "creationTime": "2022-05-16T18:07:01.046Z",
  "modificationTime": "2022-05-16T18:07:03.260Z",
  ...</msg>
<status status="PASS" starttime="20220516 18:08:09.376" endtime="20220516 18:08:14.717"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 18:08:14.717" endtime="20220516 18:08:14.718"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[] | select(.name=="key1") | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:08:14.723" level="INFO">Running command 'ozone sh key list o3:///58091-without-host/bb1 | jq -r '.[] | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:08:19.892" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:08:19.892" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20220516 18:08:14.721" endtime="20220516 18:08:19.892"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:08:19.894" level="INFO">key1</msg>
<status status="PASS" starttime="20220516 18:08:19.893" endtime="20220516 18:08:19.894"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:08:19.895" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:08:19.894" endtime="20220516 18:08:19.895"/>
</kw>
<status status="PASS" starttime="20220516 18:08:14.720" endtime="20220516 18:08:19.895"/>
</kw>
<msg timestamp="20220516 18:08:19.895" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:08:14.720" endtime="20220516 18:08:19.896"/>
</kw>
<msg timestamp="20220516 18:08:19.896" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20220516 18:08:14.718" endtime="20220516 18:08:19.896"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220516 18:08:19.896" endtime="20220516 18:08:19.897"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:08:19.902" level="INFO">Running command 'ozone sh key rename o3:///58091-without-host/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:08:24.721" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:08:24.721" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:08:19.899" endtime="20220516 18:08:24.721"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:08:24.723" level="INFO"/>
<status status="PASS" starttime="20220516 18:08:24.722" endtime="20220516 18:08:24.723"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:08:24.724" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:08:24.723" endtime="20220516 18:08:24.724"/>
</kw>
<status status="PASS" starttime="20220516 18:08:19.899" endtime="20220516 18:08:24.724"/>
</kw>
<msg timestamp="20220516 18:08:24.724" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:08:19.898" endtime="20220516 18:08:24.725"/>
</kw>
<status status="PASS" starttime="20220516 18:08:19.897" endtime="20220516 18:08:24.725"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:08:24.729" level="INFO">Running command 'ozone sh key list o3:///58091-without-host/bb1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:08:29.756" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:08:29.756" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20220516 18:08:24.727" endtime="20220516 18:08:29.756"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:08:29.757" level="INFO">key2</msg>
<status status="PASS" starttime="20220516 18:08:29.756" endtime="20220516 18:08:29.757"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:08:29.758" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:08:29.758" endtime="20220516 18:08:29.758"/>
</kw>
<status status="PASS" starttime="20220516 18:08:24.726" endtime="20220516 18:08:29.759"/>
</kw>
<msg timestamp="20220516 18:08:29.759" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:08:24.726" endtime="20220516 18:08:29.759"/>
</kw>
<msg timestamp="20220516 18:08:29.760" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20220516 18:08:24.725" endtime="20220516 18:08:29.760"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220516 18:08:29.760" endtime="20220516 18:08:29.761"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:08:29.765" level="INFO">Running command 'ozone sh key delete o3:///58091-without-host/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:08:34.533" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:08:34.533" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:08:29.763" endtime="20220516 18:08:34.533"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:08:34.534" level="INFO"/>
<status status="PASS" starttime="20220516 18:08:34.534" endtime="20220516 18:08:34.535"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:08:34.535" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:08:34.535" endtime="20220516 18:08:34.536"/>
</kw>
<status status="PASS" starttime="20220516 18:08:29.762" endtime="20220516 18:08:34.536"/>
</kw>
<msg timestamp="20220516 18:08:34.536" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:08:29.762" endtime="20220516 18:08:34.537"/>
</kw>
<status status="PASS" starttime="20220516 18:08:29.761" endtime="20220516 18:08:34.537"/>
</kw>
<status status="PASS" starttime="20220516 18:06:56.206" endtime="20220516 18:08:34.537"/>
</kw>
<status status="PASS" starttime="20220516 18:06:56.206" endtime="20220516 18:08:34.537"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:08:34.542" level="INFO">Running command 'ozone sh volume clrquota --space-quota o3:///58091-without-host 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:08:39.105" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:08:39.105" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:08:34.539" endtime="20220516 18:08:39.106"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:08:39.107" level="INFO"/>
<status status="PASS" starttime="20220516 18:08:39.106" endtime="20220516 18:08:39.107"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:08:39.108" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:08:39.107" endtime="20220516 18:08:39.108"/>
</kw>
<status status="PASS" starttime="20220516 18:08:34.539" endtime="20220516 18:08:39.108"/>
</kw>
<msg timestamp="20220516 18:08:39.109" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:08:34.538" endtime="20220516 18:08:39.109"/>
</kw>
<status status="PASS" starttime="20220516 18:08:34.538" endtime="20220516 18:08:39.110"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:08:39.115" level="INFO">Running command 'ozone sh volume info o3:///58091-without-host | jq -r '. | select(.name=="58091-without-host") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:08:44.138" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:08:44.139" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20220516 18:08:39.112" endtime="20220516 18:08:44.139"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:08:44.140" level="INFO">-1</msg>
<status status="PASS" starttime="20220516 18:08:44.139" endtime="20220516 18:08:44.140"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:08:44.141" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:08:44.140" endtime="20220516 18:08:44.141"/>
</kw>
<status status="PASS" starttime="20220516 18:08:39.111" endtime="20220516 18:08:44.142"/>
</kw>
<msg timestamp="20220516 18:08:44.142" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:08:39.111" endtime="20220516 18:08:44.142"/>
</kw>
<msg timestamp="20220516 18:08:44.143" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20220516 18:08:39.110" endtime="20220516 18:08:44.143"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220516 18:08:44.143" endtime="20220516 18:08:44.147"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:08:44.152" level="INFO">Running command 'ozone sh volume clrquota --namespace-quota o3:///58091-without-host 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:08:48.895" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:08:48.895" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:08:44.150" endtime="20220516 18:08:48.895"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:08:48.897" level="INFO"/>
<status status="PASS" starttime="20220516 18:08:48.896" endtime="20220516 18:08:48.897"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:08:48.898" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:08:48.897" endtime="20220516 18:08:48.898"/>
</kw>
<status status="PASS" starttime="20220516 18:08:44.149" endtime="20220516 18:08:48.899"/>
</kw>
<msg timestamp="20220516 18:08:48.899" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:08:44.148" endtime="20220516 18:08:48.900"/>
</kw>
<status status="PASS" starttime="20220516 18:08:44.147" endtime="20220516 18:08:48.900"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:08:48.905" level="INFO">Running command 'ozone sh volume info o3:///58091-without-host | jq -r '. | select(.name=="58091-without-host") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:08:53.692" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:08:53.692" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20220516 18:08:48.902" endtime="20220516 18:08:53.692"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:08:53.694" level="INFO">-1</msg>
<status status="PASS" starttime="20220516 18:08:53.693" endtime="20220516 18:08:53.694"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:08:53.695" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:08:53.694" endtime="20220516 18:08:53.695"/>
</kw>
<status status="PASS" starttime="20220516 18:08:48.902" endtime="20220516 18:08:53.695"/>
</kw>
<msg timestamp="20220516 18:08:53.696" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:08:48.901" endtime="20220516 18:08:53.696"/>
</kw>
<msg timestamp="20220516 18:08:53.697" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20220516 18:08:48.900" endtime="20220516 18:08:53.697"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220516 18:08:53.697" endtime="20220516 18:08:53.698"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:08:53.702" level="INFO">Running command 'ozone sh bucket clrquota --space-quota o3:///58091-without-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:08:58.427" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:08:58.427" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:08:53.700" endtime="20220516 18:08:58.427"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:08:58.429" level="INFO"/>
<status status="PASS" starttime="20220516 18:08:58.428" endtime="20220516 18:08:58.429"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:08:58.429" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:08:58.429" endtime="20220516 18:08:58.430"/>
</kw>
<status status="PASS" starttime="20220516 18:08:53.699" endtime="20220516 18:08:58.430"/>
</kw>
<msg timestamp="20220516 18:08:58.431" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:08:53.699" endtime="20220516 18:08:58.431"/>
</kw>
<status status="PASS" starttime="20220516 18:08:53.698" endtime="20220516 18:08:58.432"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:08:58.437" level="INFO">Running command 'ozone sh bucket info o3:///58091-without-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:09:03.350" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:09:03.350" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20220516 18:08:58.434" endtime="20220516 18:09:03.350"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:09:03.352" level="INFO">-1</msg>
<status status="PASS" starttime="20220516 18:09:03.351" endtime="20220516 18:09:03.352"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:09:03.353" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:09:03.352" endtime="20220516 18:09:03.353"/>
</kw>
<status status="PASS" starttime="20220516 18:08:58.434" endtime="20220516 18:09:03.353"/>
</kw>
<msg timestamp="20220516 18:09:03.353" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:08:58.433" endtime="20220516 18:09:03.354"/>
</kw>
<msg timestamp="20220516 18:09:03.355" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20220516 18:08:58.432" endtime="20220516 18:09:03.355"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220516 18:09:03.355" endtime="20220516 18:09:03.356"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:09:03.360" level="INFO">Running command 'ozone sh bucket clrquota --namespace-quota o3:///58091-without-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:09:08.526" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:09:08.526" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:09:03.358" endtime="20220516 18:09:08.526"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:09:08.528" level="INFO"/>
<status status="PASS" starttime="20220516 18:09:08.527" endtime="20220516 18:09:08.528"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:09:08.529" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:09:08.528" endtime="20220516 18:09:08.529"/>
</kw>
<status status="PASS" starttime="20220516 18:09:03.357" endtime="20220516 18:09:08.530"/>
</kw>
<msg timestamp="20220516 18:09:08.530" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:09:03.356" endtime="20220516 18:09:08.530"/>
</kw>
<status status="PASS" starttime="20220516 18:09:03.356" endtime="20220516 18:09:08.531"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:09:08.535" level="INFO">Running command 'ozone sh bucket info o3:///58091-without-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:09:13.449" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:09:13.449" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20220516 18:09:08.533" endtime="20220516 18:09:13.449"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:09:13.451" level="INFO">-1</msg>
<status status="PASS" starttime="20220516 18:09:13.450" endtime="20220516 18:09:13.451"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:09:13.452" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:09:13.451" endtime="20220516 18:09:13.452"/>
</kw>
<status status="PASS" starttime="20220516 18:09:08.532" endtime="20220516 18:09:13.452"/>
</kw>
<msg timestamp="20220516 18:09:13.452" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:09:08.532" endtime="20220516 18:09:13.453"/>
</kw>
<msg timestamp="20220516 18:09:13.453" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20220516 18:09:08.531" endtime="20220516 18:09:13.454"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220516 18:09:13.454" endtime="20220516 18:09:13.454"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:09:13.460" level="INFO">Running command 'ozone sh bucket delete o3:///58091-without-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:09:18.186" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:09:18.186" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:09:13.457" endtime="20220516 18:09:18.186"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:09:18.187" level="INFO"/>
<status status="PASS" starttime="20220516 18:09:18.186" endtime="20220516 18:09:18.188"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:09:18.188" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:09:18.188" endtime="20220516 18:09:18.188"/>
</kw>
<status status="PASS" starttime="20220516 18:09:13.456" endtime="20220516 18:09:18.189"/>
</kw>
<msg timestamp="20220516 18:09:18.189" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:09:13.456" endtime="20220516 18:09:18.190"/>
</kw>
<status status="PASS" starttime="20220516 18:09:13.454" endtime="20220516 18:09:18.190"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:09:18.194" level="INFO">Running command 'ozone sh volume delete o3:///58091-without-host 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:09:22.962" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:09:22.962" level="INFO">${output} = Volume 58091-without-host is deleted</msg>
<status status="PASS" starttime="20220516 18:09:18.192" endtime="20220516 18:09:22.962"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:09:22.964" level="INFO">Volume 58091-without-host is deleted</msg>
<status status="PASS" starttime="20220516 18:09:22.963" endtime="20220516 18:09:22.964"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:09:22.965" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:09:22.964" endtime="20220516 18:09:22.965"/>
</kw>
<status status="PASS" starttime="20220516 18:09:18.191" endtime="20220516 18:09:22.965"/>
</kw>
<msg timestamp="20220516 18:09:22.965" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:09:18.191" endtime="20220516 18:09:22.966"/>
</kw>
<status status="PASS" starttime="20220516 18:09:18.190" endtime="20220516 18:09:22.966"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:09:22.971" level="INFO">Running command 'ozone sh volume create o3:///58091-without-host 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:09:27.712" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:09:27.712" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:09:22.969" endtime="20220516 18:09:27.712"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:09:27.714" level="INFO"/>
<status status="PASS" starttime="20220516 18:09:27.713" endtime="20220516 18:09:27.714"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:09:27.715" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:09:27.715" endtime="20220516 18:09:27.715"/>
</kw>
<status status="PASS" starttime="20220516 18:09:22.968" endtime="20220516 18:09:27.716"/>
</kw>
<msg timestamp="20220516 18:09:27.716" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:09:22.968" endtime="20220516 18:09:27.717"/>
</kw>
<status status="PASS" starttime="20220516 18:09:22.967" endtime="20220516 18:09:27.717"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:09:27.722" level="INFO">Running command 'ozone sh volume info o3:///58091-without-host | jq -r '. | select(.name=="58091-without-host") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:09:32.713" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:09:32.713" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20220516 18:09:27.720" endtime="20220516 18:09:32.713"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:09:32.714" level="INFO">-1</msg>
<status status="PASS" starttime="20220516 18:09:32.713" endtime="20220516 18:09:32.714"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:09:32.715" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:09:32.715" endtime="20220516 18:09:32.715"/>
</kw>
<status status="PASS" starttime="20220516 18:09:27.719" endtime="20220516 18:09:32.716"/>
</kw>
<msg timestamp="20220516 18:09:32.716" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:09:27.718" endtime="20220516 18:09:32.717"/>
</kw>
<msg timestamp="20220516 18:09:32.717" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20220516 18:09:27.717" endtime="20220516 18:09:32.717"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220516 18:09:32.717" endtime="20220516 18:09:32.718"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:09:32.727" level="INFO">Running command 'ozone sh volume info o3:///58091-without-host | jq -r '. | select(.name=="58091-without-host") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:09:37.600" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:09:37.600" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20220516 18:09:32.721" endtime="20220516 18:09:37.600"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:09:37.601" level="INFO">-1</msg>
<status status="PASS" starttime="20220516 18:09:37.600" endtime="20220516 18:09:37.601"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:09:37.602" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:09:37.601" endtime="20220516 18:09:37.602"/>
</kw>
<status status="PASS" starttime="20220516 18:09:32.720" endtime="20220516 18:09:37.603"/>
</kw>
<msg timestamp="20220516 18:09:37.603" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:09:32.720" endtime="20220516 18:09:37.603"/>
</kw>
<msg timestamp="20220516 18:09:37.604" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20220516 18:09:32.718" endtime="20220516 18:09:37.604"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220516 18:09:37.604" endtime="20220516 18:09:37.605"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:09:37.609" level="INFO">Running command 'ozone sh bucket create o3:///58091-without-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:09:42.200" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:09:42.200" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:09:37.607" endtime="20220516 18:09:42.200"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:09:42.202" level="INFO"/>
<status status="PASS" starttime="20220516 18:09:42.201" endtime="20220516 18:09:42.202"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:09:42.203" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:09:42.202" endtime="20220516 18:09:42.203"/>
</kw>
<status status="PASS" starttime="20220516 18:09:37.606" endtime="20220516 18:09:42.204"/>
</kw>
<msg timestamp="20220516 18:09:42.204" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:09:37.606" endtime="20220516 18:09:42.205"/>
</kw>
<status status="PASS" starttime="20220516 18:09:37.605" endtime="20220516 18:09:42.205"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:09:42.211" level="INFO">Running command 'ozone sh bucket info o3:///58091-without-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:09:47.189" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:09:47.189" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20220516 18:09:42.208" endtime="20220516 18:09:47.189"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:09:47.191" level="INFO">-1</msg>
<status status="PASS" starttime="20220516 18:09:47.190" endtime="20220516 18:09:47.191"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:09:47.191" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:09:47.191" endtime="20220516 18:09:47.192"/>
</kw>
<status status="PASS" starttime="20220516 18:09:42.207" endtime="20220516 18:09:47.192"/>
</kw>
<msg timestamp="20220516 18:09:47.192" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:09:42.207" endtime="20220516 18:09:47.193"/>
</kw>
<msg timestamp="20220516 18:09:47.193" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20220516 18:09:42.205" endtime="20220516 18:09:47.193"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220516 18:09:47.193" endtime="20220516 18:09:47.195"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:09:47.200" level="INFO">Running command 'ozone sh bucket info o3:///58091-without-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:09:52.045" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:09:52.045" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20220516 18:09:47.197" endtime="20220516 18:09:52.045"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:09:52.047" level="INFO">-1</msg>
<status status="PASS" starttime="20220516 18:09:52.046" endtime="20220516 18:09:52.047"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:09:52.048" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:09:52.047" endtime="20220516 18:09:52.048"/>
</kw>
<status status="PASS" starttime="20220516 18:09:47.197" endtime="20220516 18:09:52.048"/>
</kw>
<msg timestamp="20220516 18:09:52.048" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:09:47.196" endtime="20220516 18:09:52.049"/>
</kw>
<msg timestamp="20220516 18:09:52.049" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20220516 18:09:47.195" endtime="20220516 18:09:52.049"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220516 18:09:52.050" endtime="20220516 18:09:52.050"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:09:52.055" level="INFO">Running command 'ozone sh bucket delete o3:///58091-without-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:09:56.512" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:09:56.512" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:09:52.052" endtime="20220516 18:09:56.512"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:09:56.514" level="INFO"/>
<status status="PASS" starttime="20220516 18:09:56.513" endtime="20220516 18:09:56.514"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:09:56.515" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:09:56.514" endtime="20220516 18:09:56.515"/>
</kw>
<status status="PASS" starttime="20220516 18:09:52.052" endtime="20220516 18:09:56.516"/>
</kw>
<msg timestamp="20220516 18:09:56.516" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:09:52.051" endtime="20220516 18:09:56.516"/>
</kw>
<status status="PASS" starttime="20220516 18:09:52.050" endtime="20220516 18:09:56.517"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:09:56.521" level="INFO">Running command 'ozone sh volume delete o3:///58091-without-host 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:10:01.170" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:10:01.170" level="INFO">${output} = Volume 58091-without-host is deleted</msg>
<status status="PASS" starttime="20220516 18:09:56.519" endtime="20220516 18:10:01.170"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:10:01.172" level="INFO">Volume 58091-without-host is deleted</msg>
<status status="PASS" starttime="20220516 18:10:01.170" endtime="20220516 18:10:01.172"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:10:01.173" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:10:01.172" endtime="20220516 18:10:01.173"/>
</kw>
<status status="PASS" starttime="20220516 18:09:56.518" endtime="20220516 18:10:01.173"/>
</kw>
<msg timestamp="20220516 18:10:01.174" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:09:56.518" endtime="20220516 18:10:01.174"/>
</kw>
<status status="PASS" starttime="20220516 18:09:56.517" endtime="20220516 18:10:01.175"/>
</kw>
<status status="PASS" starttime="20220516 18:05:46.474" endtime="20220516 18:10:01.175"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220516 18:05:46.440" endtime="20220516 18:10:01.175"/>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="PASS" starttime="20220516 17:58:38.347" endtime="20220516 18:10:01.177"/>
</suite>
<suite id="s1-s1-s6" name="Single Node" source="/opt/hadoop/smoketest/basic/single_node.robot">
<test id="s1-s1-s6-t1" name="Basic Freon smoketest for one datanode">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:10:01.205" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:10:01.215" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:10:01.215" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220516 18:10:01.202" endtime="20220516 18:10:01.215"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:10:01.219" level="INFO">scm</msg>
<status status="PASS" starttime="20220516 18:10:01.216" endtime="20220516 18:10:01.220"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:10:01.220" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:10:01.220" endtime="20220516 18:10:01.220"/>
</kw>
<status status="PASS" starttime="20220516 18:10:01.201" endtime="20220516 18:10:01.221"/>
</kw>
<msg timestamp="20220516 18:10:01.221" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:10:01.201" endtime="20220516 18:10:01.222"/>
</kw>
<msg timestamp="20220516 18:10:01.222" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220516 18:10:01.200" endtime="20220516 18:10:01.222"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220516 18:10:01.225" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220516 18:10:01.223" endtime="20220516 18:10:01.225"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:10:01.230" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:10:01.304" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:10:01.304" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:10:01.228" endtime="20220516 18:10:01.304"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:10:01.308" level="INFO"/>
<status status="PASS" starttime="20220516 18:10:01.305" endtime="20220516 18:10:01.308"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:10:01.309" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:10:01.308" endtime="20220516 18:10:01.309"/>
</kw>
<status status="PASS" starttime="20220516 18:10:01.227" endtime="20220516 18:10:01.309"/>
</kw>
<msg timestamp="20220516 18:10:01.309" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:10:01.227" endtime="20220516 18:10:01.310"/>
</kw>
<status status="PASS" starttime="20220516 18:10:01.226" endtime="20220516 18:10:01.310"/>
</kw>
<status status="PASS" starttime="20220516 18:10:01.225" endtime="20220516 18:10:01.310"/>
</kw>
<status status="PASS" starttime="20220516 18:10:01.200" endtime="20220516 18:10:01.311"/>
</kw>
<status status="PASS" starttime="20220516 18:10:01.199" endtime="20220516 18:10:01.311"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>10</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220516 18:10:01.311" level="INFO">${random} = qbBSgro8cH</msg>
<status status="PASS" starttime="20220516 18:10:01.311" endtime="20220516 18:10:01.311"/>
</kw>
<kw name="Freon OCKG" library="freon">
<arg>prefix=${random}</arg>
<arg>args=--replication ONE --replication-type RATIS</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:10:01.317" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p qbBSgro8cH --replication ONE --replication-type RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:10:09.621" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:10:09.622" level="INFO">${output} = 2022-05-16 18:10:03,792 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-05-16 18:10:04,014 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220516 18:10:01.315" endtime="20220516 18:10:09.622"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:10:09.624" level="INFO">2022-05-16 18:10:03,792 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-05-16 18:10:04,014 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-05-16 18:10:04,014 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-05-16 18:10:04,224 [main] INFO freon.BaseFreonGenerator: Executing test with prefix qbBSgro8cH
2022-05-16 18:10:04,311 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-05-16 18:10:05,319 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-05-16 18:10:06,319 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-05-16 18:10:06,861 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-05-16 18:10:07,280 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-05-16 18:10:07,320 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-05-16 18:10:08,321 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-05-16 18:10:09,150 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=2161.338634, max=2161.338634, mean=2161.338634, stddev=0.0, median=2161.338634, p75=2161.338634, p95=2161.338634, p98=2161.338634, p99=2161.338634, p999=2161.338634, mean_rate=0.32841390292401557, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-05-16 18:10:09,151 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 5
2022-05-16 18:10:09,154 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-05-16 18:10:09,154 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20220516 18:10:09.622" endtime="20220516 18:10:09.624"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:10:09.625" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:10:09.624" endtime="20220516 18:10:09.625"/>
</kw>
<status status="PASS" starttime="20220516 18:10:01.314" endtime="20220516 18:10:09.625"/>
</kw>
<msg timestamp="20220516 18:10:09.625" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:10:01.313" endtime="20220516 18:10:09.626"/>
</kw>
<msg timestamp="20220516 18:10:09.627" level="INFO">${result} = 2022-05-16 18:10:03,792 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-05-16 18:10:04,014 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220516 18:10:01.313" endtime="20220516 18:10:09.627"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 18:10:09.627" endtime="20220516 18:10:09.628"/>
</kw>
<status status="PASS" starttime="20220516 18:10:01.312" endtime="20220516 18:10:09.628"/>
</kw>
<kw name="Freon OCKV" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:10:09.634" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p qbBSgro8cH  2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:10:17.824" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:10:17.824" level="INFO">${output} = 2022-05-16 18:10:12,131 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-05-16 18:10:12,317 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220516 18:10:09.632" endtime="20220516 18:10:17.824"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:10:17.826" level="INFO">2022-05-16 18:10:12,131 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-05-16 18:10:12,317 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-05-16 18:10:12,317 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-05-16 18:10:12,564 [main] INFO freon.BaseFreonGenerator: Executing test with prefix qbBSgro8cH
2022-05-16 18:10:12,681 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-05-16 18:10:13,688 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-05-16 18:10:14,688 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-05-16 18:10:15,067 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-05-16 18:10:15,688 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-05-16 18:10:16,689 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-05-16 18:10:17,448 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=61.055452, max=61.055452, mean=61.055452, stddev=0.0, median=61.055452, p75=61.055452, p95=61.055452, p98=61.055452, p99=61.055452, p999=61.055452, mean_rate=0.9420903656300662, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-05-16 18:10:17,449 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 5
2022-05-16 18:10:17,449 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-05-16 18:10:17,449 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20220516 18:10:17.825" endtime="20220516 18:10:17.827"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:10:17.828" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:10:17.827" endtime="20220516 18:10:17.828"/>
</kw>
<status status="PASS" starttime="20220516 18:10:09.631" endtime="20220516 18:10:17.829"/>
</kw>
<msg timestamp="20220516 18:10:17.829" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:10:09.631" endtime="20220516 18:10:17.830"/>
</kw>
<msg timestamp="20220516 18:10:17.831" level="INFO">${result} = 2022-05-16 18:10:12,131 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-05-16 18:10:12,317 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220516 18:10:09.630" endtime="20220516 18:10:17.831"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 18:10:17.831" endtime="20220516 18:10:17.832"/>
</kw>
<status status="PASS" starttime="20220516 18:10:09.628" endtime="20220516 18:10:17.833"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220516 18:10:01.193" endtime="20220516 18:10:17.833"/>
</test>
<doc>Smoketest for one datanode</doc>
<status status="PASS" starttime="20220516 18:10:01.181" endtime="20220516 18:10:17.834"/>
</suite>
<status status="PASS" starttime="20220516 17:48:58.223" endtime="20220516 18:10:17.840"/>
</suite>
<suite id="s1-s2" name="Security" source="/opt/hadoop/smoketest/security">
<suite id="s1-s2-s1" name="Admin-Cert" source="/opt/hadoop/smoketest/security/admin-cert.robot">
<kw name="Setup Test" type="SETUP">
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:10:24.589" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:10:24.598" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:10:24.598" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220516 18:10:24.579" endtime="20220516 18:10:24.598"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:10:24.599" level="INFO">scm</msg>
<status status="PASS" starttime="20220516 18:10:24.599" endtime="20220516 18:10:24.599"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:10:24.600" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:10:24.600" endtime="20220516 18:10:24.600"/>
</kw>
<status status="PASS" starttime="20220516 18:10:24.579" endtime="20220516 18:10:24.601"/>
</kw>
<msg timestamp="20220516 18:10:24.601" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:10:24.578" endtime="20220516 18:10:24.603"/>
</kw>
<msg timestamp="20220516 18:10:24.603" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220516 18:10:24.578" endtime="20220516 18:10:24.603"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220516 18:10:24.606" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220516 18:10:24.604" endtime="20220516 18:10:24.606"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:10:24.611" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:10:24.620" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:10:24.620" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:10:24.608" endtime="20220516 18:10:24.620"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:10:24.621" level="INFO"/>
<status status="PASS" starttime="20220516 18:10:24.620" endtime="20220516 18:10:24.622"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:10:24.622" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:10:24.622" endtime="20220516 18:10:24.622"/>
</kw>
<status status="PASS" starttime="20220516 18:10:24.608" endtime="20220516 18:10:24.623"/>
</kw>
<msg timestamp="20220516 18:10:24.623" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:10:24.607" endtime="20220516 18:10:24.623"/>
</kw>
<status status="PASS" starttime="20220516 18:10:24.607" endtime="20220516 18:10:24.624"/>
</kw>
<status status="PASS" starttime="20220516 18:10:24.606" endtime="20220516 18:10:24.624"/>
</kw>
<status status="PASS" starttime="20220516 18:10:24.577" endtime="20220516 18:10:24.624"/>
</kw>
<status status="PASS" starttime="20220516 18:10:24.577" endtime="20220516 18:10:24.624"/>
</kw>
<status status="PASS" starttime="20220516 18:10:24.577" endtime="20220516 18:10:24.624"/>
</kw>
<test id="s1-s2-s1-t1" name="List valid certificates">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin cert list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:10:24.630" level="INFO">Running command 'ozone admin cert list 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:10:28.616" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:10:28.617" level="INFO">${output} = Total 7 valid certificates: 
SerialNumber      Valid From                     Expiry                         Subject                                                                                    ...</msg>
<status status="PASS" starttime="20220516 18:10:24.628" endtime="20220516 18:10:28.617"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:10:28.618" level="INFO">Total 7 valid certificates: 
SerialNumber      Valid From                     Expiry                         Subject                                                                                                       
1                 Mon May 16 00:00:00 UTC 2022   Thu Jun 24 23:59:59 UTC 2027   O=CID-559d22f8-c7ac-432b-a52e-546d9f91ad97, OU=b19b32c8-898d-44cd-8ace-f4c0ed66b428, CN=scm@scm               
394612074321      Mon May 16 00:00:00 UTC 2022   Thu Jun 24 00:00:00 UTC 2027   O=CID-559d22f8-c7ac-432b-a52e-546d9f91ad97, OU=b19b32c8-898d-44cd-8ace-f4c0ed66b428, CN=scm-sub@scm           
404037465079      Mon May 16 00:00:00 UTC 2022   Tue May 16 00:00:00 UTC 2023   O=CID-559d22f8-c7ac-432b-a52e-546d9f91ad97, OU=b19b32c8-898d-44cd-8ace-f4c0ed66b428, CN=root@6a062f08a58f     
404378222857      Mon May 16 00:00:00 UTC 2022   Tue May 16 00:00:00 UTC 2023   O=CID-559d22f8-c7ac-432b-a52e-546d9f91ad97, OU=b19b32c8-898d-44cd-8ace-f4c0ed66b428, CN=root@085af1fd76cd     
404562931724      Mon May 16 00:00:00 UTC 2022   Tue May 16 00:00:00 UTC 2023   O=CID-559d22f8-c7ac-432b-a52e-546d9f91ad97, OU=b19b32c8-898d-44cd-8ace-f4c0ed66b428, CN=root@d07524d8b777     
404832637960      Mon May 16 00:00:00 UTC 2022   Tue May 16 00:00:00 UTC 2023   O=CID-559d22f8-c7ac-432b-a52e-546d9f91ad97, OU=b19b32c8-898d-44cd-8ace-f4c0ed66b428, CN=root@recon            
412233052502      Mon May 16 00:00:00 UTC 2022   Tue May 16 00:00:00 UTC 2023   O=CID-559d22f8-c7ac-432b-a52e-546d9f91ad97, OU=b19b32c8-898d-44cd-8ace-f4c0ed66b428, CN=om                    </msg>
<status status="PASS" starttime="20220516 18:10:28.617" endtime="20220516 18:10:28.618"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:10:28.620" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:10:28.619" endtime="20220516 18:10:28.620"/>
</kw>
<status status="PASS" starttime="20220516 18:10:24.627" endtime="20220516 18:10:28.620"/>
</kw>
<msg timestamp="20220516 18:10:28.620" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:10:24.627" endtime="20220516 18:10:28.621"/>
</kw>
<msg timestamp="20220516 18:10:28.621" level="INFO">${output} = Total 7 valid certificates: 
SerialNumber      Valid From                     Expiry                         Subject                                                                                    ...</msg>
<status status="PASS" starttime="20220516 18:10:24.626" endtime="20220516 18:10:28.622"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>valid certificates</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 18:10:28.622" endtime="20220516 18:10:28.622"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220516 18:10:24.625" endtime="20220516 18:10:28.623"/>
</test>
<test id="s1-s2-s1-t2" name="List revoked certificates">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin cert list -t revoked</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:10:28.629" level="INFO">Running command 'ozone admin cert list -t revoked 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:10:32.629" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:10:32.629" level="INFO">${output} = Total 0 revoked certificates: 
SerialNumber      Valid From                     Expiry                         Subject                                                                                  ...</msg>
<status status="PASS" starttime="20220516 18:10:28.627" endtime="20220516 18:10:32.629"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:10:32.631" level="INFO">Total 0 revoked certificates: 
SerialNumber      Valid From                     Expiry                         Subject                                                                                                       </msg>
<status status="PASS" starttime="20220516 18:10:32.630" endtime="20220516 18:10:32.631"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:10:32.632" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:10:32.631" endtime="20220516 18:10:32.632"/>
</kw>
<status status="PASS" starttime="20220516 18:10:28.626" endtime="20220516 18:10:32.632"/>
</kw>
<msg timestamp="20220516 18:10:32.632" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:10:28.626" endtime="20220516 18:10:32.633"/>
</kw>
<msg timestamp="20220516 18:10:32.633" level="INFO">${output} = Total 0 revoked certificates: 
SerialNumber      Valid From                     Expiry                         Subject                                                                                  ...</msg>
<status status="PASS" starttime="20220516 18:10:28.625" endtime="20220516 18:10:32.633"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Total 0 revoked certificates</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 18:10:32.634" endtime="20220516 18:10:32.634"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220516 18:10:28.624" endtime="20220516 18:10:32.634"/>
</test>
<test id="s1-s2-s1-t3" name="Info of the cert">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>for id in $(ozone admin cert list -c 1|grep UTC|awk '{print $1}'); do ozone admin cert info $id; done</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:10:32.641" level="INFO">Running command 'for id in $(ozone admin cert list -c 1|grep UTC|awk '{print $1}'); do ozone admin cert info $id; done 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:10:41.051" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:10:41.051" level="INFO">${output} = Certificate id: 1
[
[
  Version: V3
  Subject: O=CID-559d22f8-c7ac-432b-a52e-546d9f91ad97, OU=b19b32c8-898d-44cd-8ace-f4c0ed66b428, CN=scm@scm
  Signature Algorithm: SHA256withRSA, OID = 1.2.840.11354...</msg>
<status status="PASS" starttime="20220516 18:10:32.638" endtime="20220516 18:10:41.051"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:10:41.053" level="INFO">Certificate id: 1
[
[
  Version: V3
  Subject: O=CID-559d22f8-c7ac-432b-a52e-546d9f91ad97, OU=b19b32c8-898d-44cd-8ace-f4c0ed66b428, CN=scm@scm
  Signature Algorithm: SHA256withRSA, OID = 1.2.840.113549.1.1.11

  Key:  Sun RSA public key, 2048 bits
  params: null
  modulus: 28579617843345254797620959777315717303128570781980321678992800351894579927043302560035326665975114586843776291792698503506168040463557732520385028457171853691835303892887858459917386350744646991953747411211467625331860510589197349058377163473477652930744038802587985109462649044099871628548118389299003970965629784929406085833207536270214997616115563721226350084188477430391714749391659142862575733862629174864058341449393618897584226026787079437676940461652782249275902315945175719628167414027366917205501692251269663261635830366237777152647613335735011488607713673284831066719081086834192120711295727822938583601241
  public exponent: 65537
  Validity: [From: Mon May 16 00:00:00 UTC 2022,
               To: Thu Jun 24 23:59:59 UTC 2027]
  Issuer: O=CID-559d22f8-c7ac-432b-a52e-546d9f91ad97, OU=b19b32c8-898d-44cd-8ace-f4c0ed66b428, CN=scm@scm
  SerialNumber: [    01]

Certificate Extensions: 3
[1]: ObjectId: 2.5.29.19 Criticality=true
BasicConstraints:[
  CA:true
  PathLen:2147483647
]

[2]: ObjectId: 2.5.29.15 Criticality=true
KeyUsage [
  Key_CertSign
  Crl_Sign
]

[3]: ObjectId: 2.5.29.17 Criticality=false
SubjectAlternativeName [
  IPAddress: 172.18.0.4
]

]
  Algorithm: [SHA256withRSA]
  Signature:
0000: 6E E9 38 D9 3E 08 1A C7   B1 79 94 8C FA E7 AC 8E  n.8.&gt;....y......
0010: 5A 23 12 8B 7B 98 D5 3D   F0 77 7C 80 19 0C 8D 69  Z#.....=.w.....i
0020: 03 21 AB C3 D6 35 5C 2D   6E F8 FB C4 89 E8 C9 DF  .!...5\-n.......
0030: 4D 67 32 4C 9C 09 D8 C9   62 11 82 AC 2B CF 0A 1F  Mg2L....b...+...
0040: 8F 34 33 3A FE 73 A5 A8   2A AD 5F 0A D5 3C 85 4D  .43:.s..*._..&lt;.M
0050: 5A 87 1E F0 E1 04 7E BF   1B 0B 47 1E 4F FB 05 7F  Z.........G.O...
0060: D6 C8 50 C3 7D B3 72 7B   54 23 67 62 69 17 AF C6  ..P...r.T#gbi...
0070: F7 E2 79 E1 48 36 96 B9   5D 1F E1 F1 AE 11 E3 4D  ..y.H6..]......M
0080: C2 04 F7 68 1E C1 62 DE   29 EC 57 FB 17 BC 9E 1A  ...h..b.).W.....
0090: 59 D1 96 81 BF 5E 43 98   3D D0 1D 97 E4 3A E1 72  Y....^C.=....:.r
00A0: 9F B0 63 30 0A 35 1B 8F   0D C7 39 E5 1C 28 15 EC  ..c0.5....9..(..
00B0: EE 2F A4 F6 C8 C9 B5 76   9D 5C 25 67 F8 9F E6 32  ./.....v.\%g...2
00C0: 34 C5 07 6F BB 19 3F D7   49 17 C9 D0 C7 2D 8E 5C  4..o..?.I....-.\
00D0: 3C 07 2B 4B DA 11 4A 4A   56 94 FE EE F1 51 E9 94  &lt;.+K..JJV....Q..
00E0: 5A 51 30 EA 11 7E 74 F1   AB 62 10 A7 8C 88 87 3E  ZQ0...t..b.....&gt;
00F0: 8C 97 40 C9 0B D7 B5 62   5C EE 90 5D 7B 99 9E 56  ..@....b\..]...V

]</msg>
<status status="PASS" starttime="20220516 18:10:41.052" endtime="20220516 18:10:41.053"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:10:41.054" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:10:41.053" endtime="20220516 18:10:41.054"/>
</kw>
<status status="PASS" starttime="20220516 18:10:32.637" endtime="20220516 18:10:41.055"/>
</kw>
<msg timestamp="20220516 18:10:41.055" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:10:32.637" endtime="20220516 18:10:41.055"/>
</kw>
<msg timestamp="20220516 18:10:41.056" level="INFO">${output} = Certificate id: 1
[
[
  Version: V3
  Subject: O=CID-559d22f8-c7ac-432b-a52e-546d9f91ad97, OU=b19b32c8-898d-44cd-8ace-f4c0ed66b428, CN=scm@scm
  Signature Algorithm: SHA256withRSA, OID = 1.2.840.11354...</msg>
<status status="PASS" starttime="20220516 18:10:32.636" endtime="20220516 18:10:41.056"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Certificate not found</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 18:10:41.056" endtime="20220516 18:10:41.056"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220516 18:10:32.635" endtime="20220516 18:10:41.057"/>
</test>
<doc>Test for ozone admin cert command</doc>
<status status="PASS" starttime="20220516 18:10:24.521" endtime="20220516 18:10:41.059"/>
</suite>
<suite id="s1-s2-s2" name="Bucket-Encryption" source="/opt/hadoop/smoketest/security/bucket-encryption.robot">
<kw name="Setup Test" type="SETUP">
<kw name="Create Random Volume" library="shell">
<var>${volume}</var>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220516 18:10:41.076" level="INFO">${random} = ezizc</msg>
<status status="PASS" starttime="20220516 18:10:41.075" endtime="20220516 18:10:41.076"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create o3://${OM_SERVICE_ID}/vol-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:10:41.080" level="INFO">Running command 'ozone sh volume create o3://om/vol-ezizc 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:10:45.818" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:10:45.819" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:10:41.077" endtime="20220516 18:10:45.819"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:10:45.820" level="INFO"/>
<status status="PASS" starttime="20220516 18:10:45.819" endtime="20220516 18:10:45.820"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:10:45.821" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:10:45.820" endtime="20220516 18:10:45.821"/>
</kw>
<status status="PASS" starttime="20220516 18:10:41.077" endtime="20220516 18:10:45.821"/>
</kw>
<msg timestamp="20220516 18:10:45.821" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:10:41.077" endtime="20220516 18:10:45.822"/>
</kw>
<status status="PASS" starttime="20220516 18:10:41.076" endtime="20220516 18:10:45.822"/>
</kw>
<msg timestamp="20220516 18:10:45.823" level="INFO">${volume} = vol-ezizc</msg>
<status status="PASS" starttime="20220516 18:10:41.075" endtime="20220516 18:10:45.823"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${VOLUME}</arg>
<arg>${volume}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220516 18:10:45.824" level="INFO">${VOLUME} = vol-ezizc</msg>
<status status="PASS" starttime="20220516 18:10:45.823" endtime="20220516 18:10:45.824"/>
</kw>
<status status="PASS" starttime="20220516 18:10:41.074" endtime="20220516 18:10:45.824"/>
</kw>
<test id="s1-s2-s2-t1" name="Create Encrypted Bucket">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create -k ${KEY_NAME} o3://${OM_SERVICE_ID}/${VOLUME}/encrypted-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:10:45.829" level="INFO">Running command 'ozone sh bucket create -k key1 o3://om/vol-ezizc/encrypted-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:10:50.833" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:10:50.833" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:10:45.827" endtime="20220516 18:10:50.833"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:10:50.835" level="INFO"/>
<status status="PASS" starttime="20220516 18:10:50.834" endtime="20220516 18:10:50.835"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:10:50.838" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:10:50.837" endtime="20220516 18:10:50.838"/>
</kw>
<status status="PASS" starttime="20220516 18:10:45.826" endtime="20220516 18:10:50.838"/>
</kw>
<msg timestamp="20220516 18:10:50.838" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:10:45.826" endtime="20220516 18:10:50.839"/>
</kw>
<msg timestamp="20220516 18:10:50.839" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:10:45.825" endtime="20220516 18:10:50.839"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>INVALID_REQUEST</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 18:10:50.840" endtime="20220516 18:10:50.840"/>
</kw>
<kw name="Bucket Exists" library="shell">
<arg>o3://${OM_SERVICE_ID}/${VOLUME}/encrypted-bucket</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:10:50.843" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://om/vol-ezizc/encrypted-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:10:55.953" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:10:55.953" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "vol-ezizc",
  "name" : "encrypted-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-...</msg>
<status status="PASS" starttime="20220516 18:10:50.841" endtime="20220516 18:10:55.953"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20220516 18:10:55.954" endtime="20220516 18:10:55.955"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'VOLUME_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20220516 18:10:55.955" endtime="20220516 18:10:55.955"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'BUCKET_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20220516 18:10:55.955" endtime="20220516 18:10:55.956"/>
</kw>
<status status="PASS" starttime="20220516 18:10:50.840" endtime="20220516 18:10:55.956"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220516 18:10:45.824" endtime="20220516 18:10:55.956"/>
</test>
<test id="s1-s2-s2-t2" name="Create Key in Encrypted Bucket">
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>o3://${OM_SERVICE_ID}/${VOLUME}/encrypted-bucket/passwd</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220516 18:10:55.960" level="INFO">${key} = o3://om/vol-ezizc/encrypted-bucket/passwd</msg>
<status status="PASS" starttime="20220516 18:10:55.959" endtime="20220516 18:10:55.960"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put ${key} /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:10:55.966" level="INFO">Running command 'ozone sh key put o3://om/vol-ezizc/encrypted-bucket/passwd /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:11:06.807" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:11:06.807" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:10:55.963" endtime="20220516 18:11:06.807"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:11:06.808" level="INFO"/>
<status status="PASS" starttime="20220516 18:11:06.807" endtime="20220516 18:11:06.809"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:11:06.809" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:11:06.809" endtime="20220516 18:11:06.810"/>
</kw>
<status status="PASS" starttime="20220516 18:10:55.963" endtime="20220516 18:11:06.810"/>
</kw>
<msg timestamp="20220516 18:11:06.810" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:10:55.962" endtime="20220516 18:11:06.811"/>
</kw>
<msg timestamp="20220516 18:11:06.811" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:10:55.960" endtime="20220516 18:11:06.811"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${key}</arg>
<arg>/etc/passwd</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220516 18:11:06.813" level="INFO">${postfix} = 18003</msg>
<status status="PASS" starttime="20220516 18:11:06.813" endtime="20220516 18:11:06.813"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220516 18:11:06.814" level="INFO">${tmpfile} = /tmp/tempkey-18003</msg>
<status status="PASS" starttime="20220516 18:11:06.814" endtime="20220516 18:11:06.814"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:11:06.820" level="INFO">Running command 'ozone sh key get o3://om/vol-ezizc/encrypted-bucket/passwd /tmp/tempkey-18003 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:11:14.147" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:11:14.147" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:11:06.816" endtime="20220516 18:11:14.147"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:11:14.148" level="INFO"/>
<status status="PASS" starttime="20220516 18:11:14.148" endtime="20220516 18:11:14.149"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:11:14.149" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:11:14.149" endtime="20220516 18:11:14.150"/>
</kw>
<status status="PASS" starttime="20220516 18:11:06.815" endtime="20220516 18:11:14.150"/>
</kw>
<msg timestamp="20220516 18:11:14.150" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:11:06.815" endtime="20220516 18:11:14.151"/>
</kw>
<status status="PASS" starttime="20220516 18:11:06.814" endtime="20220516 18:11:14.151"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20220516 18:11:14.154" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-18003 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:11:14.157" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20220516 18:11:14.152" endtime="20220516 18:11:14.157"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:11:14.163" level="INFO">Running command 'rm -f /tmp/tempkey-18003 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:11:14.166" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:11:14.166" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:11:14.160" endtime="20220516 18:11:14.166"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:11:14.168" level="INFO"/>
<status status="PASS" starttime="20220516 18:11:14.167" endtime="20220516 18:11:14.168"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:11:14.169" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:11:14.168" endtime="20220516 18:11:14.169"/>
</kw>
<status status="PASS" starttime="20220516 18:11:14.160" endtime="20220516 18:11:14.169"/>
</kw>
<msg timestamp="20220516 18:11:14.169" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:11:14.159" endtime="20220516 18:11:14.170"/>
</kw>
<status status="PASS" starttime="20220516 18:11:14.158" endtime="20220516 18:11:14.170"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220516 18:11:14.171" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20220516 18:11:14.171" endtime="20220516 18:11:14.171"/>
</kw>
<msg timestamp="20220516 18:11:14.172" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20220516 18:11:06.812" endtime="20220516 18:11:14.172"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220516 18:11:14.172" endtime="20220516 18:11:14.173"/>
</kw>
<status status="PASS" starttime="20220516 18:11:06.811" endtime="20220516 18:11:14.173"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220516 18:10:55.958" endtime="20220516 18:11:14.173"/>
</test>
<doc>Test for bucket encryption</doc>
<status status="PASS" starttime="20220516 18:10:41.062" endtime="20220516 18:11:14.174"/>
</suite>
<suite id="s1-s2-s3" name="Ozone-Secure-Fs" source="/opt/hadoop/smoketest/security/ozone-secure-fs.robot">
<test id="s1-s2-s3-t1" name="Create volume bucket with wrong credentials">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:11:14.190" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:11:14.194" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:11:14.194" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:11:14.188" endtime="20220516 18:11:14.194"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:11:14.195" level="INFO"/>
<status status="PASS" starttime="20220516 18:11:14.195" endtime="20220516 18:11:14.195"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:11:14.196" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:11:14.196" endtime="20220516 18:11:14.196"/>
</kw>
<status status="PASS" starttime="20220516 18:11:14.187" endtime="20220516 18:11:14.197"/>
</kw>
<msg timestamp="20220516 18:11:14.197" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:11:14.187" endtime="20220516 18:11:14.197"/>
</kw>
<status status="PASS" starttime="20220516 18:11:14.186" endtime="20220516 18:11:14.198"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>ozone sh volume create o3://om/fstest</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:11:14.203" level="INFO">Running command 'ozone sh volume create o3://om/fstest 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:11:17.957" level="INFO">${rc} = 255</msg>
<msg timestamp="20220516 18:11:17.958" level="INFO">${output} = org.apache.hadoop.security.AccessControlException: Client cannot authenticate via:[TOKEN, KERBEROS]</msg>
<status status="PASS" starttime="20220516 18:11:14.198" endtime="20220516 18:11:17.958"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Client cannot authenticate via</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 18:11:17.958" endtime="20220516 18:11:17.959"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220516 18:11:14.186" endtime="20220516 18:11:17.959"/>
</test>
<test id="s1-s2-s3-t2" name="Create volume with non-admin user">
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:11:17.967" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:11:17.972" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:11:17.972" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220516 18:11:17.965" endtime="20220516 18:11:17.972"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:11:17.973" level="INFO">scm</msg>
<status status="PASS" starttime="20220516 18:11:17.972" endtime="20220516 18:11:17.973"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:11:17.974" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:11:17.973" endtime="20220516 18:11:17.974"/>
</kw>
<status status="PASS" starttime="20220516 18:11:17.964" endtime="20220516 18:11:17.975"/>
</kw>
<msg timestamp="20220516 18:11:17.975" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:11:17.964" endtime="20220516 18:11:17.976"/>
</kw>
<msg timestamp="20220516 18:11:17.976" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220516 18:11:17.963" endtime="20220516 18:11:17.976"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220516 18:11:17.978" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220516 18:11:17.976" endtime="20220516 18:11:17.978"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:11:17.985" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:11:17.993" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:11:17.993" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:11:17.981" endtime="20220516 18:11:17.993"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:11:17.994" level="INFO"/>
<status status="PASS" starttime="20220516 18:11:17.993" endtime="20220516 18:11:17.994"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:11:17.995" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:11:17.994" endtime="20220516 18:11:17.995"/>
</kw>
<status status="PASS" starttime="20220516 18:11:17.980" endtime="20220516 18:11:17.995"/>
</kw>
<msg timestamp="20220516 18:11:17.996" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:11:17.980" endtime="20220516 18:11:17.997"/>
</kw>
<status status="PASS" starttime="20220516 18:11:17.979" endtime="20220516 18:11:17.997"/>
</kw>
<status status="PASS" starttime="20220516 18:11:17.979" endtime="20220516 18:11:17.997"/>
</kw>
<status status="PASS" starttime="20220516 18:11:17.962" endtime="20220516 18:11:17.998"/>
</kw>
<status status="PASS" starttime="20220516 18:11:17.962" endtime="20220516 18:11:17.998"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>ozone sh volume create o3://om/fstest</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:11:18.000" level="INFO">Running command 'ozone sh volume create o3://om/fstest 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:11:22.676" level="INFO">${rc} = 255</msg>
<msg timestamp="20220516 18:11:22.676" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have CREATE permission to access volume Volume:fstest </msg>
<status status="PASS" starttime="20220516 18:11:17.998" endtime="20220516 18:11:22.676"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>doesn't have CREATE permission to access volume</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 18:11:22.677" endtime="20220516 18:11:22.678"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220516 18:11:17.961" endtime="20220516 18:11:22.678"/>
</test>
<test id="s1-s2-s3-t3" name="Create bucket with non-admin owner(testuser2)">
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:11:22.686" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:11:22.690" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:11:22.690" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220516 18:11:22.683" endtime="20220516 18:11:22.690"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:11:22.692" level="INFO">scm</msg>
<status status="PASS" starttime="20220516 18:11:22.691" endtime="20220516 18:11:22.692"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:11:22.693" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:11:22.692" endtime="20220516 18:11:22.693"/>
</kw>
<status status="PASS" starttime="20220516 18:11:22.682" endtime="20220516 18:11:22.693"/>
</kw>
<msg timestamp="20220516 18:11:22.693" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:11:22.682" endtime="20220516 18:11:22.694"/>
</kw>
<msg timestamp="20220516 18:11:22.694" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220516 18:11:22.681" endtime="20220516 18:11:22.694"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220516 18:11:22.695" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220516 18:11:22.695" endtime="20220516 18:11:22.695"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:11:22.700" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:11:22.709" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:11:22.709" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:11:22.698" endtime="20220516 18:11:22.709"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:11:22.711" level="INFO"/>
<status status="PASS" starttime="20220516 18:11:22.709" endtime="20220516 18:11:22.712"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:11:22.712" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:11:22.712" endtime="20220516 18:11:22.713"/>
</kw>
<status status="PASS" starttime="20220516 18:11:22.698" endtime="20220516 18:11:22.713"/>
</kw>
<msg timestamp="20220516 18:11:22.713" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:11:22.697" endtime="20220516 18:11:22.714"/>
</kw>
<status status="PASS" starttime="20220516 18:11:22.696" endtime="20220516 18:11:22.714"/>
</kw>
<status status="PASS" starttime="20220516 18:11:22.696" endtime="20220516 18:11:22.714"/>
</kw>
<status status="PASS" starttime="20220516 18:11:22.681" endtime="20220516 18:11:22.715"/>
</kw>
<status status="PASS" starttime="20220516 18:11:22.680" endtime="20220516 18:11:22.715"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup volume names</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup volume names">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>2</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220516 18:11:22.716" level="INFO">${random} = 42</msg>
<status status="PASS" starttime="20220516 18:11:22.716" endtime="20220516 18:11:22.716"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume1}</arg>
<arg>fstest${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220516 18:11:22.718" level="INFO">${volume1} = fstest42</msg>
<status status="PASS" starttime="20220516 18:11:22.717" endtime="20220516 18:11:22.719"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume2}</arg>
<arg>fstest2${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220516 18:11:22.721" level="INFO">${volume2} = fstest242</msg>
<status status="PASS" starttime="20220516 18:11:22.719" endtime="20220516 18:11:22.721"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume3}</arg>
<arg>fstest3${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220516 18:11:22.723" level="INFO">${volume3} = fstest342</msg>
<status status="PASS" starttime="20220516 18:11:22.721" endtime="20220516 18:11:22.723"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume4}</arg>
<arg>fstest4${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220516 18:11:22.726" level="INFO">${volume4} = fstest442</msg>
<status status="PASS" starttime="20220516 18:11:22.724" endtime="20220516 18:11:22.726"/>
</kw>
<status status="PASS" starttime="20220516 18:11:22.715" endtime="20220516 18:11:22.726"/>
</kw>
<status status="PASS" starttime="20220516 18:11:22.715" endtime="20220516 18:11:22.726"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create o3://om/${volume4} -u testuser2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:11:22.731" level="INFO">Running command 'ozone sh volume create o3://om/fstest442 -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:11:27.530" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:11:27.530" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:11:22.728" endtime="20220516 18:11:27.530"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:11:27.531" level="INFO"/>
<status status="PASS" starttime="20220516 18:11:27.531" endtime="20220516 18:11:27.532"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:11:27.532" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:11:27.532" endtime="20220516 18:11:27.532"/>
</kw>
<status status="PASS" starttime="20220516 18:11:22.727" endtime="20220516 18:11:27.533"/>
</kw>
<msg timestamp="20220516 18:11:27.533" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:11:22.727" endtime="20220516 18:11:27.534"/>
</kw>
<status status="PASS" starttime="20220516 18:11:22.726" endtime="20220516 18:11:27.534"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:11:27.539" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:11:27.544" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:11:27.544" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220516 18:11:27.537" endtime="20220516 18:11:27.544"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:11:27.545" level="INFO">scm</msg>
<status status="PASS" starttime="20220516 18:11:27.545" endtime="20220516 18:11:27.546"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:11:27.546" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:11:27.546" endtime="20220516 18:11:27.546"/>
</kw>
<status status="PASS" starttime="20220516 18:11:27.536" endtime="20220516 18:11:27.547"/>
</kw>
<msg timestamp="20220516 18:11:27.547" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:11:27.536" endtime="20220516 18:11:27.548"/>
</kw>
<msg timestamp="20220516 18:11:27.548" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220516 18:11:27.535" endtime="20220516 18:11:27.548"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220516 18:11:27.549" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220516 18:11:27.548" endtime="20220516 18:11:27.549"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:11:27.555" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:11:27.563" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:11:27.563" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:11:27.552" endtime="20220516 18:11:27.563"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:11:27.564" level="INFO"/>
<status status="PASS" starttime="20220516 18:11:27.563" endtime="20220516 18:11:27.564"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:11:27.565" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:11:27.564" endtime="20220516 18:11:27.565"/>
</kw>
<status status="PASS" starttime="20220516 18:11:27.551" endtime="20220516 18:11:27.566"/>
</kw>
<msg timestamp="20220516 18:11:27.566" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:11:27.551" endtime="20220516 18:11:27.566"/>
</kw>
<status status="PASS" starttime="20220516 18:11:27.550" endtime="20220516 18:11:27.567"/>
</kw>
<status status="PASS" starttime="20220516 18:11:27.549" endtime="20220516 18:11:27.567"/>
</kw>
<status status="PASS" starttime="20220516 18:11:27.535" endtime="20220516 18:11:27.567"/>
</kw>
<status status="PASS" starttime="20220516 18:11:27.534" endtime="20220516 18:11:27.567"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create o3://om/${volume4}/bucket1 --layout FILE_SYSTEM_OPTIMIZED</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:11:27.571" level="INFO">Running command 'ozone sh bucket create o3://om/fstest442/bucket1 --layout FILE_SYSTEM_OPTIMIZED 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:11:32.141" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:11:32.141" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:11:27.569" endtime="20220516 18:11:32.141"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:11:32.143" level="INFO"/>
<status status="PASS" starttime="20220516 18:11:32.142" endtime="20220516 18:11:32.143"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:11:32.144" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:11:32.143" endtime="20220516 18:11:32.144"/>
</kw>
<status status="PASS" starttime="20220516 18:11:27.568" endtime="20220516 18:11:32.144"/>
</kw>
<msg timestamp="20220516 18:11:32.144" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:11:27.568" endtime="20220516 18:11:32.145"/>
</kw>
<msg timestamp="20220516 18:11:32.145" level="INFO">${result} = </msg>
<status status="PASS" starttime="20220516 18:11:27.567" endtime="20220516 18:11:32.145"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 18:11:32.146" endtime="20220516 18:11:32.146"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put ${volume4}/bucket1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:11:32.150" level="INFO">Running command 'ozone sh key put fstest442/bucket1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:11:42.185" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:11:42.185" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:11:32.148" endtime="20220516 18:11:42.185"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:11:42.186" level="INFO"/>
<status status="PASS" starttime="20220516 18:11:42.186" endtime="20220516 18:11:42.187"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:11:42.187" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:11:42.187" endtime="20220516 18:11:42.188"/>
</kw>
<status status="PASS" starttime="20220516 18:11:32.147" endtime="20220516 18:11:42.189"/>
</kw>
<msg timestamp="20220516 18:11:42.189" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:11:32.147" endtime="20220516 18:11:42.190"/>
</kw>
<msg timestamp="20220516 18:11:42.190" level="INFO">${result} = </msg>
<status status="PASS" starttime="20220516 18:11:32.146" endtime="20220516 18:11:42.190"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 18:11:42.191" endtime="20220516 18:11:42.191"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${volume4}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:11:42.196" level="INFO">Running command 'ozone sh key list fstest442/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:11:47.524" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:11:47.525" level="INFO">${output} = [ {
  "volumeName" : "fstest442",
  "bucketName" : "bucket1",
  "name" : "key1",
  "dataSize" : 17526,
  "creationTime" : "2022-05-16T18:11:36.555Z",
  "modificationTime" : "2022-05-16T18:11:41.518Z",...</msg>
<status status="PASS" starttime="20220516 18:11:42.194" endtime="20220516 18:11:47.525"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:11:47.526" level="INFO">[ {
  "volumeName" : "fstest442",
  "bucketName" : "bucket1",
  "name" : "key1",
  "dataSize" : 17526,
  "creationTime" : "2022-05-16T18:11:36.555Z",
  "modificationTime" : "2022-05-16T18:11:41.518Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  }
} ]</msg>
<status status="PASS" starttime="20220516 18:11:47.525" endtime="20220516 18:11:47.526"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:11:47.527" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:11:47.527" endtime="20220516 18:11:47.527"/>
</kw>
<status status="PASS" starttime="20220516 18:11:42.193" endtime="20220516 18:11:47.528"/>
</kw>
<msg timestamp="20220516 18:11:47.528" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:11:42.192" endtime="20220516 18:11:47.528"/>
</kw>
<msg timestamp="20220516 18:11:47.529" level="INFO">${result} = [ {
  "volumeName" : "fstest442",
  "bucketName" : "bucket1",
  "name" : "key1",
  "dataSize" : 17526,
  "creationTime" : "2022-05-16T18:11:36.555Z",
  "modificationTime" : "2022-05-16T18:11:41.518Z",...</msg>
<status status="PASS" starttime="20220516 18:11:42.191" endtime="20220516 18:11:47.529"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 18:11:47.529" endtime="20220516 18:11:47.529"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key delete ${volume4}/bucket1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:11:47.533" level="INFO">Running command 'ozone sh key delete fstest442/bucket1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:11:52.283" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:11:52.283" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:11:47.531" endtime="20220516 18:11:52.283"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:11:52.285" level="INFO"/>
<status status="PASS" starttime="20220516 18:11:52.284" endtime="20220516 18:11:52.285"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:11:52.286" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:11:52.285" endtime="20220516 18:11:52.287"/>
</kw>
<status status="PASS" starttime="20220516 18:11:47.531" endtime="20220516 18:11:52.287"/>
</kw>
<msg timestamp="20220516 18:11:52.287" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:11:47.530" endtime="20220516 18:11:52.288"/>
</kw>
<msg timestamp="20220516 18:11:52.288" level="INFO">${result} = </msg>
<status status="PASS" starttime="20220516 18:11:47.530" endtime="20220516 18:11:52.288"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 18:11:52.288" endtime="20220516 18:11:52.289"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket delete ${volume4}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:11:52.293" level="INFO">Running command 'ozone sh bucket delete fstest442/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:11:56.724" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:11:56.724" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:11:52.291" endtime="20220516 18:11:56.724"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:11:56.726" level="INFO"/>
<status status="PASS" starttime="20220516 18:11:56.725" endtime="20220516 18:11:56.726"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:11:56.727" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:11:56.726" endtime="20220516 18:11:56.727"/>
</kw>
<status status="PASS" starttime="20220516 18:11:52.290" endtime="20220516 18:11:56.727"/>
</kw>
<msg timestamp="20220516 18:11:56.727" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:11:52.290" endtime="20220516 18:11:56.728"/>
</kw>
<msg timestamp="20220516 18:11:56.728" level="INFO">${result} = </msg>
<status status="PASS" starttime="20220516 18:11:52.289" endtime="20220516 18:11:56.728"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 18:11:56.728" endtime="20220516 18:11:56.729"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220516 18:11:22.679" endtime="20220516 18:11:56.729"/>
</test>
<test id="s1-s2-s3-t4" name="Create volume bucket with credentials">
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:11:56.737" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:11:56.740" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:11:56.741" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220516 18:11:56.735" endtime="20220516 18:11:56.741"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:11:56.743" level="INFO">scm</msg>
<status status="PASS" starttime="20220516 18:11:56.741" endtime="20220516 18:11:56.743"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:11:56.745" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:11:56.744" endtime="20220516 18:11:56.745"/>
</kw>
<status status="PASS" starttime="20220516 18:11:56.734" endtime="20220516 18:11:56.745"/>
</kw>
<msg timestamp="20220516 18:11:56.746" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:11:56.733" endtime="20220516 18:11:56.747"/>
</kw>
<msg timestamp="20220516 18:11:56.748" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220516 18:11:56.733" endtime="20220516 18:11:56.748"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220516 18:11:56.749" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220516 18:11:56.748" endtime="20220516 18:11:56.749"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:11:56.753" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:11:56.767" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:11:56.767" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:11:56.751" endtime="20220516 18:11:56.767"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:11:56.769" level="INFO"/>
<status status="PASS" starttime="20220516 18:11:56.767" endtime="20220516 18:11:56.769"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:11:56.770" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:11:56.769" endtime="20220516 18:11:56.770"/>
</kw>
<status status="PASS" starttime="20220516 18:11:56.751" endtime="20220516 18:11:56.771"/>
</kw>
<msg timestamp="20220516 18:11:56.771" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:11:56.750" endtime="20220516 18:11:56.772"/>
</kw>
<status status="PASS" starttime="20220516 18:11:56.749" endtime="20220516 18:11:56.772"/>
</kw>
<status status="PASS" starttime="20220516 18:11:56.749" endtime="20220516 18:11:56.772"/>
</kw>
<status status="PASS" starttime="20220516 18:11:56.732" endtime="20220516 18:11:56.772"/>
</kw>
<status status="PASS" starttime="20220516 18:11:56.732" endtime="20220516 18:11:56.772"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup volume names</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup volume names">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>2</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220516 18:11:56.774" level="INFO">${random} = 18</msg>
<status status="PASS" starttime="20220516 18:11:56.774" endtime="20220516 18:11:56.774"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume1}</arg>
<arg>fstest${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220516 18:11:56.775" level="INFO">${volume1} = fstest18</msg>
<status status="PASS" starttime="20220516 18:11:56.775" endtime="20220516 18:11:56.775"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume2}</arg>
<arg>fstest2${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220516 18:11:56.776" level="INFO">${volume2} = fstest218</msg>
<status status="PASS" starttime="20220516 18:11:56.775" endtime="20220516 18:11:56.776"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume3}</arg>
<arg>fstest3${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220516 18:11:56.777" level="INFO">${volume3} = fstest318</msg>
<status status="PASS" starttime="20220516 18:11:56.776" endtime="20220516 18:11:56.777"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume4}</arg>
<arg>fstest4${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220516 18:11:56.777" level="INFO">${volume4} = fstest418</msg>
<status status="PASS" starttime="20220516 18:11:56.777" endtime="20220516 18:11:56.777"/>
</kw>
<status status="PASS" starttime="20220516 18:11:56.773" endtime="20220516 18:11:56.778"/>
</kw>
<status status="PASS" starttime="20220516 18:11:56.773" endtime="20220516 18:11:56.778"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create o3://om/${volume1}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:11:56.782" level="INFO">Running command 'ozone sh volume create o3://om/fstest18 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:12:01.495" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:12:01.495" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:11:56.780" endtime="20220516 18:12:01.495"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:12:01.497" level="INFO"/>
<status status="PASS" starttime="20220516 18:12:01.496" endtime="20220516 18:12:01.497"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:12:01.498" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:12:01.497" endtime="20220516 18:12:01.498"/>
</kw>
<status status="PASS" starttime="20220516 18:11:56.779" endtime="20220516 18:12:01.499"/>
</kw>
<msg timestamp="20220516 18:12:01.499" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:11:56.779" endtime="20220516 18:12:01.499"/>
</kw>
<status status="PASS" starttime="20220516 18:11:56.778" endtime="20220516 18:12:01.500"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create o3://om/${volume2}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:12:01.505" level="INFO">Running command 'ozone sh volume create o3://om/fstest218 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:12:06.677" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:12:06.677" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:12:01.502" endtime="20220516 18:12:06.678"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:12:06.679" level="INFO"/>
<status status="PASS" starttime="20220516 18:12:06.678" endtime="20220516 18:12:06.679"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:12:06.680" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:12:06.679" endtime="20220516 18:12:06.680"/>
</kw>
<status status="PASS" starttime="20220516 18:12:01.501" endtime="20220516 18:12:06.681"/>
</kw>
<msg timestamp="20220516 18:12:06.681" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:12:01.501" endtime="20220516 18:12:06.681"/>
</kw>
<status status="PASS" starttime="20220516 18:12:01.500" endtime="20220516 18:12:06.682"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create o3://om/${volume1}/bucket1 --layout FILE_SYSTEM_OPTIMIZED</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:12:06.687" level="INFO">Running command 'ozone sh bucket create o3://om/fstest18/bucket1 --layout FILE_SYSTEM_OPTIMIZED 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:12:11.457" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:12:11.457" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:12:06.684" endtime="20220516 18:12:11.457"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:12:11.459" level="INFO"/>
<status status="PASS" starttime="20220516 18:12:11.457" endtime="20220516 18:12:11.459"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:12:11.459" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:12:11.459" endtime="20220516 18:12:11.460"/>
</kw>
<status status="PASS" starttime="20220516 18:12:06.683" endtime="20220516 18:12:11.460"/>
</kw>
<msg timestamp="20220516 18:12:11.460" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:12:06.683" endtime="20220516 18:12:11.461"/>
</kw>
<status status="PASS" starttime="20220516 18:12:06.682" endtime="20220516 18:12:11.461"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create o3://om/${volume1}/bucket2 --layout FILE_SYSTEM_OPTIMIZED</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:12:11.465" level="INFO">Running command 'ozone sh bucket create o3://om/fstest18/bucket2 --layout FILE_SYSTEM_OPTIMIZED 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:12:16.217" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:12:16.217" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:12:11.463" endtime="20220516 18:12:16.217"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:12:16.219" level="INFO"/>
<status status="PASS" starttime="20220516 18:12:16.217" endtime="20220516 18:12:16.219"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:12:16.220" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:12:16.219" endtime="20220516 18:12:16.220"/>
</kw>
<status status="PASS" starttime="20220516 18:12:11.463" endtime="20220516 18:12:16.220"/>
</kw>
<msg timestamp="20220516 18:12:16.220" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:12:11.462" endtime="20220516 18:12:16.221"/>
</kw>
<status status="PASS" starttime="20220516 18:12:11.462" endtime="20220516 18:12:16.221"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create o3://om/${volume2}/bucket3 --layout FILE_SYSTEM_OPTIMIZED</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:12:16.226" level="INFO">Running command 'ozone sh bucket create o3://om/fstest218/bucket3 --layout FILE_SYSTEM_OPTIMIZED 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:12:21.136" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:12:21.136" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:12:16.223" endtime="20220516 18:12:21.137"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:12:21.138" level="INFO"/>
<status status="PASS" starttime="20220516 18:12:21.137" endtime="20220516 18:12:21.138"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:12:21.139" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:12:21.138" endtime="20220516 18:12:21.139"/>
</kw>
<status status="PASS" starttime="20220516 18:12:16.222" endtime="20220516 18:12:21.140"/>
</kw>
<msg timestamp="20220516 18:12:21.140" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:12:16.222" endtime="20220516 18:12:21.140"/>
</kw>
<status status="PASS" starttime="20220516 18:12:16.221" endtime="20220516 18:12:21.141"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220516 18:11:56.730" endtime="20220516 18:12:21.141"/>
</test>
<test id="s1-s2-s3-t5" name="Check volume from ozonefs">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls o3fs://bucket1.${volume1}/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:12:21.150" level="INFO">Running command 'ozone fs -ls o3fs://bucket1.fstest18/ 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:12:25.702" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:12:25.702" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:12:21.146" endtime="20220516 18:12:25.702"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:12:25.704" level="INFO"/>
<status status="PASS" starttime="20220516 18:12:25.703" endtime="20220516 18:12:25.704"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:12:25.705" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:12:25.704" endtime="20220516 18:12:25.705"/>
</kw>
<status status="PASS" starttime="20220516 18:12:21.145" endtime="20220516 18:12:25.705"/>
</kw>
<msg timestamp="20220516 18:12:25.705" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:12:21.145" endtime="20220516 18:12:25.706"/>
</kw>
<msg timestamp="20220516 18:12:25.706" level="INFO">${result} = </msg>
<status status="PASS" starttime="20220516 18:12:21.144" endtime="20220516 18:12:25.707"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220516 18:12:21.142" endtime="20220516 18:12:25.707"/>
</test>
<test id="s1-s2-s3-t6" name="Test Volume Acls">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${volume3}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:12:25.717" level="INFO">Running command 'ozone sh volume create fstest318 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:12:30.391" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:12:30.391" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:12:25.713" endtime="20220516 18:12:30.391"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:12:30.393" level="INFO"/>
<status status="PASS" starttime="20220516 18:12:30.392" endtime="20220516 18:12:30.393"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:12:30.394" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:12:30.393" endtime="20220516 18:12:30.394"/>
</kw>
<status status="PASS" starttime="20220516 18:12:25.712" endtime="20220516 18:12:30.394"/>
</kw>
<msg timestamp="20220516 18:12:30.394" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:12:25.712" endtime="20220516 18:12:30.395"/>
</kw>
<msg timestamp="20220516 18:12:30.395" level="INFO">${result} = </msg>
<status status="PASS" starttime="20220516 18:12:25.711" endtime="20220516 18:12:30.395"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 18:12:30.396" endtime="20220516 18:12:30.396"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${volume3}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:12:30.401" level="INFO">Running command 'ozone sh volume getacl fstest318 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:12:35.273" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:12:35.274" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20220516 18:12:30.399" endtime="20220516 18:12:35.274"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:12:35.275" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20220516 18:12:35.274" endtime="20220516 18:12:35.275"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:12:35.276" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:12:35.276" endtime="20220516 18:12:35.276"/>
</kw>
<status status="PASS" starttime="20220516 18:12:30.398" endtime="20220516 18:12:35.277"/>
</kw>
<msg timestamp="20220516 18:12:35.277" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:12:30.397" endtime="20220516 18:12:35.278"/>
</kw>
<msg timestamp="20220516 18:12:35.278" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20220516 18:12:30.397" endtime="20220516 18:12:35.278"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220516 18:12:35.278" endtime="20220516 18:12:35.279"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume addacl ${volume3} -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:12:35.284" level="INFO">Running command 'ozone sh volume addacl fstest318 -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:12:39.974" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:12:39.974" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20220516 18:12:35.282" endtime="20220516 18:12:39.974"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:12:39.976" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20220516 18:12:39.975" endtime="20220516 18:12:39.976"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:12:39.977" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:12:39.976" endtime="20220516 18:12:39.977"/>
</kw>
<status status="PASS" starttime="20220516 18:12:35.281" endtime="20220516 18:12:39.977"/>
</kw>
<msg timestamp="20220516 18:12:39.977" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:12:35.280" endtime="20220516 18:12:39.978"/>
</kw>
<msg timestamp="20220516 18:12:39.978" level="INFO">${result} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20220516 18:12:35.280" endtime="20220516 18:12:39.978"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${volume3}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:12:39.982" level="INFO">Running command 'ozone sh volume getacl fstest318 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:12:44.747" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:12:44.748" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20220516 18:12:39.980" endtime="20220516 18:12:44.748"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:12:44.749" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20220516 18:12:44.748" endtime="20220516 18:12:44.749"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:12:44.750" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:12:44.750" endtime="20220516 18:12:44.750"/>
</kw>
<status status="PASS" starttime="20220516 18:12:39.979" endtime="20220516 18:12:44.751"/>
</kw>
<msg timestamp="20220516 18:12:44.751" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:12:39.979" endtime="20220516 18:12:44.751"/>
</kw>
<msg timestamp="20220516 18:12:44.752" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20220516 18:12:39.978" endtime="20220516 18:12:44.752"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220516 18:12:44.752" endtime="20220516 18:12:44.753"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume removeacl ${volume3} -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:12:44.757" level="INFO">Running command 'ozone sh volume removeacl fstest318 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:12:49.662" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:12:49.662" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20220516 18:12:44.755" endtime="20220516 18:12:49.662"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:12:49.664" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20220516 18:12:49.663" endtime="20220516 18:12:49.664"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:12:49.665" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:12:49.664" endtime="20220516 18:12:49.665"/>
</kw>
<status status="PASS" starttime="20220516 18:12:44.754" endtime="20220516 18:12:49.666"/>
</kw>
<msg timestamp="20220516 18:12:49.666" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:12:44.754" endtime="20220516 18:12:49.666"/>
</kw>
<msg timestamp="20220516 18:12:49.667" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20220516 18:12:44.753" endtime="20220516 18:12:49.667"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${volume3}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:12:49.671" level="INFO">Running command 'ozone sh volume getacl fstest318 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:12:54.611" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:12:54.612" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20220516 18:12:49.669" endtime="20220516 18:12:54.612"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:12:54.613" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20220516 18:12:54.612" endtime="20220516 18:12:54.613"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:12:54.614" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:12:54.613" endtime="20220516 18:12:54.614"/>
</kw>
<status status="PASS" starttime="20220516 18:12:49.668" endtime="20220516 18:12:54.615"/>
</kw>
<msg timestamp="20220516 18:12:54.615" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:12:49.668" endtime="20220516 18:12:54.615"/>
</kw>
<msg timestamp="20220516 18:12:54.616" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20220516 18:12:49.667" endtime="20220516 18:12:54.616"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220516 18:12:54.616" endtime="20220516 18:12:54.617"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume setacl ${volume3} -al user:superuser1:rwxy,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:12:54.623" level="INFO">Running command 'ozone sh volume setacl fstest318 -al user:superuser1:rwxy,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:12:59.232" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:12:59.232" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20220516 18:12:54.619" endtime="20220516 18:12:59.232"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:12:59.233" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20220516 18:12:59.232" endtime="20220516 18:12:59.233"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:12:59.234" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:12:59.234" endtime="20220516 18:12:59.234"/>
</kw>
<status status="PASS" starttime="20220516 18:12:54.618" endtime="20220516 18:12:59.235"/>
</kw>
<msg timestamp="20220516 18:12:59.235" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:12:54.618" endtime="20220516 18:12:59.236"/>
</kw>
<msg timestamp="20220516 18:12:59.236" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20220516 18:12:54.617" endtime="20220516 18:12:59.236"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${volume3}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:12:59.240" level="INFO">Running command 'ozone sh volume getacl fstest318 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:13:04.305" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:13:04.305" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" starttime="20220516 18:12:59.238" endtime="20220516 18:13:04.305"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:13:04.307" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20220516 18:13:04.306" endtime="20220516 18:13:04.307"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:13:04.308" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:13:04.307" endtime="20220516 18:13:04.308"/>
</kw>
<status status="PASS" starttime="20220516 18:12:59.237" endtime="20220516 18:13:04.308"/>
</kw>
<msg timestamp="20220516 18:13:04.308" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:12:59.237" endtime="20220516 18:13:04.309"/>
</kw>
<msg timestamp="20220516 18:13:04.309" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" starttime="20220516 18:12:59.236" endtime="20220516 18:13:04.309"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220516 18:13:04.309" endtime="20220516 18:13:04.311"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220516 18:13:04.311" endtime="20220516 18:13:04.312"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220516 18:12:25.710" endtime="20220516 18:13:04.312"/>
</test>
<test id="s1-s2-s3-t7" name="Test Bucket Acls">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${volume3}/bk1 --layout FILE_SYSTEM_OPTIMIZED</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:13:04.319" level="INFO">Running command 'ozone sh bucket create fstest318/bk1 --layout FILE_SYSTEM_OPTIMIZED 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:13:08.780" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:13:08.780" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:13:04.316" endtime="20220516 18:13:08.780"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:13:08.782" level="INFO"/>
<status status="PASS" starttime="20220516 18:13:08.781" endtime="20220516 18:13:08.782"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:13:08.783" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:13:08.782" endtime="20220516 18:13:08.783"/>
</kw>
<status status="PASS" starttime="20220516 18:13:04.316" endtime="20220516 18:13:08.783"/>
</kw>
<msg timestamp="20220516 18:13:08.783" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:13:04.315" endtime="20220516 18:13:08.784"/>
</kw>
<msg timestamp="20220516 18:13:08.784" level="INFO">${result} = </msg>
<status status="PASS" starttime="20220516 18:13:04.315" endtime="20220516 18:13:08.785"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 18:13:08.785" endtime="20220516 18:13:08.785"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${volume3}/bk1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:13:08.790" level="INFO">Running command 'ozone sh bucket getacl fstest318/bk1 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:13:13.751" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:13:13.751" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20220516 18:13:08.787" endtime="20220516 18:13:13.751"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:13:13.753" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20220516 18:13:13.752" endtime="20220516 18:13:13.753"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:13:13.753" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:13:13.753" endtime="20220516 18:13:13.753"/>
</kw>
<status status="PASS" starttime="20220516 18:13:08.787" endtime="20220516 18:13:13.754"/>
</kw>
<msg timestamp="20220516 18:13:13.754" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:13:08.786" endtime="20220516 18:13:13.755"/>
</kw>
<msg timestamp="20220516 18:13:13.755" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20220516 18:13:08.785" endtime="20220516 18:13:13.755"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220516 18:13:13.755" endtime="20220516 18:13:13.756"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket addacl ${volume3}/bk1 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:13:13.762" level="INFO">Running command 'ozone sh bucket addacl fstest318/bk1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:13:18.387" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:13:18.388" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220516 18:13:13.758" endtime="20220516 18:13:18.388"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:13:18.389" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220516 18:13:18.388" endtime="20220516 18:13:18.389"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:13:18.390" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:13:18.389" endtime="20220516 18:13:18.390"/>
</kw>
<status status="PASS" starttime="20220516 18:13:13.757" endtime="20220516 18:13:18.390"/>
</kw>
<msg timestamp="20220516 18:13:18.391" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:13:13.757" endtime="20220516 18:13:18.391"/>
</kw>
<msg timestamp="20220516 18:13:18.392" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220516 18:13:13.756" endtime="20220516 18:13:18.392"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${volume3}/bk1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:13:18.396" level="INFO">Running command 'ozone sh bucket getacl fstest318/bk1 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:13:23.576" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:13:23.576" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20220516 18:13:18.394" endtime="20220516 18:13:23.576"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:13:23.578" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20220516 18:13:23.577" endtime="20220516 18:13:23.578"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:13:23.579" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:13:23.578" endtime="20220516 18:13:23.579"/>
</kw>
<status status="PASS" starttime="20220516 18:13:18.393" endtime="20220516 18:13:23.579"/>
</kw>
<msg timestamp="20220516 18:13:23.579" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:13:18.393" endtime="20220516 18:13:23.580"/>
</kw>
<msg timestamp="20220516 18:13:23.581" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20220516 18:13:18.392" endtime="20220516 18:13:23.581"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220516 18:13:23.581" endtime="20220516 18:13:23.581"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket removeacl ${volume3}/bk1 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:13:23.586" level="INFO">Running command 'ozone sh bucket removeacl fstest318/bk1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:13:28.160" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:13:28.160" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20220516 18:13:23.583" endtime="20220516 18:13:28.160"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:13:28.161" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20220516 18:13:28.160" endtime="20220516 18:13:28.161"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:13:28.162" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:13:28.161" endtime="20220516 18:13:28.162"/>
</kw>
<status status="PASS" starttime="20220516 18:13:23.583" endtime="20220516 18:13:28.162"/>
</kw>
<msg timestamp="20220516 18:13:28.162" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:13:23.582" endtime="20220516 18:13:28.163"/>
</kw>
<msg timestamp="20220516 18:13:28.163" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20220516 18:13:23.582" endtime="20220516 18:13:28.163"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${volume3}/bk1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:13:28.168" level="INFO">Running command 'ozone sh bucket getacl fstest318/bk1 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:13:33.167" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:13:33.167" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20220516 18:13:28.166" endtime="20220516 18:13:33.167"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:13:33.169" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" starttime="20220516 18:13:33.168" endtime="20220516 18:13:33.169"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:13:33.170" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:13:33.169" endtime="20220516 18:13:33.170"/>
</kw>
<status status="PASS" starttime="20220516 18:13:28.165" endtime="20220516 18:13:33.171"/>
</kw>
<msg timestamp="20220516 18:13:33.171" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:13:28.165" endtime="20220516 18:13:33.171"/>
</kw>
<msg timestamp="20220516 18:13:33.172" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20220516 18:13:28.163" endtime="20220516 18:13:33.172"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220516 18:13:33.172" endtime="20220516 18:13:33.173"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket setacl ${volume3}/bk1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:13:33.178" level="INFO">Running command 'ozone sh bucket setacl fstest318/bk1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:13:37.636" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:13:37.636" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20220516 18:13:33.175" endtime="20220516 18:13:37.636"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:13:37.638" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20220516 18:13:37.637" endtime="20220516 18:13:37.638"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:13:37.639" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:13:37.638" endtime="20220516 18:13:37.639"/>
</kw>
<status status="PASS" starttime="20220516 18:13:33.174" endtime="20220516 18:13:37.639"/>
</kw>
<msg timestamp="20220516 18:13:37.639" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:13:33.174" endtime="20220516 18:13:37.640"/>
</kw>
<msg timestamp="20220516 18:13:37.640" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20220516 18:13:33.173" endtime="20220516 18:13:37.640"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${volume3}/bk1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:13:37.645" level="INFO">Running command 'ozone sh bucket getacl fstest318/bk1 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:13:42.406" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:13:42.406" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20220516 18:13:37.643" endtime="20220516 18:13:42.406"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:13:42.408" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20220516 18:13:42.407" endtime="20220516 18:13:42.408"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:13:42.408" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:13:42.408" endtime="20220516 18:13:42.409"/>
</kw>
<status status="PASS" starttime="20220516 18:13:37.642" endtime="20220516 18:13:42.409"/>
</kw>
<msg timestamp="20220516 18:13:42.409" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:13:37.641" endtime="20220516 18:13:42.410"/>
</kw>
<msg timestamp="20220516 18:13:42.410" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20220516 18:13:37.640" endtime="20220516 18:13:42.410"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220516 18:13:42.410" endtime="20220516 18:13:42.411"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220516 18:13:42.411" endtime="20220516 18:13:42.413"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220516 18:13:04.314" endtime="20220516 18:13:42.413"/>
</test>
<test id="s1-s2-s3-t8" name="Test key Acls">
<kw name="Execute" library="os">
<arg>ozone sh key put ${volume3}/bk1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:13:42.419" level="INFO">Running command 'ozone sh key put fstest318/bk1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:13:52.102" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:13:52.102" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:13:42.417" endtime="20220516 18:13:52.102"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:13:52.104" level="INFO"/>
<status status="PASS" starttime="20220516 18:13:52.103" endtime="20220516 18:13:52.104"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:13:52.105" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:13:52.104" endtime="20220516 18:13:52.105"/>
</kw>
<status status="PASS" starttime="20220516 18:13:42.416" endtime="20220516 18:13:52.105"/>
</kw>
<msg timestamp="20220516 18:13:52.106" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:13:42.416" endtime="20220516 18:13:52.106"/>
</kw>
<status status="PASS" starttime="20220516 18:13:42.415" endtime="20220516 18:13:52.106"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${volume3}/bk1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:13:52.111" level="INFO">Running command 'ozone sh key getacl fstest318/bk1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:13:56.880" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:13:56.880" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20220516 18:13:52.108" endtime="20220516 18:13:56.880"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:13:56.881" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20220516 18:13:56.880" endtime="20220516 18:13:56.881"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:13:56.882" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:13:56.882" endtime="20220516 18:13:56.882"/>
</kw>
<status status="PASS" starttime="20220516 18:13:52.108" endtime="20220516 18:13:56.883"/>
</kw>
<msg timestamp="20220516 18:13:56.883" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:13:52.107" endtime="20220516 18:13:56.883"/>
</kw>
<msg timestamp="20220516 18:13:56.884" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20220516 18:13:52.107" endtime="20220516 18:13:56.884"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220516 18:13:56.884" endtime="20220516 18:13:56.885"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key addacl ${volume3}/bk1/key1 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:13:56.890" level="INFO">Running command 'ozone sh key addacl fstest318/bk1/key1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:14:01.472" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:14:01.472" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220516 18:13:56.887" endtime="20220516 18:14:01.472"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:14:01.474" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220516 18:14:01.472" endtime="20220516 18:14:01.474"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:14:01.475" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:14:01.474" endtime="20220516 18:14:01.475"/>
</kw>
<status status="PASS" starttime="20220516 18:13:56.886" endtime="20220516 18:14:01.475"/>
</kw>
<msg timestamp="20220516 18:14:01.475" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:13:56.885" endtime="20220516 18:14:01.476"/>
</kw>
<msg timestamp="20220516 18:14:01.476" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220516 18:13:56.885" endtime="20220516 18:14:01.476"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${volume3}/bk1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:14:01.482" level="INFO">Running command 'ozone sh key getacl fstest318/bk1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:14:06.141" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:14:06.141" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20220516 18:14:01.479" endtime="20220516 18:14:06.141"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:14:06.143" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20220516 18:14:06.142" endtime="20220516 18:14:06.143"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:14:06.144" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:14:06.143" endtime="20220516 18:14:06.144"/>
</kw>
<status status="PASS" starttime="20220516 18:14:01.478" endtime="20220516 18:14:06.145"/>
</kw>
<msg timestamp="20220516 18:14:06.145" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:14:01.477" endtime="20220516 18:14:06.145"/>
</kw>
<msg timestamp="20220516 18:14:06.146" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20220516 18:14:01.476" endtime="20220516 18:14:06.146"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220516 18:14:06.146" endtime="20220516 18:14:06.147"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key removeacl ${volume3}/bk1/key1 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:14:06.152" level="INFO">Running command 'ozone sh key removeacl fstest318/bk1/key1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:14:10.491" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:14:10.491" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20220516 18:14:06.149" endtime="20220516 18:14:10.491"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:14:10.492" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20220516 18:14:10.491" endtime="20220516 18:14:10.492"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:14:10.493" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:14:10.493" endtime="20220516 18:14:10.493"/>
</kw>
<status status="PASS" starttime="20220516 18:14:06.148" endtime="20220516 18:14:10.494"/>
</kw>
<msg timestamp="20220516 18:14:10.494" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:14:06.148" endtime="20220516 18:14:10.495"/>
</kw>
<msg timestamp="20220516 18:14:10.496" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20220516 18:14:06.147" endtime="20220516 18:14:10.496"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${volume3}/bk1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:14:10.504" level="INFO">Running command 'ozone sh key getacl fstest318/bk1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:14:15.588" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:14:15.588" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20220516 18:14:10.500" endtime="20220516 18:14:15.588"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:14:15.589" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" starttime="20220516 18:14:15.588" endtime="20220516 18:14:15.589"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:14:15.590" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:14:15.589" endtime="20220516 18:14:15.590"/>
</kw>
<status status="PASS" starttime="20220516 18:14:10.497" endtime="20220516 18:14:15.591"/>
</kw>
<msg timestamp="20220516 18:14:15.591" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:14:10.497" endtime="20220516 18:14:15.592"/>
</kw>
<msg timestamp="20220516 18:14:15.592" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20220516 18:14:10.496" endtime="20220516 18:14:15.592"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220516 18:14:15.592" endtime="20220516 18:14:15.593"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key setacl ${volume3}/bk1/key1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:14:15.597" level="INFO">Running command 'ozone sh key setacl fstest318/bk1/key1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:14:20.398" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:14:20.398" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20220516 18:14:15.595" endtime="20220516 18:14:20.398"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:14:20.399" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20220516 18:14:20.398" endtime="20220516 18:14:20.399"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:14:20.400" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:14:20.400" endtime="20220516 18:14:20.400"/>
</kw>
<status status="PASS" starttime="20220516 18:14:15.594" endtime="20220516 18:14:20.401"/>
</kw>
<msg timestamp="20220516 18:14:20.401" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:14:15.594" endtime="20220516 18:14:20.401"/>
</kw>
<msg timestamp="20220516 18:14:20.402" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20220516 18:14:15.593" endtime="20220516 18:14:20.402"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${volume3}/bk1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:14:20.406" level="INFO">Running command 'ozone sh key getacl fstest318/bk1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:14:25.322" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:14:25.322" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20220516 18:14:20.404" endtime="20220516 18:14:25.322"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:14:25.324" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20220516 18:14:25.323" endtime="20220516 18:14:25.324"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:14:25.324" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:14:25.324" endtime="20220516 18:14:25.325"/>
</kw>
<status status="PASS" starttime="20220516 18:14:20.403" endtime="20220516 18:14:25.325"/>
</kw>
<msg timestamp="20220516 18:14:25.325" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:14:20.403" endtime="20220516 18:14:25.326"/>
</kw>
<msg timestamp="20220516 18:14:25.326" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20220516 18:14:20.402" endtime="20220516 18:14:25.326"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220516 18:14:25.327" endtime="20220516 18:14:25.327"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220516 18:14:25.327" endtime="20220516 18:14:25.328"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220516 18:13:42.414" endtime="20220516 18:14:25.328"/>
</test>
<test id="s1-s2-s3-t9" name="Test native authorizer">
<kw name="Execute" library="os">
<arg>ozone sh volume removeacl ${volume3} -a group:root:a</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:14:25.334" level="INFO">Running command 'ozone sh volume removeacl fstest318 -a group:root:a 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:14:30.130" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:14:30.130" level="INFO">${output} = ACL group:root:a[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20220516 18:14:25.332" endtime="20220516 18:14:30.130"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:14:30.131" level="INFO">ACL group:root:a[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20220516 18:14:30.131" endtime="20220516 18:14:30.132"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:14:30.132" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:14:30.132" endtime="20220516 18:14:30.133"/>
</kw>
<status status="PASS" starttime="20220516 18:14:25.331" endtime="20220516 18:14:30.133"/>
</kw>
<msg timestamp="20220516 18:14:30.133" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:14:25.331" endtime="20220516 18:14:30.134"/>
</kw>
<status status="PASS" starttime="20220516 18:14:25.330" endtime="20220516 18:14:30.134"/>
</kw>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:14:30.139" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:14:30.143" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:14:30.143" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:14:30.136" endtime="20220516 18:14:30.143"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:14:30.145" level="INFO"/>
<status status="PASS" starttime="20220516 18:14:30.144" endtime="20220516 18:14:30.145"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:14:30.146" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:14:30.145" endtime="20220516 18:14:30.146"/>
</kw>
<status status="PASS" starttime="20220516 18:14:30.136" endtime="20220516 18:14:30.146"/>
</kw>
<msg timestamp="20220516 18:14:30.146" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:14:30.135" endtime="20220516 18:14:30.147"/>
</kw>
<status status="PASS" starttime="20220516 18:14:30.135" endtime="20220516 18:14:30.147"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:14:30.152" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:14:30.156" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:14:30.156" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220516 18:14:30.150" endtime="20220516 18:14:30.157"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:14:30.158" level="INFO">scm</msg>
<status status="PASS" starttime="20220516 18:14:30.157" endtime="20220516 18:14:30.158"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:14:30.159" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:14:30.158" endtime="20220516 18:14:30.159"/>
</kw>
<status status="PASS" starttime="20220516 18:14:30.150" endtime="20220516 18:14:30.159"/>
</kw>
<msg timestamp="20220516 18:14:30.159" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:14:30.149" endtime="20220516 18:14:30.160"/>
</kw>
<msg timestamp="20220516 18:14:30.160" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220516 18:14:30.149" endtime="20220516 18:14:30.160"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220516 18:14:30.161" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220516 18:14:30.161" endtime="20220516 18:14:30.161"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:14:30.169" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:14:30.178" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:14:30.178" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:14:30.167" endtime="20220516 18:14:30.179"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:14:30.180" level="INFO"/>
<status status="PASS" starttime="20220516 18:14:30.179" endtime="20220516 18:14:30.180"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:14:30.181" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:14:30.180" endtime="20220516 18:14:30.181"/>
</kw>
<status status="PASS" starttime="20220516 18:14:30.167" endtime="20220516 18:14:30.181"/>
</kw>
<msg timestamp="20220516 18:14:30.181" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:14:30.166" endtime="20220516 18:14:30.182"/>
</kw>
<status status="PASS" starttime="20220516 18:14:30.163" endtime="20220516 18:14:30.182"/>
</kw>
<status status="PASS" starttime="20220516 18:14:30.162" endtime="20220516 18:14:30.182"/>
</kw>
<status status="PASS" starttime="20220516 18:14:30.148" endtime="20220516 18:14:30.183"/>
</kw>
<status status="PASS" starttime="20220516 18:14:30.147" endtime="20220516 18:14:30.183"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket list /${volume3}/</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:14:30.186" level="INFO">Running command 'ozone sh bucket list /fstest318/ 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:14:34.896" level="INFO">${rc} = 255</msg>
<msg timestamp="20220516 18:14:34.896" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access volume Volume:fstest318 </msg>
<status status="PASS" starttime="20220516 18:14:30.184" endtime="20220516 18:14:34.896"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:14:34.898" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access volume Volume:fstest318 </msg>
<status status="PASS" starttime="20220516 18:14:34.897" endtime="20220516 18:14:34.898"/>
</kw>
<msg timestamp="20220516 18:14:34.898" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access volume Volume:fstest318 </msg>
<status status="PASS" starttime="20220516 18:14:30.183" endtime="20220516 18:14:34.898"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 18:14:34.899" endtime="20220516 18:14:34.899"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list /${volume3}/bk1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:14:34.903" level="INFO">Running command 'ozone sh key list /fstest318/bk1 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:14:39.639" level="INFO">${rc} = 255</msg>
<msg timestamp="20220516 18:14:39.639" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access volume Volume:fstest318 </msg>
<status status="PASS" starttime="20220516 18:14:34.900" endtime="20220516 18:14:39.640"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:14:39.641" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access volume Volume:fstest318 </msg>
<status status="PASS" starttime="20220516 18:14:39.640" endtime="20220516 18:14:39.641"/>
</kw>
<msg timestamp="20220516 18:14:39.642" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access volume Volume:fstest318 </msg>
<status status="PASS" starttime="20220516 18:14:34.899" endtime="20220516 18:14:39.642"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 18:14:39.642" endtime="20220516 18:14:39.642"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume addacl ${volume3} -a user:testuser2/scm@EXAMPLE.COM:xy</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:14:39.646" level="INFO">Running command 'ozone sh volume addacl fstest318 -a user:testuser2/scm@EXAMPLE.COM:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:14:44.268" level="INFO">${rc} = 255</msg>
<msg timestamp="20220516 18:14:44.268" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have WRITE_ACL permission to access volume Volume:fstest318 </msg>
<status status="PASS" starttime="20220516 18:14:39.643" endtime="20220516 18:14:44.268"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:14:44.269" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have WRITE_ACL permission to access volume Volume:fstest318 </msg>
<status status="PASS" starttime="20220516 18:14:44.269" endtime="20220516 18:14:44.269"/>
</kw>
<msg timestamp="20220516 18:14:44.270" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have WRITE_ACL permission to access volume Volume:fstest318 </msg>
<status status="PASS" starttime="20220516 18:14:39.643" endtime="20220516 18:14:44.270"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have WRITE_ACL permission to access volume</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 18:14:44.270" endtime="20220516 18:14:44.271"/>
</kw>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:14:44.275" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:14:44.279" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:14:44.279" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:14:44.273" endtime="20220516 18:14:44.279"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:14:44.280" level="INFO"/>
<status status="PASS" starttime="20220516 18:14:44.279" endtime="20220516 18:14:44.280"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:14:44.281" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:14:44.281" endtime="20220516 18:14:44.281"/>
</kw>
<status status="PASS" starttime="20220516 18:14:44.272" endtime="20220516 18:14:44.282"/>
</kw>
<msg timestamp="20220516 18:14:44.282" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:14:44.272" endtime="20220516 18:14:44.282"/>
</kw>
<status status="PASS" starttime="20220516 18:14:44.271" endtime="20220516 18:14:44.282"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:14:44.288" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:14:44.291" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:14:44.291" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220516 18:14:44.285" endtime="20220516 18:14:44.291"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:14:44.292" level="INFO">scm</msg>
<status status="PASS" starttime="20220516 18:14:44.291" endtime="20220516 18:14:44.292"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:14:44.293" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:14:44.293" endtime="20220516 18:14:44.293"/>
</kw>
<status status="PASS" starttime="20220516 18:14:44.284" endtime="20220516 18:14:44.294"/>
</kw>
<msg timestamp="20220516 18:14:44.294" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:14:44.284" endtime="20220516 18:14:44.294"/>
</kw>
<msg timestamp="20220516 18:14:44.295" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220516 18:14:44.284" endtime="20220516 18:14:44.295"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220516 18:14:44.295" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220516 18:14:44.295" endtime="20220516 18:14:44.296"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:14:44.300" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:14:44.309" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:14:44.309" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:14:44.298" endtime="20220516 18:14:44.309"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:14:44.311" level="INFO"/>
<status status="PASS" starttime="20220516 18:14:44.310" endtime="20220516 18:14:44.311"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:14:44.311" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:14:44.311" endtime="20220516 18:14:44.312"/>
</kw>
<status status="PASS" starttime="20220516 18:14:44.297" endtime="20220516 18:14:44.312"/>
</kw>
<msg timestamp="20220516 18:14:44.312" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:14:44.297" endtime="20220516 18:14:44.313"/>
</kw>
<status status="PASS" starttime="20220516 18:14:44.296" endtime="20220516 18:14:44.313"/>
</kw>
<status status="PASS" starttime="20220516 18:14:44.296" endtime="20220516 18:14:44.313"/>
</kw>
<status status="PASS" starttime="20220516 18:14:44.283" endtime="20220516 18:14:44.313"/>
</kw>
<status status="PASS" starttime="20220516 18:14:44.283" endtime="20220516 18:14:44.313"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl ${volume3} -a user:testuser2/scm@EXAMPLE.COM:xyrw</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:14:44.318" level="INFO">Running command 'ozone sh volume addacl fstest318 -a user:testuser2/scm@EXAMPLE.COM:xyrw 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:14:48.854" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:14:48.854" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220516 18:14:44.315" endtime="20220516 18:14:48.854"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:14:48.856" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220516 18:14:48.855" endtime="20220516 18:14:48.856"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:14:48.856" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:14:48.856" endtime="20220516 18:14:48.857"/>
</kw>
<status status="PASS" starttime="20220516 18:14:44.315" endtime="20220516 18:14:48.857"/>
</kw>
<msg timestamp="20220516 18:14:48.857" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:14:44.315" endtime="20220516 18:14:48.858"/>
</kw>
<status status="PASS" starttime="20220516 18:14:44.314" endtime="20220516 18:14:48.858"/>
</kw>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:14:48.862" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:14:48.867" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:14:48.867" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:14:48.860" endtime="20220516 18:14:48.867"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:14:48.868" level="INFO"/>
<status status="PASS" starttime="20220516 18:14:48.867" endtime="20220516 18:14:48.868"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:14:48.869" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:14:48.868" endtime="20220516 18:14:48.869"/>
</kw>
<status status="PASS" starttime="20220516 18:14:48.859" endtime="20220516 18:14:48.869"/>
</kw>
<msg timestamp="20220516 18:14:48.870" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:14:48.859" endtime="20220516 18:14:48.870"/>
</kw>
<status status="PASS" starttime="20220516 18:14:48.858" endtime="20220516 18:14:48.871"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:14:48.875" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:14:48.879" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:14:48.879" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220516 18:14:48.873" endtime="20220516 18:14:48.879"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:14:48.881" level="INFO">scm</msg>
<status status="PASS" starttime="20220516 18:14:48.879" endtime="20220516 18:14:48.881"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:14:48.881" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:14:48.881" endtime="20220516 18:14:48.882"/>
</kw>
<status status="PASS" starttime="20220516 18:14:48.872" endtime="20220516 18:14:48.882"/>
</kw>
<msg timestamp="20220516 18:14:48.882" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:14:48.872" endtime="20220516 18:14:48.883"/>
</kw>
<msg timestamp="20220516 18:14:48.883" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220516 18:14:48.872" endtime="20220516 18:14:48.883"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220516 18:14:48.884" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220516 18:14:48.884" endtime="20220516 18:14:48.885"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:14:48.890" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:14:48.898" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:14:48.899" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:14:48.887" endtime="20220516 18:14:48.899"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:14:48.900" level="INFO"/>
<status status="PASS" starttime="20220516 18:14:48.899" endtime="20220516 18:14:48.900"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:14:48.901" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:14:48.900" endtime="20220516 18:14:48.901"/>
</kw>
<status status="PASS" starttime="20220516 18:14:48.887" endtime="20220516 18:14:48.902"/>
</kw>
<msg timestamp="20220516 18:14:48.902" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:14:48.886" endtime="20220516 18:14:48.902"/>
</kw>
<status status="PASS" starttime="20220516 18:14:48.886" endtime="20220516 18:14:48.903"/>
</kw>
<status status="PASS" starttime="20220516 18:14:48.885" endtime="20220516 18:14:48.903"/>
</kw>
<status status="PASS" starttime="20220516 18:14:48.871" endtime="20220516 18:14:48.903"/>
</kw>
<status status="PASS" starttime="20220516 18:14:48.871" endtime="20220516 18:14:48.903"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket list /${volume3}/</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:14:48.915" level="INFO">Running command 'ozone sh bucket list /fstest318/ 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:14:53.472" level="INFO">${rc} = 255</msg>
<msg timestamp="20220516 18:14:53.472" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access volume Volume:fstest318 </msg>
<status status="PASS" starttime="20220516 18:14:48.904" endtime="20220516 18:14:53.472"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:14:53.474" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access volume Volume:fstest318 </msg>
<status status="PASS" starttime="20220516 18:14:53.473" endtime="20220516 18:14:53.474"/>
</kw>
<msg timestamp="20220516 18:14:53.474" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access volume Volume:fstest318 </msg>
<status status="PASS" starttime="20220516 18:14:48.903" endtime="20220516 18:14:53.475"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access volume</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 18:14:53.475" endtime="20220516 18:14:53.484"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl ${volume3} -a user:testuser2/scm@EXAMPLE.COM:l</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:14:53.489" level="INFO">Running command 'ozone sh volume addacl fstest318 -a user:testuser2/scm@EXAMPLE.COM:l 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:14:58.103" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:14:58.103" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:l[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220516 18:14:53.486" endtime="20220516 18:14:58.103"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:14:58.104" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:l[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220516 18:14:58.103" endtime="20220516 18:14:58.104"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:14:58.105" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:14:58.105" endtime="20220516 18:14:58.105"/>
</kw>
<status status="PASS" starttime="20220516 18:14:53.486" endtime="20220516 18:14:58.106"/>
</kw>
<msg timestamp="20220516 18:14:58.106" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:14:53.485" endtime="20220516 18:14:58.106"/>
</kw>
<status status="PASS" starttime="20220516 18:14:53.484" endtime="20220516 18:14:58.107"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket list /${volume3}/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:14:58.111" level="INFO">Running command 'ozone sh bucket list /fstest318/ 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:15:03.273" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:15:03.273" level="INFO">${output} = [ {
  "metadata" : { },
  "volumeName" : "fstest318",
  "name" : "bk1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 52578,
  "usedNamespace" : 1,
  "creationTime" : "2022-05-16T1...</msg>
<status status="PASS" starttime="20220516 18:14:58.109" endtime="20220516 18:15:03.273"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:15:03.275" level="INFO">[ {
  "metadata" : { },
  "volumeName" : "fstest318",
  "name" : "bk1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 52578,
  "usedNamespace" : 1,
  "creationTime" : "2022-05-16T18:13:08.705Z",
  "modificationTime" : "2022-05-16T18:13:37.506Z",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "FILE_SYSTEM_OPTIMIZED",
  "owner" : "testuser",
  "link" : false
} ]</msg>
<status status="PASS" starttime="20220516 18:15:03.274" endtime="20220516 18:15:03.275"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:15:03.276" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:15:03.275" endtime="20220516 18:15:03.276"/>
</kw>
<status status="PASS" starttime="20220516 18:14:58.108" endtime="20220516 18:15:03.277"/>
</kw>
<msg timestamp="20220516 18:15:03.277" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:14:58.108" endtime="20220516 18:15:03.278"/>
</kw>
<status status="PASS" starttime="20220516 18:14:58.107" endtime="20220516 18:15:03.278"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume getacl /${volume3}/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:15:03.283" level="INFO">Running command 'ozone sh volume getacl /fstest318/ 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:15:08.311" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:15:08.311" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" starttime="20220516 18:15:03.280" endtime="20220516 18:15:08.311"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:15:08.313" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser2/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "LIST", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20220516 18:15:08.312" endtime="20220516 18:15:08.314"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:15:08.314" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:15:08.314" endtime="20220516 18:15:08.314"/>
</kw>
<status status="PASS" starttime="20220516 18:15:03.280" endtime="20220516 18:15:08.315"/>
</kw>
<msg timestamp="20220516 18:15:08.315" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:15:03.279" endtime="20220516 18:15:08.315"/>
</kw>
<status status="PASS" starttime="20220516 18:15:03.279" endtime="20220516 18:15:08.316"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list /${volume3}/bk1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:15:08.319" level="INFO">Running command 'ozone sh key list /fstest318/bk1 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:15:13.138" level="INFO">${rc} = 255</msg>
<msg timestamp="20220516 18:15:13.138" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket Volume:fstest318 Bucket:bk1 </msg>
<status status="PASS" starttime="20220516 18:15:08.317" endtime="20220516 18:15:13.138"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:15:13.140" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket Volume:fstest318 Bucket:bk1 </msg>
<status status="PASS" starttime="20220516 18:15:13.139" endtime="20220516 18:15:13.140"/>
</kw>
<msg timestamp="20220516 18:15:13.140" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket Volume:fstest318 Bucket:bk1 </msg>
<status status="PASS" starttime="20220516 18:15:08.316" endtime="20220516 18:15:13.140"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 18:15:13.141" endtime="20220516 18:15:13.141"/>
</kw>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:15:13.145" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:15:13.149" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:15:13.149" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:15:13.143" endtime="20220516 18:15:13.149"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:15:13.151" level="INFO"/>
<status status="PASS" starttime="20220516 18:15:13.150" endtime="20220516 18:15:13.151"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:15:13.151" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:15:13.151" endtime="20220516 18:15:13.152"/>
</kw>
<status status="PASS" starttime="20220516 18:15:13.142" endtime="20220516 18:15:13.152"/>
</kw>
<msg timestamp="20220516 18:15:13.152" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:15:13.142" endtime="20220516 18:15:13.153"/>
</kw>
<status status="PASS" starttime="20220516 18:15:13.141" endtime="20220516 18:15:13.153"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:15:13.159" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:15:13.163" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:15:13.163" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220516 18:15:13.156" endtime="20220516 18:15:13.163"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:15:13.164" level="INFO">scm</msg>
<status status="PASS" starttime="20220516 18:15:13.163" endtime="20220516 18:15:13.164"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:15:13.165" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:15:13.164" endtime="20220516 18:15:13.165"/>
</kw>
<status status="PASS" starttime="20220516 18:15:13.156" endtime="20220516 18:15:13.165"/>
</kw>
<msg timestamp="20220516 18:15:13.166" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:15:13.155" endtime="20220516 18:15:13.166"/>
</kw>
<msg timestamp="20220516 18:15:13.167" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220516 18:15:13.155" endtime="20220516 18:15:13.167"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220516 18:15:13.167" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220516 18:15:13.167" endtime="20220516 18:15:13.168"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:15:13.172" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:15:13.236" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:15:13.236" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:15:13.170" endtime="20220516 18:15:13.236"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:15:13.237" level="INFO"/>
<status status="PASS" starttime="20220516 18:15:13.236" endtime="20220516 18:15:13.237"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:15:13.240" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:15:13.238" endtime="20220516 18:15:13.240"/>
</kw>
<status status="PASS" starttime="20220516 18:15:13.169" endtime="20220516 18:15:13.241"/>
</kw>
<msg timestamp="20220516 18:15:13.241" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:15:13.169" endtime="20220516 18:15:13.242"/>
</kw>
<status status="PASS" starttime="20220516 18:15:13.168" endtime="20220516 18:15:13.242"/>
</kw>
<status status="PASS" starttime="20220516 18:15:13.168" endtime="20220516 18:15:13.242"/>
</kw>
<status status="PASS" starttime="20220516 18:15:13.154" endtime="20220516 18:15:13.242"/>
</kw>
<status status="PASS" starttime="20220516 18:15:13.153" endtime="20220516 18:15:13.242"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl ${volume3}/bk1 -a user:testuser2/scm@EXAMPLE.COM:a</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:15:13.248" level="INFO">Running command 'ozone sh bucket addacl fstest318/bk1 -a user:testuser2/scm@EXAMPLE.COM:a 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:15:18.116" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:15:18.116" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:a[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220516 18:15:13.245" endtime="20220516 18:15:18.116"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:15:18.117" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:a[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220516 18:15:18.116" endtime="20220516 18:15:18.117"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:15:18.118" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:15:18.118" endtime="20220516 18:15:18.119"/>
</kw>
<status status="PASS" starttime="20220516 18:15:13.244" endtime="20220516 18:15:18.119"/>
</kw>
<msg timestamp="20220516 18:15:18.119" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:15:13.243" endtime="20220516 18:15:18.120"/>
</kw>
<status status="PASS" starttime="20220516 18:15:13.243" endtime="20220516 18:15:18.120"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket getacl /${volume3}/bk1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:15:18.124" level="INFO">Running command 'ozone sh bucket getacl /fstest318/bk1 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:15:23.584" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:15:23.584" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20220516 18:15:18.122" endtime="20220516 18:15:23.584"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:15:23.586" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser2/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20220516 18:15:23.585" endtime="20220516 18:15:23.586"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:15:23.587" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:15:23.587" endtime="20220516 18:15:23.588"/>
</kw>
<status status="PASS" starttime="20220516 18:15:18.121" endtime="20220516 18:15:23.588"/>
</kw>
<msg timestamp="20220516 18:15:23.588" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:15:18.121" endtime="20220516 18:15:23.590"/>
</kw>
<status status="PASS" starttime="20220516 18:15:18.120" endtime="20220516 18:15:23.591"/>
</kw>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:15:23.597" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:15:23.601" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:15:23.602" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:15:23.595" endtime="20220516 18:15:23.602"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:15:23.603" level="INFO"/>
<status status="PASS" starttime="20220516 18:15:23.602" endtime="20220516 18:15:23.603"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:15:23.604" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:15:23.603" endtime="20220516 18:15:23.604"/>
</kw>
<status status="PASS" starttime="20220516 18:15:23.594" endtime="20220516 18:15:23.605"/>
</kw>
<msg timestamp="20220516 18:15:23.605" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:15:23.593" endtime="20220516 18:15:23.605"/>
</kw>
<status status="PASS" starttime="20220516 18:15:23.591" endtime="20220516 18:15:23.606"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:15:23.611" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:15:23.614" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:15:23.614" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220516 18:15:23.609" endtime="20220516 18:15:23.615"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:15:23.616" level="INFO">scm</msg>
<status status="PASS" starttime="20220516 18:15:23.615" endtime="20220516 18:15:23.616"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:15:23.617" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:15:23.616" endtime="20220516 18:15:23.617"/>
</kw>
<status status="PASS" starttime="20220516 18:15:23.608" endtime="20220516 18:15:23.617"/>
</kw>
<msg timestamp="20220516 18:15:23.617" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:15:23.607" endtime="20220516 18:15:23.618"/>
</kw>
<msg timestamp="20220516 18:15:23.618" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220516 18:15:23.607" endtime="20220516 18:15:23.618"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220516 18:15:23.619" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220516 18:15:23.618" endtime="20220516 18:15:23.619"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:15:23.624" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:15:23.632" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:15:23.632" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:15:23.622" endtime="20220516 18:15:23.633"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:15:23.634" level="INFO"/>
<status status="PASS" starttime="20220516 18:15:23.633" endtime="20220516 18:15:23.634"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:15:23.635" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:15:23.634" endtime="20220516 18:15:23.635"/>
</kw>
<status status="PASS" starttime="20220516 18:15:23.621" endtime="20220516 18:15:23.635"/>
</kw>
<msg timestamp="20220516 18:15:23.635" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:15:23.621" endtime="20220516 18:15:23.636"/>
</kw>
<status status="PASS" starttime="20220516 18:15:23.620" endtime="20220516 18:15:23.636"/>
</kw>
<status status="PASS" starttime="20220516 18:15:23.619" endtime="20220516 18:15:23.636"/>
</kw>
<status status="PASS" starttime="20220516 18:15:23.606" endtime="20220516 18:15:23.636"/>
</kw>
<status status="PASS" starttime="20220516 18:15:23.606" endtime="20220516 18:15:23.636"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket getacl /${volume3}/bk1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:15:23.641" level="INFO">Running command 'ozone sh bucket getacl /fstest318/bk1 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:15:28.870" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:15:28.870" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20220516 18:15:23.639" endtime="20220516 18:15:28.870"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:15:28.872" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser2/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20220516 18:15:28.871" endtime="20220516 18:15:28.872"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:15:28.873" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:15:28.872" endtime="20220516 18:15:28.873"/>
</kw>
<status status="PASS" starttime="20220516 18:15:23.638" endtime="20220516 18:15:28.874"/>
</kw>
<msg timestamp="20220516 18:15:28.874" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:15:23.637" endtime="20220516 18:15:28.874"/>
</kw>
<status status="PASS" starttime="20220516 18:15:23.637" endtime="20220516 18:15:28.875"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key list /${volume3}/bk1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:15:28.879" level="INFO">Running command 'ozone sh key list /fstest318/bk1 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:15:34.398" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:15:34.398" level="INFO">${output} = [ {
  "volumeName" : "fstest318",
  "bucketName" : "bk1",
  "name" : "key1",
  "dataSize" : 17526,
  "creationTime" : "2022-05-16T18:13:47.117Z",
  "modificationTime" : "2022-05-16T18:14:20.279Z",
  "...</msg>
<status status="PASS" starttime="20220516 18:15:28.877" endtime="20220516 18:15:34.398"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:15:34.400" level="INFO">[ {
  "volumeName" : "fstest318",
  "bucketName" : "bk1",
  "name" : "key1",
  "dataSize" : 17526,
  "creationTime" : "2022-05-16T18:13:47.117Z",
  "modificationTime" : "2022-05-16T18:14:20.279Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  }
} ]</msg>
<status status="PASS" starttime="20220516 18:15:34.399" endtime="20220516 18:15:34.400"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:15:34.401" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:15:34.400" endtime="20220516 18:15:34.401"/>
</kw>
<status status="PASS" starttime="20220516 18:15:28.876" endtime="20220516 18:15:34.401"/>
</kw>
<msg timestamp="20220516 18:15:34.402" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:15:28.876" endtime="20220516 18:15:34.402"/>
</kw>
<status status="PASS" starttime="20220516 18:15:28.875" endtime="20220516 18:15:34.402"/>
</kw>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:15:34.406" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:15:34.411" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:15:34.411" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:15:34.404" endtime="20220516 18:15:34.411"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:15:34.412" level="INFO"/>
<status status="PASS" starttime="20220516 18:15:34.411" endtime="20220516 18:15:34.412"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:15:34.413" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:15:34.412" endtime="20220516 18:15:34.413"/>
</kw>
<status status="PASS" starttime="20220516 18:15:34.404" endtime="20220516 18:15:34.413"/>
</kw>
<msg timestamp="20220516 18:15:34.414" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:15:34.403" endtime="20220516 18:15:34.414"/>
</kw>
<status status="PASS" starttime="20220516 18:15:34.403" endtime="20220516 18:15:34.415"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:15:34.420" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:15:34.424" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:15:34.424" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220516 18:15:34.417" endtime="20220516 18:15:34.424"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:15:34.426" level="INFO">scm</msg>
<status status="PASS" starttime="20220516 18:15:34.425" endtime="20220516 18:15:34.426"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:15:34.427" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:15:34.426" endtime="20220516 18:15:34.427"/>
</kw>
<status status="PASS" starttime="20220516 18:15:34.417" endtime="20220516 18:15:34.427"/>
</kw>
<msg timestamp="20220516 18:15:34.427" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:15:34.416" endtime="20220516 18:15:34.428"/>
</kw>
<msg timestamp="20220516 18:15:34.428" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220516 18:15:34.416" endtime="20220516 18:15:34.428"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220516 18:15:34.429" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220516 18:15:34.428" endtime="20220516 18:15:34.429"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:15:34.434" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:15:34.445" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:15:34.445" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:15:34.432" endtime="20220516 18:15:34.445"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:15:34.447" level="INFO"/>
<status status="PASS" starttime="20220516 18:15:34.446" endtime="20220516 18:15:34.447"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:15:34.447" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:15:34.447" endtime="20220516 18:15:34.448"/>
</kw>
<status status="PASS" starttime="20220516 18:15:34.431" endtime="20220516 18:15:34.448"/>
</kw>
<msg timestamp="20220516 18:15:34.448" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:15:34.431" endtime="20220516 18:15:34.449"/>
</kw>
<status status="PASS" starttime="20220516 18:15:34.430" endtime="20220516 18:15:34.449"/>
</kw>
<status status="PASS" starttime="20220516 18:15:34.430" endtime="20220516 18:15:34.449"/>
</kw>
<status status="PASS" starttime="20220516 18:15:34.415" endtime="20220516 18:15:34.450"/>
</kw>
<status status="PASS" starttime="20220516 18:15:34.415" endtime="20220516 18:15:34.450"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220516 18:14:25.329" endtime="20220516 18:15:34.450"/>
</test>
<doc>Smoke test to start cluster with docker-compose environments.</doc>
<status status="PASS" starttime="20220516 18:11:14.176" endtime="20220516 18:15:34.452"/>
</suite>
<suite id="s1-s2-s4" name="Ozone-Secure-S3" source="/opt/hadoop/smoketest/security/ozone-secure-s3.robot">
<test id="s1-s2-s4-t1" name="Secure S3 test Success">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup s3 tests</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup s3 tests" library="commonawslib">
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220516 18:15:34.501" level="INFO">${randStr} = 1056276061</msg>
<status status="PASS" starttime="20220516 18:15:34.500" endtime="20220516 18:15:34.501"/>
</kw>
<msg timestamp="20220516 18:15:34.502" level="INFO">${random} = ozone-test-1056276061</msg>
<status status="PASS" starttime="20220516 18:15:34.500" endtime="20220516 18:15:34.502"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220516 18:15:34.504" level="INFO">${PREFIX} = ozone-test-1056276061</msg>
<status status="PASS" starttime="20220516 18:15:34.502" endtime="20220516 18:15:34.504"/>
</kw>
<status status="PASS" starttime="20220516 18:15:34.499" endtime="20220516 18:15:34.504"/>
</kw>
<status status="PASS" starttime="20220516 18:15:34.499" endtime="20220516 18:15:34.504"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which apt-get</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:15:34.509" level="INFO">Running command 'which apt-get 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:15:34.512" level="INFO">${rc} = 1</msg>
<msg timestamp="20220516 18:15:34.512" level="INFO">${output} = which: no apt-get in (/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin)</msg>
<status status="PASS" starttime="20220516 18:15:34.505" endtime="20220516 18:15:34.512"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220516 18:15:34.513" endtime="20220516 18:15:34.514"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>yum --help</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:15:34.516" level="INFO">Running command 'yum --help 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:15:34.712" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:15:34.712" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
ovl: Error while doing RPMdb copy-up:
[Errno 13] Permission denied: '/var/lib/rpm/Obsoletename'
Usage: yum [options] COMMAND

List of Commands:

check          Check...</msg>
<status status="PASS" starttime="20220516 18:15:34.514" endtime="20220516 18:15:34.712"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Install aws cli s3 centos" library="commonawslib">
<kw name="Execute" library="os">
<arg>sudo -E yum install -y awscli</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:15:34.719" level="INFO">Running command 'sudo -E yum install -y awscli 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:15:58.495" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:15:58.495" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
Determining fastest mirrors
 * base: mirrors.sonic.net
 * epel: mirror.sfo12.us.leaseweb.net
 * extras: or-mirror.iwebfusion.net
 * updates: mirror.keystealth.org
Re...</msg>
<status status="PASS" starttime="20220516 18:15:34.716" endtime="20220516 18:15:58.495"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:15:58.497" level="INFO">Loaded plugins: fastestmirror, ovl
Determining fastest mirrors
 * base: mirrors.sonic.net
 * epel: mirror.sfo12.us.leaseweb.net
 * extras: or-mirror.iwebfusion.net
 * updates: mirror.keystealth.org
Resolving Dependencies
--&gt; Running transaction check
---&gt; Package awscli.noarch 0:1.14.28-5.el7_5.1 will be installed
--&gt; Processing Dependency: python-s3transfer &gt;= 0.1.9 for package: awscli-1.14.28-5.el7_5.1.noarch
--&gt; Processing Dependency: python-docutils &gt;= 0.10 for package: awscli-1.14.28-5.el7_5.1.noarch
--&gt; Processing Dependency: python-cryptography &gt;= 1.7.2 for package: awscli-1.14.28-5.el7_5.1.noarch
--&gt; Processing Dependency: PyYAML &gt;= 3.10 for package: awscli-1.14.28-5.el7_5.1.noarch
--&gt; Running transaction check
---&gt; Package PyYAML.x86_64 0:3.10-11.el7 will be installed
--&gt; Processing Dependency: libyaml-0.so.2()(64bit) for package: PyYAML-3.10-11.el7.x86_64
---&gt; Package python-docutils.noarch 0:0.11-0.3.20130715svn7687.el7 will be installed
--&gt; Processing Dependency: python-imaging for package: python-docutils-0.11-0.3.20130715svn7687.el7.noarch
---&gt; Package python-s3transfer.noarch 0:0.1.13-1.el7_9.2 will be installed
--&gt; Processing Dependency: python-dateutil &gt;= 1.4 for package: python-s3transfer-0.1.13-1.el7_9.2.noarch
---&gt; Package python2-cryptography.x86_64 0:1.7.2-2.el7 will be installed
--&gt; Processing Dependency: python-six &gt;= 1.4.1 for package: python2-cryptography-1.7.2-2.el7.x86_64
--&gt; Processing Dependency: python-pyasn1 &gt;= 0.1.8 for package: python2-cryptography-1.7.2-2.el7.x86_64
--&gt; Processing Dependency: python-idna &gt;= 2.0 for package: python2-cryptography-1.7.2-2.el7.x86_64
--&gt; Processing Dependency: python-cffi &gt;= 1.4.1 for package: python2-cryptography-1.7.2-2.el7.x86_64
--&gt; Processing Dependency: python-setuptools for package: python2-cryptography-1.7.2-2.el7.x86_64
--&gt; Processing Dependency: python-ipaddress for package: python2-cryptography-1.7.2-2.el7.x86_64
--&gt; Processing Dependency: python-enum34 for package: python2-cryptography-1.7.2-2.el7.x86_64
--&gt; Processing Dependency: openssl for package: python2-cryptography-1.7.2-2.el7.x86_64
--&gt; Running transaction check
---&gt; Package libyaml.x86_64 0:0.1.4-11.el7_0 will be installed
---&gt; Package openssl.x86_64 1:1.0.2k-25.el7_9 will be installed
--&gt; Processing Dependency: openssl-libs(x86-64) = 1:1.0.2k-25.el7_9 for package: 1:openssl-1.0.2k-25.el7_9.x86_64
--&gt; Processing Dependency: make for package: 1:openssl-1.0.2k-25.el7_9.x86_64
---&gt; Package python-cffi.x86_64 0:1.6.0-5.el7 will be installed
--&gt; Processing Dependency: python-pycparser for package: python-cffi-1.6.0-5.el7.x86_64
---&gt; Package python-dateutil.noarch 0:1.5-7.el7 will be installed
---&gt; Package python-enum34.noarch 0:1.0.4-1.el7 will be installed
---&gt; Package python-idna.noarch 0:2.4-1.el7 will be installed
---&gt; Package python-ipaddress.noarch 0:1.0.16-2.el7 will be installed
---&gt; Package python-pillow.x86_64 0:2.0.0-23.gitd1c6db8.el7_9 will be installed
--&gt; Processing Dependency: libtiff.so.5(LIBTIFF_4.0)(64bit) for package: python-pillow-2.0.0-23.gitd1c6db8.el7_9.x86_64
--&gt; Processing Dependency: libwebp.so.4()(64bit) for package: python-pillow-2.0.0-23.gitd1c6db8.el7_9.x86_64
--&gt; Processing Dependency: libtiff.so.5()(64bit) for package: python-pillow-2.0.0-23.gitd1c6db8.el7_9.x86_64
---&gt; Package python-setuptools.noarch 0:0.9.8-7.el7 will be installed
--&gt; Processing Dependency: python-backports-ssl_match_hostname for package: python-setuptools-0.9.8-7.el7.noarch
---&gt; Package python-six.noarch 0:1.9.0-2.el7 will be installed
---&gt; Package python2-pyasn1.noarch 0:0.1.9-7.el7 will be installed
--&gt; Running transaction check
---&gt; Package libtiff.x86_64 0:4.0.3-35.el7 will be installed
--&gt; Processing Dependency: libjbig.so.2.0()(64bit) for package: libtiff-4.0.3-35.el7.x86_64
---&gt; Package libwebp.x86_64 0:0.3.0-10.el7_9 will be installed
---&gt; Package make.x86_64 1:3.82-24.el7 will be installed
---&gt; Package openssl-libs.x86_64 1:1.0.2k-19.el7 will be updated
---&gt; Package openssl-libs.x86_64 1:1.0.2k-25.el7_9 will be an update
---&gt; Package python-backports-ssl_match_hostname.noarch 0:3.5.0.1-1.el7 will be installed
--&gt; Processing Dependency: python-backports for package: python-backports-ssl_match_hostname-3.5.0.1-1.el7.noarch
---&gt; Package python-pycparser.noarch 0:2.14-1.el7 will be installed
--&gt; Processing Dependency: python-ply for package: python-pycparser-2.14-1.el7.noarch
--&gt; Running transaction check
---&gt; Package jbigkit-libs.x86_64 0:2.0-11.el7 will be installed
---&gt; Package python-backports.x86_64 0:1.0-8.el7 will be installed
---&gt; Package python-ply.noarch 0:3.4-11.el7 will be installed
--&gt; Finished Dependency Resolution

Dependencies Resolved

================================================================================
 Package                      Arch   Version                      Repository
                                                                           Size
================================================================================
Installing:
 awscli                       noarch 1.14.28-5.el7_5.1            base    1.0 M
Installing for dependencies:
 PyYAML                       x86_64 3.10-11.el7                  base    153 k
 jbigkit-libs                 x86_64 2.0-11.el7                   base     46 k
 libtiff                      x86_64 4.0.3-35.el7                 base    172 k
 libwebp                      x86_64 0.3.0-10.el7_9               updates 170 k
 libyaml                      x86_64 0.1.4-11.el7_0               base     55 k
 make                         x86_64 1:3.82-24.el7                base    421 k
 openssl                      x86_64 1:1.0.2k-25.el7_9            updates 494 k
 python-backports             x86_64 1.0-8.el7                    base    5.8 k
 python-backports-ssl_match_hostname
                              noarch 3.5.0.1-1.el7                base     13 k
 python-cffi                  x86_64 1.6.0-5.el7                  base    218 k
 python-dateutil              noarch 1.5-7.el7                    base     85 k
 python-docutils              noarch 0.11-0.3.20130715svn7687.el7 base    1.5 M
 python-enum34                noarch 1.0.4-1.el7                  base     52 k
 python-idna                  noarch 2.4-1.el7                    base     94 k
 python-ipaddress             noarch 1.0.16-2.el7                 base     34 k
 python-pillow                x86_64 2.0.0-23.gitd1c6db8.el7_9    updates 439 k
 python-ply                   noarch 3.4-11.el7                   base    123 k
 python-pycparser             noarch 2.14-1.el7                   base    104 k
 python-s3transfer            noarch 0.1.13-1.el7_9.2             updates 6.1 M
 python-setuptools            noarch 0.9.8-7.el7                  base    397 k
 python-six                   noarch 1.9.0-2.el7                  base     29 k
 python2-cryptography         x86_64 1.7.2-2.el7                  base    502 k
 python2-pyasn1               noarch 0.1.9-7.el7                  base    100 k
Updating for dependencies:
 openssl-libs                 x86_64 1:1.0.2k-25.el7_9            updates 1.2 M

Transaction Summary
================================================================================
Install  1 Package  (+23 Dependent packages)
Upgrade             (  1 Dependent package)

Total download size: 13 M
Downloading packages:
Delta RPMs disabled because /usr/bin/applydeltarpm not installed.
--------------------------------------------------------------------------------
Total                                               30 MB/s |  13 MB  00:00     
Running transaction check
Running transaction test
Transaction test succeeded
Running transaction
  Installing : python-ipaddress-1.0.16-2.el7.noarch                        1/26 
  Updating   : 1:openssl-libs-1.0.2k-25.el7_9.x86_64                       2/26 
  Installing : python2-pyasn1-0.1.9-7.el7.noarch                           3/26 
  Installing : libyaml-0.1.4-11.el7_0.x86_64                               4/26 
  Installing : PyYAML-3.10-11.el7.x86_64                                   5/26 
  Installing : python-backports-1.0-8.el7.x86_64                           6/26 
  Installing : python-backports-ssl_match_hostname-3.5.0.1-1.el7.noarch    7/26 
  Installing : python-setuptools-0.9.8-7.el7.noarch                        8/26 
  Installing : python-ply-3.4-11.el7.noarch                                9/26 
  Installing : python-pycparser-2.14-1.el7.noarch                         10/26 
  Installing : python-cffi-1.6.0-5.el7.x86_64                             11/26 
  Installing : python-idna-2.4-1.el7.noarch                               12/26 
  Installing : python-six-1.9.0-2.el7.noarch                              13/26 
  Installing : 1:make-3.82-24.el7.x86_64                                  14/26 
  Installing : 1:openssl-1.0.2k-25.el7_9.x86_64                           15/26 
  Installing : python-dateutil-1.5-7.el7.noarch                           16/26 
  Installing : jbigkit-libs-2.0-11.el7.x86_64                             17/26 
  Installing : libtiff-4.0.3-35.el7.x86_64                                18/26 
  Installing : libwebp-0.3.0-10.el7_9.x86_64                              19/26 
  Installing : python-pillow-2.0.0-23.gitd1c6db8.el7_9.x86_64             20/26 
  Installing : python-docutils-0.11-0.3.20130715svn7687.el7.noarch        21/26 
  Installing : python-s3transfer-0.1.13-1.el7_9.2.noarch                  22/26 
  Installing : python-enum34-1.0.4-1.el7.noarch                           23/26 
  Installing : python2-cryptography-1.7.2-2.el7.x86_64                    24/26 
  Installing : awscli-1.14.28-5.el7_5.1.noarch                            25/26 
  Cleanup    : 1:openssl-libs-1.0.2k-19.el7.x86_64                        26/26 
  Verifying  : python-backports-ssl_match_hostname-3.5.0.1-1.el7.noarch    1/26 
  Verifying  : 1:openssl-1.0.2k-25.el7_9.x86_64                            2/26 
  Verifying  : python-enum34-1.0.4-1.el7.noarch                            3/26 
  Verifying  : libwebp-0.3.0-10.el7_9.x86_64                               4/26 
  Verifying  : python-setuptools-0.9.8-7.el7.noarch                        5/26 
  Verifying  : python-docutils-0.11-0.3.20130715svn7687.el7.noarch         6/26 
  Verifying  : jbigkit-libs-2.0-11.el7.x86_64                              7/26 
  Verifying  : python-dateutil-1.5-7.el7.noarch                            8/26 
  Verifying  : libtiff-4.0.3-35.el7.x86_64                                 9/26 
  Verifying  : 1:make-3.82-24.el7.x86_64                                  10/26 
  Verifying  : python-six-1.9.0-2.el7.noarch                              11/26 
  Verifying  : python-idna-2.4-1.el7.noarch                               12/26 
  Verifying  : python-ply-3.4-11.el7.noarch                               13/26 
  Verifying  : 1:openssl-libs-1.0.2k-25.el7_9.x86_64                      14/26 
  Verifying  : python-backports-1.0-8.el7.x86_64                          15/26 
  Verifying  : python-cffi-1.6.0-5.el7.x86_64                             16/26 
  Verifying  : awscli-1.14.28-5.el7_5.1.noarch                            17/26 
  Verifying  : python-pycparser-2.14-1.el7.noarch                         18/26 
  Verifying  : libyaml-0.1.4-11.el7_0.x86_64                              19/26 
  Verifying  : python-s3transfer-0.1.13-1.el7_9.2.noarch                  20/26 
  Verifying  : python-ipaddress-1.0.16-2.el7.noarch                       21/26 
  Verifying  : python2-pyasn1-0.1.9-7.el7.noarch                          22/26 
  Verifying  : PyYAML-3.10-11.el7.x86_64                                  23/26 
  Verifying  : python-pillow-2.0.0-23.gitd1c6db8.el7_9.x86_64             24/26 
  Verifying  : python2-cryptography-1.7.2-2.el7.x86_64                    25/26 
  Verifying  : 1:openssl-libs-1.0.2k-19.el7.x86_64                        26/26 

Installed:
  awscli.noarch 0:1.14.28-5.el7_5.1                                             

Dependency Installed:
  PyYAML.x86_64 0:3.10-11.el7                                                   
  jbigkit-libs.x86_64 0:2.0-11.el7                                              
  libtiff.x86_64 0:4.0.3-35.el7                                                 
  libwebp.x86_64 0:0.3.0-10.el7_9                                               
  libyaml.x86_64 0:0.1.4-11.el7_0                                               
  make.x86_64 1:3.82-24.el7                                                     
  openssl.x86_64 1:1.0.2k-25.el7_9                                              
  python-backports.x86_64 0:1.0-8.el7                                           
  python-backports-ssl_match_hostname.noarch 0:3.5.0.1-1.el7                    
  python-cffi.x86_64 0:1.6.0-5.el7                                              
  python-dateutil.noarch 0:1.5-7.el7                                            
  python-docutils.noarch 0:0.11-0.3.20130715svn7687.el7                         
  python-enum34.noarch 0:1.0.4-1.el7                                            
  python-idna.noarch 0:2.4-1.el7                                                
  python-ipaddress.noarch 0:1.0.16-2.el7                                        
  python-pillow.x86_64 0:2.0.0-23.gitd1c6db8.el7_9                              
  python-ply.noarch 0:3.4-11.el7                                                
  python-pycparser.noarch 0:2.14-1.el7                                          
  python-s3transfer.noarch 0:0.1.13-1.el7_9.2                                   
  python-setuptools.noarch 0:0.9.8-7.el7                                        
  python-six.noarch 0:1.9.0-2.el7                                               
  python2-cryptography.x86_64 0:1.7.2-2.el7                                     
  python2-pyasn1.noarch 0:0.1.9-7.el7                                           

Dependency Updated:
  openssl-libs.x86_64 1:1.0.2k-25.el7_9                                         

Complete!</msg>
<status status="PASS" starttime="20220516 18:15:58.496" endtime="20220516 18:15:58.498"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:15:58.499" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:15:58.499" endtime="20220516 18:15:58.500"/>
</kw>
<status status="PASS" starttime="20220516 18:15:34.715" endtime="20220516 18:15:58.500"/>
</kw>
<msg timestamp="20220516 18:15:58.500" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:15:34.715" endtime="20220516 18:15:58.504"/>
</kw>
<status status="PASS" starttime="20220516 18:15:34.714" endtime="20220516 18:15:58.506"/>
</kw>
<status status="PASS" starttime="20220516 18:15:34.713" endtime="20220516 18:15:58.506"/>
</kw>
<status status="PASS" starttime="20220516 18:15:34.712" endtime="20220516 18:15:58.506"/>
</kw>
<status status="PASS" starttime="20220516 18:15:34.505" endtime="20220516 18:15:58.507"/>
</kw>
<status status="PASS" starttime="20220516 18:15:34.504" endtime="20220516 18:15:58.507"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:15:58.523" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:15:58.526" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:15:58.526" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220516 18:15:58.519" endtime="20220516 18:15:58.526"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:15:58.528" level="INFO">scm</msg>
<status status="PASS" starttime="20220516 18:15:58.527" endtime="20220516 18:15:58.528"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:15:58.529" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:15:58.528" endtime="20220516 18:15:58.529"/>
</kw>
<status status="PASS" starttime="20220516 18:15:58.518" endtime="20220516 18:15:58.530"/>
</kw>
<msg timestamp="20220516 18:15:58.530" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:15:58.518" endtime="20220516 18:15:58.531"/>
</kw>
<msg timestamp="20220516 18:15:58.531" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220516 18:15:58.512" endtime="20220516 18:15:58.531"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220516 18:15:58.533" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220516 18:15:58.531" endtime="20220516 18:15:58.534"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:15:58.540" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:15:58.548" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:15:58.549" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:15:58.537" endtime="20220516 18:15:58.549"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:15:58.550" level="INFO"/>
<status status="PASS" starttime="20220516 18:15:58.549" endtime="20220516 18:15:58.550"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:15:58.551" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:15:58.550" endtime="20220516 18:15:58.551"/>
</kw>
<status status="PASS" starttime="20220516 18:15:58.536" endtime="20220516 18:15:58.552"/>
</kw>
<msg timestamp="20220516 18:15:58.552" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:15:58.535" endtime="20220516 18:15:58.553"/>
</kw>
<status status="PASS" starttime="20220516 18:15:58.534" endtime="20220516 18:15:58.553"/>
</kw>
<status status="PASS" starttime="20220516 18:15:58.534" endtime="20220516 18:15:58.553"/>
</kw>
<status status="PASS" starttime="20220516 18:15:58.511" endtime="20220516 18:15:58.553"/>
</kw>
<status status="PASS" starttime="20220516 18:15:58.511" endtime="20220516 18:15:58.553"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:15:58.559" level="INFO">Running command 'ozone s3 getsecret  2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:16:02.600" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:16:02.600" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=ab69031468512671dc0331ce2b0628bd414985a9b0c79936ff73dd7b53b6c65f</msg>
<status status="PASS" starttime="20220516 18:15:58.557" endtime="20220516 18:16:02.601"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:16:02.603" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=ab69031468512671dc0331ce2b0628bd414985a9b0c79936ff73dd7b53b6c65f</msg>
<status status="PASS" starttime="20220516 18:16:02.602" endtime="20220516 18:16:02.603"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:16:02.604" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:16:02.603" endtime="20220516 18:16:02.604"/>
</kw>
<status status="PASS" starttime="20220516 18:15:58.556" endtime="20220516 18:16:02.604"/>
</kw>
<msg timestamp="20220516 18:16:02.604" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:15:58.556" endtime="20220516 18:16:02.605"/>
</kw>
<msg timestamp="20220516 18:16:02.606" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=ab69031468512671dc0331ce2b0628bd414985a9b0c79936ff73dd7b53b6c65f</msg>
<status status="PASS" starttime="20220516 18:15:58.555" endtime="20220516 18:16:02.606"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20220516 18:16:02.607" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20220516 18:16:02.606" endtime="20220516 18:16:02.607"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>sdsdasaasdasd</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20220516 18:16:02.608" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20220516 18:16:02.607" endtime="20220516 18:16:02.608"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20220516 18:16:02.609" level="INFO">${secret} = ['ab69031468512671dc0331ce2b0628bd414985a9b0c79936ff73dd7b53b6c65f']</msg>
<status status="PASS" starttime="20220516 18:16:02.608" endtime="20220516 18:16:02.609"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220516 18:16:02.611" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220516 18:16:02.609" endtime="20220516 18:16:02.611"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220516 18:16:02.612" level="INFO">${secret} = ab69031468512671dc0331ce2b0628bd414985a9b0c79936ff73dd7b53b6c65f</msg>
<status status="PASS" starttime="20220516 18:16:02.611" endtime="20220516 18:16:02.613"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:16:02.618" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:16:03.278" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:16:03.278" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:16:02.615" endtime="20220516 18:16:03.278"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:16:03.280" level="INFO"/>
<status status="PASS" starttime="20220516 18:16:03.279" endtime="20220516 18:16:03.280"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:16:03.281" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:16:03.280" endtime="20220516 18:16:03.281"/>
</kw>
<status status="PASS" starttime="20220516 18:16:02.614" endtime="20220516 18:16:03.281"/>
</kw>
<msg timestamp="20220516 18:16:03.281" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:16:02.613" endtime="20220516 18:16:03.282"/>
</kw>
<status status="PASS" starttime="20220516 18:16:02.613" endtime="20220516 18:16:03.283"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:16:03.288" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:16:03.907" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:16:03.908" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:16:03.285" endtime="20220516 18:16:03.908"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:16:03.909" level="INFO"/>
<status status="PASS" starttime="20220516 18:16:03.908" endtime="20220516 18:16:03.909"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:16:03.910" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:16:03.909" endtime="20220516 18:16:03.910"/>
</kw>
<status status="PASS" starttime="20220516 18:16:03.284" endtime="20220516 18:16:03.911"/>
</kw>
<msg timestamp="20220516 18:16:03.911" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:16:03.284" endtime="20220516 18:16:03.912"/>
</kw>
<status status="PASS" starttime="20220516 18:16:03.283" endtime="20220516 18:16:03.912"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:16:03.917" level="INFO">Running command 'aws configure set aws_secret_access_key ab69031468512671dc0331ce2b0628bd414985a9b0c79936ff73dd7b53b6c65f 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:16:04.560" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:16:04.560" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:16:03.915" endtime="20220516 18:16:04.560"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:16:04.562" level="INFO"/>
<status status="PASS" starttime="20220516 18:16:04.561" endtime="20220516 18:16:04.562"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:16:04.563" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:16:04.563" endtime="20220516 18:16:04.563"/>
</kw>
<status status="PASS" starttime="20220516 18:16:03.914" endtime="20220516 18:16:04.564"/>
</kw>
<msg timestamp="20220516 18:16:04.564" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:16:03.913" endtime="20220516 18:16:04.565"/>
</kw>
<status status="PASS" starttime="20220516 18:16:03.913" endtime="20220516 18:16:04.566"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:16:04.571" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:16:05.220" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:16:05.220" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:16:04.568" endtime="20220516 18:16:05.220"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:16:05.222" level="INFO"/>
<status status="PASS" starttime="20220516 18:16:05.221" endtime="20220516 18:16:05.223"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:16:05.223" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:16:05.223" endtime="20220516 18:16:05.223"/>
</kw>
<status status="PASS" starttime="20220516 18:16:04.568" endtime="20220516 18:16:05.224"/>
</kw>
<msg timestamp="20220516 18:16:05.224" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:16:04.567" endtime="20220516 18:16:05.225"/>
</kw>
<status status="PASS" starttime="20220516 18:16:04.566" endtime="20220516 18:16:05.225"/>
</kw>
<status status="PASS" starttime="20220516 18:15:58.554" endtime="20220516 18:16:05.225"/>
</kw>
<status status="PASS" starttime="20220516 18:15:58.554" endtime="20220516 18:16:05.226"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220516 18:16:05.226" endtime="20220516 18:16:05.226"/>
</kw>
<status status="PASS" starttime="20220516 18:15:58.508" endtime="20220516 18:16:05.227"/>
</kw>
<status status="PASS" starttime="20220516 18:15:58.507" endtime="20220516 18:16:05.227"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${BUCKET}</var>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create bucket" library="commonawslib">
<kw name="Generate Ozone String" library="commonawslib">
<var>${postfix}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220516 18:16:05.229" level="INFO">${randStr} = 6636182919</msg>
<status status="PASS" starttime="20220516 18:16:05.228" endtime="20220516 18:16:05.229"/>
</kw>
<msg timestamp="20220516 18:16:05.230" level="INFO">${postfix} = ozone-test-6636182919</msg>
<status status="PASS" starttime="20220516 18:16:05.228" endtime="20220516 18:16:05.230"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bucket}</var>
<arg>bucket-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220516 18:16:05.230" level="INFO">${bucket} = bucket-ozone-test-6636182919</msg>
<status status="PASS" starttime="20220516 18:16:05.230" endtime="20220516 18:16:05.230"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arg>${bucket}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:16:05.238" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-ozone-test-6636182919 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:16:08.231" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:16:08.231" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-6636182919"
}</msg>
<status status="PASS" starttime="20220516 18:16:05.236" endtime="20220516 18:16:08.231"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:16:08.237" level="INFO">{
    "Location": "http://s3g:9878/bucket-ozone-test-6636182919"
}</msg>
<status status="PASS" starttime="20220516 18:16:08.236" endtime="20220516 18:16:08.237"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:16:08.238" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:16:08.237" endtime="20220516 18:16:08.238"/>
</kw>
<status status="PASS" starttime="20220516 18:16:05.235" endtime="20220516 18:16:08.238"/>
</kw>
<msg timestamp="20220516 18:16:08.239" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:16:05.235" endtime="20220516 18:16:08.240"/>
</kw>
<msg timestamp="20220516 18:16:08.240" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-6636182919"
}</msg>
<status status="PASS" starttime="20220516 18:16:05.234" endtime="20220516 18:16:08.240"/>
</kw>
<msg timestamp="20220516 18:16:08.241" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-ozone-test-6636182919"
}</msg>
<status status="PASS" starttime="20220516 18:16:05.231" endtime="20220516 18:16:08.241"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 18:16:08.241" endtime="20220516 18:16:08.242"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 18:16:08.242" endtime="20220516 18:16:08.243"/>
</kw>
<status status="PASS" starttime="20220516 18:16:05.231" endtime="20220516 18:16:08.243"/>
</kw>
<status status="PASS" starttime="20220516 18:16:05.227" endtime="20220516 18:16:08.243"/>
</kw>
<msg timestamp="20220516 18:16:08.244" level="INFO">${BUCKET} = bucket-ozone-test-6636182919</msg>
<status status="PASS" starttime="20220516 18:16:05.227" endtime="20220516 18:16:08.244"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220516 18:16:08.244" level="INFO">${BUCKET} = bucket-ozone-test-6636182919</msg>
<status status="PASS" starttime="20220516 18:16:08.244" endtime="20220516 18:16:08.244"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220516 18:16:08.245" endtime="20220516 18:16:08.245"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220516 18:16:08.245" endtime="20220516 18:16:08.246"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220516 18:16:08.246" endtime="20220516 18:16:08.246"/>
</kw>
<status status="PASS" starttime="20220516 18:15:34.498" endtime="20220516 18:16:08.247"/>
</kw>
<status status="PASS" starttime="20220516 18:15:34.498" endtime="20220516 18:16:08.247"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} create-bucket --bucket bucket-test123</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:16:08.252" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-test123 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:16:09.048" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:16:09.048" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-test123"
}</msg>
<status status="PASS" starttime="20220516 18:16:08.249" endtime="20220516 18:16:09.048"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:16:09.051" level="INFO">{
    "Location": "http://s3g:9878/bucket-test123"
}</msg>
<status status="PASS" starttime="20220516 18:16:09.048" endtime="20220516 18:16:09.051"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:16:09.052" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:16:09.051" endtime="20220516 18:16:09.052"/>
</kw>
<status status="PASS" starttime="20220516 18:16:08.248" endtime="20220516 18:16:09.052"/>
</kw>
<msg timestamp="20220516 18:16:09.053" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:16:08.248" endtime="20220516 18:16:09.053"/>
</kw>
<msg timestamp="20220516 18:16:09.053" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-test123"
}</msg>
<status status="PASS" starttime="20220516 18:16:08.247" endtime="20220516 18:16:09.053"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} list-buckets</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:16:09.058" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-buckets 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:16:09.881" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:16:09.881" level="INFO">${output} = {
    "Buckets": [
        {
            "Name": "bucket-ozone-test-6636182919",
            "CreationDate": "2022-05-16T18:16:08.119Z"
        },
        {
            "Name": "bucket-test123",
     ...</msg>
<status status="PASS" starttime="20220516 18:16:09.056" endtime="20220516 18:16:09.881"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:16:09.882" level="INFO">{
    "Buckets": [
        {
            "Name": "bucket-ozone-test-6636182919",
            "CreationDate": "2022-05-16T18:16:08.119Z"
        },
        {
            "Name": "bucket-test123",
            "CreationDate": "2022-05-16T18:16:08.964Z"
        }
    ]
}</msg>
<status status="PASS" starttime="20220516 18:16:09.881" endtime="20220516 18:16:09.883"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:16:09.883" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:16:09.883" endtime="20220516 18:16:09.883"/>
</kw>
<status status="PASS" starttime="20220516 18:16:09.055" endtime="20220516 18:16:09.884"/>
</kw>
<msg timestamp="20220516 18:16:09.884" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:16:09.055" endtime="20220516 18:16:09.885"/>
</kw>
<msg timestamp="20220516 18:16:09.885" level="INFO">${output} = {
    "Buckets": [
        {
            "Name": "bucket-ozone-test-6636182919",
            "CreationDate": "2022-05-16T18:16:08.119Z"
        },
        {
            "Name": "bucket-test123",
     ...</msg>
<status status="PASS" starttime="20220516 18:16:09.054" endtime="20220516 18:16:09.885"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>bucket-test123</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 18:16:09.885" endtime="20220516 18:16:09.886"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220516 18:15:34.497" endtime="20220516 18:16:09.886"/>
</test>
<test id="s1-s2-s4-t2" name="Secure S3 put-object test">
<kw name="Set Variable" library="BuiltIn">
<var>${testFilePath}</var>
<arg>${TEMPDIR}/${TEST_FILE}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220516 18:16:09.890" level="INFO">${testFilePath} = /tmp/NOTICE.txt</msg>
<status status="PASS" starttime="20220516 18:16:09.889" endtime="20220516 18:16:09.890"/>
</kw>
<kw name="Copy File" library="OperatingSystem">
<arg>${TEST_FILE}</arg>
<arg>${testFilePath}</arg>
<doc>Copies the source file into the destination.</doc>
<msg timestamp="20220516 18:16:09.892" level="INFO" html="true">Copied file from '&lt;a href="file:///opt/hadoop/NOTICE.txt"&gt;/opt/hadoop/NOTICE.txt&lt;/a&gt;' to '&lt;a href="file:///tmp/NOTICE.txt"&gt;/tmp/NOTICE.txt&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20220516 18:16:09.890" endtime="20220516 18:16:09.892"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint ${ENDPOINT_URL} put-object --bucket=bucket-test123 --key=tmp1/tmp2/NOTICE.txt --body=${testFilePath}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:16:09.897" level="INFO">Running command 'aws s3api --endpoint http://s3g:9878 put-object --bucket=bucket-test123 --key=tmp1/tmp2/NOTICE.txt --body=/tmp/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:16:14.964" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:16:14.964" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:16:09.895" endtime="20220516 18:16:14.964"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:16:14.966" level="INFO"/>
<status status="PASS" starttime="20220516 18:16:14.964" endtime="20220516 18:16:14.966"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:16:14.967" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:16:14.966" endtime="20220516 18:16:14.967"/>
</kw>
<status status="PASS" starttime="20220516 18:16:09.894" endtime="20220516 18:16:14.968"/>
</kw>
<msg timestamp="20220516 18:16:14.968" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:16:09.894" endtime="20220516 18:16:14.968"/>
</kw>
<msg timestamp="20220516 18:16:14.969" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:16:09.892" endtime="20220516 18:16:14.969"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint ${ENDPOINT_URL} list-objects --bucket=bucket-test123</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:16:14.974" level="INFO">Running command 'aws s3api --endpoint http://s3g:9878 list-objects --bucket=bucket-test123 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:16:15.787" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:16:15.787" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "tmp1/tmp2/NOTICE.txt",
            "LastModified": "2022-05-16T18:16:14.882Z",
            "ETag": "2022-05-16T18:16:14.882Z",
            "Size": 175...</msg>
<status status="PASS" starttime="20220516 18:16:14.971" endtime="20220516 18:16:15.787"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:16:15.789" level="INFO">{
    "Contents": [
        {
            "Key": "tmp1/tmp2/NOTICE.txt",
            "LastModified": "2022-05-16T18:16:14.882Z",
            "ETag": "2022-05-16T18:16:14.882Z",
            "Size": 17526,
            "StorageClass": "STANDARD"
        }
    ]
}</msg>
<status status="PASS" starttime="20220516 18:16:15.788" endtime="20220516 18:16:15.789"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:16:15.789" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:16:15.789" endtime="20220516 18:16:15.790"/>
</kw>
<status status="PASS" starttime="20220516 18:16:14.970" endtime="20220516 18:16:15.790"/>
</kw>
<msg timestamp="20220516 18:16:15.790" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:16:14.970" endtime="20220516 18:16:15.791"/>
</kw>
<msg timestamp="20220516 18:16:15.791" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "tmp1/tmp2/NOTICE.txt",
            "LastModified": "2022-05-16T18:16:14.882Z",
            "ETag": "2022-05-16T18:16:14.882Z",
            "Size": 175...</msg>
<status status="PASS" starttime="20220516 18:16:14.969" endtime="20220516 18:16:15.791"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>tmp1/tmp2/NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 18:16:15.791" endtime="20220516 18:16:15.792"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint ${ENDPOINT_URL} put-object --bucket=bucket-test123 --key=tmp3//tmp4/NOTICE.txt --body=${testFilePath}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:16:15.797" level="INFO">Running command 'aws s3api --endpoint http://s3g:9878 put-object --bucket=bucket-test123 --key=tmp3//tmp4/NOTICE.txt --body=/tmp/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:16:19.154" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:16:19.154" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:16:15.794" endtime="20220516 18:16:19.154"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:16:19.156" level="INFO"/>
<status status="PASS" starttime="20220516 18:16:19.155" endtime="20220516 18:16:19.156"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:16:19.157" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:16:19.156" endtime="20220516 18:16:19.157"/>
</kw>
<status status="PASS" starttime="20220516 18:16:15.793" endtime="20220516 18:16:19.157"/>
</kw>
<msg timestamp="20220516 18:16:19.157" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:16:15.793" endtime="20220516 18:16:19.158"/>
</kw>
<msg timestamp="20220516 18:16:19.158" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:16:15.792" endtime="20220516 18:16:19.158"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint ${ENDPOINT_URL} list-objects --bucket=bucket-test123</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:16:19.163" level="INFO">Running command 'aws s3api --endpoint http://s3g:9878 list-objects --bucket=bucket-test123 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:16:19.938" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:16:19.938" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "tmp1/tmp2/NOTICE.txt",
            "LastModified": "2022-05-16T18:16:14.882Z",
            "ETag": "2022-05-16T18:16:14.882Z",
            "Size": 175...</msg>
<status status="PASS" starttime="20220516 18:16:19.161" endtime="20220516 18:16:19.938"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:16:19.939" level="INFO">{
    "Contents": [
        {
            "Key": "tmp1/tmp2/NOTICE.txt",
            "LastModified": "2022-05-16T18:16:14.882Z",
            "ETag": "2022-05-16T18:16:14.882Z",
            "Size": 17526,
            "StorageClass": "STANDARD"
        },
        {
            "Key": "tmp3//tmp4/NOTICE.txt",
            "LastModified": "2022-05-16T18:16:19.086Z",
            "ETag": "2022-05-16T18:16:19.086Z",
            "Size": 17526,
            "StorageClass": "STANDARD"
        }
    ]
}</msg>
<status status="PASS" starttime="20220516 18:16:19.938" endtime="20220516 18:16:19.940"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:16:19.940" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:16:19.940" endtime="20220516 18:16:19.940"/>
</kw>
<status status="PASS" starttime="20220516 18:16:19.160" endtime="20220516 18:16:19.941"/>
</kw>
<msg timestamp="20220516 18:16:19.941" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:16:19.160" endtime="20220516 18:16:19.941"/>
</kw>
<msg timestamp="20220516 18:16:19.942" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "tmp1/tmp2/NOTICE.txt",
            "LastModified": "2022-05-16T18:16:14.882Z",
            "ETag": "2022-05-16T18:16:14.882Z",
            "Size": 175...</msg>
<status status="PASS" starttime="20220516 18:16:19.159" endtime="20220516 18:16:19.942"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>tmp3//tmp4/NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 18:16:19.942" endtime="20220516 18:16:19.943"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint ${ENDPOINT_URL} put-object --bucket=bucket-test123 --key=//tmp5/tmp6/NOTICE.txt --body=${testFilePath}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:16:19.947" level="INFO">Running command 'aws s3api --endpoint http://s3g:9878 put-object --bucket=bucket-test123 --key=//tmp5/tmp6/NOTICE.txt --body=/tmp/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:16:23.332" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:16:23.332" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:16:19.945" endtime="20220516 18:16:23.332"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:16:23.333" level="INFO"/>
<status status="PASS" starttime="20220516 18:16:23.332" endtime="20220516 18:16:23.333"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:16:23.334" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:16:23.334" endtime="20220516 18:16:23.334"/>
</kw>
<status status="PASS" starttime="20220516 18:16:19.944" endtime="20220516 18:16:23.335"/>
</kw>
<msg timestamp="20220516 18:16:23.335" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:16:19.944" endtime="20220516 18:16:23.335"/>
</kw>
<msg timestamp="20220516 18:16:23.336" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:16:19.943" endtime="20220516 18:16:23.336"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint ${ENDPOINT_URL} list-objects --bucket=bucket-test123</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:16:23.341" level="INFO">Running command 'aws s3api --endpoint http://s3g:9878 list-objects --bucket=bucket-test123 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:16:24.067" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:16:24.067" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "//tmp5/tmp6/NOTICE.txt",
            "LastModified": "2022-05-16T18:16:23.240Z",
            "ETag": "2022-05-16T18:16:23.240Z",
            "Size": 1...</msg>
<status status="PASS" starttime="20220516 18:16:23.338" endtime="20220516 18:16:24.068"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:16:24.069" level="INFO">{
    "Contents": [
        {
            "Key": "//tmp5/tmp6/NOTICE.txt",
            "LastModified": "2022-05-16T18:16:23.240Z",
            "ETag": "2022-05-16T18:16:23.240Z",
            "Size": 17526,
            "StorageClass": "STANDARD"
        },
        {
            "Key": "tmp1/tmp2/NOTICE.txt",
            "LastModified": "2022-05-16T18:16:14.882Z",
            "ETag": "2022-05-16T18:16:14.882Z",
            "Size": 17526,
            "StorageClass": "STANDARD"
        },
        {
            "Key": "tmp3//tmp4/NOTICE.txt",
            "LastModified": "2022-05-16T18:16:19.086Z",
            "ETag": "2022-05-16T18:16:19.086Z",
            "Size": 17526,
            "StorageClass": "STANDARD"
        }
    ]
}</msg>
<status status="PASS" starttime="20220516 18:16:24.068" endtime="20220516 18:16:24.069"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:16:24.070" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:16:24.070" endtime="20220516 18:16:24.070"/>
</kw>
<status status="PASS" starttime="20220516 18:16:23.338" endtime="20220516 18:16:24.071"/>
</kw>
<msg timestamp="20220516 18:16:24.071" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:16:23.337" endtime="20220516 18:16:24.071"/>
</kw>
<msg timestamp="20220516 18:16:24.072" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "//tmp5/tmp6/NOTICE.txt",
            "LastModified": "2022-05-16T18:16:23.240Z",
            "ETag": "2022-05-16T18:16:23.240Z",
            "Size": 1...</msg>
<status status="PASS" starttime="20220516 18:16:23.336" endtime="20220516 18:16:24.072"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>//tmp5/tmp6/NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 18:16:24.072" endtime="20220516 18:16:24.073"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220516 18:16:09.888" endtime="20220516 18:16:24.073"/>
</test>
<test id="s1-s2-s4-t3" name="Secure S3 test Failure">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:16:24.080" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:16:24.730" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:16:24.730" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:16:24.078" endtime="20220516 18:16:24.730"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:16:24.731" level="INFO"/>
<status status="PASS" starttime="20220516 18:16:24.730" endtime="20220516 18:16:24.731"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:16:24.732" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:16:24.731" endtime="20220516 18:16:24.732"/>
</kw>
<status status="PASS" starttime="20220516 18:16:24.077" endtime="20220516 18:16:24.733"/>
</kw>
<msg timestamp="20220516 18:16:24.733" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:16:24.076" endtime="20220516 18:16:24.733"/>
</kw>
<status status="PASS" starttime="20220516 18:16:24.076" endtime="20220516 18:16:24.734"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:16:24.738" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:16:25.379" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:16:25.379" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:16:24.735" endtime="20220516 18:16:25.379"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:16:25.381" level="INFO"/>
<status status="PASS" starttime="20220516 18:16:25.380" endtime="20220516 18:16:25.381"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:16:25.382" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:16:25.381" endtime="20220516 18:16:25.382"/>
</kw>
<status status="PASS" starttime="20220516 18:16:24.735" endtime="20220516 18:16:25.382"/>
</kw>
<msg timestamp="20220516 18:16:25.383" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:16:24.734" endtime="20220516 18:16:25.384"/>
</kw>
<status status="PASS" starttime="20220516 18:16:24.734" endtime="20220516 18:16:25.384"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:16:25.388" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:16:26.018" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:16:26.018" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:16:25.386" endtime="20220516 18:16:26.019"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:16:26.020" level="INFO"/>
<status status="PASS" starttime="20220516 18:16:26.019" endtime="20220516 18:16:26.020"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:16:26.021" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:16:26.020" endtime="20220516 18:16:26.021"/>
</kw>
<status status="PASS" starttime="20220516 18:16:25.385" endtime="20220516 18:16:26.021"/>
</kw>
<msg timestamp="20220516 18:16:26.021" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:16:25.385" endtime="20220516 18:16:26.022"/>
</kw>
<status status="PASS" starttime="20220516 18:16:25.384" endtime="20220516 18:16:26.022"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:16:26.027" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:16:26.644" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:16:26.644" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:16:26.024" endtime="20220516 18:16:26.644"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:16:26.645" level="INFO"/>
<status status="PASS" starttime="20220516 18:16:26.645" endtime="20220516 18:16:26.646"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:16:26.646" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:16:26.646" endtime="20220516 18:16:26.647"/>
</kw>
<status status="PASS" starttime="20220516 18:16:26.024" endtime="20220516 18:16:26.647"/>
</kw>
<msg timestamp="20220516 18:16:26.647" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:16:26.023" endtime="20220516 18:16:26.648"/>
</kw>
<status status="PASS" starttime="20220516 18:16:26.023" endtime="20220516 18:16:26.648"/>
</kw>
<status status="PASS" starttime="20220516 18:16:24.075" endtime="20220516 18:16:26.649"/>
</kw>
<status status="PASS" starttime="20220516 18:16:24.075" endtime="20220516 18:16:26.649"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${result}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} create-bucket --bucket bucket-test123</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:16:26.651" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-test123 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:16:27.745" level="INFO">${rc} = 255</msg>
<msg timestamp="20220516 18:16:27.745" level="INFO">${result} = 
An error occurred (AccessDenied) when calling the CreateBucket operation: User doesn't have the right to access this resource.</msg>
<status status="PASS" starttime="20220516 18:16:26.649" endtime="20220516 18:16:27.745"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${rc} &gt; 0</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220516 18:16:27.746" endtime="20220516 18:16:27.747"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220516 18:16:24.074" endtime="20220516 18:16:27.747"/>
</test>
<doc>Smoke test to start cluster with docker-compose environments.</doc>
<status status="PASS" starttime="20220516 18:15:34.457" endtime="20220516 18:16:27.748"/>
</suite>
<suite id="s1-s2-s5" name="Ozone-Secure-Token" source="/opt/hadoop/smoketest/security/ozone-secure-token.robot">
<test id="s1-s2-s5-t1" name="Token Test">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Token Test in Unsecure Cluster</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220516 18:16:27.761" endtime="20220516 18:16:27.761"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Token Test in Secure Cluster</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Token Test in Secure Cluster">
<kw name="Get and use Token in Secure Cluster">
<kw name="Execute" library="os">
<arg>ozone sh token get -t /tmp/ozone.token</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:16:27.768" level="INFO">Running command 'ozone sh token get -t /tmp/ozone.token 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:16:32.582" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:16:32.582" level="INFO">${output} = Successfully get token for service 172.18.0.9:9862
Kind: OzoneToken, Service: 172.18.0.9:9862, Ident: (OzoneToken owner=testuser/scm@EXAMPLE.COM, renewer=testuser, realUser=, issueDate=2022-05-16T18:1...</msg>
<status status="PASS" starttime="20220516 18:16:27.764" endtime="20220516 18:16:32.582"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:16:32.584" level="INFO">Successfully get token for service 172.18.0.9:9862
Kind: OzoneToken, Service: 172.18.0.9:9862, Ident: (OzoneToken owner=testuser/scm@EXAMPLE.COM, renewer=testuser, realUser=, issueDate=2022-05-16T18:16:32.372Z, maxDate=2022-05-23T18:16:32.372Z, sequenceNumber=1, masterKeyId=1, strToSign=null, signature=null, awsAccessKeyId=null, omServiceId=omServiceIdDefault)
Token persisted to /tmp/ozone.token successfully!</msg>
<status status="PASS" starttime="20220516 18:16:32.583" endtime="20220516 18:16:32.584"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:16:32.584" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:16:32.584" endtime="20220516 18:16:32.585"/>
</kw>
<status status="PASS" starttime="20220516 18:16:27.764" endtime="20220516 18:16:32.585"/>
</kw>
<msg timestamp="20220516 18:16:32.585" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:16:27.763" endtime="20220516 18:16:32.586"/>
</kw>
<status status="PASS" starttime="20220516 18:16:27.763" endtime="20220516 18:16:32.586"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>/tmp/ozone.token</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20220516 18:16:32.587" level="INFO" html="true">File '&lt;a href="file:///tmp/ozone.token"&gt;/tmp/ozone.token&lt;/a&gt;' contains 402 bytes.</msg>
<status status="PASS" starttime="20220516 18:16:32.586" endtime="20220516 18:16:32.587"/>
</kw>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:16:32.592" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:16:32.600" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:16:32.600" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:16:32.589" endtime="20220516 18:16:32.600"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:16:32.601" level="INFO"/>
<status status="PASS" starttime="20220516 18:16:32.600" endtime="20220516 18:16:32.601"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:16:32.602" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:16:32.601" endtime="20220516 18:16:32.602"/>
</kw>
<status status="PASS" starttime="20220516 18:16:32.588" endtime="20220516 18:16:32.603"/>
</kw>
<msg timestamp="20220516 18:16:32.603" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:16:32.588" endtime="20220516 18:16:32.603"/>
</kw>
<status status="PASS" starttime="20220516 18:16:32.587" endtime="20220516 18:16:32.604"/>
</kw>
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>HADOOP_TOKEN_FILE_LOCATION</arg>
<arg>/tmp/ozone.token</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20220516 18:16:32.604" level="INFO">Environment variable 'HADOOP_TOKEN_FILE_LOCATION' set to value '/tmp/ozone.token'.</msg>
<status status="PASS" starttime="20220516 18:16:32.604" endtime="20220516 18:16:32.604"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume list /</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:16:32.608" level="INFO">Running command 'ozone sh volume list / 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:16:37.333" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:16:37.334" level="INFO">${output} = [ ]</msg>
<status status="PASS" starttime="20220516 18:16:32.607" endtime="20220516 18:16:37.334"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:16:37.335" level="INFO">[ ]</msg>
<status status="PASS" starttime="20220516 18:16:37.334" endtime="20220516 18:16:37.335"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:16:37.336" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:16:37.336" endtime="20220516 18:16:37.337"/>
</kw>
<status status="PASS" starttime="20220516 18:16:32.606" endtime="20220516 18:16:37.337"/>
</kw>
<msg timestamp="20220516 18:16:37.337" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:16:32.605" endtime="20220516 18:16:37.338"/>
</kw>
<msg timestamp="20220516 18:16:37.338" level="INFO">${output} = [ ]</msg>
<status status="PASS" starttime="20220516 18:16:32.605" endtime="20220516 18:16:37.338"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Client cannot authenticate</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 18:16:37.338" endtime="20220516 18:16:37.339"/>
</kw>
<kw name="Remove Environment Variable" library="OperatingSystem">
<arg>HADOOP_TOKEN_FILE_LOCATION</arg>
<doc>Deletes the specified environment variable.</doc>
<msg timestamp="20220516 18:16:37.340" level="INFO">Environment variable 'HADOOP_TOKEN_FILE_LOCATION' deleted.</msg>
<status status="PASS" starttime="20220516 18:16:37.339" endtime="20220516 18:16:37.340"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${output}</var>
<arg>ozone sh volume list /</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:16:37.343" level="INFO">Running command 'ozone sh volume list / 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:16:41.222" level="INFO">${rc} = 255</msg>
<msg timestamp="20220516 18:16:41.222" level="INFO">${output} = org.apache.hadoop.security.AccessControlException: Client cannot authenticate via:[TOKEN, KERBEROS]</msg>
<status status="PASS" starttime="20220516 18:16:37.341" endtime="20220516 18:16:41.222"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:16:41.224" level="INFO">org.apache.hadoop.security.AccessControlException: Client cannot authenticate via:[TOKEN, KERBEROS]</msg>
<status status="PASS" starttime="20220516 18:16:41.223" endtime="20220516 18:16:41.224"/>
</kw>
<msg timestamp="20220516 18:16:41.224" level="INFO">${output} = org.apache.hadoop.security.AccessControlException: Client cannot authenticate via:[TOKEN, KERBEROS]</msg>
<status status="PASS" starttime="20220516 18:16:37.340" endtime="20220516 18:16:41.224"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Client cannot authenticate</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 18:16:41.224" endtime="20220516 18:16:41.225"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:16:41.233" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:16:41.237" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:16:41.237" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220516 18:16:41.230" endtime="20220516 18:16:41.237"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:16:41.238" level="INFO">scm</msg>
<status status="PASS" starttime="20220516 18:16:41.238" endtime="20220516 18:16:41.239"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:16:41.239" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:16:41.239" endtime="20220516 18:16:41.240"/>
</kw>
<status status="PASS" starttime="20220516 18:16:41.229" endtime="20220516 18:16:41.240"/>
</kw>
<msg timestamp="20220516 18:16:41.240" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:16:41.229" endtime="20220516 18:16:41.241"/>
</kw>
<msg timestamp="20220516 18:16:41.241" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220516 18:16:41.226" endtime="20220516 18:16:41.242"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220516 18:16:41.244" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220516 18:16:41.242" endtime="20220516 18:16:41.244"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:16:41.250" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:16:41.259" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:16:41.259" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:16:41.248" endtime="20220516 18:16:41.259"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:16:41.260" level="INFO"/>
<status status="PASS" starttime="20220516 18:16:41.260" endtime="20220516 18:16:41.261"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:16:41.261" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:16:41.261" endtime="20220516 18:16:41.261"/>
</kw>
<status status="PASS" starttime="20220516 18:16:41.246" endtime="20220516 18:16:41.262"/>
</kw>
<msg timestamp="20220516 18:16:41.262" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:16:41.246" endtime="20220516 18:16:41.263"/>
</kw>
<status status="PASS" starttime="20220516 18:16:41.245" endtime="20220516 18:16:41.263"/>
</kw>
<status status="PASS" starttime="20220516 18:16:41.245" endtime="20220516 18:16:41.263"/>
</kw>
<status status="PASS" starttime="20220516 18:16:41.225" endtime="20220516 18:16:41.263"/>
</kw>
<status status="PASS" starttime="20220516 18:16:41.225" endtime="20220516 18:16:41.263"/>
</kw>
<status status="PASS" starttime="20220516 18:16:27.762" endtime="20220516 18:16:41.263"/>
</kw>
<kw name="Print Valid Token File">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh token print</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:16:41.268" level="INFO">Running command 'ozone sh token print 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:16:43.907" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:16:43.908" level="INFO">${output} = Kind: OzoneToken, Service: 172.18.0.9:9862, Ident: (OzoneToken owner=testuser/scm@EXAMPLE.COM, renewer=testuser, realUser=, issueDate=2022-05-16T18:16:32.372Z, maxDate=2022-05-23T18:16:32.372Z, sequen...</msg>
<status status="PASS" starttime="20220516 18:16:41.266" endtime="20220516 18:16:43.908"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:16:43.909" level="INFO">Kind: OzoneToken, Service: 172.18.0.9:9862, Ident: (OzoneToken owner=testuser/scm@EXAMPLE.COM, renewer=testuser, realUser=, issueDate=2022-05-16T18:16:32.372Z, maxDate=2022-05-23T18:16:32.372Z, sequenceNumber=1, masterKeyId=1, strToSign=null, signature=null, awsAccessKeyId=null, omServiceId=omServiceIdDefault)</msg>
<status status="PASS" starttime="20220516 18:16:43.908" endtime="20220516 18:16:43.909"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:16:43.910" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:16:43.909" endtime="20220516 18:16:43.910"/>
</kw>
<status status="PASS" starttime="20220516 18:16:41.265" endtime="20220516 18:16:43.911"/>
</kw>
<msg timestamp="20220516 18:16:43.911" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:16:41.265" endtime="20220516 18:16:43.912"/>
</kw>
<msg timestamp="20220516 18:16:43.912" level="INFO">${output} = Kind: OzoneToken, Service: 172.18.0.9:9862, Ident: (OzoneToken owner=testuser/scm@EXAMPLE.COM, renewer=testuser, realUser=, issueDate=2022-05-16T18:16:32.372Z, maxDate=2022-05-23T18:16:32.372Z, sequen...</msg>
<status status="PASS" starttime="20220516 18:16:41.264" endtime="20220516 18:16:43.912"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${output}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220516 18:16:43.913" level="INFO">Length is 311</msg>
<status status="PASS" starttime="20220516 18:16:43.912" endtime="20220516 18:16:43.913"/>
</kw>
<status status="PASS" starttime="20220516 18:16:41.264" endtime="20220516 18:16:43.913"/>
</kw>
<kw name="Renew Token in Secure Cluster">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh token renew</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:16:43.918" level="INFO">Running command 'ozone sh token renew 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:16:48.744" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:16:48.745" level="INFO">${output} = Token renewed successfully, expiry time: 2022-05-17T18:16:48.586Z.</msg>
<status status="PASS" starttime="20220516 18:16:43.915" endtime="20220516 18:16:48.745"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:16:48.746" level="INFO">Token renewed successfully, expiry time: 2022-05-17T18:16:48.586Z.</msg>
<status status="PASS" starttime="20220516 18:16:48.745" endtime="20220516 18:16:48.746"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:16:48.747" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:16:48.746" endtime="20220516 18:16:48.747"/>
</kw>
<status status="PASS" starttime="20220516 18:16:43.915" endtime="20220516 18:16:48.747"/>
</kw>
<msg timestamp="20220516 18:16:48.748" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:16:43.914" endtime="20220516 18:16:48.748"/>
</kw>
<msg timestamp="20220516 18:16:48.749" level="INFO">${output} = Token renewed successfully, expiry time: 2022-05-17T18:16:48.586Z.</msg>
<status status="PASS" starttime="20220516 18:16:43.914" endtime="20220516 18:16:48.749"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Token renewed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 18:16:48.749" endtime="20220516 18:16:48.749"/>
</kw>
<status status="PASS" starttime="20220516 18:16:43.913" endtime="20220516 18:16:48.750"/>
</kw>
<kw name="Cancel Token in Secure Cluster">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh token cancel</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:16:48.756" level="INFO">Running command 'ozone sh token cancel 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:16:53.594" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:16:53.594" level="INFO">${output} = Token canceled successfully.</msg>
<status status="PASS" starttime="20220516 18:16:48.752" endtime="20220516 18:16:53.594"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:16:53.595" level="INFO">Token canceled successfully.</msg>
<status status="PASS" starttime="20220516 18:16:53.595" endtime="20220516 18:16:53.596"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:16:53.596" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:16:53.596" endtime="20220516 18:16:53.597"/>
</kw>
<status status="PASS" starttime="20220516 18:16:48.752" endtime="20220516 18:16:53.597"/>
</kw>
<msg timestamp="20220516 18:16:53.597" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:16:48.751" endtime="20220516 18:16:53.598"/>
</kw>
<msg timestamp="20220516 18:16:53.598" level="INFO">${output} = Token canceled successfully.</msg>
<status status="PASS" starttime="20220516 18:16:48.750" endtime="20220516 18:16:53.599"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Token canceled successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 18:16:53.599" endtime="20220516 18:16:53.599"/>
</kw>
<status status="PASS" starttime="20220516 18:16:48.750" endtime="20220516 18:16:53.599"/>
</kw>
<status status="PASS" starttime="20220516 18:16:27.762" endtime="20220516 18:16:53.600"/>
</kw>
<status status="PASS" starttime="20220516 18:16:27.761" endtime="20220516 18:16:53.600"/>
</kw>
<kw name="Print Nonexistent Token File">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh token print -t /asdf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:16:53.604" level="INFO">Running command 'ozone sh token print -t /asdf 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:16:56.216" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:16:56.216" level="INFO">${output} = Error: token operation failed as token file: /asdf containing encoded token doesn't exist.</msg>
<status status="PASS" starttime="20220516 18:16:53.602" endtime="20220516 18:16:56.216"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:16:56.217" level="INFO">Error: token operation failed as token file: /asdf containing encoded token doesn't exist.</msg>
<status status="PASS" starttime="20220516 18:16:56.216" endtime="20220516 18:16:56.217"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:16:56.218" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:16:56.218" endtime="20220516 18:16:56.218"/>
</kw>
<status status="PASS" starttime="20220516 18:16:53.601" endtime="20220516 18:16:56.219"/>
</kw>
<msg timestamp="20220516 18:16:56.219" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:16:53.601" endtime="20220516 18:16:56.220"/>
</kw>
<msg timestamp="20220516 18:16:56.220" level="INFO">${output} = Error: token operation failed as token file: /asdf containing encoded token doesn't exist.</msg>
<status status="PASS" starttime="20220516 18:16:53.600" endtime="20220516 18:16:56.220"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>operation failed as token file: /asdf</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 18:16:56.220" endtime="20220516 18:16:56.221"/>
</kw>
<status status="PASS" starttime="20220516 18:16:53.600" endtime="20220516 18:16:56.221"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220516 18:16:27.760" endtime="20220516 18:16:56.221"/>
</test>
<doc>Test token operations</doc>
<status status="PASS" starttime="20220516 18:16:27.751" endtime="20220516 18:16:56.222"/>
</suite>
<status status="PASS" starttime="20220516 18:10:24.484" endtime="20220516 18:16:56.226"/>
</suite>
<suite id="s1-s3" name="ozonefs-ofs-bucket" source="/opt/hadoop/smoketest/ozonefs/ozonefs.robot">
<kw name="Setup for FS test" library="setup" type="SETUP">
<kw name="Assign suite vars for FS test" library="setup">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220516 18:17:02.969" level="INFO">${random} = 44302</msg>
<status status="PASS" starttime="20220516 18:17:02.968" endtime="20220516 18:17:02.969"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<arg>${random}-${BUCKET_TYPE}1-${SCHEME}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220516 18:17:02.970" level="INFO">${BUCKET} = 44302-bucket1-ofs</msg>
<status status="PASS" starttime="20220516 18:17:02.969" endtime="20220516 18:17:02.970"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET2}</arg>
<arg>${random}-${BUCKET_TYPE}2-${SCHEME}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220516 18:17:02.971" level="INFO">${BUCKET2} = 44302-bucket2-ofs</msg>
<status status="PASS" starttime="20220516 18:17:02.970" endtime="20220516 18:17:02.971"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET_IN_VOL2}</arg>
<arg>${random}-${BUCKET_TYPE}3-${SCHEME}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220516 18:17:02.972" level="INFO">${BUCKET_IN_VOL2} = 44302-bucket3-ofs</msg>
<status status="PASS" starttime="20220516 18:17:02.971" endtime="20220516 18:17:02.972"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${BASE_URL}</var>
<arg>${SCHEME}</arg>
<arg>${VOLUME}</arg>
<arg>${BUCKET}</arg>
<arg>/</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220516 18:17:02.977" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20220516 18:17:02.977" endtime="20220516 18:17:02.977"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220516 18:17:02.978" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20220516 18:17:02.977" endtime="20220516 18:17:02.978"/>
</kw>
<status status="PASS" starttime="20220516 18:17:02.976" endtime="20220516 18:17:02.978"/>
</kw>
<msg timestamp="20220516 18:17:02.978" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20220516 18:17:02.975" endtime="20220516 18:17:02.979"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220516 18:17:02.981" level="INFO">${first} = /</msg>
<status status="PASS" starttime="20220516 18:17:02.981" endtime="20220516 18:17:02.981"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220516 18:17:02.982" level="INFO">${result} = /</msg>
<status status="PASS" starttime="20220516 18:17:02.981" endtime="20220516 18:17:02.982"/>
</kw>
<status status="PASS" starttime="20220516 18:17:02.980" endtime="20220516 18:17:02.983"/>
</kw>
<msg timestamp="20220516 18:17:02.983" level="INFO">${path_with_leading} = /</msg>
<status status="PASS" starttime="20220516 18:17:02.979" endtime="20220516 18:17:02.983"/>
</kw>
<status status="PASS" starttime="20220516 18:17:02.974" endtime="20220516 18:17:02.983"/>
</kw>
<msg timestamp="20220516 18:17:02.983" level="INFO">${url} = ofs://om/fstest1/44302-bucket1-ofs/</msg>
<status status="PASS" starttime="20220516 18:17:02.973" endtime="20220516 18:17:02.983"/>
</kw>
<msg timestamp="20220516 18:17:02.984" level="INFO">${BASE_URL} = ofs://om/fstest1/44302-bucket1-ofs/</msg>
<status status="PASS" starttime="20220516 18:17:02.972" endtime="20220516 18:17:02.984"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BASE_URL}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220516 18:17:02.984" level="INFO">${BASE_URL} = ofs://om/fstest1/44302-bucket1-ofs/</msg>
<status status="PASS" starttime="20220516 18:17:02.984" endtime="20220516 18:17:02.984"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${DEEP_URL}</arg>
<arg>${BASE_URL}${DEEP_DIR}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220516 18:17:02.987" level="INFO">${DEEP_URL} = ofs://om/fstest1/44302-bucket1-ofs/test/ofs/dir</msg>
<status status="PASS" starttime="20220516 18:17:02.985" endtime="20220516 18:17:02.987"/>
</kw>
<status status="PASS" starttime="20220516 18:17:02.968" endtime="20220516 18:17:02.987"/>
</kw>
<kw name="Create volumes for FS test" library="setup">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone sh volume create ${VOLUME} --space-quota 100TB</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:17:02.992" level="INFO">Running command 'ozone sh volume create fstest1 --space-quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:17:07.795" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:17:07.795" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:17:02.988" endtime="20220516 18:17:07.795"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:17:07.796" level="INFO"/>
<status status="PASS" starttime="20220516 18:17:07.795" endtime="20220516 18:17:07.796"/>
</kw>
<status status="PASS" starttime="20220516 18:17:02.987" endtime="20220516 18:17:07.796"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone sh volume create ${VOL2} --space-quota 100TB</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:17:07.800" level="INFO">Running command 'ozone sh volume create fstest2 --space-quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:17:12.550" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:17:12.550" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:17:07.797" endtime="20220516 18:17:12.550"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:17:12.551" level="INFO"/>
<status status="PASS" starttime="20220516 18:17:12.551" endtime="20220516 18:17:12.551"/>
</kw>
<status status="PASS" starttime="20220516 18:17:07.797" endtime="20220516 18:17:12.552"/>
</kw>
<status status="PASS" starttime="20220516 18:17:02.987" endtime="20220516 18:17:12.552"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create ${BUCKET_TYPE}s for FS test</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create buckets for FS test" library="setup">
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${VOLUME}/${BUCKET} --layout FILE_SYSTEM_OPTIMIZED</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:17:12.557" level="INFO">Running command 'ozone sh bucket create fstest1/44302-bucket1-ofs --layout FILE_SYSTEM_OPTIMIZED 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:17:17.413" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:17:17.413" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:17:12.555" endtime="20220516 18:17:17.413"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:17:17.414" level="INFO"/>
<status status="PASS" starttime="20220516 18:17:17.413" endtime="20220516 18:17:17.414"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:17:17.415" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:17:17.414" endtime="20220516 18:17:17.415"/>
</kw>
<status status="PASS" starttime="20220516 18:17:12.554" endtime="20220516 18:17:17.415"/>
</kw>
<msg timestamp="20220516 18:17:17.415" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:17:12.554" endtime="20220516 18:17:17.417"/>
</kw>
<status status="PASS" starttime="20220516 18:17:12.553" endtime="20220516 18:17:17.417"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${VOLUME}/${BUCKET2} --layout FILE_SYSTEM_OPTIMIZED</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:17:17.422" level="INFO">Running command 'ozone sh bucket create fstest1/44302-bucket2-ofs --layout FILE_SYSTEM_OPTIMIZED 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:17:22.393" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:17:22.393" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:17:17.420" endtime="20220516 18:17:22.393"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:17:22.394" level="INFO"/>
<status status="PASS" starttime="20220516 18:17:22.393" endtime="20220516 18:17:22.395"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:17:22.395" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:17:22.395" endtime="20220516 18:17:22.395"/>
</kw>
<status status="PASS" starttime="20220516 18:17:17.419" endtime="20220516 18:17:22.396"/>
</kw>
<msg timestamp="20220516 18:17:22.396" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:17:17.418" endtime="20220516 18:17:22.397"/>
</kw>
<status status="PASS" starttime="20220516 18:17:17.417" endtime="20220516 18:17:22.397"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${VOL2}/${BUCKET_IN_VOL2} --layout FILE_SYSTEM_OPTIMIZED</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:17:22.401" level="INFO">Running command 'ozone sh bucket create fstest2/44302-bucket3-ofs --layout FILE_SYSTEM_OPTIMIZED 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:17:27.181" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:17:27.181" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:17:22.399" endtime="20220516 18:17:27.181"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:17:27.182" level="INFO"/>
<status status="PASS" starttime="20220516 18:17:27.182" endtime="20220516 18:17:27.183"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:17:27.183" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:17:27.183" endtime="20220516 18:17:27.183"/>
</kw>
<status status="PASS" starttime="20220516 18:17:22.398" endtime="20220516 18:17:27.184"/>
</kw>
<msg timestamp="20220516 18:17:27.184" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:17:22.398" endtime="20220516 18:17:27.185"/>
</kw>
<status status="PASS" starttime="20220516 18:17:22.397" endtime="20220516 18:17:27.185"/>
</kw>
<status status="PASS" starttime="20220516 18:17:12.553" endtime="20220516 18:17:27.185"/>
</kw>
<status status="PASS" starttime="20220516 18:17:12.552" endtime="20220516 18:17:27.186"/>
</kw>
<kw name="Sanity check for FS test" library="setup">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:17:27.190" level="INFO">Running command 'ozone sh volume list 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:17:32.094" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:17:32.094" level="INFO">${output} = [ {
  "metadata" : { },
  "name" : "52499-source",
  "admin" : "testuser",
  "owner" : "testuser",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 3,
  "creationTime" : "2022-05-...</msg>
<status status="PASS" starttime="20220516 18:17:27.188" endtime="20220516 18:17:32.095"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:17:32.096" level="INFO">[ {
  "metadata" : { },
  "name" : "52499-source",
  "admin" : "testuser",
  "owner" : "testuser",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 3,
  "creationTime" : "2022-05-16T17:49:40.511Z",
  "modificationTime" : "2022-05-16T17:50:30.531Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "USER",
    "name" : "testuser2/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "LIST" ]
  } ]
}, {
  "metadata" : { },
  "name" : "52499-target",
  "admin" : "testuser",
  "owner" : "testuser",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 10,
  "creationTime" : "2022-05-16T17:49:45.255Z",
  "modificationTime" : "2022-05-16T17:50:25.292Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "USER",
    "name" : "testuser2/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ" ]
  } ]
}, {
  "metadata" : { },
  "name" : "58091-acls",
  "admin" : "testuser",
  "owner" : "testuser",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2022-05-16T18:03:02.205Z",
  "modificationTime" : "2022-05-16T18:03:32.292Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "superuser1",
    "aclScope" : "DEFAULT",
    "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
  }, {
    "type" : "GROUP",
    "name" : "superuser1",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
  }, {
    "type" : "GROUP",
    "name" : "superuser1",
    "aclScope" : "DEFAULT",
    "aclList" : [ "ALL" ]
  } ]
}, {
  "metadata" : { },
  "name" : "fstest1",
  "admin" : "testuser",
  "owner" : "testuser",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : -1,
  "usedNamespace" : 2,
  "creationTime" : "2022-05-16T18:17:07.722Z",
  "modificationTime" : "2022-05-16T18:17:07.722Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}, {
  "metadata" : { },
  "name" : "fstest18",
  "admin" : "testuser",
  "owner" : "testuser",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 2,
  "creationTime" : "2022-05-16T18:12:01.337Z",
  "modificationTime" : "2022-05-16T18:12:01.337Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}, {
  "metadata" : { },
  "name" : "fstest2",
  "admin" : "testuser",
  "owner" : "testuser",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2022-05-16T18:17:12.360Z",
  "modificationTime" : "2022-05-16T18:17:12.360Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}, {
  "metadata" : { },
  "name" : "fstest218",
  "admin" : "testuser",
  "owner" : "testuser",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2022-05-16T18:12:06.487Z",
  "modificationTime" : "2022-05-16T18:12:06.487Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}, {
  "metadata" : { },
  "name" : "fstest318",
  "admin" : "testuser",
  "owner" : "testuser",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2022-05-16T18:12:30.180Z",
  "modificationTime" : "2022-05-16T18:14:58.033Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "superuser1",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
  }, {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
  }, {
    "type" : "GROUP",
    "name" : "superuser1",
    "aclScope" : "DEFAULT",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "USER",
    "name" : "testuser2/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "WRITE", "LIST", "READ_ACL", "WRITE_ACL" ]
  } ]
}, {
  "metadata" : { },
  "name" : "fstest442",
  "admin" : "testuser",
  "owner" : "testuser2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 0,
  "creationTime" : "2022-05-16T18:11:27.291Z",
  "modificationTime" : "2022-05-16T18:11:27.291Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser2",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}, {
  "metadata" : { },
  "name" : "s3v",
  "admin" : "root",
  "owner" : "root",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 2,
  "creationTime" : "2022-05-16T17:48:31.639Z",
  "modificationTime" : "2022-05-16T17:48:31.639Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}, {
  "metadata" : { },
  "name" : "vol-ezizc",
  "admin" : "testuser",
  "owner" : "testuser",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2022-05-16T18:10:45.707Z",
  "modificationTime" : "2022-05-16T18:10:45.707Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}, {
  "metadata" : { },
  "name" : "vol1",
  "admin" : "testuser",
  "owner" : "testuser",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2022-05-16T17:49:03.606Z",
  "modificationTime" : "2022-05-16T17:49:03.606Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
} ]</msg>
<status status="PASS" starttime="20220516 18:17:32.095" endtime="20220516 18:17:32.096"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:17:32.097" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:17:32.096" endtime="20220516 18:17:32.097"/>
</kw>
<status status="PASS" starttime="20220516 18:17:27.187" endtime="20220516 18:17:32.097"/>
</kw>
<msg timestamp="20220516 18:17:32.098" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:17:27.187" endtime="20220516 18:17:32.098"/>
</kw>
<msg timestamp="20220516 18:17:32.099" level="INFO">${result} = [ {
  "metadata" : { },
  "name" : "52499-source",
  "admin" : "testuser",
  "owner" : "testuser",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 3,
  "creationTime" : "2022-05-...</msg>
<status status="PASS" starttime="20220516 18:17:27.186" endtime="20220516 18:17:32.099"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${VOLUME}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 18:17:32.099" endtime="20220516 18:17:32.099"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${VOL2}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 18:17:32.100" endtime="20220516 18:17:32.100"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>"admin" : "(hadoop|testuser)"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220516 18:17:32.100" endtime="20220516 18:17:32.101"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${VOLUME}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:17:32.105" level="INFO">Running command 'ozone sh bucket list fstest1 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:17:37.193" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:17:37.193" level="INFO">${output} = [ {
  "metadata" : { },
  "volumeName" : "fstest1",
  "name" : "44302-bucket1-ofs",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022...</msg>
<status status="PASS" starttime="20220516 18:17:32.103" endtime="20220516 18:17:37.194"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:17:37.195" level="INFO">[ {
  "metadata" : { },
  "volumeName" : "fstest1",
  "name" : "44302-bucket1-ofs",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-05-16T18:17:17.234Z",
  "modificationTime" : "2022-05-16T18:17:17.234Z",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "FILE_SYSTEM_OPTIMIZED",
  "owner" : "testuser",
  "link" : false
}, {
  "metadata" : { },
  "volumeName" : "fstest1",
  "name" : "44302-bucket2-ofs",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-05-16T18:17:22.311Z",
  "modificationTime" : "2022-05-16T18:17:22.311Z",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "FILE_SYSTEM_OPTIMIZED",
  "owner" : "testuser",
  "link" : false
} ]</msg>
<status status="PASS" starttime="20220516 18:17:37.194" endtime="20220516 18:17:37.195"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:17:37.196" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:17:37.195" endtime="20220516 18:17:37.196"/>
</kw>
<status status="PASS" starttime="20220516 18:17:32.102" endtime="20220516 18:17:37.196"/>
</kw>
<msg timestamp="20220516 18:17:37.196" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:17:32.102" endtime="20220516 18:17:37.197"/>
</kw>
<msg timestamp="20220516 18:17:37.197" level="INFO">${result} = [ {
  "metadata" : { },
  "volumeName" : "fstest1",
  "name" : "44302-bucket1-ofs",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022...</msg>
<status status="PASS" starttime="20220516 18:17:32.101" endtime="20220516 18:17:37.198"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 18:17:37.198" endtime="20220516 18:17:37.198"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET2}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 18:17:37.199" endtime="20220516 18:17:37.199"/>
</kw>
<status status="PASS" starttime="20220516 18:17:27.186" endtime="20220516 18:17:37.199"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Completed setup for ${SCHEME} tests with ${BUCKET_TYPE}s in ${VOLUME}/${BUCKET} using FS base URL: ${BASE_URL}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:17:37.200" level="INFO">Completed setup for ofs tests with buckets in fstest1/44302-bucket1-ofs using FS base URL: ofs://om/fstest1/44302-bucket1-ofs/</msg>
<status status="PASS" starttime="20220516 18:17:37.199" endtime="20220516 18:17:37.200"/>
</kw>
<status status="PASS" starttime="20220516 18:17:02.968" endtime="20220516 18:17:37.200"/>
</kw>
<test id="s1-s3-t1" name="List root">
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${VOLUME}</arg>
<arg>${BUCKET}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220516 18:17:37.208" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20220516 18:17:37.208" endtime="20220516 18:17:37.208"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220516 18:17:37.209" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20220516 18:17:37.209" endtime="20220516 18:17:37.209"/>
</kw>
<status status="PASS" starttime="20220516 18:17:37.207" endtime="20220516 18:17:37.209"/>
</kw>
<msg timestamp="20220516 18:17:37.210" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20220516 18:17:37.206" endtime="20220516 18:17:37.210"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20220516 18:17:37.211" endtime="20220516 18:17:37.213"/>
</kw>
<msg timestamp="20220516 18:17:37.213" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20220516 18:17:37.210" endtime="20220516 18:17:37.213"/>
</kw>
<status status="PASS" starttime="20220516 18:17:37.205" endtime="20220516 18:17:37.213"/>
</kw>
<msg timestamp="20220516 18:17:37.214" level="INFO">${url} = ofs://om/fstest1/44302-bucket1-ofs</msg>
<status status="PASS" starttime="20220516 18:17:37.204" endtime="20220516 18:17:37.214"/>
</kw>
<msg timestamp="20220516 18:17:37.214" level="INFO">${root} = ofs://om/fstest1/44302-bucket1-ofs</msg>
<status status="PASS" starttime="20220516 18:17:37.202" endtime="20220516 18:17:37.214"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -ls ${root}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:17:37.218" level="INFO">Running command 'ozone fs -ls ofs://om/fstest1/44302-bucket1-ofs 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:17:41.812" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:17:41.812" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:17:37.216" endtime="20220516 18:17:41.812"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:17:41.813" level="INFO"/>
<status status="PASS" starttime="20220516 18:17:41.812" endtime="20220516 18:17:41.813"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:17:41.814" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:17:41.813" endtime="20220516 18:17:41.814"/>
</kw>
<status status="PASS" starttime="20220516 18:17:37.215" endtime="20220516 18:17:41.814"/>
</kw>
<msg timestamp="20220516 18:17:41.814" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:17:37.215" endtime="20220516 18:17:41.815"/>
</kw>
<status status="PASS" starttime="20220516 18:17:37.214" endtime="20220516 18:17:41.815"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220516 18:17:37.200" endtime="20220516 18:17:41.815"/>
</test>
<test id="s1-s3-t2" name="List non-existent volume">
<kw name="Format FS URL" library="fs">
<var>${url}</var>
<arg>${SCHEME}</arg>
<arg>no-such-volume</arg>
<arg>${BUCKET}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220516 18:17:41.823" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20220516 18:17:41.823" endtime="20220516 18:17:41.823"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220516 18:17:41.824" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20220516 18:17:41.823" endtime="20220516 18:17:41.824"/>
</kw>
<status status="PASS" starttime="20220516 18:17:41.822" endtime="20220516 18:17:41.824"/>
</kw>
<msg timestamp="20220516 18:17:41.825" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20220516 18:17:41.821" endtime="20220516 18:17:41.825"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20220516 18:17:41.826" endtime="20220516 18:17:41.828"/>
</kw>
<msg timestamp="20220516 18:17:41.828" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20220516 18:17:41.825" endtime="20220516 18:17:41.828"/>
</kw>
<status status="PASS" starttime="20220516 18:17:41.820" endtime="20220516 18:17:41.828"/>
</kw>
<msg timestamp="20220516 18:17:41.829" level="INFO">${url} = ofs://om/no-such-volume/44302-bucket1-ofs</msg>
<status status="PASS" starttime="20220516 18:17:41.819" endtime="20220516 18:17:41.829"/>
</kw>
<msg timestamp="20220516 18:17:41.829" level="INFO">${url} = ofs://om/no-such-volume/44302-bucket1-ofs</msg>
<status status="PASS" starttime="20220516 18:17:41.817" endtime="20220516 18:17:41.829"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone fs -ls ${url}</arg>
<arg>1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:17:41.832" level="INFO">Running command 'ozone fs -ls ofs://om/no-such-volume/44302-bucket1-ofs 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:17:46.248" level="INFO">${rc} = 1</msg>
<msg timestamp="20220516 18:17:46.249" level="INFO">${output} = ls: `ofs://om/no-such-volume/44302-bucket1-ofs': No such file or directory</msg>
<status status="PASS" starttime="20220516 18:17:41.830" endtime="20220516 18:17:46.249"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:17:46.250" level="INFO">ls: `ofs://om/no-such-volume/44302-bucket1-ofs': No such file or directory</msg>
<status status="PASS" starttime="20220516 18:17:46.249" endtime="20220516 18:17:46.250"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:17:46.251" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:17:46.251" endtime="20220516 18:17:46.251"/>
</kw>
<msg timestamp="20220516 18:17:46.252" level="INFO">${result} = ls: `ofs://om/no-such-volume/44302-bucket1-ofs': No such file or directory</msg>
<status status="PASS" starttime="20220516 18:17:41.829" endtime="20220516 18:17:46.252"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>(Check access operation failed)|(Volume no-such-volume is not found)|(No such file or directory)</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220516 18:17:46.252" endtime="20220516 18:17:46.253"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220516 18:17:41.816" endtime="20220516 18:17:46.254"/>
</test>
<test id="s1-s3-t3" name="List non-existent bucket">
<kw name="Format FS URL" library="fs">
<var>${url}</var>
<arg>${SCHEME}</arg>
<arg>${VOLUME}</arg>
<arg>no-such-bucket</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220516 18:17:46.263" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20220516 18:17:46.262" endtime="20220516 18:17:46.263"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220516 18:17:46.264" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20220516 18:17:46.263" endtime="20220516 18:17:46.264"/>
</kw>
<status status="PASS" starttime="20220516 18:17:46.262" endtime="20220516 18:17:46.265"/>
</kw>
<msg timestamp="20220516 18:17:46.265" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20220516 18:17:46.260" endtime="20220516 18:17:46.265"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20220516 18:17:46.267" endtime="20220516 18:17:46.268"/>
</kw>
<msg timestamp="20220516 18:17:46.268" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20220516 18:17:46.265" endtime="20220516 18:17:46.268"/>
</kw>
<status status="PASS" starttime="20220516 18:17:46.259" endtime="20220516 18:17:46.269"/>
</kw>
<msg timestamp="20220516 18:17:46.269" level="INFO">${url} = ofs://om/fstest1/no-such-bucket</msg>
<status status="PASS" starttime="20220516 18:17:46.258" endtime="20220516 18:17:46.269"/>
</kw>
<msg timestamp="20220516 18:17:46.269" level="INFO">${url} = ofs://om/fstest1/no-such-bucket</msg>
<status status="PASS" starttime="20220516 18:17:46.256" endtime="20220516 18:17:46.270"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone fs -ls ${url}</arg>
<arg>1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:17:46.273" level="INFO">Running command 'ozone fs -ls ofs://om/fstest1/no-such-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:17:50.903" level="INFO">${rc} = 1</msg>
<msg timestamp="20220516 18:17:50.903" level="INFO">${output} = ls: `ofs://om/fstest1/no-such-bucket': No such file or directory</msg>
<status status="PASS" starttime="20220516 18:17:46.270" endtime="20220516 18:17:50.903"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:17:50.904" level="INFO">ls: `ofs://om/fstest1/no-such-bucket': No such file or directory</msg>
<status status="PASS" starttime="20220516 18:17:50.903" endtime="20220516 18:17:50.904"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:17:50.905" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:17:50.905" endtime="20220516 18:17:50.905"/>
</kw>
<msg timestamp="20220516 18:17:50.906" level="INFO">${result} = ls: `ofs://om/fstest1/no-such-bucket': No such file or directory</msg>
<status status="PASS" starttime="20220516 18:17:46.270" endtime="20220516 18:17:50.906"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>(Check access operation failed)|(Bucket not found)|(No such file or directory)</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220516 18:17:50.906" endtime="20220516 18:17:50.907"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220516 18:17:46.255" endtime="20220516 18:17:50.908"/>
</test>
<test id="s1-s3-t4" name="Create dir with parents">
<kw name="Execute" library="os">
<arg>ozone fs -mkdir -p ${DEEP_URL}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:17:50.914" level="INFO">Running command 'ozone fs -mkdir -p ofs://om/fstest1/44302-bucket1-ofs/test/ofs/dir 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:17:55.571" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:17:55.571" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:17:50.911" endtime="20220516 18:17:55.571"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:17:55.573" level="INFO"/>
<status status="PASS" starttime="20220516 18:17:55.572" endtime="20220516 18:17:55.573"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:17:55.573" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:17:55.573" endtime="20220516 18:17:55.574"/>
</kw>
<status status="PASS" starttime="20220516 18:17:50.911" endtime="20220516 18:17:55.574"/>
</kw>
<msg timestamp="20220516 18:17:55.574" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:17:50.910" endtime="20220516 18:17:55.575"/>
</kw>
<status status="PASS" starttime="20220516 18:17:50.910" endtime="20220516 18:17:55.575"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:17:55.579" level="INFO">Running command 'ozone sh key list fstest1/44302-bucket1-ofs | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:18:01.005" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:18:01.005" level="INFO">${output} = test/
test/ofs/
test/ofs/dir/</msg>
<status status="PASS" starttime="20220516 18:17:55.577" endtime="20220516 18:18:01.005"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:18:01.006" level="INFO">test/
test/ofs/
test/ofs/dir/</msg>
<status status="PASS" starttime="20220516 18:18:01.005" endtime="20220516 18:18:01.006"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:18:01.007" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:18:01.007" endtime="20220516 18:18:01.008"/>
</kw>
<status status="PASS" starttime="20220516 18:17:55.576" endtime="20220516 18:18:01.008"/>
</kw>
<msg timestamp="20220516 18:18:01.008" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:17:55.576" endtime="20220516 18:18:01.009"/>
</kw>
<msg timestamp="20220516 18:18:01.009" level="INFO">${result} = test/
test/ofs/
test/ofs/dir/</msg>
<status status="PASS" starttime="20220516 18:17:55.575" endtime="20220516 18:18:01.009"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${DEEP_DIR}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 18:18:01.009" endtime="20220516 18:18:01.010"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220516 18:17:50.909" endtime="20220516 18:18:01.010"/>
</test>
<test id="s1-s3-t5" name="Copy from local">
<kw name="Execute" library="os">
<arg>ozone fs -copyFromLocal NOTICE.txt ${DEEP_URL}/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:18:01.018" level="INFO">Running command 'ozone fs -copyFromLocal NOTICE.txt ofs://om/fstest1/44302-bucket1-ofs/test/ofs/dir/ 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:18:10.996" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:18:10.996" level="INFO">${output} = 2022-05-16 18:18:06,070 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-05-16 18:18:06,174 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220516 18:18:01.015" endtime="20220516 18:18:10.996"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:18:10.997" level="INFO">2022-05-16 18:18:06,070 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-05-16 18:18:06,174 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-05-16 18:18:06,174 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2022-05-16 18:18:06,552 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20220516 18:18:10.996" endtime="20220516 18:18:10.997"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:18:10.998" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:18:10.998" endtime="20220516 18:18:10.998"/>
</kw>
<status status="PASS" starttime="20220516 18:18:01.014" endtime="20220516 18:18:10.999"/>
</kw>
<msg timestamp="20220516 18:18:10.999" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:18:01.013" endtime="20220516 18:18:11.000"/>
</kw>
<status status="PASS" starttime="20220516 18:18:01.012" endtime="20220516 18:18:11.000"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:18:11.005" level="INFO">Running command 'ozone sh key list fstest1/44302-bucket1-ofs | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:18:16.279" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:18:16.279" level="INFO">${output} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/NOTICE.txt</msg>
<status status="PASS" starttime="20220516 18:18:11.003" endtime="20220516 18:18:16.279"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:18:16.281" level="INFO">test/
test/ofs/
test/ofs/dir/
test/ofs/dir/NOTICE.txt</msg>
<status status="PASS" starttime="20220516 18:18:16.280" endtime="20220516 18:18:16.281"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:18:16.282" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:18:16.281" endtime="20220516 18:18:16.282"/>
</kw>
<status status="PASS" starttime="20220516 18:18:11.002" endtime="20220516 18:18:16.282"/>
</kw>
<msg timestamp="20220516 18:18:16.282" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:18:11.001" endtime="20220516 18:18:16.283"/>
</kw>
<msg timestamp="20220516 18:18:16.283" level="INFO">${result} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/NOTICE.txt</msg>
<status status="PASS" starttime="20220516 18:18:11.000" endtime="20220516 18:18:16.283"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 18:18:16.284" endtime="20220516 18:18:16.284"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${VOLUME}/${BUCKET}/${DEEP_DIR}/NOTICE.txt | jq -r '.replicationConfig.replicationFactor'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:18:16.289" level="INFO">Running command 'ozone sh key info fstest1/44302-bucket1-ofs/test/ofs/dir/NOTICE.txt | jq -r '.replicationConfig.replicationFactor' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:18:21.730" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:18:21.730" level="INFO">${output} = THREE</msg>
<status status="PASS" starttime="20220516 18:18:16.286" endtime="20220516 18:18:21.730"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:18:21.732" level="INFO">THREE</msg>
<status status="PASS" starttime="20220516 18:18:21.731" endtime="20220516 18:18:21.732"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:18:21.733" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:18:21.732" endtime="20220516 18:18:21.733"/>
</kw>
<status status="PASS" starttime="20220516 18:18:16.286" endtime="20220516 18:18:21.734"/>
</kw>
<msg timestamp="20220516 18:18:21.734" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:18:16.285" endtime="20220516 18:18:21.734"/>
</kw>
<msg timestamp="20220516 18:18:21.735" level="INFO">${result} = THREE</msg>
<status status="PASS" starttime="20220516 18:18:16.284" endtime="20220516 18:18:21.735"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>THREE</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220516 18:18:21.735" endtime="20220516 18:18:21.736"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220516 18:18:01.011" endtime="20220516 18:18:21.736"/>
</test>
<test id="s1-s3-t6" name="Put">
<kw name="Execute" library="os">
<arg>ozone fs -put NOTICE.txt ${DEEP_URL}/PUTFILE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:18:21.742" level="INFO">Running command 'ozone fs -put NOTICE.txt ofs://om/fstest1/44302-bucket1-ofs/test/ofs/dir/PUTFILE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:18:31.476" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:18:31.476" level="INFO">${output} = 2022-05-16 18:18:26,718 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-05-16 18:18:26,866 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220516 18:18:21.740" endtime="20220516 18:18:31.476"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:18:31.478" level="INFO">2022-05-16 18:18:26,718 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-05-16 18:18:26,866 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-05-16 18:18:26,866 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2022-05-16 18:18:27,220 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20220516 18:18:31.477" endtime="20220516 18:18:31.478"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:18:31.479" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:18:31.478" endtime="20220516 18:18:31.479"/>
</kw>
<status status="PASS" starttime="20220516 18:18:21.739" endtime="20220516 18:18:31.479"/>
</kw>
<msg timestamp="20220516 18:18:31.479" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:18:21.739" endtime="20220516 18:18:31.480"/>
</kw>
<status status="PASS" starttime="20220516 18:18:21.738" endtime="20220516 18:18:31.480"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:18:31.485" level="INFO">Running command 'ozone sh key list fstest1/44302-bucket1-ofs | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:18:36.641" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:18:36.641" level="INFO">${output} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/NOTICE.txt
test/ofs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20220516 18:18:31.482" endtime="20220516 18:18:36.641"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:18:36.643" level="INFO">test/
test/ofs/
test/ofs/dir/
test/ofs/dir/NOTICE.txt
test/ofs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20220516 18:18:36.642" endtime="20220516 18:18:36.643"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:18:36.644" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:18:36.643" endtime="20220516 18:18:36.644"/>
</kw>
<status status="PASS" starttime="20220516 18:18:31.482" endtime="20220516 18:18:36.644"/>
</kw>
<msg timestamp="20220516 18:18:36.644" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:18:31.481" endtime="20220516 18:18:36.645"/>
</kw>
<msg timestamp="20220516 18:18:36.645" level="INFO">${result} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/NOTICE.txt
test/ofs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20220516 18:18:31.480" endtime="20220516 18:18:36.645"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PUTFILE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 18:18:36.646" endtime="20220516 18:18:36.646"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220516 18:18:21.737" endtime="20220516 18:18:36.647"/>
</test>
<test id="s1-s3-t7" name="List">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls ${DEEP_URL}/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:18:36.654" level="INFO">Running command 'ozone fs -ls ofs://om/fstest1/44302-bucket1-ofs/test/ofs/dir/ 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:18:41.071" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:18:41.071" level="INFO">${output} = Found 2 items
-rw-rw-rw-   3 testuser testuser      17526 2022-05-16 18:18 ofs://om/fstest1/44302-bucket1-ofs/test/ofs/dir/NOTICE.txt
-rw-rw-rw-   3 testuser testuser      17526 2022-05-16 18:18 ofs:/...</msg>
<status status="PASS" starttime="20220516 18:18:36.652" endtime="20220516 18:18:41.071"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:18:41.073" level="INFO">Found 2 items
-rw-rw-rw-   3 testuser testuser      17526 2022-05-16 18:18 ofs://om/fstest1/44302-bucket1-ofs/test/ofs/dir/NOTICE.txt
-rw-rw-rw-   3 testuser testuser      17526 2022-05-16 18:18 ofs://om/fstest1/44302-bucket1-ofs/test/ofs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20220516 18:18:41.072" endtime="20220516 18:18:41.073"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:18:41.074" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:18:41.073" endtime="20220516 18:18:41.074"/>
</kw>
<status status="PASS" starttime="20220516 18:18:36.651" endtime="20220516 18:18:41.074"/>
</kw>
<msg timestamp="20220516 18:18:41.074" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:18:36.650" endtime="20220516 18:18:41.075"/>
</kw>
<msg timestamp="20220516 18:18:41.075" level="INFO">${result} = Found 2 items
-rw-rw-rw-   3 testuser testuser      17526 2022-05-16 18:18 ofs://om/fstest1/44302-bucket1-ofs/test/ofs/dir/NOTICE.txt
-rw-rw-rw-   3 testuser testuser      17526 2022-05-16 18:18 ofs:/...</msg>
<status status="PASS" starttime="20220516 18:18:36.648" endtime="20220516 18:18:41.075"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 18:18:41.076" endtime="20220516 18:18:41.076"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PUTFILE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 18:18:41.076" endtime="20220516 18:18:41.077"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220516 18:18:36.647" endtime="20220516 18:18:41.077"/>
</test>
<test id="s1-s3-t8" name="Move">
<kw name="Execute" library="os">
<arg>ozone fs -mv ${DEEP_URL}/NOTICE.txt ${DEEP_URL}/MOVED.TXT</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:18:41.083" level="INFO">Running command 'ozone fs -mv ofs://om/fstest1/44302-bucket1-ofs/test/ofs/dir/NOTICE.txt ofs://om/fstest1/44302-bucket1-ofs/test/ofs/dir/MOVED.TXT 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:18:45.833" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:18:45.833" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:18:41.081" endtime="20220516 18:18:45.833"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:18:45.835" level="INFO"/>
<status status="PASS" starttime="20220516 18:18:45.834" endtime="20220516 18:18:45.835"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:18:45.836" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:18:45.835" endtime="20220516 18:18:45.836"/>
</kw>
<status status="PASS" starttime="20220516 18:18:41.080" endtime="20220516 18:18:45.837"/>
</kw>
<msg timestamp="20220516 18:18:45.837" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:18:41.080" endtime="20220516 18:18:45.837"/>
</kw>
<status status="PASS" starttime="20220516 18:18:41.079" endtime="20220516 18:18:45.838"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:18:45.843" level="INFO">Running command 'ozone sh key list fstest1/44302-bucket1-ofs | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:18:51.214" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:18:51.214" level="INFO">${output} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20220516 18:18:45.840" endtime="20220516 18:18:51.214"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:18:51.215" level="INFO">test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20220516 18:18:51.215" endtime="20220516 18:18:51.216"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:18:51.216" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:18:51.216" endtime="20220516 18:18:51.216"/>
</kw>
<status status="PASS" starttime="20220516 18:18:45.839" endtime="20220516 18:18:51.217"/>
</kw>
<msg timestamp="20220516 18:18:51.217" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:18:45.839" endtime="20220516 18:18:51.217"/>
</kw>
<msg timestamp="20220516 18:18:51.218" level="INFO">${result} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20220516 18:18:45.838" endtime="20220516 18:18:51.218"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>MOVED.TXT</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 18:18:51.218" endtime="20220516 18:18:51.219"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 18:18:51.219" endtime="20220516 18:18:51.219"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220516 18:18:41.078" endtime="20220516 18:18:51.220"/>
</test>
<test id="s1-s3-t9" name="Copy within FS">
<kw name="Execute" library="os" type="SETUP">
<arg>ozone fs -mkdir -p ${DEEP_URL}/subdir1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:18:51.226" level="INFO">Running command 'ozone fs -mkdir -p ofs://om/fstest1/44302-bucket1-ofs/test/ofs/dir/subdir1 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:18:55.821" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:18:55.822" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:18:51.223" endtime="20220516 18:18:55.822"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:18:55.823" level="INFO"/>
<status status="PASS" starttime="20220516 18:18:55.822" endtime="20220516 18:18:55.823"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:18:55.825" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:18:55.824" endtime="20220516 18:18:55.825"/>
</kw>
<status status="PASS" starttime="20220516 18:18:51.223" endtime="20220516 18:18:55.825"/>
</kw>
<msg timestamp="20220516 18:18:55.825" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:18:51.222" endtime="20220516 18:18:55.826"/>
</kw>
<status status="PASS" starttime="20220516 18:18:51.222" endtime="20220516 18:18:55.826"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -cp ${DEEP_URL}/MOVED.TXT ${DEEP_URL}/subdir1/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:18:55.831" level="INFO">Running command 'ozone fs -cp ofs://om/fstest1/44302-bucket1-ofs/test/ofs/dir/MOVED.TXT ofs://om/fstest1/44302-bucket1-ofs/test/ofs/dir/subdir1/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:19:05.888" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:19:05.888" level="INFO">${output} = 2022-05-16 18:19:00,745 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-05-16 18:19:01,005 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220516 18:18:55.828" endtime="20220516 18:19:05.888"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:19:05.890" level="INFO">2022-05-16 18:19:00,745 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-05-16 18:19:01,005 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-05-16 18:19:01,005 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2022-05-16 18:19:02,579 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20220516 18:19:05.889" endtime="20220516 18:19:05.890"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:19:05.890" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:19:05.890" endtime="20220516 18:19:05.891"/>
</kw>
<status status="PASS" starttime="20220516 18:18:55.828" endtime="20220516 18:19:05.891"/>
</kw>
<msg timestamp="20220516 18:19:05.891" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:18:55.827" endtime="20220516 18:19:05.892"/>
</kw>
<status status="PASS" starttime="20220516 18:18:55.826" endtime="20220516 18:19:05.892"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:19:05.896" level="INFO">Running command 'ozone sh key list fstest1/44302-bucket1-ofs | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:19:11.131" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:19:11.131" level="INFO">${output} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/subdir1/
test/ofs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20220516 18:19:05.894" endtime="20220516 18:19:11.131"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:19:11.132" level="INFO">test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/subdir1/
test/ofs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20220516 18:19:11.131" endtime="20220516 18:19:11.132"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:19:11.133" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:19:11.133" endtime="20220516 18:19:11.133"/>
</kw>
<status status="PASS" starttime="20220516 18:19:05.893" endtime="20220516 18:19:11.134"/>
</kw>
<msg timestamp="20220516 18:19:11.134" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:19:05.893" endtime="20220516 18:19:11.134"/>
</kw>
<msg timestamp="20220516 18:19:11.135" level="INFO">${result} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/subdir1/
test/ofs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20220516 18:19:05.892" endtime="20220516 18:19:11.135"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>subdir1/NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 18:19:11.135" endtime="20220516 18:19:11.135"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls ${DEEP_URL}/subdir1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:19:11.140" level="INFO">Running command 'ozone fs -ls ofs://om/fstest1/44302-bucket1-ofs/test/ofs/dir/subdir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:19:15.396" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:19:15.396" level="INFO">${output} = Found 1 items
-rw-rw-rw-   3 testuser testuser      17526 2022-05-16 18:19 ofs://om/fstest1/44302-bucket1-ofs/test/ofs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20220516 18:19:11.137" endtime="20220516 18:19:15.396"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:19:15.397" level="INFO">Found 1 items
-rw-rw-rw-   3 testuser testuser      17526 2022-05-16 18:19 ofs://om/fstest1/44302-bucket1-ofs/test/ofs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20220516 18:19:15.396" endtime="20220516 18:19:15.397"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:19:15.398" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:19:15.398" endtime="20220516 18:19:15.398"/>
</kw>
<status status="PASS" starttime="20220516 18:19:11.137" endtime="20220516 18:19:15.399"/>
</kw>
<msg timestamp="20220516 18:19:15.399" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:19:11.136" endtime="20220516 18:19:15.400"/>
</kw>
<msg timestamp="20220516 18:19:15.400" level="INFO">${result} = Found 1 items
-rw-rw-rw-   3 testuser testuser      17526 2022-05-16 18:19 ofs://om/fstest1/44302-bucket1-ofs/test/ofs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20220516 18:19:11.136" endtime="20220516 18:19:15.400"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 18:19:15.400" endtime="20220516 18:19:15.400"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 18:19:15.401" endtime="20220516 18:19:15.401"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220516 18:18:51.220" endtime="20220516 18:19:15.401"/>
</test>
<test id="s1-s3-t10" name="Cat file">
<kw name="Execute" library="os">
<arg>ozone fs -cat ${DEEP_URL}/subdir1/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:19:15.408" level="INFO">Running command 'ozone fs -cat ofs://om/fstest1/44302-bucket1-ofs/test/ofs/dir/subdir1/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:19:21.902" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:19:21.902" level="INFO">${output} = 2022-05-16 18:19:19,807 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-05-16 18:19:19,905 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220516 18:19:15.405" endtime="20220516 18:19:21.902"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:19:21.904" level="INFO">2022-05-16 18:19:19,807 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-05-16 18:19:19,905 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-05-16 18:19:19,905 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
Apache Ozone
Copyright 2021 The Apache Software Foundation

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).

Export Control Notice
---------------------

This distribution includes cryptographic software.  The country in
which you currently reside may have restrictions on the import,
possession, use, and/or re-export to another country, of
encryption software.  BEFORE using any encryption software, please
check your country's laws, regulations and policies concerning the
import, possession, or use, and re-export of encryption software, to
see if this is permitted.  See &lt;http://www.wassenaar.org/&gt; for more
information.

The U.S. Government Department of Commerce, Bureau of Industry and
Security (BIS), has classified this software as Export Commodity
Control Number (ECCN) 5D002.C.1, which includes information security
software using or performing cryptographic functions with asymmetric
algorithms.  The form and manner of this Apache Software Foundation
distribution makes it eligible for export under the License Exception
ENC Technology Software Unrestricted (TSU) exception (see the BIS
Export Administration Regulations, Section 740.13) for both object
code and source code.

This software uses the SSL libraries from the Jetty project written
by mortbay.org abd BouncyCastle Java cryptography APIs written by the
 Legion of the Bouncy Castle Inc.

**********************
THIRD PARTY COMPONENTS
**********************
This software includes third party software subject to the following copyrights:

io.netty:netty-all
====================


                            The Netty Project
                            =================

Please visit the Netty web site for more information:

  * https://netty.io/

Copyright 2014 The Netty Project

The Netty Project licenses this file to you under the Apache License,
version 2.0 (the "License"); you may not use this file except in compliance
with the License. You may obtain a copy of the License at:

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
License for the specific language governing permissions and limitations
under the License.

Also, please refer to each LICENSE.&lt;component&gt;.txt file, which is located in
the 'license' directory of the distribution file, for the license terms of the
components that this product depends on.

-------------------------------------------------------------------------------
This product contains the extensions to Java Collections Framework which has
been derived from the works by JSR-166 EG, Doug Lea, and Jason T. Greene:

  * LICENSE:
    * license/LICENSE.jsr166y.txt (Public Domain)
  * HOMEPAGE:
    * http://gee.cs.oswego.edu/cgi-bin/viewcvs.cgi/jsr166/
    * http://viewvc.jboss.org/cgi-bin/viewvc.cgi/jbosscache/experimental/jsr166/

This product contains a modified version of Robert Harder's Public Domain
Base64 Encoder and Decoder, which can be obtained at:

  * LICENSE:
    * license/LICENSE.base64.txt (Public Domain)
  * HOMEPAGE:
    * http://iharder.sourceforge.net/current/java/base64/

This product contains a modified portion of 'Webbit', an event based
WebSocket and HTTP server, which can be obtained at:

  * LICENSE:
    * license/LICENSE.webbit.txt (BSD License)
  * HOMEPAGE:
    * https://github.com/joewalnes/webbit

This product contains a modified portion of 'SLF4J', a simple logging
facade for Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.slf4j.txt (MIT License)
  * HOMEPAGE:
    * http://www.slf4j.org/

This product contains a modified portion of 'Apache Harmony', an open source
Java SE, which can be obtained at:

  * NOTICE:
    * license/NOTICE.harmony.txt
  * LICENSE:
    * license/LICENSE.harmony.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://archive.apache.org/dist/harmony/

This product contains a modified portion of 'jbzip2', a Java bzip2 compression
and decompression library written by Matthew J. Francis. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jbzip2.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jbzip2/

This product contains a modified portion of 'libdivsufsort', a C API library to construct
the suffix array and the Burrows-Wheeler transformed string for any input string of
a constant-size alphabet written by Yuta Mori. It can be obtained at:

  * LICENSE:
    * license/LICENSE.libdivsufsort.txt (MIT License)
  * HOMEPAGE:
    * https://github.com/y-256/libdivsufsort

This product contains a modified portion of Nitsan Wakart's 'JCTools', Java Concurrency Tools for the JVM,
 which can be obtained at:

  * LICENSE:
    * license/LICENSE.jctools.txt (ASL2 License)
  * HOMEPAGE:
    * https://github.com/JCTools/JCTools

This product optionally depends on 'JZlib', a re-implementation of zlib in
pure Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jzlib.txt (BSD style License)
  * HOMEPAGE:
    * http://www.jcraft.com/jzlib/

This product optionally depends on 'Compress-LZF', a Java library for encoding and
decoding data in LZF format, written by Tatu Saloranta. It can be obtained at:

  * LICENSE:
    * license/LICENSE.compress-lzf.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/ning/compress

This product optionally depends on 'lz4', a LZ4 Java compression
and decompression library written by Adrien Grand. It can be obtained at:

  * LICENSE:
    * license/LICENSE.lz4.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jpountz/lz4-java

This product optionally depends on 'lzma-java', a LZMA Java compression
and decompression library, which can be obtained at:

  * LICENSE:
    * license/LICENSE.lzma-java.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jponge/lzma-java

This product contains a modified portion of 'jfastlz', a Java port of FastLZ compression
and decompression library written by William Kinney. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jfastlz.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jfastlz/

This product contains a modified portion of and optionally depends on 'Protocol Buffers', Google's data
interchange format, which can be obtained at:

  * LICENSE:
    * license/LICENSE.protobuf.txt (New BSD License)
  * HOMEPAGE:
    * https://github.com/google/protobuf

This product optionally depends on 'Bouncy Castle Crypto APIs' to generate
a temporary self-signed X.509 certificate when the JVM does not provide the
equivalent functionality.  It can be obtained at:

  * LICENSE:
    * license/LICENSE.bouncycastle.txt (MIT License)
  * HOMEPAGE:
    * http://www.bouncycastle.org/

This product optionally depends on 'Snappy', a compression library produced
by Google Inc, which can be obtained at:

  * LICENSE:
    * license/LICENSE.snappy.txt (New BSD License)
  * HOMEPAGE:
    * https://github.com/google/snappy

This product optionally depends on 'JBoss Marshalling', an alternative Java
serialization API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jboss-marshalling.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jboss-remoting/jboss-marshalling

This product optionally depends on 'Caliper', Google's micro-
benchmarking framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.caliper.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/google/caliper

This product optionally depends on 'Apache Commons Logging', a logging
framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-logging.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://commons.apache.org/logging/

This product optionally depends on 'Apache Log4J', a logging framework, which
can be obtained at:

  * LICENSE:
    * license/LICENSE.log4j.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://logging.apache.org/log4j/

This product optionally depends on 'Aalto XML', an ultra-high performance
non-blocking XML processor, which can be obtained at:

  * LICENSE:
    * license/LICENSE.aalto-xml.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://wiki.fasterxml.com/AaltoHome

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Twitter. It can be obtained at:

  * LICENSE:
    * license/LICENSE.hpack.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/twitter/hpack

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Cory Benfield. It can be obtained at:

  * LICENSE:
    * license/LICENSE.hyper-hpack.txt (MIT License)
  * HOMEPAGE:
    * https://github.com/python-hyper/hpack/

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Tatsuhiro Tsujikawa. It can be obtained at:

  * LICENSE:
    * license/LICENSE.nghttp2-hpack.txt (MIT License)
  * HOMEPAGE:
    * https://github.com/nghttp2/nghttp2/

This product contains a modified portion of 'Apache Commons Lang', a Java library
provides utilities for the java.lang API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-lang.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://commons.apache.org/proper/commons-lang/


This product contains the Maven wrapper scripts from 'Maven Wrapper', that provides an easy way to ensure a user has everything necessary to run the Maven build.

  * LICENSE:
    * license/LICENSE.mvn-wrapper.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/takari/maven-wrapper


io.grpc:grpc-core
====================

Copyright 2014 The gRPC Authors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

-----------------------------------------------------------------------

This product contains a modified portion of 'OkHttp', an open source
HTTP &amp; SPDY client for Android and Java applications, which can be obtained
at:

  * LICENSE:
    * okhttp/third_party/okhttp/LICENSE (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/square/okhttp
  * LOCATION_IN_GRPC:
    * okhttp/third_party/okhttp

This product contains a modified portion of 'Envoy', an open source
cloud-native high-performance edge/middle/service proxy, which can be
obtained at:

  * LICENSE:
    * xds/third_party/envoy/LICENSE (Apache License 2.0)
  * NOTICE:
    * xds/third_party/envoy/NOTICE
  * HOMEPAGE:
    * https://www.envoyproxy.io
  * LOCATION_IN_GRPC:
    * xds/third_party/envoy

This product contains a modified portion of 'gogoprotobuf',
an open source Protocol Buffers support for Go with Gadgets,
which can be obtained at:

  * LICENSE:
    * xds/third_party/gogoproto/LICENSE
  * HOMEPAGE:
    * https://github.com/gogo/protobuf
  * LOCATION_IN_GRPC:
    * xds/third_party/gogoproto

This product contains a modified portion of 'protoc-gen-validate (PGV)',
an open source protoc plugin to generate polyglot message validators,
which can be obtained at:

  * LICENSE:
    * xds/third_party/protoc-gen-validate/LICENSE (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/lyft/protoc-gen-validate
  * LOCATION_IN_GRPC:
    * xds/third_party/protoc-gen-validate

This product contains a modified portion of 'udpa',
an open source universal data plane API, which can be obtained at:

  * LICENSE:
    * xds/third_party/udpa/LICENSE (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/cncf/udpa
  * LOCATION_IN_GRPC:
    * xds/third_party/udpa


com.fasterxml.jackson.dataformat:jackson-dataformat-xml
====================

# Jackson JSON processor

Jackson is a high-performance, Free/Open Source JSON processing library.
It was originally written by Tatu Saloranta (tatu.saloranta@iki.fi), and has
been in development since 2007.
It is currently developed by a community of developers, as well as supported
commercially by FasterXML.com.

## Licensing

Jackson core and extension components may licensed under different licenses.
To find the details that apply to this artifact see the accompanying LICENSE file.
For more information, including possible other licensing options, contact
FasterXML.com (http://fasterxml.com).

## Credits

A list of contributors may be found from CREDITS file, which is included
in some artifacts (usually source distributions); but is always available
from the source code management (SCM) system project uses.


com.jolbox:bonecp
====================

   =========================================================================
   ==  NOTICE file corresponding to the section 4 d of                    ==
   ==  the Apache License, Version 2.0,                                   ==
   ==  in this case for the BoneCP (Java connection pool).                ==
   =========================================================================

   BoneCP
   Copyright 2010 Wallace Wadge

   This product includes software developed by
   Wallace Wadge (http://jolbox.com/).

org.codehaus.jackson:jackson-mapper-asl
====================

This product currently only contains code developed by authors
of specific components, as identified by the source code files;
if such notes are missing files have been created by
Tatu Saloranta.

For additional credits (generally to people who reported problems)
see CREDITS file.


com.google.inject:guice
====================


Google Guice - Core Library
Copyright 2006-2015 Google, Inc.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).




com.google.inject.extensions:guice-assistedinject
====================


Google Guice - Extensions - AssistedInject
Copyright 2006-2015 Google, Inc.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).




org.codehaus.jackson:jackson-xc
====================

This product currently only contains code developed by authors
of specific components, as identified by the source code files;
if such notes are missing files have been created by
Tatu Saloranta.

For additional credits (generally to people who reported problems)
see CREDITS file.


org.codehaus.jackson:jackson-jaxrs
====================

This product currently only contains code developed by authors
of specific components, as identified by the source code files;
if such notes are missing files have been created by
Tatu Saloranta.

For additional credits (generally to people who reported problems)
see CREDITS file.


com.google.inject.extensions:guice-servlet
====================


Google Guice - Extensions - Servlet
Copyright 2006-2015 Google, Inc.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).




org.codehaus.jackson:jackson-core-asl
====================

This product currently only contains code developed by authors
of specific components, as identified by the source code files;
if such notes are missing files have been created by
Tatu Saloranta.

For additional credits (generally to people who reported problems)
see CREDITS file.


org.bouncycastle:bcprov-jdk15on
====================

Copyright (c) 2000 - 2019 The Legion of the Bouncy Castle Inc. (https://www.bouncycastle.org)

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

Source: https://bouncycastle.org/license.html

log4j:log4j
====================

Apache log4j
Copyright 2007 The Apache Software Foundation

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).

com.google.inject.extensions:guice-multibindings
====================


Google Guice - Extensions - MultiBindings
Copyright 2006-2015 Google, Inc.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).


====================
ratis-thirdparty-misc is a shaded dependency which includes additional 3rd party dependencies in shaded form.
For the detailed list of the dependencies and the associated NOTICE file see licenses/NOTICE-ratis-thirdparty-misc.txt.</msg>
<status status="PASS" starttime="20220516 18:19:21.902" endtime="20220516 18:19:21.904"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:19:21.905" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:19:21.905" endtime="20220516 18:19:21.905"/>
</kw>
<status status="PASS" starttime="20220516 18:19:15.405" endtime="20220516 18:19:21.906"/>
</kw>
<msg timestamp="20220516 18:19:21.906" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:19:15.404" endtime="20220516 18:19:21.906"/>
</kw>
<status status="PASS" starttime="20220516 18:19:15.404" endtime="20220516 18:19:21.908"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220516 18:19:15.403" endtime="20220516 18:19:21.908"/>
</test>
<test id="s1-s3-t11" name="Delete file">
<kw name="Execute" library="os">
<arg>ozone fs -rm -skipTrash ${DEEP_URL}/subdir1/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:19:21.916" level="INFO">Running command 'ozone fs -rm -skipTrash ofs://om/fstest1/44302-bucket1-ofs/test/ofs/dir/subdir1/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:19:26.450" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:19:26.450" level="INFO">${output} = Deleted ofs://om/fstest1/44302-bucket1-ofs/test/ofs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20220516 18:19:21.913" endtime="20220516 18:19:26.450"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:19:26.451" level="INFO">Deleted ofs://om/fstest1/44302-bucket1-ofs/test/ofs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20220516 18:19:26.451" endtime="20220516 18:19:26.452"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:19:26.453" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:19:26.452" endtime="20220516 18:19:26.453"/>
</kw>
<status status="PASS" starttime="20220516 18:19:21.912" endtime="20220516 18:19:26.453"/>
</kw>
<msg timestamp="20220516 18:19:26.453" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:19:21.911" endtime="20220516 18:19:26.454"/>
</kw>
<status status="PASS" starttime="20220516 18:19:21.910" endtime="20220516 18:19:26.455"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:19:26.459" level="INFO">Running command 'ozone sh key list fstest1/44302-bucket1-ofs | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:19:31.741" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:19:31.741" level="INFO">${output} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/subdir1/</msg>
<status status="PASS" starttime="20220516 18:19:26.457" endtime="20220516 18:19:31.741"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:19:31.743" level="INFO">test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/subdir1/</msg>
<status status="PASS" starttime="20220516 18:19:31.742" endtime="20220516 18:19:31.743"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:19:31.744" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:19:31.743" endtime="20220516 18:19:31.744"/>
</kw>
<status status="PASS" starttime="20220516 18:19:26.456" endtime="20220516 18:19:31.744"/>
</kw>
<msg timestamp="20220516 18:19:31.745" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:19:26.456" endtime="20220516 18:19:31.745"/>
</kw>
<msg timestamp="20220516 18:19:31.745" level="INFO">${result} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/subdir1/</msg>
<status status="PASS" starttime="20220516 18:19:26.455" endtime="20220516 18:19:31.745"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 18:19:31.746" endtime="20220516 18:19:31.746"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220516 18:19:21.909" endtime="20220516 18:19:31.747"/>
</test>
<test id="s1-s3-t12" name="Delete dir">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -rmdir ${DEEP_URL}/subdir1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:19:31.752" level="INFO">Running command 'ozone fs -rmdir ofs://om/fstest1/44302-bucket1-ofs/test/ofs/dir/subdir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:19:36.234" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:19:36.234" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:19:31.750" endtime="20220516 18:19:36.234"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:19:36.235" level="INFO"/>
<status status="PASS" starttime="20220516 18:19:36.234" endtime="20220516 18:19:36.236"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:19:36.236" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:19:36.236" endtime="20220516 18:19:36.236"/>
</kw>
<status status="PASS" starttime="20220516 18:19:31.749" endtime="20220516 18:19:36.237"/>
</kw>
<msg timestamp="20220516 18:19:36.237" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:19:31.749" endtime="20220516 18:19:36.238"/>
</kw>
<msg timestamp="20220516 18:19:36.238" level="INFO">${result} = </msg>
<status status="PASS" starttime="20220516 18:19:31.748" endtime="20220516 18:19:36.238"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:19:36.243" level="INFO">Running command 'ozone sh key list fstest1/44302-bucket1-ofs | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:19:41.531" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:19:41.531" level="INFO">${output} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20220516 18:19:36.240" endtime="20220516 18:19:41.531"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:19:41.533" level="INFO">test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20220516 18:19:41.532" endtime="20220516 18:19:41.534"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:19:41.534" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:19:41.534" endtime="20220516 18:19:41.535"/>
</kw>
<status status="PASS" starttime="20220516 18:19:36.240" endtime="20220516 18:19:41.535"/>
</kw>
<msg timestamp="20220516 18:19:41.535" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:19:36.239" endtime="20220516 18:19:41.536"/>
</kw>
<msg timestamp="20220516 18:19:41.536" level="INFO">${result} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20220516 18:19:36.239" endtime="20220516 18:19:41.536"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>subdir1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 18:19:41.536" endtime="20220516 18:19:41.537"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220516 18:19:31.747" endtime="20220516 18:19:41.538"/>
</test>
<test id="s1-s3-t13" name="Touch file">
<kw name="Execute" library="os">
<arg>ozone fs -touch ${DEEP_URL}/TOUCHFILE-${SCHEME}.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:19:41.544" level="INFO">Running command 'ozone fs -touch ofs://om/fstest1/44302-bucket1-ofs/test/ofs/dir/TOUCHFILE-ofs.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:19:46.128" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:19:46.128" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:19:41.541" endtime="20220516 18:19:46.128"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:19:46.132" level="INFO"/>
<status status="PASS" starttime="20220516 18:19:46.131" endtime="20220516 18:19:46.132"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:19:46.133" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:19:46.133" endtime="20220516 18:19:46.133"/>
</kw>
<status status="PASS" starttime="20220516 18:19:41.541" endtime="20220516 18:19:46.134"/>
</kw>
<msg timestamp="20220516 18:19:46.134" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:19:41.541" endtime="20220516 18:19:46.134"/>
</kw>
<status status="PASS" starttime="20220516 18:19:41.540" endtime="20220516 18:19:46.135"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:19:46.141" level="INFO">Running command 'ozone sh key list fstest1/44302-bucket1-ofs | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:19:51.882" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:19:51.882" level="INFO">${output} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/TOUCHFILE-ofs.txt</msg>
<status status="PASS" starttime="20220516 18:19:46.137" endtime="20220516 18:19:51.882"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:19:51.885" level="INFO">test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/TOUCHFILE-ofs.txt</msg>
<status status="PASS" starttime="20220516 18:19:51.884" endtime="20220516 18:19:51.885"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:19:51.886" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:19:51.885" endtime="20220516 18:19:51.886"/>
</kw>
<status status="PASS" starttime="20220516 18:19:46.136" endtime="20220516 18:19:51.886"/>
</kw>
<msg timestamp="20220516 18:19:51.887" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:19:46.136" endtime="20220516 18:19:51.887"/>
</kw>
<msg timestamp="20220516 18:19:51.887" level="INFO">${result} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/TOUCHFILE-ofs.txt</msg>
<status status="PASS" starttime="20220516 18:19:46.135" endtime="20220516 18:19:51.888"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>TOUCHFILE-${SCHEME}.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 18:19:51.888" endtime="20220516 18:19:51.888"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220516 18:19:41.539" endtime="20220516 18:19:51.889"/>
</test>
<test id="s1-s3-t14" name="Delete file with Trash">
<kw name="Execute" library="os">
<arg>ozone fs -touch ${DEEP_URL}/testFile.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:19:51.895" level="INFO">Running command 'ozone fs -touch ofs://om/fstest1/44302-bucket1-ofs/test/ofs/dir/testFile.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:19:57.390" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:19:57.390" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:19:51.892" endtime="20220516 18:19:57.391"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:19:57.392" level="INFO"/>
<status status="PASS" starttime="20220516 18:19:57.391" endtime="20220516 18:19:57.392"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:19:57.393" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:19:57.392" endtime="20220516 18:19:57.393"/>
</kw>
<status status="PASS" starttime="20220516 18:19:51.892" endtime="20220516 18:19:57.393"/>
</kw>
<msg timestamp="20220516 18:19:57.393" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:19:51.891" endtime="20220516 18:19:57.394"/>
</kw>
<status status="PASS" starttime="20220516 18:19:51.891" endtime="20220516 18:19:57.394"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -rm ${DEEP_URL}/testFile.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:19:57.399" level="INFO">Running command 'ozone fs -rm ofs://om/fstest1/44302-bucket1-ofs/test/ofs/dir/testFile.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:20:02.382" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:20:02.382" level="INFO">${output} = 2022-05-16 18:20:02,110 [main] INFO Configuration.deprecation: io.bytes.per.checksum is deprecated. Instead, use dfs.bytes-per-checksum
2022-05-16 18:20:02,242 [main] INFO fs.TrashPolicyDefault: Moved...</msg>
<status status="PASS" starttime="20220516 18:19:57.396" endtime="20220516 18:20:02.382"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:20:02.383" level="INFO">2022-05-16 18:20:02,110 [main] INFO Configuration.deprecation: io.bytes.per.checksum is deprecated. Instead, use dfs.bytes-per-checksum
2022-05-16 18:20:02,242 [main] INFO fs.TrashPolicyDefault: Moved: 'ofs://om/fstest1/44302-bucket1-ofs/test/ofs/dir/testFile.txt' to trash at: ofs://om/fstest1/44302-bucket1-ofs/.Trash/testuser/Current/fstest1/44302-bucket1-ofs/test/ofs/dir/testFile.txt</msg>
<status status="PASS" starttime="20220516 18:20:02.382" endtime="20220516 18:20:02.383"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:20:02.384" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:20:02.384" endtime="20220516 18:20:02.384"/>
</kw>
<status status="PASS" starttime="20220516 18:19:57.396" endtime="20220516 18:20:02.385"/>
</kw>
<msg timestamp="20220516 18:20:02.385" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:19:57.395" endtime="20220516 18:20:02.385"/>
</kw>
<status status="PASS" starttime="20220516 18:19:57.395" endtime="20220516 18:20:02.386"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls -R ${BASE_URL}/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:20:02.390" level="INFO">Running command 'ozone fs -ls -R ofs://om/fstest1/44302-bucket1-ofs// 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:20:07.311" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:20:07.311" level="INFO">${output} = drwxrwxrwx   - testuser testuser          0 2022-05-16 18:20 ofs://om/fstest1/44302-bucket1-ofs/.Trash
drwxrwxrwx   - testuser testuser          0 2022-05-16 18:20 ofs://om/fstest1/44302-bucket1-ofs/....</msg>
<status status="PASS" starttime="20220516 18:20:02.388" endtime="20220516 18:20:07.312"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:20:07.313" level="INFO">drwxrwxrwx   - testuser testuser          0 2022-05-16 18:20 ofs://om/fstest1/44302-bucket1-ofs/.Trash
drwxrwxrwx   - testuser testuser          0 2022-05-16 18:20 ofs://om/fstest1/44302-bucket1-ofs/.Trash/testuser
drwxrwxrwx   - testuser testuser          0 2022-05-16 18:20 ofs://om/fstest1/44302-bucket1-ofs/.Trash/testuser/Current
drwxrwxrwx   - testuser testuser          0 2022-05-16 18:20 ofs://om/fstest1/44302-bucket1-ofs/.Trash/testuser/Current/fstest1
drwxrwxrwx   - testuser testuser          0 2022-05-16 18:20 ofs://om/fstest1/44302-bucket1-ofs/.Trash/testuser/Current/fstest1/44302-bucket1-ofs
drwxrwxrwx   - testuser testuser          0 2022-05-16 18:20 ofs://om/fstest1/44302-bucket1-ofs/.Trash/testuser/Current/fstest1/44302-bucket1-ofs/test
drwxrwxrwx   - testuser testuser          0 2022-05-16 18:20 ofs://om/fstest1/44302-bucket1-ofs/.Trash/testuser/Current/fstest1/44302-bucket1-ofs/test/ofs
drwxrwxrwx   - testuser testuser          0 2022-05-16 18:20 ofs://om/fstest1/44302-bucket1-ofs/.Trash/testuser/Current/fstest1/44302-bucket1-ofs/test/ofs/dir
-rw-rw-rw-   3 testuser testuser          0 2022-05-16 18:20 ofs://om/fstest1/44302-bucket1-ofs/.Trash/testuser/Current/fstest1/44302-bucket1-ofs/test/ofs/dir/testFile.txt
drwxrwxrwx   - testuser testuser          0 2022-05-16 18:17 ofs://om/fstest1/44302-bucket1-ofs/test
drwxrwxrwx   - testuser testuser          0 2022-05-16 18:17 ofs://om/fstest1/44302-bucket1-ofs/test/ofs
drwxrwxrwx   - testuser testuser          0 2022-05-16 18:17 ofs://om/fstest1/44302-bucket1-ofs/test/ofs/dir
-rw-rw-rw-   3 testuser testuser      17526 2022-05-16 18:18 ofs://om/fstest1/44302-bucket1-ofs/test/ofs/dir/MOVED.TXT
-rw-rw-rw-   3 testuser testuser      17526 2022-05-16 18:18 ofs://om/fstest1/44302-bucket1-ofs/test/ofs/dir/PUTFILE.txt
-rw-rw-rw-   3 testuser testuser          0 2022-05-16 18:19 ofs://om/fstest1/44302-bucket1-ofs/test/ofs/dir/TOUCHFILE-ofs.txt</msg>
<status status="PASS" starttime="20220516 18:20:07.312" endtime="20220516 18:20:07.313"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:20:07.314" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:20:07.314" endtime="20220516 18:20:07.314"/>
</kw>
<status status="PASS" starttime="20220516 18:20:02.387" endtime="20220516 18:20:07.315"/>
</kw>
<msg timestamp="20220516 18:20:07.315" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:20:02.387" endtime="20220516 18:20:07.315"/>
</kw>
<msg timestamp="20220516 18:20:07.316" level="INFO">${result} = drwxrwxrwx   - testuser testuser          0 2022-05-16 18:20 ofs://om/fstest1/44302-bucket1-ofs/.Trash
drwxrwxrwx   - testuser testuser          0 2022-05-16 18:20 ofs://om/fstest1/44302-bucket1-ofs/....</msg>
<status status="PASS" starttime="20220516 18:20:02.386" endtime="20220516 18:20:07.316"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${DEEP_URL}/testFile.txt</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 18:20:07.316" endtime="20220516 18:20:07.317"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>.Trash/hadoop</arg>
<arg>.Trash/testuser</arg>
<arg>.Trash/root</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20220516 18:20:07.317" endtime="20220516 18:20:07.318"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${DEEP_DIR}/testFile.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 18:20:07.318" endtime="20220516 18:20:07.318"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220516 18:19:51.889" endtime="20220516 18:20:07.319"/>
</test>
<test id="s1-s3-t15" name="Delete recursively">
<kw name="Execute" library="os">
<arg>ozone fs -mkdir -p ${DEEP_URL}/subdir2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:20:07.325" level="INFO">Running command 'ozone fs -mkdir -p ofs://om/fstest1/44302-bucket1-ofs/test/ofs/dir/subdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:20:11.832" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:20:11.833" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:20:07.323" endtime="20220516 18:20:11.833"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:20:11.834" level="INFO"/>
<status status="PASS" starttime="20220516 18:20:11.833" endtime="20220516 18:20:11.834"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:20:11.835" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:20:11.835" endtime="20220516 18:20:11.835"/>
</kw>
<status status="PASS" starttime="20220516 18:20:07.322" endtime="20220516 18:20:11.836"/>
</kw>
<msg timestamp="20220516 18:20:11.836" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:20:07.322" endtime="20220516 18:20:11.837"/>
</kw>
<status status="PASS" starttime="20220516 18:20:07.321" endtime="20220516 18:20:11.837"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -rm -skipTrash -r ${DEEP_URL}/subdir2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:20:11.842" level="INFO">Running command 'ozone fs -rm -skipTrash -r ofs://om/fstest1/44302-bucket1-ofs/test/ofs/dir/subdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:20:16.523" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:20:16.523" level="INFO">${output} = Deleted ofs://om/fstest1/44302-bucket1-ofs/test/ofs/dir/subdir2</msg>
<status status="PASS" starttime="20220516 18:20:11.839" endtime="20220516 18:20:16.524"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:20:16.525" level="INFO">Deleted ofs://om/fstest1/44302-bucket1-ofs/test/ofs/dir/subdir2</msg>
<status status="PASS" starttime="20220516 18:20:16.524" endtime="20220516 18:20:16.525"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:20:16.526" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:20:16.525" endtime="20220516 18:20:16.526"/>
</kw>
<status status="PASS" starttime="20220516 18:20:11.838" endtime="20220516 18:20:16.527"/>
</kw>
<msg timestamp="20220516 18:20:16.527" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:20:11.838" endtime="20220516 18:20:16.527"/>
</kw>
<status status="PASS" starttime="20220516 18:20:11.837" endtime="20220516 18:20:16.528"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:20:16.532" level="INFO">Running command 'ozone sh key list fstest1/44302-bucket1-ofs | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:20:22.006" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:20:22.007" level="INFO">${output} = .Trash/
test/
.Trash/testuser/
.Trash/testuser/Current/
.Trash/testuser/Current/fstest1/
.Trash/testuser/Current/fstest1/44302-bucket1-ofs/
.Trash/testuser/Current/fstest1/44302-bucket1-ofs/test/
.Tra...</msg>
<status status="PASS" starttime="20220516 18:20:16.530" endtime="20220516 18:20:22.007"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:20:22.008" level="INFO">.Trash/
test/
.Trash/testuser/
.Trash/testuser/Current/
.Trash/testuser/Current/fstest1/
.Trash/testuser/Current/fstest1/44302-bucket1-ofs/
.Trash/testuser/Current/fstest1/44302-bucket1-ofs/test/
.Trash/testuser/Current/fstest1/44302-bucket1-ofs/test/ofs/
.Trash/testuser/Current/fstest1/44302-bucket1-ofs/test/ofs/dir/
.Trash/testuser/Current/fstest1/44302-bucket1-ofs/test/ofs/dir/testFile.txt
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/TOUCHFILE-ofs.txt</msg>
<status status="PASS" starttime="20220516 18:20:22.007" endtime="20220516 18:20:22.008"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:20:22.009" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:20:22.008" endtime="20220516 18:20:22.009"/>
</kw>
<status status="PASS" starttime="20220516 18:20:16.529" endtime="20220516 18:20:22.010"/>
</kw>
<msg timestamp="20220516 18:20:22.010" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:20:16.529" endtime="20220516 18:20:22.010"/>
</kw>
<msg timestamp="20220516 18:20:22.011" level="INFO">${result} = .Trash/
test/
.Trash/testuser/
.Trash/testuser/Current/
.Trash/testuser/Current/fstest1/
.Trash/testuser/Current/fstest1/44302-bucket1-ofs/
.Trash/testuser/Current/fstest1/44302-bucket1-ofs/test/
.Tra...</msg>
<status status="PASS" starttime="20220516 18:20:16.528" endtime="20220516 18:20:22.011"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${DEEP_DIR}/subdir2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 18:20:22.011" endtime="20220516 18:20:22.012"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220516 18:20:07.320" endtime="20220516 18:20:22.012"/>
</test>
<test id="s1-s3-t16" name="List recursively">
<kw name="Setup localdir1" type="SETUP">
<kw name="Execute" library="os">
<arg>rm -Rf /tmp/localdir1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:20:22.020" level="INFO">Running command 'rm -Rf /tmp/localdir1 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:20:22.024" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:20:22.025" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:20:22.017" endtime="20220516 18:20:22.025"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:20:22.026" level="INFO"/>
<status status="PASS" starttime="20220516 18:20:22.025" endtime="20220516 18:20:22.026"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:20:22.027" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:20:22.026" endtime="20220516 18:20:22.027"/>
</kw>
<status status="PASS" starttime="20220516 18:20:22.016" endtime="20220516 18:20:22.028"/>
</kw>
<msg timestamp="20220516 18:20:22.028" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:20:22.016" endtime="20220516 18:20:22.029"/>
</kw>
<status status="PASS" starttime="20220516 18:20:22.015" endtime="20220516 18:20:22.029"/>
</kw>
<kw name="Execute" library="os">
<arg>mkdir /tmp/localdir1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:20:22.034" level="INFO">Running command 'mkdir /tmp/localdir1 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:20:22.038" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:20:22.038" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:20:22.031" endtime="20220516 18:20:22.038"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:20:22.040" level="INFO"/>
<status status="PASS" starttime="20220516 18:20:22.039" endtime="20220516 18:20:22.040"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:20:22.041" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:20:22.040" endtime="20220516 18:20:22.041"/>
</kw>
<status status="PASS" starttime="20220516 18:20:22.030" endtime="20220516 18:20:22.041"/>
</kw>
<msg timestamp="20220516 18:20:22.042" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:20:22.030" endtime="20220516 18:20:22.042"/>
</kw>
<status status="PASS" starttime="20220516 18:20:22.029" endtime="20220516 18:20:22.042"/>
</kw>
<kw name="Execute" library="os">
<arg>cp NOTICE.txt /tmp/localdir1/LOCAL.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:20:22.046" level="INFO">Running command 'cp NOTICE.txt /tmp/localdir1/LOCAL.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:20:22.051" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:20:22.052" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:20:22.044" endtime="20220516 18:20:22.052"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:20:22.053" level="INFO"/>
<status status="PASS" starttime="20220516 18:20:22.052" endtime="20220516 18:20:22.054"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:20:22.054" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:20:22.054" endtime="20220516 18:20:22.055"/>
</kw>
<status status="PASS" starttime="20220516 18:20:22.044" endtime="20220516 18:20:22.055"/>
</kw>
<msg timestamp="20220516 18:20:22.055" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:20:22.043" endtime="20220516 18:20:22.056"/>
</kw>
<status status="PASS" starttime="20220516 18:20:22.043" endtime="20220516 18:20:22.056"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir -p ${BASE_URL}testdir1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:20:22.063" level="INFO">Running command 'ozone fs -mkdir -p ofs://om/fstest1/44302-bucket1-ofs/testdir1 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:20:26.537" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:20:26.537" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:20:22.059" endtime="20220516 18:20:26.537"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:20:26.541" level="INFO"/>
<status status="PASS" starttime="20220516 18:20:26.540" endtime="20220516 18:20:26.541"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:20:26.542" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:20:26.542" endtime="20220516 18:20:26.543"/>
</kw>
<status status="PASS" starttime="20220516 18:20:22.058" endtime="20220516 18:20:26.543"/>
</kw>
<msg timestamp="20220516 18:20:26.543" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:20:22.057" endtime="20220516 18:20:26.544"/>
</kw>
<status status="PASS" starttime="20220516 18:20:22.057" endtime="20220516 18:20:26.544"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -copyFromLocal /tmp/localdir1 ${BASE_URL}testdir1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:20:26.549" level="INFO">Running command 'ozone fs -copyFromLocal /tmp/localdir1 ofs://om/fstest1/44302-bucket1-ofs/testdir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:20:36.346" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:20:36.346" level="INFO">${output} = 2022-05-16 18:20:31,545 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-05-16 18:20:31,643 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220516 18:20:26.546" endtime="20220516 18:20:36.347"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:20:36.348" level="INFO">2022-05-16 18:20:31,545 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-05-16 18:20:31,643 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-05-16 18:20:31,643 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2022-05-16 18:20:31,999 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20220516 18:20:36.347" endtime="20220516 18:20:36.348"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:20:36.349" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:20:36.348" endtime="20220516 18:20:36.349"/>
</kw>
<status status="PASS" starttime="20220516 18:20:26.546" endtime="20220516 18:20:36.350"/>
</kw>
<msg timestamp="20220516 18:20:36.350" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:20:26.545" endtime="20220516 18:20:36.350"/>
</kw>
<status status="PASS" starttime="20220516 18:20:26.545" endtime="20220516 18:20:36.351"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -put NOTICE.txt ${BASE_URL}testdir1/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:20:36.355" level="INFO">Running command 'ozone fs -put NOTICE.txt ofs://om/fstest1/44302-bucket1-ofs/testdir1/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:20:46.091" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:20:46.091" level="INFO">${output} = 2022-05-16 18:20:41,483 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-05-16 18:20:41,624 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220516 18:20:36.353" endtime="20220516 18:20:46.091"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:20:46.093" level="INFO">2022-05-16 18:20:41,483 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-05-16 18:20:41,624 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-05-16 18:20:41,624 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2022-05-16 18:20:41,960 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20220516 18:20:46.092" endtime="20220516 18:20:46.093"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:20:46.094" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:20:46.093" endtime="20220516 18:20:46.094"/>
</kw>
<status status="PASS" starttime="20220516 18:20:36.352" endtime="20220516 18:20:46.094"/>
</kw>
<msg timestamp="20220516 18:20:46.094" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:20:36.352" endtime="20220516 18:20:46.095"/>
</kw>
<status status="PASS" starttime="20220516 18:20:36.351" endtime="20220516 18:20:46.095"/>
</kw>
<status status="PASS" starttime="20220516 18:20:22.014" endtime="20220516 18:20:46.096"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls -R ${BASE_URL}testdir1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:20:46.100" level="INFO">Running command 'ozone fs -ls -R ofs://om/fstest1/44302-bucket1-ofs/testdir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:20:50.821" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:20:50.821" level="INFO">${output} = -rw-rw-rw-   3 testuser testuser      17526 2022-05-16 18:20 ofs://om/fstest1/44302-bucket1-ofs/testdir1/NOTICE.txt
drwxrwxrwx   - testuser testuser          0 2022-05-16 18:20 ofs://om/fstest1/44302-...</msg>
<status status="PASS" starttime="20220516 18:20:46.098" endtime="20220516 18:20:50.821"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:20:50.823" level="INFO">-rw-rw-rw-   3 testuser testuser      17526 2022-05-16 18:20 ofs://om/fstest1/44302-bucket1-ofs/testdir1/NOTICE.txt
drwxrwxrwx   - testuser testuser          0 2022-05-16 18:20 ofs://om/fstest1/44302-bucket1-ofs/testdir1/localdir1
-rw-rw-rw-   3 testuser testuser      17526 2022-05-16 18:20 ofs://om/fstest1/44302-bucket1-ofs/testdir1/localdir1/LOCAL.txt</msg>
<status status="PASS" starttime="20220516 18:20:50.822" endtime="20220516 18:20:50.823"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:20:50.824" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:20:50.823" endtime="20220516 18:20:50.824"/>
</kw>
<status status="PASS" starttime="20220516 18:20:46.097" endtime="20220516 18:20:50.825"/>
</kw>
<msg timestamp="20220516 18:20:50.825" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:20:46.097" endtime="20220516 18:20:50.825"/>
</kw>
<msg timestamp="20220516 18:20:50.826" level="INFO">${result} = -rw-rw-rw-   3 testuser testuser      17526 2022-05-16 18:20 ofs://om/fstest1/44302-bucket1-ofs/testdir1/NOTICE.txt
drwxrwxrwx   - testuser testuser          0 2022-05-16 18:20 ofs://om/fstest1/44302-...</msg>
<status status="PASS" starttime="20220516 18:20:46.096" endtime="20220516 18:20:50.826"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>localdir1/LOCAL.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 18:20:50.826" endtime="20220516 18:20:50.827"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>testdir1/NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 18:20:50.827" endtime="20220516 18:20:50.827"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220516 18:20:22.013" endtime="20220516 18:20:50.828"/>
</test>
<test id="s1-s3-t17" name="Copy to other bucket">
<kw name="Format FS URL" library="fs">
<var>${target}</var>
<arg>${SCHEME}</arg>
<arg>${VOLUME}</arg>
<arg>${BUCKET2}</arg>
<arg>testdir2</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220516 18:20:50.836" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20220516 18:20:50.836" endtime="20220516 18:20:50.836"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220516 18:20:50.837" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20220516 18:20:50.836" endtime="20220516 18:20:50.837"/>
</kw>
<status status="PASS" starttime="20220516 18:20:50.835" endtime="20220516 18:20:50.838"/>
</kw>
<msg timestamp="20220516 18:20:50.838" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20220516 18:20:50.832" endtime="20220516 18:20:50.838"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220516 18:20:50.841" level="INFO">${first} = t</msg>
<status status="PASS" starttime="20220516 18:20:50.840" endtime="20220516 18:20:50.841"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220516 18:20:50.842" level="INFO">${result} = /testdir2</msg>
<status status="PASS" starttime="20220516 18:20:50.841" endtime="20220516 18:20:50.842"/>
</kw>
<status status="PASS" starttime="20220516 18:20:50.839" endtime="20220516 18:20:50.842"/>
</kw>
<msg timestamp="20220516 18:20:50.842" level="INFO">${path_with_leading} = /testdir2</msg>
<status status="PASS" starttime="20220516 18:20:50.838" endtime="20220516 18:20:50.842"/>
</kw>
<status status="PASS" starttime="20220516 18:20:50.831" endtime="20220516 18:20:50.843"/>
</kw>
<msg timestamp="20220516 18:20:50.843" level="INFO">${url} = ofs://om/fstest1/44302-bucket2-ofs/testdir2</msg>
<status status="PASS" starttime="20220516 18:20:50.830" endtime="20220516 18:20:50.843"/>
</kw>
<msg timestamp="20220516 18:20:50.843" level="INFO">${target} = ofs://om/fstest1/44302-bucket2-ofs/testdir2</msg>
<status status="PASS" starttime="20220516 18:20:50.829" endtime="20220516 18:20:50.843"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir -p ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:20:50.848" level="INFO">Running command 'ozone fs -mkdir -p ofs://om/fstest1/44302-bucket2-ofs/testdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:20:55.513" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:20:55.513" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:20:50.845" endtime="20220516 18:20:55.513"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:20:55.515" level="INFO"/>
<status status="PASS" starttime="20220516 18:20:55.514" endtime="20220516 18:20:55.515"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:20:55.516" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:20:55.515" endtime="20220516 18:20:55.516"/>
</kw>
<status status="PASS" starttime="20220516 18:20:50.845" endtime="20220516 18:20:55.516"/>
</kw>
<msg timestamp="20220516 18:20:55.516" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:20:50.844" endtime="20220516 18:20:55.517"/>
</kw>
<status status="PASS" starttime="20220516 18:20:50.843" endtime="20220516 18:20:55.517"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -cp ${BASE_URL}/testdir1/localdir1 ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:20:55.522" level="INFO">Running command 'ozone fs -cp ofs://om/fstest1/44302-bucket1-ofs//testdir1/localdir1 ofs://om/fstest1/44302-bucket2-ofs/testdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:21:05.915" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:21:05.916" level="INFO">${output} = 2022-05-16 18:21:00,691 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-05-16 18:21:00,806 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220516 18:20:55.520" endtime="20220516 18:21:05.916"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:21:05.917" level="INFO">2022-05-16 18:21:00,691 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-05-16 18:21:00,806 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-05-16 18:21:00,806 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2022-05-16 18:21:02,455 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20220516 18:21:05.916" endtime="20220516 18:21:05.917"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:21:05.918" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:21:05.917" endtime="20220516 18:21:05.918"/>
</kw>
<status status="PASS" starttime="20220516 18:20:55.519" endtime="20220516 18:21:05.919"/>
</kw>
<msg timestamp="20220516 18:21:05.919" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:20:55.518" endtime="20220516 18:21:05.919"/>
</kw>
<status status="PASS" starttime="20220516 18:20:55.518" endtime="20220516 18:21:05.920"/>
</kw>
<kw name="Execute" library="os" type="TEARDOWN">
<arg>ozone fs -rm -r ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:21:05.924" level="INFO">Running command 'ozone fs -rm -r ofs://om/fstest1/44302-bucket2-ofs/testdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:21:10.779" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:21:10.780" level="INFO">${output} = 2022-05-16 18:21:10,590 [main] INFO Configuration.deprecation: io.bytes.per.checksum is deprecated. Instead, use dfs.bytes-per-checksum
2022-05-16 18:21:10,676 [main] INFO fs.TrashPolicyDefault: Moved...</msg>
<status status="PASS" starttime="20220516 18:21:05.922" endtime="20220516 18:21:10.780"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:21:10.781" level="INFO">2022-05-16 18:21:10,590 [main] INFO Configuration.deprecation: io.bytes.per.checksum is deprecated. Instead, use dfs.bytes-per-checksum
2022-05-16 18:21:10,676 [main] INFO fs.TrashPolicyDefault: Moved: 'ofs://om/fstest1/44302-bucket2-ofs/testdir2' to trash at: ofs://om/fstest1/44302-bucket2-ofs/.Trash/testuser/Current/fstest1/44302-bucket2-ofs/testdir2</msg>
<status status="PASS" starttime="20220516 18:21:10.780" endtime="20220516 18:21:10.781"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:21:10.782" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:21:10.782" endtime="20220516 18:21:10.783"/>
</kw>
<status status="PASS" starttime="20220516 18:21:05.921" endtime="20220516 18:21:10.783"/>
</kw>
<msg timestamp="20220516 18:21:10.783" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:21:05.921" endtime="20220516 18:21:10.783"/>
</kw>
<status status="PASS" starttime="20220516 18:21:05.920" endtime="20220516 18:21:10.784"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220516 18:20:50.828" endtime="20220516 18:21:10.784"/>
</test>
<test id="s1-s3-t18" name="Copy to other volume">
<kw name="Format FS URL" library="fs">
<var>${target}</var>
<arg>${SCHEME}</arg>
<arg>${VOL2}</arg>
<arg>${BUCKET_IN_VOL2}</arg>
<arg>testdir3</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220516 18:21:10.793" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20220516 18:21:10.793" endtime="20220516 18:21:10.793"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220516 18:21:10.795" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20220516 18:21:10.794" endtime="20220516 18:21:10.795"/>
</kw>
<status status="PASS" starttime="20220516 18:21:10.792" endtime="20220516 18:21:10.795"/>
</kw>
<msg timestamp="20220516 18:21:10.795" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20220516 18:21:10.789" endtime="20220516 18:21:10.795"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220516 18:21:10.798" level="INFO">${first} = t</msg>
<status status="PASS" starttime="20220516 18:21:10.797" endtime="20220516 18:21:10.798"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220516 18:21:10.799" level="INFO">${result} = /testdir3</msg>
<status status="PASS" starttime="20220516 18:21:10.798" endtime="20220516 18:21:10.799"/>
</kw>
<status status="PASS" starttime="20220516 18:21:10.797" endtime="20220516 18:21:10.799"/>
</kw>
<msg timestamp="20220516 18:21:10.800" level="INFO">${path_with_leading} = /testdir3</msg>
<status status="PASS" starttime="20220516 18:21:10.795" endtime="20220516 18:21:10.800"/>
</kw>
<status status="PASS" starttime="20220516 18:21:10.788" endtime="20220516 18:21:10.800"/>
</kw>
<msg timestamp="20220516 18:21:10.801" level="INFO">${url} = ofs://om/fstest2/44302-bucket3-ofs/testdir3</msg>
<status status="PASS" starttime="20220516 18:21:10.787" endtime="20220516 18:21:10.801"/>
</kw>
<msg timestamp="20220516 18:21:10.801" level="INFO">${target} = ofs://om/fstest2/44302-bucket3-ofs/testdir3</msg>
<status status="PASS" starttime="20220516 18:21:10.786" endtime="20220516 18:21:10.801"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir -p ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:21:10.806" level="INFO">Running command 'ozone fs -mkdir -p ofs://om/fstest2/44302-bucket3-ofs/testdir3 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:21:15.399" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:21:15.399" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:21:10.804" endtime="20220516 18:21:15.399"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:21:15.400" level="INFO"/>
<status status="PASS" starttime="20220516 18:21:15.399" endtime="20220516 18:21:15.401"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:21:15.401" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:21:15.401" endtime="20220516 18:21:15.401"/>
</kw>
<status status="PASS" starttime="20220516 18:21:10.803" endtime="20220516 18:21:15.402"/>
</kw>
<msg timestamp="20220516 18:21:15.402" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:21:10.802" endtime="20220516 18:21:15.402"/>
</kw>
<status status="PASS" starttime="20220516 18:21:10.802" endtime="20220516 18:21:15.403"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -cp ${BASE_URL}/testdir1/localdir1 ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:21:15.408" level="INFO">Running command 'ozone fs -cp ofs://om/fstest1/44302-bucket1-ofs//testdir1/localdir1 ofs://om/fstest2/44302-bucket3-ofs/testdir3 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:21:25.389" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:21:25.389" level="INFO">${output} = 2022-05-16 18:21:20,440 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-05-16 18:21:20,540 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220516 18:21:15.405" endtime="20220516 18:21:25.389"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:21:25.391" level="INFO">2022-05-16 18:21:20,440 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-05-16 18:21:20,540 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-05-16 18:21:20,540 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2022-05-16 18:21:22,166 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20220516 18:21:25.390" endtime="20220516 18:21:25.391"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:21:25.391" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:21:25.391" endtime="20220516 18:21:25.392"/>
</kw>
<status status="PASS" starttime="20220516 18:21:15.404" endtime="20220516 18:21:25.392"/>
</kw>
<msg timestamp="20220516 18:21:25.392" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:21:15.404" endtime="20220516 18:21:25.393"/>
</kw>
<status status="PASS" starttime="20220516 18:21:15.403" endtime="20220516 18:21:25.393"/>
</kw>
<kw name="Execute" library="os" type="TEARDOWN">
<arg>ozone fs -rm -r ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:21:25.398" level="INFO">Running command 'ozone fs -rm -r ofs://om/fstest2/44302-bucket3-ofs/testdir3 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:21:30.160" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:21:30.160" level="INFO">${output} = 2022-05-16 18:21:29,831 [main] INFO Configuration.deprecation: io.bytes.per.checksum is deprecated. Instead, use dfs.bytes-per-checksum
2022-05-16 18:21:29,936 [main] INFO fs.TrashPolicyDefault: Moved...</msg>
<status status="PASS" starttime="20220516 18:21:25.396" endtime="20220516 18:21:30.161"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:21:30.162" level="INFO">2022-05-16 18:21:29,831 [main] INFO Configuration.deprecation: io.bytes.per.checksum is deprecated. Instead, use dfs.bytes-per-checksum
2022-05-16 18:21:29,936 [main] INFO fs.TrashPolicyDefault: Moved: 'ofs://om/fstest2/44302-bucket3-ofs/testdir3' to trash at: ofs://om/fstest2/44302-bucket3-ofs/.Trash/testuser/Current/fstest2/44302-bucket3-ofs/testdir3</msg>
<status status="PASS" starttime="20220516 18:21:30.161" endtime="20220516 18:21:30.162"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:21:30.163" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:21:30.162" endtime="20220516 18:21:30.163"/>
</kw>
<status status="PASS" starttime="20220516 18:21:25.395" endtime="20220516 18:21:30.163"/>
</kw>
<msg timestamp="20220516 18:21:30.163" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:21:25.395" endtime="20220516 18:21:30.164"/>
</kw>
<status status="PASS" starttime="20220516 18:21:25.394" endtime="20220516 18:21:30.166"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220516 18:21:10.785" endtime="20220516 18:21:30.166"/>
</test>
<test id="s1-s3-t19" name="List file created via shell">
<kw name="Execute" library="os" type="SETUP">
<arg>ozone sh key put ${VOLUME}/${BUCKET}/${SCHEME}.txt NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:21:30.173" level="INFO">Running command 'ozone sh key put fstest1/44302-bucket1-ofs/ofs.txt NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:21:40.177" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:21:40.177" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:21:30.171" endtime="20220516 18:21:40.177"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:21:40.179" level="INFO"/>
<status status="PASS" starttime="20220516 18:21:40.178" endtime="20220516 18:21:40.179"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:21:40.180" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:21:40.179" endtime="20220516 18:21:40.180"/>
</kw>
<status status="PASS" starttime="20220516 18:21:30.170" endtime="20220516 18:21:40.180"/>
</kw>
<msg timestamp="20220516 18:21:40.180" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:21:30.169" endtime="20220516 18:21:40.181"/>
</kw>
<status status="PASS" starttime="20220516 18:21:30.168" endtime="20220516 18:21:40.181"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls ${BASE_URL}${SCHEME}.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:21:40.186" level="INFO">Running command 'ozone fs -ls ofs://om/fstest1/44302-bucket1-ofs/ofs.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:21:44.796" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:21:44.796" level="INFO">${output} = -rw-rw-rw-   3 testuser testuser      17526 2022-05-16 18:21 ofs://om/fstest1/44302-bucket1-ofs/ofs.txt</msg>
<status status="PASS" starttime="20220516 18:21:40.184" endtime="20220516 18:21:44.796"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:21:44.798" level="INFO">-rw-rw-rw-   3 testuser testuser      17526 2022-05-16 18:21 ofs://om/fstest1/44302-bucket1-ofs/ofs.txt</msg>
<status status="PASS" starttime="20220516 18:21:44.797" endtime="20220516 18:21:44.798"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:21:44.799" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:21:44.799" endtime="20220516 18:21:44.799"/>
</kw>
<status status="PASS" starttime="20220516 18:21:40.183" endtime="20220516 18:21:44.800"/>
</kw>
<msg timestamp="20220516 18:21:44.800" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:21:40.182" endtime="20220516 18:21:44.800"/>
</kw>
<msg timestamp="20220516 18:21:44.801" level="INFO">${result} = -rw-rw-rw-   3 testuser testuser      17526 2022-05-16 18:21 ofs://om/fstest1/44302-bucket1-ofs/ofs.txt</msg>
<status status="PASS" starttime="20220516 18:21:40.181" endtime="20220516 18:21:44.801"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${SCHEME}.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 18:21:44.801" endtime="20220516 18:21:44.802"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220516 18:21:30.167" endtime="20220516 18:21:44.802"/>
</test>
<test id="s1-s3-t20" name="Reject overwrite existing">
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone fs -copyFromLocal NOTICE.txt ${BASE_URL}${SCHEME}.txt</arg>
<arg>1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:21:44.807" level="INFO">Running command 'ozone fs -copyFromLocal NOTICE.txt ofs://om/fstest1/44302-bucket1-ofs/ofs.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:21:49.183" level="INFO">${rc} = 1</msg>
<msg timestamp="20220516 18:21:49.184" level="INFO">${output} = copyFromLocal: `ofs://om/fstest1/44302-bucket1-ofs/ofs.txt': File exists</msg>
<status status="PASS" starttime="20220516 18:21:44.805" endtime="20220516 18:21:49.184"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:21:49.185" level="INFO">copyFromLocal: `ofs://om/fstest1/44302-bucket1-ofs/ofs.txt': File exists</msg>
<status status="PASS" starttime="20220516 18:21:49.184" endtime="20220516 18:21:49.185"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:21:49.186" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:21:49.185" endtime="20220516 18:21:49.186"/>
</kw>
<msg timestamp="20220516 18:21:49.186" level="INFO">${result} = copyFromLocal: `ofs://om/fstest1/44302-bucket1-ofs/ofs.txt': File exists</msg>
<status status="PASS" starttime="20220516 18:21:44.804" endtime="20220516 18:21:49.187"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>File exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 18:21:49.187" endtime="20220516 18:21:49.187"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220516 18:21:44.803" endtime="20220516 18:21:49.188"/>
</test>
<test id="s1-s3-t21" name="Get file">
<kw name="Execute" library="os" type="SETUP">
<arg>rm -Rf /tmp/GET.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:21:49.193" level="INFO">Running command 'rm -Rf /tmp/GET.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:21:49.196" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:21:49.196" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:21:49.191" endtime="20220516 18:21:49.196"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:21:49.197" level="INFO"/>
<status status="PASS" starttime="20220516 18:21:49.197" endtime="20220516 18:21:49.198"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:21:49.198" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:21:49.198" endtime="20220516 18:21:49.199"/>
</kw>
<status status="PASS" starttime="20220516 18:21:49.190" endtime="20220516 18:21:49.199"/>
</kw>
<msg timestamp="20220516 18:21:49.199" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:21:49.190" endtime="20220516 18:21:49.199"/>
</kw>
<status status="PASS" starttime="20220516 18:21:49.189" endtime="20220516 18:21:49.200"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -get ${BASE_URL}${SCHEME}.txt /tmp/GET.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:21:49.204" level="INFO">Running command 'ozone fs -get ofs://om/fstest1/44302-bucket1-ofs/ofs.txt /tmp/GET.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:21:55.947" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:21:55.947" level="INFO">${output} = 2022-05-16 18:21:53,804 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-05-16 18:21:53,958 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220516 18:21:49.202" endtime="20220516 18:21:55.947"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:21:55.948" level="INFO">2022-05-16 18:21:53,804 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-05-16 18:21:53,958 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-05-16 18:21:53,958 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started</msg>
<status status="PASS" starttime="20220516 18:21:55.947" endtime="20220516 18:21:55.948"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:21:55.949" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:21:55.948" endtime="20220516 18:21:55.949"/>
</kw>
<status status="PASS" starttime="20220516 18:21:49.202" endtime="20220516 18:21:55.950"/>
</kw>
<msg timestamp="20220516 18:21:55.950" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:21:49.201" endtime="20220516 18:21:55.950"/>
</kw>
<status status="PASS" starttime="20220516 18:21:49.200" endtime="20220516 18:21:55.951"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>/tmp/GET.txt</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20220516 18:21:55.951" level="INFO" html="true">File '&lt;a href="file:///tmp/GET.txt"&gt;/tmp/GET.txt&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20220516 18:21:55.951" endtime="20220516 18:21:55.951"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220516 18:21:49.188" endtime="20220516 18:21:55.952"/>
</test>
<doc>Ozone FS tests</doc>
<status status="PASS" starttime="20220516 18:17:02.883" endtime="20220516 18:21:55.955"/>
</suite>
<suite id="s1-s4" name="ozonefs-o3fs-link" source="/opt/hadoop/smoketest/ozonefs/ozonefs.robot">
<kw name="Setup for FS test" library="setup" type="SETUP">
<kw name="Assign suite vars for FS test" library="setup">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220516 18:22:02.879" level="INFO">${random} = 23554</msg>
<status status="PASS" starttime="20220516 18:22:02.879" endtime="20220516 18:22:02.879"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<arg>${random}-${BUCKET_TYPE}1-${SCHEME}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220516 18:22:02.880" level="INFO">${BUCKET} = 23554-link1-o3fs</msg>
<status status="PASS" starttime="20220516 18:22:02.879" endtime="20220516 18:22:02.880"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET2}</arg>
<arg>${random}-${BUCKET_TYPE}2-${SCHEME}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220516 18:22:02.881" level="INFO">${BUCKET2} = 23554-link2-o3fs</msg>
<status status="PASS" starttime="20220516 18:22:02.881" endtime="20220516 18:22:02.882"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET_IN_VOL2}</arg>
<arg>${random}-${BUCKET_TYPE}3-${SCHEME}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220516 18:22:02.883" level="INFO">${BUCKET_IN_VOL2} = 23554-link3-o3fs</msg>
<status status="PASS" starttime="20220516 18:22:02.882" endtime="20220516 18:22:02.883"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${BASE_URL}</var>
<arg>${SCHEME}</arg>
<arg>${VOLUME}</arg>
<arg>${BUCKET}</arg>
<arg>/</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220516 18:22:02.888" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220516 18:22:02.887" endtime="20220516 18:22:02.888"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220516 18:22:02.888" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220516 18:22:02.888" endtime="20220516 18:22:02.889"/>
</kw>
<status status="PASS" starttime="20220516 18:22:02.887" endtime="20220516 18:22:02.889"/>
</kw>
<msg timestamp="20220516 18:22:02.889" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220516 18:22:02.885" endtime="20220516 18:22:02.889"/>
</kw>
<status status="PASS" starttime="20220516 18:22:02.884" endtime="20220516 18:22:02.889"/>
</kw>
<msg timestamp="20220516 18:22:02.890" level="INFO">${url} = o3fs://23554-link1-o3fs.fstest1.om//</msg>
<status status="PASS" starttime="20220516 18:22:02.884" endtime="20220516 18:22:02.890"/>
</kw>
<msg timestamp="20220516 18:22:02.890" level="INFO">${BASE_URL} = o3fs://23554-link1-o3fs.fstest1.om//</msg>
<status status="PASS" starttime="20220516 18:22:02.883" endtime="20220516 18:22:02.890"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BASE_URL}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220516 18:22:02.891" level="INFO">${BASE_URL} = o3fs://23554-link1-o3fs.fstest1.om//</msg>
<status status="PASS" starttime="20220516 18:22:02.890" endtime="20220516 18:22:02.891"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${DEEP_URL}</arg>
<arg>${BASE_URL}${DEEP_DIR}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220516 18:22:02.893" level="INFO">${DEEP_URL} = o3fs://23554-link1-o3fs.fstest1.om//test/o3fs/dir</msg>
<status status="PASS" starttime="20220516 18:22:02.891" endtime="20220516 18:22:02.893"/>
</kw>
<status status="PASS" starttime="20220516 18:22:02.878" endtime="20220516 18:22:02.893"/>
</kw>
<kw name="Create volumes for FS test" library="setup">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone sh volume create ${VOLUME} --space-quota 100TB</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:22:02.899" level="INFO">Running command 'ozone sh volume create fstest1 --space-quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:22:07.603" level="INFO">${rc} = 255</msg>
<msg timestamp="20220516 18:22:07.603" level="INFO">${output} = VOLUME_ALREADY_EXISTS Volume already exists</msg>
<status status="PASS" starttime="20220516 18:22:02.894" endtime="20220516 18:22:07.603"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:22:07.605" level="INFO">VOLUME_ALREADY_EXISTS Volume already exists</msg>
<status status="PASS" starttime="20220516 18:22:07.604" endtime="20220516 18:22:07.605"/>
</kw>
<status status="PASS" starttime="20220516 18:22:02.894" endtime="20220516 18:22:07.605"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone sh volume create ${VOL2} --space-quota 100TB</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:22:07.609" level="INFO">Running command 'ozone sh volume create fstest2 --space-quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:22:12.492" level="INFO">${rc} = 255</msg>
<msg timestamp="20220516 18:22:12.493" level="INFO">${output} = VOLUME_ALREADY_EXISTS Volume already exists</msg>
<status status="PASS" starttime="20220516 18:22:07.607" endtime="20220516 18:22:12.493"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:22:12.494" level="INFO">VOLUME_ALREADY_EXISTS Volume already exists</msg>
<status status="PASS" starttime="20220516 18:22:12.493" endtime="20220516 18:22:12.494"/>
</kw>
<status status="PASS" starttime="20220516 18:22:07.606" endtime="20220516 18:22:12.495"/>
</kw>
<status status="PASS" starttime="20220516 18:22:02.893" endtime="20220516 18:22:12.495"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create ${BUCKET_TYPE}s for FS test</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create links for FS test" library="setup">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone sh volume create ${VOLUME}-src --space-quota 100TB</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:22:12.499" level="INFO">Running command 'ozone sh volume create fstest1-src --space-quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:22:17.411" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:22:17.412" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:22:12.497" endtime="20220516 18:22:17.412"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:22:17.413" level="INFO"/>
<status status="PASS" starttime="20220516 18:22:17.412" endtime="20220516 18:22:17.413"/>
</kw>
<status status="PASS" starttime="20220516 18:22:12.497" endtime="20220516 18:22:17.414"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone sh volume create ${VOL2}-src --space-quota 100TB</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:22:17.417" level="INFO">Running command 'ozone sh volume create fstest2-src --space-quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:22:22.261" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:22:22.262" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:22:17.414" endtime="20220516 18:22:22.262"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:22:22.263" level="INFO"/>
<status status="PASS" starttime="20220516 18:22:22.262" endtime="20220516 18:22:22.263"/>
</kw>
<status status="PASS" starttime="20220516 18:22:17.414" endtime="20220516 18:22:22.263"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${VOLUME}-src/${BUCKET}-src --layout FILE_SYSTEM_OPTIMIZED</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:22:22.268" level="INFO">Running command 'ozone sh bucket create fstest1-src/23554-link1-o3fs-src --layout FILE_SYSTEM_OPTIMIZED 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:22:27.180" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:22:27.180" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:22:22.265" endtime="20220516 18:22:27.180"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:22:27.181" level="INFO"/>
<status status="PASS" starttime="20220516 18:22:27.181" endtime="20220516 18:22:27.181"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:22:27.182" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:22:27.182" endtime="20220516 18:22:27.182"/>
</kw>
<status status="PASS" starttime="20220516 18:22:22.265" endtime="20220516 18:22:27.183"/>
</kw>
<msg timestamp="20220516 18:22:27.183" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:22:22.264" endtime="20220516 18:22:27.184"/>
</kw>
<status status="PASS" starttime="20220516 18:22:22.264" endtime="20220516 18:22:27.185"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${VOLUME}-src/${BUCKET2}-src --layout FILE_SYSTEM_OPTIMIZED</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:22:27.188" level="INFO">Running command 'ozone sh bucket create fstest1-src/23554-link2-o3fs-src --layout FILE_SYSTEM_OPTIMIZED 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:22:31.851" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:22:31.851" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:22:27.187" endtime="20220516 18:22:31.851"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:22:31.852" level="INFO"/>
<status status="PASS" starttime="20220516 18:22:31.851" endtime="20220516 18:22:31.852"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:22:31.853" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:22:31.852" endtime="20220516 18:22:31.853"/>
</kw>
<status status="PASS" starttime="20220516 18:22:27.186" endtime="20220516 18:22:31.853"/>
</kw>
<msg timestamp="20220516 18:22:31.854" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:22:27.186" endtime="20220516 18:22:31.854"/>
</kw>
<status status="PASS" starttime="20220516 18:22:27.185" endtime="20220516 18:22:31.855"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${VOL2}-src/${BUCKET_IN_VOL2}-src --layout FILE_SYSTEM_OPTIMIZED</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:22:31.859" level="INFO">Running command 'ozone sh bucket create fstest2-src/23554-link3-o3fs-src --layout FILE_SYSTEM_OPTIMIZED 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:22:36.561" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:22:36.561" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:22:31.857" endtime="20220516 18:22:36.561"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:22:36.562" level="INFO"/>
<status status="PASS" starttime="20220516 18:22:36.562" endtime="20220516 18:22:36.562"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:22:36.563" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:22:36.563" endtime="20220516 18:22:36.563"/>
</kw>
<status status="PASS" starttime="20220516 18:22:31.856" endtime="20220516 18:22:36.564"/>
</kw>
<msg timestamp="20220516 18:22:36.564" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:22:31.855" endtime="20220516 18:22:36.564"/>
</kw>
<status status="PASS" starttime="20220516 18:22:31.855" endtime="20220516 18:22:36.565"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${VOLUME}-src/${BUCKET}-src ${VOLUME}/${BUCKET}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:22:36.569" level="INFO">Running command 'ozone sh bucket link fstest1-src/23554-link1-o3fs-src fstest1/23554-link1-o3fs 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:22:41.167" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:22:41.168" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:22:36.567" endtime="20220516 18:22:41.168"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:22:41.169" level="INFO"/>
<status status="PASS" starttime="20220516 18:22:41.168" endtime="20220516 18:22:41.169"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:22:41.170" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:22:41.169" endtime="20220516 18:22:41.170"/>
</kw>
<status status="PASS" starttime="20220516 18:22:36.566" endtime="20220516 18:22:41.170"/>
</kw>
<msg timestamp="20220516 18:22:41.170" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:22:36.566" endtime="20220516 18:22:41.171"/>
</kw>
<status status="PASS" starttime="20220516 18:22:36.565" endtime="20220516 18:22:41.171"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${VOLUME}-src/${BUCKET2}-src ${VOLUME}/${BUCKET2}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:22:41.176" level="INFO">Running command 'ozone sh bucket link fstest1-src/23554-link2-o3fs-src fstest1/23554-link2-o3fs 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:22:45.861" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:22:45.861" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:22:41.173" endtime="20220516 18:22:45.861"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:22:45.862" level="INFO"/>
<status status="PASS" starttime="20220516 18:22:45.861" endtime="20220516 18:22:45.862"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:22:45.863" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:22:45.862" endtime="20220516 18:22:45.863"/>
</kw>
<status status="PASS" starttime="20220516 18:22:41.173" endtime="20220516 18:22:45.863"/>
</kw>
<msg timestamp="20220516 18:22:45.864" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:22:41.172" endtime="20220516 18:22:45.864"/>
</kw>
<status status="PASS" starttime="20220516 18:22:41.171" endtime="20220516 18:22:45.864"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${VOL2}-src/${BUCKET_IN_VOL2}-src ${VOL2}/${BUCKET_IN_VOL2}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:22:45.869" level="INFO">Running command 'ozone sh bucket link fstest2-src/23554-link3-o3fs-src fstest2/23554-link3-o3fs 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:22:50.384" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:22:50.384" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:22:45.867" endtime="20220516 18:22:50.384"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:22:50.386" level="INFO"/>
<status status="PASS" starttime="20220516 18:22:50.385" endtime="20220516 18:22:50.386"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:22:50.387" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:22:50.386" endtime="20220516 18:22:50.387"/>
</kw>
<status status="PASS" starttime="20220516 18:22:45.867" endtime="20220516 18:22:50.387"/>
</kw>
<msg timestamp="20220516 18:22:50.388" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:22:45.866" endtime="20220516 18:22:50.388"/>
</kw>
<status status="PASS" starttime="20220516 18:22:45.865" endtime="20220516 18:22:50.388"/>
</kw>
<status status="PASS" starttime="20220516 18:22:12.496" endtime="20220516 18:22:50.389"/>
</kw>
<status status="PASS" starttime="20220516 18:22:12.495" endtime="20220516 18:22:50.389"/>
</kw>
<kw name="Sanity check for FS test" library="setup">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:22:50.394" level="INFO">Running command 'ozone sh volume list 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:22:55.461" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:22:55.461" level="INFO">${output} = [ {
  "metadata" : { },
  "name" : "52499-source",
  "admin" : "testuser",
  "owner" : "testuser",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 3,
  "creationTime" : "2022-05-...</msg>
<status status="PASS" starttime="20220516 18:22:50.391" endtime="20220516 18:22:55.461"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:22:55.463" level="INFO">[ {
  "metadata" : { },
  "name" : "52499-source",
  "admin" : "testuser",
  "owner" : "testuser",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 3,
  "creationTime" : "2022-05-16T17:49:40.511Z",
  "modificationTime" : "2022-05-16T17:50:30.531Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "USER",
    "name" : "testuser2/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "LIST" ]
  } ]
}, {
  "metadata" : { },
  "name" : "52499-target",
  "admin" : "testuser",
  "owner" : "testuser",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 10,
  "creationTime" : "2022-05-16T17:49:45.255Z",
  "modificationTime" : "2022-05-16T17:50:25.292Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "USER",
    "name" : "testuser2/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ" ]
  } ]
}, {
  "metadata" : { },
  "name" : "58091-acls",
  "admin" : "testuser",
  "owner" : "testuser",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2022-05-16T18:03:02.205Z",
  "modificationTime" : "2022-05-16T18:03:32.292Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "superuser1",
    "aclScope" : "DEFAULT",
    "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
  }, {
    "type" : "GROUP",
    "name" : "superuser1",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
  }, {
    "type" : "GROUP",
    "name" : "superuser1",
    "aclScope" : "DEFAULT",
    "aclList" : [ "ALL" ]
  } ]
}, {
  "metadata" : { },
  "name" : "fstest1",
  "admin" : "testuser",
  "owner" : "testuser",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : -1,
  "usedNamespace" : 4,
  "creationTime" : "2022-05-16T18:17:07.722Z",
  "modificationTime" : "2022-05-16T18:17:07.722Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}, {
  "metadata" : { },
  "name" : "fstest1-src",
  "admin" : "testuser",
  "owner" : "testuser",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : -1,
  "usedNamespace" : 2,
  "creationTime" : "2022-05-16T18:22:17.185Z",
  "modificationTime" : "2022-05-16T18:22:17.185Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}, {
  "metadata" : { },
  "name" : "fstest18",
  "admin" : "testuser",
  "owner" : "testuser",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 2,
  "creationTime" : "2022-05-16T18:12:01.337Z",
  "modificationTime" : "2022-05-16T18:12:01.337Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}, {
  "metadata" : { },
  "name" : "fstest2",
  "admin" : "testuser",
  "owner" : "testuser",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : -1,
  "usedNamespace" : 2,
  "creationTime" : "2022-05-16T18:17:12.360Z",
  "modificationTime" : "2022-05-16T18:17:12.360Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}, {
  "metadata" : { },
  "name" : "fstest2-src",
  "admin" : "testuser",
  "owner" : "testuser",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2022-05-16T18:22:22.198Z",
  "modificationTime" : "2022-05-16T18:22:22.198Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}, {
  "metadata" : { },
  "name" : "fstest218",
  "admin" : "testuser",
  "owner" : "testuser",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2022-05-16T18:12:06.487Z",
  "modificationTime" : "2022-05-16T18:12:06.487Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}, {
  "metadata" : { },
  "name" : "fstest318",
  "admin" : "testuser",
  "owner" : "testuser",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2022-05-16T18:12:30.180Z",
  "modificationTime" : "2022-05-16T18:14:58.033Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "superuser1",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
  }, {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
  }, {
    "type" : "GROUP",
    "name" : "superuser1",
    "aclScope" : "DEFAULT",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "USER",
    "name" : "testuser2/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "WRITE", "LIST", "READ_ACL", "WRITE_ACL" ]
  } ]
}, {
  "metadata" : { },
  "name" : "fstest442",
  "admin" : "testuser",
  "owner" : "testuser2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 0,
  "creationTime" : "2022-05-16T18:11:27.291Z",
  "modificationTime" : "2022-05-16T18:11:27.291Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser2",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}, {
  "metadata" : { },
  "name" : "s3v",
  "admin" : "root",
  "owner" : "root",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 2,
  "creationTime" : "2022-05-16T17:48:31.639Z",
  "modificationTime" : "2022-05-16T17:48:31.639Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}, {
  "metadata" : { },
  "name" : "vol-ezizc",
  "admin" : "testuser",
  "owner" : "testuser",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2022-05-16T18:10:45.707Z",
  "modificationTime" : "2022-05-16T18:10:45.707Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}, {
  "metadata" : { },
  "name" : "vol1",
  "admin" : "testuser",
  "owner" : "testuser",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2022-05-16T17:49:03.606Z",
  "modificationTime" : "2022-05-16T17:49:03.606Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
} ]</msg>
<status status="PASS" starttime="20220516 18:22:55.462" endtime="20220516 18:22:55.463"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:22:55.464" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:22:55.463" endtime="20220516 18:22:55.464"/>
</kw>
<status status="PASS" starttime="20220516 18:22:50.390" endtime="20220516 18:22:55.464"/>
</kw>
<msg timestamp="20220516 18:22:55.464" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:22:50.390" endtime="20220516 18:22:55.465"/>
</kw>
<msg timestamp="20220516 18:22:55.465" level="INFO">${result} = [ {
  "metadata" : { },
  "name" : "52499-source",
  "admin" : "testuser",
  "owner" : "testuser",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 3,
  "creationTime" : "2022-05-...</msg>
<status status="PASS" starttime="20220516 18:22:50.389" endtime="20220516 18:22:55.466"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${VOLUME}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 18:22:55.466" endtime="20220516 18:22:55.466"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${VOL2}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 18:22:55.466" endtime="20220516 18:22:55.467"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>"admin" : "(hadoop|testuser)"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220516 18:22:55.467" endtime="20220516 18:22:55.468"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${VOLUME}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:22:55.473" level="INFO">Running command 'ozone sh bucket list fstest1 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:23:00.595" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:23:00.595" level="INFO">${output} = [ {
  "metadata" : { },
  "volumeName" : "fstest1",
  "name" : "23554-link1-o3fs",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-...</msg>
<status status="PASS" starttime="20220516 18:22:55.470" endtime="20220516 18:23:00.595"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:23:00.596" level="INFO">[ {
  "metadata" : { },
  "volumeName" : "fstest1",
  "name" : "23554-link1-o3fs",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-05-16T18:22:41.090Z",
  "modificationTime" : "2022-05-16T18:22:41.090Z",
  "sourceVolume" : "fstest1-src",
  "sourceBucket" : "23554-link1-o3fs-src",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY",
  "owner" : "testuser",
  "link" : true
}, {
  "metadata" : { },
  "volumeName" : "fstest1",
  "name" : "23554-link2-o3fs",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-05-16T18:22:45.792Z",
  "modificationTime" : "2022-05-16T18:22:45.792Z",
  "sourceVolume" : "fstest1-src",
  "sourceBucket" : "23554-link2-o3fs-src",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY",
  "owner" : "testuser",
  "link" : true
}, {
  "metadata" : { },
  "volumeName" : "fstest1",
  "name" : "44302-bucket1-ofs",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 262890,
  "usedNamespace" : 4,
  "creationTime" : "2022-05-16T18:17:17.234Z",
  "modificationTime" : "2022-05-16T18:17:17.234Z",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "FILE_SYSTEM_OPTIMIZED",
  "owner" : "testuser",
  "link" : false
}, {
  "metadata" : { },
  "volumeName" : "fstest1",
  "name" : "44302-bucket2-ofs",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 52578,
  "usedNamespace" : 0,
  "creationTime" : "2022-05-16T18:17:22.311Z",
  "modificationTime" : "2022-05-16T18:17:22.311Z",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "FILE_SYSTEM_OPTIMIZED",
  "owner" : "testuser",
  "link" : false
} ]</msg>
<status status="PASS" starttime="20220516 18:23:00.595" endtime="20220516 18:23:00.596"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:23:00.597" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:23:00.597" endtime="20220516 18:23:00.597"/>
</kw>
<status status="PASS" starttime="20220516 18:22:55.469" endtime="20220516 18:23:00.598"/>
</kw>
<msg timestamp="20220516 18:23:00.598" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:22:55.469" endtime="20220516 18:23:00.599"/>
</kw>
<msg timestamp="20220516 18:23:00.599" level="INFO">${result} = [ {
  "metadata" : { },
  "volumeName" : "fstest1",
  "name" : "23554-link1-o3fs",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-...</msg>
<status status="PASS" starttime="20220516 18:22:55.468" endtime="20220516 18:23:00.600"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 18:23:00.600" endtime="20220516 18:23:00.600"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET2}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 18:23:00.600" endtime="20220516 18:23:00.601"/>
</kw>
<status status="PASS" starttime="20220516 18:22:50.389" endtime="20220516 18:23:00.601"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Completed setup for ${SCHEME} tests with ${BUCKET_TYPE}s in ${VOLUME}/${BUCKET} using FS base URL: ${BASE_URL}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:23:00.602" level="INFO">Completed setup for o3fs tests with links in fstest1/23554-link1-o3fs using FS base URL: o3fs://23554-link1-o3fs.fstest1.om//</msg>
<status status="PASS" starttime="20220516 18:23:00.601" endtime="20220516 18:23:00.602"/>
</kw>
<status status="PASS" starttime="20220516 18:22:02.878" endtime="20220516 18:23:00.602"/>
</kw>
<test id="s1-s4-t1" name="List root">
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${VOLUME}</arg>
<arg>${BUCKET}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220516 18:23:00.610" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220516 18:23:00.610" endtime="20220516 18:23:00.611"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220516 18:23:00.612" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220516 18:23:00.611" endtime="20220516 18:23:00.612"/>
</kw>
<status status="PASS" starttime="20220516 18:23:00.609" endtime="20220516 18:23:00.612"/>
</kw>
<msg timestamp="20220516 18:23:00.612" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220516 18:23:00.608" endtime="20220516 18:23:00.612"/>
</kw>
<status status="PASS" starttime="20220516 18:23:00.607" endtime="20220516 18:23:00.613"/>
</kw>
<msg timestamp="20220516 18:23:00.613" level="INFO">${url} = o3fs://23554-link1-o3fs.fstest1.om/</msg>
<status status="PASS" starttime="20220516 18:23:00.606" endtime="20220516 18:23:00.613"/>
</kw>
<msg timestamp="20220516 18:23:00.613" level="INFO">${root} = o3fs://23554-link1-o3fs.fstest1.om/</msg>
<status status="PASS" starttime="20220516 18:23:00.604" endtime="20220516 18:23:00.613"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -ls ${root}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:23:00.625" level="INFO">Running command 'ozone fs -ls o3fs://23554-link1-o3fs.fstest1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:23:05.470" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:23:05.470" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:23:00.616" endtime="20220516 18:23:05.470"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:23:05.471" level="INFO"/>
<status status="PASS" starttime="20220516 18:23:05.470" endtime="20220516 18:23:05.471"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:23:05.472" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:23:05.472" endtime="20220516 18:23:05.472"/>
</kw>
<status status="PASS" starttime="20220516 18:23:00.615" endtime="20220516 18:23:05.473"/>
</kw>
<msg timestamp="20220516 18:23:05.473" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:23:00.615" endtime="20220516 18:23:05.474"/>
</kw>
<status status="PASS" starttime="20220516 18:23:00.614" endtime="20220516 18:23:05.474"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220516 18:23:00.602" endtime="20220516 18:23:05.474"/>
</test>
<test id="s1-s4-t2" name="List non-existent volume">
<kw name="Format FS URL" library="fs">
<var>${url}</var>
<arg>${SCHEME}</arg>
<arg>no-such-volume</arg>
<arg>${BUCKET}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220516 18:23:05.485" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220516 18:23:05.483" endtime="20220516 18:23:05.485"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220516 18:23:05.486" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220516 18:23:05.485" endtime="20220516 18:23:05.486"/>
</kw>
<status status="PASS" starttime="20220516 18:23:05.482" endtime="20220516 18:23:05.487"/>
</kw>
<msg timestamp="20220516 18:23:05.487" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220516 18:23:05.480" endtime="20220516 18:23:05.487"/>
</kw>
<status status="PASS" starttime="20220516 18:23:05.479" endtime="20220516 18:23:05.487"/>
</kw>
<msg timestamp="20220516 18:23:05.487" level="INFO">${url} = o3fs://23554-link1-o3fs.no-such-volume.om/</msg>
<status status="PASS" starttime="20220516 18:23:05.478" endtime="20220516 18:23:05.487"/>
</kw>
<msg timestamp="20220516 18:23:05.488" level="INFO">${url} = o3fs://23554-link1-o3fs.no-such-volume.om/</msg>
<status status="PASS" starttime="20220516 18:23:05.476" endtime="20220516 18:23:05.488"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone fs -ls ${url}</arg>
<arg>1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:23:05.494" level="INFO">Running command 'ozone fs -ls o3fs://23554-link1-o3fs.no-such-volume.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:23:09.743" level="INFO">${rc} = 1</msg>
<msg timestamp="20220516 18:23:09.744" level="INFO">${output} = 2022-05-16 18:23:09,570 [main] WARN fs.FileSystem: Failed to initialize fileystem o3fs://23554-link1-o3fs.no-such-volume.om/: VOLUME_NOT_FOUND org.apache.hadoop.ozone.om.exceptions.OMException: Volume...</msg>
<status status="PASS" starttime="20220516 18:23:05.489" endtime="20220516 18:23:09.744"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:23:09.745" level="INFO">2022-05-16 18:23:09,570 [main] WARN fs.FileSystem: Failed to initialize fileystem o3fs://23554-link1-o3fs.no-such-volume.om/: VOLUME_NOT_FOUND org.apache.hadoop.ozone.om.exceptions.OMException: Volume no-such-volume is not found
ls: Volume no-such-volume is not found</msg>
<status status="PASS" starttime="20220516 18:23:09.744" endtime="20220516 18:23:09.745"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:23:09.746" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:23:09.746" endtime="20220516 18:23:09.746"/>
</kw>
<msg timestamp="20220516 18:23:09.747" level="INFO">${result} = 2022-05-16 18:23:09,570 [main] WARN fs.FileSystem: Failed to initialize fileystem o3fs://23554-link1-o3fs.no-such-volume.om/: VOLUME_NOT_FOUND org.apache.hadoop.ozone.om.exceptions.OMException: Volume...</msg>
<status status="PASS" starttime="20220516 18:23:05.488" endtime="20220516 18:23:09.747"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>(Check access operation failed)|(Volume no-such-volume is not found)|(No such file or directory)</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220516 18:23:09.747" endtime="20220516 18:23:09.748"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220516 18:23:05.475" endtime="20220516 18:23:09.748"/>
</test>
<test id="s1-s4-t3" name="List non-existent bucket">
<kw name="Format FS URL" library="fs">
<var>${url}</var>
<arg>${SCHEME}</arg>
<arg>${VOLUME}</arg>
<arg>no-such-bucket</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220516 18:23:09.757" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220516 18:23:09.756" endtime="20220516 18:23:09.757"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220516 18:23:09.758" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220516 18:23:09.757" endtime="20220516 18:23:09.758"/>
</kw>
<status status="PASS" starttime="20220516 18:23:09.756" endtime="20220516 18:23:09.759"/>
</kw>
<msg timestamp="20220516 18:23:09.759" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220516 18:23:09.754" endtime="20220516 18:23:09.759"/>
</kw>
<status status="PASS" starttime="20220516 18:23:09.753" endtime="20220516 18:23:09.759"/>
</kw>
<msg timestamp="20220516 18:23:09.760" level="INFO">${url} = o3fs://no-such-bucket.fstest1.om/</msg>
<status status="PASS" starttime="20220516 18:23:09.752" endtime="20220516 18:23:09.760"/>
</kw>
<msg timestamp="20220516 18:23:09.760" level="INFO">${url} = o3fs://no-such-bucket.fstest1.om/</msg>
<status status="PASS" starttime="20220516 18:23:09.751" endtime="20220516 18:23:09.760"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone fs -ls ${url}</arg>
<arg>1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:23:09.763" level="INFO">Running command 'ozone fs -ls o3fs://no-such-bucket.fstest1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:23:14.363" level="INFO">${rc} = 1</msg>
<msg timestamp="20220516 18:23:14.363" level="INFO">${output} = 2022-05-16 18:23:14,206 [main] WARN fs.FileSystem: Failed to initialize fileystem o3fs://no-such-bucket.fstest1.om/: BUCKET_NOT_FOUND org.apache.hadoop.ozone.om.exceptions.OMException: Bucket not foun...</msg>
<status status="PASS" starttime="20220516 18:23:09.761" endtime="20220516 18:23:14.363"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:23:14.365" level="INFO">2022-05-16 18:23:14,206 [main] WARN fs.FileSystem: Failed to initialize fileystem o3fs://no-such-bucket.fstest1.om/: BUCKET_NOT_FOUND org.apache.hadoop.ozone.om.exceptions.OMException: Bucket not found
ls: Bucket not found</msg>
<status status="PASS" starttime="20220516 18:23:14.363" endtime="20220516 18:23:14.365"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:23:14.365" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:23:14.365" endtime="20220516 18:23:14.366"/>
</kw>
<msg timestamp="20220516 18:23:14.366" level="INFO">${result} = 2022-05-16 18:23:14,206 [main] WARN fs.FileSystem: Failed to initialize fileystem o3fs://no-such-bucket.fstest1.om/: BUCKET_NOT_FOUND org.apache.hadoop.ozone.om.exceptions.OMException: Bucket not foun...</msg>
<status status="PASS" starttime="20220516 18:23:09.760" endtime="20220516 18:23:14.366"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>(Check access operation failed)|(Bucket not found)|(No such file or directory)</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220516 18:23:14.366" endtime="20220516 18:23:14.367"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220516 18:23:09.750" endtime="20220516 18:23:14.368"/>
</test>
<test id="s1-s4-t4" name="Create dir with parents">
<kw name="Execute" library="os">
<arg>ozone fs -mkdir -p ${DEEP_URL}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:23:14.374" level="INFO">Running command 'ozone fs -mkdir -p o3fs://23554-link1-o3fs.fstest1.om//test/o3fs/dir 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:23:19.106" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:23:19.106" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:23:14.371" endtime="20220516 18:23:19.106"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:23:19.108" level="INFO"/>
<status status="PASS" starttime="20220516 18:23:19.107" endtime="20220516 18:23:19.108"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:23:19.109" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:23:19.108" endtime="20220516 18:23:19.109"/>
</kw>
<status status="PASS" starttime="20220516 18:23:14.371" endtime="20220516 18:23:19.109"/>
</kw>
<msg timestamp="20220516 18:23:19.109" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:23:14.370" endtime="20220516 18:23:19.110"/>
</kw>
<status status="PASS" starttime="20220516 18:23:14.369" endtime="20220516 18:23:19.111"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:23:19.116" level="INFO">Running command 'ozone sh key list fstest1/23554-link1-o3fs | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:23:24.218" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:23:24.218" level="INFO">${output} = test/
test/o3fs/
test/o3fs/dir/</msg>
<status status="PASS" starttime="20220516 18:23:19.113" endtime="20220516 18:23:24.218"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:23:24.220" level="INFO">test/
test/o3fs/
test/o3fs/dir/</msg>
<status status="PASS" starttime="20220516 18:23:24.219" endtime="20220516 18:23:24.220"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:23:24.221" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:23:24.220" endtime="20220516 18:23:24.221"/>
</kw>
<status status="PASS" starttime="20220516 18:23:19.112" endtime="20220516 18:23:24.221"/>
</kw>
<msg timestamp="20220516 18:23:24.221" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:23:19.112" endtime="20220516 18:23:24.222"/>
</kw>
<msg timestamp="20220516 18:23:24.222" level="INFO">${result} = test/
test/o3fs/
test/o3fs/dir/</msg>
<status status="PASS" starttime="20220516 18:23:19.111" endtime="20220516 18:23:24.222"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${DEEP_DIR}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 18:23:24.223" endtime="20220516 18:23:24.223"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220516 18:23:14.368" endtime="20220516 18:23:24.223"/>
</test>
<test id="s1-s4-t5" name="Copy from local">
<kw name="Execute" library="os">
<arg>ozone fs -copyFromLocal NOTICE.txt ${DEEP_URL}/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:23:24.230" level="INFO">Running command 'ozone fs -copyFromLocal NOTICE.txt o3fs://23554-link1-o3fs.fstest1.om//test/o3fs/dir/ 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:23:33.665" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:23:33.665" level="INFO">${output} = 2022-05-16 18:23:29,082 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-05-16 18:23:29,190 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220516 18:23:24.227" endtime="20220516 18:23:33.665"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:23:33.667" level="INFO">2022-05-16 18:23:29,082 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-05-16 18:23:29,190 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-05-16 18:23:29,190 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2022-05-16 18:23:29,542 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20220516 18:23:33.666" endtime="20220516 18:23:33.667"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:23:33.668" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:23:33.667" endtime="20220516 18:23:33.668"/>
</kw>
<status status="PASS" starttime="20220516 18:23:24.227" endtime="20220516 18:23:33.668"/>
</kw>
<msg timestamp="20220516 18:23:33.668" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:23:24.226" endtime="20220516 18:23:33.669"/>
</kw>
<status status="PASS" starttime="20220516 18:23:24.225" endtime="20220516 18:23:33.669"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:23:33.674" level="INFO">Running command 'ozone sh key list fstest1/23554-link1-o3fs | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:23:38.904" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:23:38.904" level="INFO">${output} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/NOTICE.txt</msg>
<status status="PASS" starttime="20220516 18:23:33.671" endtime="20220516 18:23:38.904"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:23:38.905" level="INFO">test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/NOTICE.txt</msg>
<status status="PASS" starttime="20220516 18:23:38.905" endtime="20220516 18:23:38.906"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:23:38.906" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:23:38.906" endtime="20220516 18:23:38.906"/>
</kw>
<status status="PASS" starttime="20220516 18:23:33.671" endtime="20220516 18:23:38.907"/>
</kw>
<msg timestamp="20220516 18:23:38.907" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:23:33.670" endtime="20220516 18:23:38.908"/>
</kw>
<msg timestamp="20220516 18:23:38.908" level="INFO">${result} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/NOTICE.txt</msg>
<status status="PASS" starttime="20220516 18:23:33.669" endtime="20220516 18:23:38.908"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 18:23:38.908" endtime="20220516 18:23:38.909"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${VOLUME}/${BUCKET}/${DEEP_DIR}/NOTICE.txt | jq -r '.replicationConfig.replicationFactor'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:23:38.914" level="INFO">Running command 'ozone sh key info fstest1/23554-link1-o3fs/test/o3fs/dir/NOTICE.txt | jq -r '.replicationConfig.replicationFactor' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:23:44.190" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:23:44.190" level="INFO">${output} = THREE</msg>
<status status="PASS" starttime="20220516 18:23:38.912" endtime="20220516 18:23:44.190"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:23:44.192" level="INFO">THREE</msg>
<status status="PASS" starttime="20220516 18:23:44.191" endtime="20220516 18:23:44.192"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:23:44.193" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:23:44.192" endtime="20220516 18:23:44.193"/>
</kw>
<status status="PASS" starttime="20220516 18:23:38.910" endtime="20220516 18:23:44.193"/>
</kw>
<msg timestamp="20220516 18:23:44.194" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:23:38.910" endtime="20220516 18:23:44.194"/>
</kw>
<msg timestamp="20220516 18:23:44.194" level="INFO">${result} = THREE</msg>
<status status="PASS" starttime="20220516 18:23:38.909" endtime="20220516 18:23:44.195"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>THREE</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220516 18:23:44.195" endtime="20220516 18:23:44.195"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220516 18:23:24.224" endtime="20220516 18:23:44.196"/>
</test>
<test id="s1-s4-t6" name="Put">
<kw name="Execute" library="os">
<arg>ozone fs -put NOTICE.txt ${DEEP_URL}/PUTFILE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:23:44.203" level="INFO">Running command 'ozone fs -put NOTICE.txt o3fs://23554-link1-o3fs.fstest1.om//test/o3fs/dir/PUTFILE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:23:55.128" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:23:55.129" level="INFO">${output} = 2022-05-16 18:23:50,206 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-05-16 18:23:50,362 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220516 18:23:44.200" endtime="20220516 18:23:55.129"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:23:55.130" level="INFO">2022-05-16 18:23:50,206 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-05-16 18:23:50,362 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-05-16 18:23:50,362 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2022-05-16 18:23:50,864 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20220516 18:23:55.129" endtime="20220516 18:23:55.130"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:23:55.131" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:23:55.130" endtime="20220516 18:23:55.131"/>
</kw>
<status status="PASS" starttime="20220516 18:23:44.199" endtime="20220516 18:23:55.131"/>
</kw>
<msg timestamp="20220516 18:23:55.132" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:23:44.198" endtime="20220516 18:23:55.132"/>
</kw>
<status status="PASS" starttime="20220516 18:23:44.197" endtime="20220516 18:23:55.133"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:23:55.138" level="INFO">Running command 'ozone sh key list fstest1/23554-link1-o3fs | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:23:59.907" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:23:59.907" level="INFO">${output} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/NOTICE.txt
test/o3fs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20220516 18:23:55.135" endtime="20220516 18:23:59.907"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:23:59.909" level="INFO">test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/NOTICE.txt
test/o3fs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20220516 18:23:59.908" endtime="20220516 18:23:59.909"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:23:59.909" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:23:59.909" endtime="20220516 18:23:59.910"/>
</kw>
<status status="PASS" starttime="20220516 18:23:55.134" endtime="20220516 18:23:59.910"/>
</kw>
<msg timestamp="20220516 18:23:59.910" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:23:55.134" endtime="20220516 18:23:59.911"/>
</kw>
<msg timestamp="20220516 18:23:59.911" level="INFO">${result} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/NOTICE.txt
test/o3fs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20220516 18:23:55.133" endtime="20220516 18:23:59.911"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PUTFILE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 18:23:59.911" endtime="20220516 18:23:59.912"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220516 18:23:44.196" endtime="20220516 18:23:59.912"/>
</test>
<test id="s1-s4-t7" name="List">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls ${DEEP_URL}/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:23:59.919" level="INFO">Running command 'ozone fs -ls o3fs://23554-link1-o3fs.fstest1.om//test/o3fs/dir/ 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:24:04.998" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:24:04.998" level="INFO">${output} = Found 2 items
-rw-rw-rw-   3 testuser testuser      17526 2022-05-16 18:23 o3fs://23554-link1-o3fs.fstest1.om/test/o3fs/dir/NOTICE.txt
-rw-rw-rw-   3 testuser testuser      17526 2022-05-16 18:23 o3fs...</msg>
<status status="PASS" starttime="20220516 18:23:59.917" endtime="20220516 18:24:04.998"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:24:04.999" level="INFO">Found 2 items
-rw-rw-rw-   3 testuser testuser      17526 2022-05-16 18:23 o3fs://23554-link1-o3fs.fstest1.om/test/o3fs/dir/NOTICE.txt
-rw-rw-rw-   3 testuser testuser      17526 2022-05-16 18:23 o3fs://23554-link1-o3fs.fstest1.om/test/o3fs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20220516 18:24:04.999" endtime="20220516 18:24:05.000"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:24:05.000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:24:05.000" endtime="20220516 18:24:05.001"/>
</kw>
<status status="PASS" starttime="20220516 18:23:59.916" endtime="20220516 18:24:05.001"/>
</kw>
<msg timestamp="20220516 18:24:05.001" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:23:59.916" endtime="20220516 18:24:05.002"/>
</kw>
<msg timestamp="20220516 18:24:05.002" level="INFO">${result} = Found 2 items
-rw-rw-rw-   3 testuser testuser      17526 2022-05-16 18:23 o3fs://23554-link1-o3fs.fstest1.om/test/o3fs/dir/NOTICE.txt
-rw-rw-rw-   3 testuser testuser      17526 2022-05-16 18:23 o3fs...</msg>
<status status="PASS" starttime="20220516 18:23:59.915" endtime="20220516 18:24:05.002"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 18:24:05.002" endtime="20220516 18:24:05.003"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PUTFILE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 18:24:05.003" endtime="20220516 18:24:05.003"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220516 18:23:59.913" endtime="20220516 18:24:05.004"/>
</test>
<test id="s1-s4-t8" name="Move">
<kw name="Execute" library="os">
<arg>ozone fs -mv ${DEEP_URL}/NOTICE.txt ${DEEP_URL}/MOVED.TXT</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:24:05.014" level="INFO">Running command 'ozone fs -mv o3fs://23554-link1-o3fs.fstest1.om//test/o3fs/dir/NOTICE.txt o3fs://23554-link1-o3fs.fstest1.om//test/o3fs/dir/MOVED.TXT 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:24:09.662" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:24:09.662" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:24:05.011" endtime="20220516 18:24:09.662"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:24:09.664" level="INFO"/>
<status status="PASS" starttime="20220516 18:24:09.663" endtime="20220516 18:24:09.664"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:24:09.665" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:24:09.664" endtime="20220516 18:24:09.665"/>
</kw>
<status status="PASS" starttime="20220516 18:24:05.010" endtime="20220516 18:24:09.666"/>
</kw>
<msg timestamp="20220516 18:24:09.666" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:24:05.010" endtime="20220516 18:24:09.666"/>
</kw>
<status status="PASS" starttime="20220516 18:24:05.009" endtime="20220516 18:24:09.667"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:24:09.672" level="INFO">Running command 'ozone sh key list fstest1/23554-link1-o3fs | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:24:14.783" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:24:14.783" level="INFO">${output} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20220516 18:24:09.669" endtime="20220516 18:24:14.783"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:24:14.785" level="INFO">test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20220516 18:24:14.784" endtime="20220516 18:24:14.785"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:24:14.786" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:24:14.785" endtime="20220516 18:24:14.786"/>
</kw>
<status status="PASS" starttime="20220516 18:24:09.668" endtime="20220516 18:24:14.787"/>
</kw>
<msg timestamp="20220516 18:24:14.787" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:24:09.668" endtime="20220516 18:24:14.787"/>
</kw>
<msg timestamp="20220516 18:24:14.788" level="INFO">${result} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20220516 18:24:09.667" endtime="20220516 18:24:14.788"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>MOVED.TXT</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 18:24:14.788" endtime="20220516 18:24:14.788"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 18:24:14.789" endtime="20220516 18:24:14.789"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220516 18:24:05.008" endtime="20220516 18:24:14.789"/>
</test>
<test id="s1-s4-t9" name="Copy within FS">
<kw name="Execute" library="os" type="SETUP">
<arg>ozone fs -mkdir -p ${DEEP_URL}/subdir1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:24:14.797" level="INFO">Running command 'ozone fs -mkdir -p o3fs://23554-link1-o3fs.fstest1.om//test/o3fs/dir/subdir1 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:24:19.663" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:24:19.663" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:24:14.794" endtime="20220516 18:24:19.663"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:24:19.665" level="INFO"/>
<status status="PASS" starttime="20220516 18:24:19.664" endtime="20220516 18:24:19.665"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:24:19.666" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:24:19.665" endtime="20220516 18:24:19.666"/>
</kw>
<status status="PASS" starttime="20220516 18:24:14.793" endtime="20220516 18:24:19.666"/>
</kw>
<msg timestamp="20220516 18:24:19.666" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:24:14.793" endtime="20220516 18:24:19.667"/>
</kw>
<status status="PASS" starttime="20220516 18:24:14.792" endtime="20220516 18:24:19.667"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -cp ${DEEP_URL}/MOVED.TXT ${DEEP_URL}/subdir1/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:24:19.672" level="INFO">Running command 'ozone fs -cp o3fs://23554-link1-o3fs.fstest1.om//test/o3fs/dir/MOVED.TXT o3fs://23554-link1-o3fs.fstest1.om//test/o3fs/dir/subdir1/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:24:29.808" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:24:29.808" level="INFO">${output} = 2022-05-16 18:24:24,790 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-05-16 18:24:24,946 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220516 18:24:19.670" endtime="20220516 18:24:29.808"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:24:29.809" level="INFO">2022-05-16 18:24:24,790 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-05-16 18:24:24,946 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-05-16 18:24:24,946 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2022-05-16 18:24:26,521 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20220516 18:24:29.809" endtime="20220516 18:24:29.810"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:24:29.810" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:24:29.810" endtime="20220516 18:24:29.811"/>
</kw>
<status status="PASS" starttime="20220516 18:24:19.669" endtime="20220516 18:24:29.811"/>
</kw>
<msg timestamp="20220516 18:24:29.811" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:24:19.669" endtime="20220516 18:24:29.812"/>
</kw>
<status status="PASS" starttime="20220516 18:24:19.668" endtime="20220516 18:24:29.812"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:24:29.828" level="INFO">Running command 'ozone sh key list fstest1/23554-link1-o3fs | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:24:34.928" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:24:34.928" level="INFO">${output} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/subdir1/
test/o3fs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20220516 18:24:29.825" endtime="20220516 18:24:34.928"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:24:34.930" level="INFO">test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/subdir1/
test/o3fs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20220516 18:24:34.929" endtime="20220516 18:24:34.930"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:24:34.931" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:24:34.930" endtime="20220516 18:24:34.931"/>
</kw>
<status status="PASS" starttime="20220516 18:24:29.824" endtime="20220516 18:24:34.931"/>
</kw>
<msg timestamp="20220516 18:24:34.932" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:24:29.824" endtime="20220516 18:24:34.932"/>
</kw>
<msg timestamp="20220516 18:24:34.932" level="INFO">${result} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/subdir1/
test/o3fs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20220516 18:24:29.812" endtime="20220516 18:24:34.933"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>subdir1/NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 18:24:34.933" endtime="20220516 18:24:34.933"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls ${DEEP_URL}/subdir1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:24:34.938" level="INFO">Running command 'ozone fs -ls o3fs://23554-link1-o3fs.fstest1.om//test/o3fs/dir/subdir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:24:39.480" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:24:39.480" level="INFO">${output} = Found 1 items
-rw-rw-rw-   3 testuser testuser      17526 2022-05-16 18:24 o3fs://23554-link1-o3fs.fstest1.om/test/o3fs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20220516 18:24:34.935" endtime="20220516 18:24:39.480"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:24:39.481" level="INFO">Found 1 items
-rw-rw-rw-   3 testuser testuser      17526 2022-05-16 18:24 o3fs://23554-link1-o3fs.fstest1.om/test/o3fs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20220516 18:24:39.480" endtime="20220516 18:24:39.481"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:24:39.482" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:24:39.481" endtime="20220516 18:24:39.482"/>
</kw>
<status status="PASS" starttime="20220516 18:24:34.935" endtime="20220516 18:24:39.483"/>
</kw>
<msg timestamp="20220516 18:24:39.483" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:24:34.934" endtime="20220516 18:24:39.483"/>
</kw>
<msg timestamp="20220516 18:24:39.484" level="INFO">${result} = Found 1 items
-rw-rw-rw-   3 testuser testuser      17526 2022-05-16 18:24 o3fs://23554-link1-o3fs.fstest1.om/test/o3fs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20220516 18:24:34.933" endtime="20220516 18:24:39.484"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 18:24:39.484" endtime="20220516 18:24:39.485"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 18:24:39.485" endtime="20220516 18:24:39.486"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220516 18:24:14.791" endtime="20220516 18:24:39.486"/>
</test>
<test id="s1-s4-t10" name="Cat file">
<kw name="Execute" library="os">
<arg>ozone fs -cat ${DEEP_URL}/subdir1/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:24:39.492" level="INFO">Running command 'ozone fs -cat o3fs://23554-link1-o3fs.fstest1.om//test/o3fs/dir/subdir1/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:24:46.159" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:24:46.159" level="INFO">${output} = 2022-05-16 18:24:44,164 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-05-16 18:24:44,258 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220516 18:24:39.489" endtime="20220516 18:24:46.159"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:24:46.161" level="INFO">2022-05-16 18:24:44,164 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-05-16 18:24:44,258 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-05-16 18:24:44,258 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
Apache Ozone
Copyright 2021 The Apache Software Foundation

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).

Export Control Notice
---------------------

This distribution includes cryptographic software.  The country in
which you currently reside may have restrictions on the import,
possession, use, and/or re-export to another country, of
encryption software.  BEFORE using any encryption software, please
check your country's laws, regulations and policies concerning the
import, possession, or use, and re-export of encryption software, to
see if this is permitted.  See &lt;http://www.wassenaar.org/&gt; for more
information.

The U.S. Government Department of Commerce, Bureau of Industry and
Security (BIS), has classified this software as Export Commodity
Control Number (ECCN) 5D002.C.1, which includes information security
software using or performing cryptographic functions with asymmetric
algorithms.  The form and manner of this Apache Software Foundation
distribution makes it eligible for export under the License Exception
ENC Technology Software Unrestricted (TSU) exception (see the BIS
Export Administration Regulations, Section 740.13) for both object
code and source code.

This software uses the SSL libraries from the Jetty project written
by mortbay.org abd BouncyCastle Java cryptography APIs written by the
 Legion of the Bouncy Castle Inc.

**********************
THIRD PARTY COMPONENTS
**********************
This software includes third party software subject to the following copyrights:

io.netty:netty-all
====================


                            The Netty Project
                            =================

Please visit the Netty web site for more information:

  * https://netty.io/

Copyright 2014 The Netty Project

The Netty Project licenses this file to you under the Apache License,
version 2.0 (the "License"); you may not use this file except in compliance
with the License. You may obtain a copy of the License at:

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
License for the specific language governing permissions and limitations
under the License.

Also, please refer to each LICENSE.&lt;component&gt;.txt file, which is located in
the 'license' directory of the distribution file, for the license terms of the
components that this product depends on.

-------------------------------------------------------------------------------
This product contains the extensions to Java Collections Framework which has
been derived from the works by JSR-166 EG, Doug Lea, and Jason T. Greene:

  * LICENSE:
    * license/LICENSE.jsr166y.txt (Public Domain)
  * HOMEPAGE:
    * http://gee.cs.oswego.edu/cgi-bin/viewcvs.cgi/jsr166/
    * http://viewvc.jboss.org/cgi-bin/viewvc.cgi/jbosscache/experimental/jsr166/

This product contains a modified version of Robert Harder's Public Domain
Base64 Encoder and Decoder, which can be obtained at:

  * LICENSE:
    * license/LICENSE.base64.txt (Public Domain)
  * HOMEPAGE:
    * http://iharder.sourceforge.net/current/java/base64/

This product contains a modified portion of 'Webbit', an event based
WebSocket and HTTP server, which can be obtained at:

  * LICENSE:
    * license/LICENSE.webbit.txt (BSD License)
  * HOMEPAGE:
    * https://github.com/joewalnes/webbit

This product contains a modified portion of 'SLF4J', a simple logging
facade for Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.slf4j.txt (MIT License)
  * HOMEPAGE:
    * http://www.slf4j.org/

This product contains a modified portion of 'Apache Harmony', an open source
Java SE, which can be obtained at:

  * NOTICE:
    * license/NOTICE.harmony.txt
  * LICENSE:
    * license/LICENSE.harmony.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://archive.apache.org/dist/harmony/

This product contains a modified portion of 'jbzip2', a Java bzip2 compression
and decompression library written by Matthew J. Francis. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jbzip2.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jbzip2/

This product contains a modified portion of 'libdivsufsort', a C API library to construct
the suffix array and the Burrows-Wheeler transformed string for any input string of
a constant-size alphabet written by Yuta Mori. It can be obtained at:

  * LICENSE:
    * license/LICENSE.libdivsufsort.txt (MIT License)
  * HOMEPAGE:
    * https://github.com/y-256/libdivsufsort

This product contains a modified portion of Nitsan Wakart's 'JCTools', Java Concurrency Tools for the JVM,
 which can be obtained at:

  * LICENSE:
    * license/LICENSE.jctools.txt (ASL2 License)
  * HOMEPAGE:
    * https://github.com/JCTools/JCTools

This product optionally depends on 'JZlib', a re-implementation of zlib in
pure Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jzlib.txt (BSD style License)
  * HOMEPAGE:
    * http://www.jcraft.com/jzlib/

This product optionally depends on 'Compress-LZF', a Java library for encoding and
decoding data in LZF format, written by Tatu Saloranta. It can be obtained at:

  * LICENSE:
    * license/LICENSE.compress-lzf.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/ning/compress

This product optionally depends on 'lz4', a LZ4 Java compression
and decompression library written by Adrien Grand. It can be obtained at:

  * LICENSE:
    * license/LICENSE.lz4.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jpountz/lz4-java

This product optionally depends on 'lzma-java', a LZMA Java compression
and decompression library, which can be obtained at:

  * LICENSE:
    * license/LICENSE.lzma-java.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jponge/lzma-java

This product contains a modified portion of 'jfastlz', a Java port of FastLZ compression
and decompression library written by William Kinney. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jfastlz.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jfastlz/

This product contains a modified portion of and optionally depends on 'Protocol Buffers', Google's data
interchange format, which can be obtained at:

  * LICENSE:
    * license/LICENSE.protobuf.txt (New BSD License)
  * HOMEPAGE:
    * https://github.com/google/protobuf

This product optionally depends on 'Bouncy Castle Crypto APIs' to generate
a temporary self-signed X.509 certificate when the JVM does not provide the
equivalent functionality.  It can be obtained at:

  * LICENSE:
    * license/LICENSE.bouncycastle.txt (MIT License)
  * HOMEPAGE:
    * http://www.bouncycastle.org/

This product optionally depends on 'Snappy', a compression library produced
by Google Inc, which can be obtained at:

  * LICENSE:
    * license/LICENSE.snappy.txt (New BSD License)
  * HOMEPAGE:
    * https://github.com/google/snappy

This product optionally depends on 'JBoss Marshalling', an alternative Java
serialization API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jboss-marshalling.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jboss-remoting/jboss-marshalling

This product optionally depends on 'Caliper', Google's micro-
benchmarking framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.caliper.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/google/caliper

This product optionally depends on 'Apache Commons Logging', a logging
framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-logging.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://commons.apache.org/logging/

This product optionally depends on 'Apache Log4J', a logging framework, which
can be obtained at:

  * LICENSE:
    * license/LICENSE.log4j.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://logging.apache.org/log4j/

This product optionally depends on 'Aalto XML', an ultra-high performance
non-blocking XML processor, which can be obtained at:

  * LICENSE:
    * license/LICENSE.aalto-xml.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://wiki.fasterxml.com/AaltoHome

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Twitter. It can be obtained at:

  * LICENSE:
    * license/LICENSE.hpack.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/twitter/hpack

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Cory Benfield. It can be obtained at:

  * LICENSE:
    * license/LICENSE.hyper-hpack.txt (MIT License)
  * HOMEPAGE:
    * https://github.com/python-hyper/hpack/

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Tatsuhiro Tsujikawa. It can be obtained at:

  * LICENSE:
    * license/LICENSE.nghttp2-hpack.txt (MIT License)
  * HOMEPAGE:
    * https://github.com/nghttp2/nghttp2/

This product contains a modified portion of 'Apache Commons Lang', a Java library
provides utilities for the java.lang API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-lang.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://commons.apache.org/proper/commons-lang/


This product contains the Maven wrapper scripts from 'Maven Wrapper', that provides an easy way to ensure a user has everything necessary to run the Maven build.

  * LICENSE:
    * license/LICENSE.mvn-wrapper.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/takari/maven-wrapper


io.grpc:grpc-core
====================

Copyright 2014 The gRPC Authors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

-----------------------------------------------------------------------

This product contains a modified portion of 'OkHttp', an open source
HTTP &amp; SPDY client for Android and Java applications, which can be obtained
at:

  * LICENSE:
    * okhttp/third_party/okhttp/LICENSE (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/square/okhttp
  * LOCATION_IN_GRPC:
    * okhttp/third_party/okhttp

This product contains a modified portion of 'Envoy', an open source
cloud-native high-performance edge/middle/service proxy, which can be
obtained at:

  * LICENSE:
    * xds/third_party/envoy/LICENSE (Apache License 2.0)
  * NOTICE:
    * xds/third_party/envoy/NOTICE
  * HOMEPAGE:
    * https://www.envoyproxy.io
  * LOCATION_IN_GRPC:
    * xds/third_party/envoy

This product contains a modified portion of 'gogoprotobuf',
an open source Protocol Buffers support for Go with Gadgets,
which can be obtained at:

  * LICENSE:
    * xds/third_party/gogoproto/LICENSE
  * HOMEPAGE:
    * https://github.com/gogo/protobuf
  * LOCATION_IN_GRPC:
    * xds/third_party/gogoproto

This product contains a modified portion of 'protoc-gen-validate (PGV)',
an open source protoc plugin to generate polyglot message validators,
which can be obtained at:

  * LICENSE:
    * xds/third_party/protoc-gen-validate/LICENSE (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/lyft/protoc-gen-validate
  * LOCATION_IN_GRPC:
    * xds/third_party/protoc-gen-validate

This product contains a modified portion of 'udpa',
an open source universal data plane API, which can be obtained at:

  * LICENSE:
    * xds/third_party/udpa/LICENSE (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/cncf/udpa
  * LOCATION_IN_GRPC:
    * xds/third_party/udpa


com.fasterxml.jackson.dataformat:jackson-dataformat-xml
====================

# Jackson JSON processor

Jackson is a high-performance, Free/Open Source JSON processing library.
It was originally written by Tatu Saloranta (tatu.saloranta@iki.fi), and has
been in development since 2007.
It is currently developed by a community of developers, as well as supported
commercially by FasterXML.com.

## Licensing

Jackson core and extension components may licensed under different licenses.
To find the details that apply to this artifact see the accompanying LICENSE file.
For more information, including possible other licensing options, contact
FasterXML.com (http://fasterxml.com).

## Credits

A list of contributors may be found from CREDITS file, which is included
in some artifacts (usually source distributions); but is always available
from the source code management (SCM) system project uses.


com.jolbox:bonecp
====================

   =========================================================================
   ==  NOTICE file corresponding to the section 4 d of                    ==
   ==  the Apache License, Version 2.0,                                   ==
   ==  in this case for the BoneCP (Java connection pool).                ==
   =========================================================================

   BoneCP
   Copyright 2010 Wallace Wadge

   This product includes software developed by
   Wallace Wadge (http://jolbox.com/).

org.codehaus.jackson:jackson-mapper-asl
====================

This product currently only contains code developed by authors
of specific components, as identified by the source code files;
if such notes are missing files have been created by
Tatu Saloranta.

For additional credits (generally to people who reported problems)
see CREDITS file.


com.google.inject:guice
====================


Google Guice - Core Library
Copyright 2006-2015 Google, Inc.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).




com.google.inject.extensions:guice-assistedinject
====================


Google Guice - Extensions - AssistedInject
Copyright 2006-2015 Google, Inc.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).




org.codehaus.jackson:jackson-xc
====================

This product currently only contains code developed by authors
of specific components, as identified by the source code files;
if such notes are missing files have been created by
Tatu Saloranta.

For additional credits (generally to people who reported problems)
see CREDITS file.


org.codehaus.jackson:jackson-jaxrs
====================

This product currently only contains code developed by authors
of specific components, as identified by the source code files;
if such notes are missing files have been created by
Tatu Saloranta.

For additional credits (generally to people who reported problems)
see CREDITS file.


com.google.inject.extensions:guice-servlet
====================


Google Guice - Extensions - Servlet
Copyright 2006-2015 Google, Inc.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).




org.codehaus.jackson:jackson-core-asl
====================

This product currently only contains code developed by authors
of specific components, as identified by the source code files;
if such notes are missing files have been created by
Tatu Saloranta.

For additional credits (generally to people who reported problems)
see CREDITS file.


org.bouncycastle:bcprov-jdk15on
====================

Copyright (c) 2000 - 2019 The Legion of the Bouncy Castle Inc. (https://www.bouncycastle.org)

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

Source: https://bouncycastle.org/license.html

log4j:log4j
====================

Apache log4j
Copyright 2007 The Apache Software Foundation

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).

com.google.inject.extensions:guice-multibindings
====================


Google Guice - Extensions - MultiBindings
Copyright 2006-2015 Google, Inc.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).


====================
ratis-thirdparty-misc is a shaded dependency which includes additional 3rd party dependencies in shaded form.
For the detailed list of the dependencies and the associated NOTICE file see licenses/NOTICE-ratis-thirdparty-misc.txt.</msg>
<status status="PASS" starttime="20220516 18:24:46.160" endtime="20220516 18:24:46.161"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:24:46.162" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:24:46.162" endtime="20220516 18:24:46.162"/>
</kw>
<status status="PASS" starttime="20220516 18:24:39.489" endtime="20220516 18:24:46.163"/>
</kw>
<msg timestamp="20220516 18:24:46.163" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:24:39.488" endtime="20220516 18:24:46.164"/>
</kw>
<status status="PASS" starttime="20220516 18:24:39.488" endtime="20220516 18:24:46.165"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220516 18:24:39.487" endtime="20220516 18:24:46.165"/>
</test>
<test id="s1-s4-t11" name="Delete file">
<kw name="Execute" library="os">
<arg>ozone fs -rm -skipTrash ${DEEP_URL}/subdir1/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:24:46.173" level="INFO">Running command 'ozone fs -rm -skipTrash o3fs://23554-link1-o3fs.fstest1.om//test/o3fs/dir/subdir1/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:24:51.018" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:24:51.018" level="INFO">${output} = Deleted o3fs://23554-link1-o3fs.fstest1.om/test/o3fs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20220516 18:24:46.170" endtime="20220516 18:24:51.018"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:24:51.020" level="INFO">Deleted o3fs://23554-link1-o3fs.fstest1.om/test/o3fs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20220516 18:24:51.019" endtime="20220516 18:24:51.020"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:24:51.020" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:24:51.020" endtime="20220516 18:24:51.021"/>
</kw>
<status status="PASS" starttime="20220516 18:24:46.168" endtime="20220516 18:24:51.021"/>
</kw>
<msg timestamp="20220516 18:24:51.021" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:24:46.168" endtime="20220516 18:24:51.022"/>
</kw>
<status status="PASS" starttime="20220516 18:24:46.167" endtime="20220516 18:24:51.022"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:24:51.027" level="INFO">Running command 'ozone sh key list fstest1/23554-link1-o3fs | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:24:56.092" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:24:56.092" level="INFO">${output} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/subdir1/</msg>
<status status="PASS" starttime="20220516 18:24:51.024" endtime="20220516 18:24:56.092"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:24:56.094" level="INFO">test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/subdir1/</msg>
<status status="PASS" starttime="20220516 18:24:56.093" endtime="20220516 18:24:56.094"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:24:56.095" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:24:56.094" endtime="20220516 18:24:56.095"/>
</kw>
<status status="PASS" starttime="20220516 18:24:51.023" endtime="20220516 18:24:56.095"/>
</kw>
<msg timestamp="20220516 18:24:56.095" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:24:51.023" endtime="20220516 18:24:56.096"/>
</kw>
<msg timestamp="20220516 18:24:56.096" level="INFO">${result} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/subdir1/</msg>
<status status="PASS" starttime="20220516 18:24:51.022" endtime="20220516 18:24:56.097"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 18:24:56.097" endtime="20220516 18:24:56.097"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220516 18:24:46.166" endtime="20220516 18:24:56.098"/>
</test>
<test id="s1-s4-t12" name="Delete dir">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -rmdir ${DEEP_URL}/subdir1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:24:56.104" level="INFO">Running command 'ozone fs -rmdir o3fs://23554-link1-o3fs.fstest1.om//test/o3fs/dir/subdir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:25:00.893" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:25:00.893" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:24:56.102" endtime="20220516 18:25:00.893"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:25:00.895" level="INFO"/>
<status status="PASS" starttime="20220516 18:25:00.894" endtime="20220516 18:25:00.895"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:25:00.896" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:25:00.895" endtime="20220516 18:25:00.896"/>
</kw>
<status status="PASS" starttime="20220516 18:24:56.101" endtime="20220516 18:25:00.896"/>
</kw>
<msg timestamp="20220516 18:25:00.897" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:24:56.101" endtime="20220516 18:25:00.897"/>
</kw>
<msg timestamp="20220516 18:25:00.897" level="INFO">${result} = </msg>
<status status="PASS" starttime="20220516 18:24:56.100" endtime="20220516 18:25:00.897"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:25:00.902" level="INFO">Running command 'ozone sh key list fstest1/23554-link1-o3fs | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:25:06.089" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:25:06.089" level="INFO">${output} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20220516 18:25:00.900" endtime="20220516 18:25:06.089"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:25:06.091" level="INFO">test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20220516 18:25:06.089" endtime="20220516 18:25:06.091"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:25:06.092" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:25:06.091" endtime="20220516 18:25:06.092"/>
</kw>
<status status="PASS" starttime="20220516 18:25:00.899" endtime="20220516 18:25:06.092"/>
</kw>
<msg timestamp="20220516 18:25:06.092" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:25:00.899" endtime="20220516 18:25:06.093"/>
</kw>
<msg timestamp="20220516 18:25:06.094" level="INFO">${result} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20220516 18:25:00.898" endtime="20220516 18:25:06.094"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>subdir1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 18:25:06.094" endtime="20220516 18:25:06.095"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220516 18:24:56.099" endtime="20220516 18:25:06.095"/>
</test>
<test id="s1-s4-t13" name="Touch file">
<kw name="Execute" library="os">
<arg>ozone fs -touch ${DEEP_URL}/TOUCHFILE-${SCHEME}.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:25:06.103" level="INFO">Running command 'ozone fs -touch o3fs://23554-link1-o3fs.fstest1.om//test/o3fs/dir/TOUCHFILE-o3fs.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:25:10.741" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:25:10.741" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:25:06.100" endtime="20220516 18:25:10.741"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:25:10.743" level="INFO"/>
<status status="PASS" starttime="20220516 18:25:10.742" endtime="20220516 18:25:10.743"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:25:10.744" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:25:10.743" endtime="20220516 18:25:10.744"/>
</kw>
<status status="PASS" starttime="20220516 18:25:06.099" endtime="20220516 18:25:10.744"/>
</kw>
<msg timestamp="20220516 18:25:10.744" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:25:06.098" endtime="20220516 18:25:10.745"/>
</kw>
<status status="PASS" starttime="20220516 18:25:06.097" endtime="20220516 18:25:10.751"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:25:10.757" level="INFO">Running command 'ozone sh key list fstest1/23554-link1-o3fs | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:25:15.983" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:25:15.983" level="INFO">${output} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/TOUCHFILE-o3fs.txt</msg>
<status status="PASS" starttime="20220516 18:25:10.754" endtime="20220516 18:25:15.983"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:25:15.984" level="INFO">test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/TOUCHFILE-o3fs.txt</msg>
<status status="PASS" starttime="20220516 18:25:15.983" endtime="20220516 18:25:15.984"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:25:15.985" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:25:15.985" endtime="20220516 18:25:15.985"/>
</kw>
<status status="PASS" starttime="20220516 18:25:10.753" endtime="20220516 18:25:15.986"/>
</kw>
<msg timestamp="20220516 18:25:15.986" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:25:10.752" endtime="20220516 18:25:15.986"/>
</kw>
<msg timestamp="20220516 18:25:15.987" level="INFO">${result} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/TOUCHFILE-o3fs.txt</msg>
<status status="PASS" starttime="20220516 18:25:10.751" endtime="20220516 18:25:15.987"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>TOUCHFILE-${SCHEME}.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 18:25:15.987" endtime="20220516 18:25:15.988"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220516 18:25:06.096" endtime="20220516 18:25:15.988"/>
</test>
<test id="s1-s4-t14" name="Delete file with Trash">
<kw name="Execute" library="os">
<arg>ozone fs -touch ${DEEP_URL}/testFile.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:25:15.994" level="INFO">Running command 'ozone fs -touch o3fs://23554-link1-o3fs.fstest1.om//test/o3fs/dir/testFile.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:25:20.882" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:25:20.882" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:25:15.992" endtime="20220516 18:25:20.882"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:25:20.884" level="INFO"/>
<status status="PASS" starttime="20220516 18:25:20.883" endtime="20220516 18:25:20.885"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:25:20.886" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:25:20.885" endtime="20220516 18:25:20.886"/>
</kw>
<status status="PASS" starttime="20220516 18:25:15.991" endtime="20220516 18:25:20.886"/>
</kw>
<msg timestamp="20220516 18:25:20.887" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:25:15.991" endtime="20220516 18:25:20.888"/>
</kw>
<status status="PASS" starttime="20220516 18:25:15.990" endtime="20220516 18:25:20.888"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -rm ${DEEP_URL}/testFile.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:25:20.894" level="INFO">Running command 'ozone fs -rm o3fs://23554-link1-o3fs.fstest1.om//test/o3fs/dir/testFile.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:25:25.850" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:25:25.850" level="INFO">${output} = 2022-05-16 18:25:25,505 [main] INFO Configuration.deprecation: io.bytes.per.checksum is deprecated. Instead, use dfs.bytes-per-checksum
2022-05-16 18:25:25,565 [main] INFO fs.TrashPolicyDefault: Moved...</msg>
<status status="PASS" starttime="20220516 18:25:20.891" endtime="20220516 18:25:25.850"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:25:25.851" level="INFO">2022-05-16 18:25:25,505 [main] INFO Configuration.deprecation: io.bytes.per.checksum is deprecated. Instead, use dfs.bytes-per-checksum
2022-05-16 18:25:25,565 [main] INFO fs.TrashPolicyDefault: Moved: 'o3fs://23554-link1-o3fs.fstest1.om/test/o3fs/dir/testFile.txt' to trash at: /.Trash/testuser/Current/test/o3fs/dir/testFile.txt</msg>
<status status="PASS" starttime="20220516 18:25:25.851" endtime="20220516 18:25:25.852"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:25:25.852" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:25:25.852" endtime="20220516 18:25:25.853"/>
</kw>
<status status="PASS" starttime="20220516 18:25:20.890" endtime="20220516 18:25:25.853"/>
</kw>
<msg timestamp="20220516 18:25:25.853" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:25:20.889" endtime="20220516 18:25:25.854"/>
</kw>
<status status="PASS" starttime="20220516 18:25:20.888" endtime="20220516 18:25:25.854"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls -R ${BASE_URL}/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:25:25.860" level="INFO">Running command 'ozone fs -ls -R o3fs://23554-link1-o3fs.fstest1.om/// 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:25:30.593" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:25:30.594" level="INFO">${output} = drwxrwxrwx   - testuser testuser          0 2022-05-16 18:25 o3fs://23554-link1-o3fs.fstest1.om/.Trash
drwxrwxrwx   - testuser testuser          0 2022-05-16 18:25 o3fs://23554-link1-o3fs.fstest1.om/....</msg>
<status status="PASS" starttime="20220516 18:25:25.857" endtime="20220516 18:25:30.594"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:25:30.595" level="INFO">drwxrwxrwx   - testuser testuser          0 2022-05-16 18:25 o3fs://23554-link1-o3fs.fstest1.om/.Trash
drwxrwxrwx   - testuser testuser          0 2022-05-16 18:25 o3fs://23554-link1-o3fs.fstest1.om/.Trash/testuser
drwxrwxrwx   - testuser testuser          0 2022-05-16 18:25 o3fs://23554-link1-o3fs.fstest1.om/.Trash/testuser/Current
drwxrwxrwx   - testuser testuser          0 2022-05-16 18:25 o3fs://23554-link1-o3fs.fstest1.om/.Trash/testuser/Current/test
drwxrwxrwx   - testuser testuser          0 2022-05-16 18:25 o3fs://23554-link1-o3fs.fstest1.om/.Trash/testuser/Current/test/o3fs
drwxrwxrwx   - testuser testuser          0 2022-05-16 18:25 o3fs://23554-link1-o3fs.fstest1.om/.Trash/testuser/Current/test/o3fs/dir
-rw-rw-rw-   3 testuser testuser          0 2022-05-16 18:25 o3fs://23554-link1-o3fs.fstest1.om/.Trash/testuser/Current/test/o3fs/dir/testFile.txt
drwxrwxrwx   - testuser testuser          0 2022-05-16 18:23 o3fs://23554-link1-o3fs.fstest1.om/test
drwxrwxrwx   - testuser testuser          0 2022-05-16 18:23 o3fs://23554-link1-o3fs.fstest1.om/test/o3fs
drwxrwxrwx   - testuser testuser          0 2022-05-16 18:23 o3fs://23554-link1-o3fs.fstest1.om/test/o3fs/dir
-rw-rw-rw-   3 testuser testuser      17526 2022-05-16 18:24 o3fs://23554-link1-o3fs.fstest1.om/test/o3fs/dir/MOVED.TXT
-rw-rw-rw-   3 testuser testuser      17526 2022-05-16 18:23 o3fs://23554-link1-o3fs.fstest1.om/test/o3fs/dir/PUTFILE.txt
-rw-rw-rw-   3 testuser testuser          0 2022-05-16 18:25 o3fs://23554-link1-o3fs.fstest1.om/test/o3fs/dir/TOUCHFILE-o3fs.txt</msg>
<status status="PASS" starttime="20220516 18:25:30.594" endtime="20220516 18:25:30.595"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:25:30.596" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:25:30.596" endtime="20220516 18:25:30.596"/>
</kw>
<status status="PASS" starttime="20220516 18:25:25.856" endtime="20220516 18:25:30.597"/>
</kw>
<msg timestamp="20220516 18:25:30.597" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:25:25.855" endtime="20220516 18:25:30.598"/>
</kw>
<msg timestamp="20220516 18:25:30.598" level="INFO">${result} = drwxrwxrwx   - testuser testuser          0 2022-05-16 18:25 o3fs://23554-link1-o3fs.fstest1.om/.Trash
drwxrwxrwx   - testuser testuser          0 2022-05-16 18:25 o3fs://23554-link1-o3fs.fstest1.om/....</msg>
<status status="PASS" starttime="20220516 18:25:25.854" endtime="20220516 18:25:30.598"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${DEEP_URL}/testFile.txt</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 18:25:30.599" endtime="20220516 18:25:30.599"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>.Trash/hadoop</arg>
<arg>.Trash/testuser</arg>
<arg>.Trash/root</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20220516 18:25:30.599" endtime="20220516 18:25:30.600"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${DEEP_DIR}/testFile.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 18:25:30.600" endtime="20220516 18:25:30.601"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220516 18:25:15.989" endtime="20220516 18:25:30.601"/>
</test>
<test id="s1-s4-t15" name="Delete recursively">
<kw name="Execute" library="os">
<arg>ozone fs -mkdir -p ${DEEP_URL}/subdir2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:25:30.610" level="INFO">Running command 'ozone fs -mkdir -p o3fs://23554-link1-o3fs.fstest1.om//test/o3fs/dir/subdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:25:35.581" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:25:35.581" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:25:30.605" endtime="20220516 18:25:35.581"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:25:35.582" level="INFO"/>
<status status="PASS" starttime="20220516 18:25:35.581" endtime="20220516 18:25:35.582"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:25:35.583" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:25:35.583" endtime="20220516 18:25:35.583"/>
</kw>
<status status="PASS" starttime="20220516 18:25:30.604" endtime="20220516 18:25:35.584"/>
</kw>
<msg timestamp="20220516 18:25:35.584" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:25:30.604" endtime="20220516 18:25:35.584"/>
</kw>
<status status="PASS" starttime="20220516 18:25:30.603" endtime="20220516 18:25:35.585"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -rm -skipTrash -r ${DEEP_URL}/subdir2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:25:35.589" level="INFO">Running command 'ozone fs -rm -skipTrash -r o3fs://23554-link1-o3fs.fstest1.om//test/o3fs/dir/subdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:25:40.064" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:25:40.064" level="INFO">${output} = Deleted o3fs://23554-link1-o3fs.fstest1.om/test/o3fs/dir/subdir2</msg>
<status status="PASS" starttime="20220516 18:25:35.587" endtime="20220516 18:25:40.064"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:25:40.066" level="INFO">Deleted o3fs://23554-link1-o3fs.fstest1.om/test/o3fs/dir/subdir2</msg>
<status status="PASS" starttime="20220516 18:25:40.065" endtime="20220516 18:25:40.066"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:25:40.067" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:25:40.066" endtime="20220516 18:25:40.067"/>
</kw>
<status status="PASS" starttime="20220516 18:25:35.586" endtime="20220516 18:25:40.068"/>
</kw>
<msg timestamp="20220516 18:25:40.068" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:25:35.586" endtime="20220516 18:25:40.068"/>
</kw>
<status status="PASS" starttime="20220516 18:25:35.585" endtime="20220516 18:25:40.069"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:25:40.073" level="INFO">Running command 'ozone sh key list fstest1/23554-link1-o3fs | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:25:45.477" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:25:45.477" level="INFO">${output} = .Trash/
test/
.Trash/testuser/
.Trash/testuser/Current/
.Trash/testuser/Current/test/
.Trash/testuser/Current/test/o3fs/
.Trash/testuser/Current/test/o3fs/dir/
.Trash/testuser/Current/test/o3fs/dir/te...</msg>
<status status="PASS" starttime="20220516 18:25:40.071" endtime="20220516 18:25:45.477"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:25:45.478" level="INFO">.Trash/
test/
.Trash/testuser/
.Trash/testuser/Current/
.Trash/testuser/Current/test/
.Trash/testuser/Current/test/o3fs/
.Trash/testuser/Current/test/o3fs/dir/
.Trash/testuser/Current/test/o3fs/dir/testFile.txt
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/TOUCHFILE-o3fs.txt</msg>
<status status="PASS" starttime="20220516 18:25:45.477" endtime="20220516 18:25:45.478"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:25:45.479" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:25:45.479" endtime="20220516 18:25:45.479"/>
</kw>
<status status="PASS" starttime="20220516 18:25:40.070" endtime="20220516 18:25:45.480"/>
</kw>
<msg timestamp="20220516 18:25:45.480" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:25:40.070" endtime="20220516 18:25:45.480"/>
</kw>
<msg timestamp="20220516 18:25:45.481" level="INFO">${result} = .Trash/
test/
.Trash/testuser/
.Trash/testuser/Current/
.Trash/testuser/Current/test/
.Trash/testuser/Current/test/o3fs/
.Trash/testuser/Current/test/o3fs/dir/
.Trash/testuser/Current/test/o3fs/dir/te...</msg>
<status status="PASS" starttime="20220516 18:25:40.069" endtime="20220516 18:25:45.481"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${DEEP_DIR}/subdir2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 18:25:45.481" endtime="20220516 18:25:45.482"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220516 18:25:30.602" endtime="20220516 18:25:45.482"/>
</test>
<test id="s1-s4-t16" name="List recursively">
<kw name="Setup localdir1" type="SETUP">
<kw name="Execute" library="os">
<arg>rm -Rf /tmp/localdir1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:25:45.488" level="INFO">Running command 'rm -Rf /tmp/localdir1 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:25:45.491" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:25:45.491" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:25:45.486" endtime="20220516 18:25:45.491"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:25:45.492" level="INFO"/>
<status status="PASS" starttime="20220516 18:25:45.491" endtime="20220516 18:25:45.492"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:25:45.493" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:25:45.492" endtime="20220516 18:25:45.493"/>
</kw>
<status status="PASS" starttime="20220516 18:25:45.485" endtime="20220516 18:25:45.493"/>
</kw>
<msg timestamp="20220516 18:25:45.493" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:25:45.485" endtime="20220516 18:25:45.494"/>
</kw>
<status status="PASS" starttime="20220516 18:25:45.484" endtime="20220516 18:25:45.495"/>
</kw>
<kw name="Execute" library="os">
<arg>mkdir /tmp/localdir1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:25:45.499" level="INFO">Running command 'mkdir /tmp/localdir1 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:25:45.504" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:25:45.504" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:25:45.497" endtime="20220516 18:25:45.504"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:25:45.505" level="INFO"/>
<status status="PASS" starttime="20220516 18:25:45.504" endtime="20220516 18:25:45.505"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:25:45.506" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:25:45.506" endtime="20220516 18:25:45.506"/>
</kw>
<status status="PASS" starttime="20220516 18:25:45.496" endtime="20220516 18:25:45.507"/>
</kw>
<msg timestamp="20220516 18:25:45.507" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:25:45.496" endtime="20220516 18:25:45.508"/>
</kw>
<status status="PASS" starttime="20220516 18:25:45.495" endtime="20220516 18:25:45.508"/>
</kw>
<kw name="Execute" library="os">
<arg>cp NOTICE.txt /tmp/localdir1/LOCAL.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:25:45.512" level="INFO">Running command 'cp NOTICE.txt /tmp/localdir1/LOCAL.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:25:45.516" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:25:45.516" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:25:45.510" endtime="20220516 18:25:45.516"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:25:45.517" level="INFO"/>
<status status="PASS" starttime="20220516 18:25:45.516" endtime="20220516 18:25:45.517"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:25:45.518" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:25:45.517" endtime="20220516 18:25:45.518"/>
</kw>
<status status="PASS" starttime="20220516 18:25:45.509" endtime="20220516 18:25:45.518"/>
</kw>
<msg timestamp="20220516 18:25:45.518" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:25:45.509" endtime="20220516 18:25:45.519"/>
</kw>
<status status="PASS" starttime="20220516 18:25:45.508" endtime="20220516 18:25:45.519"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir -p ${BASE_URL}testdir1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:25:45.523" level="INFO">Running command 'ozone fs -mkdir -p o3fs://23554-link1-o3fs.fstest1.om//testdir1 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:25:50.231" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:25:50.231" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:25:45.521" endtime="20220516 18:25:50.231"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:25:50.232" level="INFO"/>
<status status="PASS" starttime="20220516 18:25:50.232" endtime="20220516 18:25:50.233"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:25:50.233" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:25:50.233" endtime="20220516 18:25:50.233"/>
</kw>
<status status="PASS" starttime="20220516 18:25:45.520" endtime="20220516 18:25:50.234"/>
</kw>
<msg timestamp="20220516 18:25:50.234" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:25:45.520" endtime="20220516 18:25:50.235"/>
</kw>
<status status="PASS" starttime="20220516 18:25:45.519" endtime="20220516 18:25:50.235"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -copyFromLocal /tmp/localdir1 ${BASE_URL}testdir1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:25:50.239" level="INFO">Running command 'ozone fs -copyFromLocal /tmp/localdir1 o3fs://23554-link1-o3fs.fstest1.om//testdir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:25:59.906" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:25:59.906" level="INFO">${output} = 2022-05-16 18:25:55,139 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-05-16 18:25:55,286 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220516 18:25:50.237" endtime="20220516 18:25:59.906"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:25:59.908" level="INFO">2022-05-16 18:25:55,139 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-05-16 18:25:55,286 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-05-16 18:25:55,286 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2022-05-16 18:25:55,684 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20220516 18:25:59.907" endtime="20220516 18:25:59.908"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:25:59.909" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:25:59.908" endtime="20220516 18:25:59.909"/>
</kw>
<status status="PASS" starttime="20220516 18:25:50.236" endtime="20220516 18:25:59.909"/>
</kw>
<msg timestamp="20220516 18:25:59.909" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:25:50.236" endtime="20220516 18:25:59.910"/>
</kw>
<status status="PASS" starttime="20220516 18:25:50.235" endtime="20220516 18:25:59.910"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -put NOTICE.txt ${BASE_URL}testdir1/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:25:59.915" level="INFO">Running command 'ozone fs -put NOTICE.txt o3fs://23554-link1-o3fs.fstest1.om//testdir1/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:26:09.961" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:26:09.961" level="INFO">${output} = 2022-05-16 18:26:05,075 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-05-16 18:26:05,175 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220516 18:25:59.912" endtime="20220516 18:26:09.961"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:26:09.963" level="INFO">2022-05-16 18:26:05,075 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-05-16 18:26:05,175 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-05-16 18:26:05,175 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2022-05-16 18:26:05,604 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20220516 18:26:09.962" endtime="20220516 18:26:09.963"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:26:09.964" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:26:09.963" endtime="20220516 18:26:09.964"/>
</kw>
<status status="PASS" starttime="20220516 18:25:59.911" endtime="20220516 18:26:09.964"/>
</kw>
<msg timestamp="20220516 18:26:09.964" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:25:59.911" endtime="20220516 18:26:09.965"/>
</kw>
<status status="PASS" starttime="20220516 18:25:59.910" endtime="20220516 18:26:09.965"/>
</kw>
<status status="PASS" starttime="20220516 18:25:45.483" endtime="20220516 18:26:09.966"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls -R ${BASE_URL}testdir1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:26:09.970" level="INFO">Running command 'ozone fs -ls -R o3fs://23554-link1-o3fs.fstest1.om//testdir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:26:14.737" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:26:14.737" level="INFO">${output} = -rw-rw-rw-   3 testuser testuser      17526 2022-05-16 18:26 o3fs://23554-link1-o3fs.fstest1.om/testdir1/NOTICE.txt
drwxrwxrwx   - testuser testuser          0 2022-05-16 18:25 o3fs://23554-link1-o3fs...</msg>
<status status="PASS" starttime="20220516 18:26:09.968" endtime="20220516 18:26:14.737"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:26:14.738" level="INFO">-rw-rw-rw-   3 testuser testuser      17526 2022-05-16 18:26 o3fs://23554-link1-o3fs.fstest1.om/testdir1/NOTICE.txt
drwxrwxrwx   - testuser testuser          0 2022-05-16 18:25 o3fs://23554-link1-o3fs.fstest1.om/testdir1/localdir1
-rw-rw-rw-   3 testuser testuser      17526 2022-05-16 18:25 o3fs://23554-link1-o3fs.fstest1.om/testdir1/localdir1/LOCAL.txt</msg>
<status status="PASS" starttime="20220516 18:26:14.738" endtime="20220516 18:26:14.739"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:26:14.739" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:26:14.739" endtime="20220516 18:26:14.739"/>
</kw>
<status status="PASS" starttime="20220516 18:26:09.967" endtime="20220516 18:26:14.740"/>
</kw>
<msg timestamp="20220516 18:26:14.740" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:26:09.967" endtime="20220516 18:26:14.740"/>
</kw>
<msg timestamp="20220516 18:26:14.741" level="INFO">${result} = -rw-rw-rw-   3 testuser testuser      17526 2022-05-16 18:26 o3fs://23554-link1-o3fs.fstest1.om/testdir1/NOTICE.txt
drwxrwxrwx   - testuser testuser          0 2022-05-16 18:25 o3fs://23554-link1-o3fs...</msg>
<status status="PASS" starttime="20220516 18:26:09.966" endtime="20220516 18:26:14.741"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>localdir1/LOCAL.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 18:26:14.741" endtime="20220516 18:26:14.742"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>testdir1/NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 18:26:14.742" endtime="20220516 18:26:14.743"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220516 18:25:45.483" endtime="20220516 18:26:14.743"/>
</test>
<test id="s1-s4-t17" name="Copy to other bucket">
<kw name="Format FS URL" library="fs">
<var>${target}</var>
<arg>${SCHEME}</arg>
<arg>${VOLUME}</arg>
<arg>${BUCKET2}</arg>
<arg>testdir2</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220516 18:26:14.750" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220516 18:26:14.750" endtime="20220516 18:26:14.750"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220516 18:26:14.751" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220516 18:26:14.751" endtime="20220516 18:26:14.751"/>
</kw>
<status status="PASS" starttime="20220516 18:26:14.749" endtime="20220516 18:26:14.752"/>
</kw>
<msg timestamp="20220516 18:26:14.752" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220516 18:26:14.747" endtime="20220516 18:26:14.752"/>
</kw>
<status status="PASS" starttime="20220516 18:26:14.746" endtime="20220516 18:26:14.752"/>
</kw>
<msg timestamp="20220516 18:26:14.752" level="INFO">${url} = o3fs://23554-link2-o3fs.fstest1.om/testdir2</msg>
<status status="PASS" starttime="20220516 18:26:14.745" endtime="20220516 18:26:14.752"/>
</kw>
<msg timestamp="20220516 18:26:14.753" level="INFO">${target} = o3fs://23554-link2-o3fs.fstest1.om/testdir2</msg>
<status status="PASS" starttime="20220516 18:26:14.744" endtime="20220516 18:26:14.753"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir -p ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:26:14.758" level="INFO">Running command 'ozone fs -mkdir -p o3fs://23554-link2-o3fs.fstest1.om/testdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:26:19.172" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:26:19.172" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:26:14.756" endtime="20220516 18:26:19.172"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:26:19.173" level="INFO"/>
<status status="PASS" starttime="20220516 18:26:19.172" endtime="20220516 18:26:19.173"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:26:19.176" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:26:19.174" endtime="20220516 18:26:19.176"/>
</kw>
<status status="PASS" starttime="20220516 18:26:14.754" endtime="20220516 18:26:19.176"/>
</kw>
<msg timestamp="20220516 18:26:19.177" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:26:14.754" endtime="20220516 18:26:19.179"/>
</kw>
<status status="PASS" starttime="20220516 18:26:14.753" endtime="20220516 18:26:19.179"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -cp ${BASE_URL}/testdir1/localdir1 ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:26:19.186" level="INFO">Running command 'ozone fs -cp o3fs://23554-link1-o3fs.fstest1.om///testdir1/localdir1 o3fs://23554-link2-o3fs.fstest1.om/testdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:26:29.312" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:26:29.312" level="INFO">${output} = 2022-05-16 18:26:24,275 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-05-16 18:26:24,383 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220516 18:26:19.183" endtime="20220516 18:26:29.312"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:26:29.314" level="INFO">2022-05-16 18:26:24,275 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-05-16 18:26:24,383 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-05-16 18:26:24,383 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2022-05-16 18:26:26,043 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20220516 18:26:29.313" endtime="20220516 18:26:29.314"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:26:29.314" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:26:29.314" endtime="20220516 18:26:29.315"/>
</kw>
<status status="PASS" starttime="20220516 18:26:19.182" endtime="20220516 18:26:29.315"/>
</kw>
<msg timestamp="20220516 18:26:29.315" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:26:19.181" endtime="20220516 18:26:29.316"/>
</kw>
<status status="PASS" starttime="20220516 18:26:19.180" endtime="20220516 18:26:29.316"/>
</kw>
<kw name="Execute" library="os" type="TEARDOWN">
<arg>ozone fs -rm -r ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:26:29.321" level="INFO">Running command 'ozone fs -rm -r o3fs://23554-link2-o3fs.fstest1.om/testdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:26:34.340" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:26:34.340" level="INFO">${output} = 2022-05-16 18:26:33,983 [main] INFO Configuration.deprecation: io.bytes.per.checksum is deprecated. Instead, use dfs.bytes-per-checksum
2022-05-16 18:26:34,052 [main] INFO fs.TrashPolicyDefault: Moved...</msg>
<status status="PASS" starttime="20220516 18:26:29.319" endtime="20220516 18:26:34.340"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:26:34.342" level="INFO">2022-05-16 18:26:33,983 [main] INFO Configuration.deprecation: io.bytes.per.checksum is deprecated. Instead, use dfs.bytes-per-checksum
2022-05-16 18:26:34,052 [main] INFO fs.TrashPolicyDefault: Moved: 'o3fs://23554-link2-o3fs.fstest1.om/testdir2' to trash at: /.Trash/testuser/Current/testdir2</msg>
<status status="PASS" starttime="20220516 18:26:34.341" endtime="20220516 18:26:34.342"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:26:34.342" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:26:34.342" endtime="20220516 18:26:34.343"/>
</kw>
<status status="PASS" starttime="20220516 18:26:29.318" endtime="20220516 18:26:34.343"/>
</kw>
<msg timestamp="20220516 18:26:34.343" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:26:29.317" endtime="20220516 18:26:34.344"/>
</kw>
<status status="PASS" starttime="20220516 18:26:29.316" endtime="20220516 18:26:34.344"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220516 18:26:14.743" endtime="20220516 18:26:34.344"/>
</test>
<test id="s1-s4-t18" name="Copy to other volume">
<kw name="Format FS URL" library="fs">
<var>${target}</var>
<arg>${SCHEME}</arg>
<arg>${VOL2}</arg>
<arg>${BUCKET_IN_VOL2}</arg>
<arg>testdir3</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220516 18:26:34.354" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220516 18:26:34.352" endtime="20220516 18:26:34.354"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220516 18:26:34.355" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220516 18:26:34.354" endtime="20220516 18:26:34.355"/>
</kw>
<status status="PASS" starttime="20220516 18:26:34.352" endtime="20220516 18:26:34.356"/>
</kw>
<msg timestamp="20220516 18:26:34.356" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220516 18:26:34.349" endtime="20220516 18:26:34.356"/>
</kw>
<status status="PASS" starttime="20220516 18:26:34.348" endtime="20220516 18:26:34.357"/>
</kw>
<msg timestamp="20220516 18:26:34.357" level="INFO">${url} = o3fs://23554-link3-o3fs.fstest2.om/testdir3</msg>
<status status="PASS" starttime="20220516 18:26:34.347" endtime="20220516 18:26:34.357"/>
</kw>
<msg timestamp="20220516 18:26:34.357" level="INFO">${target} = o3fs://23554-link3-o3fs.fstest2.om/testdir3</msg>
<status status="PASS" starttime="20220516 18:26:34.346" endtime="20220516 18:26:34.357"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir -p ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:26:34.362" level="INFO">Running command 'ozone fs -mkdir -p o3fs://23554-link3-o3fs.fstest2.om/testdir3 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:26:38.999" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:26:38.999" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:26:34.360" endtime="20220516 18:26:38.999"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:26:39.001" level="INFO"/>
<status status="PASS" starttime="20220516 18:26:39.000" endtime="20220516 18:26:39.001"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:26:39.002" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:26:39.001" endtime="20220516 18:26:39.002"/>
</kw>
<status status="PASS" starttime="20220516 18:26:34.359" endtime="20220516 18:26:39.002"/>
</kw>
<msg timestamp="20220516 18:26:39.003" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:26:34.358" endtime="20220516 18:26:39.003"/>
</kw>
<status status="PASS" starttime="20220516 18:26:34.357" endtime="20220516 18:26:39.003"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -cp ${BASE_URL}/testdir1/localdir1 ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:26:39.008" level="INFO">Running command 'ozone fs -cp o3fs://23554-link1-o3fs.fstest1.om///testdir1/localdir1 o3fs://23554-link3-o3fs.fstest2.om/testdir3 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:26:49.028" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:26:49.028" level="INFO">${output} = 2022-05-16 18:26:43,910 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-05-16 18:26:44,023 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220516 18:26:39.006" endtime="20220516 18:26:49.029"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:26:49.030" level="INFO">2022-05-16 18:26:43,910 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-05-16 18:26:44,023 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-05-16 18:26:44,023 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2022-05-16 18:26:45,626 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20220516 18:26:49.029" endtime="20220516 18:26:49.030"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:26:49.031" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:26:49.031" endtime="20220516 18:26:49.031"/>
</kw>
<status status="PASS" starttime="20220516 18:26:39.005" endtime="20220516 18:26:49.032"/>
</kw>
<msg timestamp="20220516 18:26:49.032" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:26:39.005" endtime="20220516 18:26:49.033"/>
</kw>
<status status="PASS" starttime="20220516 18:26:39.004" endtime="20220516 18:26:49.033"/>
</kw>
<kw name="Execute" library="os" type="TEARDOWN">
<arg>ozone fs -rm -r ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:26:49.037" level="INFO">Running command 'ozone fs -rm -r o3fs://23554-link3-o3fs.fstest2.om/testdir3 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:26:53.873" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:26:53.873" level="INFO">${output} = 2022-05-16 18:26:53,616 [main] INFO Configuration.deprecation: io.bytes.per.checksum is deprecated. Instead, use dfs.bytes-per-checksum
2022-05-16 18:26:53,683 [main] INFO fs.TrashPolicyDefault: Moved...</msg>
<status status="PASS" starttime="20220516 18:26:49.035" endtime="20220516 18:26:53.873"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:26:53.874" level="INFO">2022-05-16 18:26:53,616 [main] INFO Configuration.deprecation: io.bytes.per.checksum is deprecated. Instead, use dfs.bytes-per-checksum
2022-05-16 18:26:53,683 [main] INFO fs.TrashPolicyDefault: Moved: 'o3fs://23554-link3-o3fs.fstest2.om/testdir3' to trash at: /.Trash/testuser/Current/testdir3</msg>
<status status="PASS" starttime="20220516 18:26:53.874" endtime="20220516 18:26:53.874"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:26:53.876" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:26:53.875" endtime="20220516 18:26:53.876"/>
</kw>
<status status="PASS" starttime="20220516 18:26:49.035" endtime="20220516 18:26:53.876"/>
</kw>
<msg timestamp="20220516 18:26:53.876" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:26:49.034" endtime="20220516 18:26:53.876"/>
</kw>
<status status="PASS" starttime="20220516 18:26:49.033" endtime="20220516 18:26:53.877"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220516 18:26:34.345" endtime="20220516 18:26:53.877"/>
</test>
<test id="s1-s4-t19" name="List file created via shell">
<kw name="Execute" library="os" type="SETUP">
<arg>ozone sh key put ${VOLUME}/${BUCKET}/${SCHEME}.txt NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:26:53.883" level="INFO">Running command 'ozone sh key put fstest1/23554-link1-o3fs/o3fs.txt NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:27:01.335" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:27:01.335" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:26:53.880" endtime="20220516 18:27:01.335"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:27:01.337" level="INFO"/>
<status status="PASS" starttime="20220516 18:27:01.336" endtime="20220516 18:27:01.337"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:27:01.338" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:27:01.337" endtime="20220516 18:27:01.338"/>
</kw>
<status status="PASS" starttime="20220516 18:26:53.880" endtime="20220516 18:27:01.338"/>
</kw>
<msg timestamp="20220516 18:27:01.338" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:26:53.879" endtime="20220516 18:27:01.339"/>
</kw>
<status status="PASS" starttime="20220516 18:26:53.879" endtime="20220516 18:27:01.339"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls ${BASE_URL}${SCHEME}.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:27:01.344" level="INFO">Running command 'ozone fs -ls o3fs://23554-link1-o3fs.fstest1.om//o3fs.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:27:06.192" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:27:06.192" level="INFO">${output} = -rw-rw-rw-   3 testuser testuser      17526 2022-05-16 18:27 o3fs://23554-link1-o3fs.fstest1.om/o3fs.txt</msg>
<status status="PASS" starttime="20220516 18:27:01.342" endtime="20220516 18:27:06.193"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:27:06.194" level="INFO">-rw-rw-rw-   3 testuser testuser      17526 2022-05-16 18:27 o3fs://23554-link1-o3fs.fstest1.om/o3fs.txt</msg>
<status status="PASS" starttime="20220516 18:27:06.193" endtime="20220516 18:27:06.194"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:27:06.195" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:27:06.195" endtime="20220516 18:27:06.195"/>
</kw>
<status status="PASS" starttime="20220516 18:27:01.341" endtime="20220516 18:27:06.196"/>
</kw>
<msg timestamp="20220516 18:27:06.196" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:27:01.340" endtime="20220516 18:27:06.197"/>
</kw>
<msg timestamp="20220516 18:27:06.197" level="INFO">${result} = -rw-rw-rw-   3 testuser testuser      17526 2022-05-16 18:27 o3fs://23554-link1-o3fs.fstest1.om/o3fs.txt</msg>
<status status="PASS" starttime="20220516 18:27:01.340" endtime="20220516 18:27:06.197"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${SCHEME}.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 18:27:06.197" endtime="20220516 18:27:06.198"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220516 18:26:53.877" endtime="20220516 18:27:06.198"/>
</test>
<test id="s1-s4-t20" name="Reject overwrite existing">
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone fs -copyFromLocal NOTICE.txt ${BASE_URL}${SCHEME}.txt</arg>
<arg>1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:27:06.204" level="INFO">Running command 'ozone fs -copyFromLocal NOTICE.txt o3fs://23554-link1-o3fs.fstest1.om//o3fs.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:27:10.849" level="INFO">${rc} = 1</msg>
<msg timestamp="20220516 18:27:10.849" level="INFO">${output} = copyFromLocal: `o3fs://23554-link1-o3fs.fstest1.om/o3fs.txt': File exists</msg>
<status status="PASS" starttime="20220516 18:27:06.201" endtime="20220516 18:27:10.849"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:27:10.851" level="INFO">copyFromLocal: `o3fs://23554-link1-o3fs.fstest1.om/o3fs.txt': File exists</msg>
<status status="PASS" starttime="20220516 18:27:10.850" endtime="20220516 18:27:10.851"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:27:10.851" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:27:10.851" endtime="20220516 18:27:10.852"/>
</kw>
<msg timestamp="20220516 18:27:10.852" level="INFO">${result} = copyFromLocal: `o3fs://23554-link1-o3fs.fstest1.om/o3fs.txt': File exists</msg>
<status status="PASS" starttime="20220516 18:27:06.200" endtime="20220516 18:27:10.852"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>File exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 18:27:10.852" endtime="20220516 18:27:10.853"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220516 18:27:06.199" endtime="20220516 18:27:10.853"/>
</test>
<test id="s1-s4-t21" name="Get file">
<kw name="Execute" library="os" type="SETUP">
<arg>rm -Rf /tmp/GET.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:27:10.860" level="INFO">Running command 'rm -Rf /tmp/GET.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:27:10.863" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:27:10.863" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:27:10.857" endtime="20220516 18:27:10.863"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:27:10.864" level="INFO"/>
<status status="PASS" starttime="20220516 18:27:10.864" endtime="20220516 18:27:10.865"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:27:10.865" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:27:10.865" endtime="20220516 18:27:10.866"/>
</kw>
<status status="PASS" starttime="20220516 18:27:10.856" endtime="20220516 18:27:10.866"/>
</kw>
<msg timestamp="20220516 18:27:10.866" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:27:10.856" endtime="20220516 18:27:10.867"/>
</kw>
<status status="PASS" starttime="20220516 18:27:10.855" endtime="20220516 18:27:10.867"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -get ${BASE_URL}${SCHEME}.txt /tmp/GET.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:27:10.880" level="INFO">Running command 'ozone fs -get o3fs://23554-link1-o3fs.fstest1.om//o3fs.txt /tmp/GET.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:27:17.354" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:27:17.354" level="INFO">${output} = 2022-05-16 18:27:15,560 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-05-16 18:27:15,672 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220516 18:27:10.877" endtime="20220516 18:27:17.354"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:27:17.356" level="INFO">2022-05-16 18:27:15,560 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-05-16 18:27:15,672 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-05-16 18:27:15,672 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started</msg>
<status status="PASS" starttime="20220516 18:27:17.355" endtime="20220516 18:27:17.356"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:27:17.357" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:27:17.356" endtime="20220516 18:27:17.357"/>
</kw>
<status status="PASS" starttime="20220516 18:27:10.876" endtime="20220516 18:27:17.358"/>
</kw>
<msg timestamp="20220516 18:27:17.358" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:27:10.875" endtime="20220516 18:27:17.358"/>
</kw>
<status status="PASS" starttime="20220516 18:27:10.867" endtime="20220516 18:27:17.359"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>/tmp/GET.txt</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20220516 18:27:17.359" level="INFO" html="true">File '&lt;a href="file:///tmp/GET.txt"&gt;/tmp/GET.txt&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20220516 18:27:17.359" endtime="20220516 18:27:17.359"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220516 18:27:10.854" endtime="20220516 18:27:17.360"/>
</test>
<doc>Ozone FS tests</doc>
<status status="PASS" starttime="20220516 18:22:02.794" endtime="20220516 18:27:17.363"/>
</suite>
<suite id="s1-s5" name="s3-encrypted" source="/opt/hadoop/smoketest/s3">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220516 18:27:24.131" level="INFO">${randStr} = 5506301844</msg>
<status status="PASS" starttime="20220516 18:27:24.130" endtime="20220516 18:27:24.131"/>
</kw>
<msg timestamp="20220516 18:27:24.131" level="INFO">${random} = ozone-test-5506301844</msg>
<status status="PASS" starttime="20220516 18:27:24.130" endtime="20220516 18:27:24.131"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220516 18:27:24.133" level="INFO">${PREFIX} = ozone-test-5506301844</msg>
<status status="PASS" starttime="20220516 18:27:24.132" endtime="20220516 18:27:24.133"/>
</kw>
<status status="PASS" starttime="20220516 18:27:24.129" endtime="20220516 18:27:24.133"/>
</kw>
<status status="PASS" starttime="20220516 18:27:24.129" endtime="20220516 18:27:24.133"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which apt-get</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:27:24.139" level="INFO">Running command 'which apt-get 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:27:24.142" level="INFO">${rc} = 1</msg>
<msg timestamp="20220516 18:27:24.142" level="INFO">${output} = which: no apt-get in (/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin)</msg>
<status status="PASS" starttime="20220516 18:27:24.135" endtime="20220516 18:27:24.142"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220516 18:27:24.143" endtime="20220516 18:27:24.144"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>yum --help</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:27:24.146" level="INFO">Running command 'yum --help 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:27:24.375" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:27:24.376" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
ovl: Error while doing RPMdb copy-up:
[Errno 13] Permission denied: '/var/lib/rpm/Obsoletename'
Usage: yum [options] COMMAND

List of Commands:

check          Check...</msg>
<status status="PASS" starttime="20220516 18:27:24.144" endtime="20220516 18:27:24.376"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Install aws cli s3 centos" library="commonawslib">
<kw name="Execute" library="os">
<arg>sudo -E yum install -y awscli</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:27:24.383" level="INFO">Running command 'sudo -E yum install -y awscli 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:27:47.811" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:27:47.812" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
Determining fastest mirrors
 * base: mirror.fcix.net
 * epel: mirror.lshiy.com
 * extras: repo.ialab.dsu.edu
 * updates: mirrors.xmission.com
Resolving Dependencies
...</msg>
<status status="PASS" starttime="20220516 18:27:24.380" endtime="20220516 18:27:47.812"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:27:47.813" level="INFO">Loaded plugins: fastestmirror, ovl
Determining fastest mirrors
 * base: mirror.fcix.net
 * epel: mirror.lshiy.com
 * extras: repo.ialab.dsu.edu
 * updates: mirrors.xmission.com
Resolving Dependencies
--&gt; Running transaction check
---&gt; Package awscli.noarch 0:1.14.28-5.el7_5.1 will be installed
--&gt; Processing Dependency: python-s3transfer &gt;= 0.1.9 for package: awscli-1.14.28-5.el7_5.1.noarch
--&gt; Processing Dependency: python-docutils &gt;= 0.10 for package: awscli-1.14.28-5.el7_5.1.noarch
--&gt; Processing Dependency: python-cryptography &gt;= 1.7.2 for package: awscli-1.14.28-5.el7_5.1.noarch
--&gt; Processing Dependency: PyYAML &gt;= 3.10 for package: awscli-1.14.28-5.el7_5.1.noarch
--&gt; Running transaction check
---&gt; Package PyYAML.x86_64 0:3.10-11.el7 will be installed
--&gt; Processing Dependency: libyaml-0.so.2()(64bit) for package: PyYAML-3.10-11.el7.x86_64
---&gt; Package python-docutils.noarch 0:0.11-0.3.20130715svn7687.el7 will be installed
--&gt; Processing Dependency: python-imaging for package: python-docutils-0.11-0.3.20130715svn7687.el7.noarch
---&gt; Package python-s3transfer.noarch 0:0.1.13-1.el7_9.2 will be installed
--&gt; Processing Dependency: python-dateutil &gt;= 1.4 for package: python-s3transfer-0.1.13-1.el7_9.2.noarch
---&gt; Package python2-cryptography.x86_64 0:1.7.2-2.el7 will be installed
--&gt; Processing Dependency: python-six &gt;= 1.4.1 for package: python2-cryptography-1.7.2-2.el7.x86_64
--&gt; Processing Dependency: python-pyasn1 &gt;= 0.1.8 for package: python2-cryptography-1.7.2-2.el7.x86_64
--&gt; Processing Dependency: python-idna &gt;= 2.0 for package: python2-cryptography-1.7.2-2.el7.x86_64
--&gt; Processing Dependency: python-cffi &gt;= 1.4.1 for package: python2-cryptography-1.7.2-2.el7.x86_64
--&gt; Processing Dependency: python-setuptools for package: python2-cryptography-1.7.2-2.el7.x86_64
--&gt; Processing Dependency: python-ipaddress for package: python2-cryptography-1.7.2-2.el7.x86_64
--&gt; Processing Dependency: python-enum34 for package: python2-cryptography-1.7.2-2.el7.x86_64
--&gt; Processing Dependency: openssl for package: python2-cryptography-1.7.2-2.el7.x86_64
--&gt; Running transaction check
---&gt; Package libyaml.x86_64 0:0.1.4-11.el7_0 will be installed
---&gt; Package openssl.x86_64 1:1.0.2k-25.el7_9 will be installed
--&gt; Processing Dependency: openssl-libs(x86-64) = 1:1.0.2k-25.el7_9 for package: 1:openssl-1.0.2k-25.el7_9.x86_64
--&gt; Processing Dependency: make for package: 1:openssl-1.0.2k-25.el7_9.x86_64
---&gt; Package python-cffi.x86_64 0:1.6.0-5.el7 will be installed
--&gt; Processing Dependency: python-pycparser for package: python-cffi-1.6.0-5.el7.x86_64
---&gt; Package python-dateutil.noarch 0:1.5-7.el7 will be installed
---&gt; Package python-enum34.noarch 0:1.0.4-1.el7 will be installed
---&gt; Package python-idna.noarch 0:2.4-1.el7 will be installed
---&gt; Package python-ipaddress.noarch 0:1.0.16-2.el7 will be installed
---&gt; Package python-pillow.x86_64 0:2.0.0-23.gitd1c6db8.el7_9 will be installed
--&gt; Processing Dependency: libtiff.so.5(LIBTIFF_4.0)(64bit) for package: python-pillow-2.0.0-23.gitd1c6db8.el7_9.x86_64
--&gt; Processing Dependency: libwebp.so.4()(64bit) for package: python-pillow-2.0.0-23.gitd1c6db8.el7_9.x86_64
--&gt; Processing Dependency: libtiff.so.5()(64bit) for package: python-pillow-2.0.0-23.gitd1c6db8.el7_9.x86_64
---&gt; Package python-setuptools.noarch 0:0.9.8-7.el7 will be installed
--&gt; Processing Dependency: python-backports-ssl_match_hostname for package: python-setuptools-0.9.8-7.el7.noarch
---&gt; Package python-six.noarch 0:1.9.0-2.el7 will be installed
---&gt; Package python2-pyasn1.noarch 0:0.1.9-7.el7 will be installed
--&gt; Running transaction check
---&gt; Package libtiff.x86_64 0:4.0.3-35.el7 will be installed
--&gt; Processing Dependency: libjbig.so.2.0()(64bit) for package: libtiff-4.0.3-35.el7.x86_64
---&gt; Package libwebp.x86_64 0:0.3.0-10.el7_9 will be installed
---&gt; Package make.x86_64 1:3.82-24.el7 will be installed
---&gt; Package openssl-libs.x86_64 1:1.0.2k-19.el7 will be updated
---&gt; Package openssl-libs.x86_64 1:1.0.2k-25.el7_9 will be an update
---&gt; Package python-backports-ssl_match_hostname.noarch 0:3.5.0.1-1.el7 will be installed
--&gt; Processing Dependency: python-backports for package: python-backports-ssl_match_hostname-3.5.0.1-1.el7.noarch
---&gt; Package python-pycparser.noarch 0:2.14-1.el7 will be installed
--&gt; Processing Dependency: python-ply for package: python-pycparser-2.14-1.el7.noarch
--&gt; Running transaction check
---&gt; Package jbigkit-libs.x86_64 0:2.0-11.el7 will be installed
---&gt; Package python-backports.x86_64 0:1.0-8.el7 will be installed
---&gt; Package python-ply.noarch 0:3.4-11.el7 will be installed
--&gt; Finished Dependency Resolution

Dependencies Resolved

================================================================================
 Package                      Arch   Version                      Repository
                                                                           Size
================================================================================
Installing:
 awscli                       noarch 1.14.28-5.el7_5.1            base    1.0 M
Installing for dependencies:
 PyYAML                       x86_64 3.10-11.el7                  base    153 k
 jbigkit-libs                 x86_64 2.0-11.el7                   base     46 k
 libtiff                      x86_64 4.0.3-35.el7                 base    172 k
 libwebp                      x86_64 0.3.0-10.el7_9               updates 170 k
 libyaml                      x86_64 0.1.4-11.el7_0               base     55 k
 make                         x86_64 1:3.82-24.el7                base    421 k
 openssl                      x86_64 1:1.0.2k-25.el7_9            updates 494 k
 python-backports             x86_64 1.0-8.el7                    base    5.8 k
 python-backports-ssl_match_hostname
                              noarch 3.5.0.1-1.el7                base     13 k
 python-cffi                  x86_64 1.6.0-5.el7                  base    218 k
 python-dateutil              noarch 1.5-7.el7                    base     85 k
 python-docutils              noarch 0.11-0.3.20130715svn7687.el7 base    1.5 M
 python-enum34                noarch 1.0.4-1.el7                  base     52 k
 python-idna                  noarch 2.4-1.el7                    base     94 k
 python-ipaddress             noarch 1.0.16-2.el7                 base     34 k
 python-pillow                x86_64 2.0.0-23.gitd1c6db8.el7_9    updates 439 k
 python-ply                   noarch 3.4-11.el7                   base    123 k
 python-pycparser             noarch 2.14-1.el7                   base    104 k
 python-s3transfer            noarch 0.1.13-1.el7_9.2             updates 6.1 M
 python-setuptools            noarch 0.9.8-7.el7                  base    397 k
 python-six                   noarch 1.9.0-2.el7                  base     29 k
 python2-cryptography         x86_64 1.7.2-2.el7                  base    502 k
 python2-pyasn1               noarch 0.1.9-7.el7                  base    100 k
Updating for dependencies:
 openssl-libs                 x86_64 1:1.0.2k-25.el7_9            updates 1.2 M

Transaction Summary
================================================================================
Install  1 Package  (+23 Dependent packages)
Upgrade             (  1 Dependent package)

Total download size: 13 M
Downloading packages:
Delta RPMs disabled because /usr/bin/applydeltarpm not installed.
--------------------------------------------------------------------------------
Total                                               14 MB/s |  13 MB  00:00     
Running transaction check
Running transaction test
Transaction test succeeded
Running transaction
  Installing : python-ipaddress-1.0.16-2.el7.noarch                        1/26 
  Updating   : 1:openssl-libs-1.0.2k-25.el7_9.x86_64                       2/26 
  Installing : python2-pyasn1-0.1.9-7.el7.noarch                           3/26 
  Installing : libyaml-0.1.4-11.el7_0.x86_64                               4/26 
  Installing : PyYAML-3.10-11.el7.x86_64                                   5/26 
  Installing : python-backports-1.0-8.el7.x86_64                           6/26 
  Installing : python-backports-ssl_match_hostname-3.5.0.1-1.el7.noarch    7/26 
  Installing : python-setuptools-0.9.8-7.el7.noarch                        8/26 
  Installing : python-ply-3.4-11.el7.noarch                                9/26 
  Installing : python-pycparser-2.14-1.el7.noarch                         10/26 
  Installing : python-cffi-1.6.0-5.el7.x86_64                             11/26 
  Installing : python-idna-2.4-1.el7.noarch                               12/26 
  Installing : python-six-1.9.0-2.el7.noarch                              13/26 
  Installing : 1:make-3.82-24.el7.x86_64                                  14/26 
  Installing : 1:openssl-1.0.2k-25.el7_9.x86_64                           15/26 
  Installing : python-dateutil-1.5-7.el7.noarch                           16/26 
  Installing : jbigkit-libs-2.0-11.el7.x86_64                             17/26 
  Installing : libtiff-4.0.3-35.el7.x86_64                                18/26 
  Installing : libwebp-0.3.0-10.el7_9.x86_64                              19/26 
  Installing : python-pillow-2.0.0-23.gitd1c6db8.el7_9.x86_64             20/26 
  Installing : python-docutils-0.11-0.3.20130715svn7687.el7.noarch        21/26 
  Installing : python-s3transfer-0.1.13-1.el7_9.2.noarch                  22/26 
  Installing : python-enum34-1.0.4-1.el7.noarch                           23/26 
  Installing : python2-cryptography-1.7.2-2.el7.x86_64                    24/26 
  Installing : awscli-1.14.28-5.el7_5.1.noarch                            25/26 
  Cleanup    : 1:openssl-libs-1.0.2k-19.el7.x86_64                        26/26 
  Verifying  : python-backports-ssl_match_hostname-3.5.0.1-1.el7.noarch    1/26 
  Verifying  : 1:openssl-1.0.2k-25.el7_9.x86_64                            2/26 
  Verifying  : python-enum34-1.0.4-1.el7.noarch                            3/26 
  Verifying  : libwebp-0.3.0-10.el7_9.x86_64                               4/26 
  Verifying  : python-setuptools-0.9.8-7.el7.noarch                        5/26 
  Verifying  : python-docutils-0.11-0.3.20130715svn7687.el7.noarch         6/26 
  Verifying  : jbigkit-libs-2.0-11.el7.x86_64                              7/26 
  Verifying  : python-dateutil-1.5-7.el7.noarch                            8/26 
  Verifying  : libtiff-4.0.3-35.el7.x86_64                                 9/26 
  Verifying  : 1:make-3.82-24.el7.x86_64                                  10/26 
  Verifying  : python-six-1.9.0-2.el7.noarch                              11/26 
  Verifying  : python-idna-2.4-1.el7.noarch                               12/26 
  Verifying  : python-ply-3.4-11.el7.noarch                               13/26 
  Verifying  : 1:openssl-libs-1.0.2k-25.el7_9.x86_64                      14/26 
  Verifying  : python-backports-1.0-8.el7.x86_64                          15/26 
  Verifying  : python-cffi-1.6.0-5.el7.x86_64                             16/26 
  Verifying  : awscli-1.14.28-5.el7_5.1.noarch                            17/26 
  Verifying  : python-pycparser-2.14-1.el7.noarch                         18/26 
  Verifying  : libyaml-0.1.4-11.el7_0.x86_64                              19/26 
  Verifying  : python-s3transfer-0.1.13-1.el7_9.2.noarch                  20/26 
  Verifying  : python-ipaddress-1.0.16-2.el7.noarch                       21/26 
  Verifying  : python2-pyasn1-0.1.9-7.el7.noarch                          22/26 
  Verifying  : PyYAML-3.10-11.el7.x86_64                                  23/26 
  Verifying  : python-pillow-2.0.0-23.gitd1c6db8.el7_9.x86_64             24/26 
  Verifying  : python2-cryptography-1.7.2-2.el7.x86_64                    25/26 
  Verifying  : 1:openssl-libs-1.0.2k-19.el7.x86_64                        26/26 

Installed:
  awscli.noarch 0:1.14.28-5.el7_5.1                                             

Dependency Installed:
  PyYAML.x86_64 0:3.10-11.el7                                                   
  jbigkit-libs.x86_64 0:2.0-11.el7                                              
  libtiff.x86_64 0:4.0.3-35.el7                                                 
  libwebp.x86_64 0:0.3.0-10.el7_9                                               
  libyaml.x86_64 0:0.1.4-11.el7_0                                               
  make.x86_64 1:3.82-24.el7                                                     
  openssl.x86_64 1:1.0.2k-25.el7_9                                              
  python-backports.x86_64 0:1.0-8.el7                                           
  python-backports-ssl_match_hostname.noarch 0:3.5.0.1-1.el7                    
  python-cffi.x86_64 0:1.6.0-5.el7                                              
  python-dateutil.noarch 0:1.5-7.el7                                            
  python-docutils.noarch 0:0.11-0.3.20130715svn7687.el7                         
  python-enum34.noarch 0:1.0.4-1.el7                                            
  python-idna.noarch 0:2.4-1.el7                                                
  python-ipaddress.noarch 0:1.0.16-2.el7                                        
  python-pillow.x86_64 0:2.0.0-23.gitd1c6db8.el7_9                              
  python-ply.noarch 0:3.4-11.el7                                                
  python-pycparser.noarch 0:2.14-1.el7                                          
  python-s3transfer.noarch 0:0.1.13-1.el7_9.2                                   
  python-setuptools.noarch 0:0.9.8-7.el7                                        
  python-six.noarch 0:1.9.0-2.el7                                               
  python2-cryptography.x86_64 0:1.7.2-2.el7                                     
  python2-pyasn1.noarch 0:0.1.9-7.el7                                           

Dependency Updated:
  openssl-libs.x86_64 1:1.0.2k-25.el7_9                                         

Complete!</msg>
<status status="PASS" starttime="20220516 18:27:47.812" endtime="20220516 18:27:47.813"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:27:47.814" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:27:47.814" endtime="20220516 18:27:47.814"/>
</kw>
<status status="PASS" starttime="20220516 18:27:24.379" endtime="20220516 18:27:47.815"/>
</kw>
<msg timestamp="20220516 18:27:47.815" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:27:24.379" endtime="20220516 18:27:47.820"/>
</kw>
<status status="PASS" starttime="20220516 18:27:24.378" endtime="20220516 18:27:47.821"/>
</kw>
<status status="PASS" starttime="20220516 18:27:24.377" endtime="20220516 18:27:47.821"/>
</kw>
<status status="PASS" starttime="20220516 18:27:24.376" endtime="20220516 18:27:47.821"/>
</kw>
<status status="PASS" starttime="20220516 18:27:24.134" endtime="20220516 18:27:47.822"/>
</kw>
<status status="PASS" starttime="20220516 18:27:24.134" endtime="20220516 18:27:47.822"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:27:47.830" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:27:47.839" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:27:47.839" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20220516 18:27:47.826" endtime="20220516 18:27:47.839"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:27:47.840" level="INFO">s3g</msg>
<status status="PASS" starttime="20220516 18:27:47.840" endtime="20220516 18:27:47.840"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:27:47.841" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:27:47.840" endtime="20220516 18:27:47.841"/>
</kw>
<status status="PASS" starttime="20220516 18:27:47.826" endtime="20220516 18:27:47.842"/>
</kw>
<msg timestamp="20220516 18:27:47.842" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:27:47.825" endtime="20220516 18:27:47.843"/>
</kw>
<msg timestamp="20220516 18:27:47.843" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20220516 18:27:47.824" endtime="20220516 18:27:47.843"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220516 18:27:47.846" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220516 18:27:47.843" endtime="20220516 18:27:47.846"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:27:47.851" level="INFO">Running command 'kinit -k testuser/s3g@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:27:47.928" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:27:47.928" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:27:47.848" endtime="20220516 18:27:47.928"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:27:47.930" level="INFO"/>
<status status="PASS" starttime="20220516 18:27:47.929" endtime="20220516 18:27:47.930"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:27:47.930" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:27:47.930" endtime="20220516 18:27:47.930"/>
</kw>
<status status="PASS" starttime="20220516 18:27:47.848" endtime="20220516 18:27:47.931"/>
</kw>
<msg timestamp="20220516 18:27:47.931" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:27:47.847" endtime="20220516 18:27:47.932"/>
</kw>
<status status="PASS" starttime="20220516 18:27:47.847" endtime="20220516 18:27:47.932"/>
</kw>
<status status="PASS" starttime="20220516 18:27:47.846" endtime="20220516 18:27:47.932"/>
</kw>
<status status="PASS" starttime="20220516 18:27:47.824" endtime="20220516 18:27:47.932"/>
</kw>
<status status="PASS" starttime="20220516 18:27:47.823" endtime="20220516 18:27:47.933"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:27:47.938" level="INFO">Running command 'ozone s3 getsecret  2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:27:52.153" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:27:52.153" level="INFO">${output} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=f7769bc1a657ea184c2c54edea939f94012aba2596b4499d251cf819b952cada</msg>
<status status="PASS" starttime="20220516 18:27:47.936" endtime="20220516 18:27:52.153"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:27:52.155" level="INFO">awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=f7769bc1a657ea184c2c54edea939f94012aba2596b4499d251cf819b952cada</msg>
<status status="PASS" starttime="20220516 18:27:52.154" endtime="20220516 18:27:52.155"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:27:52.156" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:27:52.155" endtime="20220516 18:27:52.156"/>
</kw>
<status status="PASS" starttime="20220516 18:27:47.935" endtime="20220516 18:27:52.157"/>
</kw>
<msg timestamp="20220516 18:27:52.157" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:27:47.935" endtime="20220516 18:27:52.157"/>
</kw>
<msg timestamp="20220516 18:27:52.158" level="INFO">${result} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=f7769bc1a657ea184c2c54edea939f94012aba2596b4499d251cf819b952cada</msg>
<status status="PASS" starttime="20220516 18:27:47.934" endtime="20220516 18:27:52.158"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20220516 18:27:52.159" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20220516 18:27:52.158" endtime="20220516 18:27:52.159"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>sdsdasaasdasd</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20220516 18:27:52.160" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20220516 18:27:52.159" endtime="20220516 18:27:52.160"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20220516 18:27:52.161" level="INFO">${secret} = ['f7769bc1a657ea184c2c54edea939f94012aba2596b4499d251cf819b952cada']</msg>
<status status="PASS" starttime="20220516 18:27:52.160" endtime="20220516 18:27:52.161"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220516 18:27:52.162" level="INFO">${accessKey} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220516 18:27:52.161" endtime="20220516 18:27:52.162"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220516 18:27:52.164" level="INFO">${secret} = f7769bc1a657ea184c2c54edea939f94012aba2596b4499d251cf819b952cada</msg>
<status status="PASS" starttime="20220516 18:27:52.163" endtime="20220516 18:27:52.164"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:27:52.168" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:27:52.822" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:27:52.823" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:27:52.165" endtime="20220516 18:27:52.823"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:27:52.824" level="INFO"/>
<status status="PASS" starttime="20220516 18:27:52.823" endtime="20220516 18:27:52.824"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:27:52.825" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:27:52.824" endtime="20220516 18:27:52.825"/>
</kw>
<status status="PASS" starttime="20220516 18:27:52.165" endtime="20220516 18:27:52.825"/>
</kw>
<msg timestamp="20220516 18:27:52.825" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:27:52.164" endtime="20220516 18:27:52.826"/>
</kw>
<status status="PASS" starttime="20220516 18:27:52.164" endtime="20220516 18:27:52.826"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:27:52.830" level="INFO">Running command 'aws configure set aws_access_key_id testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:27:53.446" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:27:53.446" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:27:52.828" endtime="20220516 18:27:53.446"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:27:53.447" level="INFO"/>
<status status="PASS" starttime="20220516 18:27:53.447" endtime="20220516 18:27:53.447"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:27:53.448" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:27:53.448" endtime="20220516 18:27:53.448"/>
</kw>
<status status="PASS" starttime="20220516 18:27:52.828" endtime="20220516 18:27:53.449"/>
</kw>
<msg timestamp="20220516 18:27:53.449" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:27:52.827" endtime="20220516 18:27:53.450"/>
</kw>
<status status="PASS" starttime="20220516 18:27:52.827" endtime="20220516 18:27:53.450"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:27:53.454" level="INFO">Running command 'aws configure set aws_secret_access_key f7769bc1a657ea184c2c54edea939f94012aba2596b4499d251cf819b952cada 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:27:54.065" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:27:54.066" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:27:53.452" endtime="20220516 18:27:54.066"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:27:54.067" level="INFO"/>
<status status="PASS" starttime="20220516 18:27:54.066" endtime="20220516 18:27:54.067"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:27:54.068" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:27:54.067" endtime="20220516 18:27:54.068"/>
</kw>
<status status="PASS" starttime="20220516 18:27:53.451" endtime="20220516 18:27:54.068"/>
</kw>
<msg timestamp="20220516 18:27:54.069" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:27:53.451" endtime="20220516 18:27:54.069"/>
</kw>
<status status="PASS" starttime="20220516 18:27:53.450" endtime="20220516 18:27:54.070"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:27:54.074" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:27:54.691" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:27:54.691" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:27:54.072" endtime="20220516 18:27:54.691"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:27:54.693" level="INFO"/>
<status status="PASS" starttime="20220516 18:27:54.692" endtime="20220516 18:27:54.693"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:27:54.694" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:27:54.693" endtime="20220516 18:27:54.694"/>
</kw>
<status status="PASS" starttime="20220516 18:27:54.071" endtime="20220516 18:27:54.694"/>
</kw>
<msg timestamp="20220516 18:27:54.695" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:27:54.071" endtime="20220516 18:27:54.695"/>
</kw>
<status status="PASS" starttime="20220516 18:27:54.070" endtime="20220516 18:27:54.696"/>
</kw>
<status status="PASS" starttime="20220516 18:27:47.934" endtime="20220516 18:27:54.696"/>
</kw>
<status status="PASS" starttime="20220516 18:27:47.933" endtime="20220516 18:27:54.697"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220516 18:27:54.697" endtime="20220516 18:27:54.697"/>
</kw>
<status status="PASS" starttime="20220516 18:27:47.823" endtime="20220516 18:27:54.697"/>
</kw>
<status status="PASS" starttime="20220516 18:27:47.822" endtime="20220516 18:27:54.698"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${BUCKET}</var>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20220516 18:27:54.698" endtime="20220516 18:27:54.699"/>
</kw>
<msg timestamp="20220516 18:27:54.699" level="INFO">${BUCKET} = encrypted</msg>
<status status="PASS" starttime="20220516 18:27:54.698" endtime="20220516 18:27:54.699"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220516 18:27:54.699" level="INFO">${BUCKET} = encrypted</msg>
<status status="PASS" starttime="20220516 18:27:54.699" endtime="20220516 18:27:54.700"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220516 18:27:54.700" endtime="20220516 18:27:54.700"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create encrypted bucket" library="commonawslib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20220516 18:27:54.701" endtime="20220516 18:27:54.702"/>
</kw>
<kw name="Bucket Exists" library="shell">
<var>${exists}</var>
<arg>o3://${OM_SERVICE_ID}/s3v/encrypted</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:27:54.705" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://om/s3v/encrypted 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:27:59.229" level="INFO">${rc} = 255</msg>
<msg timestamp="20220516 18:27:59.229" level="INFO">${output} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20220516 18:27:54.703" endtime="20220516 18:27:59.229"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20220516 18:27:59.231" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:27:59.230" endtime="20220516 18:27:59.232"/>
</kw>
<msg timestamp="20220516 18:27:59.232" level="INFO">${exists} = False</msg>
<status status="PASS" starttime="20220516 18:27:54.702" endtime="20220516 18:27:59.232"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${exists}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20220516 18:27:59.233" endtime="20220516 18:27:59.233"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create -k ${KEY_NAME} o3://${OM_SERVICE_ID}/s3v/encrypted</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:27:59.237" level="INFO">Running command 'ozone sh bucket create -k key1 o3://om/s3v/encrypted 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:28:04.597" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:28:04.597" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:27:59.235" endtime="20220516 18:28:04.597"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:28:04.599" level="INFO"/>
<status status="PASS" starttime="20220516 18:28:04.598" endtime="20220516 18:28:04.599"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:28:04.600" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:28:04.599" endtime="20220516 18:28:04.600"/>
</kw>
<status status="PASS" starttime="20220516 18:27:59.234" endtime="20220516 18:28:04.600"/>
</kw>
<msg timestamp="20220516 18:28:04.600" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:27:59.234" endtime="20220516 18:28:04.601"/>
</kw>
<status status="PASS" starttime="20220516 18:27:59.233" endtime="20220516 18:28:04.601"/>
</kw>
<status status="PASS" starttime="20220516 18:27:54.701" endtime="20220516 18:28:04.601"/>
</kw>
<status status="PASS" starttime="20220516 18:27:54.700" endtime="20220516 18:28:04.601"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220516 18:28:04.602" endtime="20220516 18:28:04.602"/>
</kw>
<status status="PASS" starttime="20220516 18:27:24.128" endtime="20220516 18:28:04.602"/>
</kw>
<suite id="s1-s5-s1" name="Awss3" source="/opt/hadoop/smoketest/s3/awss3.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220516 18:28:04.620" level="INFO">${randStr} = 9277840810</msg>
<status status="PASS" starttime="20220516 18:28:04.619" endtime="20220516 18:28:04.620"/>
</kw>
<msg timestamp="20220516 18:28:04.620" level="INFO">${random} = ozone-test-9277840810</msg>
<status status="PASS" starttime="20220516 18:28:04.619" endtime="20220516 18:28:04.620"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220516 18:28:04.622" level="INFO">${PREFIX} = ozone-test-9277840810</msg>
<status status="PASS" starttime="20220516 18:28:04.620" endtime="20220516 18:28:04.622"/>
</kw>
<status status="PASS" starttime="20220516 18:28:04.618" endtime="20220516 18:28:04.622"/>
</kw>
<status status="PASS" starttime="20220516 18:28:04.618" endtime="20220516 18:28:04.623"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which apt-get</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:28:04.626" level="INFO">Running command 'which apt-get 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:28:04.628" level="INFO">${rc} = 1</msg>
<msg timestamp="20220516 18:28:04.629" level="INFO">${output} = which: no apt-get in (/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin)</msg>
<status status="PASS" starttime="20220516 18:28:04.623" endtime="20220516 18:28:04.629"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220516 18:28:04.629" endtime="20220516 18:28:04.630"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>yum --help</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:28:04.632" level="INFO">Running command 'yum --help 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:28:04.816" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:28:04.816" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
ovl: Error while doing RPMdb copy-up:
[Errno 13] Permission denied: '/var/lib/rpm/Obsoletename'
Usage: yum [options] COMMAND

List of Commands:

check          Check...</msg>
<status status="PASS" starttime="20220516 18:28:04.630" endtime="20220516 18:28:04.817"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Install aws cli s3 centos" library="commonawslib">
<kw name="Execute" library="os">
<arg>sudo -E yum install -y awscli</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:28:04.823" level="INFO">Running command 'sudo -E yum install -y awscli 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:28:05.421" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:28:05.421" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirror.fcix.net
 * epel: mirror.lshiy.com
 * extras: repo.ialab.dsu.edu
 * updates: mirrors.xmission.com
Package ...</msg>
<status status="PASS" starttime="20220516 18:28:04.820" endtime="20220516 18:28:05.421"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:28:05.422" level="INFO">Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirror.fcix.net
 * epel: mirror.lshiy.com
 * extras: repo.ialab.dsu.edu
 * updates: mirrors.xmission.com
Package awscli-1.14.28-5.el7_5.1.noarch already installed and latest version
Nothing to do</msg>
<status status="PASS" starttime="20220516 18:28:05.421" endtime="20220516 18:28:05.422"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:28:05.423" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:28:05.422" endtime="20220516 18:28:05.423"/>
</kw>
<status status="PASS" starttime="20220516 18:28:04.820" endtime="20220516 18:28:05.424"/>
</kw>
<msg timestamp="20220516 18:28:05.424" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:28:04.819" endtime="20220516 18:28:05.425"/>
</kw>
<status status="PASS" starttime="20220516 18:28:04.819" endtime="20220516 18:28:05.425"/>
</kw>
<status status="PASS" starttime="20220516 18:28:04.818" endtime="20220516 18:28:05.425"/>
</kw>
<status status="PASS" starttime="20220516 18:28:04.818" endtime="20220516 18:28:05.425"/>
</kw>
<status status="PASS" starttime="20220516 18:28:04.623" endtime="20220516 18:28:05.426"/>
</kw>
<status status="PASS" starttime="20220516 18:28:04.623" endtime="20220516 18:28:05.426"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:28:05.433" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:28:05.436" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:28:05.437" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20220516 18:28:05.430" endtime="20220516 18:28:05.437"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:28:05.438" level="INFO">s3g</msg>
<status status="PASS" starttime="20220516 18:28:05.437" endtime="20220516 18:28:05.438"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:28:05.439" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:28:05.438" endtime="20220516 18:28:05.439"/>
</kw>
<status status="PASS" starttime="20220516 18:28:05.430" endtime="20220516 18:28:05.439"/>
</kw>
<msg timestamp="20220516 18:28:05.439" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:28:05.430" endtime="20220516 18:28:05.440"/>
</kw>
<msg timestamp="20220516 18:28:05.440" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20220516 18:28:05.429" endtime="20220516 18:28:05.440"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220516 18:28:05.443" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220516 18:28:05.441" endtime="20220516 18:28:05.443"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:28:05.449" level="INFO">Running command 'kinit -k testuser/s3g@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:28:05.457" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:28:05.457" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:28:05.446" endtime="20220516 18:28:05.457"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:28:05.458" level="INFO"/>
<status status="PASS" starttime="20220516 18:28:05.458" endtime="20220516 18:28:05.459"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:28:05.459" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:28:05.459" endtime="20220516 18:28:05.459"/>
</kw>
<status status="PASS" starttime="20220516 18:28:05.445" endtime="20220516 18:28:05.460"/>
</kw>
<msg timestamp="20220516 18:28:05.460" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:28:05.445" endtime="20220516 18:28:05.461"/>
</kw>
<status status="PASS" starttime="20220516 18:28:05.444" endtime="20220516 18:28:05.461"/>
</kw>
<status status="PASS" starttime="20220516 18:28:05.444" endtime="20220516 18:28:05.461"/>
</kw>
<status status="PASS" starttime="20220516 18:28:05.428" endtime="20220516 18:28:05.461"/>
</kw>
<status status="PASS" starttime="20220516 18:28:05.428" endtime="20220516 18:28:05.461"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:28:05.466" level="INFO">Running command 'ozone s3 getsecret  2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:28:09.639" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:28:09.639" level="INFO">${output} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=f7769bc1a657ea184c2c54edea939f94012aba2596b4499d251cf819b952cada</msg>
<status status="PASS" starttime="20220516 18:28:05.464" endtime="20220516 18:28:09.639"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:28:09.640" level="INFO">awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=f7769bc1a657ea184c2c54edea939f94012aba2596b4499d251cf819b952cada</msg>
<status status="PASS" starttime="20220516 18:28:09.640" endtime="20220516 18:28:09.641"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:28:09.641" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:28:09.641" endtime="20220516 18:28:09.641"/>
</kw>
<status status="PASS" starttime="20220516 18:28:05.464" endtime="20220516 18:28:09.642"/>
</kw>
<msg timestamp="20220516 18:28:09.642" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:28:05.463" endtime="20220516 18:28:09.643"/>
</kw>
<msg timestamp="20220516 18:28:09.644" level="INFO">${result} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=f7769bc1a657ea184c2c54edea939f94012aba2596b4499d251cf819b952cada</msg>
<status status="PASS" starttime="20220516 18:28:05.463" endtime="20220516 18:28:09.644"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20220516 18:28:09.645" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20220516 18:28:09.644" endtime="20220516 18:28:09.645"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>sdsdasaasdasd</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20220516 18:28:09.645" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20220516 18:28:09.645" endtime="20220516 18:28:09.645"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20220516 18:28:09.646" level="INFO">${secret} = ['f7769bc1a657ea184c2c54edea939f94012aba2596b4499d251cf819b952cada']</msg>
<status status="PASS" starttime="20220516 18:28:09.646" endtime="20220516 18:28:09.646"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220516 18:28:09.648" level="INFO">${accessKey} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220516 18:28:09.647" endtime="20220516 18:28:09.648"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220516 18:28:09.649" level="INFO">${secret} = f7769bc1a657ea184c2c54edea939f94012aba2596b4499d251cf819b952cada</msg>
<status status="PASS" starttime="20220516 18:28:09.648" endtime="20220516 18:28:09.649"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:28:09.654" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:28:10.326" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:28:10.326" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:28:09.651" endtime="20220516 18:28:10.327"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:28:10.328" level="INFO"/>
<status status="PASS" starttime="20220516 18:28:10.327" endtime="20220516 18:28:10.328"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:28:10.329" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:28:10.328" endtime="20220516 18:28:10.329"/>
</kw>
<status status="PASS" starttime="20220516 18:28:09.651" endtime="20220516 18:28:10.329"/>
</kw>
<msg timestamp="20220516 18:28:10.329" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:28:09.650" endtime="20220516 18:28:10.330"/>
</kw>
<status status="PASS" starttime="20220516 18:28:09.650" endtime="20220516 18:28:10.331"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:28:10.335" level="INFO">Running command 'aws configure set aws_access_key_id testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:28:10.973" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:28:10.973" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:28:10.333" endtime="20220516 18:28:10.973"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:28:10.975" level="INFO"/>
<status status="PASS" starttime="20220516 18:28:10.974" endtime="20220516 18:28:10.975"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:28:10.975" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:28:10.975" endtime="20220516 18:28:10.976"/>
</kw>
<status status="PASS" starttime="20220516 18:28:10.332" endtime="20220516 18:28:10.976"/>
</kw>
<msg timestamp="20220516 18:28:10.976" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:28:10.331" endtime="20220516 18:28:10.977"/>
</kw>
<status status="PASS" starttime="20220516 18:28:10.331" endtime="20220516 18:28:10.977"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:28:10.982" level="INFO">Running command 'aws configure set aws_secret_access_key f7769bc1a657ea184c2c54edea939f94012aba2596b4499d251cf819b952cada 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:28:11.572" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:28:11.572" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:28:10.979" endtime="20220516 18:28:11.572"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:28:11.574" level="INFO"/>
<status status="PASS" starttime="20220516 18:28:11.573" endtime="20220516 18:28:11.574"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:28:11.575" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:28:11.574" endtime="20220516 18:28:11.575"/>
</kw>
<status status="PASS" starttime="20220516 18:28:10.979" endtime="20220516 18:28:11.576"/>
</kw>
<msg timestamp="20220516 18:28:11.576" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:28:10.978" endtime="20220516 18:28:11.576"/>
</kw>
<status status="PASS" starttime="20220516 18:28:10.977" endtime="20220516 18:28:11.577"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:28:11.581" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:28:12.192" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:28:12.192" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:28:11.579" endtime="20220516 18:28:12.192"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:28:12.193" level="INFO"/>
<status status="PASS" starttime="20220516 18:28:12.193" endtime="20220516 18:28:12.193"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:28:12.194" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:28:12.194" endtime="20220516 18:28:12.194"/>
</kw>
<status status="PASS" starttime="20220516 18:28:11.578" endtime="20220516 18:28:12.195"/>
</kw>
<msg timestamp="20220516 18:28:12.195" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:28:11.578" endtime="20220516 18:28:12.196"/>
</kw>
<status status="PASS" starttime="20220516 18:28:11.577" endtime="20220516 18:28:12.196"/>
</kw>
<status status="PASS" starttime="20220516 18:28:05.462" endtime="20220516 18:28:12.196"/>
</kw>
<status status="PASS" starttime="20220516 18:28:05.462" endtime="20220516 18:28:12.197"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220516 18:28:12.197" endtime="20220516 18:28:12.197"/>
</kw>
<status status="PASS" starttime="20220516 18:28:05.427" endtime="20220516 18:28:12.198"/>
</kw>
<status status="PASS" starttime="20220516 18:28:05.426" endtime="20220516 18:28:12.198"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${BUCKET}</var>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20220516 18:28:12.198" endtime="20220516 18:28:12.199"/>
</kw>
<msg timestamp="20220516 18:28:12.199" level="INFO">${BUCKET} = encrypted</msg>
<status status="PASS" starttime="20220516 18:28:12.198" endtime="20220516 18:28:12.199"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220516 18:28:12.200" level="INFO">${BUCKET} = encrypted</msg>
<status status="PASS" starttime="20220516 18:28:12.199" endtime="20220516 18:28:12.200"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220516 18:28:12.200" endtime="20220516 18:28:12.200"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create encrypted bucket" library="commonawslib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20220516 18:28:12.201" endtime="20220516 18:28:12.202"/>
</kw>
<kw name="Bucket Exists" library="shell">
<var>${exists}</var>
<arg>o3://${OM_SERVICE_ID}/s3v/encrypted</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:28:12.205" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://om/s3v/encrypted 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:28:17.368" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:28:17.368" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "s3v",
  "name" : "encrypted",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-05-16T18:28:0...</msg>
<status status="PASS" starttime="20220516 18:28:12.203" endtime="20220516 18:28:17.368"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20220516 18:28:17.369" endtime="20220516 18:28:17.370"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'VOLUME_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20220516 18:28:17.370" endtime="20220516 18:28:17.370"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'BUCKET_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20220516 18:28:17.370" endtime="20220516 18:28:17.371"/>
</kw>
<msg timestamp="20220516 18:28:17.371" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20220516 18:28:12.202" endtime="20220516 18:28:17.371"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${exists}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20220516 18:28:17.372" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:28:17.372" endtime="20220516 18:28:17.373"/>
</kw>
<status status="PASS" starttime="20220516 18:28:12.201" endtime="20220516 18:28:17.373"/>
</kw>
<status status="PASS" starttime="20220516 18:28:12.201" endtime="20220516 18:28:17.373"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220516 18:28:17.373" endtime="20220516 18:28:17.374"/>
</kw>
<status status="PASS" starttime="20220516 18:28:04.617" endtime="20220516 18:28:17.374"/>
</kw>
<test id="s1-s5-s1-t1" name="File upload and directory list">
<kw name="Execute" library="os">
<arg>date &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:28:17.379" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20220516 18:28:17.387" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:28:17.388" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:28:17.377" endtime="20220516 18:28:17.388"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:28:17.389" level="INFO"/>
<status status="PASS" starttime="20220516 18:28:17.388" endtime="20220516 18:28:17.389"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:28:17.391" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:28:17.389" endtime="20220516 18:28:17.391"/>
</kw>
<status status="PASS" starttime="20220516 18:28:17.376" endtime="20220516 18:28:17.392"/>
</kw>
<msg timestamp="20220516 18:28:17.392" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:28:17.376" endtime="20220516 18:28:17.392"/>
</kw>
<status status="PASS" starttime="20220516 18:28:17.375" endtime="20220516 18:28:17.393"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/testfile s3://${BUCKET}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:28:17.398" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/testfile s3://encrypted 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:33:17.375" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20220516 18:28:17.396" endtime="20220516 18:33:17.375"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20220516 18:33:17.376" endtime="20220516 18:33:17.376"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20220516 18:33:17.376" endtime="20220516 18:33:17.376"/>
</kw>
<status status="FAIL" starttime="20220516 18:28:17.395" endtime="20220516 18:33:17.377"/>
</kw>
<msg timestamp="20220516 18:33:17.377" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20220516 18:28:17.394" endtime="20220516 18:33:17.378"/>
</kw>
<status status="FAIL" starttime="20220516 18:28:17.393" endtime="20220516 18:33:17.378"/>
</kw>
<status status="FAIL" starttime="20220516 18:28:17.393" endtime="20220516 18:33:17.379"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>upload</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220516 18:33:17.379" endtime="20220516 18:33:17.379"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/testfile s3://${BUCKET}/dir1/dir2/file</arg>
<status status="NOT RUN" starttime="20220516 18:33:17.379" endtime="20220516 18:33:17.379"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>upload</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220516 18:33:17.380" endtime="20220516 18:33:17.380"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}</arg>
<status status="NOT RUN" starttime="20220516 18:33:17.380" endtime="20220516 18:33:17.380"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>testfile</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220516 18:33:17.380" endtime="20220516 18:33:17.380"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dir1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220516 18:33:17.380" endtime="20220516 18:33:17.381"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dir2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220516 18:33:17.381" endtime="20220516 18:33:17.381"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/dir1/</arg>
<status status="NOT RUN" starttime="20220516 18:33:17.381" endtime="20220516 18:33:17.381"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>testfile</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220516 18:33:17.381" endtime="20220516 18:33:17.381"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dir1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220516 18:33:17.381" endtime="20220516 18:33:17.382"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dir2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220516 18:33:17.382" endtime="20220516 18:33:17.382"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/dir1/dir2/file</arg>
<status status="NOT RUN" starttime="20220516 18:33:17.382" endtime="20220516 18:33:17.382"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>testfile</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220516 18:33:17.382" endtime="20220516 18:33:17.382"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dir1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220516 18:33:17.383" endtime="20220516 18:33:17.383"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>file</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220516 18:33:17.383" endtime="20220516 18:33:17.383"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20220516 18:28:17.374" endtime="20220516 18:33:17.383">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-s5-s1-t2" name="File upload with special chars">
<kw name="Execute" library="os">
<arg>date &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:33:17.391" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20220516 18:33:17.396" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:33:17.396" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:33:17.387" endtime="20220516 18:33:17.397"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:33:17.402" level="INFO"/>
<status status="PASS" starttime="20220516 18:33:17.400" endtime="20220516 18:33:17.402"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:33:17.403" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:33:17.402" endtime="20220516 18:33:17.403"/>
</kw>
<status status="PASS" starttime="20220516 18:33:17.387" endtime="20220516 18:33:17.403"/>
</kw>
<msg timestamp="20220516 18:33:17.403" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:33:17.386" endtime="20220516 18:33:17.404"/>
</kw>
<status status="PASS" starttime="20220516 18:33:17.385" endtime="20220516 18:33:17.404"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/testfile s3://${BUCKET}/specialchars/a+b</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:33:17.410" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/testfile s3://encrypted/specialchars/a+b 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:38:17.386" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20220516 18:33:17.407" endtime="20220516 18:38:17.386"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20220516 18:38:17.386" endtime="20220516 18:38:17.386"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20220516 18:38:17.387" endtime="20220516 18:38:17.387"/>
</kw>
<status status="FAIL" starttime="20220516 18:33:17.406" endtime="20220516 18:38:17.387"/>
</kw>
<msg timestamp="20220516 18:38:17.387" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20220516 18:33:17.406" endtime="20220516 18:38:17.388"/>
</kw>
<status status="FAIL" starttime="20220516 18:33:17.405" endtime="20220516 18:38:17.389"/>
</kw>
<status status="FAIL" starttime="20220516 18:33:17.404" endtime="20220516 18:38:17.389"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>upload</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220516 18:38:17.389" endtime="20220516 18:38:17.389"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/specialchars/</arg>
<status status="NOT RUN" starttime="20220516 18:38:17.389" endtime="20220516 18:38:17.390"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>'a b'</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220516 18:38:17.390" endtime="20220516 18:38:17.390"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>a+b</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220516 18:38:17.390" endtime="20220516 18:38:17.390"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20220516 18:33:17.384" endtime="20220516 18:38:17.390">Test timeout 5 minutes exceeded.</status>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="FAIL" starttime="20220516 18:28:04.603" endtime="20220516 18:38:17.395"/>
</suite>
<suite id="s1-s5-s2" name="Boto3" source="/opt/hadoop/smoketest/s3/boto3.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220516 18:38:17.434" level="INFO">${randStr} = 9940281693</msg>
<status status="PASS" starttime="20220516 18:38:17.433" endtime="20220516 18:38:17.434"/>
</kw>
<msg timestamp="20220516 18:38:17.435" level="INFO">${random} = ozone-test-9940281693</msg>
<status status="PASS" starttime="20220516 18:38:17.433" endtime="20220516 18:38:17.435"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220516 18:38:17.439" level="INFO">${PREFIX} = ozone-test-9940281693</msg>
<status status="PASS" starttime="20220516 18:38:17.435" endtime="20220516 18:38:17.439"/>
</kw>
<status status="PASS" starttime="20220516 18:38:17.432" endtime="20220516 18:38:17.439"/>
</kw>
<status status="PASS" starttime="20220516 18:38:17.431" endtime="20220516 18:38:17.439"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which apt-get</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:38:17.445" level="INFO">Running command 'which apt-get 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:38:17.448" level="INFO">${rc} = 1</msg>
<msg timestamp="20220516 18:38:17.448" level="INFO">${output} = which: no apt-get in (/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin)</msg>
<status status="PASS" starttime="20220516 18:38:17.440" endtime="20220516 18:38:17.449"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220516 18:38:17.450" endtime="20220516 18:38:17.450"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>yum --help</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:38:17.453" level="INFO">Running command 'yum --help 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:38:17.645" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:38:17.646" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
ovl: Error while doing RPMdb copy-up:
[Errno 13] Permission denied: '/var/lib/rpm/Obsoletename'
Usage: yum [options] COMMAND

List of Commands:

check          Check...</msg>
<status status="PASS" starttime="20220516 18:38:17.451" endtime="20220516 18:38:17.646"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Install aws cli s3 centos" library="commonawslib">
<kw name="Execute" library="os">
<arg>sudo -E yum install -y awscli</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:38:17.654" level="INFO">Running command 'sudo -E yum install -y awscli 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:38:18.230" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:38:18.230" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirror.fcix.net
 * epel: mirror.lshiy.com
 * extras: repo.ialab.dsu.edu
 * updates: mirrors.xmission.com
Package ...</msg>
<status status="PASS" starttime="20220516 18:38:17.650" endtime="20220516 18:38:18.230"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:38:18.232" level="INFO">Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirror.fcix.net
 * epel: mirror.lshiy.com
 * extras: repo.ialab.dsu.edu
 * updates: mirrors.xmission.com
Package awscli-1.14.28-5.el7_5.1.noarch already installed and latest version
Nothing to do</msg>
<status status="PASS" starttime="20220516 18:38:18.231" endtime="20220516 18:38:18.233"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:38:18.233" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:38:18.233" endtime="20220516 18:38:18.234"/>
</kw>
<status status="PASS" starttime="20220516 18:38:17.649" endtime="20220516 18:38:18.235"/>
</kw>
<msg timestamp="20220516 18:38:18.235" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:38:17.648" endtime="20220516 18:38:18.237"/>
</kw>
<status status="PASS" starttime="20220516 18:38:17.648" endtime="20220516 18:38:18.237"/>
</kw>
<status status="PASS" starttime="20220516 18:38:17.647" endtime="20220516 18:38:18.238"/>
</kw>
<status status="PASS" starttime="20220516 18:38:17.646" endtime="20220516 18:38:18.238"/>
</kw>
<status status="PASS" starttime="20220516 18:38:17.440" endtime="20220516 18:38:18.238"/>
</kw>
<status status="PASS" starttime="20220516 18:38:17.439" endtime="20220516 18:38:18.238"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:38:18.248" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:38:18.253" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:38:18.253" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20220516 18:38:18.244" endtime="20220516 18:38:18.254"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:38:18.256" level="INFO">s3g</msg>
<status status="PASS" starttime="20220516 18:38:18.255" endtime="20220516 18:38:18.256"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:38:18.257" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:38:18.256" endtime="20220516 18:38:18.258"/>
</kw>
<status status="PASS" starttime="20220516 18:38:18.243" endtime="20220516 18:38:18.258"/>
</kw>
<msg timestamp="20220516 18:38:18.259" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:38:18.243" endtime="20220516 18:38:18.259"/>
</kw>
<msg timestamp="20220516 18:38:18.260" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20220516 18:38:18.242" endtime="20220516 18:38:18.260"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220516 18:38:18.264" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220516 18:38:18.260" endtime="20220516 18:38:18.264"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:38:18.272" level="INFO">Running command 'kinit -k testuser/s3g@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:38:18.348" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:38:18.348" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:38:18.269" endtime="20220516 18:38:18.348"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:38:18.349" level="INFO"/>
<status status="PASS" starttime="20220516 18:38:18.348" endtime="20220516 18:38:18.349"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:38:18.350" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:38:18.349" endtime="20220516 18:38:18.350"/>
</kw>
<status status="PASS" starttime="20220516 18:38:18.268" endtime="20220516 18:38:18.350"/>
</kw>
<msg timestamp="20220516 18:38:18.351" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:38:18.267" endtime="20220516 18:38:18.351"/>
</kw>
<status status="PASS" starttime="20220516 18:38:18.266" endtime="20220516 18:38:18.352"/>
</kw>
<status status="PASS" starttime="20220516 18:38:18.265" endtime="20220516 18:38:18.352"/>
</kw>
<status status="PASS" starttime="20220516 18:38:18.241" endtime="20220516 18:38:18.352"/>
</kw>
<status status="PASS" starttime="20220516 18:38:18.240" endtime="20220516 18:38:18.352"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:38:18.357" level="INFO">Running command 'ozone s3 getsecret  2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:38:26.083" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:38:26.083" level="INFO">${output} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=f7769bc1a657ea184c2c54edea939f94012aba2596b4499d251cf819b952cada</msg>
<status status="PASS" starttime="20220516 18:38:18.355" endtime="20220516 18:38:26.083"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:38:26.084" level="INFO">awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=f7769bc1a657ea184c2c54edea939f94012aba2596b4499d251cf819b952cada</msg>
<status status="PASS" starttime="20220516 18:38:26.084" endtime="20220516 18:38:26.084"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:38:26.085" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:38:26.085" endtime="20220516 18:38:26.085"/>
</kw>
<status status="PASS" starttime="20220516 18:38:18.354" endtime="20220516 18:38:26.086"/>
</kw>
<msg timestamp="20220516 18:38:26.086" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:38:18.354" endtime="20220516 18:38:26.087"/>
</kw>
<msg timestamp="20220516 18:38:26.087" level="INFO">${result} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=f7769bc1a657ea184c2c54edea939f94012aba2596b4499d251cf819b952cada</msg>
<status status="PASS" starttime="20220516 18:38:18.353" endtime="20220516 18:38:26.088"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20220516 18:38:26.088" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20220516 18:38:26.088" endtime="20220516 18:38:26.088"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>sdsdasaasdasd</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20220516 18:38:26.089" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20220516 18:38:26.089" endtime="20220516 18:38:26.089"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20220516 18:38:26.090" level="INFO">${secret} = ['f7769bc1a657ea184c2c54edea939f94012aba2596b4499d251cf819b952cada']</msg>
<status status="PASS" starttime="20220516 18:38:26.089" endtime="20220516 18:38:26.090"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220516 18:38:26.092" level="INFO">${accessKey} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220516 18:38:26.090" endtime="20220516 18:38:26.092"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220516 18:38:26.094" level="INFO">${secret} = f7769bc1a657ea184c2c54edea939f94012aba2596b4499d251cf819b952cada</msg>
<status status="PASS" starttime="20220516 18:38:26.092" endtime="20220516 18:38:26.094"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:38:26.101" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:38:26.841" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:38:26.841" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:38:26.098" endtime="20220516 18:38:26.841"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:38:26.843" level="INFO"/>
<status status="PASS" starttime="20220516 18:38:26.842" endtime="20220516 18:38:26.843"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:38:26.845" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:38:26.844" endtime="20220516 18:38:26.845"/>
</kw>
<status status="PASS" starttime="20220516 18:38:26.096" endtime="20220516 18:38:26.846"/>
</kw>
<msg timestamp="20220516 18:38:26.846" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:38:26.095" endtime="20220516 18:38:26.847"/>
</kw>
<status status="PASS" starttime="20220516 18:38:26.094" endtime="20220516 18:38:26.848"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:38:26.855" level="INFO">Running command 'aws configure set aws_access_key_id testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:38:27.615" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:38:27.615" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:38:26.852" endtime="20220516 18:38:27.616"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:38:27.617" level="INFO"/>
<status status="PASS" starttime="20220516 18:38:27.616" endtime="20220516 18:38:27.618"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:38:27.619" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:38:27.619" endtime="20220516 18:38:27.621"/>
</kw>
<status status="PASS" starttime="20220516 18:38:26.851" endtime="20220516 18:38:27.622"/>
</kw>
<msg timestamp="20220516 18:38:27.622" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:38:26.851" endtime="20220516 18:38:27.623"/>
</kw>
<status status="PASS" starttime="20220516 18:38:26.848" endtime="20220516 18:38:27.623"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:38:27.627" level="INFO">Running command 'aws configure set aws_secret_access_key f7769bc1a657ea184c2c54edea939f94012aba2596b4499d251cf819b952cada 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:38:28.340" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:38:28.340" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:38:27.625" endtime="20220516 18:38:28.340"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:38:28.342" level="INFO"/>
<status status="PASS" starttime="20220516 18:38:28.341" endtime="20220516 18:38:28.343"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:38:28.344" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:38:28.343" endtime="20220516 18:38:28.344"/>
</kw>
<status status="PASS" starttime="20220516 18:38:27.624" endtime="20220516 18:38:28.345"/>
</kw>
<msg timestamp="20220516 18:38:28.345" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:38:27.624" endtime="20220516 18:38:28.346"/>
</kw>
<status status="PASS" starttime="20220516 18:38:27.623" endtime="20220516 18:38:28.347"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:38:28.352" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:38:29.007" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:38:29.007" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:38:28.350" endtime="20220516 18:38:29.007"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:38:29.009" level="INFO"/>
<status status="PASS" starttime="20220516 18:38:29.008" endtime="20220516 18:38:29.010"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:38:29.010" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:38:29.010" endtime="20220516 18:38:29.011"/>
</kw>
<status status="PASS" starttime="20220516 18:38:28.349" endtime="20220516 18:38:29.011"/>
</kw>
<msg timestamp="20220516 18:38:29.011" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:38:28.348" endtime="20220516 18:38:29.012"/>
</kw>
<status status="PASS" starttime="20220516 18:38:28.348" endtime="20220516 18:38:29.012"/>
</kw>
<status status="PASS" starttime="20220516 18:38:18.353" endtime="20220516 18:38:29.012"/>
</kw>
<status status="PASS" starttime="20220516 18:38:18.352" endtime="20220516 18:38:29.013"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220516 18:38:29.013" endtime="20220516 18:38:29.013"/>
</kw>
<status status="PASS" starttime="20220516 18:38:18.239" endtime="20220516 18:38:29.014"/>
</kw>
<status status="PASS" starttime="20220516 18:38:18.239" endtime="20220516 18:38:29.014"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${BUCKET}</var>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20220516 18:38:29.015" endtime="20220516 18:38:29.016"/>
</kw>
<msg timestamp="20220516 18:38:29.016" level="INFO">${BUCKET} = encrypted</msg>
<status status="PASS" starttime="20220516 18:38:29.014" endtime="20220516 18:38:29.016"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220516 18:38:29.018" level="INFO">${BUCKET} = encrypted</msg>
<status status="PASS" starttime="20220516 18:38:29.017" endtime="20220516 18:38:29.018"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220516 18:38:29.019" endtime="20220516 18:38:29.020"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create encrypted bucket" library="commonawslib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20220516 18:38:29.022" endtime="20220516 18:38:29.023"/>
</kw>
<kw name="Bucket Exists" library="shell">
<var>${exists}</var>
<arg>o3://${OM_SERVICE_ID}/s3v/encrypted</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:38:29.028" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://om/s3v/encrypted 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:38:37.939" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:38:37.939" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "s3v",
  "name" : "encrypted",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 174,
  "usedNamespace" : 2,
  "creationTime" : "2022-05-16T18:28...</msg>
<status status="PASS" starttime="20220516 18:38:29.024" endtime="20220516 18:38:37.939"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20220516 18:38:37.941" endtime="20220516 18:38:37.942"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'VOLUME_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20220516 18:38:37.943" endtime="20220516 18:38:37.943"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'BUCKET_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20220516 18:38:37.943" endtime="20220516 18:38:37.944"/>
</kw>
<msg timestamp="20220516 18:38:37.944" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20220516 18:38:29.023" endtime="20220516 18:38:37.944"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${exists}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20220516 18:38:37.945" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:38:37.945" endtime="20220516 18:38:37.947"/>
</kw>
<status status="PASS" starttime="20220516 18:38:29.021" endtime="20220516 18:38:37.947"/>
</kw>
<status status="PASS" starttime="20220516 18:38:29.020" endtime="20220516 18:38:37.947"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220516 18:38:37.948" endtime="20220516 18:38:37.949"/>
</kw>
<status status="PASS" starttime="20220516 18:38:17.431" endtime="20220516 18:38:37.949"/>
</kw>
<test id="s1-s5-s2-t1" name="Boto3 Client Test">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>python3 ${S3_SMOKETEST_DIR}/boto_client.py ${ENDPOINT_URL} ${BUCKET}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:38:37.960" level="INFO">Running command 'python3 /opt/hadoop/smoketest/s3/boto_client.py http://s3g:9878 encrypted 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:49:06.727" level="INFO">${rc} = 1</msg>
<msg timestamp="20220516 18:49:06.727" level="INFO">${output} = test_create_bucket (__main__.TestBotoClient) ... ERROR
test_list_bucket (__main__.TestBotoClient) ... ok
test_head_bucket (__main__.TestBotoClient) ... ok
test_bucket_delete (__main__.TestBotoClient) ...</msg>
<status status="PASS" starttime="20220516 18:38:37.956" endtime="20220516 18:49:06.727"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:49:06.729" level="INFO">test_create_bucket (__main__.TestBotoClient) ... ERROR
test_list_bucket (__main__.TestBotoClient) ... ok
test_head_bucket (__main__.TestBotoClient) ... ok
test_bucket_delete (__main__.TestBotoClient) ... ok
test_upload_file (__main__.TestBotoClient) ... ERROR
test_download_file (__main__.TestBotoClient) ... ERROR:root:An error occurred (404) when calling the HeadObject operation: Not Found
ok
test_delete_objects (__main__.TestBotoClient) ... ok
test_head_object (__main__.TestBotoClient) ... ERROR:root:An error occurred (404) when calling the HeadObject operation: Not Found
ok
test_multi_uploads (__main__.TestBotoClient) ... ERROR:root:An error occurred (500) when calling the UploadPartCopy operation (reached max retries: 4): Internal Server Error
ok

======================================================================
ERROR: test_create_bucket (__main__.TestBotoClient)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/usr/local/lib/python3.6/site-packages/urllib3/connectionpool.py", line 449, in _make_request
    six.raise_from(e, None)
  File "&lt;string&gt;", line 3, in raise_from
  File "/usr/local/lib/python3.6/site-packages/urllib3/connectionpool.py", line 444, in _make_request
    httplib_response = conn.getresponse()
  File "/usr/lib64/python3.6/http/client.py", line 1346, in getresponse
    response.begin()
  File "/usr/lib64/python3.6/http/client.py", line 307, in begin
    version, status, reason = self._read_status()
  File "/usr/lib64/python3.6/http/client.py", line 268, in _read_status
    line = str(self.fp.readline(_MAXLINE + 1), "iso-8859-1")
  File "/usr/lib64/python3.6/socket.py", line 586, in readinto
    return self._sock.recv_into(b)
socket.timeout: timed out

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.6/site-packages/botocore/httpsession.py", line 414, in send
    chunked=self._chunked(request.headers),
  File "/usr/local/lib/python3.6/site-packages/urllib3/connectionpool.py", line 786, in urlopen
    method, url, error=e, _pool=self, _stacktrace=sys.exc_info()[2]
  File "/usr/local/lib/python3.6/site-packages/urllib3/util/retry.py", line 525, in increment
    raise six.reraise(type(error), error, _stacktrace)
  File "/usr/local/lib/python3.6/site-packages/urllib3/packages/six.py", line 770, in reraise
    raise value
  File "/usr/local/lib/python3.6/site-packages/urllib3/connectionpool.py", line 710, in urlopen
    chunked=chunked,
  File "/usr/local/lib/python3.6/site-packages/urllib3/connectionpool.py", line 451, in _make_request
    self._raise_timeout(err=e, url=url, timeout_value=read_timeout)
  File "/usr/local/lib/python3.6/site-packages/urllib3/connectionpool.py", line 341, in _raise_timeout
    self, url, "Read timed out. (read timeout=%s)" % timeout_value
urllib3.exceptions.ReadTimeoutError: AWSHTTPConnectionPool(host='s3g', port=9878): Read timed out. (read timeout=60)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/opt/hadoop/smoketest/s3/boto_client.py", line 62, in setUp
    response = self.s3_client.upload_file("README.md", str(self.target_bucket), "README3.md")
  File "/usr/local/lib/python3.6/site-packages/boto3/s3/inject.py", line 148, in upload_file
    callback=Callback,
  File "/usr/local/lib/python3.6/site-packages/boto3/s3/transfer.py", line 288, in upload_file
    future.result()
  File "/usr/local/lib/python3.6/site-packages/s3transfer/futures.py", line 103, in result
    return self._coordinator.result()
  File "/usr/local/lib/python3.6/site-packages/s3transfer/futures.py", line 266, in result
    raise self._exception
  File "/usr/local/lib/python3.6/site-packages/s3transfer/tasks.py", line 139, in __call__
    return self._execute_main(kwargs)
  File "/usr/local/lib/python3.6/site-packages/s3transfer/tasks.py", line 162, in _execute_main
    return_value = self._main(**kwargs)
  File "/usr/local/lib/python3.6/site-packages/s3transfer/upload.py", line 758, in _main
    client.put_object(Bucket=bucket, Key=key, Body=body, **extra_args)
  File "/usr/local/lib/python3.6/site-packages/botocore/client.py", line 395, in _api_call
    return self._make_api_call(operation_name, kwargs)
  File "/usr/local/lib/python3.6/site-packages/botocore/client.py", line 712, in _make_api_call
    operation_model, request_dict, request_context)
  File "/usr/local/lib/python3.6/site-packages/botocore/client.py", line 731, in _make_request
    return self._endpoint.make_request(operation_model, request_dict)
  File "/usr/local/lib/python3.6/site-packages/botocore/endpoint.py", line 107, in make_request
    return self._send_request(request_dict, operation_model)
  File "/usr/local/lib/python3.6/site-packages/botocore/endpoint.py", line 184, in _send_request
    success_response, exception):
  File "/usr/local/lib/python3.6/site-packages/botocore/endpoint.py", line 308, in _needs_retry
    caught_exception=caught_exception, request_dict=request_dict)
  File "/usr/local/lib/python3.6/site-packages/botocore/hooks.py", line 357, in emit
    return self._emitter.emit(aliased_event_name, **kwargs)
  File "/usr/local/lib/python3.6/site-packages/botocore/hooks.py", line 228, in emit
    return self._emit(event_name, kwargs)
  File "/usr/local/lib/python3.6/site-packages/botocore/hooks.py", line 211, in _emit
    response = handler(**kwargs)
  File "/usr/local/lib/python3.6/site-packages/botocore/retryhandler.py", line 192, in __call__
    if self._checker(**checker_kwargs):
  File "/usr/local/lib/python3.6/site-packages/botocore/retryhandler.py", line 266, in __call__
    caught_exception)
  File "/usr/local/lib/python3.6/site-packages/botocore/retryhandler.py", line 292, in _should_retry
    return self._checker(attempt_number, response, caught_exception)
  File "/usr/local/lib/python3.6/site-packages/botocore/retryhandler.py", line 332, in __call__
    caught_exception)
  File "/usr/local/lib/python3.6/site-packages/botocore/retryhandler.py", line 232, in __call__
    attempt_number, caught_exception)
  File "/usr/local/lib/python3.6/site-packages/botocore/retryhandler.py", line 374, in _check_caught_exception
    raise caught_exception
  File "/usr/local/lib/python3.6/site-packages/botocore/endpoint.py", line 249, in _do_get_response
    http_response = self._send(request)
  File "/usr/local/lib/python3.6/site-packages/botocore/endpoint.py", line 321, in _send
    return self.http_session.send(request)
  File "/usr/local/lib/python3.6/site-packages/botocore/httpsession.py", line 440, in send
    raise ReadTimeoutError(endpoint_url=request.url, error=e)
botocore.exceptions.ReadTimeoutError: Read timeout on endpoint URL: "http://s3g:9878/encrypted/README3.md"

======================================================================
ERROR: test_upload_file (__main__.TestBotoClient)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/usr/local/lib/python3.6/site-packages/urllib3/connectionpool.py", line 449, in _make_request
    six.raise_from(e, None)
  File "&lt;string&gt;", line 3, in raise_from
  File "/usr/local/lib/python3.6/site-packages/urllib3/connectionpool.py", line 444, in _make_request
    httplib_response = conn.getresponse()
  File "/usr/lib64/python3.6/http/client.py", line 1346, in getresponse
    response.begin()
  File "/usr/lib64/python3.6/http/client.py", line 307, in begin
    version, status, reason = self._read_status()
  File "/usr/lib64/python3.6/http/client.py", line 268, in _read_status
    line = str(self.fp.readline(_MAXLINE + 1), "iso-8859-1")
  File "/usr/lib64/python3.6/socket.py", line 586, in readinto
    return self._sock.recv_into(b)
socket.timeout: timed out

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.6/site-packages/botocore/httpsession.py", line 414, in send
    chunked=self._chunked(request.headers),
  File "/usr/local/lib/python3.6/site-packages/urllib3/connectionpool.py", line 786, in urlopen
    method, url, error=e, _pool=self, _stacktrace=sys.exc_info()[2]
  File "/usr/local/lib/python3.6/site-packages/urllib3/util/retry.py", line 525, in increment
    raise six.reraise(type(error), error, _stacktrace)
  File "/usr/local/lib/python3.6/site-packages/urllib3/packages/six.py", line 770, in reraise
    raise value
  File "/usr/local/lib/python3.6/site-packages/urllib3/connectionpool.py", line 710, in urlopen
    chunked=chunked,
  File "/usr/local/lib/python3.6/site-packages/urllib3/connectionpool.py", line 451, in _make_request
    self._raise_timeout(err=e, url=url, timeout_value=read_timeout)
  File "/usr/local/lib/python3.6/site-packages/urllib3/connectionpool.py", line 341, in _raise_timeout
    self, url, "Read timed out. (read timeout=%s)" % timeout_value
urllib3.exceptions.ReadTimeoutError: AWSHTTPConnectionPool(host='s3g', port=9878): Read timed out. (read timeout=60)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/opt/hadoop/smoketest/s3/boto_client.py", line 135, in test_upload_file
    self.s3.Bucket(str(self.target_bucket)).upload_file('./README.md','README1.md')
  File "/usr/local/lib/python3.6/site-packages/boto3/s3/inject.py", line 239, in bucket_upload_file
    Config=Config,
  File "/usr/local/lib/python3.6/site-packages/boto3/s3/inject.py", line 148, in upload_file
    callback=Callback,
  File "/usr/local/lib/python3.6/site-packages/boto3/s3/transfer.py", line 288, in upload_file
    future.result()
  File "/usr/local/lib/python3.6/site-packages/s3transfer/futures.py", line 103, in result
    return self._coordinator.result()
  File "/usr/local/lib/python3.6/site-packages/s3transfer/futures.py", line 266, in result
    raise self._exception
  File "/usr/local/lib/python3.6/site-packages/s3transfer/tasks.py", line 139, in __call__
    return self._execute_main(kwargs)
  File "/usr/local/lib/python3.6/site-packages/s3transfer/tasks.py", line 162, in _execute_main
    return_value = self._main(**kwargs)
  File "/usr/local/lib/python3.6/site-packages/s3transfer/upload.py", line 758, in _main
    client.put_object(Bucket=bucket, Key=key, Body=body, **extra_args)
  File "/usr/local/lib/python3.6/site-packages/botocore/client.py", line 395, in _api_call
    return self._make_api_call(operation_name, kwargs)
  File "/usr/local/lib/python3.6/site-packages/botocore/client.py", line 712, in _make_api_call
    operation_model, request_dict, request_context)
  File "/usr/local/lib/python3.6/site-packages/botocore/client.py", line 731, in _make_request
    return self._endpoint.make_request(operation_model, request_dict)
  File "/usr/local/lib/python3.6/site-packages/botocore/endpoint.py", line 107, in make_request
    return self._send_request(request_dict, operation_model)
  File "/usr/local/lib/python3.6/site-packages/botocore/endpoint.py", line 184, in _send_request
    success_response, exception):
  File "/usr/local/lib/python3.6/site-packages/botocore/endpoint.py", line 308, in _needs_retry
    caught_exception=caught_exception, request_dict=request_dict)
  File "/usr/local/lib/python3.6/site-packages/botocore/hooks.py", line 357, in emit
    return self._emitter.emit(aliased_event_name, **kwargs)
  File "/usr/local/lib/python3.6/site-packages/botocore/hooks.py", line 228, in emit
    return self._emit(event_name, kwargs)
  File "/usr/local/lib/python3.6/site-packages/botocore/hooks.py", line 211, in _emit
    response = handler(**kwargs)
  File "/usr/local/lib/python3.6/site-packages/botocore/retryhandler.py", line 192, in __call__
    if self._checker(**checker_kwargs):
  File "/usr/local/lib/python3.6/site-packages/botocore/retryhandler.py", line 266, in __call__
    caught_exception)
  File "/usr/local/lib/python3.6/site-packages/botocore/retryhandler.py", line 292, in _should_retry
    return self._checker(attempt_number, response, caught_exception)
  File "/usr/local/lib/python3.6/site-packages/botocore/retryhandler.py", line 332, in __call__
    caught_exception)
  File "/usr/local/lib/python3.6/site-packages/botocore/retryhandler.py", line 232, in __call__
    attempt_number, caught_exception)
  File "/usr/local/lib/python3.6/site-packages/botocore/retryhandler.py", line 374, in _check_caught_exception
    raise caught_exception
  File "/usr/local/lib/python3.6/site-packages/botocore/endpoint.py", line 249, in _do_get_response
    http_response = self._send(request)
  File "/usr/local/lib/python3.6/site-packages/botocore/endpoint.py", line 321, in _send
    return self.http_session.send(request)
  File "/usr/local/lib/python3.6/site-packages/botocore/httpsession.py", line 440, in send
    raise ReadTimeoutError(endpoint_url=request.url, error=e)
botocore.exceptions.ReadTimeoutError: Read timeout on endpoint URL: "http://s3g:9878/encrypted/README1.md"

----------------------------------------------------------------------
Ran 9 tests in 628.350s

FAILED (errors=2)
{'ResponseMetadata': {'RequestId': '32d31f85-cd96-4da3-84bb-7996ffe47f65', 'HostId': '0KLU9xibcXLD1', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Mon, 16 May 2022 18:38:38 GMT, Mon, 16 May 2022 18:38:38 GMT', 'cache-control': 'no-cache', 'expires': 'Mon, 16 May 2022 18:38:38 GMT', 'pragma': 'no-cache', 'content-type': 'text/plain;charset=utf-8', 'x-content-type-options': 'nosniff', 'x-frame-options': 'SAMEORIGIN', 'x-xss-protection': '1; mode=block', 'location': 'http://s3g:9878/ozone-test-qrnfwrfhfx', 'server': 'Ozone', 'x-amz-id-2': '0KLU9xibcXLD1', 'x-amz-request-id': '32d31f85-cd96-4da3-84bb-7996ffe47f65', 'content-length': '0'}, 'RetryAttempts': 0}, 'Location': 'http://s3g:9878/ozone-test-qrnfwrfhfx'}
{'ResponseMetadata': {'RequestId': '395213bf-eae5-4e0b-b18f-4295028ad7b3', 'HostId': '7D5CuMGjm', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Mon, 16 May 2022 18:43:47 GMT, Mon, 16 May 2022 18:43:47 GMT', 'cache-control': 'no-cache', 'expires': 'Mon, 16 May 2022 18:43:47 GMT', 'pragma': 'no-cache', 'content-type': 'application/xml', 'x-content-type-options': 'nosniff', 'x-frame-options': 'SAMEORIGIN', 'x-xss-protection': '1; mode=block', 'server': 'Ozone', 'x-amz-id-2': '7D5CuMGjm', 'x-amz-request-id': '395213bf-eae5-4e0b-b18f-4295028ad7b3', 'content-length': '575'}, 'RetryAttempts': 0}, 'Buckets': [{'Name': 'bucket-ozone-test-6636182919', 'CreationDate': datetime.datetime(2022, 5, 16, 18, 16, 8, 119000, tzinfo=tzlocal())}, {'Name': 'bucket-test123', 'CreationDate': datetime.datetime(2022, 5, 16, 18, 16, 8, 964000, tzinfo=tzlocal())}, {'Name': 'encrypted', 'CreationDate': datetime.datetime(2022, 5, 16, 18, 28, 4, 337000, tzinfo=tzlocal())}, {'Name': 'ozone-test-qrnfwrfhfx', 'CreationDate': datetime.datetime(2022, 5, 16, 18, 38, 38, 605000, tzinfo=tzlocal())}]}
{'ResponseMetadata': {'RequestId': '1040924c-ff49-4eca-a5ae-16b2b31b1d25', 'HostId': 'VwM5KSlQp', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Mon, 16 May 2022 18:43:47 GMT, Mon, 16 May 2022 18:43:47 GMT', 'cache-control': 'no-cache', 'expires': 'Mon, 16 May 2022 18:43:47 GMT', 'pragma': 'no-cache', 'content-type': 'application/xml', 'x-content-type-options': 'nosniff', 'x-frame-options': 'SAMEORIGIN', 'x-xss-protection': '1; mode=block', 'server': 'Ozone', 'x-amz-id-2': 'VwM5KSlQp', 'x-amz-request-id': '1040924c-ff49-4eca-a5ae-16b2b31b1d25', 'content-length': '0'}, 'RetryAttempts': 0}}
{'ResponseMetadata': {'RequestId': '802f18bb-84e2-43d0-be22-f4f0114b6c11', 'HostId': 'oqjfaQ6hGqHV', 'HTTPStatusCode': 204, 'HTTPHeaders': {'date': 'Mon, 16 May 2022 18:43:47 GMT, Mon, 16 May 2022 18:43:47 GMT', 'cache-control': 'no-cache', 'expires': 'Mon, 16 May 2022 18:43:47 GMT', 'pragma': 'no-cache', 'content-type': 'text/plain;charset=utf-8', 'x-content-type-options': 'nosniff', 'x-frame-options': 'SAMEORIGIN', 'x-xss-protection': '1; mode=block', 'server': 'Ozone', 'x-amz-id-2': 'oqjfaQ6hGqHV', 'x-amz-request-id': '802f18bb-84e2-43d0-be22-f4f0114b6c11'}, 'RetryAttempts': 0}}
An error occurred (404) when calling the HeadObject operation: Not Found
{'ResponseMetadata': {'RequestId': '53817fa6-9ad4-478c-930e-6bfd96bf3445', 'HostId': 'ODrQtGww8L', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Mon, 16 May 2022 18:48:54 GMT, Mon, 16 May 2022 18:48:54 GMT', 'cache-control': 'no-cache', 'expires': 'Mon, 16 May 2022 18:48:54 GMT', 'pragma': 'no-cache', 'content-type': 'application/xml', 'x-content-type-options': 'nosniff', 'x-frame-options': 'SAMEORIGIN', 'x-xss-protection': '1; mode=block', 'server': 'Ozone', 'x-amz-id-2': 'ODrQtGww8L', 'x-amz-request-id': '53817fa6-9ad4-478c-930e-6bfd96bf3445', 'content-length': '212'}, 'RetryAttempts': 0}, 'Deleted': [{'Key': 'README4.md'}, {'Key': 'README3.md'}]}
An error occurred (404) when calling the HeadObject operation: Not Found
{'ResponseMetadata': {'RequestId': 'a27c8761-2516-498c-a528-a348204ad7fd', 'HostId': 'JXV4UvRB', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Mon, 16 May 2022 18:48:55 GMT, Mon, 16 May 2022 18:48:55 GMT', 'cache-control': 'no-cache', 'expires': 'Mon, 16 May 2022 18:48:55 GMT', 'pragma': 'no-cache', 'content-type': 'application/xml', 'x-content-type-options': 'nosniff', 'x-frame-options': 'SAMEORIGIN', 'x-xss-protection': '1; mode=block', 'server': 'Ozone', 'x-amz-id-2': 'JXV4UvRB', 'x-amz-request-id': 'a27c8761-2516-498c-a528-a348204ad7fd', 'content-length': '289'}, 'RetryAttempts': 0}, 'Bucket': 'encrypted', 'Key': 'ysaqekvxqa', 'UploadId': '29e7c502-95c7-4229-906a-2738b0c2549d-108313112426315839'}
An error occurred (500) when calling the UploadPartCopy operation (reached max retries: 4): Internal Server Error
Boto3 Client Test FAILED!</msg>
<status status="PASS" starttime="20220516 18:49:06.728" endtime="20220516 18:49:06.729"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:49:06.730" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20220516 18:49:06.731" level="FAIL">1 != 0</msg>
<status status="FAIL" starttime="20220516 18:49:06.729" endtime="20220516 18:49:06.731"/>
</kw>
<status status="FAIL" starttime="20220516 18:38:37.956" endtime="20220516 18:49:06.732"/>
</kw>
<msg timestamp="20220516 18:49:06.732" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20220516 18:38:37.955" endtime="20220516 18:49:06.733"/>
</kw>
<status status="FAIL" starttime="20220516 18:38:37.952" endtime="20220516 18:49:06.733"/>
</kw>
<timeout value="15 minutes"/>
<status status="FAIL" starttime="20220516 18:38:37.950" endtime="20220516 18:49:06.734">1 != 0</status>
</test>
<doc>S3 gateway test with Boto3 Client</doc>
<status status="FAIL" starttime="20220516 18:38:17.398" endtime="20220516 18:49:06.735"/>
</suite>
<suite id="s1-s5-s3" name="Bucketcreate" source="/opt/hadoop/smoketest/s3/bucketcreate.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220516 18:49:06.755" level="INFO">${randStr} = 7217794608</msg>
<status status="PASS" starttime="20220516 18:49:06.754" endtime="20220516 18:49:06.755"/>
</kw>
<msg timestamp="20220516 18:49:06.755" level="INFO">${random} = ozone-test-7217794608</msg>
<status status="PASS" starttime="20220516 18:49:06.754" endtime="20220516 18:49:06.755"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220516 18:49:06.758" level="INFO">${PREFIX} = ozone-test-7217794608</msg>
<status status="PASS" starttime="20220516 18:49:06.756" endtime="20220516 18:49:06.758"/>
</kw>
<status status="PASS" starttime="20220516 18:49:06.753" endtime="20220516 18:49:06.758"/>
</kw>
<status status="PASS" starttime="20220516 18:49:06.753" endtime="20220516 18:49:06.758"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which apt-get</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:49:06.761" level="INFO">Running command 'which apt-get 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:49:06.765" level="INFO">${rc} = 1</msg>
<msg timestamp="20220516 18:49:06.765" level="INFO">${output} = which: no apt-get in (/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin)</msg>
<status status="PASS" starttime="20220516 18:49:06.759" endtime="20220516 18:49:06.765"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220516 18:49:06.766" endtime="20220516 18:49:06.767"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>yum --help</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:49:06.769" level="INFO">Running command 'yum --help 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:49:06.962" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:49:06.962" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
ovl: Error while doing RPMdb copy-up:
[Errno 13] Permission denied: '/var/lib/rpm/Obsoletename'
Usage: yum [options] COMMAND

List of Commands:

check          Check...</msg>
<status status="PASS" starttime="20220516 18:49:06.767" endtime="20220516 18:49:06.962"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Install aws cli s3 centos" library="commonawslib">
<kw name="Execute" library="os">
<arg>sudo -E yum install -y awscli</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:49:06.972" level="INFO">Running command 'sudo -E yum install -y awscli 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:49:07.601" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:49:07.602" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirror.fcix.net
 * epel: mirror.lshiy.com
 * extras: repo.ialab.dsu.edu
 * updates: mirrors.xmission.com
Package ...</msg>
<status status="PASS" starttime="20220516 18:49:06.968" endtime="20220516 18:49:07.602"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:49:07.603" level="INFO">Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirror.fcix.net
 * epel: mirror.lshiy.com
 * extras: repo.ialab.dsu.edu
 * updates: mirrors.xmission.com
Package awscli-1.14.28-5.el7_5.1.noarch already installed and latest version
Nothing to do</msg>
<status status="PASS" starttime="20220516 18:49:07.602" endtime="20220516 18:49:07.603"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:49:07.604" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:49:07.604" endtime="20220516 18:49:07.605"/>
</kw>
<status status="PASS" starttime="20220516 18:49:06.967" endtime="20220516 18:49:07.605"/>
</kw>
<msg timestamp="20220516 18:49:07.605" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:49:06.967" endtime="20220516 18:49:07.606"/>
</kw>
<status status="PASS" starttime="20220516 18:49:06.965" endtime="20220516 18:49:07.606"/>
</kw>
<status status="PASS" starttime="20220516 18:49:06.964" endtime="20220516 18:49:07.606"/>
</kw>
<status status="PASS" starttime="20220516 18:49:06.963" endtime="20220516 18:49:07.607"/>
</kw>
<status status="PASS" starttime="20220516 18:49:06.759" endtime="20220516 18:49:07.607"/>
</kw>
<status status="PASS" starttime="20220516 18:49:06.758" endtime="20220516 18:49:07.607"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:49:07.616" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:49:07.620" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:49:07.620" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20220516 18:49:07.613" endtime="20220516 18:49:07.620"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:49:07.621" level="INFO">s3g</msg>
<status status="PASS" starttime="20220516 18:49:07.620" endtime="20220516 18:49:07.621"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:49:07.622" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:49:07.621" endtime="20220516 18:49:07.622"/>
</kw>
<status status="PASS" starttime="20220516 18:49:07.612" endtime="20220516 18:49:07.623"/>
</kw>
<msg timestamp="20220516 18:49:07.623" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:49:07.611" endtime="20220516 18:49:07.624"/>
</kw>
<msg timestamp="20220516 18:49:07.624" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20220516 18:49:07.610" endtime="20220516 18:49:07.625"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220516 18:49:07.629" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220516 18:49:07.625" endtime="20220516 18:49:07.629"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:49:07.636" level="INFO">Running command 'kinit -k testuser/s3g@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:49:07.783" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:49:07.784" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:49:07.633" endtime="20220516 18:49:07.784"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:49:07.786" level="INFO"/>
<status status="PASS" starttime="20220516 18:49:07.784" endtime="20220516 18:49:07.786"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:49:07.786" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:49:07.786" endtime="20220516 18:49:07.787"/>
</kw>
<status status="PASS" starttime="20220516 18:49:07.632" endtime="20220516 18:49:07.787"/>
</kw>
<msg timestamp="20220516 18:49:07.787" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:49:07.632" endtime="20220516 18:49:07.788"/>
</kw>
<status status="PASS" starttime="20220516 18:49:07.631" endtime="20220516 18:49:07.788"/>
</kw>
<status status="PASS" starttime="20220516 18:49:07.629" endtime="20220516 18:49:07.788"/>
</kw>
<status status="PASS" starttime="20220516 18:49:07.609" endtime="20220516 18:49:07.789"/>
</kw>
<status status="PASS" starttime="20220516 18:49:07.609" endtime="20220516 18:49:07.789"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:49:07.796" level="INFO">Running command 'ozone s3 getsecret  2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:49:13.407" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:49:13.408" level="INFO">${output} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=f7769bc1a657ea184c2c54edea939f94012aba2596b4499d251cf819b952cada</msg>
<status status="PASS" starttime="20220516 18:49:07.793" endtime="20220516 18:49:13.408"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:49:13.410" level="INFO">awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=f7769bc1a657ea184c2c54edea939f94012aba2596b4499d251cf819b952cada</msg>
<status status="PASS" starttime="20220516 18:49:13.409" endtime="20220516 18:49:13.410"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:49:13.412" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:49:13.410" endtime="20220516 18:49:13.412"/>
</kw>
<status status="PASS" starttime="20220516 18:49:07.792" endtime="20220516 18:49:13.413"/>
</kw>
<msg timestamp="20220516 18:49:13.413" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:49:07.792" endtime="20220516 18:49:13.414"/>
</kw>
<msg timestamp="20220516 18:49:13.415" level="INFO">${result} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=f7769bc1a657ea184c2c54edea939f94012aba2596b4499d251cf819b952cada</msg>
<status status="PASS" starttime="20220516 18:49:07.791" endtime="20220516 18:49:13.415"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20220516 18:49:13.416" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20220516 18:49:13.416" endtime="20220516 18:49:13.417"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>sdsdasaasdasd</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20220516 18:49:13.419" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20220516 18:49:13.417" endtime="20220516 18:49:13.419"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20220516 18:49:13.420" level="INFO">${secret} = ['f7769bc1a657ea184c2c54edea939f94012aba2596b4499d251cf819b952cada']</msg>
<status status="PASS" starttime="20220516 18:49:13.419" endtime="20220516 18:49:13.420"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220516 18:49:13.422" level="INFO">${accessKey} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220516 18:49:13.420" endtime="20220516 18:49:13.422"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220516 18:49:13.424" level="INFO">${secret} = f7769bc1a657ea184c2c54edea939f94012aba2596b4499d251cf819b952cada</msg>
<status status="PASS" starttime="20220516 18:49:13.423" endtime="20220516 18:49:13.424"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:49:13.430" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:49:14.142" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:49:14.143" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:49:13.426" endtime="20220516 18:49:14.143"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:49:14.144" level="INFO"/>
<status status="PASS" starttime="20220516 18:49:14.144" endtime="20220516 18:49:14.145"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:49:14.148" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:49:14.145" endtime="20220516 18:49:14.148"/>
</kw>
<status status="PASS" starttime="20220516 18:49:13.425" endtime="20220516 18:49:14.149"/>
</kw>
<msg timestamp="20220516 18:49:14.149" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:49:13.425" endtime="20220516 18:49:14.150"/>
</kw>
<status status="PASS" starttime="20220516 18:49:13.424" endtime="20220516 18:49:14.151"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:49:14.157" level="INFO">Running command 'aws configure set aws_access_key_id testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:49:14.861" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:49:14.862" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:49:14.153" endtime="20220516 18:49:14.862"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:49:14.864" level="INFO"/>
<status status="PASS" starttime="20220516 18:49:14.863" endtime="20220516 18:49:14.865"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:49:14.867" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:49:14.865" endtime="20220516 18:49:14.867"/>
</kw>
<status status="PASS" starttime="20220516 18:49:14.152" endtime="20220516 18:49:14.867"/>
</kw>
<msg timestamp="20220516 18:49:14.867" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:49:14.152" endtime="20220516 18:49:14.873"/>
</kw>
<status status="PASS" starttime="20220516 18:49:14.151" endtime="20220516 18:49:14.873"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:49:14.883" level="INFO">Running command 'aws configure set aws_secret_access_key f7769bc1a657ea184c2c54edea939f94012aba2596b4499d251cf819b952cada 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:49:15.570" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:49:15.571" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:49:14.878" endtime="20220516 18:49:15.571"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:49:15.573" level="INFO"/>
<status status="PASS" starttime="20220516 18:49:15.572" endtime="20220516 18:49:15.573"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:49:15.574" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:49:15.573" endtime="20220516 18:49:15.574"/>
</kw>
<status status="PASS" starttime="20220516 18:49:14.876" endtime="20220516 18:49:15.575"/>
</kw>
<msg timestamp="20220516 18:49:15.575" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:49:14.875" endtime="20220516 18:49:15.576"/>
</kw>
<status status="PASS" starttime="20220516 18:49:14.873" endtime="20220516 18:49:15.576"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:49:15.582" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:49:16.279" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:49:16.279" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:49:15.579" endtime="20220516 18:49:16.279"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:49:16.280" level="INFO"/>
<status status="PASS" starttime="20220516 18:49:16.280" endtime="20220516 18:49:16.280"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:49:16.281" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:49:16.281" endtime="20220516 18:49:16.281"/>
</kw>
<status status="PASS" starttime="20220516 18:49:15.577" endtime="20220516 18:49:16.282"/>
</kw>
<msg timestamp="20220516 18:49:16.282" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:49:15.577" endtime="20220516 18:49:16.283"/>
</kw>
<status status="PASS" starttime="20220516 18:49:15.576" endtime="20220516 18:49:16.283"/>
</kw>
<status status="PASS" starttime="20220516 18:49:07.791" endtime="20220516 18:49:16.283"/>
</kw>
<status status="PASS" starttime="20220516 18:49:07.789" endtime="20220516 18:49:16.283"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220516 18:49:16.284" endtime="20220516 18:49:16.284"/>
</kw>
<status status="PASS" starttime="20220516 18:49:07.608" endtime="20220516 18:49:16.284"/>
</kw>
<status status="PASS" starttime="20220516 18:49:07.607" endtime="20220516 18:49:16.284"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${BUCKET}</var>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20220516 18:49:16.285" endtime="20220516 18:49:16.286"/>
</kw>
<msg timestamp="20220516 18:49:16.286" level="INFO">${BUCKET} = encrypted</msg>
<status status="PASS" starttime="20220516 18:49:16.285" endtime="20220516 18:49:16.286"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220516 18:49:16.287" level="INFO">${BUCKET} = encrypted</msg>
<status status="PASS" starttime="20220516 18:49:16.286" endtime="20220516 18:49:16.287"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220516 18:49:16.287" endtime="20220516 18:49:16.287"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create encrypted bucket" library="commonawslib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20220516 18:49:16.288" endtime="20220516 18:49:16.289"/>
</kw>
<kw name="Bucket Exists" library="shell">
<var>${exists}</var>
<arg>o3://${OM_SERVICE_ID}/s3v/encrypted</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:49:16.294" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://om/s3v/encrypted 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:49:26.570" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:49:26.570" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "s3v",
  "name" : "encrypted",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 11607,
  "usedNamespace" : 3,
  "creationTime" : "2022-05-16T18:...</msg>
<status status="PASS" starttime="20220516 18:49:16.290" endtime="20220516 18:49:26.570"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20220516 18:49:26.571" endtime="20220516 18:49:26.573"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'VOLUME_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20220516 18:49:26.574" endtime="20220516 18:49:26.574"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'BUCKET_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20220516 18:49:26.574" endtime="20220516 18:49:26.575"/>
</kw>
<msg timestamp="20220516 18:49:26.575" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20220516 18:49:16.289" endtime="20220516 18:49:26.575"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${exists}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20220516 18:49:26.576" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:49:26.575" endtime="20220516 18:49:26.576"/>
</kw>
<status status="PASS" starttime="20220516 18:49:16.288" endtime="20220516 18:49:26.577"/>
</kw>
<status status="PASS" starttime="20220516 18:49:16.287" endtime="20220516 18:49:26.577"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220516 18:49:26.577" endtime="20220516 18:49:26.578"/>
</kw>
<status status="PASS" starttime="20220516 18:49:06.752" endtime="20220516 18:49:26.578"/>
</kw>
<test id="s1-s5-s3-t1" name="Create new bucket">
<kw name="Create bucket" library="commonawslib">
<kw name="Generate Ozone String" library="commonawslib">
<var>${postfix}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220516 18:49:26.588" level="INFO">${randStr} = 8523438435</msg>
<status status="PASS" starttime="20220516 18:49:26.586" endtime="20220516 18:49:26.588"/>
</kw>
<msg timestamp="20220516 18:49:26.588" level="INFO">${postfix} = ozone-test-8523438435</msg>
<status status="PASS" starttime="20220516 18:49:26.585" endtime="20220516 18:49:26.588"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bucket}</var>
<arg>bucket-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220516 18:49:26.589" level="INFO">${bucket} = bucket-ozone-test-8523438435</msg>
<status status="PASS" starttime="20220516 18:49:26.589" endtime="20220516 18:49:26.589"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arg>${bucket}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:49:26.603" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-ozone-test-8523438435 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:49:27.578" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:49:27.578" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-8523438435"
}</msg>
<status status="PASS" starttime="20220516 18:49:26.597" endtime="20220516 18:49:27.579"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:49:27.582" level="INFO">{
    "Location": "http://s3g:9878/bucket-ozone-test-8523438435"
}</msg>
<status status="PASS" starttime="20220516 18:49:27.580" endtime="20220516 18:49:27.583"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:49:27.585" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:49:27.583" endtime="20220516 18:49:27.585"/>
</kw>
<status status="PASS" starttime="20220516 18:49:26.595" endtime="20220516 18:49:27.586"/>
</kw>
<msg timestamp="20220516 18:49:27.586" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:49:26.594" endtime="20220516 18:49:27.587"/>
</kw>
<msg timestamp="20220516 18:49:27.588" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-8523438435"
}</msg>
<status status="PASS" starttime="20220516 18:49:26.593" endtime="20220516 18:49:27.588"/>
</kw>
<msg timestamp="20220516 18:49:27.589" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-ozone-test-8523438435"
}</msg>
<status status="PASS" starttime="20220516 18:49:26.591" endtime="20220516 18:49:27.589"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 18:49:27.590" endtime="20220516 18:49:27.591"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 18:49:27.592" endtime="20220516 18:49:27.593"/>
</kw>
<status status="PASS" starttime="20220516 18:49:26.590" endtime="20220516 18:49:27.593"/>
</kw>
<status status="PASS" starttime="20220516 18:49:26.585" endtime="20220516 18:49:27.594"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220516 18:49:26.578" endtime="20220516 18:49:27.595"/>
</test>
<test id="s1-s5-s3-t2" name="Create bucket which already exists">
<kw name="Create bucket" library="commonawslib">
<var>${bucket}</var>
<kw name="Generate Ozone String" library="commonawslib">
<var>${postfix}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220516 18:49:27.603" level="INFO">${randStr} = 3992041477</msg>
<status status="PASS" starttime="20220516 18:49:27.601" endtime="20220516 18:49:27.603"/>
</kw>
<msg timestamp="20220516 18:49:27.604" level="INFO">${postfix} = ozone-test-3992041477</msg>
<status status="PASS" starttime="20220516 18:49:27.600" endtime="20220516 18:49:27.604"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bucket}</var>
<arg>bucket-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220516 18:49:27.606" level="INFO">${bucket} = bucket-ozone-test-3992041477</msg>
<status status="PASS" starttime="20220516 18:49:27.604" endtime="20220516 18:49:27.606"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arg>${bucket}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:49:27.614" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-ozone-test-3992041477 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:49:28.427" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:49:28.427" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-3992041477"
}</msg>
<status status="PASS" starttime="20220516 18:49:27.611" endtime="20220516 18:49:28.428"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:49:28.429" level="INFO">{
    "Location": "http://s3g:9878/bucket-ozone-test-3992041477"
}</msg>
<status status="PASS" starttime="20220516 18:49:28.428" endtime="20220516 18:49:28.429"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:49:28.430" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:49:28.429" endtime="20220516 18:49:28.430"/>
</kw>
<status status="PASS" starttime="20220516 18:49:27.610" endtime="20220516 18:49:28.430"/>
</kw>
<msg timestamp="20220516 18:49:28.431" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:49:27.609" endtime="20220516 18:49:28.431"/>
</kw>
<msg timestamp="20220516 18:49:28.432" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-3992041477"
}</msg>
<status status="PASS" starttime="20220516 18:49:27.609" endtime="20220516 18:49:28.432"/>
</kw>
<msg timestamp="20220516 18:49:28.432" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-ozone-test-3992041477"
}</msg>
<status status="PASS" starttime="20220516 18:49:27.608" endtime="20220516 18:49:28.432"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 18:49:28.433" endtime="20220516 18:49:28.433"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 18:49:28.433" endtime="20220516 18:49:28.434"/>
</kw>
<status status="PASS" starttime="20220516 18:49:27.606" endtime="20220516 18:49:28.434"/>
</kw>
<msg timestamp="20220516 18:49:28.435" level="INFO">${bucket} = bucket-ozone-test-3992041477</msg>
<status status="PASS" starttime="20220516 18:49:27.599" endtime="20220516 18:49:28.435"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arg>${bucket}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:49:28.443" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-ozone-test-3992041477 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:49:29.162" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:49:29.162" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-3992041477"
}</msg>
<status status="PASS" starttime="20220516 18:49:28.440" endtime="20220516 18:49:29.162"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:49:29.164" level="INFO">{
    "Location": "http://s3g:9878/bucket-ozone-test-3992041477"
}</msg>
<status status="PASS" starttime="20220516 18:49:29.163" endtime="20220516 18:49:29.164"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:49:29.165" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:49:29.164" endtime="20220516 18:49:29.165"/>
</kw>
<status status="PASS" starttime="20220516 18:49:28.440" endtime="20220516 18:49:29.165"/>
</kw>
<msg timestamp="20220516 18:49:29.165" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:49:28.437" endtime="20220516 18:49:29.166"/>
</kw>
<msg timestamp="20220516 18:49:29.167" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-3992041477"
}</msg>
<status status="PASS" starttime="20220516 18:49:28.436" endtime="20220516 18:49:29.167"/>
</kw>
<msg timestamp="20220516 18:49:29.167" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-ozone-test-3992041477"
}</msg>
<status status="PASS" starttime="20220516 18:49:28.436" endtime="20220516 18:49:29.167"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 18:49:29.167" endtime="20220516 18:49:29.168"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 18:49:29.168" endtime="20220516 18:49:29.169"/>
</kw>
<status status="PASS" starttime="20220516 18:49:28.435" endtime="20220516 18:49:29.169"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220516 18:49:27.597" endtime="20220516 18:49:29.169"/>
</test>
<test id="s1-s5-s3-t3" name="Create bucket with invalid bucket name">
<kw name="Generate Ozone String" library="commonawslib">
<var>${randStr}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220516 18:49:29.176" level="INFO">${randStr} = 4501067098</msg>
<status status="PASS" starttime="20220516 18:49:29.171" endtime="20220516 18:49:29.176"/>
</kw>
<msg timestamp="20220516 18:49:29.177" level="INFO">${randStr} = ozone-test-4501067098</msg>
<status status="PASS" starttime="20220516 18:49:29.171" endtime="20220516 18:49:29.177"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket invalid_bucket_${randStr}</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:49:29.182" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket invalid_bucket_ozone-test-4501067098 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:49:29.916" level="INFO">${rc} = 255</msg>
<msg timestamp="20220516 18:49:29.916" level="INFO">${output} = 
An error occurred (InvalidBucketName) when calling the CreateBucket operation: The specified bucket is not valid.</msg>
<status status="PASS" starttime="20220516 18:49:29.179" endtime="20220516 18:49:29.916"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:49:29.917" level="INFO">
An error occurred (InvalidBucketName) when calling the CreateBucket operation: The specified bucket is not valid.</msg>
<status status="PASS" starttime="20220516 18:49:29.916" endtime="20220516 18:49:29.917"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:49:29.918" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:49:29.918" endtime="20220516 18:49:29.918"/>
</kw>
<msg timestamp="20220516 18:49:29.919" level="INFO">${output} = 
An error occurred (InvalidBucketName) when calling the CreateBucket operation: The specified bucket is not valid.</msg>
<status status="PASS" starttime="20220516 18:49:29.178" endtime="20220516 18:49:29.919"/>
</kw>
<msg timestamp="20220516 18:49:29.919" level="INFO">${result} = 
An error occurred (InvalidBucketName) when calling the CreateBucket operation: The specified bucket is not valid.</msg>
<status status="PASS" starttime="20220516 18:49:29.177" endtime="20220516 18:49:29.919"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidBucketName</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 18:49:29.920" endtime="20220516 18:49:29.920"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220516 18:49:29.170" endtime="20220516 18:49:29.921"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20220516 18:49:06.738" endtime="20220516 18:49:29.922"/>
</suite>
<suite id="s1-s5-s4" name="Bucketdelete" source="/opt/hadoop/smoketest/s3/bucketdelete.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220516 18:49:29.939" level="INFO">${randStr} = 6134551890</msg>
<status status="PASS" starttime="20220516 18:49:29.938" endtime="20220516 18:49:29.939"/>
</kw>
<msg timestamp="20220516 18:49:29.939" level="INFO">${random} = ozone-test-6134551890</msg>
<status status="PASS" starttime="20220516 18:49:29.938" endtime="20220516 18:49:29.939"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220516 18:49:29.941" level="INFO">${PREFIX} = ozone-test-6134551890</msg>
<status status="PASS" starttime="20220516 18:49:29.940" endtime="20220516 18:49:29.942"/>
</kw>
<status status="PASS" starttime="20220516 18:49:29.938" endtime="20220516 18:49:29.943"/>
</kw>
<status status="PASS" starttime="20220516 18:49:29.937" endtime="20220516 18:49:29.944"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which apt-get</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:49:29.947" level="INFO">Running command 'which apt-get 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:49:29.950" level="INFO">${rc} = 1</msg>
<msg timestamp="20220516 18:49:29.950" level="INFO">${output} = which: no apt-get in (/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin)</msg>
<status status="PASS" starttime="20220516 18:49:29.945" endtime="20220516 18:49:29.950"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220516 18:49:29.951" endtime="20220516 18:49:29.951"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>yum --help</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:49:29.953" level="INFO">Running command 'yum --help 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:49:30.124" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:49:30.124" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
ovl: Error while doing RPMdb copy-up:
[Errno 13] Permission denied: '/var/lib/rpm/Obsoletename'
Usage: yum [options] COMMAND

List of Commands:

check          Check...</msg>
<status status="PASS" starttime="20220516 18:49:29.951" endtime="20220516 18:49:30.124"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Install aws cli s3 centos" library="commonawslib">
<kw name="Execute" library="os">
<arg>sudo -E yum install -y awscli</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:49:30.131" level="INFO">Running command 'sudo -E yum install -y awscli 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:49:30.750" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:49:30.750" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirror.fcix.net
 * epel: mirror.lshiy.com
 * extras: repo.ialab.dsu.edu
 * updates: mirrors.xmission.com
Package ...</msg>
<status status="PASS" starttime="20220516 18:49:30.129" endtime="20220516 18:49:30.750"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:49:30.752" level="INFO">Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirror.fcix.net
 * epel: mirror.lshiy.com
 * extras: repo.ialab.dsu.edu
 * updates: mirrors.xmission.com
Package awscli-1.14.28-5.el7_5.1.noarch already installed and latest version
Nothing to do</msg>
<status status="PASS" starttime="20220516 18:49:30.751" endtime="20220516 18:49:30.753"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:49:30.754" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:49:30.753" endtime="20220516 18:49:30.754"/>
</kw>
<status status="PASS" starttime="20220516 18:49:30.128" endtime="20220516 18:49:30.755"/>
</kw>
<msg timestamp="20220516 18:49:30.755" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:49:30.128" endtime="20220516 18:49:30.756"/>
</kw>
<status status="PASS" starttime="20220516 18:49:30.127" endtime="20220516 18:49:30.756"/>
</kw>
<status status="PASS" starttime="20220516 18:49:30.127" endtime="20220516 18:49:30.756"/>
</kw>
<status status="PASS" starttime="20220516 18:49:30.125" endtime="20220516 18:49:30.756"/>
</kw>
<status status="PASS" starttime="20220516 18:49:29.944" endtime="20220516 18:49:30.757"/>
</kw>
<status status="PASS" starttime="20220516 18:49:29.944" endtime="20220516 18:49:30.757"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:49:30.769" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:49:30.774" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:49:30.774" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20220516 18:49:30.766" endtime="20220516 18:49:30.774"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:49:30.777" level="INFO">s3g</msg>
<status status="PASS" starttime="20220516 18:49:30.776" endtime="20220516 18:49:30.777"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:49:30.779" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:49:30.778" endtime="20220516 18:49:30.779"/>
</kw>
<status status="PASS" starttime="20220516 18:49:30.765" endtime="20220516 18:49:30.780"/>
</kw>
<msg timestamp="20220516 18:49:30.780" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:49:30.764" endtime="20220516 18:49:30.781"/>
</kw>
<msg timestamp="20220516 18:49:30.782" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20220516 18:49:30.763" endtime="20220516 18:49:30.782"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220516 18:49:30.787" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220516 18:49:30.783" endtime="20220516 18:49:30.787"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:49:30.797" level="INFO">Running command 'kinit -k testuser/s3g@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:49:30.808" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:49:30.809" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:49:30.792" endtime="20220516 18:49:30.809"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:49:30.811" level="INFO"/>
<status status="PASS" starttime="20220516 18:49:30.810" endtime="20220516 18:49:30.812"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:49:30.813" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:49:30.812" endtime="20220516 18:49:30.814"/>
</kw>
<status status="PASS" starttime="20220516 18:49:30.791" endtime="20220516 18:49:30.815"/>
</kw>
<msg timestamp="20220516 18:49:30.815" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:49:30.790" endtime="20220516 18:49:30.817"/>
</kw>
<status status="PASS" starttime="20220516 18:49:30.789" endtime="20220516 18:49:30.817"/>
</kw>
<status status="PASS" starttime="20220516 18:49:30.788" endtime="20220516 18:49:30.817"/>
</kw>
<status status="PASS" starttime="20220516 18:49:30.759" endtime="20220516 18:49:30.818"/>
</kw>
<status status="PASS" starttime="20220516 18:49:30.758" endtime="20220516 18:49:30.818"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:49:30.828" level="INFO">Running command 'ozone s3 getsecret  2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:49:36.165" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:49:36.165" level="INFO">${output} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=f7769bc1a657ea184c2c54edea939f94012aba2596b4499d251cf819b952cada</msg>
<status status="PASS" starttime="20220516 18:49:30.825" endtime="20220516 18:49:36.165"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:49:36.166" level="INFO">awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=f7769bc1a657ea184c2c54edea939f94012aba2596b4499d251cf819b952cada</msg>
<status status="PASS" starttime="20220516 18:49:36.166" endtime="20220516 18:49:36.167"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:49:36.167" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:49:36.167" endtime="20220516 18:49:36.167"/>
</kw>
<status status="PASS" starttime="20220516 18:49:30.823" endtime="20220516 18:49:36.168"/>
</kw>
<msg timestamp="20220516 18:49:36.168" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:49:30.822" endtime="20220516 18:49:36.168"/>
</kw>
<msg timestamp="20220516 18:49:36.169" level="INFO">${result} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=f7769bc1a657ea184c2c54edea939f94012aba2596b4499d251cf819b952cada</msg>
<status status="PASS" starttime="20220516 18:49:30.821" endtime="20220516 18:49:36.169"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20220516 18:49:36.170" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20220516 18:49:36.169" endtime="20220516 18:49:36.170"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>sdsdasaasdasd</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20220516 18:49:36.170" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20220516 18:49:36.170" endtime="20220516 18:49:36.171"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20220516 18:49:36.171" level="INFO">${secret} = ['f7769bc1a657ea184c2c54edea939f94012aba2596b4499d251cf819b952cada']</msg>
<status status="PASS" starttime="20220516 18:49:36.171" endtime="20220516 18:49:36.171"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220516 18:49:36.174" level="INFO">${accessKey} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220516 18:49:36.172" endtime="20220516 18:49:36.174"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220516 18:49:36.177" level="INFO">${secret} = f7769bc1a657ea184c2c54edea939f94012aba2596b4499d251cf819b952cada</msg>
<status status="PASS" starttime="20220516 18:49:36.174" endtime="20220516 18:49:36.177"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:49:36.183" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:49:36.825" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:49:36.825" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:49:36.179" endtime="20220516 18:49:36.825"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:49:36.827" level="INFO"/>
<status status="PASS" starttime="20220516 18:49:36.826" endtime="20220516 18:49:36.827"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:49:36.828" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:49:36.827" endtime="20220516 18:49:36.828"/>
</kw>
<status status="PASS" starttime="20220516 18:49:36.179" endtime="20220516 18:49:36.829"/>
</kw>
<msg timestamp="20220516 18:49:36.829" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:49:36.178" endtime="20220516 18:49:36.830"/>
</kw>
<status status="PASS" starttime="20220516 18:49:36.177" endtime="20220516 18:49:36.831"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:49:36.836" level="INFO">Running command 'aws configure set aws_access_key_id testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:49:37.495" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:49:37.495" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:49:36.832" endtime="20220516 18:49:37.495"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:49:37.496" level="INFO"/>
<status status="PASS" starttime="20220516 18:49:37.496" endtime="20220516 18:49:37.497"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:49:37.497" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:49:37.497" endtime="20220516 18:49:37.498"/>
</kw>
<status status="PASS" starttime="20220516 18:49:36.832" endtime="20220516 18:49:37.498"/>
</kw>
<msg timestamp="20220516 18:49:37.498" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:49:36.831" endtime="20220516 18:49:37.499"/>
</kw>
<status status="PASS" starttime="20220516 18:49:36.831" endtime="20220516 18:49:37.500"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:49:37.505" level="INFO">Running command 'aws configure set aws_secret_access_key f7769bc1a657ea184c2c54edea939f94012aba2596b4499d251cf819b952cada 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:49:38.241" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:49:38.242" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:49:37.502" endtime="20220516 18:49:38.242"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:49:38.243" level="INFO"/>
<status status="PASS" starttime="20220516 18:49:38.242" endtime="20220516 18:49:38.243"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:49:38.244" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:49:38.243" endtime="20220516 18:49:38.244"/>
</kw>
<status status="PASS" starttime="20220516 18:49:37.501" endtime="20220516 18:49:38.244"/>
</kw>
<msg timestamp="20220516 18:49:38.245" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:49:37.501" endtime="20220516 18:49:38.245"/>
</kw>
<status status="PASS" starttime="20220516 18:49:37.500" endtime="20220516 18:49:38.246"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:49:38.251" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:49:38.916" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:49:38.916" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:49:38.248" endtime="20220516 18:49:38.916"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:49:38.919" level="INFO"/>
<status status="PASS" starttime="20220516 18:49:38.917" endtime="20220516 18:49:38.919"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:49:38.920" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:49:38.919" endtime="20220516 18:49:38.920"/>
</kw>
<status status="PASS" starttime="20220516 18:49:38.247" endtime="20220516 18:49:38.921"/>
</kw>
<msg timestamp="20220516 18:49:38.921" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:49:38.247" endtime="20220516 18:49:38.923"/>
</kw>
<status status="PASS" starttime="20220516 18:49:38.246" endtime="20220516 18:49:38.924"/>
</kw>
<status status="PASS" starttime="20220516 18:49:30.820" endtime="20220516 18:49:38.924"/>
</kw>
<status status="PASS" starttime="20220516 18:49:30.818" endtime="20220516 18:49:38.924"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220516 18:49:38.925" endtime="20220516 18:49:38.925"/>
</kw>
<status status="PASS" starttime="20220516 18:49:30.757" endtime="20220516 18:49:38.926"/>
</kw>
<status status="PASS" starttime="20220516 18:49:30.757" endtime="20220516 18:49:38.926"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${BUCKET}</var>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20220516 18:49:38.928" endtime="20220516 18:49:38.928"/>
</kw>
<msg timestamp="20220516 18:49:38.929" level="INFO">${BUCKET} = encrypted</msg>
<status status="PASS" starttime="20220516 18:49:38.926" endtime="20220516 18:49:38.929"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220516 18:49:38.930" level="INFO">${BUCKET} = encrypted</msg>
<status status="PASS" starttime="20220516 18:49:38.929" endtime="20220516 18:49:38.930"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220516 18:49:38.930" endtime="20220516 18:49:38.931"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create encrypted bucket" library="commonawslib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20220516 18:49:38.933" endtime="20220516 18:49:38.934"/>
</kw>
<kw name="Bucket Exists" library="shell">
<var>${exists}</var>
<arg>o3://${OM_SERVICE_ID}/s3v/encrypted</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:49:38.939" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://om/s3v/encrypted 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:49:46.627" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:49:46.627" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "s3v",
  "name" : "encrypted",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 11607,
  "usedNamespace" : 3,
  "creationTime" : "2022-05-16T18:...</msg>
<status status="PASS" starttime="20220516 18:49:38.935" endtime="20220516 18:49:46.627"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20220516 18:49:46.628" endtime="20220516 18:49:46.629"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'VOLUME_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20220516 18:49:46.629" endtime="20220516 18:49:46.630"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'BUCKET_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20220516 18:49:46.630" endtime="20220516 18:49:46.631"/>
</kw>
<msg timestamp="20220516 18:49:46.631" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20220516 18:49:38.934" endtime="20220516 18:49:46.631"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${exists}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20220516 18:49:46.632" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:49:46.632" endtime="20220516 18:49:46.632"/>
</kw>
<status status="PASS" starttime="20220516 18:49:38.933" endtime="20220516 18:49:46.633"/>
</kw>
<status status="PASS" starttime="20220516 18:49:38.932" endtime="20220516 18:49:46.633"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220516 18:49:46.633" endtime="20220516 18:49:46.634"/>
</kw>
<status status="PASS" starttime="20220516 18:49:29.937" endtime="20220516 18:49:46.634"/>
</kw>
<test id="s1-s5-s4-t1" name="Delete existing bucket">
<kw name="Create bucket to be deleted">
<var>${bucket}</var>
<kw name="Run Keyword If" library="BuiltIn">
<var>${bucket}</var>
<arg>'${BUCKET}' == 'link'</arg>
<arg>Create link</arg>
<arg>to-be-deleted</arg>
<arg>ELSE</arg>
<arg>Run Keyword</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create bucket</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create bucket" library="commonawslib">
<kw name="Generate Ozone String" library="commonawslib">
<var>${postfix}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220516 18:49:46.643" level="INFO">${randStr} = 3379584502</msg>
<status status="PASS" starttime="20220516 18:49:46.642" endtime="20220516 18:49:46.643"/>
</kw>
<msg timestamp="20220516 18:49:46.644" level="INFO">${postfix} = ozone-test-3379584502</msg>
<status status="PASS" starttime="20220516 18:49:46.640" endtime="20220516 18:49:46.644"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bucket}</var>
<arg>bucket-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220516 18:49:46.654" level="INFO">${bucket} = bucket-ozone-test-3379584502</msg>
<status status="PASS" starttime="20220516 18:49:46.650" endtime="20220516 18:49:46.654"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arg>${bucket}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:49:46.670" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-ozone-test-3379584502 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:49:47.572" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:49:47.573" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-3379584502"
}</msg>
<status status="PASS" starttime="20220516 18:49:46.662" endtime="20220516 18:49:47.574"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:49:47.577" level="INFO">{
    "Location": "http://s3g:9878/bucket-ozone-test-3379584502"
}</msg>
<status status="PASS" starttime="20220516 18:49:47.575" endtime="20220516 18:49:47.577"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:49:47.578" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:49:47.577" endtime="20220516 18:49:47.578"/>
</kw>
<status status="PASS" starttime="20220516 18:49:46.661" endtime="20220516 18:49:47.579"/>
</kw>
<msg timestamp="20220516 18:49:47.579" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:49:46.657" endtime="20220516 18:49:47.584"/>
</kw>
<msg timestamp="20220516 18:49:47.585" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-3379584502"
}</msg>
<status status="PASS" starttime="20220516 18:49:46.656" endtime="20220516 18:49:47.585"/>
</kw>
<msg timestamp="20220516 18:49:47.586" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-ozone-test-3379584502"
}</msg>
<status status="PASS" starttime="20220516 18:49:46.655" endtime="20220516 18:49:47.586"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 18:49:47.587" endtime="20220516 18:49:47.588"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 18:49:47.589" endtime="20220516 18:49:47.591"/>
</kw>
<status status="PASS" starttime="20220516 18:49:46.655" endtime="20220516 18:49:47.592"/>
</kw>
<status status="PASS" starttime="20220516 18:49:46.639" endtime="20220516 18:49:47.593"/>
</kw>
<status status="PASS" starttime="20220516 18:49:46.639" endtime="20220516 18:49:47.593"/>
</kw>
<msg timestamp="20220516 18:49:47.594" level="INFO">${bucket} = bucket-ozone-test-3379584502</msg>
<status status="PASS" starttime="20220516 18:49:46.638" endtime="20220516 18:49:47.594"/>
</kw>
<msg timestamp="20220516 18:49:47.595" level="INFO">${bucket} = bucket-ozone-test-3379584502</msg>
<status status="PASS" starttime="20220516 18:49:46.637" endtime="20220516 18:49:47.595"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>delete-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:49:47.604" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-bucket --bucket bucket-ozone-test-3379584502 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:49:48.494" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:49:48.495" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:49:47.601" endtime="20220516 18:49:48.495"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:49:48.496" level="INFO"/>
<status status="PASS" starttime="20220516 18:49:48.495" endtime="20220516 18:49:48.496"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:49:48.497" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:49:48.497" endtime="20220516 18:49:48.497"/>
</kw>
<status status="PASS" starttime="20220516 18:49:47.598" endtime="20220516 18:49:48.498"/>
</kw>
<msg timestamp="20220516 18:49:48.498" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:49:47.597" endtime="20220516 18:49:48.499"/>
</kw>
<msg timestamp="20220516 18:49:48.500" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:49:47.596" endtime="20220516 18:49:48.500"/>
</kw>
<status status="PASS" starttime="20220516 18:49:47.595" endtime="20220516 18:49:48.500"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220516 18:49:46.635" endtime="20220516 18:49:48.501"/>
</test>
<test id="s1-s5-s4-t2" name="Delete non-existent bucket">
<kw name="Generate Ozone String" library="commonawslib">
<var>${randStr}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220516 18:49:48.504" level="INFO">${randStr} = 5079580015</msg>
<status status="PASS" starttime="20220516 18:49:48.503" endtime="20220516 18:49:48.504"/>
</kw>
<msg timestamp="20220516 18:49:48.505" level="INFO">${randStr} = ozone-test-5079580015</msg>
<status status="PASS" starttime="20220516 18:49:48.503" endtime="20220516 18:49:48.505"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>delete-bucket --bucket nosuchbucket-${randStr}</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:49:48.510" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-bucket --bucket nosuchbucket-ozone-test-5079580015 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:49:49.382" level="INFO">${rc} = 255</msg>
<msg timestamp="20220516 18:49:49.382" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the DeleteBucket operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20220516 18:49:48.507" endtime="20220516 18:49:49.382"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:49:49.384" level="INFO">
An error occurred (NoSuchBucket) when calling the DeleteBucket operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20220516 18:49:49.383" endtime="20220516 18:49:49.385"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:49:49.387" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:49:49.386" endtime="20220516 18:49:49.387"/>
</kw>
<msg timestamp="20220516 18:49:49.387" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the DeleteBucket operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20220516 18:49:48.506" endtime="20220516 18:49:49.387"/>
</kw>
<msg timestamp="20220516 18:49:49.388" level="INFO">${result} = 
An error occurred (NoSuchBucket) when calling the DeleteBucket operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20220516 18:49:48.505" endtime="20220516 18:49:49.388"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchBucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 18:49:49.388" endtime="20220516 18:49:49.389"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220516 18:49:48.501" endtime="20220516 18:49:49.390"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20220516 18:49:29.924" endtime="20220516 18:49:49.392"/>
</suite>
<suite id="s1-s5-s5" name="Buckethead" source="/opt/hadoop/smoketest/s3/buckethead.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220516 18:49:49.425" level="INFO">${randStr} = 1380116416</msg>
<status status="PASS" starttime="20220516 18:49:49.424" endtime="20220516 18:49:49.425"/>
</kw>
<msg timestamp="20220516 18:49:49.426" level="INFO">${random} = ozone-test-1380116416</msg>
<status status="PASS" starttime="20220516 18:49:49.424" endtime="20220516 18:49:49.426"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220516 18:49:49.429" level="INFO">${PREFIX} = ozone-test-1380116416</msg>
<status status="PASS" starttime="20220516 18:49:49.426" endtime="20220516 18:49:49.430"/>
</kw>
<status status="PASS" starttime="20220516 18:49:49.423" endtime="20220516 18:49:49.430"/>
</kw>
<status status="PASS" starttime="20220516 18:49:49.422" endtime="20220516 18:49:49.430"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which apt-get</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:49:49.435" level="INFO">Running command 'which apt-get 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:49:49.438" level="INFO">${rc} = 1</msg>
<msg timestamp="20220516 18:49:49.438" level="INFO">${output} = which: no apt-get in (/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin)</msg>
<status status="PASS" starttime="20220516 18:49:49.432" endtime="20220516 18:49:49.438"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220516 18:49:49.439" endtime="20220516 18:49:49.440"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>yum --help</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:49:49.443" level="INFO">Running command 'yum --help 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:49:49.670" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:49:49.670" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
ovl: Error while doing RPMdb copy-up:
[Errno 13] Permission denied: '/var/lib/rpm/Obsoletename'
Usage: yum [options] COMMAND

List of Commands:

check          Check...</msg>
<status status="PASS" starttime="20220516 18:49:49.440" endtime="20220516 18:49:49.670"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Install aws cli s3 centos" library="commonawslib">
<kw name="Execute" library="os">
<arg>sudo -E yum install -y awscli</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:49:49.680" level="INFO">Running command 'sudo -E yum install -y awscli 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:49:50.296" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:49:50.296" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirror.fcix.net
 * epel: mirror.lshiy.com
 * extras: repo.ialab.dsu.edu
 * updates: mirrors.xmission.com
Package ...</msg>
<status status="PASS" starttime="20220516 18:49:49.677" endtime="20220516 18:49:50.296"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:49:50.297" level="INFO">Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirror.fcix.net
 * epel: mirror.lshiy.com
 * extras: repo.ialab.dsu.edu
 * updates: mirrors.xmission.com
Package awscli-1.14.28-5.el7_5.1.noarch already installed and latest version
Nothing to do</msg>
<status status="PASS" starttime="20220516 18:49:50.297" endtime="20220516 18:49:50.298"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:49:50.298" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:49:50.298" endtime="20220516 18:49:50.298"/>
</kw>
<status status="PASS" starttime="20220516 18:49:49.676" endtime="20220516 18:49:50.299"/>
</kw>
<msg timestamp="20220516 18:49:50.299" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:49:49.675" endtime="20220516 18:49:50.300"/>
</kw>
<status status="PASS" starttime="20220516 18:49:49.674" endtime="20220516 18:49:50.300"/>
</kw>
<status status="PASS" starttime="20220516 18:49:49.673" endtime="20220516 18:49:50.301"/>
</kw>
<status status="PASS" starttime="20220516 18:49:49.672" endtime="20220516 18:49:50.301"/>
</kw>
<status status="PASS" starttime="20220516 18:49:49.431" endtime="20220516 18:49:50.301"/>
</kw>
<status status="PASS" starttime="20220516 18:49:49.431" endtime="20220516 18:49:50.301"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:49:50.309" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:49:50.313" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:49:50.313" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20220516 18:49:50.306" endtime="20220516 18:49:50.313"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:49:50.314" level="INFO">s3g</msg>
<status status="PASS" starttime="20220516 18:49:50.314" endtime="20220516 18:49:50.314"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:49:50.315" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:49:50.315" endtime="20220516 18:49:50.315"/>
</kw>
<status status="PASS" starttime="20220516 18:49:50.305" endtime="20220516 18:49:50.316"/>
</kw>
<msg timestamp="20220516 18:49:50.316" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:49:50.305" endtime="20220516 18:49:50.316"/>
</kw>
<msg timestamp="20220516 18:49:50.317" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20220516 18:49:50.304" endtime="20220516 18:49:50.317"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220516 18:49:50.319" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220516 18:49:50.317" endtime="20220516 18:49:50.319"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:49:50.324" level="INFO">Running command 'kinit -k testuser/s3g@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:49:50.334" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:49:50.334" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:49:50.322" endtime="20220516 18:49:50.334"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:49:50.336" level="INFO"/>
<status status="PASS" starttime="20220516 18:49:50.335" endtime="20220516 18:49:50.336"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:49:50.337" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:49:50.336" endtime="20220516 18:49:50.337"/>
</kw>
<status status="PASS" starttime="20220516 18:49:50.321" endtime="20220516 18:49:50.337"/>
</kw>
<msg timestamp="20220516 18:49:50.337" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:49:50.321" endtime="20220516 18:49:50.338"/>
</kw>
<status status="PASS" starttime="20220516 18:49:50.320" endtime="20220516 18:49:50.339"/>
</kw>
<status status="PASS" starttime="20220516 18:49:50.319" endtime="20220516 18:49:50.339"/>
</kw>
<status status="PASS" starttime="20220516 18:49:50.303" endtime="20220516 18:49:50.339"/>
</kw>
<status status="PASS" starttime="20220516 18:49:50.303" endtime="20220516 18:49:50.339"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:49:50.345" level="INFO">Running command 'ozone s3 getsecret  2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:49:55.630" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:49:55.630" level="INFO">${output} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=f7769bc1a657ea184c2c54edea939f94012aba2596b4499d251cf819b952cada</msg>
<status status="PASS" starttime="20220516 18:49:50.342" endtime="20220516 18:49:55.630"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:49:55.632" level="INFO">awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=f7769bc1a657ea184c2c54edea939f94012aba2596b4499d251cf819b952cada</msg>
<status status="PASS" starttime="20220516 18:49:55.631" endtime="20220516 18:49:55.632"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:49:55.632" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:49:55.632" endtime="20220516 18:49:55.633"/>
</kw>
<status status="PASS" starttime="20220516 18:49:50.341" endtime="20220516 18:49:55.633"/>
</kw>
<msg timestamp="20220516 18:49:55.633" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:49:50.341" endtime="20220516 18:49:55.634"/>
</kw>
<msg timestamp="20220516 18:49:55.635" level="INFO">${result} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=f7769bc1a657ea184c2c54edea939f94012aba2596b4499d251cf819b952cada</msg>
<status status="PASS" starttime="20220516 18:49:50.340" endtime="20220516 18:49:55.635"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20220516 18:49:55.636" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20220516 18:49:55.635" endtime="20220516 18:49:55.636"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>sdsdasaasdasd</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20220516 18:49:55.638" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20220516 18:49:55.636" endtime="20220516 18:49:55.638"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20220516 18:49:55.639" level="INFO">${secret} = ['f7769bc1a657ea184c2c54edea939f94012aba2596b4499d251cf819b952cada']</msg>
<status status="PASS" starttime="20220516 18:49:55.638" endtime="20220516 18:49:55.639"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220516 18:49:55.642" level="INFO">${accessKey} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220516 18:49:55.639" endtime="20220516 18:49:55.642"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220516 18:49:55.644" level="INFO">${secret} = f7769bc1a657ea184c2c54edea939f94012aba2596b4499d251cf819b952cada</msg>
<status status="PASS" starttime="20220516 18:49:55.642" endtime="20220516 18:49:55.644"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:49:55.649" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:49:56.340" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:49:56.340" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:49:55.646" endtime="20220516 18:49:56.340"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:49:56.343" level="INFO"/>
<status status="PASS" starttime="20220516 18:49:56.342" endtime="20220516 18:49:56.343"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:49:56.346" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:49:56.344" endtime="20220516 18:49:56.346"/>
</kw>
<status status="PASS" starttime="20220516 18:49:55.645" endtime="20220516 18:49:56.347"/>
</kw>
<msg timestamp="20220516 18:49:56.347" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:49:55.644" endtime="20220516 18:49:56.349"/>
</kw>
<status status="PASS" starttime="20220516 18:49:55.644" endtime="20220516 18:49:56.350"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:49:56.356" level="INFO">Running command 'aws configure set aws_access_key_id testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:49:57.067" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:49:57.067" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:49:56.352" endtime="20220516 18:49:57.068"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:49:57.069" level="INFO"/>
<status status="PASS" starttime="20220516 18:49:57.068" endtime="20220516 18:49:57.069"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:49:57.072" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:49:57.071" endtime="20220516 18:49:57.072"/>
</kw>
<status status="PASS" starttime="20220516 18:49:56.352" endtime="20220516 18:49:57.072"/>
</kw>
<msg timestamp="20220516 18:49:57.072" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:49:56.351" endtime="20220516 18:49:57.074"/>
</kw>
<status status="PASS" starttime="20220516 18:49:56.351" endtime="20220516 18:49:57.074"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:49:57.082" level="INFO">Running command 'aws configure set aws_secret_access_key f7769bc1a657ea184c2c54edea939f94012aba2596b4499d251cf819b952cada 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:49:57.739" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:49:57.739" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:49:57.078" endtime="20220516 18:49:57.739"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:49:57.741" level="INFO"/>
<status status="PASS" starttime="20220516 18:49:57.740" endtime="20220516 18:49:57.741"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:49:57.742" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:49:57.742" endtime="20220516 18:49:57.743"/>
</kw>
<status status="PASS" starttime="20220516 18:49:57.077" endtime="20220516 18:49:57.743"/>
</kw>
<msg timestamp="20220516 18:49:57.744" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:49:57.076" endtime="20220516 18:49:57.745"/>
</kw>
<status status="PASS" starttime="20220516 18:49:57.075" endtime="20220516 18:49:57.745"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:49:57.760" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:49:58.429" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:49:58.429" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:49:57.756" endtime="20220516 18:49:58.429"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:49:58.431" level="INFO"/>
<status status="PASS" starttime="20220516 18:49:58.430" endtime="20220516 18:49:58.431"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:49:58.432" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:49:58.431" endtime="20220516 18:49:58.432"/>
</kw>
<status status="PASS" starttime="20220516 18:49:57.755" endtime="20220516 18:49:58.433"/>
</kw>
<msg timestamp="20220516 18:49:58.433" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:49:57.747" endtime="20220516 18:49:58.434"/>
</kw>
<status status="PASS" starttime="20220516 18:49:57.746" endtime="20220516 18:49:58.434"/>
</kw>
<status status="PASS" starttime="20220516 18:49:50.340" endtime="20220516 18:49:58.434"/>
</kw>
<status status="PASS" starttime="20220516 18:49:50.339" endtime="20220516 18:49:58.435"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220516 18:49:58.435" endtime="20220516 18:49:58.436"/>
</kw>
<status status="PASS" starttime="20220516 18:49:50.302" endtime="20220516 18:49:58.436"/>
</kw>
<status status="PASS" starttime="20220516 18:49:50.301" endtime="20220516 18:49:58.436"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${BUCKET}</var>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20220516 18:49:58.437" endtime="20220516 18:49:58.438"/>
</kw>
<msg timestamp="20220516 18:49:58.438" level="INFO">${BUCKET} = encrypted</msg>
<status status="PASS" starttime="20220516 18:49:58.437" endtime="20220516 18:49:58.438"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220516 18:49:58.439" level="INFO">${BUCKET} = encrypted</msg>
<status status="PASS" starttime="20220516 18:49:58.438" endtime="20220516 18:49:58.439"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220516 18:49:58.439" endtime="20220516 18:49:58.440"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create encrypted bucket" library="commonawslib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20220516 18:49:58.441" endtime="20220516 18:49:58.441"/>
</kw>
<kw name="Bucket Exists" library="shell">
<var>${exists}</var>
<arg>o3://${OM_SERVICE_ID}/s3v/encrypted</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:49:58.445" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://om/s3v/encrypted 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:50:08.279" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:50:08.279" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "s3v",
  "name" : "encrypted",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 11607,
  "usedNamespace" : 3,
  "creationTime" : "2022-05-16T18:...</msg>
<status status="PASS" starttime="20220516 18:49:58.442" endtime="20220516 18:50:08.279"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20220516 18:50:08.280" endtime="20220516 18:50:08.281"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'VOLUME_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20220516 18:50:08.282" endtime="20220516 18:50:08.282"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'BUCKET_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20220516 18:50:08.283" endtime="20220516 18:50:08.283"/>
</kw>
<msg timestamp="20220516 18:50:08.284" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20220516 18:49:58.442" endtime="20220516 18:50:08.284"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${exists}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20220516 18:50:08.285" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:50:08.284" endtime="20220516 18:50:08.285"/>
</kw>
<status status="PASS" starttime="20220516 18:49:58.440" endtime="20220516 18:50:08.286"/>
</kw>
<status status="PASS" starttime="20220516 18:49:58.440" endtime="20220516 18:50:08.286"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220516 18:50:08.286" endtime="20220516 18:50:08.287"/>
</kw>
<status status="PASS" starttime="20220516 18:49:49.422" endtime="20220516 18:50:08.287"/>
</kw>
<test id="s1-s5-s5-t1" name="Head Bucket">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>head-bucket --bucket ${BUCKET}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:50:08.295" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-bucket --bucket encrypted 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:50:09.095" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:50:09.096" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:50:08.292" endtime="20220516 18:50:09.096"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:50:09.097" level="INFO"/>
<status status="PASS" starttime="20220516 18:50:09.096" endtime="20220516 18:50:09.097"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:50:09.099" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:50:09.097" endtime="20220516 18:50:09.099"/>
</kw>
<status status="PASS" starttime="20220516 18:50:08.291" endtime="20220516 18:50:09.099"/>
</kw>
<msg timestamp="20220516 18:50:09.099" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:50:08.290" endtime="20220516 18:50:09.100"/>
</kw>
<msg timestamp="20220516 18:50:09.100" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:50:08.290" endtime="20220516 18:50:09.100"/>
</kw>
<msg timestamp="20220516 18:50:09.101" level="INFO">${result} = </msg>
<status status="PASS" starttime="20220516 18:50:08.289" endtime="20220516 18:50:09.101"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220516 18:50:08.287" endtime="20220516 18:50:09.101"/>
</test>
<test id="s1-s5-s5-t2" name="Head Bucket not existent">
<kw name="Generate Ozone String" library="commonawslib">
<var>${randStr}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220516 18:50:09.106" level="INFO">${randStr} = 4864502373</msg>
<status status="PASS" starttime="20220516 18:50:09.105" endtime="20220516 18:50:09.106"/>
</kw>
<msg timestamp="20220516 18:50:09.107" level="INFO">${randStr} = ozone-test-4864502373</msg>
<status status="PASS" starttime="20220516 18:50:09.104" endtime="20220516 18:50:09.107"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-bucket --bucket ozonenosuchbucketqqweqwe-${randStr}</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:50:09.113" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-bucket --bucket ozonenosuchbucketqqweqwe-ozone-test-4864502373 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:50:09.892" level="INFO">${rc} = 255</msg>
<msg timestamp="20220516 18:50:09.893" level="INFO">${output} = 
An error occurred (404) when calling the HeadBucket operation: Not Found</msg>
<status status="PASS" starttime="20220516 18:50:09.110" endtime="20220516 18:50:09.893"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:50:09.895" level="INFO">
An error occurred (404) when calling the HeadBucket operation: Not Found</msg>
<status status="PASS" starttime="20220516 18:50:09.894" endtime="20220516 18:50:09.895"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:50:09.896" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:50:09.896" endtime="20220516 18:50:09.897"/>
</kw>
<msg timestamp="20220516 18:50:09.898" level="INFO">${output} = 
An error occurred (404) when calling the HeadBucket operation: Not Found</msg>
<status status="PASS" starttime="20220516 18:50:09.109" endtime="20220516 18:50:09.898"/>
</kw>
<msg timestamp="20220516 18:50:09.899" level="INFO">${result} = 
An error occurred (404) when calling the HeadBucket operation: Not Found</msg>
<status status="PASS" starttime="20220516 18:50:09.107" endtime="20220516 18:50:09.899"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>404</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 18:50:09.899" endtime="20220516 18:50:09.901"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Not Found</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 18:50:09.901" endtime="20220516 18:50:09.902"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220516 18:50:09.103" endtime="20220516 18:50:09.903"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20220516 18:49:49.396" endtime="20220516 18:50:09.904"/>
</suite>
<suite id="s1-s5-s6" name="Bucketlist" source="/opt/hadoop/smoketest/s3/bucketlist.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220516 18:50:09.933" level="INFO">${randStr} = 5987548015</msg>
<status status="PASS" starttime="20220516 18:50:09.933" endtime="20220516 18:50:09.933"/>
</kw>
<msg timestamp="20220516 18:50:09.934" level="INFO">${random} = ozone-test-5987548015</msg>
<status status="PASS" starttime="20220516 18:50:09.932" endtime="20220516 18:50:09.934"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220516 18:50:09.938" level="INFO">${PREFIX} = ozone-test-5987548015</msg>
<status status="PASS" starttime="20220516 18:50:09.934" endtime="20220516 18:50:09.938"/>
</kw>
<status status="PASS" starttime="20220516 18:50:09.931" endtime="20220516 18:50:09.938"/>
</kw>
<status status="PASS" starttime="20220516 18:50:09.931" endtime="20220516 18:50:09.938"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which apt-get</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:50:09.944" level="INFO">Running command 'which apt-get 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:50:09.948" level="INFO">${rc} = 1</msg>
<msg timestamp="20220516 18:50:09.948" level="INFO">${output} = which: no apt-get in (/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin)</msg>
<status status="PASS" starttime="20220516 18:50:09.941" endtime="20220516 18:50:09.948"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220516 18:50:09.949" endtime="20220516 18:50:09.950"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>yum --help</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:50:09.953" level="INFO">Running command 'yum --help 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:50:10.250" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:50:10.250" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
ovl: Error while doing RPMdb copy-up:
[Errno 13] Permission denied: '/var/lib/rpm/Obsoletename'
Usage: yum [options] COMMAND

List of Commands:

check          Check...</msg>
<status status="PASS" starttime="20220516 18:50:09.950" endtime="20220516 18:50:10.250"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Install aws cli s3 centos" library="commonawslib">
<kw name="Execute" library="os">
<arg>sudo -E yum install -y awscli</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:50:10.260" level="INFO">Running command 'sudo -E yum install -y awscli 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:50:10.892" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:50:10.892" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirror.fcix.net
 * epel: mirror.lshiy.com
 * extras: repo.ialab.dsu.edu
 * updates: mirrors.xmission.com
Package ...</msg>
<status status="PASS" starttime="20220516 18:50:10.257" endtime="20220516 18:50:10.892"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:50:10.893" level="INFO">Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirror.fcix.net
 * epel: mirror.lshiy.com
 * extras: repo.ialab.dsu.edu
 * updates: mirrors.xmission.com
Package awscli-1.14.28-5.el7_5.1.noarch already installed and latest version
Nothing to do</msg>
<status status="PASS" starttime="20220516 18:50:10.893" endtime="20220516 18:50:10.893"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:50:10.894" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:50:10.894" endtime="20220516 18:50:10.894"/>
</kw>
<status status="PASS" starttime="20220516 18:50:10.257" endtime="20220516 18:50:10.895"/>
</kw>
<msg timestamp="20220516 18:50:10.895" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:50:10.254" endtime="20220516 18:50:10.896"/>
</kw>
<status status="PASS" starttime="20220516 18:50:10.253" endtime="20220516 18:50:10.896"/>
</kw>
<status status="PASS" starttime="20220516 18:50:10.253" endtime="20220516 18:50:10.897"/>
</kw>
<status status="PASS" starttime="20220516 18:50:10.251" endtime="20220516 18:50:10.897"/>
</kw>
<status status="PASS" starttime="20220516 18:50:09.939" endtime="20220516 18:50:10.897"/>
</kw>
<status status="PASS" starttime="20220516 18:50:09.939" endtime="20220516 18:50:10.897"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:50:10.907" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:50:10.913" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:50:10.913" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20220516 18:50:10.902" endtime="20220516 18:50:10.913"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:50:10.915" level="INFO">s3g</msg>
<status status="PASS" starttime="20220516 18:50:10.914" endtime="20220516 18:50:10.915"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:50:10.917" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:50:10.915" endtime="20220516 18:50:10.917"/>
</kw>
<status status="PASS" starttime="20220516 18:50:10.901" endtime="20220516 18:50:10.917"/>
</kw>
<msg timestamp="20220516 18:50:10.918" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:50:10.900" endtime="20220516 18:50:10.918"/>
</kw>
<msg timestamp="20220516 18:50:10.919" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20220516 18:50:10.900" endtime="20220516 18:50:10.919"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220516 18:50:10.922" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220516 18:50:10.919" endtime="20220516 18:50:10.922"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:50:10.928" level="INFO">Running command 'kinit -k testuser/s3g@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:50:10.939" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:50:10.939" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:50:10.925" endtime="20220516 18:50:10.939"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:50:10.940" level="INFO"/>
<status status="PASS" starttime="20220516 18:50:10.940" endtime="20220516 18:50:10.940"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:50:10.942" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:50:10.941" endtime="20220516 18:50:10.942"/>
</kw>
<status status="PASS" starttime="20220516 18:50:10.924" endtime="20220516 18:50:10.942"/>
</kw>
<msg timestamp="20220516 18:50:10.942" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:50:10.924" endtime="20220516 18:50:10.943"/>
</kw>
<status status="PASS" starttime="20220516 18:50:10.923" endtime="20220516 18:50:10.944"/>
</kw>
<status status="PASS" starttime="20220516 18:50:10.922" endtime="20220516 18:50:10.944"/>
</kw>
<status status="PASS" starttime="20220516 18:50:10.899" endtime="20220516 18:50:10.944"/>
</kw>
<status status="PASS" starttime="20220516 18:50:10.898" endtime="20220516 18:50:10.944"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:50:10.964" level="INFO">Running command 'ozone s3 getsecret  2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:50:16.668" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:50:16.668" level="INFO">${output} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=f7769bc1a657ea184c2c54edea939f94012aba2596b4499d251cf819b952cada</msg>
<status status="PASS" starttime="20220516 18:50:10.961" endtime="20220516 18:50:16.668"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:50:16.671" level="INFO">awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=f7769bc1a657ea184c2c54edea939f94012aba2596b4499d251cf819b952cada</msg>
<status status="PASS" starttime="20220516 18:50:16.670" endtime="20220516 18:50:16.671"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:50:16.673" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:50:16.672" endtime="20220516 18:50:16.673"/>
</kw>
<status status="PASS" starttime="20220516 18:50:10.947" endtime="20220516 18:50:16.674"/>
</kw>
<msg timestamp="20220516 18:50:16.674" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:50:10.946" endtime="20220516 18:50:16.676"/>
</kw>
<msg timestamp="20220516 18:50:16.677" level="INFO">${result} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=f7769bc1a657ea184c2c54edea939f94012aba2596b4499d251cf819b952cada</msg>
<status status="PASS" starttime="20220516 18:50:10.946" endtime="20220516 18:50:16.677"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20220516 18:50:16.679" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20220516 18:50:16.678" endtime="20220516 18:50:16.680"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>sdsdasaasdasd</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20220516 18:50:16.682" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20220516 18:50:16.680" endtime="20220516 18:50:16.682"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20220516 18:50:16.684" level="INFO">${secret} = ['f7769bc1a657ea184c2c54edea939f94012aba2596b4499d251cf819b952cada']</msg>
<status status="PASS" starttime="20220516 18:50:16.682" endtime="20220516 18:50:16.684"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220516 18:50:16.687" level="INFO">${accessKey} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220516 18:50:16.684" endtime="20220516 18:50:16.687"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220516 18:50:16.690" level="INFO">${secret} = f7769bc1a657ea184c2c54edea939f94012aba2596b4499d251cf819b952cada</msg>
<status status="PASS" starttime="20220516 18:50:16.688" endtime="20220516 18:50:16.690"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:50:16.697" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:50:17.398" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:50:17.399" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:50:16.693" endtime="20220516 18:50:17.399"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:50:17.401" level="INFO"/>
<status status="PASS" starttime="20220516 18:50:17.400" endtime="20220516 18:50:17.401"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:50:17.402" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:50:17.401" endtime="20220516 18:50:17.403"/>
</kw>
<status status="PASS" starttime="20220516 18:50:16.692" endtime="20220516 18:50:17.403"/>
</kw>
<msg timestamp="20220516 18:50:17.404" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:50:16.691" endtime="20220516 18:50:17.405"/>
</kw>
<status status="PASS" starttime="20220516 18:50:16.690" endtime="20220516 18:50:17.406"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:50:17.413" level="INFO">Running command 'aws configure set aws_access_key_id testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:50:18.067" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:50:18.068" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:50:17.409" endtime="20220516 18:50:18.068"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:50:18.069" level="INFO"/>
<status status="PASS" starttime="20220516 18:50:18.068" endtime="20220516 18:50:18.069"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:50:18.070" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:50:18.070" endtime="20220516 18:50:18.071"/>
</kw>
<status status="PASS" starttime="20220516 18:50:17.408" endtime="20220516 18:50:18.071"/>
</kw>
<msg timestamp="20220516 18:50:18.071" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:50:17.408" endtime="20220516 18:50:18.073"/>
</kw>
<status status="PASS" starttime="20220516 18:50:17.406" endtime="20220516 18:50:18.073"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:50:18.078" level="INFO">Running command 'aws configure set aws_secret_access_key f7769bc1a657ea184c2c54edea939f94012aba2596b4499d251cf819b952cada 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:50:18.735" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:50:18.735" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:50:18.076" endtime="20220516 18:50:18.735"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:50:18.736" level="INFO"/>
<status status="PASS" starttime="20220516 18:50:18.735" endtime="20220516 18:50:18.736"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:50:18.737" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:50:18.736" endtime="20220516 18:50:18.737"/>
</kw>
<status status="PASS" starttime="20220516 18:50:18.075" endtime="20220516 18:50:18.737"/>
</kw>
<msg timestamp="20220516 18:50:18.737" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:50:18.074" endtime="20220516 18:50:18.738"/>
</kw>
<status status="PASS" starttime="20220516 18:50:18.073" endtime="20220516 18:50:18.738"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:50:18.744" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:50:19.389" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:50:19.389" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:50:18.740" endtime="20220516 18:50:19.389"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:50:19.391" level="INFO"/>
<status status="PASS" starttime="20220516 18:50:19.390" endtime="20220516 18:50:19.391"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:50:19.392" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:50:19.392" endtime="20220516 18:50:19.393"/>
</kw>
<status status="PASS" starttime="20220516 18:50:18.740" endtime="20220516 18:50:19.393"/>
</kw>
<msg timestamp="20220516 18:50:19.393" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:50:18.739" endtime="20220516 18:50:19.395"/>
</kw>
<status status="PASS" starttime="20220516 18:50:18.739" endtime="20220516 18:50:19.395"/>
</kw>
<status status="PASS" starttime="20220516 18:50:10.945" endtime="20220516 18:50:19.395"/>
</kw>
<status status="PASS" starttime="20220516 18:50:10.944" endtime="20220516 18:50:19.395"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220516 18:50:19.396" endtime="20220516 18:50:19.396"/>
</kw>
<status status="PASS" starttime="20220516 18:50:10.898" endtime="20220516 18:50:19.396"/>
</kw>
<status status="PASS" starttime="20220516 18:50:10.897" endtime="20220516 18:50:19.396"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${BUCKET}</var>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20220516 18:50:19.397" endtime="20220516 18:50:19.397"/>
</kw>
<msg timestamp="20220516 18:50:19.397" level="INFO">${BUCKET} = encrypted</msg>
<status status="PASS" starttime="20220516 18:50:19.396" endtime="20220516 18:50:19.398"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220516 18:50:19.398" level="INFO">${BUCKET} = encrypted</msg>
<status status="PASS" starttime="20220516 18:50:19.398" endtime="20220516 18:50:19.398"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220516 18:50:19.399" endtime="20220516 18:50:19.399"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create encrypted bucket" library="commonawslib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20220516 18:50:19.401" endtime="20220516 18:50:19.401"/>
</kw>
<kw name="Bucket Exists" library="shell">
<var>${exists}</var>
<arg>o3://${OM_SERVICE_ID}/s3v/encrypted</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:50:19.405" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://om/s3v/encrypted 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:50:28.699" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:50:28.700" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "s3v",
  "name" : "encrypted",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 11607,
  "usedNamespace" : 3,
  "creationTime" : "2022-05-16T18:...</msg>
<status status="PASS" starttime="20220516 18:50:19.402" endtime="20220516 18:50:28.700"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20220516 18:50:28.702" endtime="20220516 18:50:28.704"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'VOLUME_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20220516 18:50:28.704" endtime="20220516 18:50:28.705"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'BUCKET_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20220516 18:50:28.705" endtime="20220516 18:50:28.709"/>
</kw>
<msg timestamp="20220516 18:50:28.710" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20220516 18:50:19.401" endtime="20220516 18:50:28.710"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${exists}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20220516 18:50:28.711" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:50:28.710" endtime="20220516 18:50:28.712"/>
</kw>
<status status="PASS" starttime="20220516 18:50:19.400" endtime="20220516 18:50:28.712"/>
</kw>
<status status="PASS" starttime="20220516 18:50:19.399" endtime="20220516 18:50:28.712"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220516 18:50:28.712" endtime="20220516 18:50:28.713"/>
</kw>
<status status="PASS" starttime="20220516 18:50:09.930" endtime="20220516 18:50:28.713"/>
</kw>
<test id="s1-s5-s6-t1" name="List buckets">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-buckets | jq -r '.Buckets[].Name'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:50:28.722" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-buckets | jq -r '.Buckets[].Name' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:50:29.657" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:50:29.657" level="INFO">${output} = bucket-ozone-test-3992041477
bucket-ozone-test-6636182919
bucket-ozone-test-8523438435
bucket-test123
encrypted</msg>
<status status="PASS" starttime="20220516 18:50:28.718" endtime="20220516 18:50:29.657"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:50:29.660" level="INFO">bucket-ozone-test-3992041477
bucket-ozone-test-6636182919
bucket-ozone-test-8523438435
bucket-test123
encrypted</msg>
<status status="PASS" starttime="20220516 18:50:29.659" endtime="20220516 18:50:29.660"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:50:29.662" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:50:29.661" endtime="20220516 18:50:29.662"/>
</kw>
<status status="PASS" starttime="20220516 18:50:28.717" endtime="20220516 18:50:29.663"/>
</kw>
<msg timestamp="20220516 18:50:29.663" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:50:28.717" endtime="20220516 18:50:29.663"/>
</kw>
<msg timestamp="20220516 18:50:29.664" level="INFO">${output} = bucket-ozone-test-3992041477
bucket-ozone-test-6636182919
bucket-ozone-test-8523438435
bucket-test123
encrypted</msg>
<status status="PASS" starttime="20220516 18:50:28.716" endtime="20220516 18:50:29.664"/>
</kw>
<msg timestamp="20220516 18:50:29.664" level="INFO">${result} = bucket-ozone-test-3992041477
bucket-ozone-test-6636182919
bucket-ozone-test-8523438435
bucket-test123
encrypted</msg>
<status status="PASS" starttime="20220516 18:50:28.715" endtime="20220516 18:50:29.664"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 18:50:29.664" endtime="20220516 18:50:29.665"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220516 18:50:28.714" endtime="20220516 18:50:29.665"/>
</test>
<test id="s1-s5-s6-t2" name="Get bucket info with Ozone Shell to check the owner field">
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skipping this check as security is not enabled</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20220516 18:50:29.668" endtime="20220516 18:50:29.670"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /s3v/${BUCKET} | jq -r '.owner'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:50:29.674" level="INFO">Running command 'ozone sh bucket info /s3v/encrypted | jq -r '.owner' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:50:38.639" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:50:38.639" level="INFO">${output} = testuser</msg>
<status status="PASS" starttime="20220516 18:50:29.672" endtime="20220516 18:50:38.640"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:50:38.642" level="INFO">testuser</msg>
<status status="PASS" starttime="20220516 18:50:38.640" endtime="20220516 18:50:38.642"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:50:38.643" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:50:38.642" endtime="20220516 18:50:38.643"/>
</kw>
<status status="PASS" starttime="20220516 18:50:29.671" endtime="20220516 18:50:38.644"/>
</kw>
<msg timestamp="20220516 18:50:38.644" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:50:29.671" endtime="20220516 18:50:38.645"/>
</kw>
<msg timestamp="20220516 18:50:38.645" level="INFO">${result} = testuser</msg>
<status status="PASS" starttime="20220516 18:50:29.670" endtime="20220516 18:50:38.645"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>testuser</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220516 18:50:38.646" endtime="20220516 18:50:38.646"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220516 18:50:29.666" endtime="20220516 18:50:38.646"/>
</test>
<test id="s1-s5-s6-t3" name="List buckets with empty access id">
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ''</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:50:38.654" level="INFO">Running command 'aws configure set aws_access_key_id '' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:50:39.448" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:50:39.449" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:50:38.651" endtime="20220516 18:50:39.449"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:50:39.453" level="INFO"/>
<status status="PASS" starttime="20220516 18:50:39.450" endtime="20220516 18:50:39.454"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:50:39.457" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:50:39.455" endtime="20220516 18:50:39.458"/>
</kw>
<status status="PASS" starttime="20220516 18:50:38.651" endtime="20220516 18:50:39.459"/>
</kw>
<msg timestamp="20220516 18:50:39.459" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:50:38.650" endtime="20220516 18:50:39.460"/>
</kw>
<status status="PASS" starttime="20220516 18:50:38.649" endtime="20220516 18:50:39.461"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>list-buckets</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:50:39.471" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-buckets 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:50:40.427" level="INFO">${rc} = 255</msg>
<msg timestamp="20220516 18:50:40.427" level="INFO">${output} = 
An error occurred (AuthorizationHeaderMalformed) when calling the ListBuckets operation: The authorization header you provided is invalid.</msg>
<status status="PASS" starttime="20220516 18:50:39.464" endtime="20220516 18:50:40.427"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:50:40.429" level="INFO">
An error occurred (AuthorizationHeaderMalformed) when calling the ListBuckets operation: The authorization header you provided is invalid.</msg>
<status status="PASS" starttime="20220516 18:50:40.428" endtime="20220516 18:50:40.429"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:50:40.430" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:50:40.430" endtime="20220516 18:50:40.430"/>
</kw>
<msg timestamp="20220516 18:50:40.431" level="INFO">${output} = 
An error occurred (AuthorizationHeaderMalformed) when calling the ListBuckets operation: The authorization header you provided is invalid.</msg>
<status status="PASS" starttime="20220516 18:50:39.462" endtime="20220516 18:50:40.431"/>
</kw>
<msg timestamp="20220516 18:50:40.432" level="INFO">${result} = 
An error occurred (AuthorizationHeaderMalformed) when calling the ListBuckets operation: The authorization header you provided is invalid.</msg>
<status status="PASS" starttime="20220516 18:50:39.461" endtime="20220516 18:50:40.432"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>The authorization header you provided is invalid</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 18:50:40.432" endtime="20220516 18:50:40.433"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220516 18:50:38.648" endtime="20220516 18:50:40.433"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20220516 18:50:09.907" endtime="20220516 18:50:40.436"/>
</suite>
<suite id="s1-s5-s7" name="MultipartUpload" source="/opt/hadoop/smoketest/s3/MultipartUpload.robot">
<kw name="Setup Multipart Tests" type="SETUP">
<kw name="Setup s3 tests" library="commonawslib">
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220516 18:50:40.463" level="INFO">${randStr} = 1335505639</msg>
<status status="PASS" starttime="20220516 18:50:40.462" endtime="20220516 18:50:40.463"/>
</kw>
<msg timestamp="20220516 18:50:40.464" level="INFO">${random} = ozone-test-1335505639</msg>
<status status="PASS" starttime="20220516 18:50:40.462" endtime="20220516 18:50:40.464"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220516 18:50:40.466" level="INFO">${PREFIX} = ozone-test-1335505639</msg>
<status status="PASS" starttime="20220516 18:50:40.464" endtime="20220516 18:50:40.466"/>
</kw>
<status status="PASS" starttime="20220516 18:50:40.461" endtime="20220516 18:50:40.466"/>
</kw>
<status status="PASS" starttime="20220516 18:50:40.461" endtime="20220516 18:50:40.467"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which apt-get</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:50:40.471" level="INFO">Running command 'which apt-get 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:50:40.487" level="INFO">${rc} = 1</msg>
<msg timestamp="20220516 18:50:40.487" level="INFO">${output} = which: no apt-get in (/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin)</msg>
<status status="PASS" starttime="20220516 18:50:40.468" endtime="20220516 18:50:40.488"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220516 18:50:40.488" endtime="20220516 18:50:40.489"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>yum --help</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:50:40.491" level="INFO">Running command 'yum --help 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:50:40.685" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:50:40.685" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
ovl: Error while doing RPMdb copy-up:
[Errno 13] Permission denied: '/var/lib/rpm/Obsoletename'
Usage: yum [options] COMMAND

List of Commands:

check          Check...</msg>
<status status="PASS" starttime="20220516 18:50:40.489" endtime="20220516 18:50:40.685"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Install aws cli s3 centos" library="commonawslib">
<kw name="Execute" library="os">
<arg>sudo -E yum install -y awscli</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:50:40.692" level="INFO">Running command 'sudo -E yum install -y awscli 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:50:41.242" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:50:41.242" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirror.fcix.net
 * epel: mirror.lshiy.com
 * extras: repo.ialab.dsu.edu
 * updates: mirrors.xmission.com
Package ...</msg>
<status status="PASS" starttime="20220516 18:50:40.690" endtime="20220516 18:50:41.242"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:50:41.244" level="INFO">Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirror.fcix.net
 * epel: mirror.lshiy.com
 * extras: repo.ialab.dsu.edu
 * updates: mirrors.xmission.com
Package awscli-1.14.28-5.el7_5.1.noarch already installed and latest version
Nothing to do</msg>
<status status="PASS" starttime="20220516 18:50:41.243" endtime="20220516 18:50:41.244"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:50:41.244" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:50:41.244" endtime="20220516 18:50:41.245"/>
</kw>
<status status="PASS" starttime="20220516 18:50:40.689" endtime="20220516 18:50:41.245"/>
</kw>
<msg timestamp="20220516 18:50:41.245" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:50:40.688" endtime="20220516 18:50:41.246"/>
</kw>
<status status="PASS" starttime="20220516 18:50:40.687" endtime="20220516 18:50:41.246"/>
</kw>
<status status="PASS" starttime="20220516 18:50:40.687" endtime="20220516 18:50:41.247"/>
</kw>
<status status="PASS" starttime="20220516 18:50:40.686" endtime="20220516 18:50:41.247"/>
</kw>
<status status="PASS" starttime="20220516 18:50:40.467" endtime="20220516 18:50:41.247"/>
</kw>
<status status="PASS" starttime="20220516 18:50:40.467" endtime="20220516 18:50:41.247"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:50:41.253" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:50:41.259" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:50:41.259" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20220516 18:50:41.251" endtime="20220516 18:50:41.259"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:50:41.260" level="INFO">s3g</msg>
<status status="PASS" starttime="20220516 18:50:41.259" endtime="20220516 18:50:41.260"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:50:41.260" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:50:41.260" endtime="20220516 18:50:41.261"/>
</kw>
<status status="PASS" starttime="20220516 18:50:41.250" endtime="20220516 18:50:41.261"/>
</kw>
<msg timestamp="20220516 18:50:41.261" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:50:41.250" endtime="20220516 18:50:41.262"/>
</kw>
<msg timestamp="20220516 18:50:41.262" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20220516 18:50:41.250" endtime="20220516 18:50:41.262"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220516 18:50:41.265" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220516 18:50:41.263" endtime="20220516 18:50:41.265"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:50:41.270" level="INFO">Running command 'kinit -k testuser/s3g@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:50:41.287" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:50:41.287" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:50:41.267" endtime="20220516 18:50:41.287"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:50:41.288" level="INFO"/>
<status status="PASS" starttime="20220516 18:50:41.287" endtime="20220516 18:50:41.288"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:50:41.289" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:50:41.288" endtime="20220516 18:50:41.289"/>
</kw>
<status status="PASS" starttime="20220516 18:50:41.267" endtime="20220516 18:50:41.289"/>
</kw>
<msg timestamp="20220516 18:50:41.289" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:50:41.266" endtime="20220516 18:50:41.290"/>
</kw>
<status status="PASS" starttime="20220516 18:50:41.265" endtime="20220516 18:50:41.291"/>
</kw>
<status status="PASS" starttime="20220516 18:50:41.265" endtime="20220516 18:50:41.291"/>
</kw>
<status status="PASS" starttime="20220516 18:50:41.249" endtime="20220516 18:50:41.291"/>
</kw>
<status status="PASS" starttime="20220516 18:50:41.248" endtime="20220516 18:50:41.291"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:50:41.297" level="INFO">Running command 'ozone s3 getsecret  2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:50:46.840" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:50:46.840" level="INFO">${output} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=f7769bc1a657ea184c2c54edea939f94012aba2596b4499d251cf819b952cada</msg>
<status status="PASS" starttime="20220516 18:50:41.294" endtime="20220516 18:50:46.840"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:50:46.842" level="INFO">awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=f7769bc1a657ea184c2c54edea939f94012aba2596b4499d251cf819b952cada</msg>
<status status="PASS" starttime="20220516 18:50:46.841" endtime="20220516 18:50:46.842"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:50:46.843" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:50:46.842" endtime="20220516 18:50:46.843"/>
</kw>
<status status="PASS" starttime="20220516 18:50:41.293" endtime="20220516 18:50:46.844"/>
</kw>
<msg timestamp="20220516 18:50:46.844" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:50:41.293" endtime="20220516 18:50:46.845"/>
</kw>
<msg timestamp="20220516 18:50:46.845" level="INFO">${result} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=f7769bc1a657ea184c2c54edea939f94012aba2596b4499d251cf819b952cada</msg>
<status status="PASS" starttime="20220516 18:50:41.292" endtime="20220516 18:50:46.846"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20220516 18:50:46.846" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20220516 18:50:46.846" endtime="20220516 18:50:46.847"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>sdsdasaasdasd</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20220516 18:50:46.849" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20220516 18:50:46.849" endtime="20220516 18:50:46.849"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20220516 18:50:46.850" level="INFO">${secret} = ['f7769bc1a657ea184c2c54edea939f94012aba2596b4499d251cf819b952cada']</msg>
<status status="PASS" starttime="20220516 18:50:46.850" endtime="20220516 18:50:46.850"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220516 18:50:46.852" level="INFO">${accessKey} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220516 18:50:46.851" endtime="20220516 18:50:46.852"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220516 18:50:46.854" level="INFO">${secret} = f7769bc1a657ea184c2c54edea939f94012aba2596b4499d251cf819b952cada</msg>
<status status="PASS" starttime="20220516 18:50:46.853" endtime="20220516 18:50:46.855"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:50:46.860" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:50:47.511" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:50:47.511" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:50:46.857" endtime="20220516 18:50:47.511"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:50:47.513" level="INFO"/>
<status status="PASS" starttime="20220516 18:50:47.512" endtime="20220516 18:50:47.514"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:50:47.515" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:50:47.514" endtime="20220516 18:50:47.516"/>
</kw>
<status status="PASS" starttime="20220516 18:50:46.856" endtime="20220516 18:50:47.517"/>
</kw>
<msg timestamp="20220516 18:50:47.517" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:50:46.856" endtime="20220516 18:50:47.518"/>
</kw>
<status status="PASS" starttime="20220516 18:50:46.855" endtime="20220516 18:50:47.519"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:50:47.525" level="INFO">Running command 'aws configure set aws_access_key_id testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:50:48.185" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:50:48.185" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:50:47.522" endtime="20220516 18:50:48.185"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:50:48.187" level="INFO"/>
<status status="PASS" starttime="20220516 18:50:48.186" endtime="20220516 18:50:48.187"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:50:48.188" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:50:48.188" endtime="20220516 18:50:48.189"/>
</kw>
<status status="PASS" starttime="20220516 18:50:47.521" endtime="20220516 18:50:48.189"/>
</kw>
<msg timestamp="20220516 18:50:48.189" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:50:47.520" endtime="20220516 18:50:48.191"/>
</kw>
<status status="PASS" starttime="20220516 18:50:47.519" endtime="20220516 18:50:48.191"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:50:48.197" level="INFO">Running command 'aws configure set aws_secret_access_key f7769bc1a657ea184c2c54edea939f94012aba2596b4499d251cf819b952cada 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:50:48.857" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:50:48.857" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:50:48.194" endtime="20220516 18:50:48.857"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:50:48.859" level="INFO"/>
<status status="PASS" starttime="20220516 18:50:48.858" endtime="20220516 18:50:48.859"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:50:48.860" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:50:48.859" endtime="20220516 18:50:48.860"/>
</kw>
<status status="PASS" starttime="20220516 18:50:48.193" endtime="20220516 18:50:48.861"/>
</kw>
<msg timestamp="20220516 18:50:48.861" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:50:48.192" endtime="20220516 18:50:48.862"/>
</kw>
<status status="PASS" starttime="20220516 18:50:48.191" endtime="20220516 18:50:48.862"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:50:48.866" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:50:49.535" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:50:49.535" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:50:48.864" endtime="20220516 18:50:49.536"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:50:49.538" level="INFO"/>
<status status="PASS" starttime="20220516 18:50:49.537" endtime="20220516 18:50:49.538"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:50:49.539" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:50:49.539" endtime="20220516 18:50:49.540"/>
</kw>
<status status="PASS" starttime="20220516 18:50:48.863" endtime="20220516 18:50:49.541"/>
</kw>
<msg timestamp="20220516 18:50:49.541" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:50:48.863" endtime="20220516 18:50:49.542"/>
</kw>
<status status="PASS" starttime="20220516 18:50:48.862" endtime="20220516 18:50:49.543"/>
</kw>
<status status="PASS" starttime="20220516 18:50:41.292" endtime="20220516 18:50:49.543"/>
</kw>
<status status="PASS" starttime="20220516 18:50:41.291" endtime="20220516 18:50:49.544"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220516 18:50:49.544" endtime="20220516 18:50:49.545"/>
</kw>
<status status="PASS" starttime="20220516 18:50:41.248" endtime="20220516 18:50:49.545"/>
</kw>
<status status="PASS" starttime="20220516 18:50:41.247" endtime="20220516 18:50:49.546"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${BUCKET}</var>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20220516 18:50:49.547" endtime="20220516 18:50:49.548"/>
</kw>
<msg timestamp="20220516 18:50:49.548" level="INFO">${BUCKET} = encrypted</msg>
<status status="PASS" starttime="20220516 18:50:49.546" endtime="20220516 18:50:49.548"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220516 18:50:49.550" level="INFO">${BUCKET} = encrypted</msg>
<status status="PASS" starttime="20220516 18:50:49.549" endtime="20220516 18:50:49.550"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220516 18:50:49.550" endtime="20220516 18:50:49.551"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create encrypted bucket" library="commonawslib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20220516 18:50:49.553" endtime="20220516 18:50:49.553"/>
</kw>
<kw name="Bucket Exists" library="shell">
<var>${exists}</var>
<arg>o3://${OM_SERVICE_ID}/s3v/encrypted</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:50:49.559" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://om/s3v/encrypted 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:50:58.319" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:50:58.320" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "s3v",
  "name" : "encrypted",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 11607,
  "usedNamespace" : 3,
  "creationTime" : "2022-05-16T18:...</msg>
<status status="PASS" starttime="20220516 18:50:49.555" endtime="20220516 18:50:58.320"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20220516 18:50:58.320" endtime="20220516 18:50:58.321"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'VOLUME_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20220516 18:50:58.321" endtime="20220516 18:50:58.322"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'BUCKET_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20220516 18:50:58.322" endtime="20220516 18:50:58.322"/>
</kw>
<msg timestamp="20220516 18:50:58.323" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20220516 18:50:49.554" endtime="20220516 18:50:58.323"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${exists}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20220516 18:50:58.324" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:50:58.323" endtime="20220516 18:50:58.324"/>
</kw>
<status status="PASS" starttime="20220516 18:50:49.552" endtime="20220516 18:50:58.325"/>
</kw>
<status status="PASS" starttime="20220516 18:50:49.551" endtime="20220516 18:50:58.325"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220516 18:50:58.325" endtime="20220516 18:50:58.326"/>
</kw>
<status status="PASS" starttime="20220516 18:50:40.461" endtime="20220516 18:50:58.326"/>
</kw>
<kw name="Create Random File KB">
<arg>/tmp/part1</arg>
<arg>5121</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=${file} bs=1024 count=${size_in_kilobytes} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:50:58.330" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1024 count=5121 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:50:58.400" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:50:58.401" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:50:58.328" endtime="20220516 18:50:58.401"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:50:58.403" level="INFO"/>
<status status="PASS" starttime="20220516 18:50:58.402" endtime="20220516 18:50:58.403"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:50:58.404" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:50:58.404" endtime="20220516 18:50:58.404"/>
</kw>
<status status="PASS" starttime="20220516 18:50:58.328" endtime="20220516 18:50:58.405"/>
</kw>
<msg timestamp="20220516 18:50:58.405" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:50:58.327" endtime="20220516 18:50:58.406"/>
</kw>
<status status="PASS" starttime="20220516 18:50:58.326" endtime="20220516 18:50:58.407"/>
</kw>
<status status="PASS" starttime="20220516 18:50:58.326" endtime="20220516 18:50:58.407"/>
</kw>
<kw name="Create Random File KB">
<arg>/tmp/part2</arg>
<arg>1023</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=${file} bs=1024 count=${size_in_kilobytes} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:50:58.414" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part2 bs=1024 count=1023 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:50:58.429" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:50:58.429" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:50:58.410" endtime="20220516 18:50:58.430"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:50:58.432" level="INFO"/>
<status status="PASS" starttime="20220516 18:50:58.431" endtime="20220516 18:50:58.432"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:50:58.433" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:50:58.432" endtime="20220516 18:50:58.433"/>
</kw>
<status status="PASS" starttime="20220516 18:50:58.409" endtime="20220516 18:50:58.434"/>
</kw>
<msg timestamp="20220516 18:50:58.434" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:50:58.409" endtime="20220516 18:50:58.435"/>
</kw>
<status status="PASS" starttime="20220516 18:50:58.408" endtime="20220516 18:50:58.435"/>
</kw>
<status status="PASS" starttime="20220516 18:50:58.407" endtime="20220516 18:50:58.436"/>
</kw>
<status status="PASS" starttime="20220516 18:50:40.460" endtime="20220516 18:50:58.436"/>
</kw>
<test id="s1-s5-s7-t1" name="Test Multipart Upload With Adjusted Length">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220516 18:50:58.440" level="INFO">${randStr} = 2490462952</msg>
<status status="PASS" starttime="20220516 18:50:58.438" endtime="20220516 18:50:58.440"/>
</kw>
<msg timestamp="20220516 18:50:58.441" level="INFO">${random} = ozone-test-2490462952</msg>
<status status="PASS" starttime="20220516 18:50:58.438" endtime="20220516 18:50:58.441"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220516 18:50:58.442" level="INFO">${PREFIX} = ozone-test-2490462952</msg>
<status status="PASS" starttime="20220516 18:50:58.441" endtime="20220516 18:50:58.443"/>
</kw>
<status status="PASS" starttime="20220516 18:50:58.437" endtime="20220516 18:50:58.443"/>
</kw>
<kw name="Perform Multipart Upload" library="commonawslib">
<arg>${BUCKET}</arg>
<arg>multipart/adjusted_length_${PREFIX}</arg>
<arg>/tmp/part1</arg>
<arg>/tmp/part2</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:50:58.453" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket encrypted --key multipart/adjusted_length_ozone-test-2490462952 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:50:59.351" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:50:59.351" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "multipart/adjusted_length_ozone-test-2490462952",
    "UploadId": "8202526e-0645-4e2e-9197-58f3d2ca627e-108313120552779845"
}</msg>
<status status="PASS" starttime="20220516 18:50:58.450" endtime="20220516 18:50:59.351"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:50:59.354" level="INFO">{
    "Bucket": "encrypted",
    "Key": "multipart/adjusted_length_ozone-test-2490462952",
    "UploadId": "8202526e-0645-4e2e-9197-58f3d2ca627e-108313120552779845"
}</msg>
<status status="PASS" starttime="20220516 18:50:59.352" endtime="20220516 18:50:59.354"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:50:59.356" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:50:59.355" endtime="20220516 18:50:59.356"/>
</kw>
<status status="PASS" starttime="20220516 18:50:58.448" endtime="20220516 18:50:59.357"/>
</kw>
<msg timestamp="20220516 18:50:59.357" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:50:58.448" endtime="20220516 18:50:59.358"/>
</kw>
<msg timestamp="20220516 18:50:59.359" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "multipart/adjusted_length_ozone-test-2490462952",
    "UploadId": "8202526e-0645-4e2e-9197-58f3d2ca627e-108313120552779845"
}</msg>
<status status="PASS" starttime="20220516 18:50:58.446" endtime="20220516 18:50:59.359"/>
</kw>
<msg timestamp="20220516 18:50:59.360" level="INFO">${result} = {
    "Bucket": "encrypted",
    "Key": "multipart/adjusted_length_ozone-test-2490462952",
    "UploadId": "8202526e-0645-4e2e-9197-58f3d2ca627e-108313120552779845"
}</msg>
<status status="PASS" starttime="20220516 18:50:58.445" endtime="20220516 18:50:59.360"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:50:59.366" level="INFO">Running command 'echo '{
    "Bucket": "encrypted",
    "Key": "multipart/adjusted_length_ozone-test-2490462952",
    "UploadId": "8202526e-0645-4e2e-9197-58f3d2ca627e-108313120552779845"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:50:59.428" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:50:59.428" level="INFO">${output} = 8202526e-0645-4e2e-9197-58f3d2ca627e-108313120552779845</msg>
<status status="PASS" starttime="20220516 18:50:59.362" endtime="20220516 18:50:59.428"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:50:59.431" level="INFO">8202526e-0645-4e2e-9197-58f3d2ca627e-108313120552779845</msg>
<status status="PASS" starttime="20220516 18:50:59.429" endtime="20220516 18:50:59.431"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:50:59.432" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:50:59.431" endtime="20220516 18:50:59.433"/>
</kw>
<msg timestamp="20220516 18:50:59.434" level="INFO">${upload_id} = 8202526e-0645-4e2e-9197-58f3d2ca627e-108313120552779845</msg>
<status status="PASS" starttime="20220516 18:50:59.361" endtime="20220516 18:50:59.434"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>@{etags}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20220516 18:50:59.435" level="INFO">@{etags} = [ ]</msg>
<status status="PASS" starttime="20220516 18:50:59.435" endtime="20220516 18:50:59.435"/>
</kw>
<for flavor="IN ENUMERATE">
<var>${i}</var>
<var>${file}</var>
<value>@{files}</value>
<iter>
<var name="${i}">0</var>
<var name="${file}">/tmp/part1</var>
<kw name="Evaluate" library="BuiltIn">
<var>${part}</var>
<arg>${i} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20220516 18:50:59.438" level="INFO">${part} = 1</msg>
<status status="PASS" starttime="20220516 18:50:59.437" endtime="20220516 18:50:59.438"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${bucket} --key ${key} --part-number ${part} --body ${file} --upload-id ${upload_id}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:50:59.448" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket encrypted --key multipart/adjusted_length_ozone-test-2490462952 --part-number 1 --body /tmp/part1 --upload-id 8202526e-0645-4e2e-9197-58f3d2ca627e-108313120552779845 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:55:58.437" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20220516 18:50:59.444" endtime="20220516 18:55:58.437"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20220516 18:55:58.438" endtime="20220516 18:55:58.438"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20220516 18:55:58.438" endtime="20220516 18:55:58.438"/>
</kw>
<status status="FAIL" starttime="20220516 18:50:59.443" endtime="20220516 18:55:58.439"/>
</kw>
<msg timestamp="20220516 18:55:58.439" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20220516 18:50:59.442" endtime="20220516 18:55:58.439"/>
</kw>
<status status="FAIL" starttime="20220516 18:50:59.441" endtime="20220516 18:55:58.440"/>
</kw>
<status status="FAIL" starttime="20220516 18:50:59.439" endtime="20220516 18:55:58.440"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<status status="NOT RUN" starttime="20220516 18:55:58.441" endtime="20220516 18:55:58.442"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${etags}</arg>
<arg>{ETag=${etag},PartNumber=${part}}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" starttime="20220516 18:55:58.442" endtime="20220516 18:55:58.442"/>
</kw>
<status status="FAIL" starttime="20220516 18:50:59.436" endtime="20220516 18:55:58.442"/>
</iter>
<status status="FAIL" starttime="20220516 18:50:59.436" endtime="20220516 18:55:58.443"/>
</for>
<kw name="Catenate" library="BuiltIn">
<var>${parts}</var>
<arg>SEPARATOR=,</arg>
<arg>@{etags}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20220516 18:55:58.443" endtime="20220516 18:55:58.444"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>complete-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id} --multipart-upload 'Parts=[${parts}]'</arg>
<status status="NOT RUN" starttime="20220516 18:55:58.444" endtime="20220516 18:55:58.444"/>
</kw>
<status status="FAIL" starttime="20220516 18:50:58.443" endtime="20220516 18:55:58.445"/>
</kw>
<kw name="Verify Multipart Upload" library="commonawslib">
<arg>${BUCKET}</arg>
<arg>multipart/adjusted_length_${PREFIX}</arg>
<arg>/tmp/part1</arg>
<arg>/tmp/part2</arg>
<status status="NOT RUN" starttime="20220516 18:55:58.446" endtime="20220516 18:55:58.446"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20220516 18:50:58.436" endtime="20220516 18:55:58.446">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-s5-s7-t2" name="Test Multipart Upload">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220516 18:55:58.451" level="INFO">${randStr} = 0282244149</msg>
<status status="PASS" starttime="20220516 18:55:58.450" endtime="20220516 18:55:58.451"/>
</kw>
<msg timestamp="20220516 18:55:58.451" level="INFO">${random} = ozone-test-0282244149</msg>
<status status="PASS" starttime="20220516 18:55:58.449" endtime="20220516 18:55:58.451"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220516 18:55:58.452" level="INFO">${PREFIX} = ozone-test-0282244149</msg>
<status status="PASS" starttime="20220516 18:55:58.451" endtime="20220516 18:55:58.452"/>
</kw>
<status status="PASS" starttime="20220516 18:55:58.449" endtime="20220516 18:55:58.452"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:55:58.459" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket encrypted --key ozone-test-0282244149/multipartKey 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:55:59.373" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:55:59.373" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-0282244149/multipartKey",
    "UploadId": "e0ddb3fb-c554-4955-9640-5b1e983d09cd-108313140218167371"
}</msg>
<status status="PASS" starttime="20220516 18:55:58.456" endtime="20220516 18:55:59.373"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:55:59.376" level="INFO">{
    "Bucket": "encrypted",
    "Key": "ozone-test-0282244149/multipartKey",
    "UploadId": "e0ddb3fb-c554-4955-9640-5b1e983d09cd-108313140218167371"
}</msg>
<status status="PASS" starttime="20220516 18:55:59.375" endtime="20220516 18:55:59.376"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:55:59.378" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:55:59.376" endtime="20220516 18:55:59.378"/>
</kw>
<status status="PASS" starttime="20220516 18:55:58.455" endtime="20220516 18:55:59.379"/>
</kw>
<msg timestamp="20220516 18:55:59.379" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:55:58.454" endtime="20220516 18:55:59.380"/>
</kw>
<msg timestamp="20220516 18:55:59.381" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-0282244149/multipartKey",
    "UploadId": "e0ddb3fb-c554-4955-9640-5b1e983d09cd-108313140218167371"
}</msg>
<status status="PASS" starttime="20220516 18:55:58.453" endtime="20220516 18:55:59.381"/>
</kw>
<msg timestamp="20220516 18:55:59.382" level="INFO">${result} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-0282244149/multipartKey",
    "UploadId": "e0ddb3fb-c554-4955-9640-5b1e983d09cd-108313140218167371"
}</msg>
<status status="PASS" starttime="20220516 18:55:58.452" endtime="20220516 18:55:59.382"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:55:59.387" level="INFO">Running command 'echo '{
    "Bucket": "encrypted",
    "Key": "ozone-test-0282244149/multipartKey",
    "UploadId": "e0ddb3fb-c554-4955-9640-5b1e983d09cd-108313140218167371"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:55:59.440" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:55:59.440" level="INFO">${output} = e0ddb3fb-c554-4955-9640-5b1e983d09cd-108313140218167371</msg>
<status status="PASS" starttime="20220516 18:55:59.384" endtime="20220516 18:55:59.440"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:55:59.442" level="INFO">e0ddb3fb-c554-4955-9640-5b1e983d09cd-108313140218167371</msg>
<status status="PASS" starttime="20220516 18:55:59.441" endtime="20220516 18:55:59.442"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:55:59.443" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:55:59.442" endtime="20220516 18:55:59.444"/>
</kw>
<msg timestamp="20220516 18:55:59.444" level="INFO">${uploadID} = e0ddb3fb-c554-4955-9640-5b1e983d09cd-108313140218167371</msg>
<status status="PASS" starttime="20220516 18:55:59.382" endtime="20220516 18:55:59.444"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 18:55:59.445" endtime="20220516 18:55:59.446"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 18:55:59.446" endtime="20220516 18:55:59.447"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 18:55:59.447" endtime="20220516 18:55:59.448"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:55:59.457" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket encrypted --key ozone-test-0282244149/multipartKey 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:56:00.249" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:56:00.249" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-0282244149/multipartKey",
    "UploadId": "58b0625c-61f1-4c2e-a863-7b62d6912e89-108313140275970124"
}</msg>
<status status="PASS" starttime="20220516 18:55:59.453" endtime="20220516 18:56:00.250"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:56:00.252" level="INFO">{
    "Bucket": "encrypted",
    "Key": "ozone-test-0282244149/multipartKey",
    "UploadId": "58b0625c-61f1-4c2e-a863-7b62d6912e89-108313140275970124"
}</msg>
<status status="PASS" starttime="20220516 18:56:00.251" endtime="20220516 18:56:00.253"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:56:00.254" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:56:00.253" endtime="20220516 18:56:00.254"/>
</kw>
<status status="PASS" starttime="20220516 18:55:59.452" endtime="20220516 18:56:00.255"/>
</kw>
<msg timestamp="20220516 18:56:00.255" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:55:59.451" endtime="20220516 18:56:00.256"/>
</kw>
<msg timestamp="20220516 18:56:00.257" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-0282244149/multipartKey",
    "UploadId": "58b0625c-61f1-4c2e-a863-7b62d6912e89-108313140275970124"
}</msg>
<status status="PASS" starttime="20220516 18:55:59.450" endtime="20220516 18:56:00.257"/>
</kw>
<msg timestamp="20220516 18:56:00.258" level="INFO">${result} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-0282244149/multipartKey",
    "UploadId": "58b0625c-61f1-4c2e-a863-7b62d6912e89-108313140275970124"
}</msg>
<status status="PASS" starttime="20220516 18:55:59.449" endtime="20220516 18:56:00.258"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${nextUploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:56:00.263" level="INFO">Running command 'echo '{
    "Bucket": "encrypted",
    "Key": "ozone-test-0282244149/multipartKey",
    "UploadId": "58b0625c-61f1-4c2e-a863-7b62d6912e89-108313140275970124"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:56:00.323" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:56:00.323" level="INFO">${output} = 58b0625c-61f1-4c2e-a863-7b62d6912e89-108313140275970124</msg>
<status status="PASS" starttime="20220516 18:56:00.260" endtime="20220516 18:56:00.323"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:56:00.325" level="INFO">58b0625c-61f1-4c2e-a863-7b62d6912e89-108313140275970124</msg>
<status status="PASS" starttime="20220516 18:56:00.324" endtime="20220516 18:56:00.326"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:56:00.327" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:56:00.326" endtime="20220516 18:56:00.328"/>
</kw>
<msg timestamp="20220516 18:56:00.328" level="INFO">${nextUploadID} = 58b0625c-61f1-4c2e-a863-7b62d6912e89-108313140275970124</msg>
<status status="PASS" starttime="20220516 18:56:00.258" endtime="20220516 18:56:00.329"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 18:56:00.329" endtime="20220516 18:56:00.330"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 18:56:00.330" endtime="20220516 18:56:00.332"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 18:56:00.332" endtime="20220516 18:56:00.333"/>
</kw>
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${uploadID}</arg>
<arg>${nextUploadID}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="PASS" starttime="20220516 18:56:00.333" endtime="20220516 18:56:00.335"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create Random file</arg>
<arg>5</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create Random file">
<arg>5</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:56:00.346" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=5 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 18:56:00.387" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 18:56:00.387" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 18:56:00.341" endtime="20220516 18:56:00.388"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 18:56:00.389" level="INFO"/>
<status status="PASS" starttime="20220516 18:56:00.388" endtime="20220516 18:56:00.389"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 18:56:00.390" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 18:56:00.390" endtime="20220516 18:56:00.391"/>
</kw>
<status status="PASS" starttime="20220516 18:56:00.340" endtime="20220516 18:56:00.391"/>
</kw>
<msg timestamp="20220516 18:56:00.391" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 18:56:00.339" endtime="20220516 18:56:00.393"/>
</kw>
<status status="PASS" starttime="20220516 18:56:00.337" endtime="20220516 18:56:00.393"/>
</kw>
<status status="PASS" starttime="20220516 18:56:00.336" endtime="20220516 18:56:00.394"/>
</kw>
<status status="PASS" starttime="20220516 18:56:00.335" endtime="20220516 18:56:00.394"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey --part-number 1 --body /tmp/part1 --upload-id ${nextUploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 18:56:00.404" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket encrypted --key ozone-test-0282244149/multipartKey --part-number 1 --body /tmp/part1 --upload-id 58b0625c-61f1-4c2e-a863-7b62d6912e89-108313140275970124 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 19:00:58.449" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20220516 18:56:00.399" endtime="20220516 19:00:58.449"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20220516 19:00:58.450" endtime="20220516 19:00:58.450"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20220516 19:00:58.450" endtime="20220516 19:00:58.450"/>
</kw>
<status status="FAIL" starttime="20220516 18:56:00.398" endtime="20220516 19:00:58.451"/>
</kw>
<msg timestamp="20220516 19:00:58.451" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20220516 18:56:00.397" endtime="20220516 19:00:58.451"/>
</kw>
<status status="FAIL" starttime="20220516 18:56:00.396" endtime="20220516 19:00:58.452"/>
</kw>
<status status="FAIL" starttime="20220516 18:56:00.395" endtime="20220516 19:00:58.452"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220516 19:00:58.452" endtime="20220516 19:00:58.452"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create Random file</arg>
<arg>5</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20220516 19:00:58.453" endtime="20220516 19:00:58.453"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey --part-number 1 --body /tmp/part1 --upload-id ${nextUploadID}</arg>
<status status="NOT RUN" starttime="20220516 19:00:58.453" endtime="20220516 19:00:58.453"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220516 19:00:58.453" endtime="20220516 19:00:58.453"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20220516 18:55:58.448" endtime="20220516 19:00:58.454">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-s5-s7-t3" name="Test Multipart Upload Complete">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220516 19:00:58.460" level="INFO">${randStr} = 4223613635</msg>
<status status="PASS" starttime="20220516 19:00:58.459" endtime="20220516 19:00:58.460"/>
</kw>
<msg timestamp="20220516 19:00:58.460" level="INFO">${random} = ozone-test-4223613635</msg>
<status status="PASS" starttime="20220516 19:00:58.458" endtime="20220516 19:00:58.460"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220516 19:00:58.461" level="INFO">${PREFIX} = ozone-test-4223613635</msg>
<status status="PASS" starttime="20220516 19:00:58.460" endtime="20220516 19:00:58.461"/>
</kw>
<status status="PASS" starttime="20220516 19:00:58.458" endtime="20220516 19:00:58.461"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 19:00:58.468" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket encrypted --key ozone-test-4223613635/multipartKey1 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 19:00:59.390" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 19:00:59.390" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-4223613635/multipartKey1",
    "UploadId": "b63df4cd-23a5-4549-9219-4c2ba939e862-108313159879032914"
}</msg>
<status status="PASS" starttime="20220516 19:00:58.464" endtime="20220516 19:00:59.391"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 19:00:59.392" level="INFO">{
    "Bucket": "encrypted",
    "Key": "ozone-test-4223613635/multipartKey1",
    "UploadId": "b63df4cd-23a5-4549-9219-4c2ba939e862-108313159879032914"
}</msg>
<status status="PASS" starttime="20220516 19:00:59.391" endtime="20220516 19:00:59.392"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 19:00:59.393" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 19:00:59.393" endtime="20220516 19:00:59.394"/>
</kw>
<status status="PASS" starttime="20220516 19:00:58.463" endtime="20220516 19:00:59.395"/>
</kw>
<msg timestamp="20220516 19:00:59.395" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 19:00:58.463" endtime="20220516 19:00:59.396"/>
</kw>
<msg timestamp="20220516 19:00:59.396" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-4223613635/multipartKey1",
    "UploadId": "b63df4cd-23a5-4549-9219-4c2ba939e862-108313159879032914"
}</msg>
<status status="PASS" starttime="20220516 19:00:58.462" endtime="20220516 19:00:59.396"/>
</kw>
<msg timestamp="20220516 19:00:59.397" level="INFO">${result} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-4223613635/multipartKey1",
    "UploadId": "b63df4cd-23a5-4549-9219-4c2ba939e862-108313159879032914"
}</msg>
<status status="PASS" starttime="20220516 19:00:58.461" endtime="20220516 19:00:59.397"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 19:00:59.402" level="INFO">Running command 'echo '{
    "Bucket": "encrypted",
    "Key": "ozone-test-4223613635/multipartKey1",
    "UploadId": "b63df4cd-23a5-4549-9219-4c2ba939e862-108313159879032914"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 19:00:59.460" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 19:00:59.460" level="INFO">${output} = b63df4cd-23a5-4549-9219-4c2ba939e862-108313159879032914</msg>
<status status="PASS" starttime="20220516 19:00:59.399" endtime="20220516 19:00:59.460"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 19:00:59.461" level="INFO">b63df4cd-23a5-4549-9219-4c2ba939e862-108313159879032914</msg>
<status status="PASS" starttime="20220516 19:00:59.460" endtime="20220516 19:00:59.461"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 19:00:59.462" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 19:00:59.462" endtime="20220516 19:00:59.462"/>
</kw>
<msg timestamp="20220516 19:00:59.463" level="INFO">${uploadID} = b63df4cd-23a5-4549-9219-4c2ba939e862-108313159879032914</msg>
<status status="PASS" starttime="20220516 19:00:59.397" endtime="20220516 19:00:59.463"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 19:00:59.464" endtime="20220516 19:00:59.464"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 19:00:59.464" endtime="20220516 19:00:59.465"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 19:00:59.465" endtime="20220516 19:00:59.466"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create Random file</arg>
<arg>5</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create Random file">
<arg>5</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 19:00:59.473" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=5 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 19:00:59.531" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 19:00:59.531" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 19:00:59.470" endtime="20220516 19:00:59.531"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 19:00:59.533" level="INFO"/>
<status status="PASS" starttime="20220516 19:00:59.532" endtime="20220516 19:00:59.534"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 19:00:59.535" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 19:00:59.534" endtime="20220516 19:00:59.535"/>
</kw>
<status status="PASS" starttime="20220516 19:00:59.469" endtime="20220516 19:00:59.536"/>
</kw>
<msg timestamp="20220516 19:00:59.536" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 19:00:59.468" endtime="20220516 19:00:59.537"/>
</kw>
<status status="PASS" starttime="20220516 19:00:59.468" endtime="20220516 19:00:59.537"/>
</kw>
<status status="PASS" starttime="20220516 19:00:59.467" endtime="20220516 19:00:59.537"/>
</kw>
<status status="PASS" starttime="20220516 19:00:59.466" endtime="20220516 19:00:59.537"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey1 --part-number 1 --body /tmp/part1 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 19:00:59.545" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket encrypted --key ozone-test-4223613635/multipartKey1 --part-number 1 --body /tmp/part1 --upload-id b63df4cd-23a5-4549-9219-4c2ba939e862-108313159879032914 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 19:05:58.458" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20220516 19:00:59.541" endtime="20220516 19:05:58.458"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20220516 19:05:58.459" endtime="20220516 19:05:58.459"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20220516 19:05:58.459" endtime="20220516 19:05:58.459"/>
</kw>
<status status="FAIL" starttime="20220516 19:00:59.540" endtime="20220516 19:05:58.460"/>
</kw>
<msg timestamp="20220516 19:05:58.460" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20220516 19:00:59.540" endtime="20220516 19:05:58.461"/>
</kw>
<status status="FAIL" starttime="20220516 19:00:59.539" endtime="20220516 19:05:58.461"/>
</kw>
<status status="FAIL" starttime="20220516 19:00:59.538" endtime="20220516 19:05:58.461"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<status status="NOT RUN" starttime="20220516 19:05:58.461" endtime="20220516 19:05:58.462"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220516 19:05:58.462" endtime="20220516 19:05:58.462"/>
</kw>
<kw name="Execute" library="os">
<arg>echo "Part2" &gt; /tmp/part2</arg>
<status status="NOT RUN" starttime="20220516 19:05:58.462" endtime="20220516 19:05:58.462"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey1 --part-number 2 --body /tmp/part2 --upload-id ${uploadID}</arg>
<status status="NOT RUN" starttime="20220516 19:05:58.462" endtime="20220516 19:05:58.463"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag2}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<status status="NOT RUN" starttime="20220516 19:05:58.463" endtime="20220516 19:05:58.463"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220516 19:05:58.463" endtime="20220516 19:05:58.463"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey1 --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1},{ETag=${eTag2},PartNumber=2}]'</arg>
<status status="NOT RUN" starttime="20220516 19:05:58.463" endtime="20220516 19:05:58.463"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220516 19:05:58.464" endtime="20220516 19:05:58.464"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220516 19:05:58.464" endtime="20220516 19:05:58.464"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220516 19:05:58.464" endtime="20220516 19:05:58.464"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/multipartKey1 /tmp/${PREFIX}-multipartKey1.result</arg>
<status status="NOT RUN" starttime="20220516 19:05:58.464" endtime="20220516 19:05:58.464"/>
</kw>
<kw name="Execute" library="os">
<arg>cat /tmp/part1 /tmp/part2 &gt; /tmp/${PREFIX}-multipartKey1</arg>
<status status="NOT RUN" starttime="20220516 19:05:58.465" endtime="20220516 19:05:58.467"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/${PREFIX}-multipartKey1</arg>
<arg>/tmp/${PREFIX}-multipartKey1.result</arg>
<status status="NOT RUN" starttime="20220516 19:05:58.467" endtime="20220516 19:05:58.468"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20220516 19:00:58.454" endtime="20220516 19:05:58.468">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-s5-s7-t4" name="Test Multipart Upload Complete Entity too small">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220516 19:05:58.476" level="INFO">${randStr} = 1555397341</msg>
<status status="PASS" starttime="20220516 19:05:58.474" endtime="20220516 19:05:58.476"/>
</kw>
<msg timestamp="20220516 19:05:58.477" level="INFO">${random} = ozone-test-1555397341</msg>
<status status="PASS" starttime="20220516 19:05:58.473" endtime="20220516 19:05:58.477"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220516 19:05:58.478" level="INFO">${PREFIX} = ozone-test-1555397341</msg>
<status status="PASS" starttime="20220516 19:05:58.477" endtime="20220516 19:05:58.479"/>
</kw>
<status status="PASS" starttime="20220516 19:05:58.472" endtime="20220516 19:05:58.479"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey2</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 19:05:58.488" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket encrypted --key ozone-test-1555397341/multipartKey2 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 19:05:59.491" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 19:05:59.491" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-1555397341/multipartKey2",
    "UploadId": "5cb1862e-cd75-45f3-864a-604bc173aeb0-108313179546058840"
}</msg>
<status status="PASS" starttime="20220516 19:05:58.485" endtime="20220516 19:05:59.491"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 19:05:59.495" level="INFO">{
    "Bucket": "encrypted",
    "Key": "ozone-test-1555397341/multipartKey2",
    "UploadId": "5cb1862e-cd75-45f3-864a-604bc173aeb0-108313179546058840"
}</msg>
<status status="PASS" starttime="20220516 19:05:59.494" endtime="20220516 19:05:59.495"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 19:05:59.496" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 19:05:59.495" endtime="20220516 19:05:59.496"/>
</kw>
<status status="PASS" starttime="20220516 19:05:58.484" endtime="20220516 19:05:59.497"/>
</kw>
<msg timestamp="20220516 19:05:59.497" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 19:05:58.481" endtime="20220516 19:05:59.497"/>
</kw>
<msg timestamp="20220516 19:05:59.498" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-1555397341/multipartKey2",
    "UploadId": "5cb1862e-cd75-45f3-864a-604bc173aeb0-108313179546058840"
}</msg>
<status status="PASS" starttime="20220516 19:05:58.480" endtime="20220516 19:05:59.498"/>
</kw>
<msg timestamp="20220516 19:05:59.499" level="INFO">${result} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-1555397341/multipartKey2",
    "UploadId": "5cb1862e-cd75-45f3-864a-604bc173aeb0-108313179546058840"
}</msg>
<status status="PASS" starttime="20220516 19:05:58.479" endtime="20220516 19:05:59.499"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 19:05:59.505" level="INFO">Running command 'echo '{
    "Bucket": "encrypted",
    "Key": "ozone-test-1555397341/multipartKey2",
    "UploadId": "5cb1862e-cd75-45f3-864a-604bc173aeb0-108313179546058840"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 19:05:59.559" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 19:05:59.559" level="INFO">${output} = 5cb1862e-cd75-45f3-864a-604bc173aeb0-108313179546058840</msg>
<status status="PASS" starttime="20220516 19:05:59.501" endtime="20220516 19:05:59.559"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 19:05:59.562" level="INFO">5cb1862e-cd75-45f3-864a-604bc173aeb0-108313179546058840</msg>
<status status="PASS" starttime="20220516 19:05:59.560" endtime="20220516 19:05:59.563"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 19:05:59.564" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 19:05:59.563" endtime="20220516 19:05:59.565"/>
</kw>
<msg timestamp="20220516 19:05:59.565" level="INFO">${uploadID} = 5cb1862e-cd75-45f3-864a-604bc173aeb0-108313179546058840</msg>
<status status="PASS" starttime="20220516 19:05:59.499" endtime="20220516 19:05:59.565"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 19:05:59.566" endtime="20220516 19:05:59.567"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 19:05:59.568" endtime="20220516 19:05:59.568"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 19:05:59.568" endtime="20220516 19:05:59.569"/>
</kw>
<kw name="Execute" library="os">
<arg>echo "Part1" &gt; /tmp/part1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 19:05:59.576" level="INFO">Running command 'echo "Part1" &gt; /tmp/part1'.</msg>
<msg timestamp="20220516 19:05:59.579" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 19:05:59.580" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 19:05:59.573" endtime="20220516 19:05:59.580"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 19:05:59.583" level="INFO"/>
<status status="PASS" starttime="20220516 19:05:59.581" endtime="20220516 19:05:59.583"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 19:05:59.585" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 19:05:59.584" endtime="20220516 19:05:59.585"/>
</kw>
<status status="PASS" starttime="20220516 19:05:59.572" endtime="20220516 19:05:59.586"/>
</kw>
<msg timestamp="20220516 19:05:59.586" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 19:05:59.571" endtime="20220516 19:05:59.588"/>
</kw>
<status status="PASS" starttime="20220516 19:05:59.570" endtime="20220516 19:05:59.588"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey2 --part-number 1 --body /tmp/part1 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 19:05:59.596" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket encrypted --key ozone-test-1555397341/multipartKey2 --part-number 1 --body /tmp/part1 --upload-id 5cb1862e-cd75-45f3-864a-604bc173aeb0-108313179546058840 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 19:10:58.471" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20220516 19:05:59.594" endtime="20220516 19:10:58.471"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20220516 19:10:58.472" endtime="20220516 19:10:58.472"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20220516 19:10:58.472" endtime="20220516 19:10:58.472"/>
</kw>
<status status="FAIL" starttime="20220516 19:05:59.592" endtime="20220516 19:10:58.473"/>
</kw>
<msg timestamp="20220516 19:10:58.473" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20220516 19:05:59.591" endtime="20220516 19:10:58.474"/>
</kw>
<status status="FAIL" starttime="20220516 19:05:59.590" endtime="20220516 19:10:58.474"/>
</kw>
<status status="FAIL" starttime="20220516 19:05:59.589" endtime="20220516 19:10:58.475"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<status status="NOT RUN" starttime="20220516 19:10:58.475" endtime="20220516 19:10:58.476"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220516 19:10:58.476" endtime="20220516 19:10:58.476"/>
</kw>
<kw name="Execute" library="os">
<arg>echo "Part2" &gt; /tmp/part2</arg>
<status status="NOT RUN" starttime="20220516 19:10:58.476" endtime="20220516 19:10:58.476"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey2 --part-number 2 --body /tmp/part2 --upload-id ${uploadID}</arg>
<status status="NOT RUN" starttime="20220516 19:10:58.476" endtime="20220516 19:10:58.476"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag2}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<status status="NOT RUN" starttime="20220516 19:10:58.477" endtime="20220516 19:10:58.477"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220516 19:10:58.477" endtime="20220516 19:10:58.477"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey2 --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1},{ETag=${eTag2},PartNumber=2}]'</arg>
<arg>255</arg>
<status status="NOT RUN" starttime="20220516 19:10:58.477" endtime="20220516 19:10:58.477"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>EntityTooSmall</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220516 19:10:58.477" endtime="20220516 19:10:58.477"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20220516 19:05:58.470" endtime="20220516 19:10:58.478">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-s5-s7-t5" name="Test Multipart Upload Complete Invalid part errors and complete mpu with few parts">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220516 19:10:58.482" level="INFO">${randStr} = 0287649663</msg>
<status status="PASS" starttime="20220516 19:10:58.481" endtime="20220516 19:10:58.482"/>
</kw>
<msg timestamp="20220516 19:10:58.483" level="INFO">${random} = ozone-test-0287649663</msg>
<status status="PASS" starttime="20220516 19:10:58.481" endtime="20220516 19:10:58.483"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220516 19:10:58.483" level="INFO">${PREFIX} = ozone-test-0287649663</msg>
<status status="PASS" starttime="20220516 19:10:58.483" endtime="20220516 19:10:58.484"/>
</kw>
<status status="PASS" starttime="20220516 19:10:58.480" endtime="20220516 19:10:58.484"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey3</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 19:10:58.491" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket encrypted --key ozone-test-0287649663/multipartKey3 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 19:10:59.449" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 19:10:59.449" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-0287649663/multipartKey3",
    "UploadId": "e74f13c5-5d44-409b-ac23-cb3498bbf6de-108313199205220446"
}</msg>
<status status="PASS" starttime="20220516 19:10:58.487" endtime="20220516 19:10:59.449"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 19:10:59.452" level="INFO">{
    "Bucket": "encrypted",
    "Key": "ozone-test-0287649663/multipartKey3",
    "UploadId": "e74f13c5-5d44-409b-ac23-cb3498bbf6de-108313199205220446"
}</msg>
<status status="PASS" starttime="20220516 19:10:59.450" endtime="20220516 19:10:59.452"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 19:10:59.453" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 19:10:59.452" endtime="20220516 19:10:59.453"/>
</kw>
<status status="PASS" starttime="20220516 19:10:58.486" endtime="20220516 19:10:59.454"/>
</kw>
<msg timestamp="20220516 19:10:59.455" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 19:10:58.486" endtime="20220516 19:10:59.456"/>
</kw>
<msg timestamp="20220516 19:10:59.456" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-0287649663/multipartKey3",
    "UploadId": "e74f13c5-5d44-409b-ac23-cb3498bbf6de-108313199205220446"
}</msg>
<status status="PASS" starttime="20220516 19:10:58.485" endtime="20220516 19:10:59.456"/>
</kw>
<msg timestamp="20220516 19:10:59.457" level="INFO">${result} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-0287649663/multipartKey3",
    "UploadId": "e74f13c5-5d44-409b-ac23-cb3498bbf6de-108313199205220446"
}</msg>
<status status="PASS" starttime="20220516 19:10:58.484" endtime="20220516 19:10:59.457"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 19:10:59.461" level="INFO">Running command 'echo '{
    "Bucket": "encrypted",
    "Key": "ozone-test-0287649663/multipartKey3",
    "UploadId": "e74f13c5-5d44-409b-ac23-cb3498bbf6de-108313199205220446"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 19:10:59.519" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 19:10:59.519" level="INFO">${output} = e74f13c5-5d44-409b-ac23-cb3498bbf6de-108313199205220446</msg>
<status status="PASS" starttime="20220516 19:10:59.459" endtime="20220516 19:10:59.519"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 19:10:59.521" level="INFO">e74f13c5-5d44-409b-ac23-cb3498bbf6de-108313199205220446</msg>
<status status="PASS" starttime="20220516 19:10:59.520" endtime="20220516 19:10:59.521"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 19:10:59.522" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 19:10:59.521" endtime="20220516 19:10:59.522"/>
</kw>
<msg timestamp="20220516 19:10:59.522" level="INFO">${uploadID} = e74f13c5-5d44-409b-ac23-cb3498bbf6de-108313199205220446</msg>
<status status="PASS" starttime="20220516 19:10:59.458" endtime="20220516 19:10:59.523"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 19:10:59.523" endtime="20220516 19:10:59.524"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 19:10:59.524" endtime="20220516 19:10:59.525"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 19:10:59.526" endtime="20220516 19:10:59.526"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=1},{ETag=etag2,PartNumber=2}]'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 19:10:59.533" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id e74f13c5-5d44-409b-ac23-cb3498bbf6de-108313199205220446 --bucket encrypted --key ozone-test-0287649663/multipartKey3 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=1},{ETag=etag2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 19:11:00.434" level="INFO">${rc} = 255</msg>
<msg timestamp="20220516 19:11:00.434" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20220516 19:10:59.528" endtime="20220516 19:11:00.434"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 19:11:00.436" level="INFO">
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified entity tag might not have matched the part's entity tag.</msg>
<status status="PASS" starttime="20220516 19:11:00.434" endtime="20220516 19:11:00.436"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 19:11:00.437" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 19:11:00.436" endtime="20220516 19:11:00.437"/>
</kw>
<msg timestamp="20220516 19:11:00.438" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20220516 19:10:59.528" endtime="20220516 19:11:00.438"/>
</kw>
<msg timestamp="20220516 19:11:00.439" level="INFO">${result} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20220516 19:10:59.526" endtime="20220516 19:11:00.439"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidPart</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 19:11:00.440" endtime="20220516 19:11:00.440"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=2},{ETag=etag2,PartNumber=1}]'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 19:11:00.449" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id e74f13c5-5d44-409b-ac23-cb3498bbf6de-108313199205220446 --bucket encrypted --key ozone-test-0287649663/multipartKey3 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=2},{ETag=etag2,PartNumber=1}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 19:11:01.529" level="INFO">${rc} = 255</msg>
<msg timestamp="20220516 19:11:01.529" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20220516 19:11:00.444" endtime="20220516 19:11:01.529"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 19:11:01.531" level="INFO">
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified entity tag might not have matched the part's entity tag.</msg>
<status status="PASS" starttime="20220516 19:11:01.530" endtime="20220516 19:11:01.531"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 19:11:01.532" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 19:11:01.531" endtime="20220516 19:11:01.532"/>
</kw>
<msg timestamp="20220516 19:11:01.532" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20220516 19:11:00.443" endtime="20220516 19:11:01.533"/>
</kw>
<msg timestamp="20220516 19:11:01.533" level="INFO">${result} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20220516 19:11:00.441" endtime="20220516 19:11:01.533"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidPart</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 19:11:01.533" endtime="20220516 19:11:01.534"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create Random file</arg>
<arg>5</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create Random file">
<arg>5</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 19:11:01.547" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=5 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 19:11:01.596" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 19:11:01.596" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 19:11:01.541" endtime="20220516 19:11:01.596"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 19:11:01.599" level="INFO"/>
<status status="PASS" starttime="20220516 19:11:01.597" endtime="20220516 19:11:01.599"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 19:11:01.600" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 19:11:01.599" endtime="20220516 19:11:01.600"/>
</kw>
<status status="PASS" starttime="20220516 19:11:01.540" endtime="20220516 19:11:01.601"/>
</kw>
<msg timestamp="20220516 19:11:01.601" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 19:11:01.540" endtime="20220516 19:11:01.602"/>
</kw>
<status status="PASS" starttime="20220516 19:11:01.536" endtime="20220516 19:11:01.602"/>
</kw>
<status status="PASS" starttime="20220516 19:11:01.534" endtime="20220516 19:11:01.603"/>
</kw>
<status status="PASS" starttime="20220516 19:11:01.534" endtime="20220516 19:11:01.603"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --part-number 1 --body /tmp/part1 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 19:11:01.610" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket encrypted --key ozone-test-0287649663/multipartKey3 --part-number 1 --body /tmp/part1 --upload-id e74f13c5-5d44-409b-ac23-cb3498bbf6de-108313199205220446 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 19:15:58.480" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20220516 19:11:01.606" endtime="20220516 19:15:58.480"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20220516 19:15:58.481" endtime="20220516 19:15:58.481"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20220516 19:15:58.481" endtime="20220516 19:15:58.481"/>
</kw>
<status status="FAIL" starttime="20220516 19:11:01.605" endtime="20220516 19:15:58.482"/>
</kw>
<msg timestamp="20220516 19:15:58.482" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20220516 19:11:01.605" endtime="20220516 19:15:58.482"/>
</kw>
<status status="FAIL" starttime="20220516 19:11:01.604" endtime="20220516 19:15:58.483"/>
</kw>
<status status="FAIL" starttime="20220516 19:11:01.603" endtime="20220516 19:15:58.483"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<status status="NOT RUN" starttime="20220516 19:15:58.483" endtime="20220516 19:15:58.483"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220516 19:15:58.483" endtime="20220516 19:15:58.484"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --part-number 2 --body /tmp/part1 --upload-id ${uploadID}</arg>
<status status="NOT RUN" starttime="20220516 19:15:58.484" endtime="20220516 19:15:58.484"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag2}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<status status="NOT RUN" starttime="20220516 19:15:58.484" endtime="20220516 19:15:58.484"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220516 19:15:58.484" endtime="20220516 19:15:58.484"/>
</kw>
<kw name="Execute" library="os">
<arg>echo "Part3" &gt; /tmp/part3</arg>
<status status="NOT RUN" starttime="20220516 19:15:58.485" endtime="20220516 19:15:58.485"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --part-number 3 --body /tmp/part3 --upload-id ${uploadID}</arg>
<status status="NOT RUN" starttime="20220516 19:15:58.485" endtime="20220516 19:15:58.485"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag3}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<status status="NOT RUN" starttime="20220516 19:15:58.485" endtime="20220516 19:15:58.485"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220516 19:15:58.486" endtime="20220516 19:15:58.486"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=1},{ETag=etag2,PartNumber=2}]'</arg>
<arg>255</arg>
<status status="NOT RUN" starttime="20220516 19:15:58.486" endtime="20220516 19:15:58.486"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidPart</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220516 19:15:58.486" endtime="20220516 19:15:58.486"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1},{ETag=etag2,PartNumber=2}]'</arg>
<arg>255</arg>
<status status="NOT RUN" starttime="20220516 19:15:58.486" endtime="20220516 19:15:58.487"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidPart</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220516 19:15:58.487" endtime="20220516 19:15:58.487"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=4},{ETag=etag2,PartNumber=2}]'</arg>
<arg>255</arg>
<status status="NOT RUN" starttime="20220516 19:15:58.487" endtime="20220516 19:15:58.487"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidPartOrder</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220516 19:15:58.487" endtime="20220516 19:15:58.487"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1},{ETag=${eTag3},PartNumber=3}]'</arg>
<status status="NOT RUN" starttime="20220516 19:15:58.487" endtime="20220516 19:15:58.488"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220516 19:15:58.488" endtime="20220516 19:15:58.488"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220516 19:15:58.488" endtime="20220516 19:15:58.488"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220516 19:15:58.488" endtime="20220516 19:15:58.489"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 /tmp/${PREFIX}-multipartKey3.result</arg>
<status status="NOT RUN" starttime="20220516 19:15:58.489" endtime="20220516 19:15:58.489"/>
</kw>
<kw name="Execute" library="os">
<arg>cat /tmp/part1 /tmp/part3 &gt; /tmp/${PREFIX}-multipartKey3</arg>
<status status="NOT RUN" starttime="20220516 19:15:58.489" endtime="20220516 19:15:58.489"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/${PREFIX}-multipartKey3</arg>
<arg>/tmp/${PREFIX}-multipartKey3.result</arg>
<status status="NOT RUN" starttime="20220516 19:15:58.490" endtime="20220516 19:15:58.490"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20220516 19:10:58.479" endtime="20220516 19:15:58.490">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-s5-s7-t6" name="Test abort Multipart upload">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220516 19:15:58.496" level="INFO">${randStr} = 7677120257</msg>
<status status="PASS" starttime="20220516 19:15:58.495" endtime="20220516 19:15:58.496"/>
</kw>
<msg timestamp="20220516 19:15:58.497" level="INFO">${random} = ozone-test-7677120257</msg>
<status status="PASS" starttime="20220516 19:15:58.494" endtime="20220516 19:15:58.497"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220516 19:15:58.498" level="INFO">${PREFIX} = ozone-test-7677120257</msg>
<status status="PASS" starttime="20220516 19:15:58.498" endtime="20220516 19:15:58.499"/>
</kw>
<status status="PASS" starttime="20220516 19:15:58.492" endtime="20220516 19:15:58.499"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey4 --storage-class REDUCED_REDUNDANCY</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 19:15:58.504" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket encrypted --key ozone-test-7677120257/multipartKey4 --storage-class REDUCED_REDUNDANCY 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 19:15:59.408" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 19:15:59.408" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-7677120257/multipartKey4",
    "UploadId": "5b820b2a-daae-4ea8-9884-5bf007139e58-108313218860646500"
}</msg>
<status status="PASS" starttime="20220516 19:15:58.501" endtime="20220516 19:15:59.408"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 19:15:59.412" level="INFO">{
    "Bucket": "encrypted",
    "Key": "ozone-test-7677120257/multipartKey4",
    "UploadId": "5b820b2a-daae-4ea8-9884-5bf007139e58-108313218860646500"
}</msg>
<status status="PASS" starttime="20220516 19:15:59.410" endtime="20220516 19:15:59.412"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 19:15:59.414" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 19:15:59.413" endtime="20220516 19:15:59.415"/>
</kw>
<status status="PASS" starttime="20220516 19:15:58.501" endtime="20220516 19:15:59.416"/>
</kw>
<msg timestamp="20220516 19:15:59.416" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 19:15:58.500" endtime="20220516 19:15:59.417"/>
</kw>
<msg timestamp="20220516 19:15:59.418" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-7677120257/multipartKey4",
    "UploadId": "5b820b2a-daae-4ea8-9884-5bf007139e58-108313218860646500"
}</msg>
<status status="PASS" starttime="20220516 19:15:58.500" endtime="20220516 19:15:59.418"/>
</kw>
<msg timestamp="20220516 19:15:59.418" level="INFO">${result} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-7677120257/multipartKey4",
    "UploadId": "5b820b2a-daae-4ea8-9884-5bf007139e58-108313218860646500"
}</msg>
<status status="PASS" starttime="20220516 19:15:58.499" endtime="20220516 19:15:59.418"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 19:15:59.424" level="INFO">Running command 'echo '{
    "Bucket": "encrypted",
    "Key": "ozone-test-7677120257/multipartKey4",
    "UploadId": "5b820b2a-daae-4ea8-9884-5bf007139e58-108313218860646500"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 19:15:59.482" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 19:15:59.482" level="INFO">${output} = 5b820b2a-daae-4ea8-9884-5bf007139e58-108313218860646500</msg>
<status status="PASS" starttime="20220516 19:15:59.420" endtime="20220516 19:15:59.482"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 19:15:59.484" level="INFO">5b820b2a-daae-4ea8-9884-5bf007139e58-108313218860646500</msg>
<status status="PASS" starttime="20220516 19:15:59.483" endtime="20220516 19:15:59.484"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 19:15:59.485" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 19:15:59.484" endtime="20220516 19:15:59.485"/>
</kw>
<msg timestamp="20220516 19:15:59.485" level="INFO">${uploadID} = 5b820b2a-daae-4ea8-9884-5bf007139e58-108313218860646500</msg>
<status status="PASS" starttime="20220516 19:15:59.419" endtime="20220516 19:15:59.485"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 19:15:59.486" endtime="20220516 19:15:59.487"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 19:15:59.487" endtime="20220516 19:15:59.488"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 19:15:59.488" endtime="20220516 19:15:59.489"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>abort-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey4 --upload-id ${uploadID}</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 19:15:59.497" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket encrypted --key ozone-test-7677120257/multipartKey4 --upload-id 5b820b2a-daae-4ea8-9884-5bf007139e58-108313218860646500 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 19:16:00.406" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 19:16:00.406" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 19:15:59.493" endtime="20220516 19:16:00.406"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 19:16:00.413" level="INFO"/>
<status status="PASS" starttime="20220516 19:16:00.407" endtime="20220516 19:16:00.413"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 19:16:00.415" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 19:16:00.414" endtime="20220516 19:16:00.420"/>
</kw>
<msg timestamp="20220516 19:16:00.420" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 19:15:59.491" endtime="20220516 19:16:00.420"/>
</kw>
<msg timestamp="20220516 19:16:00.421" level="INFO">${result} = </msg>
<status status="PASS" starttime="20220516 19:15:59.490" endtime="20220516 19:16:00.421"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220516 19:15:58.491" endtime="20220516 19:16:00.424"/>
</test>
<test id="s1-s5-s7-t7" name="Test abort Multipart upload with invalid uploadId">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220516 19:16:00.431" level="INFO">${randStr} = 9232445752</msg>
<status status="PASS" starttime="20220516 19:16:00.431" endtime="20220516 19:16:00.431"/>
</kw>
<msg timestamp="20220516 19:16:00.432" level="INFO">${random} = ozone-test-9232445752</msg>
<status status="PASS" starttime="20220516 19:16:00.430" endtime="20220516 19:16:00.432"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220516 19:16:00.433" level="INFO">${PREFIX} = ozone-test-9232445752</msg>
<status status="PASS" starttime="20220516 19:16:00.432" endtime="20220516 19:16:00.433"/>
</kw>
<status status="PASS" starttime="20220516 19:16:00.430" endtime="20220516 19:16:00.433"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>abort-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --upload-id "random"</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 19:16:00.450" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket encrypted --key ozone-test-9232445752/multipartKey5 --upload-id "random" 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 19:16:01.343" level="INFO">${rc} = 255</msg>
<msg timestamp="20220516 19:16:01.343" level="INFO">${output} = 
An error occurred (NoSuchUpload) when calling the AbortMultipartUpload operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have bee...</msg>
<status status="PASS" starttime="20220516 19:16:00.439" endtime="20220516 19:16:01.343"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 19:16:01.344" level="INFO">
An error occurred (NoSuchUpload) when calling the AbortMultipartUpload operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have been aborted or completed.</msg>
<status status="PASS" starttime="20220516 19:16:01.343" endtime="20220516 19:16:01.344"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 19:16:01.345" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 19:16:01.345" endtime="20220516 19:16:01.345"/>
</kw>
<msg timestamp="20220516 19:16:01.346" level="INFO">${output} = 
An error occurred (NoSuchUpload) when calling the AbortMultipartUpload operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have bee...</msg>
<status status="PASS" starttime="20220516 19:16:00.434" endtime="20220516 19:16:01.346"/>
</kw>
<msg timestamp="20220516 19:16:01.347" level="INFO">${result} = 
An error occurred (NoSuchUpload) when calling the AbortMultipartUpload operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have bee...</msg>
<status status="PASS" starttime="20220516 19:16:00.433" endtime="20220516 19:16:01.347"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220516 19:16:00.425" endtime="20220516 19:16:01.348"/>
</test>
<test id="s1-s5-s7-t8" name="Upload part with Incorrect uploadID">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220516 19:16:01.355" level="INFO">${randStr} = 2878977978</msg>
<status status="PASS" starttime="20220516 19:16:01.354" endtime="20220516 19:16:01.355"/>
</kw>
<msg timestamp="20220516 19:16:01.356" level="INFO">${random} = ozone-test-2878977978</msg>
<status status="PASS" starttime="20220516 19:16:01.352" endtime="20220516 19:16:01.356"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220516 19:16:01.357" level="INFO">${PREFIX} = ozone-test-2878977978</msg>
<status status="PASS" starttime="20220516 19:16:01.356" endtime="20220516 19:16:01.357"/>
</kw>
<status status="PASS" starttime="20220516 19:16:01.351" endtime="20220516 19:16:01.358"/>
</kw>
<kw name="Execute" library="os">
<arg>echo "Multipart upload" &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 19:16:01.364" level="INFO">Running command 'echo "Multipart upload" &gt; /tmp/testfile'.</msg>
<msg timestamp="20220516 19:16:01.367" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 19:16:01.367" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 19:16:01.361" endtime="20220516 19:16:01.367"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 19:16:01.368" level="INFO"/>
<status status="PASS" starttime="20220516 19:16:01.368" endtime="20220516 19:16:01.369"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 19:16:01.369" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 19:16:01.369" endtime="20220516 19:16:01.370"/>
</kw>
<status status="PASS" starttime="20220516 19:16:01.360" endtime="20220516 19:16:01.370"/>
</kw>
<msg timestamp="20220516 19:16:01.370" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 19:16:01.359" endtime="20220516 19:16:01.372"/>
</kw>
<status status="PASS" starttime="20220516 19:16:01.358" endtime="20220516 19:16:01.373"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey --part-number 1 --body /tmp/testfile --upload-id "random"</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 19:16:01.379" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket encrypted --key ozone-test-2878977978/multipartKey --part-number 1 --body /tmp/testfile --upload-id "random" 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 19:16:02.271" level="INFO">${rc} = 255</msg>
<msg timestamp="20220516 19:16:02.271" level="INFO">${output} = 
An error occurred (NoSuchUpload) when calling the UploadPart operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have been aborted ...</msg>
<status status="PASS" starttime="20220516 19:16:01.376" endtime="20220516 19:16:02.271"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 19:16:02.273" level="INFO">
An error occurred (NoSuchUpload) when calling the UploadPart operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have been aborted or completed.</msg>
<status status="PASS" starttime="20220516 19:16:02.272" endtime="20220516 19:16:02.273"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 19:16:02.274" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 19:16:02.273" endtime="20220516 19:16:02.274"/>
</kw>
<msg timestamp="20220516 19:16:02.275" level="INFO">${output} = 
An error occurred (NoSuchUpload) when calling the UploadPart operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have been aborted ...</msg>
<status status="PASS" starttime="20220516 19:16:01.375" endtime="20220516 19:16:02.275"/>
</kw>
<msg timestamp="20220516 19:16:02.276" level="INFO">${result} = 
An error occurred (NoSuchUpload) when calling the UploadPart operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have been aborted ...</msg>
<status status="PASS" starttime="20220516 19:16:01.373" endtime="20220516 19:16:02.276"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchUpload</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 19:16:02.276" endtime="20220516 19:16:02.277"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220516 19:16:01.349" endtime="20220516 19:16:02.277"/>
</test>
<test id="s1-s5-s7-t9" name="Test list parts">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220516 19:16:02.283" level="INFO">${randStr} = 2941275644</msg>
<status status="PASS" starttime="20220516 19:16:02.282" endtime="20220516 19:16:02.283"/>
</kw>
<msg timestamp="20220516 19:16:02.284" level="INFO">${random} = ozone-test-2941275644</msg>
<status status="PASS" starttime="20220516 19:16:02.281" endtime="20220516 19:16:02.284"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220516 19:16:02.284" level="INFO">${PREFIX} = ozone-test-2941275644</msg>
<status status="PASS" starttime="20220516 19:16:02.284" endtime="20220516 19:16:02.285"/>
</kw>
<status status="PASS" starttime="20220516 19:16:02.280" endtime="20220516 19:16:02.285"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey5</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 19:16:02.293" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket encrypted --key ozone-test-2941275644/multipartKey5 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 19:16:03.171" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 19:16:03.172" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-2941275644/multipartKey5",
    "UploadId": "7b061cd6-b86f-4d02-a0fb-f4ca2b0d461f-108313219109879910"
}</msg>
<status status="PASS" starttime="20220516 19:16:02.289" endtime="20220516 19:16:03.172"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 19:16:03.176" level="INFO">{
    "Bucket": "encrypted",
    "Key": "ozone-test-2941275644/multipartKey5",
    "UploadId": "7b061cd6-b86f-4d02-a0fb-f4ca2b0d461f-108313219109879910"
}</msg>
<status status="PASS" starttime="20220516 19:16:03.173" endtime="20220516 19:16:03.176"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 19:16:03.178" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 19:16:03.176" endtime="20220516 19:16:03.178"/>
</kw>
<status status="PASS" starttime="20220516 19:16:02.288" endtime="20220516 19:16:03.178"/>
</kw>
<msg timestamp="20220516 19:16:03.179" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 19:16:02.288" endtime="20220516 19:16:03.180"/>
</kw>
<msg timestamp="20220516 19:16:03.180" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-2941275644/multipartKey5",
    "UploadId": "7b061cd6-b86f-4d02-a0fb-f4ca2b0d461f-108313219109879910"
}</msg>
<status status="PASS" starttime="20220516 19:16:02.287" endtime="20220516 19:16:03.180"/>
</kw>
<msg timestamp="20220516 19:16:03.181" level="INFO">${result} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-2941275644/multipartKey5",
    "UploadId": "7b061cd6-b86f-4d02-a0fb-f4ca2b0d461f-108313219109879910"
}</msg>
<status status="PASS" starttime="20220516 19:16:02.286" endtime="20220516 19:16:03.181"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 19:16:03.186" level="INFO">Running command 'echo '{
    "Bucket": "encrypted",
    "Key": "ozone-test-2941275644/multipartKey5",
    "UploadId": "7b061cd6-b86f-4d02-a0fb-f4ca2b0d461f-108313219109879910"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 19:16:03.248" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 19:16:03.249" level="INFO">${output} = 7b061cd6-b86f-4d02-a0fb-f4ca2b0d461f-108313219109879910</msg>
<status status="PASS" starttime="20220516 19:16:03.183" endtime="20220516 19:16:03.249"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 19:16:03.252" level="INFO">7b061cd6-b86f-4d02-a0fb-f4ca2b0d461f-108313219109879910</msg>
<status status="PASS" starttime="20220516 19:16:03.250" endtime="20220516 19:16:03.252"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 19:16:03.254" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 19:16:03.252" endtime="20220516 19:16:03.254"/>
</kw>
<msg timestamp="20220516 19:16:03.255" level="INFO">${uploadID} = 7b061cd6-b86f-4d02-a0fb-f4ca2b0d461f-108313219109879910</msg>
<status status="PASS" starttime="20220516 19:16:03.181" endtime="20220516 19:16:03.255"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 19:16:03.256" endtime="20220516 19:16:03.257"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 19:16:03.257" endtime="20220516 19:16:03.258"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 19:16:03.258" endtime="20220516 19:16:03.259"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create Random file</arg>
<arg>5</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create Random file">
<arg>5</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 19:16:03.266" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=5 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 19:16:03.312" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 19:16:03.312" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 19:16:03.263" endtime="20220516 19:16:03.312"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 19:16:03.315" level="INFO"/>
<status status="PASS" starttime="20220516 19:16:03.314" endtime="20220516 19:16:03.315"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 19:16:03.316" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 19:16:03.315" endtime="20220516 19:16:03.317"/>
</kw>
<status status="PASS" starttime="20220516 19:16:03.262" endtime="20220516 19:16:03.317"/>
</kw>
<msg timestamp="20220516 19:16:03.318" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 19:16:03.261" endtime="20220516 19:16:03.319"/>
</kw>
<status status="PASS" starttime="20220516 19:16:03.261" endtime="20220516 19:16:03.319"/>
</kw>
<status status="PASS" starttime="20220516 19:16:03.260" endtime="20220516 19:16:03.320"/>
</kw>
<status status="PASS" starttime="20220516 19:16:03.260" endtime="20220516 19:16:03.320"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --part-number 1 --body /tmp/part1 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 19:16:03.329" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket encrypted --key ozone-test-2941275644/multipartKey5 --part-number 1 --body /tmp/part1 --upload-id 7b061cd6-b86f-4d02-a0fb-f4ca2b0d461f-108313219109879910 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 19:21:02.279" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20220516 19:16:03.326" endtime="20220516 19:21:02.280"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20220516 19:21:02.280" endtime="20220516 19:21:02.280"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20220516 19:21:02.280" endtime="20220516 19:21:02.281"/>
</kw>
<status status="FAIL" starttime="20220516 19:16:03.324" endtime="20220516 19:21:02.281"/>
</kw>
<msg timestamp="20220516 19:21:02.281" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20220516 19:16:03.323" endtime="20220516 19:21:02.282"/>
</kw>
<status status="FAIL" starttime="20220516 19:16:03.322" endtime="20220516 19:21:02.282"/>
</kw>
<status status="FAIL" starttime="20220516 19:16:03.320" endtime="20220516 19:21:02.283"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<status status="NOT RUN" starttime="20220516 19:21:02.283" endtime="20220516 19:21:02.283"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220516 19:21:02.284" endtime="20220516 19:21:02.284"/>
</kw>
<kw name="Execute" library="os">
<arg>echo "Part2" &gt; /tmp/part2</arg>
<status status="NOT RUN" starttime="20220516 19:21:02.284" endtime="20220516 19:21:02.284"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --part-number 2 --body /tmp/part2 --upload-id ${uploadID}</arg>
<status status="NOT RUN" starttime="20220516 19:21:02.284" endtime="20220516 19:21:02.284"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag2}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<status status="NOT RUN" starttime="20220516 19:21:02.284" endtime="20220516 19:21:02.284"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220516 19:21:02.285" endtime="20220516 19:21:02.285"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-parts --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --upload-id ${uploadID}</arg>
<status status="NOT RUN" starttime="20220516 19:21:02.285" endtime="20220516 19:21:02.285"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${part1}</var>
<arg>echo '${result}' | jq -r '.Parts[0].ETag'</arg>
<arg>0</arg>
<status status="NOT RUN" starttime="20220516 19:21:02.285" endtime="20220516 19:21:02.285"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${part2}</var>
<arg>echo '${result}' | jq -r '.Parts[1].ETag'</arg>
<arg>0</arg>
<status status="NOT RUN" starttime="20220516 19:21:02.286" endtime="20220516 19:21:02.286"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${part1}</arg>
<arg>${eTag1}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20220516 19:21:02.286" endtime="20220516 19:21:02.286"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${part2}</arg>
<arg>${eTag2}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220516 19:21:02.286" endtime="20220516 19:21:02.286"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>STANDARD</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220516 19:21:02.286" endtime="20220516 19:21:02.286"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-parts --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --upload-id ${uploadID} --max-items 1</arg>
<status status="NOT RUN" starttime="20220516 19:21:02.287" endtime="20220516 19:21:02.287"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${part1}</var>
<arg>echo '${result}' | jq -r '.Parts[0].ETag'</arg>
<arg>0</arg>
<status status="NOT RUN" starttime="20220516 19:21:02.288" endtime="20220516 19:21:02.288"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${token}</var>
<arg>echo '${result}' | jq -r '.NextToken'</arg>
<arg>0</arg>
<status status="NOT RUN" starttime="20220516 19:21:02.289" endtime="20220516 19:21:02.289"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${part1}</arg>
<arg>${eTag1}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20220516 19:21:02.289" endtime="20220516 19:21:02.289"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>STANDARD</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220516 19:21:02.289" endtime="20220516 19:21:02.289"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-parts --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --upload-id ${uploadID} --max-items 1 --starting-token ${token}</arg>
<status status="NOT RUN" starttime="20220516 19:21:02.289" endtime="20220516 19:21:02.289"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${part2}</var>
<arg>echo '${result}' | jq -r '.Parts[0].ETag'</arg>
<arg>0</arg>
<status status="NOT RUN" starttime="20220516 19:21:02.290" endtime="20220516 19:21:02.290"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${part2}</arg>
<arg>${eTag2}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20220516 19:21:02.290" endtime="20220516 19:21:02.290"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>STANDARD</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220516 19:21:02.290" endtime="20220516 19:21:02.290"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>abort-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --upload-id ${uploadID}</arg>
<arg>0</arg>
<status status="NOT RUN" starttime="20220516 19:21:02.290" endtime="20220516 19:21:02.290"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20220516 19:16:02.279" endtime="20220516 19:21:02.291">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-s5-s7-t10" name="Test Multipart Upload with the simplified aws s3 cp API">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220516 19:21:02.297" level="INFO">${randStr} = 5821970844</msg>
<status status="PASS" starttime="20220516 19:21:02.297" endtime="20220516 19:21:02.298"/>
</kw>
<msg timestamp="20220516 19:21:02.298" level="INFO">${random} = ozone-test-5821970844</msg>
<status status="PASS" starttime="20220516 19:21:02.296" endtime="20220516 19:21:02.298"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220516 19:21:02.300" level="INFO">${PREFIX} = ozone-test-5821970844</msg>
<status status="PASS" starttime="20220516 19:21:02.299" endtime="20220516 19:21:02.300"/>
</kw>
<status status="PASS" starttime="20220516 19:21:02.294" endtime="20220516 19:21:02.300"/>
</kw>
<kw name="Create Random file">
<arg>22</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 19:21:02.306" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=22 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 19:21:02.495" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 19:21:02.495" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 19:21:02.304" endtime="20220516 19:21:02.495"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 19:21:02.497" level="INFO"/>
<status status="PASS" starttime="20220516 19:21:02.496" endtime="20220516 19:21:02.497"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 19:21:02.498" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 19:21:02.497" endtime="20220516 19:21:02.498"/>
</kw>
<status status="PASS" starttime="20220516 19:21:02.303" endtime="20220516 19:21:02.499"/>
</kw>
<msg timestamp="20220516 19:21:02.499" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 19:21:02.302" endtime="20220516 19:21:02.500"/>
</kw>
<status status="PASS" starttime="20220516 19:21:02.301" endtime="20220516 19:21:02.500"/>
</kw>
<status status="PASS" starttime="20220516 19:21:02.300" endtime="20220516 19:21:02.500"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arg>cp /tmp/part1 s3://${BUCKET}/mpyawscli</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 19:21:02.510" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/part1 s3://encrypted/mpyawscli 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 19:26:02.293" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20220516 19:21:02.505" endtime="20220516 19:26:02.293"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20220516 19:26:02.294" endtime="20220516 19:26:02.294"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20220516 19:26:02.294" endtime="20220516 19:26:02.294"/>
</kw>
<status status="FAIL" starttime="20220516 19:21:02.504" endtime="20220516 19:26:02.296"/>
</kw>
<msg timestamp="20220516 19:26:02.296" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20220516 19:21:02.504" endtime="20220516 19:26:02.297"/>
</kw>
<status status="FAIL" starttime="20220516 19:21:02.503" endtime="20220516 19:26:02.297"/>
</kw>
<status status="FAIL" starttime="20220516 19:21:02.501" endtime="20220516 19:26:02.298"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arg>cp s3://${BUCKET}/mpyawscli /tmp/part1.result</arg>
<status status="NOT RUN" starttime="20220516 19:26:02.298" endtime="20220516 19:26:02.298"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arg>rm s3://${BUCKET}/mpyawscli</arg>
<status status="NOT RUN" starttime="20220516 19:26:02.298" endtime="20220516 19:26:02.298"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/part1</arg>
<arg>/tmp/part1.result</arg>
<status status="NOT RUN" starttime="20220516 19:26:02.298" endtime="20220516 19:26:02.299"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20220516 19:21:02.292" endtime="20220516 19:26:02.299">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-s5-s7-t11" name="Test Multipart Upload Put With Copy">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220516 19:26:02.305" level="INFO">${randStr} = 9614470293</msg>
<status status="PASS" starttime="20220516 19:26:02.304" endtime="20220516 19:26:02.305"/>
</kw>
<msg timestamp="20220516 19:26:02.305" level="INFO">${random} = ozone-test-9614470293</msg>
<status status="PASS" starttime="20220516 19:26:02.303" endtime="20220516 19:26:02.306"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220516 19:26:02.306" level="INFO">${PREFIX} = ozone-test-9614470293</msg>
<status status="PASS" starttime="20220516 19:26:02.306" endtime="20220516 19:26:02.306"/>
</kw>
<status status="PASS" starttime="20220516 19:26:02.303" endtime="20220516 19:26:02.307"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create Random file</arg>
<arg>5</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create Random file">
<arg>5</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 19:26:02.314" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=5 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 19:26:02.373" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 19:26:02.374" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 19:26:02.311" endtime="20220516 19:26:02.374"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 19:26:02.376" level="INFO"/>
<status status="PASS" starttime="20220516 19:26:02.374" endtime="20220516 19:26:02.377"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 19:26:02.379" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 19:26:02.378" endtime="20220516 19:26:02.379"/>
</kw>
<status status="PASS" starttime="20220516 19:26:02.310" endtime="20220516 19:26:02.380"/>
</kw>
<msg timestamp="20220516 19:26:02.380" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 19:26:02.309" endtime="20220516 19:26:02.381"/>
</kw>
<status status="PASS" starttime="20220516 19:26:02.308" endtime="20220516 19:26:02.381"/>
</kw>
<status status="PASS" starttime="20220516 19:26:02.307" endtime="20220516 19:26:02.381"/>
</kw>
<status status="PASS" starttime="20220516 19:26:02.307" endtime="20220516 19:26:02.381"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/copytest/source --body /tmp/part1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 19:26:02.389" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket encrypted --key ozone-test-9614470293/copytest/source --body /tmp/part1 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 19:31:02.302" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20220516 19:26:02.385" endtime="20220516 19:31:02.303"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20220516 19:31:02.303" endtime="20220516 19:31:02.303"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20220516 19:31:02.304" endtime="20220516 19:31:02.304"/>
</kw>
<status status="FAIL" starttime="20220516 19:26:02.384" endtime="20220516 19:31:02.304"/>
</kw>
<msg timestamp="20220516 19:31:02.304" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20220516 19:26:02.384" endtime="20220516 19:31:02.305"/>
</kw>
<status status="FAIL" starttime="20220516 19:26:02.383" endtime="20220516 19:31:02.305"/>
</kw>
<status status="FAIL" starttime="20220516 19:26:02.382" endtime="20220516 19:31:02.305"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/copytest/destination</arg>
<status status="NOT RUN" starttime="20220516 19:31:02.306" endtime="20220516 19:31:02.306"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<status status="NOT RUN" starttime="20220516 19:31:02.307" endtime="20220516 19:31:02.307"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220516 19:31:02.307" endtime="20220516 19:31:02.307"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220516 19:31:02.307" endtime="20220516 19:31:02.307"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copytest/destination --upload-id ${uploadID} --part-number 1 --copy-source ${BUCKET}/${PREFIX}/copytest/source</arg>
<status status="NOT RUN" starttime="20220516 19:31:02.307" endtime="20220516 19:31:02.307"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220516 19:31:02.308" endtime="20220516 19:31:02.308"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LastModified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220516 19:31:02.308" endtime="20220516 19:31:02.308"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
<status status="NOT RUN" starttime="20220516 19:31:02.308" endtime="20220516 19:31:02.308"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/copytest/destination --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1}]'</arg>
<status status="NOT RUN" starttime="20220516 19:31:02.309" endtime="20220516 19:31:02.309"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/copytest/destination /tmp/part-result</arg>
<status status="NOT RUN" starttime="20220516 19:31:02.309" endtime="20220516 19:31:02.309"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/part1</arg>
<arg>/tmp/part-result</arg>
<status status="NOT RUN" starttime="20220516 19:31:02.309" endtime="20220516 19:31:02.309"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20220516 19:26:02.301" endtime="20220516 19:31:02.309">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-s5-s7-t12" name="Test Multipart Upload Put With Copy and range">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220516 19:31:02.315" level="INFO">${randStr} = 0993856957</msg>
<status status="PASS" starttime="20220516 19:31:02.313" endtime="20220516 19:31:02.315"/>
</kw>
<msg timestamp="20220516 19:31:02.315" level="INFO">${random} = ozone-test-0993856957</msg>
<status status="PASS" starttime="20220516 19:31:02.313" endtime="20220516 19:31:02.315"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220516 19:31:02.316" level="INFO">${PREFIX} = ozone-test-0993856957</msg>
<status status="PASS" starttime="20220516 19:31:02.315" endtime="20220516 19:31:02.316"/>
</kw>
<status status="PASS" starttime="20220516 19:31:02.312" endtime="20220516 19:31:02.316"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create Random file</arg>
<arg>10</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create Random file">
<arg>10</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 19:31:02.325" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=10 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 19:31:02.420" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 19:31:02.420" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 19:31:02.322" endtime="20220516 19:31:02.420"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 19:31:02.422" level="INFO"/>
<status status="PASS" starttime="20220516 19:31:02.421" endtime="20220516 19:31:02.422"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 19:31:02.423" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 19:31:02.422" endtime="20220516 19:31:02.423"/>
</kw>
<status status="PASS" starttime="20220516 19:31:02.321" endtime="20220516 19:31:02.424"/>
</kw>
<msg timestamp="20220516 19:31:02.424" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 19:31:02.320" endtime="20220516 19:31:02.425"/>
</kw>
<status status="PASS" starttime="20220516 19:31:02.319" endtime="20220516 19:31:02.425"/>
</kw>
<status status="PASS" starttime="20220516 19:31:02.317" endtime="20220516 19:31:02.426"/>
</kw>
<status status="PASS" starttime="20220516 19:31:02.317" endtime="20220516 19:31:02.426"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/copyrange/source --body /tmp/part1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 19:31:02.431" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket encrypted --key ozone-test-0993856957/copyrange/source --body /tmp/part1 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 19:36:02.312" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20220516 19:31:02.429" endtime="20220516 19:36:02.312"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20220516 19:36:02.313" endtime="20220516 19:36:02.313"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20220516 19:36:02.313" endtime="20220516 19:36:02.314"/>
</kw>
<status status="FAIL" starttime="20220516 19:31:02.428" endtime="20220516 19:36:02.314"/>
</kw>
<msg timestamp="20220516 19:36:02.314" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20220516 19:31:02.427" endtime="20220516 19:36:02.316"/>
</kw>
<status status="FAIL" starttime="20220516 19:31:02.427" endtime="20220516 19:36:02.316"/>
</kw>
<status status="FAIL" starttime="20220516 19:31:02.426" endtime="20220516 19:36:02.316"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination</arg>
<status status="NOT RUN" starttime="20220516 19:36:02.317" endtime="20220516 19:36:02.317"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<status status="NOT RUN" starttime="20220516 19:36:02.317" endtime="20220516 19:36:02.317"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220516 19:36:02.318" endtime="20220516 19:36:02.318"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220516 19:36:02.318" endtime="20220516 19:36:02.318"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 1 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=0-10485757</arg>
<status status="NOT RUN" starttime="20220516 19:36:02.318" endtime="20220516 19:36:02.318"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220516 19:36:02.318" endtime="20220516 19:36:02.319"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LastModified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220516 19:36:02.319" endtime="20220516 19:36:02.319"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
<status status="NOT RUN" starttime="20220516 19:36:02.319" endtime="20220516 19:36:02.319"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 2 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=10485758-10485759</arg>
<status status="NOT RUN" starttime="20220516 19:36:02.319" endtime="20220516 19:36:02.319"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220516 19:36:02.320" endtime="20220516 19:36:02.320"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LastModified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220516 19:36:02.320" endtime="20220516 19:36:02.320"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag2}</var>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
<status status="NOT RUN" starttime="20220516 19:36:02.320" endtime="20220516 19:36:02.320"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1},{ETag=${eTag2},PartNumber=2}]'</arg>
<status status="NOT RUN" starttime="20220516 19:36:02.320" endtime="20220516 19:36:02.321"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination /tmp/part-result</arg>
<status status="NOT RUN" starttime="20220516 19:36:02.321" endtime="20220516 19:36:02.321"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/part1</arg>
<arg>/tmp/part-result</arg>
<status status="NOT RUN" starttime="20220516 19:36:02.321" endtime="20220516 19:36:02.321"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20220516 19:31:02.311" endtime="20220516 19:36:02.322">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-s5-s7-t13" name="Test Multipart Upload Put With Copy and range with IfModifiedSince">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220516 19:36:02.327" level="INFO">${randStr} = 7303020340</msg>
<status status="PASS" starttime="20220516 19:36:02.327" endtime="20220516 19:36:02.327"/>
</kw>
<msg timestamp="20220516 19:36:02.328" level="INFO">${random} = ozone-test-7303020340</msg>
<status status="PASS" starttime="20220516 19:36:02.326" endtime="20220516 19:36:02.328"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220516 19:36:02.330" level="INFO">${PREFIX} = ozone-test-7303020340</msg>
<status status="PASS" starttime="20220516 19:36:02.329" endtime="20220516 19:36:02.330"/>
</kw>
<status status="PASS" starttime="20220516 19:36:02.325" endtime="20220516 19:36:02.330"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create Random file</arg>
<arg>10</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create Random file">
<arg>10</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 19:36:02.343" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=10 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 19:36:02.447" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 19:36:02.448" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 19:36:02.339" endtime="20220516 19:36:02.448"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 19:36:02.450" level="INFO"/>
<status status="PASS" starttime="20220516 19:36:02.449" endtime="20220516 19:36:02.450"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 19:36:02.451" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 19:36:02.450" endtime="20220516 19:36:02.451"/>
</kw>
<status status="PASS" starttime="20220516 19:36:02.338" endtime="20220516 19:36:02.451"/>
</kw>
<msg timestamp="20220516 19:36:02.452" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 19:36:02.333" endtime="20220516 19:36:02.452"/>
</kw>
<status status="PASS" starttime="20220516 19:36:02.332" endtime="20220516 19:36:02.453"/>
</kw>
<status status="PASS" starttime="20220516 19:36:02.331" endtime="20220516 19:36:02.453"/>
</kw>
<status status="PASS" starttime="20220516 19:36:02.331" endtime="20220516 19:36:02.453"/>
</kw>
<kw name="Get Current Date" library="DateTime">
<var>${curDate}</var>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20220516 19:36:02.454" level="INFO">${curDate} = 2022-05-16 19:36:02.454</msg>
<status status="PASS" starttime="20220516 19:36:02.453" endtime="20220516 19:36:02.454"/>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<var>${beforeCreate}</var>
<arg>${curDate}</arg>
<arg>1 day</arg>
<doc>Subtracts time from date and returns the resulting date.</doc>
<msg timestamp="20220516 19:36:02.460" level="INFO">${beforeCreate} = 2022-05-15 19:36:02.454</msg>
<status status="PASS" starttime="20220516 19:36:02.454" endtime="20220516 19:36:02.460"/>
</kw>
<kw name="Add Time To Date" library="DateTime">
<var>${tomorrow}</var>
<arg>${curDate}</arg>
<arg>1 day</arg>
<doc>Adds time to date and returns the resulting date.</doc>
<msg timestamp="20220516 19:36:02.461" level="INFO">${tomorrow} = 2022-05-17 19:36:02.454</msg>
<status status="PASS" starttime="20220516 19:36:02.460" endtime="20220516 19:36:02.461"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/copyrange/source --body /tmp/part1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 19:36:02.467" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket encrypted --key ozone-test-7303020340/copyrange/source --body /tmp/part1 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 19:41:02.325" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20220516 19:36:02.465" endtime="20220516 19:41:02.325"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20220516 19:41:02.326" endtime="20220516 19:41:02.326"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20220516 19:41:02.326" endtime="20220516 19:41:02.326"/>
</kw>
<status status="FAIL" starttime="20220516 19:36:02.464" endtime="20220516 19:41:02.327"/>
</kw>
<msg timestamp="20220516 19:41:02.327" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20220516 19:36:02.463" endtime="20220516 19:41:02.328"/>
</kw>
<status status="FAIL" starttime="20220516 19:36:02.463" endtime="20220516 19:41:02.328"/>
</kw>
<status status="FAIL" starttime="20220516 19:36:02.462" endtime="20220516 19:41:02.328"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination</arg>
<status status="NOT RUN" starttime="20220516 19:41:02.330" endtime="20220516 19:41:02.330"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<status status="NOT RUN" starttime="20220516 19:41:02.330" endtime="20220516 19:41:02.331"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220516 19:41:02.331" endtime="20220516 19:41:02.331"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220516 19:41:02.331" endtime="20220516 19:41:02.331"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/copyrange/source</arg>
<status status="NOT RUN" starttime="20220516 19:41:02.331" endtime="20220516 19:41:02.331"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${lastModified}</var>
<arg>echo '${result}' | jq -r '.LastModified'</arg>
<arg>0</arg>
<status status="NOT RUN" starttime="20220516 19:41:02.332" endtime="20220516 19:41:02.332"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${LastModified}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220516 19:41:02.332" endtime="20220516 19:41:02.332"/>
</kw>
<kw name="Convert Date" library="DateTime">
<var>${lmDate}</var>
<arg>${lastModified}</arg>
<arg>date_format=%a, %d %b %Y %H:%M:%S %Z</arg>
<doc>Converts between supported `date formats`.</doc>
<status status="NOT RUN" starttime="20220516 19:41:02.332" endtime="20220516 19:41:02.332"/>
</kw>
<kw name="Add Time To Date" library="DateTime">
<var>${afterCreate}</var>
<arg>${lmDate}</arg>
<arg>3 seconds</arg>
<doc>Adds time to date and returns the resulting date.</doc>
<status status="NOT RUN" starttime="20220516 19:41:02.332" endtime="20220516 19:41:02.332"/>
</kw>
<kw name="Wait Til Date Past">
<arg>${afterCreate}</arg>
<status status="NOT RUN" starttime="20220516 19:41:02.333" endtime="20220516 19:41:02.333"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 1 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=0-10485757 --copy-source-if-modified-since '${afterCreate}'</arg>
<arg>255</arg>
<status status="NOT RUN" starttime="20220516 19:41:02.333" endtime="20220516 19:41:02.333"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PreconditionFailed</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220516 19:41:02.333" endtime="20220516 19:41:02.333"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 2 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=10485758-10485759 --copy-source-if-unmodified-since '${beforeCreate}'</arg>
<arg>255</arg>
<status status="NOT RUN" starttime="20220516 19:41:02.333" endtime="20220516 19:41:02.334"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PreconditionFailed</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220516 19:41:02.334" endtime="20220516 19:41:02.334"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 1 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=0-10485757 --copy-source-if-modified-since '${beforeCreate}'</arg>
<arg>0</arg>
<status status="NOT RUN" starttime="20220516 19:41:02.334" endtime="20220516 19:41:02.334"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220516 19:41:02.334" endtime="20220516 19:41:02.335"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LastModified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220516 19:41:02.336" endtime="20220516 19:41:02.336"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
<status status="NOT RUN" starttime="20220516 19:41:02.336" endtime="20220516 19:41:02.336"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 2 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=10485758-10485759 --copy-source-if-unmodified-since '${afterCreate}'</arg>
<arg>0</arg>
<status status="NOT RUN" starttime="20220516 19:41:02.336" endtime="20220516 19:41:02.336"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220516 19:41:02.336" endtime="20220516 19:41:02.337"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LastModified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220516 19:41:02.337" endtime="20220516 19:41:02.337"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag2}</var>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
<status status="NOT RUN" starttime="20220516 19:41:02.337" endtime="20220516 19:41:02.337"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 1 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=0-10485757 --copy-source-if-modified-since '${tomorrow}'</arg>
<arg>0</arg>
<status status="NOT RUN" starttime="20220516 19:41:02.337" endtime="20220516 19:41:02.338"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220516 19:41:02.338" endtime="20220516 19:41:02.338"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LastModified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220516 19:41:02.338" endtime="20220516 19:41:02.338"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
<status status="NOT RUN" starttime="20220516 19:41:02.338" endtime="20220516 19:41:02.339"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1},{ETag=${eTag2},PartNumber=2}]'</arg>
<status status="NOT RUN" starttime="20220516 19:41:02.339" endtime="20220516 19:41:02.339"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination /tmp/part-result</arg>
<status status="NOT RUN" starttime="20220516 19:41:02.340" endtime="20220516 19:41:02.340"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/part1</arg>
<arg>/tmp/part-result</arg>
<status status="NOT RUN" starttime="20220516 19:41:02.340" endtime="20220516 19:41:02.340"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20220516 19:36:02.324" endtime="20220516 19:41:02.340">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-s5-s7-t14" name="Test Multipart Upload list">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220516 19:41:02.346" level="INFO">${randStr} = 0229944507</msg>
<status status="PASS" starttime="20220516 19:41:02.345" endtime="20220516 19:41:02.346"/>
</kw>
<msg timestamp="20220516 19:41:02.347" level="INFO">${random} = ozone-test-0229944507</msg>
<status status="PASS" starttime="20220516 19:41:02.344" endtime="20220516 19:41:02.347"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220516 19:41:02.348" level="INFO">${PREFIX} = ozone-test-0229944507</msg>
<status status="PASS" starttime="20220516 19:41:02.347" endtime="20220516 19:41:02.349"/>
</kw>
<status status="PASS" starttime="20220516 19:41:02.343" endtime="20220516 19:41:02.349"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/listtest/key1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 19:41:02.357" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket encrypted --key ozone-test-0229944507/listtest/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 19:41:03.216" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 19:41:03.216" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-0229944507/listtest/key1",
    "UploadId": "fe381aa1-da7c-4a98-b4ca-e5a69c021854-108313317418336395"
}</msg>
<status status="PASS" starttime="20220516 19:41:02.353" endtime="20220516 19:41:03.216"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 19:41:03.218" level="INFO">{
    "Bucket": "encrypted",
    "Key": "ozone-test-0229944507/listtest/key1",
    "UploadId": "fe381aa1-da7c-4a98-b4ca-e5a69c021854-108313317418336395"
}</msg>
<status status="PASS" starttime="20220516 19:41:03.217" endtime="20220516 19:41:03.218"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 19:41:03.219" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 19:41:03.218" endtime="20220516 19:41:03.219"/>
</kw>
<status status="PASS" starttime="20220516 19:41:02.352" endtime="20220516 19:41:03.220"/>
</kw>
<msg timestamp="20220516 19:41:03.220" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 19:41:02.352" endtime="20220516 19:41:03.220"/>
</kw>
<msg timestamp="20220516 19:41:03.221" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-0229944507/listtest/key1",
    "UploadId": "fe381aa1-da7c-4a98-b4ca-e5a69c021854-108313317418336395"
}</msg>
<status status="PASS" starttime="20220516 19:41:02.350" endtime="20220516 19:41:03.221"/>
</kw>
<msg timestamp="20220516 19:41:03.221" level="INFO">${result} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-0229944507/listtest/key1",
    "UploadId": "fe381aa1-da7c-4a98-b4ca-e5a69c021854-108313317418336395"
}</msg>
<status status="PASS" starttime="20220516 19:41:02.349" endtime="20220516 19:41:03.222"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID1}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 19:41:03.226" level="INFO">Running command 'echo '{
    "Bucket": "encrypted",
    "Key": "ozone-test-0229944507/listtest/key1",
    "UploadId": "fe381aa1-da7c-4a98-b4ca-e5a69c021854-108313317418336395"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 19:41:03.281" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 19:41:03.281" level="INFO">${output} = fe381aa1-da7c-4a98-b4ca-e5a69c021854-108313317418336395</msg>
<status status="PASS" starttime="20220516 19:41:03.223" endtime="20220516 19:41:03.281"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 19:41:03.283" level="INFO">fe381aa1-da7c-4a98-b4ca-e5a69c021854-108313317418336395</msg>
<status status="PASS" starttime="20220516 19:41:03.282" endtime="20220516 19:41:03.283"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 19:41:03.284" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 19:41:03.283" endtime="20220516 19:41:03.284"/>
</kw>
<msg timestamp="20220516 19:41:03.284" level="INFO">${uploadID1} = fe381aa1-da7c-4a98-b4ca-e5a69c021854-108313317418336395</msg>
<status status="PASS" starttime="20220516 19:41:03.222" endtime="20220516 19:41:03.284"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 19:41:03.285" endtime="20220516 19:41:03.285"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/listtest/key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 19:41:03.285" endtime="20220516 19:41:03.286"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 19:41:03.286" endtime="20220516 19:41:03.287"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/listtest/key2</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 19:41:03.293" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket encrypted --key ozone-test-0229944507/listtest/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 19:41:04.053" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 19:41:04.053" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-0229944507/listtest/key2",
    "UploadId": "a5444ac3-6675-4f88-97b6-98e72f04419b-108313317473386636"
}</msg>
<status status="PASS" starttime="20220516 19:41:03.291" endtime="20220516 19:41:04.053"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 19:41:04.054" level="INFO">{
    "Bucket": "encrypted",
    "Key": "ozone-test-0229944507/listtest/key2",
    "UploadId": "a5444ac3-6675-4f88-97b6-98e72f04419b-108313317473386636"
}</msg>
<status status="PASS" starttime="20220516 19:41:04.053" endtime="20220516 19:41:04.054"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 19:41:04.055" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 19:41:04.055" endtime="20220516 19:41:04.055"/>
</kw>
<status status="PASS" starttime="20220516 19:41:03.290" endtime="20220516 19:41:04.056"/>
</kw>
<msg timestamp="20220516 19:41:04.056" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 19:41:03.289" endtime="20220516 19:41:04.056"/>
</kw>
<msg timestamp="20220516 19:41:04.057" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-0229944507/listtest/key2",
    "UploadId": "a5444ac3-6675-4f88-97b6-98e72f04419b-108313317473386636"
}</msg>
<status status="PASS" starttime="20220516 19:41:03.288" endtime="20220516 19:41:04.057"/>
</kw>
<msg timestamp="20220516 19:41:04.057" level="INFO">${result} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-0229944507/listtest/key2",
    "UploadId": "a5444ac3-6675-4f88-97b6-98e72f04419b-108313317473386636"
}</msg>
<status status="PASS" starttime="20220516 19:41:03.287" endtime="20220516 19:41:04.057"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID2}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 19:41:04.061" level="INFO">Running command 'echo '{
    "Bucket": "encrypted",
    "Key": "ozone-test-0229944507/listtest/key2",
    "UploadId": "a5444ac3-6675-4f88-97b6-98e72f04419b-108313317473386636"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 19:41:04.116" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 19:41:04.116" level="INFO">${output} = a5444ac3-6675-4f88-97b6-98e72f04419b-108313317473386636</msg>
<status status="PASS" starttime="20220516 19:41:04.058" endtime="20220516 19:41:04.116"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 19:41:04.117" level="INFO">a5444ac3-6675-4f88-97b6-98e72f04419b-108313317473386636</msg>
<status status="PASS" starttime="20220516 19:41:04.117" endtime="20220516 19:41:04.118"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 19:41:04.118" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 19:41:04.118" endtime="20220516 19:41:04.119"/>
</kw>
<msg timestamp="20220516 19:41:04.119" level="INFO">${uploadID2} = a5444ac3-6675-4f88-97b6-98e72f04419b-108313317473386636</msg>
<status status="PASS" starttime="20220516 19:41:04.058" endtime="20220516 19:41:04.119"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 19:41:04.119" endtime="20220516 19:41:04.120"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/listtest/key2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 19:41:04.120" endtime="20220516 19:41:04.121"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 19:41:04.121" endtime="20220516 19:41:04.122"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-multipart-uploads --bucket ${BUCKET} --prefix ${PREFIX}/listtest</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 19:41:04.127" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-multipart-uploads --bucket encrypted --prefix ozone-test-0229944507/listtest 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 19:41:04.921" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 19:41:04.921" level="INFO">${output} = {
    "Uploads": [
        {
            "UploadId": "fe381aa1-da7c-4a98-b4ca-e5a69c021854-108313317418336395",
            "Key": "ozone-test-0229944507/listtest/key1",
            "Initiated": "2022...</msg>
<status status="PASS" starttime="20220516 19:41:04.125" endtime="20220516 19:41:04.921"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 19:41:04.923" level="INFO">{
    "Uploads": [
        {
            "UploadId": "fe381aa1-da7c-4a98-b4ca-e5a69c021854-108313317418336395",
            "Key": "ozone-test-0229944507/listtest/key1",
            "Initiated": "2022-05-16T19:41:03.146Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "a5444ac3-6675-4f88-97b6-98e72f04419b-108313317473386636",
            "Key": "ozone-test-0229944507/listtest/key2",
            "Initiated": "2022-05-16T19:41:03.986Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        }
    ]
}</msg>
<status status="PASS" starttime="20220516 19:41:04.922" endtime="20220516 19:41:04.923"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 19:41:04.923" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 19:41:04.923" endtime="20220516 19:41:04.924"/>
</kw>
<status status="PASS" starttime="20220516 19:41:04.124" endtime="20220516 19:41:04.924"/>
</kw>
<msg timestamp="20220516 19:41:04.924" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 19:41:04.124" endtime="20220516 19:41:04.925"/>
</kw>
<msg timestamp="20220516 19:41:04.925" level="INFO">${output} = {
    "Uploads": [
        {
            "UploadId": "fe381aa1-da7c-4a98-b4ca-e5a69c021854-108313317418336395",
            "Key": "ozone-test-0229944507/listtest/key1",
            "Initiated": "2022...</msg>
<status status="PASS" starttime="20220516 19:41:04.123" endtime="20220516 19:41:04.925"/>
</kw>
<msg timestamp="20220516 19:41:04.926" level="INFO">${result} = {
    "Uploads": [
        {
            "UploadId": "fe381aa1-da7c-4a98-b4ca-e5a69c021854-108313317418336395",
            "Key": "ozone-test-0229944507/listtest/key1",
            "Initiated": "2022...</msg>
<status status="PASS" starttime="20220516 19:41:04.122" endtime="20220516 19:41:04.926"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${uploadID1}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 19:41:04.926" endtime="20220516 19:41:04.927"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${uploadID2}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 19:41:04.927" endtime="20220516 19:41:04.928"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${count}</var>
<arg>echo '${result}' | jq -r '.Uploads | length'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 19:41:04.931" level="INFO">Running command 'echo '{
    "Uploads": [
        {
            "UploadId": "fe381aa1-da7c-4a98-b4ca-e5a69c021854-108313317418336395",
            "Key": "ozone-test-0229944507/listtest/key1",
            "Initiated": "2022-05-16T19:41:03.146Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "a5444ac3-6675-4f88-97b6-98e72f04419b-108313317473386636",
            "Key": "ozone-test-0229944507/listtest/key2",
            "Initiated": "2022-05-16T19:41:03.986Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        }
    ]
}' | jq -r '.Uploads | length' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 19:41:04.992" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 19:41:04.992" level="INFO">${output} = 2</msg>
<status status="PASS" starttime="20220516 19:41:04.928" endtime="20220516 19:41:04.992"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 19:41:04.993" level="INFO">2</msg>
<status status="PASS" starttime="20220516 19:41:04.992" endtime="20220516 19:41:04.993"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 19:41:04.994" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 19:41:04.994" endtime="20220516 19:41:04.994"/>
</kw>
<msg timestamp="20220516 19:41:04.995" level="INFO">${count} = 2</msg>
<status status="PASS" starttime="20220516 19:41:04.928" endtime="20220516 19:41:04.995"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${count}</arg>
<arg>2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220516 19:41:04.995" endtime="20220516 19:41:04.996"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220516 19:41:02.341" endtime="20220516 19:41:04.996"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="FAIL" starttime="20220516 18:50:40.441" endtime="20220516 19:41:04.999"/>
</suite>
<suite id="s1-s5-s8" name="Objectcopy" source="/opt/hadoop/smoketest/s3/objectcopy.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220516 19:41:05.022" level="INFO">${randStr} = 6984450067</msg>
<status status="PASS" starttime="20220516 19:41:05.022" endtime="20220516 19:41:05.022"/>
</kw>
<msg timestamp="20220516 19:41:05.023" level="INFO">${random} = ozone-test-6984450067</msg>
<status status="PASS" starttime="20220516 19:41:05.021" endtime="20220516 19:41:05.023"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220516 19:41:05.025" level="INFO">${PREFIX} = ozone-test-6984450067</msg>
<status status="PASS" starttime="20220516 19:41:05.023" endtime="20220516 19:41:05.025"/>
</kw>
<status status="PASS" starttime="20220516 19:41:05.021" endtime="20220516 19:41:05.025"/>
</kw>
<status status="PASS" starttime="20220516 19:41:05.021" endtime="20220516 19:41:05.025"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which apt-get</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 19:41:05.028" level="INFO">Running command 'which apt-get 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 19:41:05.031" level="INFO">${rc} = 1</msg>
<msg timestamp="20220516 19:41:05.031" level="INFO">${output} = which: no apt-get in (/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin)</msg>
<status status="PASS" starttime="20220516 19:41:05.026" endtime="20220516 19:41:05.031"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220516 19:41:05.032" endtime="20220516 19:41:05.033"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>yum --help</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 19:41:05.035" level="INFO">Running command 'yum --help 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 19:41:05.211" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 19:41:05.212" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
ovl: Error while doing RPMdb copy-up:
[Errno 13] Permission denied: '/var/lib/rpm/Obsoletename'
Usage: yum [options] COMMAND

List of Commands:

check          Check...</msg>
<status status="PASS" starttime="20220516 19:41:05.033" endtime="20220516 19:41:05.212"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Install aws cli s3 centos" library="commonawslib">
<kw name="Execute" library="os">
<arg>sudo -E yum install -y awscli</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 19:41:05.218" level="INFO">Running command 'sudo -E yum install -y awscli 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 19:41:05.773" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 19:41:05.774" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirror.fcix.net
 * epel: mirror.lshiy.com
 * extras: repo.ialab.dsu.edu
 * updates: mirrors.xmission.com
Package ...</msg>
<status status="PASS" starttime="20220516 19:41:05.216" endtime="20220516 19:41:05.774"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 19:41:05.776" level="INFO">Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirror.fcix.net
 * epel: mirror.lshiy.com
 * extras: repo.ialab.dsu.edu
 * updates: mirrors.xmission.com
Package awscli-1.14.28-5.el7_5.1.noarch already installed and latest version
Nothing to do</msg>
<status status="PASS" starttime="20220516 19:41:05.775" endtime="20220516 19:41:05.776"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 19:41:05.777" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 19:41:05.777" endtime="20220516 19:41:05.778"/>
</kw>
<status status="PASS" starttime="20220516 19:41:05.215" endtime="20220516 19:41:05.779"/>
</kw>
<msg timestamp="20220516 19:41:05.779" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 19:41:05.214" endtime="20220516 19:41:05.780"/>
</kw>
<status status="PASS" starttime="20220516 19:41:05.214" endtime="20220516 19:41:05.780"/>
</kw>
<status status="PASS" starttime="20220516 19:41:05.213" endtime="20220516 19:41:05.781"/>
</kw>
<status status="PASS" starttime="20220516 19:41:05.212" endtime="20220516 19:41:05.781"/>
</kw>
<status status="PASS" starttime="20220516 19:41:05.026" endtime="20220516 19:41:05.781"/>
</kw>
<status status="PASS" starttime="20220516 19:41:05.025" endtime="20220516 19:41:05.781"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 19:41:05.788" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 19:41:05.793" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 19:41:05.793" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20220516 19:41:05.785" endtime="20220516 19:41:05.793"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 19:41:05.794" level="INFO">s3g</msg>
<status status="PASS" starttime="20220516 19:41:05.793" endtime="20220516 19:41:05.794"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 19:41:05.795" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 19:41:05.794" endtime="20220516 19:41:05.795"/>
</kw>
<status status="PASS" starttime="20220516 19:41:05.785" endtime="20220516 19:41:05.795"/>
</kw>
<msg timestamp="20220516 19:41:05.796" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 19:41:05.784" endtime="20220516 19:41:05.797"/>
</kw>
<msg timestamp="20220516 19:41:05.797" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20220516 19:41:05.784" endtime="20220516 19:41:05.797"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220516 19:41:05.800" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220516 19:41:05.797" endtime="20220516 19:41:05.800"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 19:41:05.807" level="INFO">Running command 'kinit -k testuser/s3g@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 19:41:05.866" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 19:41:05.866" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 19:41:05.805" endtime="20220516 19:41:05.866"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 19:41:05.868" level="INFO"/>
<status status="PASS" starttime="20220516 19:41:05.867" endtime="20220516 19:41:05.868"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 19:41:05.870" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 19:41:05.869" endtime="20220516 19:41:05.870"/>
</kw>
<status status="PASS" starttime="20220516 19:41:05.803" endtime="20220516 19:41:05.871"/>
</kw>
<msg timestamp="20220516 19:41:05.871" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 19:41:05.803" endtime="20220516 19:41:05.872"/>
</kw>
<status status="PASS" starttime="20220516 19:41:05.801" endtime="20220516 19:41:05.872"/>
</kw>
<status status="PASS" starttime="20220516 19:41:05.800" endtime="20220516 19:41:05.872"/>
</kw>
<status status="PASS" starttime="20220516 19:41:05.783" endtime="20220516 19:41:05.873"/>
</kw>
<status status="PASS" starttime="20220516 19:41:05.783" endtime="20220516 19:41:05.873"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 19:41:05.882" level="INFO">Running command 'ozone s3 getsecret  2&gt;&amp;1'.</msg>
<msg timestamp="20220516 19:41:13.574" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 19:41:13.574" level="INFO">${output} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=f7769bc1a657ea184c2c54edea939f94012aba2596b4499d251cf819b952cada</msg>
<status status="PASS" starttime="20220516 19:41:05.877" endtime="20220516 19:41:13.574"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 19:41:13.575" level="INFO">awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=f7769bc1a657ea184c2c54edea939f94012aba2596b4499d251cf819b952cada</msg>
<status status="PASS" starttime="20220516 19:41:13.575" endtime="20220516 19:41:13.575"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 19:41:13.576" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 19:41:13.576" endtime="20220516 19:41:13.576"/>
</kw>
<status status="PASS" starttime="20220516 19:41:05.876" endtime="20220516 19:41:13.577"/>
</kw>
<msg timestamp="20220516 19:41:13.578" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 19:41:05.876" endtime="20220516 19:41:13.579"/>
</kw>
<msg timestamp="20220516 19:41:13.581" level="INFO">${result} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=f7769bc1a657ea184c2c54edea939f94012aba2596b4499d251cf819b952cada</msg>
<status status="PASS" starttime="20220516 19:41:05.875" endtime="20220516 19:41:13.581"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20220516 19:41:13.582" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20220516 19:41:13.581" endtime="20220516 19:41:13.582"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>sdsdasaasdasd</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20220516 19:41:13.585" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20220516 19:41:13.583" endtime="20220516 19:41:13.585"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20220516 19:41:13.586" level="INFO">${secret} = ['f7769bc1a657ea184c2c54edea939f94012aba2596b4499d251cf819b952cada']</msg>
<status status="PASS" starttime="20220516 19:41:13.585" endtime="20220516 19:41:13.586"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220516 19:41:13.588" level="INFO">${accessKey} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220516 19:41:13.586" endtime="20220516 19:41:13.588"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220516 19:41:13.590" level="INFO">${secret} = f7769bc1a657ea184c2c54edea939f94012aba2596b4499d251cf819b952cada</msg>
<status status="PASS" starttime="20220516 19:41:13.588" endtime="20220516 19:41:13.590"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 19:41:13.596" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 19:41:14.244" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 19:41:14.244" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 19:41:13.592" endtime="20220516 19:41:14.244"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 19:41:14.246" level="INFO"/>
<status status="PASS" starttime="20220516 19:41:14.245" endtime="20220516 19:41:14.246"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 19:41:14.247" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 19:41:14.246" endtime="20220516 19:41:14.247"/>
</kw>
<status status="PASS" starttime="20220516 19:41:13.592" endtime="20220516 19:41:14.247"/>
</kw>
<msg timestamp="20220516 19:41:14.247" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 19:41:13.591" endtime="20220516 19:41:14.248"/>
</kw>
<status status="PASS" starttime="20220516 19:41:13.590" endtime="20220516 19:41:14.249"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 19:41:14.253" level="INFO">Running command 'aws configure set aws_access_key_id testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 19:41:14.959" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 19:41:14.960" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 19:41:14.251" endtime="20220516 19:41:14.960"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 19:41:14.962" level="INFO"/>
<status status="PASS" starttime="20220516 19:41:14.960" endtime="20220516 19:41:14.962"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 19:41:14.963" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 19:41:14.963" endtime="20220516 19:41:14.963"/>
</kw>
<status status="PASS" starttime="20220516 19:41:14.250" endtime="20220516 19:41:14.964"/>
</kw>
<msg timestamp="20220516 19:41:14.964" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 19:41:14.249" endtime="20220516 19:41:14.965"/>
</kw>
<status status="PASS" starttime="20220516 19:41:14.249" endtime="20220516 19:41:14.965"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 19:41:14.970" level="INFO">Running command 'aws configure set aws_secret_access_key f7769bc1a657ea184c2c54edea939f94012aba2596b4499d251cf819b952cada 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 19:41:15.718" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 19:41:15.719" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 19:41:14.967" endtime="20220516 19:41:15.719"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 19:41:15.721" level="INFO"/>
<status status="PASS" starttime="20220516 19:41:15.720" endtime="20220516 19:41:15.721"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 19:41:15.723" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 19:41:15.721" endtime="20220516 19:41:15.723"/>
</kw>
<status status="PASS" starttime="20220516 19:41:14.967" endtime="20220516 19:41:15.725"/>
</kw>
<msg timestamp="20220516 19:41:15.725" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 19:41:14.966" endtime="20220516 19:41:15.727"/>
</kw>
<status status="PASS" starttime="20220516 19:41:14.965" endtime="20220516 19:41:15.727"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 19:41:15.733" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 19:41:16.444" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 19:41:16.445" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 19:41:15.729" endtime="20220516 19:41:16.445"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 19:41:16.447" level="INFO"/>
<status status="PASS" starttime="20220516 19:41:16.446" endtime="20220516 19:41:16.447"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 19:41:16.449" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 19:41:16.447" endtime="20220516 19:41:16.450"/>
</kw>
<status status="PASS" starttime="20220516 19:41:15.728" endtime="20220516 19:41:16.450"/>
</kw>
<msg timestamp="20220516 19:41:16.450" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 19:41:15.728" endtime="20220516 19:41:16.451"/>
</kw>
<status status="PASS" starttime="20220516 19:41:15.727" endtime="20220516 19:41:16.452"/>
</kw>
<status status="PASS" starttime="20220516 19:41:05.874" endtime="20220516 19:41:16.452"/>
</kw>
<status status="PASS" starttime="20220516 19:41:05.873" endtime="20220516 19:41:16.453"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220516 19:41:16.453" endtime="20220516 19:41:16.454"/>
</kw>
<status status="PASS" starttime="20220516 19:41:05.782" endtime="20220516 19:41:16.454"/>
</kw>
<status status="PASS" starttime="20220516 19:41:05.781" endtime="20220516 19:41:16.455"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${BUCKET}</var>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20220516 19:41:16.456" endtime="20220516 19:41:16.457"/>
</kw>
<msg timestamp="20220516 19:41:16.457" level="INFO">${BUCKET} = encrypted</msg>
<status status="PASS" starttime="20220516 19:41:16.455" endtime="20220516 19:41:16.457"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220516 19:41:16.459" level="INFO">${BUCKET} = encrypted</msg>
<status status="PASS" starttime="20220516 19:41:16.458" endtime="20220516 19:41:16.459"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220516 19:41:16.459" endtime="20220516 19:41:16.460"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create encrypted bucket" library="commonawslib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20220516 19:41:16.462" endtime="20220516 19:41:16.463"/>
</kw>
<kw name="Bucket Exists" library="shell">
<var>${exists}</var>
<arg>o3://${OM_SERVICE_ID}/s3v/encrypted</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 19:41:16.468" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://om/s3v/encrypted 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 19:41:27.061" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 19:41:27.062" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "s3v",
  "name" : "encrypted",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 610298289,
  "usedNamespace" : 6,
  "creationTime" : "2022-05-16...</msg>
<status status="PASS" starttime="20220516 19:41:16.465" endtime="20220516 19:41:27.062"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20220516 19:41:27.062" endtime="20220516 19:41:27.063"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'VOLUME_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20220516 19:41:27.063" endtime="20220516 19:41:27.064"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'BUCKET_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20220516 19:41:27.064" endtime="20220516 19:41:27.064"/>
</kw>
<msg timestamp="20220516 19:41:27.065" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20220516 19:41:16.463" endtime="20220516 19:41:27.065"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${exists}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20220516 19:41:27.065" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 19:41:27.065" endtime="20220516 19:41:27.066"/>
</kw>
<status status="PASS" starttime="20220516 19:41:16.461" endtime="20220516 19:41:27.067"/>
</kw>
<status status="PASS" starttime="20220516 19:41:16.460" endtime="20220516 19:41:27.067"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220516 19:41:27.067" endtime="20220516 19:41:27.067"/>
</kw>
<status status="PASS" starttime="20220516 19:41:05.020" endtime="20220516 19:41:27.068"/>
</kw>
<test id="s1-s5-s8-t1" name="Copy Object Happy Scenario">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${DESTBUCKET}' == 'generated1'</arg>
<arg>Create Dest Bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create Dest Bucket">
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220516 19:41:27.072" level="INFO">${postfix} = 88039</msg>
<status status="PASS" starttime="20220516 19:41:27.071" endtime="20220516 19:41:27.072"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${DESTBUCKET}</arg>
<arg>destbucket-${postfix}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220516 19:41:27.074" level="INFO">${DESTBUCKET} = destbucket-88039</msg>
<status status="PASS" starttime="20220516 19:41:27.072" endtime="20220516 19:41:27.074"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>create-bucket --bucket ${DESTBUCKET}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 19:41:27.084" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket destbucket-88039 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 19:41:27.966" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 19:41:27.966" level="INFO">${output} = {
    "Location": "http://s3g:9878/destbucket-88039"
}</msg>
<status status="PASS" starttime="20220516 19:41:27.079" endtime="20220516 19:41:27.967"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 19:41:27.969" level="INFO">{
    "Location": "http://s3g:9878/destbucket-88039"
}</msg>
<status status="PASS" starttime="20220516 19:41:27.968" endtime="20220516 19:41:27.969"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 19:41:27.971" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 19:41:27.969" endtime="20220516 19:41:27.971"/>
</kw>
<status status="PASS" starttime="20220516 19:41:27.077" endtime="20220516 19:41:27.972"/>
</kw>
<msg timestamp="20220516 19:41:27.972" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 19:41:27.076" endtime="20220516 19:41:27.973"/>
</kw>
<msg timestamp="20220516 19:41:27.973" level="INFO">${output} = {
    "Location": "http://s3g:9878/destbucket-88039"
}</msg>
<status status="PASS" starttime="20220516 19:41:27.075" endtime="20220516 19:41:27.973"/>
</kw>
<status status="PASS" starttime="20220516 19:41:27.074" endtime="20220516 19:41:27.974"/>
</kw>
<status status="PASS" starttime="20220516 19:41:27.070" endtime="20220516 19:41:27.974"/>
</kw>
<status status="PASS" starttime="20220516 19:41:27.069" endtime="20220516 19:41:27.974"/>
</kw>
<kw name="Execute" library="os">
<arg>date &gt; /tmp/copyfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 19:41:27.981" level="INFO">Running command 'date &gt; /tmp/copyfile'.</msg>
<msg timestamp="20220516 19:41:27.983" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 19:41:27.983" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 19:41:27.976" endtime="20220516 19:41:27.983"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 19:41:27.985" level="INFO"/>
<status status="PASS" starttime="20220516 19:41:27.984" endtime="20220516 19:41:27.985"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 19:41:27.985" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 19:41:27.985" endtime="20220516 19:41:27.985"/>
</kw>
<status status="PASS" starttime="20220516 19:41:27.975" endtime="20220516 19:41:27.986"/>
</kw>
<msg timestamp="20220516 19:41:27.986" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 19:41:27.975" endtime="20220516 19:41:27.987"/>
</kw>
<status status="PASS" starttime="20220516 19:41:27.974" endtime="20220516 19:41:27.987"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/copyobject/key=value/f1 --body /tmp/copyfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 19:41:27.994" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket encrypted --key ozone-test-6984450067/copyobject/key=value/f1 --body /tmp/copyfile 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 19:46:27.069" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20220516 19:41:27.992" endtime="20220516 19:46:27.069"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20220516 19:46:27.070" endtime="20220516 19:46:27.070"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20220516 19:46:27.070" endtime="20220516 19:46:27.070"/>
</kw>
<status status="FAIL" starttime="20220516 19:41:27.991" endtime="20220516 19:46:27.071"/>
</kw>
<msg timestamp="20220516 19:46:27.071" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20220516 19:41:27.990" endtime="20220516 19:46:27.073"/>
</kw>
<status status="FAIL" starttime="20220516 19:41:27.989" endtime="20220516 19:46:27.073"/>
</kw>
<status status="FAIL" starttime="20220516 19:41:27.988" endtime="20220516 19:46:27.074"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/copyobject/key=value/</arg>
<status status="NOT RUN" starttime="20220516 19:46:27.074" endtime="20220516 19:46:27.074"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220516 19:46:27.075" endtime="20220516 19:46:27.075"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1 --copy-source ${BUCKET}/${PREFIX}/copyobject/key=value/f1</arg>
<status status="NOT RUN" starttime="20220516 19:46:27.075" endtime="20220516 19:46:27.075"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${DESTBUCKET} --prefix ${PREFIX}/copyobject/key=value/</arg>
<status status="NOT RUN" starttime="20220516 19:46:27.075" endtime="20220516 19:46:27.076"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220516 19:46:27.076" endtime="20220516 19:46:27.076"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1 --copy-source ${BUCKET}/${PREFIX}/copyobject/key=value/f1</arg>
<status status="NOT RUN" starttime="20220516 19:46:27.076" endtime="20220516 19:46:27.076"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${DESTBUCKET} --prefix ${PREFIX}/copyobject/key=value/</arg>
<status status="NOT RUN" starttime="20220516 19:46:27.077" endtime="20220516 19:46:27.077"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220516 19:46:27.077" endtime="20220516 19:46:27.077"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20220516 19:41:27.068" endtime="20220516 19:46:27.078">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-s5-s8-t2" name="Copy Object Where Bucket is not available">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket dfdfdfdfdfnonexistent --key ${PREFIX}/copyobject/key=value/f1 --copy-source ${BUCKET}/${PREFIX}/copyobject/key=value/f1</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 19:46:27.089" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket dfdfdfdfdfnonexistent --key ozone-test-6984450067/copyobject/key=value/f1 --copy-source encrypted/ozone-test-6984450067/copyobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 19:46:27.976" level="INFO">${rc} = 255</msg>
<msg timestamp="20220516 19:46:27.977" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20220516 19:46:27.083" endtime="20220516 19:46:27.977"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 19:46:27.980" level="INFO">
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20220516 19:46:27.978" endtime="20220516 19:46:27.980"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 19:46:27.982" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 19:46:27.981" endtime="20220516 19:46:27.982"/>
</kw>
<msg timestamp="20220516 19:46:27.983" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20220516 19:46:27.082" endtime="20220516 19:46:27.983"/>
</kw>
<msg timestamp="20220516 19:46:27.984" level="INFO">${result} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20220516 19:46:27.081" endtime="20220516 19:46:27.984"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchBucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 19:46:27.985" endtime="20220516 19:46:27.986"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1 --copy-source dfdfdfdfdfnonexistent/${PREFIX}/copyobject/key=value/f1</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 19:46:27.995" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket destbucket-88039 --key ozone-test-6984450067/copyobject/key=value/f1 --copy-source dfdfdfdfdfnonexistent/ozone-test-6984450067/copyobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 19:46:28.879" level="INFO">${rc} = 255</msg>
<msg timestamp="20220516 19:46:28.879" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20220516 19:46:27.991" endtime="20220516 19:46:28.879"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 19:46:28.882" level="INFO">
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20220516 19:46:28.880" endtime="20220516 19:46:28.882"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 19:46:28.884" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 19:46:28.883" endtime="20220516 19:46:28.885"/>
</kw>
<msg timestamp="20220516 19:46:28.885" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20220516 19:46:27.989" endtime="20220516 19:46:28.885"/>
</kw>
<msg timestamp="20220516 19:46:28.886" level="INFO">${result} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20220516 19:46:27.986" endtime="20220516 19:46:28.886"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchBucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 19:46:28.887" endtime="20220516 19:46:28.889"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220516 19:46:27.079" endtime="20220516 19:46:28.889"/>
</test>
<test id="s1-s5-s8-t3" name="Copy Object Where both source and dest are same with change to storageclass">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>copy-object --storage-class REDUCED_REDUNDANCY --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1 --copy-source ${DESTBUCKET}/${PREFIX}/copyobject/key=value/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 19:46:28.903" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --storage-class REDUCED_REDUNDANCY --bucket destbucket-88039 --key ozone-test-6984450067/copyobject/key=value/f1 --copy-source destbucket-88039/ozone-test-6984450067/copyobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 19:46:29.730" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 19:46:29.730" level="INFO">${output} = {
    "CopyObjectResult": {
        "ETag": "5860f722-cb69-4c8a-9902-8f424b6bb838",
        "LastModified": "2022-05-16T19:46:29.644Z"
    }
}</msg>
<status status="PASS" starttime="20220516 19:46:28.899" endtime="20220516 19:46:29.730"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 19:46:29.732" level="INFO">{
    "CopyObjectResult": {
        "ETag": "5860f722-cb69-4c8a-9902-8f424b6bb838",
        "LastModified": "2022-05-16T19:46:29.644Z"
    }
}</msg>
<status status="PASS" starttime="20220516 19:46:29.731" endtime="20220516 19:46:29.732"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 19:46:29.733" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 19:46:29.732" endtime="20220516 19:46:29.733"/>
</kw>
<status status="PASS" starttime="20220516 19:46:28.898" endtime="20220516 19:46:29.733"/>
</kw>
<msg timestamp="20220516 19:46:29.733" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 19:46:28.896" endtime="20220516 19:46:29.734"/>
</kw>
<msg timestamp="20220516 19:46:29.734" level="INFO">${output} = {
    "CopyObjectResult": {
        "ETag": "5860f722-cb69-4c8a-9902-8f424b6bb838",
        "LastModified": "2022-05-16T19:46:29.644Z"
    }
}</msg>
<status status="PASS" starttime="20220516 19:46:28.895" endtime="20220516 19:46:29.735"/>
</kw>
<msg timestamp="20220516 19:46:29.735" level="INFO">${result} = {
    "CopyObjectResult": {
        "ETag": "5860f722-cb69-4c8a-9902-8f424b6bb838",
        "LastModified": "2022-05-16T19:46:29.644Z"
    }
}</msg>
<status status="PASS" starttime="20220516 19:46:28.893" endtime="20220516 19:46:29.735"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 19:46:29.735" endtime="20220516 19:46:29.736"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220516 19:46:28.891" endtime="20220516 19:46:29.737"/>
</test>
<test id="s1-s5-s8-t4" name="Copy Object Where Key not available">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1 --copy-source ${BUCKET}/nonnonexistentkey</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 19:46:29.744" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket destbucket-88039 --key ozone-test-6984450067/copyobject/key=value/f1 --copy-source encrypted/nonnonexistentkey 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 19:46:30.626" level="INFO">${rc} = 255</msg>
<msg timestamp="20220516 19:46:30.627" level="INFO">${output} = 
An error occurred (NoSuchKey) when calling the CopyObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20220516 19:46:29.742" endtime="20220516 19:46:30.627"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 19:46:30.630" level="INFO">
An error occurred (NoSuchKey) when calling the CopyObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20220516 19:46:30.628" endtime="20220516 19:46:30.630"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 19:46:30.632" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 19:46:30.631" endtime="20220516 19:46:30.632"/>
</kw>
<msg timestamp="20220516 19:46:30.634" level="INFO">${output} = 
An error occurred (NoSuchKey) when calling the CopyObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20220516 19:46:29.741" endtime="20220516 19:46:30.634"/>
</kw>
<msg timestamp="20220516 19:46:30.635" level="INFO">${result} = 
An error occurred (NoSuchKey) when calling the CopyObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20220516 19:46:29.739" endtime="20220516 19:46:30.635"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 19:46:30.635" endtime="20220516 19:46:30.637"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220516 19:46:29.738" endtime="20220516 19:46:30.637"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="FAIL" starttime="20220516 19:41:05.004" endtime="20220516 19:46:30.640"/>
</suite>
<suite id="s1-s5-s9" name="Objectdelete" source="/opt/hadoop/smoketest/s3/objectdelete.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220516 19:46:30.669" level="INFO">${randStr} = 7484571733</msg>
<status status="PASS" starttime="20220516 19:46:30.669" endtime="20220516 19:46:30.669"/>
</kw>
<msg timestamp="20220516 19:46:30.669" level="INFO">${random} = ozone-test-7484571733</msg>
<status status="PASS" starttime="20220516 19:46:30.668" endtime="20220516 19:46:30.670"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220516 19:46:30.672" level="INFO">${PREFIX} = ozone-test-7484571733</msg>
<status status="PASS" starttime="20220516 19:46:30.670" endtime="20220516 19:46:30.672"/>
</kw>
<status status="PASS" starttime="20220516 19:46:30.668" endtime="20220516 19:46:30.672"/>
</kw>
<status status="PASS" starttime="20220516 19:46:30.667" endtime="20220516 19:46:30.673"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which apt-get</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 19:46:30.677" level="INFO">Running command 'which apt-get 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 19:46:30.680" level="INFO">${rc} = 1</msg>
<msg timestamp="20220516 19:46:30.680" level="INFO">${output} = which: no apt-get in (/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin)</msg>
<status status="PASS" starttime="20220516 19:46:30.674" endtime="20220516 19:46:30.680"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220516 19:46:30.681" endtime="20220516 19:46:30.682"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>yum --help</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 19:46:30.684" level="INFO">Running command 'yum --help 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 19:46:30.907" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 19:46:30.907" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
ovl: Error while doing RPMdb copy-up:
[Errno 13] Permission denied: '/var/lib/rpm/Obsoletename'
Usage: yum [options] COMMAND

List of Commands:

check          Check...</msg>
<status status="PASS" starttime="20220516 19:46:30.682" endtime="20220516 19:46:30.907"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Install aws cli s3 centos" library="commonawslib">
<kw name="Execute" library="os">
<arg>sudo -E yum install -y awscli</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 19:46:30.917" level="INFO">Running command 'sudo -E yum install -y awscli 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 19:46:31.493" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 19:46:31.493" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirror.fcix.net
 * epel: mirror.lshiy.com
 * extras: repo.ialab.dsu.edu
 * updates: mirrors.xmission.com
Package ...</msg>
<status status="PASS" starttime="20220516 19:46:30.914" endtime="20220516 19:46:31.493"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 19:46:31.495" level="INFO">Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirror.fcix.net
 * epel: mirror.lshiy.com
 * extras: repo.ialab.dsu.edu
 * updates: mirrors.xmission.com
Package awscli-1.14.28-5.el7_5.1.noarch already installed and latest version
Nothing to do</msg>
<status status="PASS" starttime="20220516 19:46:31.494" endtime="20220516 19:46:31.495"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 19:46:31.495" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 19:46:31.495" endtime="20220516 19:46:31.496"/>
</kw>
<status status="PASS" starttime="20220516 19:46:30.913" endtime="20220516 19:46:31.496"/>
</kw>
<msg timestamp="20220516 19:46:31.496" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 19:46:30.912" endtime="20220516 19:46:31.497"/>
</kw>
<status status="PASS" starttime="20220516 19:46:30.910" endtime="20220516 19:46:31.497"/>
</kw>
<status status="PASS" starttime="20220516 19:46:30.909" endtime="20220516 19:46:31.497"/>
</kw>
<status status="PASS" starttime="20220516 19:46:30.908" endtime="20220516 19:46:31.498"/>
</kw>
<status status="PASS" starttime="20220516 19:46:30.673" endtime="20220516 19:46:31.498"/>
</kw>
<status status="PASS" starttime="20220516 19:46:30.673" endtime="20220516 19:46:31.498"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 19:46:31.512" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 19:46:31.521" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 19:46:31.521" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20220516 19:46:31.505" endtime="20220516 19:46:31.521"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 19:46:31.522" level="INFO">s3g</msg>
<status status="PASS" starttime="20220516 19:46:31.522" endtime="20220516 19:46:31.522"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 19:46:31.523" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 19:46:31.523" endtime="20220516 19:46:31.523"/>
</kw>
<status status="PASS" starttime="20220516 19:46:31.505" endtime="20220516 19:46:31.524"/>
</kw>
<msg timestamp="20220516 19:46:31.524" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 19:46:31.505" endtime="20220516 19:46:31.525"/>
</kw>
<msg timestamp="20220516 19:46:31.525" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20220516 19:46:31.504" endtime="20220516 19:46:31.525"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220516 19:46:31.528" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220516 19:46:31.525" endtime="20220516 19:46:31.528"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 19:46:31.536" level="INFO">Running command 'kinit -k testuser/s3g@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 19:46:31.672" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 19:46:31.673" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 19:46:31.534" endtime="20220516 19:46:31.673"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 19:46:31.674" level="INFO"/>
<status status="PASS" starttime="20220516 19:46:31.673" endtime="20220516 19:46:31.674"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 19:46:31.675" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 19:46:31.675" endtime="20220516 19:46:31.675"/>
</kw>
<status status="PASS" starttime="20220516 19:46:31.532" endtime="20220516 19:46:31.676"/>
</kw>
<msg timestamp="20220516 19:46:31.676" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 19:46:31.531" endtime="20220516 19:46:31.677"/>
</kw>
<status status="PASS" starttime="20220516 19:46:31.530" endtime="20220516 19:46:31.677"/>
</kw>
<status status="PASS" starttime="20220516 19:46:31.528" endtime="20220516 19:46:31.677"/>
</kw>
<status status="PASS" starttime="20220516 19:46:31.504" endtime="20220516 19:46:31.677"/>
</kw>
<status status="PASS" starttime="20220516 19:46:31.503" endtime="20220516 19:46:31.677"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 19:46:31.684" level="INFO">Running command 'ozone s3 getsecret  2&gt;&amp;1'.</msg>
<msg timestamp="20220516 19:46:39.266" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 19:46:39.267" level="INFO">${output} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=f7769bc1a657ea184c2c54edea939f94012aba2596b4499d251cf819b952cada</msg>
<status status="PASS" starttime="20220516 19:46:31.681" endtime="20220516 19:46:39.267"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 19:46:39.268" level="INFO">awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=f7769bc1a657ea184c2c54edea939f94012aba2596b4499d251cf819b952cada</msg>
<status status="PASS" starttime="20220516 19:46:39.267" endtime="20220516 19:46:39.269"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 19:46:39.269" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 19:46:39.269" endtime="20220516 19:46:39.270"/>
</kw>
<status status="PASS" starttime="20220516 19:46:31.680" endtime="20220516 19:46:39.270"/>
</kw>
<msg timestamp="20220516 19:46:39.270" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 19:46:31.679" endtime="20220516 19:46:39.271"/>
</kw>
<msg timestamp="20220516 19:46:39.272" level="INFO">${result} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=f7769bc1a657ea184c2c54edea939f94012aba2596b4499d251cf819b952cada</msg>
<status status="PASS" starttime="20220516 19:46:31.679" endtime="20220516 19:46:39.272"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20220516 19:46:39.272" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20220516 19:46:39.272" endtime="20220516 19:46:39.272"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>sdsdasaasdasd</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20220516 19:46:39.274" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20220516 19:46:39.273" endtime="20220516 19:46:39.274"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20220516 19:46:39.275" level="INFO">${secret} = ['f7769bc1a657ea184c2c54edea939f94012aba2596b4499d251cf819b952cada']</msg>
<status status="PASS" starttime="20220516 19:46:39.274" endtime="20220516 19:46:39.275"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220516 19:46:39.277" level="INFO">${accessKey} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220516 19:46:39.275" endtime="20220516 19:46:39.277"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220516 19:46:39.279" level="INFO">${secret} = f7769bc1a657ea184c2c54edea939f94012aba2596b4499d251cf819b952cada</msg>
<status status="PASS" starttime="20220516 19:46:39.277" endtime="20220516 19:46:39.279"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 19:46:39.285" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 19:46:39.966" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 19:46:39.966" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 19:46:39.282" endtime="20220516 19:46:39.966"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 19:46:39.967" level="INFO"/>
<status status="PASS" starttime="20220516 19:46:39.967" endtime="20220516 19:46:39.967"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 19:46:39.968" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 19:46:39.967" endtime="20220516 19:46:39.968"/>
</kw>
<status status="PASS" starttime="20220516 19:46:39.280" endtime="20220516 19:46:39.969"/>
</kw>
<msg timestamp="20220516 19:46:39.969" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 19:46:39.280" endtime="20220516 19:46:39.970"/>
</kw>
<status status="PASS" starttime="20220516 19:46:39.279" endtime="20220516 19:46:39.970"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 19:46:39.975" level="INFO">Running command 'aws configure set aws_access_key_id testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 19:46:40.623" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 19:46:40.623" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 19:46:39.972" endtime="20220516 19:46:40.624"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 19:46:40.625" level="INFO"/>
<status status="PASS" starttime="20220516 19:46:40.624" endtime="20220516 19:46:40.625"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 19:46:40.625" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 19:46:40.625" endtime="20220516 19:46:40.626"/>
</kw>
<status status="PASS" starttime="20220516 19:46:39.971" endtime="20220516 19:46:40.626"/>
</kw>
<msg timestamp="20220516 19:46:40.626" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 19:46:39.971" endtime="20220516 19:46:40.627"/>
</kw>
<status status="PASS" starttime="20220516 19:46:39.970" endtime="20220516 19:46:40.627"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 19:46:40.634" level="INFO">Running command 'aws configure set aws_secret_access_key f7769bc1a657ea184c2c54edea939f94012aba2596b4499d251cf819b952cada 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 19:46:41.373" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 19:46:41.373" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 19:46:40.631" endtime="20220516 19:46:41.374"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 19:46:41.375" level="INFO"/>
<status status="PASS" starttime="20220516 19:46:41.374" endtime="20220516 19:46:41.376"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 19:46:41.377" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 19:46:41.376" endtime="20220516 19:46:41.377"/>
</kw>
<status status="PASS" starttime="20220516 19:46:40.630" endtime="20220516 19:46:41.381"/>
</kw>
<msg timestamp="20220516 19:46:41.381" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 19:46:40.629" endtime="20220516 19:46:41.382"/>
</kw>
<status status="PASS" starttime="20220516 19:46:40.628" endtime="20220516 19:46:41.382"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 19:46:41.392" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 19:46:42.111" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 19:46:42.112" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 19:46:41.384" endtime="20220516 19:46:42.112"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 19:46:42.115" level="INFO"/>
<status status="PASS" starttime="20220516 19:46:42.113" endtime="20220516 19:46:42.115"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 19:46:42.116" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 19:46:42.115" endtime="20220516 19:46:42.117"/>
</kw>
<status status="PASS" starttime="20220516 19:46:41.383" endtime="20220516 19:46:42.118"/>
</kw>
<msg timestamp="20220516 19:46:42.118" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 19:46:41.383" endtime="20220516 19:46:42.120"/>
</kw>
<status status="PASS" starttime="20220516 19:46:41.382" endtime="20220516 19:46:42.121"/>
</kw>
<status status="PASS" starttime="20220516 19:46:31.678" endtime="20220516 19:46:42.122"/>
</kw>
<status status="PASS" starttime="20220516 19:46:31.678" endtime="20220516 19:46:42.122"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220516 19:46:42.122" endtime="20220516 19:46:42.123"/>
</kw>
<status status="PASS" starttime="20220516 19:46:31.502" endtime="20220516 19:46:42.123"/>
</kw>
<status status="PASS" starttime="20220516 19:46:31.498" endtime="20220516 19:46:42.124"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${BUCKET}</var>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20220516 19:46:42.126" endtime="20220516 19:46:42.127"/>
</kw>
<msg timestamp="20220516 19:46:42.127" level="INFO">${BUCKET} = encrypted</msg>
<status status="PASS" starttime="20220516 19:46:42.124" endtime="20220516 19:46:42.127"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220516 19:46:42.128" level="INFO">${BUCKET} = encrypted</msg>
<status status="PASS" starttime="20220516 19:46:42.128" endtime="20220516 19:46:42.129"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220516 19:46:42.129" endtime="20220516 19:46:42.130"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create encrypted bucket" library="commonawslib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20220516 19:46:42.131" endtime="20220516 19:46:42.132"/>
</kw>
<kw name="Bucket Exists" library="shell">
<var>${exists}</var>
<arg>o3://${OM_SERVICE_ID}/s3v/encrypted</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 19:46:42.136" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://om/s3v/encrypted 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 19:46:50.034" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 19:46:50.034" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "s3v",
  "name" : "encrypted",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 610298376,
  "usedNamespace" : 7,
  "creationTime" : "2022-05-16...</msg>
<status status="PASS" starttime="20220516 19:46:42.133" endtime="20220516 19:46:50.034"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20220516 19:46:50.034" endtime="20220516 19:46:50.035"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'VOLUME_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20220516 19:46:50.036" endtime="20220516 19:46:50.036"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'BUCKET_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20220516 19:46:50.036" endtime="20220516 19:46:50.037"/>
</kw>
<msg timestamp="20220516 19:46:50.037" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20220516 19:46:42.132" endtime="20220516 19:46:50.037"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${exists}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20220516 19:46:50.038" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 19:46:50.037" endtime="20220516 19:46:50.043"/>
</kw>
<status status="PASS" starttime="20220516 19:46:42.131" endtime="20220516 19:46:50.043"/>
</kw>
<status status="PASS" starttime="20220516 19:46:42.130" endtime="20220516 19:46:50.043"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220516 19:46:50.043" endtime="20220516 19:46:50.044"/>
</kw>
<status status="PASS" starttime="20220516 19:46:30.667" endtime="20220516 19:46:50.044"/>
</kw>
<test id="s1-s5-s9-t1" name="Delete file with s3api">
<kw name="Execute" library="os">
<arg>date &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 19:46:50.052" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20220516 19:46:50.057" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 19:46:50.057" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 19:46:50.049" endtime="20220516 19:46:50.057"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 19:46:50.060" level="INFO"/>
<status status="PASS" starttime="20220516 19:46:50.058" endtime="20220516 19:46:50.060"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 19:46:50.061" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 19:46:50.060" endtime="20220516 19:46:50.061"/>
</kw>
<status status="PASS" starttime="20220516 19:46:50.048" endtime="20220516 19:46:50.062"/>
</kw>
<msg timestamp="20220516 19:46:50.062" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 19:46:50.048" endtime="20220516 19:46:50.063"/>
</kw>
<status status="PASS" starttime="20220516 19:46:50.047" endtime="20220516 19:46:50.064"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapi/key=value/f1 --body /tmp/testfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 19:46:50.071" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket encrypted --key ozone-test-7484571733/deletetestapi/key=value/f1 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 19:51:50.046" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20220516 19:46:50.068" endtime="20220516 19:51:50.046"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20220516 19:51:50.047" endtime="20220516 19:51:50.047"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20220516 19:51:50.047" endtime="20220516 19:51:50.048"/>
</kw>
<status status="FAIL" starttime="20220516 19:46:50.068" endtime="20220516 19:51:50.048"/>
</kw>
<msg timestamp="20220516 19:51:50.048" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20220516 19:46:50.067" endtime="20220516 19:51:50.049"/>
</kw>
<status status="FAIL" starttime="20220516 19:46:50.066" endtime="20220516 19:51:50.049"/>
</kw>
<status status="FAIL" starttime="20220516 19:46:50.064" endtime="20220516 19:51:50.050"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/deletetestapi/key=value/</arg>
<status status="NOT RUN" starttime="20220516 19:51:50.050" endtime="20220516 19:51:50.050"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>"${PREFIX}/deletetestapi/key=value/f1"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220516 19:51:50.050" endtime="20220516 19:51:50.051"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapi/key=value/f1</arg>
<status status="NOT RUN" starttime="20220516 19:51:50.051" endtime="20220516 19:51:50.051"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/deletetestapi/key=value/</arg>
<status status="NOT RUN" starttime="20220516 19:51:50.051" endtime="20220516 19:51:50.051"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>"${PREFIX}/deletetestapi/key=value/f1"</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220516 19:51:50.051" endtime="20220516 19:51:50.051"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20220516 19:46:50.045" endtime="20220516 19:51:50.052">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-s5-s9-t2" name="Delete file with s3api, file doesn't exist">
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 19:51:50.062" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://encrypted/ 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 19:51:51.006" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 19:51:51.006" level="INFO">${output} =                            PRE ozone-test-0993856957/
                           PRE ozone-test-6984450067/
                           PRE ozone-test-7303020340/
                           PRE ozone-t...</msg>
<status status="PASS" starttime="20220516 19:51:50.057" endtime="20220516 19:51:51.007"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 19:51:51.009" level="INFO">                           PRE ozone-test-0993856957/
                           PRE ozone-test-6984450067/
                           PRE ozone-test-7303020340/
                           PRE ozone-test-7484571733/
                           PRE ozone-test-9614470293/
                           PRE specialchars/
2022-05-16 18:50:55       3811 README1.md
2022-05-16 18:35:30         29 testfile</msg>
<status status="PASS" starttime="20220516 19:51:51.007" endtime="20220516 19:51:51.009"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 19:51:51.011" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 19:51:51.010" endtime="20220516 19:51:51.012"/>
</kw>
<status status="PASS" starttime="20220516 19:51:50.056" endtime="20220516 19:51:51.012"/>
</kw>
<msg timestamp="20220516 19:51:51.012" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 19:51:50.056" endtime="20220516 19:51:51.013"/>
</kw>
<msg timestamp="20220516 19:51:51.014" level="INFO">${output} =                            PRE ozone-test-0993856957/
                           PRE ozone-test-6984450067/
                           PRE ozone-test-7303020340/
                           PRE ozone-t...</msg>
<status status="PASS" starttime="20220516 19:51:50.055" endtime="20220516 19:51:51.014"/>
</kw>
<msg timestamp="20220516 19:51:51.015" level="INFO">${result} =                            PRE ozone-test-0993856957/
                           PRE ozone-test-6984450067/
                           PRE ozone-test-7303020340/
                           PRE ozone-t...</msg>
<status status="PASS" starttime="20220516 19:51:50.054" endtime="20220516 19:51:51.015"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>thereisnosuchfile</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 19:51:51.015" endtime="20220516 19:51:51.016"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key thereisnosuchfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 19:51:51.022" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket encrypted --key thereisnosuchfile 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 19:51:51.811" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 19:51:51.811" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 19:51:51.019" endtime="20220516 19:51:51.811"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 19:51:51.814" level="INFO"/>
<status status="PASS" starttime="20220516 19:51:51.813" endtime="20220516 19:51:51.815"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 19:51:51.816" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 19:51:51.815" endtime="20220516 19:51:51.816"/>
</kw>
<status status="PASS" starttime="20220516 19:51:51.018" endtime="20220516 19:51:51.818"/>
</kw>
<msg timestamp="20220516 19:51:51.818" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 19:51:51.018" endtime="20220516 19:51:51.819"/>
</kw>
<msg timestamp="20220516 19:51:51.820" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 19:51:51.017" endtime="20220516 19:51:51.821"/>
</kw>
<msg timestamp="20220516 19:51:51.822" level="INFO">${result} = </msg>
<status status="PASS" starttime="20220516 19:51:51.016" endtime="20220516 19:51:51.822"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 19:51:51.835" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://encrypted/ 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 19:51:52.705" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 19:51:52.705" level="INFO">${output} =                            PRE ozone-test-0993856957/
                           PRE ozone-test-6984450067/
                           PRE ozone-test-7303020340/
                           PRE ozone-t...</msg>
<status status="PASS" starttime="20220516 19:51:51.832" endtime="20220516 19:51:52.705"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 19:51:52.707" level="INFO">                           PRE ozone-test-0993856957/
                           PRE ozone-test-6984450067/
                           PRE ozone-test-7303020340/
                           PRE ozone-test-7484571733/
                           PRE ozone-test-9614470293/
                           PRE specialchars/
2022-05-16 18:50:55       3811 README1.md
2022-05-16 18:35:30         29 testfile</msg>
<status status="PASS" starttime="20220516 19:51:52.706" endtime="20220516 19:51:52.707"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 19:51:52.708" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 19:51:52.707" endtime="20220516 19:51:52.708"/>
</kw>
<status status="PASS" starttime="20220516 19:51:51.830" endtime="20220516 19:51:52.711"/>
</kw>
<msg timestamp="20220516 19:51:52.711" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 19:51:51.829" endtime="20220516 19:51:52.714"/>
</kw>
<msg timestamp="20220516 19:51:52.715" level="INFO">${output} =                            PRE ozone-test-0993856957/
                           PRE ozone-test-6984450067/
                           PRE ozone-test-7303020340/
                           PRE ozone-t...</msg>
<status status="PASS" starttime="20220516 19:51:51.824" endtime="20220516 19:51:52.715"/>
</kw>
<msg timestamp="20220516 19:51:52.716" level="INFO">${result} =                            PRE ozone-test-0993856957/
                           PRE ozone-test-6984450067/
                           PRE ozone-test-7303020340/
                           PRE ozone-t...</msg>
<status status="PASS" starttime="20220516 19:51:51.823" endtime="20220516 19:51:52.716"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>thereisnosuchfile</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 19:51:52.716" endtime="20220516 19:51:52.717"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220516 19:51:50.052" endtime="20220516 19:51:52.717"/>
</test>
<test id="s1-s5-s9-t3" name="Delete dir with s3api">
<kw name="Execute" library="os">
<arg>date &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 19:51:52.728" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20220516 19:51:52.733" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 19:51:52.733" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 19:51:52.725" endtime="20220516 19:51:52.733"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 19:51:52.735" level="INFO"/>
<status status="PASS" starttime="20220516 19:51:52.734" endtime="20220516 19:51:52.735"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 19:51:52.736" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 19:51:52.736" endtime="20220516 19:51:52.736"/>
</kw>
<status status="PASS" starttime="20220516 19:51:52.724" endtime="20220516 19:51:52.737"/>
</kw>
<msg timestamp="20220516 19:51:52.737" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 19:51:52.723" endtime="20220516 19:51:52.737"/>
</kw>
<status status="PASS" starttime="20220516 19:51:52.723" endtime="20220516 19:51:52.737"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/testfile s3://${BUCKET}/${PREFIX}/deletetestapidir/key=value/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 19:51:52.743" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/testfile s3://encrypted/ozone-test-7484571733/deletetestapidir/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 19:56:52.722" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20220516 19:51:52.740" endtime="20220516 19:56:52.723"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20220516 19:56:52.723" endtime="20220516 19:56:52.724"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20220516 19:56:52.724" endtime="20220516 19:56:52.724"/>
</kw>
<status status="FAIL" starttime="20220516 19:51:52.740" endtime="20220516 19:56:52.724"/>
</kw>
<msg timestamp="20220516 19:56:52.724" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20220516 19:51:52.739" endtime="20220516 19:56:52.725"/>
</kw>
<status status="FAIL" starttime="20220516 19:51:52.739" endtime="20220516 19:56:52.725"/>
</kw>
<status status="FAIL" starttime="20220516 19:51:52.738" endtime="20220516 19:56:52.726"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/${PREFIX}/deletetestapidir/key=value/</arg>
<status status="NOT RUN" starttime="20220516 19:56:52.726" endtime="20220516 19:56:52.726"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220516 19:56:52.726" endtime="20220516 19:56:52.727"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapidir/key=value/</arg>
<status status="NOT RUN" starttime="20220516 19:56:52.727" endtime="20220516 19:56:52.727"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/${PREFIX}/deletetestapidir/key=value/</arg>
<status status="NOT RUN" starttime="20220516 19:56:52.727" endtime="20220516 19:56:52.727"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220516 19:56:52.727" endtime="20220516 19:56:52.727"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapidir/key=value/f1</arg>
<status status="NOT RUN" starttime="20220516 19:56:52.728" endtime="20220516 19:56:52.728"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20220516 19:51:52.721" endtime="20220516 19:56:52.728">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-s5-s9-t4" name="Delete file with s3api, file doesn't exist, prefix of a real file">
<kw name="Execute" library="os">
<arg>date &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 19:56:52.736" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20220516 19:56:52.741" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 19:56:52.741" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 19:56:52.733" endtime="20220516 19:56:52.741"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 19:56:52.743" level="INFO"/>
<status status="PASS" starttime="20220516 19:56:52.742" endtime="20220516 19:56:52.743"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 19:56:52.745" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 19:56:52.744" endtime="20220516 19:56:52.745"/>
</kw>
<status status="PASS" starttime="20220516 19:56:52.732" endtime="20220516 19:56:52.746"/>
</kw>
<msg timestamp="20220516 19:56:52.746" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 19:56:52.732" endtime="20220516 19:56:52.746"/>
</kw>
<status status="PASS" starttime="20220516 19:56:52.731" endtime="20220516 19:56:52.747"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/testfile s3://${BUCKET}/${PREFIX}/deletetestapiprefix/key=value/filefile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 19:56:52.754" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/testfile s3://encrypted/ozone-test-7484571733/deletetestapiprefix/key=value/filefile 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 20:01:52.731" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20220516 19:56:52.751" endtime="20220516 20:01:52.731"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20220516 20:01:52.732" endtime="20220516 20:01:52.732"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20220516 20:01:52.732" endtime="20220516 20:01:52.733"/>
</kw>
<status status="FAIL" starttime="20220516 19:56:52.750" endtime="20220516 20:01:52.733"/>
</kw>
<msg timestamp="20220516 20:01:52.733" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20220516 19:56:52.749" endtime="20220516 20:01:52.734"/>
</kw>
<status status="FAIL" starttime="20220516 19:56:52.748" endtime="20220516 20:01:52.734"/>
</kw>
<status status="FAIL" starttime="20220516 19:56:52.747" endtime="20220516 20:01:52.735"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/${PREFIX}/deletetestapiprefix/key=value/</arg>
<status status="NOT RUN" starttime="20220516 20:01:52.735" endtime="20220516 20:01:52.735"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>filefile</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220516 20:01:52.735" endtime="20220516 20:01:52.735"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapiprefix/key=value/file</arg>
<status status="NOT RUN" starttime="20220516 20:01:52.736" endtime="20220516 20:01:52.736"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/${PREFIX}/deletetestapiprefix/key=value/</arg>
<status status="NOT RUN" starttime="20220516 20:01:52.736" endtime="20220516 20:01:52.736"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>filefile</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220516 20:01:52.736" endtime="20220516 20:01:52.736"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapiprefix/key=value/filefile</arg>
<status status="NOT RUN" starttime="20220516 20:01:52.737" endtime="20220516 20:01:52.737"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20220516 19:56:52.730" endtime="20220516 20:01:52.737">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-s5-s9-t5" name="Delete file with s3api, bucket doesn't exist">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET}-nosuchbucket --key f1</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 20:01:52.747" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket encrypted-nosuchbucket --key f1 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 20:01:53.609" level="INFO">${rc} = 255</msg>
<msg timestamp="20220516 20:01:53.609" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the DeleteObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20220516 20:01:52.744" endtime="20220516 20:01:53.609"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 20:01:53.611" level="INFO">
An error occurred (NoSuchBucket) when calling the DeleteObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20220516 20:01:53.610" endtime="20220516 20:01:53.611"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 20:01:53.613" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 20:01:53.612" endtime="20220516 20:01:53.613"/>
</kw>
<msg timestamp="20220516 20:01:53.614" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the DeleteObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20220516 20:01:52.743" endtime="20220516 20:01:53.614"/>
</kw>
<msg timestamp="20220516 20:01:53.615" level="INFO">${result} = 
An error occurred (NoSuchBucket) when calling the DeleteObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20220516 20:01:52.742" endtime="20220516 20:01:53.615"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchBucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 20:01:53.616" endtime="20220516 20:01:53.619"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220516 20:01:52.739" endtime="20220516 20:01:53.619"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="FAIL" starttime="20220516 19:46:30.646" endtime="20220516 20:01:53.621"/>
</suite>
<suite id="s1-s5-s10" name="Objectmultidelete" source="/opt/hadoop/smoketest/s3/objectmultidelete.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220516 20:01:53.651" level="INFO">${randStr} = 7791669621</msg>
<status status="PASS" starttime="20220516 20:01:53.651" endtime="20220516 20:01:53.652"/>
</kw>
<msg timestamp="20220516 20:01:53.652" level="INFO">${random} = ozone-test-7791669621</msg>
<status status="PASS" starttime="20220516 20:01:53.650" endtime="20220516 20:01:53.652"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220516 20:01:53.656" level="INFO">${PREFIX} = ozone-test-7791669621</msg>
<status status="PASS" starttime="20220516 20:01:53.652" endtime="20220516 20:01:53.656"/>
</kw>
<status status="PASS" starttime="20220516 20:01:53.649" endtime="20220516 20:01:53.656"/>
</kw>
<status status="PASS" starttime="20220516 20:01:53.648" endtime="20220516 20:01:53.656"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which apt-get</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 20:01:53.661" level="INFO">Running command 'which apt-get 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 20:01:53.664" level="INFO">${rc} = 1</msg>
<msg timestamp="20220516 20:01:53.664" level="INFO">${output} = which: no apt-get in (/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin)</msg>
<status status="PASS" starttime="20220516 20:01:53.657" endtime="20220516 20:01:53.664"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220516 20:01:53.665" endtime="20220516 20:01:53.667"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>yum --help</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 20:01:53.670" level="INFO">Running command 'yum --help 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 20:01:53.861" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 20:01:53.861" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
ovl: Error while doing RPMdb copy-up:
[Errno 13] Permission denied: '/var/lib/rpm/Obsoletename'
Usage: yum [options] COMMAND

List of Commands:

check          Check...</msg>
<status status="PASS" starttime="20220516 20:01:53.667" endtime="20220516 20:01:53.861"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Install aws cli s3 centos" library="commonawslib">
<kw name="Execute" library="os">
<arg>sudo -E yum install -y awscli</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 20:01:53.870" level="INFO">Running command 'sudo -E yum install -y awscli 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 20:01:54.493" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 20:01:54.493" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirror.fcix.net
 * epel: mirror.lshiy.com
 * extras: repo.ialab.dsu.edu
 * updates: mirrors.xmission.com
Package ...</msg>
<status status="PASS" starttime="20220516 20:01:53.866" endtime="20220516 20:01:54.493"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 20:01:54.494" level="INFO">Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirror.fcix.net
 * epel: mirror.lshiy.com
 * extras: repo.ialab.dsu.edu
 * updates: mirrors.xmission.com
Package awscli-1.14.28-5.el7_5.1.noarch already installed and latest version
Nothing to do</msg>
<status status="PASS" starttime="20220516 20:01:54.494" endtime="20220516 20:01:54.495"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 20:01:54.496" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 20:01:54.495" endtime="20220516 20:01:54.496"/>
</kw>
<status status="PASS" starttime="20220516 20:01:53.865" endtime="20220516 20:01:54.497"/>
</kw>
<msg timestamp="20220516 20:01:54.497" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 20:01:53.865" endtime="20220516 20:01:54.499"/>
</kw>
<status status="PASS" starttime="20220516 20:01:53.864" endtime="20220516 20:01:54.500"/>
</kw>
<status status="PASS" starttime="20220516 20:01:53.864" endtime="20220516 20:01:54.500"/>
</kw>
<status status="PASS" starttime="20220516 20:01:53.861" endtime="20220516 20:01:54.501"/>
</kw>
<status status="PASS" starttime="20220516 20:01:53.657" endtime="20220516 20:01:54.501"/>
</kw>
<status status="PASS" starttime="20220516 20:01:53.656" endtime="20220516 20:01:54.501"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 20:01:54.510" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 20:01:54.515" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 20:01:54.515" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20220516 20:01:54.506" endtime="20220516 20:01:54.515"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 20:01:54.517" level="INFO">s3g</msg>
<status status="PASS" starttime="20220516 20:01:54.516" endtime="20220516 20:01:54.518"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 20:01:54.520" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 20:01:54.518" endtime="20220516 20:01:54.520"/>
</kw>
<status status="PASS" starttime="20220516 20:01:54.506" endtime="20220516 20:01:54.520"/>
</kw>
<msg timestamp="20220516 20:01:54.521" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 20:01:54.505" endtime="20220516 20:01:54.522"/>
</kw>
<msg timestamp="20220516 20:01:54.523" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20220516 20:01:54.505" endtime="20220516 20:01:54.523"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220516 20:01:54.526" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220516 20:01:54.523" endtime="20220516 20:01:54.527"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 20:01:54.535" level="INFO">Running command 'kinit -k testuser/s3g@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 20:01:54.614" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 20:01:54.615" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 20:01:54.532" endtime="20220516 20:01:54.615"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 20:01:54.616" level="INFO"/>
<status status="PASS" starttime="20220516 20:01:54.615" endtime="20220516 20:01:54.616"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 20:01:54.617" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 20:01:54.616" endtime="20220516 20:01:54.617"/>
</kw>
<status status="PASS" starttime="20220516 20:01:54.530" endtime="20220516 20:01:54.617"/>
</kw>
<msg timestamp="20220516 20:01:54.617" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 20:01:54.530" endtime="20220516 20:01:54.618"/>
</kw>
<status status="PASS" starttime="20220516 20:01:54.529" endtime="20220516 20:01:54.619"/>
</kw>
<status status="PASS" starttime="20220516 20:01:54.527" endtime="20220516 20:01:54.619"/>
</kw>
<status status="PASS" starttime="20220516 20:01:54.504" endtime="20220516 20:01:54.619"/>
</kw>
<status status="PASS" starttime="20220516 20:01:54.504" endtime="20220516 20:01:54.619"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 20:01:54.626" level="INFO">Running command 'ozone s3 getsecret  2&gt;&amp;1'.</msg>
<msg timestamp="20220516 20:02:00.818" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 20:02:00.819" level="INFO">${output} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=f7769bc1a657ea184c2c54edea939f94012aba2596b4499d251cf819b952cada</msg>
<status status="PASS" starttime="20220516 20:01:54.623" endtime="20220516 20:02:00.819"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 20:02:00.826" level="INFO">awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=f7769bc1a657ea184c2c54edea939f94012aba2596b4499d251cf819b952cada</msg>
<status status="PASS" starttime="20220516 20:02:00.824" endtime="20220516 20:02:00.826"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 20:02:00.830" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 20:02:00.827" endtime="20220516 20:02:00.831"/>
</kw>
<status status="PASS" starttime="20220516 20:01:54.622" endtime="20220516 20:02:00.831"/>
</kw>
<msg timestamp="20220516 20:02:00.831" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 20:01:54.621" endtime="20220516 20:02:00.834"/>
</kw>
<msg timestamp="20220516 20:02:00.834" level="INFO">${result} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=f7769bc1a657ea184c2c54edea939f94012aba2596b4499d251cf819b952cada</msg>
<status status="PASS" starttime="20220516 20:01:54.621" endtime="20220516 20:02:00.835"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20220516 20:02:00.837" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20220516 20:02:00.835" endtime="20220516 20:02:00.837"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>sdsdasaasdasd</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20220516 20:02:00.840" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20220516 20:02:00.838" endtime="20220516 20:02:00.840"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20220516 20:02:00.842" level="INFO">${secret} = ['f7769bc1a657ea184c2c54edea939f94012aba2596b4499d251cf819b952cada']</msg>
<status status="PASS" starttime="20220516 20:02:00.840" endtime="20220516 20:02:00.842"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220516 20:02:00.847" level="INFO">${accessKey} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220516 20:02:00.843" endtime="20220516 20:02:00.847"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220516 20:02:00.851" level="INFO">${secret} = f7769bc1a657ea184c2c54edea939f94012aba2596b4499d251cf819b952cada</msg>
<status status="PASS" starttime="20220516 20:02:00.848" endtime="20220516 20:02:00.851"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 20:02:00.863" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 20:02:01.615" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 20:02:01.616" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 20:02:00.858" endtime="20220516 20:02:01.616"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 20:02:01.618" level="INFO"/>
<status status="PASS" starttime="20220516 20:02:01.617" endtime="20220516 20:02:01.618"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 20:02:01.620" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 20:02:01.619" endtime="20220516 20:02:01.620"/>
</kw>
<status status="PASS" starttime="20220516 20:02:00.853" endtime="20220516 20:02:01.621"/>
</kw>
<msg timestamp="20220516 20:02:01.622" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 20:02:00.853" endtime="20220516 20:02:01.623"/>
</kw>
<status status="PASS" starttime="20220516 20:02:00.852" endtime="20220516 20:02:01.624"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 20:02:01.631" level="INFO">Running command 'aws configure set aws_access_key_id testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 20:02:02.433" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 20:02:02.433" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 20:02:01.627" endtime="20220516 20:02:02.433"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 20:02:02.436" level="INFO"/>
<status status="PASS" starttime="20220516 20:02:02.435" endtime="20220516 20:02:02.437"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 20:02:02.438" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 20:02:02.437" endtime="20220516 20:02:02.438"/>
</kw>
<status status="PASS" starttime="20220516 20:02:01.627" endtime="20220516 20:02:02.439"/>
</kw>
<msg timestamp="20220516 20:02:02.439" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 20:02:01.626" endtime="20220516 20:02:02.440"/>
</kw>
<status status="PASS" starttime="20220516 20:02:01.624" endtime="20220516 20:02:02.441"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 20:02:02.448" level="INFO">Running command 'aws configure set aws_secret_access_key f7769bc1a657ea184c2c54edea939f94012aba2596b4499d251cf819b952cada 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 20:02:03.151" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 20:02:03.151" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 20:02:02.444" endtime="20220516 20:02:03.152"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 20:02:03.154" level="INFO"/>
<status status="PASS" starttime="20220516 20:02:03.152" endtime="20220516 20:02:03.154"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 20:02:03.155" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 20:02:03.155" endtime="20220516 20:02:03.156"/>
</kw>
<status status="PASS" starttime="20220516 20:02:02.443" endtime="20220516 20:02:03.157"/>
</kw>
<msg timestamp="20220516 20:02:03.157" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 20:02:02.442" endtime="20220516 20:02:03.158"/>
</kw>
<status status="PASS" starttime="20220516 20:02:02.441" endtime="20220516 20:02:03.159"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 20:02:03.166" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 20:02:03.873" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 20:02:03.874" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 20:02:03.163" endtime="20220516 20:02:03.874"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 20:02:03.876" level="INFO"/>
<status status="PASS" starttime="20220516 20:02:03.875" endtime="20220516 20:02:03.876"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 20:02:03.877" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 20:02:03.877" endtime="20220516 20:02:03.878"/>
</kw>
<status status="PASS" starttime="20220516 20:02:03.161" endtime="20220516 20:02:03.879"/>
</kw>
<msg timestamp="20220516 20:02:03.879" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 20:02:03.160" endtime="20220516 20:02:03.880"/>
</kw>
<status status="PASS" starttime="20220516 20:02:03.159" endtime="20220516 20:02:03.881"/>
</kw>
<status status="PASS" starttime="20220516 20:01:54.620" endtime="20220516 20:02:03.881"/>
</kw>
<status status="PASS" starttime="20220516 20:01:54.619" endtime="20220516 20:02:03.881"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220516 20:02:03.882" endtime="20220516 20:02:03.883"/>
</kw>
<status status="PASS" starttime="20220516 20:01:54.503" endtime="20220516 20:02:03.883"/>
</kw>
<status status="PASS" starttime="20220516 20:01:54.502" endtime="20220516 20:02:03.883"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${BUCKET}</var>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20220516 20:02:03.885" endtime="20220516 20:02:03.885"/>
</kw>
<msg timestamp="20220516 20:02:03.886" level="INFO">${BUCKET} = encrypted</msg>
<status status="PASS" starttime="20220516 20:02:03.883" endtime="20220516 20:02:03.886"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220516 20:02:03.887" level="INFO">${BUCKET} = encrypted</msg>
<status status="PASS" starttime="20220516 20:02:03.886" endtime="20220516 20:02:03.887"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220516 20:02:03.887" endtime="20220516 20:02:03.888"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create encrypted bucket" library="commonawslib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20220516 20:02:03.890" endtime="20220516 20:02:03.891"/>
</kw>
<kw name="Bucket Exists" library="shell">
<var>${exists}</var>
<arg>o3://${OM_SERVICE_ID}/s3v/encrypted</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 20:02:03.896" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://om/s3v/encrypted 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 20:02:13.640" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 20:02:13.640" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "s3v",
  "name" : "encrypted",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 610298637,
  "usedNamespace" : 10,
  "creationTime" : "2022-05-1...</msg>
<status status="PASS" starttime="20220516 20:02:03.892" endtime="20220516 20:02:13.640"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20220516 20:02:13.640" endtime="20220516 20:02:13.641"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'VOLUME_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20220516 20:02:13.642" endtime="20220516 20:02:13.642"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'BUCKET_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20220516 20:02:13.642" endtime="20220516 20:02:13.643"/>
</kw>
<msg timestamp="20220516 20:02:13.643" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20220516 20:02:03.891" endtime="20220516 20:02:13.643"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${exists}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20220516 20:02:13.644" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 20:02:13.643" endtime="20220516 20:02:13.644"/>
</kw>
<status status="PASS" starttime="20220516 20:02:03.889" endtime="20220516 20:02:13.645"/>
</kw>
<status status="PASS" starttime="20220516 20:02:03.888" endtime="20220516 20:02:13.645"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220516 20:02:13.645" endtime="20220516 20:02:13.645"/>
</kw>
<status status="PASS" starttime="20220516 20:01:53.648" endtime="20220516 20:02:13.646"/>
</kw>
<test id="s1-s5-s10-t1" name="Delete file with multi delete">
<kw name="Execute" library="os">
<arg>date &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 20:02:13.653" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20220516 20:02:13.660" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 20:02:13.660" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 20:02:13.649" endtime="20220516 20:02:13.660"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 20:02:13.664" level="INFO"/>
<status status="PASS" starttime="20220516 20:02:13.662" endtime="20220516 20:02:13.664"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 20:02:13.665" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 20:02:13.664" endtime="20220516 20:02:13.666"/>
</kw>
<status status="PASS" starttime="20220516 20:02:13.648" endtime="20220516 20:02:13.666"/>
</kw>
<msg timestamp="20220516 20:02:13.666" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 20:02:13.648" endtime="20220516 20:02:13.667"/>
</kw>
<status status="PASS" starttime="20220516 20:02:13.647" endtime="20220516 20:02:13.668"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/multidelete/key=value/f1 --body /tmp/testfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 20:02:13.677" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket encrypted --key ozone-test-7791669621/multidelete/key=value/f1 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 20:07:13.648" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20220516 20:02:13.673" endtime="20220516 20:07:13.648"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20220516 20:07:13.648" endtime="20220516 20:07:13.648"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20220516 20:07:13.649" endtime="20220516 20:07:13.649"/>
</kw>
<status status="FAIL" starttime="20220516 20:02:13.672" endtime="20220516 20:07:13.649"/>
</kw>
<msg timestamp="20220516 20:07:13.649" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20220516 20:02:13.671" endtime="20220516 20:07:13.650"/>
</kw>
<status status="FAIL" starttime="20220516 20:02:13.670" endtime="20220516 20:07:13.650"/>
</kw>
<status status="FAIL" starttime="20220516 20:02:13.668" endtime="20220516 20:07:13.651"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/multidelete/key=value/f2 --body /tmp/testfile</arg>
<status status="NOT RUN" starttime="20220516 20:07:13.651" endtime="20220516 20:07:13.651"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/multidelete/key=value/f3 --body /tmp/testfile</arg>
<status status="NOT RUN" starttime="20220516 20:07:13.651" endtime="20220516 20:07:13.651"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/multidelete/key=value/</arg>
<status status="NOT RUN" starttime="20220516 20:07:13.652" endtime="20220516 20:07:13.652"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/key=value/f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220516 20:07:13.652" endtime="20220516 20:07:13.652"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/key=value/f2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220516 20:07:13.652" endtime="20220516 20:07:13.653"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/key=value/f3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220516 20:07:13.653" endtime="20220516 20:07:13.653"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>STANDARD</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220516 20:07:13.653" endtime="20220516 20:07:13.653"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>REDUCED_REDUNDANCY</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220516 20:07:13.653" endtime="20220516 20:07:13.653"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-objects --bucket ${BUCKET} --delete 'Objects=[{Key=${PREFIX}/multidelete/key=value/f1},{Key=${PREFIX}/multidelete/key=value/f2},{Key=${PREFIX}/multidelete/key=value/f4}]'</arg>
<status status="NOT RUN" starttime="20220516 20:07:13.654" endtime="20220516 20:07:13.654"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220516 20:07:13.654" endtime="20220516 20:07:13.654"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/multidelete/key=value/</arg>
<status status="NOT RUN" starttime="20220516 20:07:13.654" endtime="20220516 20:07:13.654"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/key=value/f1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220516 20:07:13.655" endtime="20220516 20:07:13.655"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/key=value/f2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220516 20:07:13.655" endtime="20220516 20:07:13.655"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/key=value/f3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220516 20:07:13.655" endtime="20220516 20:07:13.655"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>STANDARD</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220516 20:07:13.656" endtime="20220516 20:07:13.656"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>REDUCED_REDUNDANCY</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220516 20:07:13.656" endtime="20220516 20:07:13.656"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20220516 20:02:13.646" endtime="20220516 20:07:13.656">Test timeout 5 minutes exceeded.</status>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="FAIL" starttime="20220516 20:01:53.625" endtime="20220516 20:07:13.659"/>
</suite>
<suite id="s1-s5-s11" name="Objectputget" source="/opt/hadoop/smoketest/s3/objectputget.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220516 20:07:13.687" level="INFO">${randStr} = 5640818385</msg>
<status status="PASS" starttime="20220516 20:07:13.686" endtime="20220516 20:07:13.687"/>
</kw>
<msg timestamp="20220516 20:07:13.687" level="INFO">${random} = ozone-test-5640818385</msg>
<status status="PASS" starttime="20220516 20:07:13.686" endtime="20220516 20:07:13.688"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220516 20:07:13.690" level="INFO">${PREFIX} = ozone-test-5640818385</msg>
<status status="PASS" starttime="20220516 20:07:13.688" endtime="20220516 20:07:13.690"/>
</kw>
<status status="PASS" starttime="20220516 20:07:13.685" endtime="20220516 20:07:13.690"/>
</kw>
<status status="PASS" starttime="20220516 20:07:13.685" endtime="20220516 20:07:13.690"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which apt-get</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 20:07:13.698" level="INFO">Running command 'which apt-get 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 20:07:13.700" level="INFO">${rc} = 1</msg>
<msg timestamp="20220516 20:07:13.700" level="INFO">${output} = which: no apt-get in (/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin)</msg>
<status status="PASS" starttime="20220516 20:07:13.691" endtime="20220516 20:07:13.700"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220516 20:07:13.701" endtime="20220516 20:07:13.702"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>yum --help</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 20:07:13.706" level="INFO">Running command 'yum --help 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 20:07:13.904" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 20:07:13.904" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
ovl: Error while doing RPMdb copy-up:
[Errno 13] Permission denied: '/var/lib/rpm/Obsoletename'
Usage: yum [options] COMMAND

List of Commands:

check          Check...</msg>
<status status="PASS" starttime="20220516 20:07:13.702" endtime="20220516 20:07:13.905"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Install aws cli s3 centos" library="commonawslib">
<kw name="Execute" library="os">
<arg>sudo -E yum install -y awscli</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 20:07:13.920" level="INFO">Running command 'sudo -E yum install -y awscli 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 20:07:14.535" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 20:07:14.535" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirror.fcix.net
 * epel: mirror.lshiy.com
 * extras: repo.ialab.dsu.edu
 * updates: mirrors.xmission.com
Package ...</msg>
<status status="PASS" starttime="20220516 20:07:13.914" endtime="20220516 20:07:14.535"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 20:07:14.537" level="INFO">Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirror.fcix.net
 * epel: mirror.lshiy.com
 * extras: repo.ialab.dsu.edu
 * updates: mirrors.xmission.com
Package awscli-1.14.28-5.el7_5.1.noarch already installed and latest version
Nothing to do</msg>
<status status="PASS" starttime="20220516 20:07:14.536" endtime="20220516 20:07:14.537"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 20:07:14.538" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 20:07:14.537" endtime="20220516 20:07:14.539"/>
</kw>
<status status="PASS" starttime="20220516 20:07:13.912" endtime="20220516 20:07:14.539"/>
</kw>
<msg timestamp="20220516 20:07:14.540" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 20:07:13.912" endtime="20220516 20:07:14.541"/>
</kw>
<status status="PASS" starttime="20220516 20:07:13.911" endtime="20220516 20:07:14.542"/>
</kw>
<status status="PASS" starttime="20220516 20:07:13.907" endtime="20220516 20:07:14.542"/>
</kw>
<status status="PASS" starttime="20220516 20:07:13.906" endtime="20220516 20:07:14.542"/>
</kw>
<status status="PASS" starttime="20220516 20:07:13.691" endtime="20220516 20:07:14.542"/>
</kw>
<status status="PASS" starttime="20220516 20:07:13.690" endtime="20220516 20:07:14.542"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 20:07:14.550" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 20:07:14.556" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 20:07:14.556" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20220516 20:07:14.546" endtime="20220516 20:07:14.556"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 20:07:14.557" level="INFO">s3g</msg>
<status status="PASS" starttime="20220516 20:07:14.557" endtime="20220516 20:07:14.557"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 20:07:14.558" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 20:07:14.557" endtime="20220516 20:07:14.558"/>
</kw>
<status status="PASS" starttime="20220516 20:07:14.546" endtime="20220516 20:07:14.558"/>
</kw>
<msg timestamp="20220516 20:07:14.559" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 20:07:14.545" endtime="20220516 20:07:14.559"/>
</kw>
<msg timestamp="20220516 20:07:14.560" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20220516 20:07:14.545" endtime="20220516 20:07:14.560"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220516 20:07:14.563" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220516 20:07:14.560" endtime="20220516 20:07:14.563"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 20:07:14.573" level="INFO">Running command 'kinit -k testuser/s3g@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 20:07:14.641" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 20:07:14.641" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 20:07:14.566" endtime="20220516 20:07:14.642"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 20:07:14.643" level="INFO"/>
<status status="PASS" starttime="20220516 20:07:14.642" endtime="20220516 20:07:14.643"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 20:07:14.644" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 20:07:14.643" endtime="20220516 20:07:14.644"/>
</kw>
<status status="PASS" starttime="20220516 20:07:14.566" endtime="20220516 20:07:14.645"/>
</kw>
<msg timestamp="20220516 20:07:14.645" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 20:07:14.565" endtime="20220516 20:07:14.646"/>
</kw>
<status status="PASS" starttime="20220516 20:07:14.564" endtime="20220516 20:07:14.647"/>
</kw>
<status status="PASS" starttime="20220516 20:07:14.564" endtime="20220516 20:07:14.647"/>
</kw>
<status status="PASS" starttime="20220516 20:07:14.544" endtime="20220516 20:07:14.647"/>
</kw>
<status status="PASS" starttime="20220516 20:07:14.544" endtime="20220516 20:07:14.647"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 20:07:14.656" level="INFO">Running command 'ozone s3 getsecret  2&gt;&amp;1'.</msg>
<msg timestamp="20220516 20:07:22.774" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 20:07:22.774" level="INFO">${output} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=f7769bc1a657ea184c2c54edea939f94012aba2596b4499d251cf819b952cada</msg>
<status status="PASS" starttime="20220516 20:07:14.651" endtime="20220516 20:07:22.774"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 20:07:22.779" level="INFO">awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=f7769bc1a657ea184c2c54edea939f94012aba2596b4499d251cf819b952cada</msg>
<status status="PASS" starttime="20220516 20:07:22.776" endtime="20220516 20:07:22.779"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 20:07:22.780" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 20:07:22.779" endtime="20220516 20:07:22.780"/>
</kw>
<status status="PASS" starttime="20220516 20:07:14.650" endtime="20220516 20:07:22.780"/>
</kw>
<msg timestamp="20220516 20:07:22.781" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 20:07:14.649" endtime="20220516 20:07:22.782"/>
</kw>
<msg timestamp="20220516 20:07:22.782" level="INFO">${result} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=f7769bc1a657ea184c2c54edea939f94012aba2596b4499d251cf819b952cada</msg>
<status status="PASS" starttime="20220516 20:07:14.648" endtime="20220516 20:07:22.782"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20220516 20:07:22.783" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20220516 20:07:22.783" endtime="20220516 20:07:22.784"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>sdsdasaasdasd</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20220516 20:07:22.784" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20220516 20:07:22.784" endtime="20220516 20:07:22.785"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20220516 20:07:22.786" level="INFO">${secret} = ['f7769bc1a657ea184c2c54edea939f94012aba2596b4499d251cf819b952cada']</msg>
<status status="PASS" starttime="20220516 20:07:22.785" endtime="20220516 20:07:22.786"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220516 20:07:22.788" level="INFO">${accessKey} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220516 20:07:22.786" endtime="20220516 20:07:22.788"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220516 20:07:22.790" level="INFO">${secret} = f7769bc1a657ea184c2c54edea939f94012aba2596b4499d251cf819b952cada</msg>
<status status="PASS" starttime="20220516 20:07:22.788" endtime="20220516 20:07:22.790"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 20:07:22.795" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 20:07:23.441" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 20:07:23.441" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 20:07:22.792" endtime="20220516 20:07:23.441"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 20:07:23.443" level="INFO"/>
<status status="PASS" starttime="20220516 20:07:23.442" endtime="20220516 20:07:23.443"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 20:07:23.444" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 20:07:23.443" endtime="20220516 20:07:23.444"/>
</kw>
<status status="PASS" starttime="20220516 20:07:22.791" endtime="20220516 20:07:23.444"/>
</kw>
<msg timestamp="20220516 20:07:23.444" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 20:07:22.791" endtime="20220516 20:07:23.445"/>
</kw>
<status status="PASS" starttime="20220516 20:07:22.791" endtime="20220516 20:07:23.445"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 20:07:23.451" level="INFO">Running command 'aws configure set aws_access_key_id testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 20:07:24.149" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 20:07:24.149" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 20:07:23.448" endtime="20220516 20:07:24.149"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 20:07:24.150" level="INFO"/>
<status status="PASS" starttime="20220516 20:07:24.150" endtime="20220516 20:07:24.150"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 20:07:24.151" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 20:07:24.151" endtime="20220516 20:07:24.151"/>
</kw>
<status status="PASS" starttime="20220516 20:07:23.447" endtime="20220516 20:07:24.152"/>
</kw>
<msg timestamp="20220516 20:07:24.152" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 20:07:23.446" endtime="20220516 20:07:24.152"/>
</kw>
<status status="PASS" starttime="20220516 20:07:23.445" endtime="20220516 20:07:24.153"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 20:07:24.157" level="INFO">Running command 'aws configure set aws_secret_access_key f7769bc1a657ea184c2c54edea939f94012aba2596b4499d251cf819b952cada 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 20:07:24.831" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 20:07:24.831" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 20:07:24.155" endtime="20220516 20:07:24.831"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 20:07:24.832" level="INFO"/>
<status status="PASS" starttime="20220516 20:07:24.831" endtime="20220516 20:07:24.832"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 20:07:24.834" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 20:07:24.833" endtime="20220516 20:07:24.834"/>
</kw>
<status status="PASS" starttime="20220516 20:07:24.154" endtime="20220516 20:07:24.834"/>
</kw>
<msg timestamp="20220516 20:07:24.834" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 20:07:24.154" endtime="20220516 20:07:24.836"/>
</kw>
<status status="PASS" starttime="20220516 20:07:24.153" endtime="20220516 20:07:24.836"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 20:07:24.841" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 20:07:25.492" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 20:07:25.493" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 20:07:24.838" endtime="20220516 20:07:25.493"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 20:07:25.494" level="INFO"/>
<status status="PASS" starttime="20220516 20:07:25.493" endtime="20220516 20:07:25.494"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 20:07:25.495" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 20:07:25.494" endtime="20220516 20:07:25.495"/>
</kw>
<status status="PASS" starttime="20220516 20:07:24.837" endtime="20220516 20:07:25.496"/>
</kw>
<msg timestamp="20220516 20:07:25.496" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 20:07:24.837" endtime="20220516 20:07:25.496"/>
</kw>
<status status="PASS" starttime="20220516 20:07:24.836" endtime="20220516 20:07:25.497"/>
</kw>
<status status="PASS" starttime="20220516 20:07:14.648" endtime="20220516 20:07:25.497"/>
</kw>
<status status="PASS" starttime="20220516 20:07:14.647" endtime="20220516 20:07:25.497"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220516 20:07:25.497" endtime="20220516 20:07:25.498"/>
</kw>
<status status="PASS" starttime="20220516 20:07:14.543" endtime="20220516 20:07:25.498"/>
</kw>
<status status="PASS" starttime="20220516 20:07:14.543" endtime="20220516 20:07:25.498"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${BUCKET}</var>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20220516 20:07:25.499" endtime="20220516 20:07:25.499"/>
</kw>
<msg timestamp="20220516 20:07:25.500" level="INFO">${BUCKET} = encrypted</msg>
<status status="PASS" starttime="20220516 20:07:25.498" endtime="20220516 20:07:25.500"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220516 20:07:25.500" level="INFO">${BUCKET} = encrypted</msg>
<status status="PASS" starttime="20220516 20:07:25.500" endtime="20220516 20:07:25.500"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220516 20:07:25.500" endtime="20220516 20:07:25.501"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create encrypted bucket" library="commonawslib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20220516 20:07:25.502" endtime="20220516 20:07:25.502"/>
</kw>
<kw name="Bucket Exists" library="shell">
<var>${exists}</var>
<arg>o3://${OM_SERVICE_ID}/s3v/encrypted</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 20:07:25.506" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://om/s3v/encrypted 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 20:07:34.600" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 20:07:34.600" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "s3v",
  "name" : "encrypted",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 610298724,
  "usedNamespace" : 11,
  "creationTime" : "2022-05-1...</msg>
<status status="PASS" starttime="20220516 20:07:25.503" endtime="20220516 20:07:34.600"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20220516 20:07:34.600" endtime="20220516 20:07:34.601"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'VOLUME_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20220516 20:07:34.601" endtime="20220516 20:07:34.602"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'BUCKET_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20220516 20:07:34.603" endtime="20220516 20:07:34.604"/>
</kw>
<msg timestamp="20220516 20:07:34.605" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20220516 20:07:25.503" endtime="20220516 20:07:34.605"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${exists}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20220516 20:07:34.605" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 20:07:34.605" endtime="20220516 20:07:34.606"/>
</kw>
<status status="PASS" starttime="20220516 20:07:25.501" endtime="20220516 20:07:34.607"/>
</kw>
<status status="PASS" starttime="20220516 20:07:25.501" endtime="20220516 20:07:34.607"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220516 20:07:34.608" endtime="20220516 20:07:34.609"/>
</kw>
<status status="PASS" starttime="20220516 20:07:13.683" endtime="20220516 20:07:34.609"/>
</kw>
<test id="s1-s5-s11-t1" name="Put object to s3">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 20:07:34.621" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile'.</msg>
<msg timestamp="20220516 20:07:34.623" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 20:07:34.623" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 20:07:34.615" endtime="20220516 20:07:34.623"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 20:07:34.627" level="INFO"/>
<status status="PASS" starttime="20220516 20:07:34.624" endtime="20220516 20:07:34.627"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 20:07:34.628" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 20:07:34.627" endtime="20220516 20:07:34.628"/>
</kw>
<status status="PASS" starttime="20220516 20:07:34.614" endtime="20220516 20:07:34.629"/>
</kw>
<msg timestamp="20220516 20:07:34.629" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 20:07:34.614" endtime="20220516 20:07:34.629"/>
</kw>
<status status="PASS" starttime="20220516 20:07:34.612" endtime="20220516 20:07:34.630"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --body /tmp/testfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 20:07:34.640" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket encrypted --key ozone-test-5640818385/putobject/key=value/f1 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 20:12:34.611" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20220516 20:07:34.635" endtime="20220516 20:12:34.611"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20220516 20:12:34.612" endtime="20220516 20:12:34.612"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20220516 20:12:34.612" endtime="20220516 20:12:34.612"/>
</kw>
<status status="FAIL" starttime="20220516 20:07:34.633" endtime="20220516 20:12:34.613"/>
</kw>
<msg timestamp="20220516 20:12:34.613" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20220516 20:07:34.633" endtime="20220516 20:12:34.614"/>
</kw>
<status status="FAIL" starttime="20220516 20:07:34.631" endtime="20220516 20:12:34.614"/>
</kw>
<status status="FAIL" starttime="20220516 20:07:34.630" endtime="20220516 20:12:34.614"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/putobject/key=value/</arg>
<status status="NOT RUN" starttime="20220516 20:12:34.615" endtime="20220516 20:12:34.615"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220516 20:12:34.615" endtime="20220516 20:12:34.615"/>
</kw>
<kw name="Execute" library="os">
<arg>touch -f /tmp/zerobyte</arg>
<status status="NOT RUN" starttime="20220516 20:12:34.615" endtime="20220516 20:12:34.615"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/zerobyte --body /tmp/zerobyte</arg>
<status status="NOT RUN" starttime="20220516 20:12:34.615" endtime="20220516 20:12:34.618"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/putobject/key=value/</arg>
<status status="NOT RUN" starttime="20220516 20:12:34.618" endtime="20220516 20:12:34.619"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>zerobyte</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220516 20:12:34.619" endtime="20220516 20:12:34.619"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20220516 20:07:34.610" endtime="20220516 20:12:34.619">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-s5-s11-t2" name="Get object from s3">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 /tmp/testfile.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 20:12:34.635" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-5640818385/putobject/key=value/f1 /tmp/testfile.result 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 20:12:35.963" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 20:12:35.963" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 16 May 2022 20:11:36 GMT",
    "ContentLength": 11,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20220516 20:12:34.626" endtime="20220516 20:12:35.963"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 20:12:35.965" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 16 May 2022 20:11:36 GMT",
    "ContentLength": 11,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Mon, 16 May 2022 20:12:35 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20220516 20:12:35.964" endtime="20220516 20:12:35.965"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 20:12:35.966" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 20:12:35.966" endtime="20220516 20:12:35.967"/>
</kw>
<status status="PASS" starttime="20220516 20:12:34.625" endtime="20220516 20:12:35.967"/>
</kw>
<msg timestamp="20220516 20:12:35.967" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 20:12:34.625" endtime="20220516 20:12:35.968"/>
</kw>
<msg timestamp="20220516 20:12:35.969" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 16 May 2022 20:11:36 GMT",
    "ContentLength": 11,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20220516 20:12:34.623" endtime="20220516 20:12:35.969"/>
</kw>
<msg timestamp="20220516 20:12:35.970" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 16 May 2022 20:11:36 GMT",
    "ContentLength": 11,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20220516 20:12:34.622" endtime="20220516 20:12:35.970"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/testfile</arg>
<arg>/tmp/testfile.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 20:12:35.990" level="INFO">Running command 'md5sum /tmp/testfile | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 20:12:36.010" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 20:12:36.010" level="INFO">${output} = 09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20220516 20:12:35.978" endtime="20220516 20:12:36.010"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 20:12:36.012" level="INFO">09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20220516 20:12:36.011" endtime="20220516 20:12:36.012"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 20:12:36.013" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 20:12:36.013" endtime="20220516 20:12:36.013"/>
</kw>
<status status="PASS" starttime="20220516 20:12:35.976" endtime="20220516 20:12:36.014"/>
</kw>
<msg timestamp="20220516 20:12:36.014" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 20:12:35.976" endtime="20220516 20:12:36.015"/>
</kw>
<msg timestamp="20220516 20:12:36.016" level="INFO">${checksumbefore} = 09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20220516 20:12:35.973" endtime="20220516 20:12:36.016"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 20:12:36.031" level="INFO">Running command 'md5sum /tmp/testfile.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 20:12:36.043" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 20:12:36.043" level="INFO">${output} = 09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20220516 20:12:36.021" endtime="20220516 20:12:36.043"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 20:12:36.045" level="INFO">09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20220516 20:12:36.044" endtime="20220516 20:12:36.045"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 20:12:36.046" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 20:12:36.045" endtime="20220516 20:12:36.046"/>
</kw>
<status status="PASS" starttime="20220516 20:12:36.019" endtime="20220516 20:12:36.047"/>
</kw>
<msg timestamp="20220516 20:12:36.047" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 20:12:36.018" endtime="20220516 20:12:36.048"/>
</kw>
<msg timestamp="20220516 20:12:36.048" level="INFO">${checksumafter} = 09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20220516 20:12:36.017" endtime="20220516 20:12:36.048"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220516 20:12:36.049" endtime="20220516 20:12:36.049"/>
</kw>
<status status="PASS" starttime="20220516 20:12:35.971" endtime="20220516 20:12:36.049"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220516 20:12:34.620" endtime="20220516 20:12:36.050"/>
</test>
<test id="s1-s5-s11-t3" name="Get Partial object from s3 with both start and endoffset">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=0-4 /tmp/testfile1.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 20:12:36.073" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-5640818385/putobject/key=value/f1 --range bytes=0-4 /tmp/testfile1.result 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 20:12:36.971" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 20:12:36.971" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 16 May 2022 20:12:36 GMT",
    "ContentLength": 5,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-4/11",
    "ContentType": "appl...</msg>
<status status="PASS" starttime="20220516 20:12:36.062" endtime="20220516 20:12:36.971"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 20:12:36.973" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 16 May 2022 20:12:36 GMT",
    "ContentLength": 5,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-4/11",
    "ContentType": "application/octet-stream",
    "Expires": "Mon, 16 May 2022 20:12:36 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20220516 20:12:36.972" endtime="20220516 20:12:36.973"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 20:12:36.974" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 20:12:36.973" endtime="20220516 20:12:36.974"/>
</kw>
<status status="PASS" starttime="20220516 20:12:36.060" endtime="20220516 20:12:36.975"/>
</kw>
<msg timestamp="20220516 20:12:36.975" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 20:12:36.060" endtime="20220516 20:12:36.975"/>
</kw>
<msg timestamp="20220516 20:12:36.976" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 16 May 2022 20:12:36 GMT",
    "ContentLength": 5,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-4/11",
    "ContentType": "appl...</msg>
<status status="PASS" starttime="20220516 20:12:36.059" endtime="20220516 20:12:36.976"/>
</kw>
<msg timestamp="20220516 20:12:36.976" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 16 May 2022 20:12:36 GMT",
    "ContentLength": 5,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-4/11",
    "ContentType": "appl...</msg>
<status status="PASS" starttime="20220516 20:12:36.056" endtime="20220516 20:12:36.977"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 20:12:36.977" endtime="20220516 20:12:36.977"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 0-4/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 20:12:36.977" endtime="20220516 20:12:36.978"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 20:12:36.978" endtime="20220516 20:12:36.979"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=0 bs=1 count=5 2&gt;/dev/null</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 20:12:36.983" level="INFO">Running command 'dd if=/tmp/testfile skip=0 bs=1 count=5 2&gt;/dev/null'.</msg>
<msg timestamp="20220516 20:12:36.987" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 20:12:36.987" level="INFO">${output} = Rando</msg>
<status status="PASS" starttime="20220516 20:12:36.981" endtime="20220516 20:12:36.987"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 20:12:36.988" level="INFO">Rando</msg>
<status status="PASS" starttime="20220516 20:12:36.987" endtime="20220516 20:12:36.988"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 20:12:36.989" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 20:12:36.988" endtime="20220516 20:12:36.989"/>
</kw>
<status status="PASS" starttime="20220516 20:12:36.980" endtime="20220516 20:12:36.990"/>
</kw>
<msg timestamp="20220516 20:12:36.990" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 20:12:36.980" endtime="20220516 20:12:36.990"/>
</kw>
<msg timestamp="20220516 20:12:36.991" level="INFO">${expectedData} = Rando</msg>
<status status="PASS" starttime="20220516 20:12:36.979" endtime="20220516 20:12:36.991"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile1.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 20:12:37.004" level="INFO">Running command 'cat /tmp/testfile1.result 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 20:12:37.008" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 20:12:37.008" level="INFO">${output} = Rando</msg>
<status status="PASS" starttime="20220516 20:12:37.001" endtime="20220516 20:12:37.008"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 20:12:37.009" level="INFO">Rando</msg>
<status status="PASS" starttime="20220516 20:12:37.009" endtime="20220516 20:12:37.009"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 20:12:37.011" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 20:12:37.010" endtime="20220516 20:12:37.011"/>
</kw>
<status status="PASS" starttime="20220516 20:12:36.992" endtime="20220516 20:12:37.011"/>
</kw>
<msg timestamp="20220516 20:12:37.011" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 20:12:36.992" endtime="20220516 20:12:37.012"/>
</kw>
<msg timestamp="20220516 20:12:37.012" level="INFO">${actualData} = Rando</msg>
<status status="PASS" starttime="20220516 20:12:36.991" endtime="20220516 20:12:37.012"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220516 20:12:37.013" endtime="20220516 20:12:37.014"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=2-4 /tmp/testfile1.result1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 20:12:37.021" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-5640818385/putobject/key=value/f1 --range bytes=2-4 /tmp/testfile1.result1 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 20:12:37.856" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 20:12:37.857" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 16 May 2022 20:12:36 GMT",
    "ContentLength": 3,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 2-4/11",
    "ContentType": "appl...</msg>
<status status="PASS" starttime="20220516 20:12:37.017" endtime="20220516 20:12:37.857"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 20:12:37.861" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 16 May 2022 20:12:36 GMT",
    "ContentLength": 3,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 2-4/11",
    "ContentType": "application/octet-stream",
    "Expires": "Mon, 16 May 2022 20:12:37 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20220516 20:12:37.859" endtime="20220516 20:12:37.861"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 20:12:37.867" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 20:12:37.862" endtime="20220516 20:12:37.867"/>
</kw>
<status status="PASS" starttime="20220516 20:12:37.017" endtime="20220516 20:12:37.867"/>
</kw>
<msg timestamp="20220516 20:12:37.867" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 20:12:37.016" endtime="20220516 20:12:37.868"/>
</kw>
<msg timestamp="20220516 20:12:37.868" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 16 May 2022 20:12:36 GMT",
    "ContentLength": 3,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 2-4/11",
    "ContentType": "appl...</msg>
<status status="PASS" starttime="20220516 20:12:37.015" endtime="20220516 20:12:37.868"/>
</kw>
<msg timestamp="20220516 20:12:37.869" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 16 May 2022 20:12:36 GMT",
    "ContentLength": 3,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 2-4/11",
    "ContentType": "appl...</msg>
<status status="PASS" starttime="20220516 20:12:37.014" endtime="20220516 20:12:37.869"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 20:12:37.872" endtime="20220516 20:12:37.873"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 2-4/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 20:12:37.873" endtime="20220516 20:12:37.874"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 20:12:37.874" endtime="20220516 20:12:37.874"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=2 bs=1 count=3 2&gt;/dev/null</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 20:12:37.883" level="INFO">Running command 'dd if=/tmp/testfile skip=2 bs=1 count=3 2&gt;/dev/null'.</msg>
<msg timestamp="20220516 20:12:37.886" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 20:12:37.886" level="INFO">${output} = ndo</msg>
<status status="PASS" starttime="20220516 20:12:37.877" endtime="20220516 20:12:37.886"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 20:12:37.888" level="INFO">ndo</msg>
<status status="PASS" starttime="20220516 20:12:37.887" endtime="20220516 20:12:37.888"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 20:12:37.891" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 20:12:37.889" endtime="20220516 20:12:37.891"/>
</kw>
<status status="PASS" starttime="20220516 20:12:37.876" endtime="20220516 20:12:37.892"/>
</kw>
<msg timestamp="20220516 20:12:37.892" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 20:12:37.876" endtime="20220516 20:12:37.893"/>
</kw>
<msg timestamp="20220516 20:12:37.894" level="INFO">${expectedData} = ndo</msg>
<status status="PASS" starttime="20220516 20:12:37.875" endtime="20220516 20:12:37.894"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile1.result1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 20:12:37.899" level="INFO">Running command 'cat /tmp/testfile1.result1 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 20:12:37.903" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 20:12:37.903" level="INFO">${output} = ndo</msg>
<status status="PASS" starttime="20220516 20:12:37.897" endtime="20220516 20:12:37.903"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 20:12:37.905" level="INFO">ndo</msg>
<status status="PASS" starttime="20220516 20:12:37.904" endtime="20220516 20:12:37.905"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 20:12:37.907" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 20:12:37.906" endtime="20220516 20:12:37.907"/>
</kw>
<status status="PASS" starttime="20220516 20:12:37.896" endtime="20220516 20:12:37.908"/>
</kw>
<msg timestamp="20220516 20:12:37.908" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 20:12:37.895" endtime="20220516 20:12:37.909"/>
</kw>
<msg timestamp="20220516 20:12:37.909" level="INFO">${actualData} = ndo</msg>
<status status="PASS" starttime="20220516 20:12:37.894" endtime="20220516 20:12:37.909"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220516 20:12:37.910" endtime="20220516 20:12:37.911"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=2-1000 /tmp/testfile1.result2</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 20:12:37.918" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-5640818385/putobject/key=value/f1 --range bytes=2-1000 /tmp/testfile1.result2 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 20:12:38.925" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 20:12:38.925" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 16 May 2022 20:12:36 GMT",
    "ContentLength": 9,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 2-10/11",
    "ContentType": "app...</msg>
<status status="PASS" starttime="20220516 20:12:37.915" endtime="20220516 20:12:38.925"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 20:12:38.929" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 16 May 2022 20:12:36 GMT",
    "ContentLength": 9,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 2-10/11",
    "ContentType": "application/octet-stream",
    "Expires": "Mon, 16 May 2022 20:12:38 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20220516 20:12:38.927" endtime="20220516 20:12:38.930"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 20:12:38.931" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 20:12:38.930" endtime="20220516 20:12:38.931"/>
</kw>
<status status="PASS" starttime="20220516 20:12:37.914" endtime="20220516 20:12:38.932"/>
</kw>
<msg timestamp="20220516 20:12:38.932" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 20:12:37.913" endtime="20220516 20:12:38.934"/>
</kw>
<msg timestamp="20220516 20:12:38.934" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 16 May 2022 20:12:36 GMT",
    "ContentLength": 9,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 2-10/11",
    "ContentType": "app...</msg>
<status status="PASS" starttime="20220516 20:12:37.912" endtime="20220516 20:12:38.935"/>
</kw>
<msg timestamp="20220516 20:12:38.936" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 16 May 2022 20:12:36 GMT",
    "ContentLength": 9,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 2-10/11",
    "ContentType": "app...</msg>
<status status="PASS" starttime="20220516 20:12:37.911" endtime="20220516 20:12:38.936"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 20:12:38.937" endtime="20220516 20:12:38.938"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 2-10/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 20:12:38.939" endtime="20220516 20:12:38.940"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 20:12:38.940" endtime="20220516 20:12:38.942"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=2 bs=1 count=9 2&gt;/dev/null</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 20:12:38.952" level="INFO">Running command 'dd if=/tmp/testfile skip=2 bs=1 count=9 2&gt;/dev/null'.</msg>
<msg timestamp="20220516 20:12:38.956" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 20:12:38.957" level="INFO">${output} = ndomtext</msg>
<status status="PASS" starttime="20220516 20:12:38.947" endtime="20220516 20:12:38.957"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 20:12:38.960" level="INFO">ndomtext</msg>
<status status="PASS" starttime="20220516 20:12:38.958" endtime="20220516 20:12:38.960"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 20:12:38.962" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 20:12:38.961" endtime="20220516 20:12:38.963"/>
</kw>
<status status="PASS" starttime="20220516 20:12:38.945" endtime="20220516 20:12:38.963"/>
</kw>
<msg timestamp="20220516 20:12:38.964" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 20:12:38.944" endtime="20220516 20:12:38.964"/>
</kw>
<msg timestamp="20220516 20:12:38.965" level="INFO">${expectedData} = ndomtext</msg>
<status status="PASS" starttime="20220516 20:12:38.942" endtime="20220516 20:12:38.965"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile1.result2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 20:12:38.975" level="INFO">Running command 'cat /tmp/testfile1.result2 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 20:12:38.981" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 20:12:38.981" level="INFO">${output} = ndomtext</msg>
<status status="PASS" starttime="20220516 20:12:38.969" endtime="20220516 20:12:38.981"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 20:12:38.984" level="INFO">ndomtext</msg>
<status status="PASS" starttime="20220516 20:12:38.983" endtime="20220516 20:12:38.984"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 20:12:38.985" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 20:12:38.984" endtime="20220516 20:12:38.985"/>
</kw>
<status status="PASS" starttime="20220516 20:12:38.968" endtime="20220516 20:12:38.986"/>
</kw>
<msg timestamp="20220516 20:12:38.986" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 20:12:38.967" endtime="20220516 20:12:38.987"/>
</kw>
<msg timestamp="20220516 20:12:38.987" level="INFO">${actualData} = ndomtext</msg>
<status status="PASS" starttime="20220516 20:12:38.966" endtime="20220516 20:12:38.987"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220516 20:12:38.988" endtime="20220516 20:12:38.988"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220516 20:12:36.054" endtime="20220516 20:12:38.989"/>
</test>
<test id="s1-s5-s11-t4" name="Get Partial object from s3 with both start and endoffset(start offset and endoffset is greater than file size)">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=10000-10000 /tmp/testfile2.result</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 20:12:38.998" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-5640818385/putobject/key=value/f1 --range bytes=10000-10000 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 20:12:39.966" level="INFO">${rc} = 255</msg>
<msg timestamp="20220516 20:12:39.966" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20220516 20:12:38.994" endtime="20220516 20:12:39.966"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 20:12:39.968" level="INFO">
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20220516 20:12:39.967" endtime="20220516 20:12:39.968"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 20:12:39.969" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 20:12:39.968" endtime="20220516 20:12:39.969"/>
</kw>
<msg timestamp="20220516 20:12:39.969" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20220516 20:12:38.993" endtime="20220516 20:12:39.969"/>
</kw>
<msg timestamp="20220516 20:12:39.970" level="INFO">${result} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20220516 20:12:38.990" endtime="20220516 20:12:39.970"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 20:12:39.970" endtime="20220516 20:12:39.970"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220516 20:12:38.989" endtime="20220516 20:12:39.971"/>
</test>
<test id="s1-s5-s11-t5" name="Get Partial object from s3 with both start and endoffset(end offset is greater than file size)">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=0-10000 /tmp/testfile2.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 20:12:39.986" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-5640818385/putobject/key=value/f1 --range bytes=0-10000 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 20:12:40.821" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 20:12:40.821" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 16 May 2022 20:12:36 GMT",
    "ContentLength": 11,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-10/11",
    "ContentType": "ap...</msg>
<status status="PASS" starttime="20220516 20:12:39.980" endtime="20220516 20:12:40.821"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 20:12:40.823" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 16 May 2022 20:12:36 GMT",
    "ContentLength": 11,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-10/11",
    "ContentType": "application/octet-stream",
    "Expires": "Mon, 16 May 2022 20:12:40 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20220516 20:12:40.822" endtime="20220516 20:12:40.824"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 20:12:40.825" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 20:12:40.824" endtime="20220516 20:12:40.826"/>
</kw>
<status status="PASS" starttime="20220516 20:12:39.978" endtime="20220516 20:12:40.826"/>
</kw>
<msg timestamp="20220516 20:12:40.827" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 20:12:39.978" endtime="20220516 20:12:40.828"/>
</kw>
<msg timestamp="20220516 20:12:40.829" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 16 May 2022 20:12:36 GMT",
    "ContentLength": 11,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-10/11",
    "ContentType": "ap...</msg>
<status status="PASS" starttime="20220516 20:12:39.976" endtime="20220516 20:12:40.829"/>
</kw>
<msg timestamp="20220516 20:12:40.830" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 16 May 2022 20:12:36 GMT",
    "ContentLength": 11,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-10/11",
    "ContentType": "ap...</msg>
<status status="PASS" starttime="20220516 20:12:39.974" endtime="20220516 20:12:40.830"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 20:12:40.831" endtime="20220516 20:12:40.832"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 0-10/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 20:12:40.832" endtime="20220516 20:12:40.833"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 20:12:40.833" endtime="20220516 20:12:40.834"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>cat /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 20:12:40.842" level="INFO">Running command 'cat /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 20:12:40.846" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 20:12:40.846" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20220516 20:12:40.838" endtime="20220516 20:12:40.847"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 20:12:40.848" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20220516 20:12:40.847" endtime="20220516 20:12:40.848"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 20:12:40.848" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 20:12:40.848" endtime="20220516 20:12:40.848"/>
</kw>
<status status="PASS" starttime="20220516 20:12:40.837" endtime="20220516 20:12:40.849"/>
</kw>
<msg timestamp="20220516 20:12:40.849" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 20:12:40.836" endtime="20220516 20:12:40.849"/>
</kw>
<msg timestamp="20220516 20:12:40.850" level="INFO">${expectedData} = Randomtext</msg>
<status status="PASS" starttime="20220516 20:12:40.835" endtime="20220516 20:12:40.850"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile2.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 20:12:40.857" level="INFO">Running command 'cat /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 20:12:40.861" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 20:12:40.862" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20220516 20:12:40.853" endtime="20220516 20:12:40.862"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 20:12:40.864" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20220516 20:12:40.863" endtime="20220516 20:12:40.865"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 20:12:40.867" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 20:12:40.865" endtime="20220516 20:12:40.867"/>
</kw>
<status status="PASS" starttime="20220516 20:12:40.852" endtime="20220516 20:12:40.868"/>
</kw>
<msg timestamp="20220516 20:12:40.868" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 20:12:40.851" endtime="20220516 20:12:40.869"/>
</kw>
<msg timestamp="20220516 20:12:40.869" level="INFO">${actualData} = Randomtext</msg>
<status status="PASS" starttime="20220516 20:12:40.850" endtime="20220516 20:12:40.869"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220516 20:12:40.869" endtime="20220516 20:12:40.870"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220516 20:12:39.972" endtime="20220516 20:12:40.871"/>
</test>
<test id="s1-s5-s11-t6" name="Get Partial object from s3 with only start offset">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=0- /tmp/testfile3.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 20:12:40.878" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-5640818385/putobject/key=value/f1 --range bytes=0- /tmp/testfile3.result 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 20:12:41.741" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 20:12:41.741" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 16 May 2022 20:12:36 GMT",
    "ContentLength": 11,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-10/11",
    "ContentType": "ap...</msg>
<status status="PASS" starttime="20220516 20:12:40.875" endtime="20220516 20:12:41.741"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 20:12:41.744" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 16 May 2022 20:12:36 GMT",
    "ContentLength": 11,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-10/11",
    "ContentType": "application/octet-stream",
    "Expires": "Mon, 16 May 2022 20:12:41 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20220516 20:12:41.743" endtime="20220516 20:12:41.744"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 20:12:41.747" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 20:12:41.744" endtime="20220516 20:12:41.747"/>
</kw>
<status status="PASS" starttime="20220516 20:12:40.874" endtime="20220516 20:12:41.748"/>
</kw>
<msg timestamp="20220516 20:12:41.748" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 20:12:40.874" endtime="20220516 20:12:41.749"/>
</kw>
<msg timestamp="20220516 20:12:41.749" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 16 May 2022 20:12:36 GMT",
    "ContentLength": 11,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-10/11",
    "ContentType": "ap...</msg>
<status status="PASS" starttime="20220516 20:12:40.873" endtime="20220516 20:12:41.749"/>
</kw>
<msg timestamp="20220516 20:12:41.750" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 16 May 2022 20:12:36 GMT",
    "ContentLength": 11,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-10/11",
    "ContentType": "ap...</msg>
<status status="PASS" starttime="20220516 20:12:40.872" endtime="20220516 20:12:41.750"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 20:12:41.751" endtime="20220516 20:12:41.752"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 0-10/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 20:12:41.753" endtime="20220516 20:12:41.754"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 20:12:41.754" endtime="20220516 20:12:41.755"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>cat /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 20:12:41.762" level="INFO">Running command 'cat /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 20:12:41.766" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 20:12:41.766" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20220516 20:12:41.757" endtime="20220516 20:12:41.766"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 20:12:41.768" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20220516 20:12:41.766" endtime="20220516 20:12:41.768"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 20:12:41.769" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 20:12:41.768" endtime="20220516 20:12:41.769"/>
</kw>
<status status="PASS" starttime="20220516 20:12:41.756" endtime="20220516 20:12:41.770"/>
</kw>
<msg timestamp="20220516 20:12:41.770" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 20:12:41.756" endtime="20220516 20:12:41.771"/>
</kw>
<msg timestamp="20220516 20:12:41.772" level="INFO">${expectedData} = Randomtext</msg>
<status status="PASS" starttime="20220516 20:12:41.755" endtime="20220516 20:12:41.772"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile3.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 20:12:41.779" level="INFO">Running command 'cat /tmp/testfile3.result 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 20:12:41.783" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 20:12:41.783" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20220516 20:12:41.776" endtime="20220516 20:12:41.783"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 20:12:41.785" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20220516 20:12:41.784" endtime="20220516 20:12:41.785"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 20:12:41.786" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 20:12:41.785" endtime="20220516 20:12:41.786"/>
</kw>
<status status="PASS" starttime="20220516 20:12:41.774" endtime="20220516 20:12:41.787"/>
</kw>
<msg timestamp="20220516 20:12:41.787" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 20:12:41.774" endtime="20220516 20:12:41.788"/>
</kw>
<msg timestamp="20220516 20:12:41.788" level="INFO">${actualData} = Randomtext</msg>
<status status="PASS" starttime="20220516 20:12:41.772" endtime="20220516 20:12:41.789"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220516 20:12:41.789" endtime="20220516 20:12:41.790"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220516 20:12:40.871" endtime="20220516 20:12:41.791"/>
</test>
<test id="s1-s5-s11-t7" name="Get Partial object from s3 with both start and endoffset which are equal">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=0-0 /tmp/testfile4.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 20:12:41.801" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-5640818385/putobject/key=value/f1 --range bytes=0-0 /tmp/testfile4.result 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 20:12:42.736" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 20:12:42.736" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 16 May 2022 20:12:36 GMT",
    "ContentLength": 1,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-0/11",
    "ContentType": "appl...</msg>
<status status="PASS" starttime="20220516 20:12:41.798" endtime="20220516 20:12:42.737"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 20:12:42.740" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 16 May 2022 20:12:36 GMT",
    "ContentLength": 1,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-0/11",
    "ContentType": "application/octet-stream",
    "Expires": "Mon, 16 May 2022 20:12:42 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20220516 20:12:42.738" endtime="20220516 20:12:42.741"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 20:12:42.743" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 20:12:42.742" endtime="20220516 20:12:42.743"/>
</kw>
<status status="PASS" starttime="20220516 20:12:41.797" endtime="20220516 20:12:42.744"/>
</kw>
<msg timestamp="20220516 20:12:42.745" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 20:12:41.796" endtime="20220516 20:12:42.747"/>
</kw>
<msg timestamp="20220516 20:12:42.748" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 16 May 2022 20:12:36 GMT",
    "ContentLength": 1,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-0/11",
    "ContentType": "appl...</msg>
<status status="PASS" starttime="20220516 20:12:41.796" endtime="20220516 20:12:42.748"/>
</kw>
<msg timestamp="20220516 20:12:42.749" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 16 May 2022 20:12:36 GMT",
    "ContentLength": 1,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-0/11",
    "ContentType": "appl...</msg>
<status status="PASS" starttime="20220516 20:12:41.795" endtime="20220516 20:12:42.749"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 20:12:42.750" endtime="20220516 20:12:42.751"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 0-0/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 20:12:42.752" endtime="20220516 20:12:42.753"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 20:12:42.753" endtime="20220516 20:12:42.755"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=0 bs=1 count=1 2&gt;/dev/null</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 20:12:42.764" level="INFO">Running command 'dd if=/tmp/testfile skip=0 bs=1 count=1 2&gt;/dev/null'.</msg>
<msg timestamp="20220516 20:12:42.768" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 20:12:42.769" level="INFO">${output} = R</msg>
<status status="PASS" starttime="20220516 20:12:42.759" endtime="20220516 20:12:42.769"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 20:12:42.772" level="INFO">R</msg>
<status status="PASS" starttime="20220516 20:12:42.770" endtime="20220516 20:12:42.772"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 20:12:42.774" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 20:12:42.773" endtime="20220516 20:12:42.774"/>
</kw>
<status status="PASS" starttime="20220516 20:12:42.758" endtime="20220516 20:12:42.775"/>
</kw>
<msg timestamp="20220516 20:12:42.776" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 20:12:42.757" endtime="20220516 20:12:42.777"/>
</kw>
<msg timestamp="20220516 20:12:42.778" level="INFO">${expectedData} = R</msg>
<status status="PASS" starttime="20220516 20:12:42.755" endtime="20220516 20:12:42.778"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile4.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 20:12:42.789" level="INFO">Running command 'cat /tmp/testfile4.result 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 20:12:42.794" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 20:12:42.794" level="INFO">${output} = R</msg>
<status status="PASS" starttime="20220516 20:12:42.784" endtime="20220516 20:12:42.794"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 20:12:42.796" level="INFO">R</msg>
<status status="PASS" starttime="20220516 20:12:42.795" endtime="20220516 20:12:42.796"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 20:12:42.797" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 20:12:42.796" endtime="20220516 20:12:42.798"/>
</kw>
<status status="PASS" starttime="20220516 20:12:42.782" endtime="20220516 20:12:42.798"/>
</kw>
<msg timestamp="20220516 20:12:42.798" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 20:12:42.780" endtime="20220516 20:12:42.800"/>
</kw>
<msg timestamp="20220516 20:12:42.800" level="INFO">${actualData} = R</msg>
<status status="PASS" starttime="20220516 20:12:42.779" endtime="20220516 20:12:42.800"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220516 20:12:42.801" endtime="20220516 20:12:42.802"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=4-4 /tmp/testfile5.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 20:12:42.813" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-5640818385/putobject/key=value/f1 --range bytes=4-4 /tmp/testfile5.result 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 20:12:43.688" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 20:12:43.688" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 16 May 2022 20:12:36 GMT",
    "ContentLength": 1,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 4-4/11",
    "ContentType": "appl...</msg>
<status status="PASS" starttime="20220516 20:12:42.806" endtime="20220516 20:12:43.689"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 20:12:43.691" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 16 May 2022 20:12:36 GMT",
    "ContentLength": 1,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 4-4/11",
    "ContentType": "application/octet-stream",
    "Expires": "Mon, 16 May 2022 20:12:43 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20220516 20:12:43.689" endtime="20220516 20:12:43.691"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 20:12:43.693" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 20:12:43.692" endtime="20220516 20:12:43.693"/>
</kw>
<status status="PASS" starttime="20220516 20:12:42.806" endtime="20220516 20:12:43.693"/>
</kw>
<msg timestamp="20220516 20:12:43.693" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 20:12:42.805" endtime="20220516 20:12:43.694"/>
</kw>
<msg timestamp="20220516 20:12:43.695" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 16 May 2022 20:12:36 GMT",
    "ContentLength": 1,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 4-4/11",
    "ContentType": "appl...</msg>
<status status="PASS" starttime="20220516 20:12:42.804" endtime="20220516 20:12:43.695"/>
</kw>
<msg timestamp="20220516 20:12:43.695" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 16 May 2022 20:12:36 GMT",
    "ContentLength": 1,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 4-4/11",
    "ContentType": "appl...</msg>
<status status="PASS" starttime="20220516 20:12:42.802" endtime="20220516 20:12:43.696"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 20:12:43.696" endtime="20220516 20:12:43.697"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 4-4/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 20:12:43.698" endtime="20220516 20:12:43.700"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 20:12:43.700" endtime="20220516 20:12:43.702"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=4 bs=1 count=1 2&gt;/dev/null</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 20:12:43.712" level="INFO">Running command 'dd if=/tmp/testfile skip=4 bs=1 count=1 2&gt;/dev/null'.</msg>
<msg timestamp="20220516 20:12:43.715" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 20:12:43.716" level="INFO">${output} = o</msg>
<status status="PASS" starttime="20220516 20:12:43.706" endtime="20220516 20:12:43.716"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 20:12:43.717" level="INFO">o</msg>
<status status="PASS" starttime="20220516 20:12:43.716" endtime="20220516 20:12:43.717"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 20:12:43.718" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 20:12:43.718" endtime="20220516 20:12:43.718"/>
</kw>
<status status="PASS" starttime="20220516 20:12:43.705" endtime="20220516 20:12:43.719"/>
</kw>
<msg timestamp="20220516 20:12:43.720" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 20:12:43.704" endtime="20220516 20:12:43.721"/>
</kw>
<msg timestamp="20220516 20:12:43.721" level="INFO">${expectedData} = o</msg>
<status status="PASS" starttime="20220516 20:12:43.703" endtime="20220516 20:12:43.722"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile5.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 20:12:43.729" level="INFO">Running command 'cat /tmp/testfile5.result 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 20:12:43.733" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 20:12:43.733" level="INFO">${output} = o</msg>
<status status="PASS" starttime="20220516 20:12:43.726" endtime="20220516 20:12:43.733"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 20:12:43.735" level="INFO">o</msg>
<status status="PASS" starttime="20220516 20:12:43.734" endtime="20220516 20:12:43.736"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 20:12:43.737" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 20:12:43.736" endtime="20220516 20:12:43.738"/>
</kw>
<status status="PASS" starttime="20220516 20:12:43.724" endtime="20220516 20:12:43.738"/>
</kw>
<msg timestamp="20220516 20:12:43.738" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 20:12:43.723" endtime="20220516 20:12:43.739"/>
</kw>
<msg timestamp="20220516 20:12:43.740" level="INFO">${actualData} = o</msg>
<status status="PASS" starttime="20220516 20:12:43.722" endtime="20220516 20:12:43.740"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220516 20:12:43.740" endtime="20220516 20:12:43.740"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220516 20:12:41.793" endtime="20220516 20:12:43.741"/>
</test>
<test id="s1-s5-s11-t8" name="Get Partial object from s3 to get last n bytes">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=-4 /tmp/testfile6.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 20:12:43.751" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-5640818385/putobject/key=value/f1 --range bytes=-4 /tmp/testfile6.result 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 20:12:44.704" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 20:12:44.705" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 16 May 2022 20:12:36 GMT",
    "ContentLength": 4,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 7-10/11",
    "ContentType": "app...</msg>
<status status="PASS" starttime="20220516 20:12:43.748" endtime="20220516 20:12:44.705"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 20:12:44.707" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 16 May 2022 20:12:36 GMT",
    "ContentLength": 4,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 7-10/11",
    "ContentType": "application/octet-stream",
    "Expires": "Mon, 16 May 2022 20:12:44 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20220516 20:12:44.706" endtime="20220516 20:12:44.708"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 20:12:44.710" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 20:12:44.708" endtime="20220516 20:12:44.710"/>
</kw>
<status status="PASS" starttime="20220516 20:12:43.747" endtime="20220516 20:12:44.710"/>
</kw>
<msg timestamp="20220516 20:12:44.711" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 20:12:43.746" endtime="20220516 20:12:44.712"/>
</kw>
<msg timestamp="20220516 20:12:44.712" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 16 May 2022 20:12:36 GMT",
    "ContentLength": 4,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 7-10/11",
    "ContentType": "app...</msg>
<status status="PASS" starttime="20220516 20:12:43.745" endtime="20220516 20:12:44.712"/>
</kw>
<msg timestamp="20220516 20:12:44.714" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 16 May 2022 20:12:36 GMT",
    "ContentLength": 4,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 7-10/11",
    "ContentType": "app...</msg>
<status status="PASS" starttime="20220516 20:12:43.743" endtime="20220516 20:12:44.714"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 20:12:44.715" endtime="20220516 20:12:44.716"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 7-10/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 20:12:44.716" endtime="20220516 20:12:44.716"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 20:12:44.716" endtime="20220516 20:12:44.717"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=7 bs=1 count=4 2&gt;/dev/null</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 20:12:44.723" level="INFO">Running command 'dd if=/tmp/testfile skip=7 bs=1 count=4 2&gt;/dev/null'.</msg>
<msg timestamp="20220516 20:12:44.728" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 20:12:44.728" level="INFO">${output} = ext</msg>
<status status="PASS" starttime="20220516 20:12:44.719" endtime="20220516 20:12:44.729"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 20:12:44.731" level="INFO">ext</msg>
<status status="PASS" starttime="20220516 20:12:44.730" endtime="20220516 20:12:44.731"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 20:12:44.733" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 20:12:44.731" endtime="20220516 20:12:44.733"/>
</kw>
<status status="PASS" starttime="20220516 20:12:44.718" endtime="20220516 20:12:44.734"/>
</kw>
<msg timestamp="20220516 20:12:44.735" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 20:12:44.718" endtime="20220516 20:12:44.736"/>
</kw>
<msg timestamp="20220516 20:12:44.736" level="INFO">${expectedData} = ext</msg>
<status status="PASS" starttime="20220516 20:12:44.717" endtime="20220516 20:12:44.736"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile6.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 20:12:44.742" level="INFO">Running command 'cat /tmp/testfile6.result 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 20:12:44.746" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 20:12:44.746" level="INFO">${output} = ext</msg>
<status status="PASS" starttime="20220516 20:12:44.739" endtime="20220516 20:12:44.746"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 20:12:44.748" level="INFO">ext</msg>
<status status="PASS" starttime="20220516 20:12:44.747" endtime="20220516 20:12:44.748"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 20:12:44.749" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 20:12:44.748" endtime="20220516 20:12:44.749"/>
</kw>
<status status="PASS" starttime="20220516 20:12:44.738" endtime="20220516 20:12:44.750"/>
</kw>
<msg timestamp="20220516 20:12:44.750" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 20:12:44.737" endtime="20220516 20:12:44.751"/>
</kw>
<msg timestamp="20220516 20:12:44.752" level="INFO">${actualData} = ext</msg>
<status status="PASS" starttime="20220516 20:12:44.736" endtime="20220516 20:12:44.752"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220516 20:12:44.752" endtime="20220516 20:12:44.754"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=-10000 /tmp/testfile7.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 20:12:44.763" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-5640818385/putobject/key=value/f1 --range bytes=-10000 /tmp/testfile7.result 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 20:12:45.583" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 20:12:45.584" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 16 May 2022 20:12:36 GMT",
    "ContentLength": 11,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-10/11",
    "ContentType": "ap...</msg>
<status status="PASS" starttime="20220516 20:12:44.758" endtime="20220516 20:12:45.584"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 20:12:45.586" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 16 May 2022 20:12:36 GMT",
    "ContentLength": 11,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-10/11",
    "ContentType": "application/octet-stream",
    "Expires": "Mon, 16 May 2022 20:12:45 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20220516 20:12:45.585" endtime="20220516 20:12:45.586"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 20:12:45.588" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 20:12:45.587" endtime="20220516 20:12:45.588"/>
</kw>
<status status="PASS" starttime="20220516 20:12:44.757" endtime="20220516 20:12:45.590"/>
</kw>
<msg timestamp="20220516 20:12:45.590" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 20:12:44.757" endtime="20220516 20:12:45.591"/>
</kw>
<msg timestamp="20220516 20:12:45.591" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 16 May 2022 20:12:36 GMT",
    "ContentLength": 11,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-10/11",
    "ContentType": "ap...</msg>
<status status="PASS" starttime="20220516 20:12:44.756" endtime="20220516 20:12:45.591"/>
</kw>
<msg timestamp="20220516 20:12:45.591" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 16 May 2022 20:12:36 GMT",
    "ContentLength": 11,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-10/11",
    "ContentType": "ap...</msg>
<status status="PASS" starttime="20220516 20:12:44.754" endtime="20220516 20:12:45.591"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 20:12:45.592" endtime="20220516 20:12:45.592"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 0-10/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 20:12:45.592" endtime="20220516 20:12:45.593"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 20:12:45.593" endtime="20220516 20:12:45.593"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>cat /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 20:12:45.608" level="INFO">Running command 'cat /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 20:12:45.609" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 20:12:45.610" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20220516 20:12:45.597" endtime="20220516 20:12:45.610"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 20:12:45.611" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20220516 20:12:45.610" endtime="20220516 20:12:45.611"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 20:12:45.612" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 20:12:45.612" endtime="20220516 20:12:45.612"/>
</kw>
<status status="PASS" starttime="20220516 20:12:45.596" endtime="20220516 20:12:45.613"/>
</kw>
<msg timestamp="20220516 20:12:45.613" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 20:12:45.595" endtime="20220516 20:12:45.614"/>
</kw>
<msg timestamp="20220516 20:12:45.614" level="INFO">${expectedData} = Randomtext</msg>
<status status="PASS" starttime="20220516 20:12:45.594" endtime="20220516 20:12:45.615"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile7.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 20:12:45.620" level="INFO">Running command 'cat /tmp/testfile7.result 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 20:12:45.624" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 20:12:45.624" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20220516 20:12:45.617" endtime="20220516 20:12:45.624"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 20:12:45.626" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20220516 20:12:45.625" endtime="20220516 20:12:45.627"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 20:12:45.627" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 20:12:45.627" endtime="20220516 20:12:45.628"/>
</kw>
<status status="PASS" starttime="20220516 20:12:45.616" endtime="20220516 20:12:45.628"/>
</kw>
<msg timestamp="20220516 20:12:45.629" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 20:12:45.616" endtime="20220516 20:12:45.630"/>
</kw>
<msg timestamp="20220516 20:12:45.631" level="INFO">${actualData} = Randomtext</msg>
<status status="PASS" starttime="20220516 20:12:45.615" endtime="20220516 20:12:45.631"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220516 20:12:45.631" endtime="20220516 20:12:45.632"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220516 20:12:43.742" endtime="20220516 20:12:45.633"/>
</test>
<test id="s1-s5-s11-t9" name="Incorrect values for end and start offset">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=-11-10000 /tmp/testfile8.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 20:12:45.649" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-5640818385/putobject/key=value/f1 --range bytes=-11-10000 /tmp/testfile8.result 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 20:12:46.481" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 20:12:46.481" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 16 May 2022 20:12:36 GMT",
    "ContentLength": 11,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20220516 20:12:45.643" endtime="20220516 20:12:46.481"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 20:12:46.482" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 16 May 2022 20:12:36 GMT",
    "ContentLength": 11,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Mon, 16 May 2022 20:12:46 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20220516 20:12:46.481" endtime="20220516 20:12:46.482"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 20:12:46.483" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 20:12:46.483" endtime="20220516 20:12:46.483"/>
</kw>
<status status="PASS" starttime="20220516 20:12:45.641" endtime="20220516 20:12:46.484"/>
</kw>
<msg timestamp="20220516 20:12:46.484" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 20:12:45.640" endtime="20220516 20:12:46.485"/>
</kw>
<msg timestamp="20220516 20:12:46.485" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 16 May 2022 20:12:36 GMT",
    "ContentLength": 11,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20220516 20:12:45.639" endtime="20220516 20:12:46.485"/>
</kw>
<msg timestamp="20220516 20:12:46.485" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 16 May 2022 20:12:36 GMT",
    "ContentLength": 11,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20220516 20:12:45.637" endtime="20220516 20:12:46.485"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 20:12:46.486" endtime="20220516 20:12:46.486"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 20:12:46.486" endtime="20220516 20:12:46.487"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>cat /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 20:12:46.491" level="INFO">Running command 'cat /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 20:12:46.494" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 20:12:46.494" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20220516 20:12:46.489" endtime="20220516 20:12:46.494"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 20:12:46.495" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20220516 20:12:46.495" endtime="20220516 20:12:46.496"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 20:12:46.496" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 20:12:46.496" endtime="20220516 20:12:46.496"/>
</kw>
<status status="PASS" starttime="20220516 20:12:46.488" endtime="20220516 20:12:46.497"/>
</kw>
<msg timestamp="20220516 20:12:46.497" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 20:12:46.487" endtime="20220516 20:12:46.498"/>
</kw>
<msg timestamp="20220516 20:12:46.498" level="INFO">${expectedData} = Randomtext</msg>
<status status="PASS" starttime="20220516 20:12:46.487" endtime="20220516 20:12:46.498"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile8.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 20:12:46.504" level="INFO">Running command 'cat /tmp/testfile8.result 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 20:12:46.506" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 20:12:46.506" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20220516 20:12:46.501" endtime="20220516 20:12:46.507"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 20:12:46.508" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20220516 20:12:46.507" endtime="20220516 20:12:46.508"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 20:12:46.508" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 20:12:46.508" endtime="20220516 20:12:46.509"/>
</kw>
<status status="PASS" starttime="20220516 20:12:46.500" endtime="20220516 20:12:46.509"/>
</kw>
<msg timestamp="20220516 20:12:46.509" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 20:12:46.499" endtime="20220516 20:12:46.510"/>
</kw>
<msg timestamp="20220516 20:12:46.510" level="INFO">${actualData} = Randomtext</msg>
<status status="PASS" starttime="20220516 20:12:46.498" endtime="20220516 20:12:46.510"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220516 20:12:46.511" endtime="20220516 20:12:46.511"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=11-8 /tmp/testfile9.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 20:12:46.517" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-5640818385/putobject/key=value/f1 --range bytes=11-8 /tmp/testfile9.result 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 20:12:47.287" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 20:12:47.287" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 16 May 2022 20:12:36 GMT",
    "ContentLength": 11,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20220516 20:12:46.515" endtime="20220516 20:12:47.287"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 20:12:47.288" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 16 May 2022 20:12:36 GMT",
    "ContentLength": 11,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Mon, 16 May 2022 20:12:47 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20220516 20:12:47.288" endtime="20220516 20:12:47.288"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 20:12:47.289" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 20:12:47.289" endtime="20220516 20:12:47.289"/>
</kw>
<status status="PASS" starttime="20220516 20:12:46.514" endtime="20220516 20:12:47.290"/>
</kw>
<msg timestamp="20220516 20:12:47.290" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 20:12:46.514" endtime="20220516 20:12:47.290"/>
</kw>
<msg timestamp="20220516 20:12:47.291" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 16 May 2022 20:12:36 GMT",
    "ContentLength": 11,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20220516 20:12:46.513" endtime="20220516 20:12:47.291"/>
</kw>
<msg timestamp="20220516 20:12:47.291" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 16 May 2022 20:12:36 GMT",
    "ContentLength": 11,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20220516 20:12:46.512" endtime="20220516 20:12:47.291"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 20:12:47.291" endtime="20220516 20:12:47.292"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 20:12:47.292" endtime="20220516 20:12:47.293"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>cat /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 20:12:47.298" level="INFO">Running command 'cat /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 20:12:47.300" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 20:12:47.300" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20220516 20:12:47.294" endtime="20220516 20:12:47.300"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 20:12:47.301" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20220516 20:12:47.301" endtime="20220516 20:12:47.301"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 20:12:47.302" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 20:12:47.302" endtime="20220516 20:12:47.302"/>
</kw>
<status status="PASS" starttime="20220516 20:12:47.294" endtime="20220516 20:12:47.303"/>
</kw>
<msg timestamp="20220516 20:12:47.303" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 20:12:47.293" endtime="20220516 20:12:47.303"/>
</kw>
<msg timestamp="20220516 20:12:47.304" level="INFO">${expectedData} = Randomtext</msg>
<status status="PASS" starttime="20220516 20:12:47.293" endtime="20220516 20:12:47.304"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile8.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 20:12:47.308" level="INFO">Running command 'cat /tmp/testfile8.result 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 20:12:47.311" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 20:12:47.311" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20220516 20:12:47.306" endtime="20220516 20:12:47.311"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 20:12:47.312" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20220516 20:12:47.311" endtime="20220516 20:12:47.312"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 20:12:47.313" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 20:12:47.312" endtime="20220516 20:12:47.313"/>
</kw>
<status status="PASS" starttime="20220516 20:12:47.305" endtime="20220516 20:12:47.314"/>
</kw>
<msg timestamp="20220516 20:12:47.314" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 20:12:47.305" endtime="20220516 20:12:47.314"/>
</kw>
<msg timestamp="20220516 20:12:47.314" level="INFO">${actualData} = Randomtext</msg>
<status status="PASS" starttime="20220516 20:12:47.304" endtime="20220516 20:12:47.314"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220516 20:12:47.315" endtime="20220516 20:12:47.316"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220516 20:12:45.635" endtime="20220516 20:12:47.316"/>
</test>
<test id="s1-s5-s11-t10" name="Zero byte file">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/zerobyte --range bytes=0-0 /tmp/testfile2.result</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 20:12:47.322" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-5640818385/putobject/key=value/zerobyte --range bytes=0-0 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 20:12:48.064" level="INFO">${rc} = 255</msg>
<msg timestamp="20220516 20:12:48.064" level="INFO">${output} = 
An error occurred (NoSuchKey) when calling the GetObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20220516 20:12:47.320" endtime="20220516 20:12:48.064"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 20:12:48.067" level="INFO">
An error occurred (NoSuchKey) when calling the GetObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20220516 20:12:48.064" endtime="20220516 20:12:48.067"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 20:12:48.068" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 20:12:48.068" endtime="20220516 20:12:48.069"/>
</kw>
<msg timestamp="20220516 20:12:48.069" level="INFO">${output} = 
An error occurred (NoSuchKey) when calling the GetObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20220516 20:12:47.319" endtime="20220516 20:12:48.069"/>
</kw>
<msg timestamp="20220516 20:12:48.069" level="INFO">${result} = 
An error occurred (NoSuchKey) when calling the GetObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20220516 20:12:47.318" endtime="20220516 20:12:48.069"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20220516 20:12:48.071" level="FAIL">'
An error occurred (NoSuchKey) when calling the GetObject operation: The specified key does not exist' does not contain 'InvalidRange'</msg>
<status status="FAIL" starttime="20220516 20:12:48.070" endtime="20220516 20:12:48.071"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/zerobyte --range bytes=0-1 /tmp/testfile2.result</arg>
<arg>255</arg>
<status status="NOT RUN" starttime="20220516 20:12:48.071" endtime="20220516 20:12:48.071"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220516 20:12:48.072" endtime="20220516 20:12:48.072"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/zerobyte --range bytes=0-10000 /tmp/testfile2.result</arg>
<arg>255</arg>
<status status="NOT RUN" starttime="20220516 20:12:48.072" endtime="20220516 20:12:48.072"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220516 20:12:48.072" endtime="20220516 20:12:48.072"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20220516 20:12:47.317" endtime="20220516 20:12:48.073">'
An error occurred (NoSuchKey) when calling the GetObject operation: The specified key does not exist' does not contain 'InvalidRange'</status>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="FAIL" starttime="20220516 20:07:13.663" endtime="20220516 20:12:48.074"/>
</suite>
<suite id="s1-s5-s12" name="Webui" source="/opt/hadoop/smoketest/s3/webui.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220516 20:12:48.095" level="INFO">${randStr} = 2172788159</msg>
<status status="PASS" starttime="20220516 20:12:48.094" endtime="20220516 20:12:48.095"/>
</kw>
<msg timestamp="20220516 20:12:48.095" level="INFO">${random} = ozone-test-2172788159</msg>
<status status="PASS" starttime="20220516 20:12:48.094" endtime="20220516 20:12:48.095"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220516 20:12:48.097" level="INFO">${PREFIX} = ozone-test-2172788159</msg>
<status status="PASS" starttime="20220516 20:12:48.095" endtime="20220516 20:12:48.097"/>
</kw>
<status status="PASS" starttime="20220516 20:12:48.093" endtime="20220516 20:12:48.098"/>
</kw>
<status status="PASS" starttime="20220516 20:12:48.093" endtime="20220516 20:12:48.098"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which apt-get</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 20:12:48.101" level="INFO">Running command 'which apt-get 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 20:12:48.104" level="INFO">${rc} = 1</msg>
<msg timestamp="20220516 20:12:48.104" level="INFO">${output} = which: no apt-get in (/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin)</msg>
<status status="PASS" starttime="20220516 20:12:48.099" endtime="20220516 20:12:48.104"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220516 20:12:48.104" endtime="20220516 20:12:48.105"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>yum --help</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 20:12:48.108" level="INFO">Running command 'yum --help 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 20:12:48.272" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 20:12:48.272" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
ovl: Error while doing RPMdb copy-up:
[Errno 13] Permission denied: '/var/lib/rpm/Obsoletename'
Usage: yum [options] COMMAND

List of Commands:

check          Check...</msg>
<status status="PASS" starttime="20220516 20:12:48.105" endtime="20220516 20:12:48.273"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Install aws cli s3 centos" library="commonawslib">
<kw name="Execute" library="os">
<arg>sudo -E yum install -y awscli</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 20:12:48.279" level="INFO">Running command 'sudo -E yum install -y awscli 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 20:12:48.843" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 20:12:48.843" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirror.fcix.net
 * epel: mirror.lshiy.com
 * extras: repo.ialab.dsu.edu
 * updates: mirrors.xmission.com
Package ...</msg>
<status status="PASS" starttime="20220516 20:12:48.276" endtime="20220516 20:12:48.843"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 20:12:48.846" level="INFO">Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirror.fcix.net
 * epel: mirror.lshiy.com
 * extras: repo.ialab.dsu.edu
 * updates: mirrors.xmission.com
Package awscli-1.14.28-5.el7_5.1.noarch already installed and latest version
Nothing to do</msg>
<status status="PASS" starttime="20220516 20:12:48.844" endtime="20220516 20:12:48.847"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 20:12:48.849" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 20:12:48.847" endtime="20220516 20:12:48.852"/>
</kw>
<status status="PASS" starttime="20220516 20:12:48.275" endtime="20220516 20:12:48.853"/>
</kw>
<msg timestamp="20220516 20:12:48.853" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 20:12:48.275" endtime="20220516 20:12:48.855"/>
</kw>
<status status="PASS" starttime="20220516 20:12:48.274" endtime="20220516 20:12:48.855"/>
</kw>
<status status="PASS" starttime="20220516 20:12:48.274" endtime="20220516 20:12:48.855"/>
</kw>
<status status="PASS" starttime="20220516 20:12:48.273" endtime="20220516 20:12:48.857"/>
</kw>
<status status="PASS" starttime="20220516 20:12:48.098" endtime="20220516 20:12:48.858"/>
</kw>
<status status="PASS" starttime="20220516 20:12:48.098" endtime="20220516 20:12:48.858"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 20:12:48.867" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 20:12:48.873" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 20:12:48.873" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20220516 20:12:48.863" endtime="20220516 20:12:48.874"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 20:12:48.875" level="INFO">s3g</msg>
<status status="PASS" starttime="20220516 20:12:48.874" endtime="20220516 20:12:48.875"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 20:12:48.876" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 20:12:48.876" endtime="20220516 20:12:48.877"/>
</kw>
<status status="PASS" starttime="20220516 20:12:48.862" endtime="20220516 20:12:48.878"/>
</kw>
<msg timestamp="20220516 20:12:48.878" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 20:12:48.862" endtime="20220516 20:12:48.879"/>
</kw>
<msg timestamp="20220516 20:12:48.879" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20220516 20:12:48.861" endtime="20220516 20:12:48.879"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220516 20:12:48.883" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220516 20:12:48.880" endtime="20220516 20:12:48.883"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 20:12:48.897" level="INFO">Running command 'kinit -k testuser/s3g@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 20:12:48.973" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 20:12:48.973" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 20:12:48.886" endtime="20220516 20:12:48.973"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 20:12:48.975" level="INFO"/>
<status status="PASS" starttime="20220516 20:12:48.974" endtime="20220516 20:12:48.975"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 20:12:48.975" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 20:12:48.975" endtime="20220516 20:12:48.975"/>
</kw>
<status status="PASS" starttime="20220516 20:12:48.885" endtime="20220516 20:12:48.976"/>
</kw>
<msg timestamp="20220516 20:12:48.976" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 20:12:48.885" endtime="20220516 20:12:48.977"/>
</kw>
<status status="PASS" starttime="20220516 20:12:48.884" endtime="20220516 20:12:48.978"/>
</kw>
<status status="PASS" starttime="20220516 20:12:48.883" endtime="20220516 20:12:48.978"/>
</kw>
<status status="PASS" starttime="20220516 20:12:48.861" endtime="20220516 20:12:48.979"/>
</kw>
<status status="PASS" starttime="20220516 20:12:48.860" endtime="20220516 20:12:48.979"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 20:12:48.986" level="INFO">Running command 'ozone s3 getsecret  2&gt;&amp;1'.</msg>
<msg timestamp="20220516 20:12:55.667" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 20:12:55.667" level="INFO">${output} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=f7769bc1a657ea184c2c54edea939f94012aba2596b4499d251cf819b952cada</msg>
<status status="PASS" starttime="20220516 20:12:48.983" endtime="20220516 20:12:55.667"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 20:12:55.668" level="INFO">awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=f7769bc1a657ea184c2c54edea939f94012aba2596b4499d251cf819b952cada</msg>
<status status="PASS" starttime="20220516 20:12:55.667" endtime="20220516 20:12:55.669"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 20:12:55.669" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 20:12:55.669" endtime="20220516 20:12:55.669"/>
</kw>
<status status="PASS" starttime="20220516 20:12:48.982" endtime="20220516 20:12:55.670"/>
</kw>
<msg timestamp="20220516 20:12:55.670" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 20:12:48.981" endtime="20220516 20:12:55.670"/>
</kw>
<msg timestamp="20220516 20:12:55.671" level="INFO">${result} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=f7769bc1a657ea184c2c54edea939f94012aba2596b4499d251cf819b952cada</msg>
<status status="PASS" starttime="20220516 20:12:48.980" endtime="20220516 20:12:55.671"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20220516 20:12:55.672" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20220516 20:12:55.671" endtime="20220516 20:12:55.672"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>sdsdasaasdasd</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20220516 20:12:55.673" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20220516 20:12:55.672" endtime="20220516 20:12:55.673"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20220516 20:12:55.673" level="INFO">${secret} = ['f7769bc1a657ea184c2c54edea939f94012aba2596b4499d251cf819b952cada']</msg>
<status status="PASS" starttime="20220516 20:12:55.673" endtime="20220516 20:12:55.673"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220516 20:12:55.675" level="INFO">${accessKey} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220516 20:12:55.674" endtime="20220516 20:12:55.675"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220516 20:12:55.676" level="INFO">${secret} = f7769bc1a657ea184c2c54edea939f94012aba2596b4499d251cf819b952cada</msg>
<status status="PASS" starttime="20220516 20:12:55.675" endtime="20220516 20:12:55.676"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 20:12:55.680" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 20:12:56.289" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 20:12:56.290" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 20:12:55.678" endtime="20220516 20:12:56.290"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 20:12:56.292" level="INFO"/>
<status status="PASS" starttime="20220516 20:12:56.291" endtime="20220516 20:12:56.293"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 20:12:56.293" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 20:12:56.293" endtime="20220516 20:12:56.293"/>
</kw>
<status status="PASS" starttime="20220516 20:12:55.677" endtime="20220516 20:12:56.294"/>
</kw>
<msg timestamp="20220516 20:12:56.294" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 20:12:55.677" endtime="20220516 20:12:56.297"/>
</kw>
<status status="PASS" starttime="20220516 20:12:55.676" endtime="20220516 20:12:56.298"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 20:12:56.302" level="INFO">Running command 'aws configure set aws_access_key_id testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 20:12:56.952" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 20:12:56.952" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 20:12:56.300" endtime="20220516 20:12:56.952"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 20:12:56.954" level="INFO"/>
<status status="PASS" starttime="20220516 20:12:56.952" endtime="20220516 20:12:56.954"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 20:12:56.955" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 20:12:56.954" endtime="20220516 20:12:56.955"/>
</kw>
<status status="PASS" starttime="20220516 20:12:56.299" endtime="20220516 20:12:56.956"/>
</kw>
<msg timestamp="20220516 20:12:56.956" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 20:12:56.298" endtime="20220516 20:12:56.957"/>
</kw>
<status status="PASS" starttime="20220516 20:12:56.298" endtime="20220516 20:12:56.958"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 20:12:56.968" level="INFO">Running command 'aws configure set aws_secret_access_key f7769bc1a657ea184c2c54edea939f94012aba2596b4499d251cf819b952cada 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 20:12:57.709" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 20:12:57.709" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 20:12:56.962" endtime="20220516 20:12:57.709"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 20:12:57.711" level="INFO"/>
<status status="PASS" starttime="20220516 20:12:57.710" endtime="20220516 20:12:57.712"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 20:12:57.713" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 20:12:57.712" endtime="20220516 20:12:57.713"/>
</kw>
<status status="PASS" starttime="20220516 20:12:56.961" endtime="20220516 20:12:57.714"/>
</kw>
<msg timestamp="20220516 20:12:57.714" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 20:12:56.959" endtime="20220516 20:12:57.715"/>
</kw>
<status status="PASS" starttime="20220516 20:12:56.958" endtime="20220516 20:12:57.716"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 20:12:57.723" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 20:12:58.370" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 20:12:58.370" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 20:12:57.719" endtime="20220516 20:12:58.370"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 20:12:58.371" level="INFO"/>
<status status="PASS" starttime="20220516 20:12:58.371" endtime="20220516 20:12:58.371"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 20:12:58.372" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 20:12:58.371" endtime="20220516 20:12:58.373"/>
</kw>
<status status="PASS" starttime="20220516 20:12:57.717" endtime="20220516 20:12:58.373"/>
</kw>
<msg timestamp="20220516 20:12:58.373" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 20:12:57.717" endtime="20220516 20:12:58.374"/>
</kw>
<status status="PASS" starttime="20220516 20:12:57.716" endtime="20220516 20:12:58.374"/>
</kw>
<status status="PASS" starttime="20220516 20:12:48.979" endtime="20220516 20:12:58.375"/>
</kw>
<status status="PASS" starttime="20220516 20:12:48.979" endtime="20220516 20:12:58.375"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220516 20:12:58.375" endtime="20220516 20:12:58.376"/>
</kw>
<status status="PASS" starttime="20220516 20:12:48.859" endtime="20220516 20:12:58.377"/>
</kw>
<status status="PASS" starttime="20220516 20:12:48.858" endtime="20220516 20:12:58.377"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${BUCKET}</var>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20220516 20:12:58.378" endtime="20220516 20:12:58.379"/>
</kw>
<msg timestamp="20220516 20:12:58.379" level="INFO">${BUCKET} = encrypted</msg>
<status status="PASS" starttime="20220516 20:12:58.377" endtime="20220516 20:12:58.379"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220516 20:12:58.380" level="INFO">${BUCKET} = encrypted</msg>
<status status="PASS" starttime="20220516 20:12:58.379" endtime="20220516 20:12:58.380"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220516 20:12:58.380" endtime="20220516 20:12:58.380"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create encrypted bucket" library="commonawslib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20220516 20:12:58.382" endtime="20220516 20:12:58.383"/>
</kw>
<kw name="Bucket Exists" library="shell">
<var>${exists}</var>
<arg>o3://${OM_SERVICE_ID}/s3v/encrypted</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 20:12:58.388" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://om/s3v/encrypted 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 20:13:08.689" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 20:13:08.689" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "s3v",
  "name" : "encrypted",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 610298757,
  "usedNamespace" : 12,
  "creationTime" : "2022-05-1...</msg>
<status status="PASS" starttime="20220516 20:12:58.383" endtime="20220516 20:13:08.689"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20220516 20:13:08.689" endtime="20220516 20:13:08.690"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'VOLUME_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20220516 20:13:08.691" endtime="20220516 20:13:08.691"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'BUCKET_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20220516 20:13:08.691" endtime="20220516 20:13:08.692"/>
</kw>
<msg timestamp="20220516 20:13:08.692" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20220516 20:12:58.383" endtime="20220516 20:13:08.692"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${exists}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20220516 20:13:08.693" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 20:13:08.693" endtime="20220516 20:13:08.694"/>
</kw>
<status status="PASS" starttime="20220516 20:12:58.381" endtime="20220516 20:13:08.694"/>
</kw>
<status status="PASS" starttime="20220516 20:12:58.381" endtime="20220516 20:13:08.694"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220516 20:13:08.694" endtime="20220516 20:13:08.695"/>
</kw>
<status status="PASS" starttime="20220516 20:12:48.092" endtime="20220516 20:13:08.695"/>
</kw>
<test id="s1-s5-s12-t1" name="S3 Gateway Web UI">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 20:13:08.708" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 20:13:08.714" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 20:13:08.714" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20220516 20:13:08.704" endtime="20220516 20:13:08.714"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 20:13:08.716" level="INFO">s3g</msg>
<status status="PASS" starttime="20220516 20:13:08.714" endtime="20220516 20:13:08.717"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 20:13:08.717" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 20:13:08.717" endtime="20220516 20:13:08.718"/>
</kw>
<status status="PASS" starttime="20220516 20:13:08.700" endtime="20220516 20:13:08.718"/>
</kw>
<msg timestamp="20220516 20:13:08.718" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 20:13:08.699" endtime="20220516 20:13:08.719"/>
</kw>
<msg timestamp="20220516 20:13:08.720" level="INFO">${hostname} = s3g</msg>
<status status="PASS" starttime="20220516 20:13:08.698" endtime="20220516 20:13:08.720"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 20:13:08.727" level="INFO">Running command 'kinit -k HTTP/s3g@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 20:13:08.739" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 20:13:08.739" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 20:13:08.723" endtime="20220516 20:13:08.739"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 20:13:08.741" level="INFO"/>
<status status="PASS" starttime="20220516 20:13:08.740" endtime="20220516 20:13:08.741"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 20:13:08.743" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 20:13:08.742" endtime="20220516 20:13:08.743"/>
</kw>
<status status="PASS" starttime="20220516 20:13:08.722" endtime="20220516 20:13:08.743"/>
</kw>
<msg timestamp="20220516 20:13:08.743" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 20:13:08.722" endtime="20220516 20:13:08.744"/>
</kw>
<status status="PASS" starttime="20220516 20:13:08.720" endtime="20220516 20:13:08.745"/>
</kw>
<status status="PASS" starttime="20220516 20:13:08.720" endtime="20220516 20:13:08.745"/>
</kw>
<status status="PASS" starttime="20220516 20:13:08.697" endtime="20220516 20:13:08.745"/>
</kw>
<status status="PASS" starttime="20220516 20:13:08.697" endtime="20220516 20:13:08.745"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -v ${ENDPOINT_URL}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 20:13:08.752" level="INFO">Running command 'curl --negotiate -u : -v http://s3g:9878 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 20:13:08.772" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 20:13:08.772" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20220516 20:13:08.748" endtime="20220516 20:13:08.772"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 20:13:08.774" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to s3g port 9878 (#0)
*   Trying 172.18.0.5...
* Connected to s3g (172.18.0.5) port 9878 (#0)
&gt; GET / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: s3g:9878
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 302 Found
&lt; Date: Mon, 16 May 2022 20:13:08 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Mon, 16 May 2022 20:13:08 GMT
&lt; Date: Mon, 16 May 2022 20:13:08 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/plain;charset=utf-8
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Location: http://s3g:9878/static/
&lt; Content-Length: 0
&lt; 

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
* Connection #0 to host s3g left intact</msg>
<status status="PASS" starttime="20220516 20:13:08.772" endtime="20220516 20:13:08.774"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 20:13:08.775" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 20:13:08.774" endtime="20220516 20:13:08.775"/>
</kw>
<status status="PASS" starttime="20220516 20:13:08.747" endtime="20220516 20:13:08.776"/>
</kw>
<msg timestamp="20220516 20:13:08.776" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 20:13:08.746" endtime="20220516 20:13:08.777"/>
</kw>
<msg timestamp="20220516 20:13:08.777" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20220516 20:13:08.745" endtime="20220516 20:13:08.777"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 20:13:08.777" endtime="20220516 20:13:08.778"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>/static/</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 20:13:08.778" endtime="20220516 20:13:08.779"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -v ${ENDPOINT_URL}/static/index.html</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 20:13:08.785" level="INFO">Running command 'curl --negotiate -u : -v http://s3g:9878/static/index.html 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 20:13:08.880" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 20:13:08.880" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20220516 20:13:08.781" endtime="20220516 20:13:08.880"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 20:13:08.883" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to s3g port 9878 (#0)
*   Trying 172.18.0.5...
* Connected to s3g (172.18.0.5) port 9878 (#0)
&gt; GET /static/index.html HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: s3g:9878
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Authentication required
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 459
&lt; 
* Ignoring the response-body
{ [data not shown]

100   459  100   459    0     0  15872      0 --:--:-- --:--:-- --:--:-- 16392
* Connection #0 to host s3g left intact
* Issue another request to this URL: 'http://s3g:9878/static/index.html'
* Found bundle for host s3g: 0xbf3fa0
* Re-using existing connection! (#0) with host s3g
* Connected to s3g (172.18.0.5) port 9878 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; GET /static/index.html HTTP/1.1
&gt; Authorization: Negotiate YIICUQYJKoZIhvcSAQICAQBuggJAMIICPKADAgEFoQMCAQ6iBwMFACAAAACjggFQYYIBTDCCAUigAwIBBaENGwtFWEFNUExFLkNPTaIWMBSgAwIBA6ENMAsbBEhUVFAbA3MzZ6OCARgwggEUoAMCARKhAwIBAaKCAQYEggECsB3alAOHzZ9M4GLu3e5p+VmiWzTEs5rNq2m5pvL62Vg7EuBc1m1xpjyRJrTiByoSRkTzmQT9MRc0trKbhegNaKq3sE7PGwSQPXOMyqKpgW/vUvl80PX3+ZfRC4O9sGfP9WswYHT9DOEWZtt7yxFCzSiXvdv6ZA8L7ggBQBzKG5pM/Sm65JM9gLZjNvJS66qN+Ak4Fp0buJeXSiZUmnxs24AmK7Vc7YYxNYtYqD3T/HAGm+9XwxeVBpZePR7i9N7ZwC/Mb743QYnLNmK0dfcNaMJrt9gSUZDxwJ+aGMRKTo/JTQUM7um7yDUl6Nsu84KnhnrNmZQAuwgJG3DLwKxSPUD9pIHSMIHPoAMCARKigccEgcS9YZNpvisPWazdBbZRVxY+0WdLoTe+/FPK2dYbchhjicmJQTHHfT5FI5PJsI4XU288XiLngpcqWnPPWAlKzFyncAD6SWbFPWxNXBUHjeH4P8lQtJ1VFy/+kxK3MO0Bsl/Ih1HKRmKVPNfx+NYpJ9Ceig7qO4xYQfNKLlhKdyKl1ZlhBQCp1GKkPcP1PeTHDwV2BHvM0/fXoqR2Kg5X+O2cD4OBFQAptASZI6CnhTfKips+g5/Fgro3WF2fLtXou2hmgXkJ
&gt; User-Agent: curl/7.29.0
&gt; Host: s3g:9878
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Mon, 16 May 2022 20:13:08 GMT
&lt; Content-Type: text/html
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCtyLf3GiYgmokj5hYy95ICzKEoK5Pcptm6qSRxgd6NFuS2+0DS1wSD3oIGIE5J96i4LUjFSo/EIjAdxNDq2mWEzw1
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=HTTP/s3g@EXAMPLE.COM&amp;t=kerberos&amp;e=1652767988855&amp;s=dxmS7sgh4y4WDBzhDi2X5adXxZpA/X5DxgejywjYE8A="; Path=/; HttpOnly
&lt; Last-Modified: Mon, 16 May 2022 17:38:56 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 3106
&lt; 
{ [data not shown]

100  3106  100  3106    0     0  37290      0 --:--:-- --:--:-- --:--:-- 37290
* Closing connection 0
&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"&gt;
&lt;!--
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
--&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
    &lt;meta charset="utf-8"&gt;
    &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
    &lt;meta name="viewport" content="width=device-width, initial-scale=1"&gt;
    &lt;meta http-equiv="Content-Security-Policy" content="script-src 'self';"&gt;
    &lt;!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags --&gt;
    &lt;meta name="description" content="Apache Ozone S3 gateway"&gt;

    &lt;title&gt;S3 gateway -- Apache Ozone&lt;/title&gt;

    &lt;link href="bootstrap-3.4.1/css/bootstrap.min.css" rel="stylesheet"&gt;
    &lt;link href="hadoop.css" rel="stylesheet"&gt;
    &lt;link href="ozone.css" rel="stylesheet"&gt;

&lt;/head&gt;

&lt;body&gt;

&lt;header class="navbar navbar-inverse navbar-fixed-top bs-docs-nav"&gt;
    &lt;div class="container-fluid"&gt;
        &lt;div class="navbar-header"&gt;
            &lt;button type="button" class="navbar-toggle collapsed"
                    data-toggle="collapse" data-target="#navbar"
                    aria-expanded="false" aria-controls="navbar"&gt;
                &lt;span class="sr-only"&gt;Toggle navigation&lt;/span&gt;
                &lt;span class="icon-bar"&gt;&lt;/span&gt;
                &lt;span class="icon-bar"&gt;&lt;/span&gt;
                &lt;span class="icon-bar"&gt;&lt;/span&gt;
            &lt;/button&gt;
            &lt;a class="navbar-brand" href="#"&gt;Ozone S3G&lt;/a&gt;
        &lt;/div&gt;
        &lt;div id="navbar" class="collapse navbar-collapse"&gt;
            &lt;ul class="nav navbar-nav" id="ui-tabs"&gt;
                &lt;li&gt;&lt;a href="docs"&gt;Documentation&lt;/a&gt;&lt;/li&gt;

            &lt;/ul&gt;
        &lt;/div&gt;&lt;!--/.nav-collapse --&gt;

    &lt;/div&gt;
&lt;/header&gt;


&lt;div class="container-fluid" style="margin: 12pt"&gt;

    &lt;h1&gt;S3 gateway&lt;/h1&gt;

    &lt;p&gt;This is an endpoint of Apache Ozone S3 gateway. Use it with any
        AWS S3 compatible tool
        with setting this url as an endpoint&lt;/p&gt;

    &lt;p&gt;For example with aws-cli:&lt;/p&gt;

    &lt;pre&gt;aws s3api --endpoint &lt;span id="s3gurl"&gt;&lt;/span&gt; create-bucket --bucket=wordcount&lt;/pre&gt;

    &lt;p&gt;For more information, please check the &lt;a href="docs"&gt;documentation.&lt;/a&gt;
    &lt;/p&gt;
&lt;/div&gt;&lt;!-- /.container --&gt;

&lt;script src="jquery-3.5.1.min.js"&gt;&lt;/script&gt;
&lt;script src="bootstrap-3.4.1/js/bootstrap.min.js"&gt;&lt;/script&gt;
&lt;script src="s3g.js"&gt;&lt;/script&gt;

&lt;/body&gt;
&lt;/html&gt;</msg>
<status status="PASS" starttime="20220516 20:13:08.881" endtime="20220516 20:13:08.883"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 20:13:08.885" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 20:13:08.884" endtime="20220516 20:13:08.885"/>
</kw>
<status status="PASS" starttime="20220516 20:13:08.780" endtime="20220516 20:13:08.886"/>
</kw>
<msg timestamp="20220516 20:13:08.886" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 20:13:08.780" endtime="20220516 20:13:08.888"/>
</kw>
<msg timestamp="20220516 20:13:08.891" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20220516 20:13:08.779" endtime="20220516 20:13:08.892"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Apache Ozone S3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220516 20:13:08.892" endtime="20220516 20:13:08.895"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220516 20:13:08.696" endtime="20220516 20:13:08.897"/>
</test>
<doc>S3 gateway web ui test</doc>
<status status="PASS" starttime="20220516 20:12:48.079" endtime="20220516 20:13:08.898"/>
</suite>
<status status="FAIL" starttime="20220516 18:27:24.019" endtime="20220516 20:13:08.922"/>
</suite>
<suite id="s1-s6" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s6-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:48:50.225" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:48:50.229" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:48:50.229" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220516 17:48:50.221" endtime="20220516 17:48:50.229"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:48:50.230" level="INFO">scm</msg>
<status status="PASS" starttime="20220516 17:48:50.229" endtime="20220516 17:48:50.231"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:48:50.231" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:48:50.231" endtime="20220516 17:48:50.232"/>
</kw>
<status status="PASS" starttime="20220516 17:48:50.220" endtime="20220516 17:48:50.232"/>
</kw>
<msg timestamp="20220516 17:48:50.232" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:48:50.219" endtime="20220516 17:48:50.234"/>
</kw>
<msg timestamp="20220516 17:48:50.234" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220516 17:48:50.219" endtime="20220516 17:48:50.234"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220516 17:48:50.236" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220516 17:48:50.234" endtime="20220516 17:48:50.236"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220516 17:48:50.241" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220516 17:48:50.250" level="INFO">${rc} = 0</msg>
<msg timestamp="20220516 17:48:50.250" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220516 17:48:50.239" endtime="20220516 17:48:50.250"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220516 17:48:50.251" level="INFO"/>
<status status="PASS" starttime="20220516 17:48:50.251" endtime="20220516 17:48:50.252"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220516 17:48:50.252" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220516 17:48:50.252" endtime="20220516 17:48:50.252"/>
</kw>
<status status="PASS" starttime="20220516 17:48:50.238" endtime="20220516 17:48:50.253"/>
</kw>
<msg timestamp="20220516 17:48:50.253" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220516 17:48:50.238" endtime="20220516 17:48:50.253"/>
</kw>
<status status="PASS" starttime="20220516 17:48:50.237" endtime="20220516 17:48:50.254"/>
</kw>
<status status="PASS" starttime="20220516 17:48:50.236" endtime="20220516 17:48:50.254"/>
</kw>
<status status="PASS" starttime="20220516 17:48:50.218" endtime="20220516 17:48:50.254"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220516 17:48:50.216" endtime="20220516 17:48:50.254"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20220516 17:48:50.138" endtime="20220516 17:48:50.256"/>
</suite>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="8624021"/>
</suite>
<statistics>
<total>
<stat pass="118" fail="20" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="6" fail="0" skip="0">no-bucket-type</stat>
</tag>
<suite>
<stat pass="118" fail="20" skip="0" id="s1" name="ozonesecure">ozonesecure</stat>
<stat pass="29" fail="0" skip="0" id="s1-s1" name="Basic">ozonesecure.Basic</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1-s1" name="Basic">ozonesecure.Basic.Basic</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s2" name="Getconf">ozonesecure.Basic.Getconf</stat>
<stat pass="15" fail="0" skip="0" id="s1-s1-s3" name="Links">ozonesecure.Basic.Links</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s4" name="Ozone-Shell-Single">ozonesecure.Basic.Ozone-Shell-Single</stat>
<stat pass="6" fail="0" skip="0" id="s1-s1-s5" name="Ozone-Shell">ozonesecure.Basic.Ozone-Shell</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s6" name="Single Node">ozonesecure.Basic.Single Node</stat>
<stat pass="18" fail="0" skip="0" id="s1-s2" name="Security">ozonesecure.Security</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2-s1" name="Admin-Cert">ozonesecure.Security.Admin-Cert</stat>
<stat pass="2" fail="0" skip="0" id="s1-s2-s2" name="Bucket-Encryption">ozonesecure.Security.Bucket-Encryption</stat>
<stat pass="9" fail="0" skip="0" id="s1-s2-s3" name="Ozone-Secure-Fs">ozonesecure.Security.Ozone-Secure-Fs</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2-s4" name="Ozone-Secure-S3">ozonesecure.Security.Ozone-Secure-S3</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s5" name="Ozone-Secure-Token">ozonesecure.Security.Ozone-Secure-Token</stat>
<stat pass="21" fail="0" skip="0" id="s1-s3" name="ozonefs-ofs-bucket">ozonesecure.ozonefs-ofs-bucket</stat>
<stat pass="21" fail="0" skip="0" id="s1-s4" name="ozonefs-o3fs-link">ozonesecure.ozonefs-o3fs-link</stat>
<stat pass="28" fail="20" skip="0" id="s1-s5" name="s3-encrypted">ozonesecure.s3-encrypted</stat>
<stat pass="0" fail="2" skip="0" id="s1-s5-s1" name="Awss3">ozonesecure.s3-encrypted.Awss3</stat>
<stat pass="0" fail="1" skip="0" id="s1-s5-s2" name="Boto3">ozonesecure.s3-encrypted.Boto3</stat>
<stat pass="3" fail="0" skip="0" id="s1-s5-s3" name="Bucketcreate">ozonesecure.s3-encrypted.Bucketcreate</stat>
<stat pass="2" fail="0" skip="0" id="s1-s5-s4" name="Bucketdelete">ozonesecure.s3-encrypted.Bucketdelete</stat>
<stat pass="2" fail="0" skip="0" id="s1-s5-s5" name="Buckethead">ozonesecure.s3-encrypted.Buckethead</stat>
<stat pass="3" fail="0" skip="0" id="s1-s5-s6" name="Bucketlist">ozonesecure.s3-encrypted.Bucketlist</stat>
<stat pass="4" fail="10" skip="0" id="s1-s5-s7" name="MultipartUpload">ozonesecure.s3-encrypted.MultipartUpload</stat>
<stat pass="3" fail="1" skip="0" id="s1-s5-s8" name="Objectcopy">ozonesecure.s3-encrypted.Objectcopy</stat>
<stat pass="2" fail="3" skip="0" id="s1-s5-s9" name="Objectdelete">ozonesecure.s3-encrypted.Objectdelete</stat>
<stat pass="0" fail="1" skip="0" id="s1-s5-s10" name="Objectmultidelete">ozonesecure.s3-encrypted.Objectmultidelete</stat>
<stat pass="8" fail="2" skip="0" id="s1-s5-s11" name="Objectputget">ozonesecure.s3-encrypted.Objectputget</stat>
<stat pass="1" fail="0" skip="0" id="s1-s5-s12" name="Webui">ozonesecure.s3-encrypted.Webui</stat>
<stat pass="1" fail="0" skip="0" id="s1-s6" name="Kinit">ozonesecure.Kinit</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
