<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 5.0.1 (Python 3.6.9 on linux)" generated="20220801 01:28:24.055" rpa="false" schemaversion="3">
<suite id="s1" name="ozonesecure">
<suite id="s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic">
<suite id="s1-s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s1-s1-t1" name="Check webui static resources" line="29">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:05:30.093" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:05:30.096" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:05:30.097" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220801 01:05:30.090" endtime="20220801 01:05:30.097"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:05:30.097" level="INFO">scm</msg>
<status status="PASS" starttime="20220801 01:05:30.097" endtime="20220801 01:05:30.098"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:05:30.098" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:05:30.098" endtime="20220801 01:05:30.098"/>
</kw>
<status status="PASS" starttime="20220801 01:05:30.089" endtime="20220801 01:05:30.098"/>
</kw>
<msg timestamp="20220801 01:05:30.099" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:05:30.089" endtime="20220801 01:05:30.101"/>
</kw>
<msg timestamp="20220801 01:05:30.101" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20220801 01:05:30.089" endtime="20220801 01:05:30.101"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:05:30.104" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:05:30.111" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:05:30.111" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:05:30.103" endtime="20220801 01:05:30.111"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:05:30.112" level="INFO"/>
<status status="PASS" starttime="20220801 01:05:30.111" endtime="20220801 01:05:30.112"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:05:30.113" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:05:30.112" endtime="20220801 01:05:30.113"/>
</kw>
<status status="PASS" starttime="20220801 01:05:30.102" endtime="20220801 01:05:30.113"/>
</kw>
<msg timestamp="20220801 01:05:30.113" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:05:30.102" endtime="20220801 01:05:30.114"/>
</kw>
<status status="PASS" starttime="20220801 01:05:30.101" endtime="20220801 01:05:30.114"/>
</kw>
<status status="PASS" starttime="20220801 01:05:30.101" endtime="20220801 01:05:30.114"/>
</kw>
<status status="PASS" starttime="20220801 01:05:30.088" endtime="20220801 01:05:30.114"/>
</kw>
<status status="PASS" starttime="20220801 01:05:30.088" endtime="20220801 01:05:30.114"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -s -I http://${SCM}:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:05:30.117" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:05:30.219" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:05:30.219" level="INFO">${output} = HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
...</msg>
<status status="PASS" starttime="20220801 01:05:30.115" endtime="20220801 01:05:30.219"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:05:30.220" level="INFO">HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 484

HTTP/1.1 200 OK
Date: Mon, 01 Aug 2022 01:05:30 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCCNjBBAKPeSTq8bc4cET+sE/FAS1avyk7X4wUgwesG+v9cxiEgtJgs9j7pfc0HPP0M8af2KeZfRnrhT2qMSRvnKga
Set-Cookie: hadoop.auth="u=HTTP&amp;p=HTTP/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1659351930211&amp;s=pJnojqXBpJTMvjipnrKurNVuCVxptMf8ekLwS1j1aCA="; Path=/; HttpOnly
Last-Modified: Mon, 01 Aug 2022 00:51:24 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20220801 01:05:30.220" endtime="20220801 01:05:30.220"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:05:30.221" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:05:30.221" endtime="20220801 01:05:30.221"/>
</kw>
<status status="PASS" starttime="20220801 01:05:30.115" endtime="20220801 01:05:30.221"/>
</kw>
<msg timestamp="20220801 01:05:30.222" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:05:30.115" endtime="20220801 01:05:30.222"/>
</kw>
<msg timestamp="20220801 01:05:30.222" level="INFO">${result} = HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
...</msg>
<status status="PASS" starttime="20220801 01:05:30.114" endtime="20220801 01:05:30.222"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220801 01:05:30.223" endtime="20220801 01:05:30.223"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220801 01:05:30.087" endtime="20220801 01:05:30.223"/>
</test>
<test id="s1-s1-s1-t2" name="Basic Freon smoketest" line="34">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:05:30.231" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:05:30.235" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:05:30.235" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220801 01:05:30.228" endtime="20220801 01:05:30.235"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:05:30.236" level="INFO">scm</msg>
<status status="PASS" starttime="20220801 01:05:30.236" endtime="20220801 01:05:30.236"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:05:30.237" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:05:30.236" endtime="20220801 01:05:30.237"/>
</kw>
<status status="PASS" starttime="20220801 01:05:30.228" endtime="20220801 01:05:30.237"/>
</kw>
<msg timestamp="20220801 01:05:30.237" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:05:30.228" endtime="20220801 01:05:30.238"/>
</kw>
<msg timestamp="20220801 01:05:30.238" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220801 01:05:30.227" endtime="20220801 01:05:30.238"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220801 01:05:30.239" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220801 01:05:30.238" endtime="20220801 01:05:30.239"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:05:30.243" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:05:30.250" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:05:30.250" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:05:30.241" endtime="20220801 01:05:30.250"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:05:30.251" level="INFO"/>
<status status="PASS" starttime="20220801 01:05:30.251" endtime="20220801 01:05:30.251"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:05:30.252" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:05:30.251" endtime="20220801 01:05:30.252"/>
</kw>
<status status="PASS" starttime="20220801 01:05:30.241" endtime="20220801 01:05:30.252"/>
</kw>
<msg timestamp="20220801 01:05:30.252" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:05:30.241" endtime="20220801 01:05:30.253"/>
</kw>
<status status="PASS" starttime="20220801 01:05:30.240" endtime="20220801 01:05:30.253"/>
</kw>
<status status="PASS" starttime="20220801 01:05:30.240" endtime="20220801 01:05:30.253"/>
</kw>
<status status="PASS" starttime="20220801 01:05:30.226" endtime="20220801 01:05:30.253"/>
</kw>
<status status="PASS" starttime="20220801 01:05:30.225" endtime="20220801 01:05:30.253"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>10</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220801 01:05:30.254" level="INFO">${random} = ZSdg2x6eby</msg>
<status status="PASS" starttime="20220801 01:05:30.253" endtime="20220801 01:05:30.254"/>
</kw>
<kw name="Freon OCKG" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:05:30.258" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p ZSdg2x6eby  2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:05:40.427" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:05:40.427" level="INFO">${output} = 2022-08-01 01:05:32,123 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-08-01 01:05:32,328 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220801 01:05:30.257" endtime="20220801 01:05:40.427"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:05:40.429" level="INFO">2022-08-01 01:05:32,123 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-08-01 01:05:32,328 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-08-01 01:05:32,328 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-08-01 01:05:32,801 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ZSdg2x6eby
2022-08-01 01:05:32,957 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-08-01 01:05:33,970 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-08-01 01:05:34,970 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-08-01 01:05:35,211 [main] INFO rpc.RpcClient: Creating Volume: vol1, with testuser as owner and space quota set to -1 bytes, counts quota set to -1
2022-08-01 01:05:35,351 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, testuser as owner, Versioning false, Storage Type set to DISK and Encryption set to false 
2022-08-01 01:05:35,971 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-08-01 01:05:36,404 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-08-01 01:05:36,741 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-08-01 01:05:36,979 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-08-01 01:05:37,979 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-08-01 01:05:38,980 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-08-01 01:05:39,980 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-08-01 01:05:40,073 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=3658.924634, max=3658.924634, mean=3658.924634, stddev=0.0, median=3658.924634, p75=3658.924634, p95=3658.924634, p98=3658.924634, p99=3658.924634, p999=3658.924634, mean_rate=0.21418374928158354, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-08-01 01:05:40,074 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 7
2022-08-01 01:05:40,076 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-08-01 01:05:40,076 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20220801 01:05:40.428" endtime="20220801 01:05:40.429"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:05:40.429" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:05:40.429" endtime="20220801 01:05:40.430"/>
</kw>
<status status="PASS" starttime="20220801 01:05:30.256" endtime="20220801 01:05:40.430"/>
</kw>
<msg timestamp="20220801 01:05:40.430" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:05:30.256" endtime="20220801 01:05:40.430"/>
</kw>
<msg timestamp="20220801 01:05:40.431" level="INFO">${result} = 2022-08-01 01:05:32,123 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-08-01 01:05:32,328 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220801 01:05:30.255" endtime="20220801 01:05:40.431"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220801 01:05:40.431" endtime="20220801 01:05:40.431"/>
</kw>
<status status="PASS" starttime="20220801 01:05:30.254" endtime="20220801 01:05:40.431"/>
</kw>
<kw name="Freon OCKV" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:05:40.436" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p ZSdg2x6eby  2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:05:47.525" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:05:47.525" level="INFO">${output} = 2022-08-01 01:05:42,397 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-08-01 01:05:42,512 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220801 01:05:40.434" endtime="20220801 01:05:47.525"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:05:47.527" level="INFO">2022-08-01 01:05:42,397 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-08-01 01:05:42,512 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-08-01 01:05:42,512 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-08-01 01:05:42,695 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ZSdg2x6eby
2022-08-01 01:05:42,783 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-08-01 01:05:43,788 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-08-01 01:05:44,788 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-08-01 01:05:44,936 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-08-01 01:05:45,789 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-08-01 01:05:46,789 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-08-01 01:05:47,013 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=70.428345, max=70.428345, mean=70.428345, stddev=0.0, median=70.428345, p75=70.428345, p95=70.428345, p98=70.428345, p99=70.428345, p999=70.428345, mean_rate=0.9381414395508328, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-08-01 01:05:47,017 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 4
2022-08-01 01:05:47,018 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-08-01 01:05:47,018 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20220801 01:05:47.526" endtime="20220801 01:05:47.527"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:05:47.527" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:05:47.527" endtime="20220801 01:05:47.527"/>
</kw>
<status status="PASS" starttime="20220801 01:05:40.434" endtime="20220801 01:05:47.528"/>
</kw>
<msg timestamp="20220801 01:05:47.528" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:05:40.433" endtime="20220801 01:05:47.528"/>
</kw>
<msg timestamp="20220801 01:05:47.529" level="INFO">${result} = 2022-08-01 01:05:42,397 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-08-01 01:05:42,512 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220801 01:05:40.433" endtime="20220801 01:05:47.529"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220801 01:05:47.529" endtime="20220801 01:05:47.529"/>
</kw>
<status status="PASS" starttime="20220801 01:05:40.431" endtime="20220801 01:05:47.529"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220801 01:05:30.225" endtime="20220801 01:05:47.529"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20220801 01:05:30.056" endtime="20220801 01:05:47.531"/>
</suite>
<suite id="s1-s1-s2" name="Getconf" source="/opt/hadoop/smoketest/basic/getconf.robot">
<test id="s1-s1-s2-t1" name="Get OM" line="22">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:05:47.539" level="INFO">Running command 'ozone getconf ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:05:49.106" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:05:49.106" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20220801 01:05:47.537" endtime="20220801 01:05:49.106"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:05:49.107" level="INFO">om</msg>
<status status="PASS" starttime="20220801 01:05:49.106" endtime="20220801 01:05:49.107"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:05:49.108" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:05:49.107" endtime="20220801 01:05:49.108"/>
</kw>
<status status="PASS" starttime="20220801 01:05:47.537" endtime="20220801 01:05:49.108"/>
</kw>
<msg timestamp="20220801 01:05:49.108" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:05:47.537" endtime="20220801 01:05:49.109"/>
</kw>
<msg timestamp="20220801 01:05:49.109" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20220801 01:05:47.536" endtime="20220801 01:05:49.109"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220801 01:05:49.109" endtime="20220801 01:05:49.109"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:05:49.113" level="INFO">Running command 'ozone getconf -ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:05:50.662" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:05:50.662" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20220801 01:05:49.111" endtime="20220801 01:05:50.662"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:05:50.663" level="INFO">om</msg>
<status status="PASS" starttime="20220801 01:05:50.662" endtime="20220801 01:05:50.663"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:05:50.663" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:05:50.663" endtime="20220801 01:05:50.664"/>
</kw>
<status status="PASS" starttime="20220801 01:05:49.110" endtime="20220801 01:05:50.664"/>
</kw>
<msg timestamp="20220801 01:05:50.664" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:05:49.110" endtime="20220801 01:05:50.664"/>
</kw>
<msg timestamp="20220801 01:05:50.665" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20220801 01:05:49.110" endtime="20220801 01:05:50.665"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220801 01:05:50.665" endtime="20220801 01:05:50.665"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220801 01:05:47.536" endtime="20220801 01:05:50.665"/>
</test>
<test id="s1-s1-s2-t2" name="Get SCM" line="28">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:05:50.670" level="INFO">Running command 'ozone getconf storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:05:52.133" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:05:52.133" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220801 01:05:50.668" endtime="20220801 01:05:52.134"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:05:52.135" level="INFO">scm</msg>
<status status="PASS" starttime="20220801 01:05:52.134" endtime="20220801 01:05:52.135"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:05:52.135" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:05:52.135" endtime="20220801 01:05:52.136"/>
</kw>
<status status="PASS" starttime="20220801 01:05:50.667" endtime="20220801 01:05:52.136"/>
</kw>
<msg timestamp="20220801 01:05:52.136" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:05:50.667" endtime="20220801 01:05:52.136"/>
</kw>
<msg timestamp="20220801 01:05:52.137" level="INFO">${result} = scm</msg>
<status status="PASS" starttime="20220801 01:05:50.667" endtime="20220801 01:05:52.137"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220801 01:05:52.137" endtime="20220801 01:05:52.137"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:05:52.142" level="INFO">Running command 'ozone getconf -storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:05:53.606" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:05:53.606" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220801 01:05:52.138" endtime="20220801 01:05:53.606"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:05:53.607" level="INFO">scm</msg>
<status status="PASS" starttime="20220801 01:05:53.606" endtime="20220801 01:05:53.607"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:05:53.607" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:05:53.607" endtime="20220801 01:05:53.608"/>
</kw>
<status status="PASS" starttime="20220801 01:05:52.138" endtime="20220801 01:05:53.608"/>
</kw>
<msg timestamp="20220801 01:05:53.608" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:05:52.138" endtime="20220801 01:05:53.608"/>
</kw>
<msg timestamp="20220801 01:05:53.609" level="INFO">${result} = scm</msg>
<status status="PASS" starttime="20220801 01:05:52.137" endtime="20220801 01:05:53.609"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220801 01:05:53.609" endtime="20220801 01:05:53.609"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220801 01:05:50.666" endtime="20220801 01:05:53.609"/>
</test>
<test id="s1-s1-s2-t3" name="Get existing config key" line="34">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:05:53.614" level="INFO">Running command 'ozone getconf confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:05:55.006" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:05:55.006" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20220801 01:05:53.612" endtime="20220801 01:05:55.006"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:05:55.007" level="INFO">om</msg>
<status status="PASS" starttime="20220801 01:05:55.007" endtime="20220801 01:05:55.007"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:05:55.008" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:05:55.007" endtime="20220801 01:05:55.008"/>
</kw>
<status status="PASS" starttime="20220801 01:05:53.611" endtime="20220801 01:05:55.008"/>
</kw>
<msg timestamp="20220801 01:05:55.008" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:05:53.611" endtime="20220801 01:05:55.009"/>
</kw>
<msg timestamp="20220801 01:05:55.009" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20220801 01:05:53.611" endtime="20220801 01:05:55.009"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220801 01:05:55.009" endtime="20220801 01:05:55.009"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220801 01:05:55.010" endtime="20220801 01:05:55.010"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:05:55.015" level="INFO">Running command 'ozone getconf -confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:05:56.401" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:05:56.402" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20220801 01:05:55.011" endtime="20220801 01:05:56.402"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:05:56.403" level="INFO">om</msg>
<status status="PASS" starttime="20220801 01:05:56.402" endtime="20220801 01:05:56.403"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:05:56.403" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:05:56.403" endtime="20220801 01:05:56.403"/>
</kw>
<status status="PASS" starttime="20220801 01:05:55.011" endtime="20220801 01:05:56.404"/>
</kw>
<msg timestamp="20220801 01:05:56.404" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:05:55.010" endtime="20220801 01:05:56.404"/>
</kw>
<msg timestamp="20220801 01:05:56.404" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20220801 01:05:55.010" endtime="20220801 01:05:56.404"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220801 01:05:56.404" endtime="20220801 01:05:56.405"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220801 01:05:56.405" endtime="20220801 01:05:56.405"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220801 01:05:53.610" endtime="20220801 01:05:56.406"/>
</test>
<test id="s1-s1-s2-t4" name="Get undefined config key" line="42">
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:05:56.409" level="INFO">Running command 'ozone getconf confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:05:57.710" level="INFO">${rc} = 255</msg>
<msg timestamp="20220801 01:05:57.710" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20220801 01:05:56.407" endtime="20220801 01:05:57.710"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:05:57.711" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20220801 01:05:57.710" endtime="20220801 01:05:57.711"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:05:57.711" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:05:57.711" endtime="20220801 01:05:57.712"/>
</kw>
<msg timestamp="20220801 01:05:57.712" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20220801 01:05:56.407" endtime="20220801 01:05:57.712"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220801 01:05:57.712" endtime="20220801 01:05:57.712"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:05:57.715" level="INFO">Running command 'ozone getconf -confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:05:59.069" level="INFO">${rc} = 255</msg>
<msg timestamp="20220801 01:05:59.070" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20220801 01:05:57.713" endtime="20220801 01:05:59.070"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:05:59.071" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20220801 01:05:59.070" endtime="20220801 01:05:59.071"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:05:59.071" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:05:59.071" endtime="20220801 01:05:59.072"/>
</kw>
<msg timestamp="20220801 01:05:59.072" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20220801 01:05:57.713" endtime="20220801 01:05:59.072"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220801 01:05:59.072" endtime="20220801 01:05:59.072"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220801 01:05:56.406" endtime="20220801 01:05:59.073"/>
</test>
<doc>Test 'ozone getconf' command</doc>
<status status="PASS" starttime="20220801 01:05:47.532" endtime="20220801 01:05:59.074"/>
</suite>
<suite id="s1-s1-s3" name="Links" source="/opt/hadoop/smoketest/basic/links.robot">
<kw name="Create volumes" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220801 01:05:59.090" level="INFO">${random} = 77260</msg>
<status status="PASS" starttime="20220801 01:05:59.090" endtime="20220801 01:05:59.090"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${source}</arg>
<arg>${random}-source</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220801 01:05:59.092" level="INFO">${source} = 77260-source</msg>
<status status="PASS" starttime="20220801 01:05:59.090" endtime="20220801 01:05:59.092"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${target}</arg>
<arg>${random}-target</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220801 01:05:59.093" level="INFO">${target} = 77260-target</msg>
<status status="PASS" starttime="20220801 01:05:59.092" endtime="20220801 01:05:59.093"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:05:59.096" level="INFO">Running command 'ozone sh volume create 77260-source 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:06:02.755" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:06:02.755" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:05:59.094" endtime="20220801 01:06:02.756"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:06:02.757" level="INFO"/>
<status status="PASS" starttime="20220801 01:06:02.756" endtime="20220801 01:06:02.757"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:06:02.757" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:06:02.757" endtime="20220801 01:06:02.757"/>
</kw>
<status status="PASS" starttime="20220801 01:05:59.094" endtime="20220801 01:06:02.757"/>
</kw>
<msg timestamp="20220801 01:06:02.757" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:05:59.094" endtime="20220801 01:06:02.758"/>
</kw>
<status status="PASS" starttime="20220801 01:05:59.093" endtime="20220801 01:06:02.758"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:06:02.761" level="INFO">Running command 'ozone sh volume create 77260-target 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:06:06.341" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:06:06.341" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:06:02.759" endtime="20220801 01:06:06.341"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:06:06.342" level="INFO"/>
<status status="PASS" starttime="20220801 01:06:06.341" endtime="20220801 01:06:06.342"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:06:06.342" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:06:06.342" endtime="20220801 01:06:06.343"/>
</kw>
<status status="PASS" starttime="20220801 01:06:02.759" endtime="20220801 01:06:06.343"/>
</kw>
<msg timestamp="20220801 01:06:06.343" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:06:02.759" endtime="20220801 01:06:06.343"/>
</kw>
<status status="PASS" starttime="20220801 01:06:02.758" endtime="20220801 01:06:06.344"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:06:06.347" level="INFO">Running command 'ozone sh bucket create 77260-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:06:10.431" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:06:10.431" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:06:06.346" endtime="20220801 01:06:10.431"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:06:10.432" level="INFO"/>
<status status="PASS" starttime="20220801 01:06:10.432" endtime="20220801 01:06:10.432"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:06:10.433" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:06:10.432" endtime="20220801 01:06:10.433"/>
</kw>
<status status="PASS" starttime="20220801 01:06:06.345" endtime="20220801 01:06:10.433"/>
</kw>
<msg timestamp="20220801 01:06:10.433" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:06:06.345" endtime="20220801 01:06:10.434"/>
</kw>
<status status="PASS" starttime="20220801 01:06:06.344" endtime="20220801 01:06:10.434"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:06:10.437" level="INFO">Running command 'ozone sh key put 77260-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:06:16.460" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:06:16.460" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:06:10.435" endtime="20220801 01:06:16.460"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:06:16.461" level="INFO"/>
<status status="PASS" starttime="20220801 01:06:16.460" endtime="20220801 01:06:16.461"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:06:16.461" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:06:16.461" endtime="20220801 01:06:16.462"/>
</kw>
<status status="PASS" starttime="20220801 01:06:10.435" endtime="20220801 01:06:16.462"/>
</kw>
<msg timestamp="20220801 01:06:16.462" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:06:10.434" endtime="20220801 01:06:16.462"/>
</kw>
<status status="PASS" starttime="20220801 01:06:10.434" endtime="20220801 01:06:16.462"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:06:16.465" level="INFO">Running command 'ozone sh bucket create 77260-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:06:20.182" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:06:20.182" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:06:16.464" endtime="20220801 01:06:20.182"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:06:20.183" level="INFO"/>
<status status="PASS" starttime="20220801 01:06:20.183" endtime="20220801 01:06:20.183"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:06:20.184" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:06:20.183" endtime="20220801 01:06:20.184"/>
</kw>
<status status="PASS" starttime="20220801 01:06:16.463" endtime="20220801 01:06:20.184"/>
</kw>
<msg timestamp="20220801 01:06:20.184" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:06:16.463" endtime="20220801 01:06:20.185"/>
</kw>
<status status="PASS" starttime="20220801 01:06:16.463" endtime="20220801 01:06:20.185"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:06:20.188" level="INFO">Running command 'ozone sh bucket link 77260-source/readable-bucket 77260-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:06:23.851" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:06:23.851" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:06:20.186" endtime="20220801 01:06:23.851"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:06:23.852" level="INFO"/>
<status status="PASS" starttime="20220801 01:06:23.851" endtime="20220801 01:06:23.852"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:06:23.853" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:06:23.852" endtime="20220801 01:06:23.853"/>
</kw>
<status status="PASS" starttime="20220801 01:06:20.186" endtime="20220801 01:06:23.853"/>
</kw>
<msg timestamp="20220801 01:06:23.853" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:06:20.186" endtime="20220801 01:06:23.854"/>
</kw>
<status status="PASS" starttime="20220801 01:06:20.185" endtime="20220801 01:06:23.854"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:06:23.857" level="INFO">Running command 'ozone sh bucket link 77260-source/readable-bucket 77260-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:06:27.708" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:06:27.709" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:06:23.855" endtime="20220801 01:06:27.709"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:06:27.710" level="INFO"/>
<status status="PASS" starttime="20220801 01:06:27.709" endtime="20220801 01:06:27.710"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:06:27.710" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:06:27.710" endtime="20220801 01:06:27.710"/>
</kw>
<status status="PASS" starttime="20220801 01:06:23.855" endtime="20220801 01:06:27.711"/>
</kw>
<msg timestamp="20220801 01:06:27.711" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:06:23.854" endtime="20220801 01:06:27.711"/>
</kw>
<status status="PASS" starttime="20220801 01:06:23.854" endtime="20220801 01:06:27.711"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:06:27.714" level="INFO">Running command 'ozone sh bucket link 77260-source/unreadable-bucket 77260-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:06:31.423" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:06:31.423" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:06:27.713" endtime="20220801 01:06:31.424"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:06:31.425" level="INFO"/>
<status status="PASS" starttime="20220801 01:06:31.424" endtime="20220801 01:06:31.425"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:06:31.425" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:06:31.425" endtime="20220801 01:06:31.425"/>
</kw>
<status status="PASS" starttime="20220801 01:06:27.712" endtime="20220801 01:06:31.425"/>
</kw>
<msg timestamp="20220801 01:06:31.426" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:06:27.712" endtime="20220801 01:06:31.426"/>
</kw>
<status status="PASS" starttime="20220801 01:06:27.711" endtime="20220801 01:06:31.426"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:06:31.429" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 77260-target 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:06:35.210" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:06:35.210" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220801 01:06:31.427" endtime="20220801 01:06:35.210"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:06:35.211" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220801 01:06:35.210" endtime="20220801 01:06:35.211"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:06:35.211" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:06:35.211" endtime="20220801 01:06:35.211"/>
</kw>
<status status="PASS" starttime="20220801 01:06:31.427" endtime="20220801 01:06:35.212"/>
</kw>
<msg timestamp="20220801 01:06:35.212" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:06:31.427" endtime="20220801 01:06:35.212"/>
</kw>
<status status="PASS" starttime="20220801 01:06:31.426" endtime="20220801 01:06:35.212"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:06:35.216" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 77260-source 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:06:39.161" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:06:39.161" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220801 01:06:35.214" endtime="20220801 01:06:39.161"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:06:39.162" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220801 01:06:39.162" endtime="20220801 01:06:39.162"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:06:39.163" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:06:39.162" endtime="20220801 01:06:39.163"/>
</kw>
<status status="PASS" starttime="20220801 01:06:35.213" endtime="20220801 01:06:39.163"/>
</kw>
<msg timestamp="20220801 01:06:39.163" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:06:35.213" endtime="20220801 01:06:39.164"/>
</kw>
<status status="PASS" starttime="20220801 01:06:35.213" endtime="20220801 01:06:39.164"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:06:39.167" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 77260-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:06:42.661" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:06:42.661" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220801 01:06:39.165" endtime="20220801 01:06:42.661"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:06:42.662" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220801 01:06:42.662" endtime="20220801 01:06:42.662"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:06:42.663" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:06:42.662" endtime="20220801 01:06:42.663"/>
</kw>
<status status="PASS" starttime="20220801 01:06:39.165" endtime="20220801 01:06:42.663"/>
</kw>
<msg timestamp="20220801 01:06:42.663" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:06:39.165" endtime="20220801 01:06:42.664"/>
</kw>
<status status="PASS" starttime="20220801 01:06:39.164" endtime="20220801 01:06:42.664"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/readable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:06:42.667" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 77260-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:06:46.422" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:06:46.422" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220801 01:06:42.666" endtime="20220801 01:06:46.422"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:06:46.423" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220801 01:06:46.423" endtime="20220801 01:06:46.423"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:06:46.424" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:06:46.423" endtime="20220801 01:06:46.424"/>
</kw>
<status status="PASS" starttime="20220801 01:06:42.665" endtime="20220801 01:06:46.424"/>
</kw>
<msg timestamp="20220801 01:06:46.424" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:06:42.665" endtime="20220801 01:06:46.425"/>
</kw>
<status status="PASS" starttime="20220801 01:06:42.664" endtime="20220801 01:06:46.425"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:06:46.428" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 77260-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:06:50.249" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:06:50.249" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220801 01:06:46.426" endtime="20220801 01:06:50.249"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:06:50.250" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220801 01:06:50.250" endtime="20220801 01:06:50.250"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:06:50.251" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:06:50.250" endtime="20220801 01:06:50.251"/>
</kw>
<status status="PASS" starttime="20220801 01:06:46.426" endtime="20220801 01:06:50.251"/>
</kw>
<msg timestamp="20220801 01:06:50.251" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:06:46.425" endtime="20220801 01:06:50.252"/>
</kw>
<status status="PASS" starttime="20220801 01:06:46.425" endtime="20220801 01:06:50.252"/>
</kw>
<status status="PASS" starttime="20220801 01:06:06.344" endtime="20220801 01:06:50.252"/>
</kw>
<status status="PASS" starttime="20220801 01:06:06.344" endtime="20220801 01:06:50.252"/>
</kw>
<status status="PASS" starttime="20220801 01:05:59.090" endtime="20220801 01:06:50.252"/>
</kw>
<test id="s1-s1-s3-t1" name="Link to non-existent bucket" line="73">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:06:50.258" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:06:50.261" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:06:50.261" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220801 01:06:50.256" endtime="20220801 01:06:50.261"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:06:50.262" level="INFO">scm</msg>
<status status="PASS" starttime="20220801 01:06:50.261" endtime="20220801 01:06:50.262"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:06:50.262" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:06:50.262" endtime="20220801 01:06:50.262"/>
</kw>
<status status="PASS" starttime="20220801 01:06:50.255" endtime="20220801 01:06:50.263"/>
</kw>
<msg timestamp="20220801 01:06:50.263" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:06:50.255" endtime="20220801 01:06:50.263"/>
</kw>
<msg timestamp="20220801 01:06:50.263" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220801 01:06:50.255" endtime="20220801 01:06:50.264"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220801 01:06:50.265" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220801 01:06:50.264" endtime="20220801 01:06:50.265"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:06:50.269" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:06:50.276" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:06:50.276" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:06:50.267" endtime="20220801 01:06:50.276"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:06:50.277" level="INFO"/>
<status status="PASS" starttime="20220801 01:06:50.276" endtime="20220801 01:06:50.277"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:06:50.277" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:06:50.277" endtime="20220801 01:06:50.277"/>
</kw>
<status status="PASS" starttime="20220801 01:06:50.267" endtime="20220801 01:06:50.278"/>
</kw>
<msg timestamp="20220801 01:06:50.278" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:06:50.266" endtime="20220801 01:06:50.278"/>
</kw>
<status status="PASS" starttime="20220801 01:06:50.266" endtime="20220801 01:06:50.278"/>
</kw>
<status status="PASS" starttime="20220801 01:06:50.265" endtime="20220801 01:06:50.278"/>
</kw>
<status status="PASS" starttime="20220801 01:06:50.254" endtime="20220801 01:06:50.279"/>
</kw>
<status status="PASS" starttime="20220801 01:06:50.254" endtime="20220801 01:06:50.279"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:06:50.282" level="INFO">Running command 'ozone sh bucket link 77260-source/no-such-bucket 77260-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:06:54.108" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:06:54.108" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:06:50.280" endtime="20220801 01:06:54.109"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:06:54.110" level="INFO"/>
<status status="PASS" starttime="20220801 01:06:54.109" endtime="20220801 01:06:54.110"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:06:54.110" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:06:54.110" endtime="20220801 01:06:54.110"/>
</kw>
<status status="PASS" starttime="20220801 01:06:50.280" endtime="20220801 01:06:54.111"/>
</kw>
<msg timestamp="20220801 01:06:54.111" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:06:50.279" endtime="20220801 01:06:54.111"/>
</kw>
<status status="PASS" starttime="20220801 01:06:50.279" endtime="20220801 01:06:54.111"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/dangling-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:06:54.114" level="INFO">Running command 'ozone sh key list 77260-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:06:57.919" level="INFO">${rc} = 255</msg>
<msg timestamp="20220801 01:06:57.919" level="INFO">${output} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20220801 01:06:54.112" endtime="20220801 01:06:57.919"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:06:57.920" level="INFO">BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20220801 01:06:57.919" endtime="20220801 01:06:57.920"/>
</kw>
<msg timestamp="20220801 01:06:57.920" level="INFO">${result} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20220801 01:06:54.111" endtime="20220801 01:06:57.920"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220801 01:06:57.921" endtime="20220801 01:06:57.921"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220801 01:06:50.253" endtime="20220801 01:06:57.921"/>
</test>
<test id="s1-s1-s3-t2" name="Key create passthrough" line="78">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:06:57.927" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:06:57.930" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:06:57.930" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220801 01:06:57.925" endtime="20220801 01:06:57.930"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:06:57.931" level="INFO">scm</msg>
<status status="PASS" starttime="20220801 01:06:57.931" endtime="20220801 01:06:57.931"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:06:57.932" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:06:57.931" endtime="20220801 01:06:57.932"/>
</kw>
<status status="PASS" starttime="20220801 01:06:57.925" endtime="20220801 01:06:57.932"/>
</kw>
<msg timestamp="20220801 01:06:57.932" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:06:57.925" endtime="20220801 01:06:57.933"/>
</kw>
<msg timestamp="20220801 01:06:57.933" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220801 01:06:57.924" endtime="20220801 01:06:57.933"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220801 01:06:57.934" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220801 01:06:57.933" endtime="20220801 01:06:57.934"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:06:57.937" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:06:57.944" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:06:57.944" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:06:57.935" endtime="20220801 01:06:57.944"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:06:57.945" level="INFO"/>
<status status="PASS" starttime="20220801 01:06:57.944" endtime="20220801 01:06:57.945"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:06:57.945" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:06:57.945" endtime="20220801 01:06:57.946"/>
</kw>
<status status="PASS" starttime="20220801 01:06:57.935" endtime="20220801 01:06:57.946"/>
</kw>
<msg timestamp="20220801 01:06:57.946" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:06:57.935" endtime="20220801 01:06:57.946"/>
</kw>
<status status="PASS" starttime="20220801 01:06:57.934" endtime="20220801 01:06:57.947"/>
</kw>
<status status="PASS" starttime="20220801 01:06:57.934" endtime="20220801 01:06:57.947"/>
</kw>
<status status="PASS" starttime="20220801 01:06:57.924" endtime="20220801 01:06:57.947"/>
</kw>
<status status="PASS" starttime="20220801 01:06:57.923" endtime="20220801 01:06:57.947"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:06:57.950" level="INFO">Running command 'ozone sh bucket link 77260-source/bucket1 77260-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:07:01.814" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:07:01.814" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:06:57.948" endtime="20220801 01:07:01.814"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:07:01.815" level="INFO"/>
<status status="PASS" starttime="20220801 01:07:01.814" endtime="20220801 01:07:01.815"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:07:01.815" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:07:01.815" endtime="20220801 01:07:01.816"/>
</kw>
<status status="PASS" starttime="20220801 01:06:57.948" endtime="20220801 01:07:01.816"/>
</kw>
<msg timestamp="20220801 01:07:01.816" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:06:57.947" endtime="20220801 01:07:01.816"/>
</kw>
<status status="PASS" starttime="20220801 01:06:57.947" endtime="20220801 01:07:01.817"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:07:01.820" level="INFO">Running command 'ozone sh bucket create 77260-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:07:05.719" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:07:05.719" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:07:01.818" endtime="20220801 01:07:05.720"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:07:05.721" level="INFO"/>
<status status="PASS" starttime="20220801 01:07:05.720" endtime="20220801 01:07:05.721"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:07:05.721" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:07:05.721" endtime="20220801 01:07:05.721"/>
</kw>
<status status="PASS" starttime="20220801 01:07:01.818" endtime="20220801 01:07:05.722"/>
</kw>
<msg timestamp="20220801 01:07:05.722" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:07:01.817" endtime="20220801 01:07:05.722"/>
</kw>
<status status="PASS" starttime="20220801 01:07:01.817" endtime="20220801 01:07:05.722"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:07:05.726" level="INFO">Running command 'ozone sh key put 77260-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:07:12.111" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:07:12.111" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:07:05.724" endtime="20220801 01:07:12.111"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:07:12.112" level="INFO"/>
<status status="PASS" starttime="20220801 01:07:12.111" endtime="20220801 01:07:12.112"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:07:12.113" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:07:12.112" endtime="20220801 01:07:12.113"/>
</kw>
<status status="PASS" starttime="20220801 01:07:05.723" endtime="20220801 01:07:12.113"/>
</kw>
<msg timestamp="20220801 01:07:12.113" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:07:05.723" endtime="20220801 01:07:12.113"/>
</kw>
<status status="PASS" starttime="20220801 01:07:05.722" endtime="20220801 01:07:12.114"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220801 01:07:12.115" level="INFO">${postfix} = 81630</msg>
<status status="PASS" starttime="20220801 01:07:12.115" endtime="20220801 01:07:12.115"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220801 01:07:12.116" level="INFO">${tmpfile} = /tmp/tempkey-81630</msg>
<status status="PASS" starttime="20220801 01:07:12.115" endtime="20220801 01:07:12.116"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:07:12.120" level="INFO">Running command 'ozone sh key get 77260-target/link1/key1 /tmp/tempkey-81630 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:07:18.023" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:07:18.023" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:07:12.117" endtime="20220801 01:07:18.023"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:07:18.025" level="INFO"/>
<status status="PASS" starttime="20220801 01:07:18.024" endtime="20220801 01:07:18.025"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:07:18.025" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:07:18.025" endtime="20220801 01:07:18.025"/>
</kw>
<status status="PASS" starttime="20220801 01:07:12.117" endtime="20220801 01:07:18.026"/>
</kw>
<msg timestamp="20220801 01:07:18.026" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:07:12.116" endtime="20220801 01:07:18.026"/>
</kw>
<status status="PASS" starttime="20220801 01:07:12.116" endtime="20220801 01:07:18.026"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20220801 01:07:18.029" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-81630 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:07:18.031" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20220801 01:07:18.027" endtime="20220801 01:07:18.031"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:07:18.036" level="INFO">Running command 'rm -f /tmp/tempkey-81630 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:07:18.038" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:07:18.038" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:07:18.034" endtime="20220801 01:07:18.038"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:07:18.039" level="INFO"/>
<status status="PASS" starttime="20220801 01:07:18.038" endtime="20220801 01:07:18.039"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:07:18.040" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:07:18.039" endtime="20220801 01:07:18.040"/>
</kw>
<status status="PASS" starttime="20220801 01:07:18.033" endtime="20220801 01:07:18.040"/>
</kw>
<msg timestamp="20220801 01:07:18.040" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:07:18.032" endtime="20220801 01:07:18.041"/>
</kw>
<status status="PASS" starttime="20220801 01:07:18.031" endtime="20220801 01:07:18.041"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220801 01:07:18.041" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20220801 01:07:18.041" endtime="20220801 01:07:18.041"/>
</kw>
<msg timestamp="20220801 01:07:18.042" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20220801 01:07:12.114" endtime="20220801 01:07:18.042"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220801 01:07:18.042" endtime="20220801 01:07:18.042"/>
</kw>
<status status="PASS" starttime="20220801 01:07:12.114" endtime="20220801 01:07:18.042"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220801 01:06:57.922" endtime="20220801 01:07:18.043"/>
</test>
<test id="s1-s1-s3-t3" name="Key read passthrough" line="84">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:07:18.048" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:07:18.053" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:07:18.053" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220801 01:07:18.046" endtime="20220801 01:07:18.053"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:07:18.054" level="INFO">scm</msg>
<status status="PASS" starttime="20220801 01:07:18.054" endtime="20220801 01:07:18.054"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:07:18.055" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:07:18.054" endtime="20220801 01:07:18.055"/>
</kw>
<status status="PASS" starttime="20220801 01:07:18.045" endtime="20220801 01:07:18.055"/>
</kw>
<msg timestamp="20220801 01:07:18.055" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:07:18.045" endtime="20220801 01:07:18.055"/>
</kw>
<msg timestamp="20220801 01:07:18.056" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220801 01:07:18.045" endtime="20220801 01:07:18.056"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220801 01:07:18.056" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220801 01:07:18.056" endtime="20220801 01:07:18.056"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:07:18.060" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:07:18.068" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:07:18.068" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:07:18.058" endtime="20220801 01:07:18.068"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:07:18.069" level="INFO"/>
<status status="PASS" starttime="20220801 01:07:18.068" endtime="20220801 01:07:18.069"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:07:18.069" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:07:18.069" endtime="20220801 01:07:18.069"/>
</kw>
<status status="PASS" starttime="20220801 01:07:18.058" endtime="20220801 01:07:18.070"/>
</kw>
<msg timestamp="20220801 01:07:18.070" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:07:18.057" endtime="20220801 01:07:18.070"/>
</kw>
<status status="PASS" starttime="20220801 01:07:18.057" endtime="20220801 01:07:18.070"/>
</kw>
<status status="PASS" starttime="20220801 01:07:18.057" endtime="20220801 01:07:18.070"/>
</kw>
<status status="PASS" starttime="20220801 01:07:18.044" endtime="20220801 01:07:18.071"/>
</kw>
<status status="PASS" starttime="20220801 01:07:18.044" endtime="20220801 01:07:18.071"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:07:18.074" level="INFO">Running command 'ozone sh key put 77260-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:07:23.888" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:07:23.888" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:07:18.072" endtime="20220801 01:07:23.888"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:07:23.889" level="INFO"/>
<status status="PASS" starttime="20220801 01:07:23.888" endtime="20220801 01:07:23.889"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:07:23.889" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:07:23.889" endtime="20220801 01:07:23.890"/>
</kw>
<status status="PASS" starttime="20220801 01:07:18.072" endtime="20220801 01:07:23.890"/>
</kw>
<msg timestamp="20220801 01:07:23.890" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:07:18.071" endtime="20220801 01:07:23.890"/>
</kw>
<status status="PASS" starttime="20220801 01:07:18.071" endtime="20220801 01:07:23.890"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220801 01:07:23.892" level="INFO">${postfix} = 83564</msg>
<status status="PASS" starttime="20220801 01:07:23.892" endtime="20220801 01:07:23.892"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220801 01:07:23.893" level="INFO">${tmpfile} = /tmp/tempkey-83564</msg>
<status status="PASS" starttime="20220801 01:07:23.893" endtime="20220801 01:07:23.893"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:07:23.896" level="INFO">Running command 'ozone sh key get 77260-source/bucket1/key2 /tmp/tempkey-83564 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:07:29.061" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:07:29.061" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:07:23.894" endtime="20220801 01:07:29.061"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:07:29.062" level="INFO"/>
<status status="PASS" starttime="20220801 01:07:29.061" endtime="20220801 01:07:29.062"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:07:29.063" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:07:29.062" endtime="20220801 01:07:29.063"/>
</kw>
<status status="PASS" starttime="20220801 01:07:23.894" endtime="20220801 01:07:29.063"/>
</kw>
<msg timestamp="20220801 01:07:29.063" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:07:23.893" endtime="20220801 01:07:29.064"/>
</kw>
<status status="PASS" starttime="20220801 01:07:23.893" endtime="20220801 01:07:29.064"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20220801 01:07:29.066" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/tempkey-83564 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:07:29.068" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20220801 01:07:29.064" endtime="20220801 01:07:29.068"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:07:29.072" level="INFO">Running command 'rm -f /tmp/tempkey-83564 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:07:29.075" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:07:29.075" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:07:29.070" endtime="20220801 01:07:29.075"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:07:29.076" level="INFO"/>
<status status="PASS" starttime="20220801 01:07:29.075" endtime="20220801 01:07:29.076"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:07:29.076" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:07:29.076" endtime="20220801 01:07:29.076"/>
</kw>
<status status="PASS" starttime="20220801 01:07:29.070" endtime="20220801 01:07:29.077"/>
</kw>
<msg timestamp="20220801 01:07:29.077" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:07:29.070" endtime="20220801 01:07:29.077"/>
</kw>
<status status="PASS" starttime="20220801 01:07:29.069" endtime="20220801 01:07:29.078"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220801 01:07:29.078" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20220801 01:07:29.078" endtime="20220801 01:07:29.078"/>
</kw>
<msg timestamp="20220801 01:07:29.078" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20220801 01:07:23.891" endtime="20220801 01:07:29.078"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220801 01:07:29.079" endtime="20220801 01:07:29.079"/>
</kw>
<status status="PASS" starttime="20220801 01:07:23.891" endtime="20220801 01:07:29.079"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220801 01:07:18.043" endtime="20220801 01:07:29.079"/>
</test>
<test id="s1-s1-s3-t4" name="Key list passthrough" line="88">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:07:29.085" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:07:29.088" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:07:29.088" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220801 01:07:29.083" endtime="20220801 01:07:29.088"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:07:29.089" level="INFO">scm</msg>
<status status="PASS" starttime="20220801 01:07:29.088" endtime="20220801 01:07:29.089"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:07:29.089" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:07:29.089" endtime="20220801 01:07:29.090"/>
</kw>
<status status="PASS" starttime="20220801 01:07:29.082" endtime="20220801 01:07:29.090"/>
</kw>
<msg timestamp="20220801 01:07:29.090" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:07:29.082" endtime="20220801 01:07:29.090"/>
</kw>
<msg timestamp="20220801 01:07:29.090" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220801 01:07:29.081" endtime="20220801 01:07:29.091"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220801 01:07:29.091" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220801 01:07:29.091" endtime="20220801 01:07:29.091"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:07:29.095" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:07:29.101" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:07:29.101" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:07:29.093" endtime="20220801 01:07:29.102"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:07:29.102" level="INFO"/>
<status status="PASS" starttime="20220801 01:07:29.102" endtime="20220801 01:07:29.103"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:07:29.103" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:07:29.103" endtime="20220801 01:07:29.103"/>
</kw>
<status status="PASS" starttime="20220801 01:07:29.093" endtime="20220801 01:07:29.103"/>
</kw>
<msg timestamp="20220801 01:07:29.104" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:07:29.092" endtime="20220801 01:07:29.104"/>
</kw>
<status status="PASS" starttime="20220801 01:07:29.092" endtime="20220801 01:07:29.104"/>
</kw>
<status status="PASS" starttime="20220801 01:07:29.091" endtime="20220801 01:07:29.104"/>
</kw>
<status status="PASS" starttime="20220801 01:07:29.081" endtime="20220801 01:07:29.104"/>
</kw>
<status status="PASS" starttime="20220801 01:07:29.081" endtime="20220801 01:07:29.105"/>
</kw>
<kw name="Execute" library="os">
<var>${target_list}</var>
<arg>ozone sh key list ${target}/link1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:07:29.108" level="INFO">Running command 'ozone sh key list 77260-target/link1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:07:32.922" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:07:32.922" level="INFO">${output} = key1
key2</msg>
<status status="PASS" starttime="20220801 01:07:29.106" endtime="20220801 01:07:32.922"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:07:32.923" level="INFO">key1
key2</msg>
<status status="PASS" starttime="20220801 01:07:32.922" endtime="20220801 01:07:32.923"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:07:32.924" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:07:32.923" endtime="20220801 01:07:32.924"/>
</kw>
<status status="PASS" starttime="20220801 01:07:29.105" endtime="20220801 01:07:32.924"/>
</kw>
<msg timestamp="20220801 01:07:32.924" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:07:29.105" endtime="20220801 01:07:32.924"/>
</kw>
<msg timestamp="20220801 01:07:32.925" level="INFO">${target_list} = key1
key2</msg>
<status status="PASS" starttime="20220801 01:07:29.105" endtime="20220801 01:07:32.925"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:07:32.928" level="INFO">Running command 'ozone sh key list 77260-source/bucket1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:07:37.201" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:07:37.201" level="INFO">${output} = key1
key2</msg>
<status status="PASS" starttime="20220801 01:07:32.926" endtime="20220801 01:07:37.202"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:07:37.203" level="INFO">key1
key2</msg>
<status status="PASS" starttime="20220801 01:07:37.202" endtime="20220801 01:07:37.203"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:07:37.203" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:07:37.203" endtime="20220801 01:07:37.203"/>
</kw>
<status status="PASS" starttime="20220801 01:07:32.926" endtime="20220801 01:07:37.204"/>
</kw>
<msg timestamp="20220801 01:07:37.204" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:07:32.925" endtime="20220801 01:07:37.204"/>
</kw>
<msg timestamp="20220801 01:07:37.204" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" starttime="20220801 01:07:32.925" endtime="20220801 01:07:37.204"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${target_list}</arg>
<arg>${source_list}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220801 01:07:37.205" endtime="20220801 01:07:37.205"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220801 01:07:37.205" endtime="20220801 01:07:37.205"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220801 01:07:37.206" endtime="20220801 01:07:37.206"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220801 01:07:29.080" endtime="20220801 01:07:37.206"/>
</test>
<test id="s1-s1-s3-t5" name="Key delete passthrough" line="95">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:07:37.212" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:07:37.215" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:07:37.215" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220801 01:07:37.210" endtime="20220801 01:07:37.215"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:07:37.216" level="INFO">scm</msg>
<status status="PASS" starttime="20220801 01:07:37.215" endtime="20220801 01:07:37.216"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:07:37.217" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:07:37.216" endtime="20220801 01:07:37.217"/>
</kw>
<status status="PASS" starttime="20220801 01:07:37.209" endtime="20220801 01:07:37.218"/>
</kw>
<msg timestamp="20220801 01:07:37.218" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:07:37.209" endtime="20220801 01:07:37.218"/>
</kw>
<msg timestamp="20220801 01:07:37.218" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220801 01:07:37.209" endtime="20220801 01:07:37.218"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220801 01:07:37.219" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220801 01:07:37.218" endtime="20220801 01:07:37.219"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:07:37.222" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:07:37.229" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:07:37.229" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:07:37.221" endtime="20220801 01:07:37.229"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:07:37.230" level="INFO"/>
<status status="PASS" starttime="20220801 01:07:37.230" endtime="20220801 01:07:37.230"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:07:37.231" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:07:37.230" endtime="20220801 01:07:37.231"/>
</kw>
<status status="PASS" starttime="20220801 01:07:37.220" endtime="20220801 01:07:37.231"/>
</kw>
<msg timestamp="20220801 01:07:37.231" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:07:37.220" endtime="20220801 01:07:37.232"/>
</kw>
<status status="PASS" starttime="20220801 01:07:37.219" endtime="20220801 01:07:37.232"/>
</kw>
<status status="PASS" starttime="20220801 01:07:37.219" endtime="20220801 01:07:37.232"/>
</kw>
<status status="PASS" starttime="20220801 01:07:37.208" endtime="20220801 01:07:37.232"/>
</kw>
<status status="PASS" starttime="20220801 01:07:37.208" endtime="20220801 01:07:37.232"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${target}/link1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:07:37.235" level="INFO">Running command 'ozone sh key delete 77260-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:07:41.020" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:07:41.021" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:07:37.234" endtime="20220801 01:07:41.021"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:07:41.022" level="INFO"/>
<status status="PASS" starttime="20220801 01:07:41.021" endtime="20220801 01:07:41.022"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:07:41.022" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:07:41.022" endtime="20220801 01:07:41.022"/>
</kw>
<status status="PASS" starttime="20220801 01:07:37.233" endtime="20220801 01:07:41.023"/>
</kw>
<msg timestamp="20220801 01:07:41.023" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:07:37.233" endtime="20220801 01:07:41.023"/>
</kw>
<status status="PASS" starttime="20220801 01:07:37.232" endtime="20220801 01:07:41.023"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:07:41.027" level="INFO">Running command 'ozone sh key list 77260-source/bucket1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:07:44.951" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:07:44.951" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20220801 01:07:41.025" endtime="20220801 01:07:44.951"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:07:44.952" level="INFO">key1</msg>
<status status="PASS" starttime="20220801 01:07:44.951" endtime="20220801 01:07:44.952"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:07:44.953" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:07:44.952" endtime="20220801 01:07:44.953"/>
</kw>
<status status="PASS" starttime="20220801 01:07:41.024" endtime="20220801 01:07:44.953"/>
</kw>
<msg timestamp="20220801 01:07:44.953" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:07:41.024" endtime="20220801 01:07:44.954"/>
</kw>
<msg timestamp="20220801 01:07:44.954" level="INFO">${source_list} = key1</msg>
<status status="PASS" starttime="20220801 01:07:41.023" endtime="20220801 01:07:44.954"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220801 01:07:44.954" endtime="20220801 01:07:44.954"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220801 01:07:37.207" endtime="20220801 01:07:44.955"/>
</test>
<test id="s1-s1-s3-t6" name="Bucket list contains links" line="100">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:07:44.960" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:07:44.963" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:07:44.963" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220801 01:07:44.958" endtime="20220801 01:07:44.963"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:07:44.964" level="INFO">scm</msg>
<status status="PASS" starttime="20220801 01:07:44.963" endtime="20220801 01:07:44.964"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:07:44.965" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:07:44.964" endtime="20220801 01:07:44.965"/>
</kw>
<status status="PASS" starttime="20220801 01:07:44.957" endtime="20220801 01:07:44.965"/>
</kw>
<msg timestamp="20220801 01:07:44.965" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:07:44.957" endtime="20220801 01:07:44.966"/>
</kw>
<msg timestamp="20220801 01:07:44.966" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220801 01:07:44.957" endtime="20220801 01:07:44.966"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220801 01:07:44.966" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220801 01:07:44.966" endtime="20220801 01:07:44.966"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:07:44.970" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:07:44.977" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:07:44.977" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:07:44.968" endtime="20220801 01:07:44.977"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:07:44.978" level="INFO"/>
<status status="PASS" starttime="20220801 01:07:44.977" endtime="20220801 01:07:44.978"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:07:44.978" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:07:44.978" endtime="20220801 01:07:44.978"/>
</kw>
<status status="PASS" starttime="20220801 01:07:44.968" endtime="20220801 01:07:44.979"/>
</kw>
<msg timestamp="20220801 01:07:44.979" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:07:44.967" endtime="20220801 01:07:44.979"/>
</kw>
<status status="PASS" starttime="20220801 01:07:44.967" endtime="20220801 01:07:44.979"/>
</kw>
<status status="PASS" starttime="20220801 01:07:44.967" endtime="20220801 01:07:44.979"/>
</kw>
<status status="PASS" starttime="20220801 01:07:44.956" endtime="20220801 01:07:44.980"/>
</kw>
<status status="PASS" starttime="20220801 01:07:44.956" endtime="20220801 01:07:44.980"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:07:44.983" level="INFO">Running command 'ozone sh bucket list 77260-target 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:07:48.832" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:07:48.832" level="INFO">${output} = [ {
  "metadata" : { },
  "volumeName" : "77260-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "202...</msg>
<status status="PASS" starttime="20220801 01:07:44.981" endtime="20220801 01:07:48.832"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:07:48.833" level="INFO">[ {
  "metadata" : { },
  "volumeName" : "77260-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-08-01T01:06:53.920Z",
  "modificationTime" : "2022-08-01T01:06:53.920Z",
  "sourceVolume" : "77260-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY",
  "owner" : "testuser",
  "link" : true
}, {
  "metadata" : { },
  "volumeName" : "77260-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-08-01T01:06:31.371Z",
  "modificationTime" : "2022-08-01T01:06:50.067Z",
  "sourceVolume" : "77260-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY",
  "owner" : "testuser",
  "link" : true
}, {
  "metadata" : { },
  "volumeName" : "77260-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-08-01T01:07:01.646Z",
  "modificationTime" : "2022-08-01T01:07:01.646Z",
  "sourceVolume" : "77260-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY",
  "owner" : "testuser",
  "link" : true
}, {
  "metadata" : { },
  "volumeName" : "77260-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-08-01T01:06:23.667Z",
  "modificationTime" : "2022-08-01T01:06:46.326Z",
  "sourceVolume" : "77260-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY",
  "owner" : "testuser",
  "link" : true
}, {
  "metadata" : { },
  "volumeName" : "77260-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-08-01T01:06:27.523Z",
  "modificationTime" : "2022-08-01T01:06:27.523Z",
  "sourceVolume" : "77260-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY",
  "owner" : "testuser",
  "link" : true
} ]</msg>
<status status="PASS" starttime="20220801 01:07:48.832" endtime="20220801 01:07:48.833"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:07:48.833" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:07:48.833" endtime="20220801 01:07:48.834"/>
</kw>
<status status="PASS" starttime="20220801 01:07:44.980" endtime="20220801 01:07:48.834"/>
</kw>
<msg timestamp="20220801 01:07:48.834" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:07:44.980" endtime="20220801 01:07:48.834"/>
</kw>
<msg timestamp="20220801 01:07:48.835" level="INFO">${result} = [ {
  "metadata" : { },
  "volumeName" : "77260-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "202...</msg>
<status status="PASS" starttime="20220801 01:07:44.980" endtime="20220801 01:07:48.835"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220801 01:07:48.835" endtime="20220801 01:07:48.835"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dangling-link</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220801 01:07:48.835" endtime="20220801 01:07:48.836"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220801 01:07:44.955" endtime="20220801 01:07:48.836"/>
</test>
<test id="s1-s1-s3-t7" name="Bucket info shows source" line="105">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:07:48.842" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:07:48.845" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:07:48.845" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220801 01:07:48.839" endtime="20220801 01:07:48.845"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:07:48.846" level="INFO">scm</msg>
<status status="PASS" starttime="20220801 01:07:48.845" endtime="20220801 01:07:48.846"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:07:48.847" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:07:48.846" endtime="20220801 01:07:48.847"/>
</kw>
<status status="PASS" starttime="20220801 01:07:48.839" endtime="20220801 01:07:48.847"/>
</kw>
<msg timestamp="20220801 01:07:48.847" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:07:48.839" endtime="20220801 01:07:48.847"/>
</kw>
<msg timestamp="20220801 01:07:48.848" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220801 01:07:48.838" endtime="20220801 01:07:48.848"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220801 01:07:48.848" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220801 01:07:48.848" endtime="20220801 01:07:48.848"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:07:48.852" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:07:48.859" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:07:48.859" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:07:48.850" endtime="20220801 01:07:48.859"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:07:48.860" level="INFO"/>
<status status="PASS" starttime="20220801 01:07:48.860" endtime="20220801 01:07:48.861"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:07:48.861" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:07:48.861" endtime="20220801 01:07:48.861"/>
</kw>
<status status="PASS" starttime="20220801 01:07:48.850" endtime="20220801 01:07:48.862"/>
</kw>
<msg timestamp="20220801 01:07:48.862" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:07:48.849" endtime="20220801 01:07:48.862"/>
</kw>
<status status="PASS" starttime="20220801 01:07:48.849" endtime="20220801 01:07:48.862"/>
</kw>
<status status="PASS" starttime="20220801 01:07:48.848" endtime="20220801 01:07:48.863"/>
</kw>
<status status="PASS" starttime="20220801 01:07:48.838" endtime="20220801 01:07:48.863"/>
</kw>
<status status="PASS" starttime="20220801 01:07:48.837" endtime="20220801 01:07:48.863"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:07:48.866" level="INFO">Running command 'ozone sh bucket info 77260-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:07:52.703" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:07:52.703" level="INFO">${output} = {
  "volumeName" : "77260-target",
  "bucketName" : "link1",
  "sourceVolume" : "77260-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2022-08-01T01:07:01.646Z",
  "modificationTime" : "202...</msg>
<status status="PASS" starttime="20220801 01:07:48.864" endtime="20220801 01:07:52.703"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:07:52.704" level="INFO">{
  "volumeName" : "77260-target",
  "bucketName" : "link1",
  "sourceVolume" : "77260-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2022-08-01T01:07:01.646Z",
  "modificationTime" : "2022-08-01T01:07:01.646Z",
  "owner" : "testuser"
}</msg>
<status status="PASS" starttime="20220801 01:07:52.703" endtime="20220801 01:07:52.704"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:07:52.705" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:07:52.704" endtime="20220801 01:07:52.705"/>
</kw>
<status status="PASS" starttime="20220801 01:07:48.864" endtime="20220801 01:07:52.705"/>
</kw>
<msg timestamp="20220801 01:07:52.705" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:07:48.863" endtime="20220801 01:07:52.706"/>
</kw>
<msg timestamp="20220801 01:07:52.706" level="INFO">${result} = {
  "volumeName" : "77260-target",
  "bucketName" : "link1",
  "sourceVolume" : "77260-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2022-08-01T01:07:01.646Z",
  "modificationTime" : "202...</msg>
<status status="PASS" starttime="20220801 01:07:48.863" endtime="20220801 01:07:52.706"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${source}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220801 01:07:52.706" endtime="20220801 01:07:52.706"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bucket1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220801 01:07:52.707" endtime="20220801 01:07:52.707"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${target}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220801 01:07:52.707" endtime="20220801 01:07:52.707"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220801 01:07:52.707" endtime="20220801 01:07:52.708"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>modificationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220801 01:07:52.708" endtime="20220801 01:07:52.708"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220801 01:07:52.708" endtime="20220801 01:07:52.709"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>metadata</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220801 01:07:52.709" endtime="20220801 01:07:52.709"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220801 01:07:48.837" endtime="20220801 01:07:52.709"/>
</test>
<test id="s1-s1-s3-t8" name="Source and target have separate ACLs" line="115">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:07:52.715" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:07:52.718" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:07:52.718" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220801 01:07:52.713" endtime="20220801 01:07:52.718"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:07:52.719" level="INFO">scm</msg>
<status status="PASS" starttime="20220801 01:07:52.718" endtime="20220801 01:07:52.719"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:07:52.720" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:07:52.719" endtime="20220801 01:07:52.720"/>
</kw>
<status status="PASS" starttime="20220801 01:07:52.713" endtime="20220801 01:07:52.720"/>
</kw>
<msg timestamp="20220801 01:07:52.720" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:07:52.712" endtime="20220801 01:07:52.721"/>
</kw>
<msg timestamp="20220801 01:07:52.721" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220801 01:07:52.712" endtime="20220801 01:07:52.721"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220801 01:07:52.722" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220801 01:07:52.721" endtime="20220801 01:07:52.722"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:07:52.725" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:07:52.732" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:07:52.732" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:07:52.724" endtime="20220801 01:07:52.732"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:07:52.733" level="INFO"/>
<status status="PASS" starttime="20220801 01:07:52.732" endtime="20220801 01:07:52.733"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:07:52.733" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:07:52.733" endtime="20220801 01:07:52.734"/>
</kw>
<status status="PASS" starttime="20220801 01:07:52.723" endtime="20220801 01:07:52.734"/>
</kw>
<msg timestamp="20220801 01:07:52.734" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:07:52.723" endtime="20220801 01:07:52.734"/>
</kw>
<status status="PASS" starttime="20220801 01:07:52.722" endtime="20220801 01:07:52.735"/>
</kw>
<status status="PASS" starttime="20220801 01:07:52.722" endtime="20220801 01:07:52.735"/>
</kw>
<status status="PASS" starttime="20220801 01:07:52.712" endtime="20220801 01:07:52.735"/>
</kw>
<status status="PASS" starttime="20220801 01:07:52.711" endtime="20220801 01:07:52.735"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:07:52.738" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 77260-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:07:56.447" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:07:56.447" level="INFO">${output} = ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220801 01:07:52.736" endtime="20220801 01:07:56.447"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:07:56.448" level="INFO">ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220801 01:07:56.447" endtime="20220801 01:07:56.448"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:07:56.449" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:07:56.448" endtime="20220801 01:07:56.449"/>
</kw>
<status status="PASS" starttime="20220801 01:07:52.736" endtime="20220801 01:07:56.449"/>
</kw>
<msg timestamp="20220801 01:07:56.449" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:07:52.735" endtime="20220801 01:07:56.449"/>
</kw>
<status status="PASS" starttime="20220801 01:07:52.735" endtime="20220801 01:07:56.450"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:07:56.454" level="INFO">Running command 'ozone sh bucket getacl 77260-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:08:00.259" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:08:00.259" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20220801 01:07:56.452" endtime="20220801 01:08:00.259"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:08:00.261" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20220801 01:08:00.260" endtime="20220801 01:08:00.261"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:08:00.261" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:08:00.261" endtime="20220801 01:08:00.261"/>
</kw>
<status status="PASS" starttime="20220801 01:07:56.451" endtime="20220801 01:08:00.262"/>
</kw>
<msg timestamp="20220801 01:08:00.262" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:07:56.451" endtime="20220801 01:08:00.262"/>
</kw>
<msg timestamp="20220801 01:08:00.263" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20220801 01:07:56.450" endtime="20220801 01:08:00.263"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220801 01:08:00.263" endtime="20220801 01:08:00.263"/>
</kw>
<status status="PASS" starttime="20220801 01:07:56.450" endtime="20220801 01:08:00.263"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:08:00.268" level="INFO">Running command 'ozone sh bucket getacl 77260-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:08:04.152" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:08:04.152" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:08:00.266" endtime="20220801 01:08:04.152"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:08:04.153" level="INFO"/>
<status status="PASS" starttime="20220801 01:08:04.152" endtime="20220801 01:08:04.153"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:08:04.153" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:08:04.153" endtime="20220801 01:08:04.154"/>
</kw>
<status status="PASS" starttime="20220801 01:08:00.266" endtime="20220801 01:08:04.154"/>
</kw>
<msg timestamp="20220801 01:08:04.154" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:08:00.265" endtime="20220801 01:08:04.154"/>
</kw>
<msg timestamp="20220801 01:08:04.155" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20220801 01:08:00.265" endtime="20220801 01:08:04.155"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220801 01:08:04.155" endtime="20220801 01:08:04.155"/>
</kw>
<status status="PASS" starttime="20220801 01:08:00.263" endtime="20220801 01:08:04.155"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:08:04.159" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 77260-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:08:07.599" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:08:07.599" level="INFO">${output} = ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220801 01:08:04.157" endtime="20220801 01:08:07.599"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:08:07.600" level="INFO">ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220801 01:08:07.599" endtime="20220801 01:08:07.600"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:08:07.601" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:08:07.600" endtime="20220801 01:08:07.601"/>
</kw>
<status status="PASS" starttime="20220801 01:08:04.157" endtime="20220801 01:08:07.601"/>
</kw>
<msg timestamp="20220801 01:08:07.601" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:08:04.156" endtime="20220801 01:08:07.602"/>
</kw>
<status status="PASS" starttime="20220801 01:08:04.156" endtime="20220801 01:08:07.602"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:08:07.607" level="INFO">Running command 'ozone sh bucket getacl 77260-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:08:11.554" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:08:11.555" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:08:07.605" endtime="20220801 01:08:11.555"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:08:11.556" level="INFO"/>
<status status="PASS" starttime="20220801 01:08:11.555" endtime="20220801 01:08:11.556"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:08:11.557" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:08:11.556" endtime="20220801 01:08:11.557"/>
</kw>
<status status="PASS" starttime="20220801 01:08:07.604" endtime="20220801 01:08:11.557"/>
</kw>
<msg timestamp="20220801 01:08:11.557" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:08:07.604" endtime="20220801 01:08:11.558"/>
</kw>
<msg timestamp="20220801 01:08:11.558" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20220801 01:08:07.603" endtime="20220801 01:08:11.558"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220801 01:08:11.558" endtime="20220801 01:08:11.558"/>
</kw>
<status status="PASS" starttime="20220801 01:08:07.602" endtime="20220801 01:08:11.559"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:08:11.563" level="INFO">Running command 'ozone sh bucket getacl 77260-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:08:15.261" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:08:15.261" level="INFO">${output} = READ</msg>
<status status="PASS" starttime="20220801 01:08:11.561" endtime="20220801 01:08:15.261"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:08:15.262" level="INFO">READ</msg>
<status status="PASS" starttime="20220801 01:08:15.262" endtime="20220801 01:08:15.262"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:08:15.263" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:08:15.263" endtime="20220801 01:08:15.263"/>
</kw>
<status status="PASS" starttime="20220801 01:08:11.560" endtime="20220801 01:08:15.263"/>
</kw>
<msg timestamp="20220801 01:08:15.263" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:08:11.560" endtime="20220801 01:08:15.264"/>
</kw>
<msg timestamp="20220801 01:08:15.264" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" starttime="20220801 01:08:11.559" endtime="20220801 01:08:15.264"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220801 01:08:15.264" endtime="20220801 01:08:15.265"/>
</kw>
<status status="PASS" starttime="20220801 01:08:11.559" endtime="20220801 01:08:15.265"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220801 01:07:52.710" endtime="20220801 01:08:15.265"/>
</test>
<test id="s1-s1-s3-t9" name="Buckets and links share namespace" line="124">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:08:15.271" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:08:15.274" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:08:15.274" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220801 01:08:15.269" endtime="20220801 01:08:15.274"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:08:15.275" level="INFO">scm</msg>
<status status="PASS" starttime="20220801 01:08:15.274" endtime="20220801 01:08:15.275"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:08:15.275" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:08:15.275" endtime="20220801 01:08:15.275"/>
</kw>
<status status="PASS" starttime="20220801 01:08:15.268" endtime="20220801 01:08:15.276"/>
</kw>
<msg timestamp="20220801 01:08:15.276" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:08:15.268" endtime="20220801 01:08:15.276"/>
</kw>
<msg timestamp="20220801 01:08:15.277" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220801 01:08:15.268" endtime="20220801 01:08:15.277"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220801 01:08:15.277" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220801 01:08:15.277" endtime="20220801 01:08:15.277"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:08:15.281" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:08:15.287" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:08:15.287" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:08:15.279" endtime="20220801 01:08:15.287"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:08:15.288" level="INFO"/>
<status status="PASS" starttime="20220801 01:08:15.288" endtime="20220801 01:08:15.288"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:08:15.289" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:08:15.289" endtime="20220801 01:08:15.289"/>
</kw>
<status status="PASS" starttime="20220801 01:08:15.279" endtime="20220801 01:08:15.289"/>
</kw>
<msg timestamp="20220801 01:08:15.289" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:08:15.278" endtime="20220801 01:08:15.290"/>
</kw>
<status status="PASS" starttime="20220801 01:08:15.278" endtime="20220801 01:08:15.290"/>
</kw>
<status status="PASS" starttime="20220801 01:08:15.277" endtime="20220801 01:08:15.290"/>
</kw>
<status status="PASS" starttime="20220801 01:08:15.267" endtime="20220801 01:08:15.290"/>
</kw>
<status status="PASS" starttime="20220801 01:08:15.267" endtime="20220801 01:08:15.290"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:08:15.294" level="INFO">Running command 'ozone sh bucket link 77260-source/bucket2 77260-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:08:19.020" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:08:19.020" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:08:15.292" endtime="20220801 01:08:19.020"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:08:19.022" level="INFO"/>
<status status="PASS" starttime="20220801 01:08:19.021" endtime="20220801 01:08:19.022"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:08:19.022" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:08:19.022" endtime="20220801 01:08:19.022"/>
</kw>
<status status="PASS" starttime="20220801 01:08:15.291" endtime="20220801 01:08:19.023"/>
</kw>
<msg timestamp="20220801 01:08:19.023" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:08:15.291" endtime="20220801 01:08:19.023"/>
</kw>
<status status="PASS" starttime="20220801 01:08:15.290" endtime="20220801 01:08:19.023"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${target}/link2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:08:19.026" level="INFO">Running command 'ozone sh bucket create 77260-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:08:22.754" level="INFO">${rc} = 255</msg>
<msg timestamp="20220801 01:08:22.754" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20220801 01:08:19.024" endtime="20220801 01:08:22.754"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:08:22.756" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20220801 01:08:22.755" endtime="20220801 01:08:22.756"/>
</kw>
<msg timestamp="20220801 01:08:22.756" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20220801 01:08:19.023" endtime="20220801 01:08:22.756"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220801 01:08:22.756" endtime="20220801 01:08:22.757"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${target}/bucket3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:08:22.760" level="INFO">Running command 'ozone sh bucket create 77260-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:08:26.684" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:08:26.684" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:08:22.758" endtime="20220801 01:08:26.684"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:08:26.686" level="INFO"/>
<status status="PASS" starttime="20220801 01:08:26.685" endtime="20220801 01:08:26.686"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:08:26.686" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:08:26.686" endtime="20220801 01:08:26.686"/>
</kw>
<status status="PASS" starttime="20220801 01:08:22.758" endtime="20220801 01:08:26.686"/>
</kw>
<msg timestamp="20220801 01:08:26.687" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:08:22.757" endtime="20220801 01:08:26.687"/>
</kw>
<status status="PASS" starttime="20220801 01:08:22.757" endtime="20220801 01:08:26.687"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:08:26.690" level="INFO">Running command 'ozone sh bucket link 77260-source/bucket1 77260-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:08:30.358" level="INFO">${rc} = 255</msg>
<msg timestamp="20220801 01:08:30.358" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20220801 01:08:26.688" endtime="20220801 01:08:30.358"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:08:30.359" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20220801 01:08:30.358" endtime="20220801 01:08:30.359"/>
</kw>
<msg timestamp="20220801 01:08:30.359" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20220801 01:08:26.687" endtime="20220801 01:08:30.359"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220801 01:08:30.360" endtime="20220801 01:08:30.360"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220801 01:08:15.266" endtime="20220801 01:08:30.360"/>
</test>
<test id="s1-s1-s3-t10" name="Can follow link with read access" line="133">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:08:30.366" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:08:30.370" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:08:30.370" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220801 01:08:30.364" endtime="20220801 01:08:30.370"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:08:30.371" level="INFO">scm</msg>
<status status="PASS" starttime="20220801 01:08:30.370" endtime="20220801 01:08:30.371"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:08:30.371" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:08:30.371" endtime="20220801 01:08:30.372"/>
</kw>
<status status="PASS" starttime="20220801 01:08:30.364" endtime="20220801 01:08:30.372"/>
</kw>
<msg timestamp="20220801 01:08:30.372" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:08:30.363" endtime="20220801 01:08:30.372"/>
</kw>
<msg timestamp="20220801 01:08:30.373" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220801 01:08:30.363" endtime="20220801 01:08:30.373"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220801 01:08:30.373" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220801 01:08:30.373" endtime="20220801 01:08:30.373"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:08:30.377" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:08:30.384" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:08:30.384" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:08:30.375" endtime="20220801 01:08:30.384"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:08:30.385" level="INFO"/>
<status status="PASS" starttime="20220801 01:08:30.384" endtime="20220801 01:08:30.385"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:08:30.385" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:08:30.385" endtime="20220801 01:08:30.386"/>
</kw>
<status status="PASS" starttime="20220801 01:08:30.375" endtime="20220801 01:08:30.386"/>
</kw>
<msg timestamp="20220801 01:08:30.386" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:08:30.374" endtime="20220801 01:08:30.386"/>
</kw>
<status status="PASS" starttime="20220801 01:08:30.374" endtime="20220801 01:08:30.386"/>
</kw>
<status status="PASS" starttime="20220801 01:08:30.373" endtime="20220801 01:08:30.387"/>
</kw>
<status status="PASS" starttime="20220801 01:08:30.363" endtime="20220801 01:08:30.387"/>
</kw>
<status status="PASS" starttime="20220801 01:08:30.362" endtime="20220801 01:08:30.387"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:08:30.391" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:08:30.394" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:08:30.394" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:08:30.389" endtime="20220801 01:08:30.394"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:08:30.395" level="INFO"/>
<status status="PASS" starttime="20220801 01:08:30.394" endtime="20220801 01:08:30.395"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:08:30.396" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:08:30.395" endtime="20220801 01:08:30.396"/>
</kw>
<status status="PASS" starttime="20220801 01:08:30.388" endtime="20220801 01:08:30.396"/>
</kw>
<msg timestamp="20220801 01:08:30.396" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:08:30.388" endtime="20220801 01:08:30.397"/>
</kw>
<status status="PASS" starttime="20220801 01:08:30.388" endtime="20220801 01:08:30.397"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:08:30.401" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:08:30.403" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:08:30.404" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220801 01:08:30.399" endtime="20220801 01:08:30.404"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:08:30.405" level="INFO">scm</msg>
<status status="PASS" starttime="20220801 01:08:30.404" endtime="20220801 01:08:30.405"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:08:30.405" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:08:30.405" endtime="20220801 01:08:30.405"/>
</kw>
<status status="PASS" starttime="20220801 01:08:30.398" endtime="20220801 01:08:30.405"/>
</kw>
<msg timestamp="20220801 01:08:30.406" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:08:30.398" endtime="20220801 01:08:30.406"/>
</kw>
<msg timestamp="20220801 01:08:30.406" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220801 01:08:30.398" endtime="20220801 01:08:30.406"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220801 01:08:30.407" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220801 01:08:30.406" endtime="20220801 01:08:30.407"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:08:30.410" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:08:30.417" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:08:30.417" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:08:30.409" endtime="20220801 01:08:30.417"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:08:30.418" level="INFO"/>
<status status="PASS" starttime="20220801 01:08:30.418" endtime="20220801 01:08:30.418"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:08:30.419" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:08:30.418" endtime="20220801 01:08:30.419"/>
</kw>
<status status="PASS" starttime="20220801 01:08:30.408" endtime="20220801 01:08:30.419"/>
</kw>
<msg timestamp="20220801 01:08:30.419" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:08:30.408" endtime="20220801 01:08:30.420"/>
</kw>
<status status="PASS" starttime="20220801 01:08:30.407" endtime="20220801 01:08:30.420"/>
</kw>
<status status="PASS" starttime="20220801 01:08:30.407" endtime="20220801 01:08:30.420"/>
</kw>
<status status="PASS" starttime="20220801 01:08:30.397" endtime="20220801 01:08:30.420"/>
</kw>
<status status="PASS" starttime="20220801 01:08:30.397" endtime="20220801 01:08:30.420"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/readable-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:08:30.423" level="INFO">Running command 'ozone sh key list 77260-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:08:34.336" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:08:34.336" level="INFO">${output} = [ {
  "volumeName" : "77260-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 946,
  "creationTime" : "2022-08-01T01:06:14.148Z",
  "modificationTime" : ...</msg>
<status status="PASS" starttime="20220801 01:08:30.421" endtime="20220801 01:08:34.336"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:08:34.337" level="INFO">[ {
  "volumeName" : "77260-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 946,
  "creationTime" : "2022-08-01T01:06:14.148Z",
  "modificationTime" : "2022-08-01T01:06:16.034Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  }
} ]</msg>
<status status="PASS" starttime="20220801 01:08:34.336" endtime="20220801 01:08:34.337"/>
</kw>
<msg timestamp="20220801 01:08:34.337" level="INFO">${result} = [ {
  "volumeName" : "77260-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 946,
  "creationTime" : "2022-08-01T01:06:14.148Z",
  "modificationTime" : ...</msg>
<status status="PASS" starttime="20220801 01:08:30.420" endtime="20220801 01:08:34.337"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220801 01:08:34.338" endtime="20220801 01:08:34.338"/>
</kw>
<status status="PASS" starttime="20220801 01:08:30.387" endtime="20220801 01:08:34.338"/>
</kw>
<status status="PASS" starttime="20220801 01:08:30.387" endtime="20220801 01:08:34.338"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220801 01:08:30.361" endtime="20220801 01:08:34.338"/>
</test>
<test id="s1-s1-s3-t11" name="Cannot follow link without read access" line="136">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:08:34.344" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:08:34.347" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:08:34.347" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220801 01:08:34.342" endtime="20220801 01:08:34.347"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:08:34.348" level="INFO">scm</msg>
<status status="PASS" starttime="20220801 01:08:34.347" endtime="20220801 01:08:34.348"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:08:34.349" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:08:34.348" endtime="20220801 01:08:34.349"/>
</kw>
<status status="PASS" starttime="20220801 01:08:34.342" endtime="20220801 01:08:34.349"/>
</kw>
<msg timestamp="20220801 01:08:34.349" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:08:34.341" endtime="20220801 01:08:34.350"/>
</kw>
<msg timestamp="20220801 01:08:34.350" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220801 01:08:34.341" endtime="20220801 01:08:34.350"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220801 01:08:34.351" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220801 01:08:34.350" endtime="20220801 01:08:34.351"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:08:34.355" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:08:34.361" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:08:34.361" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:08:34.353" endtime="20220801 01:08:34.362"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:08:34.362" level="INFO"/>
<status status="PASS" starttime="20220801 01:08:34.362" endtime="20220801 01:08:34.363"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:08:34.363" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:08:34.363" endtime="20220801 01:08:34.363"/>
</kw>
<status status="PASS" starttime="20220801 01:08:34.352" endtime="20220801 01:08:34.364"/>
</kw>
<msg timestamp="20220801 01:08:34.364" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:08:34.352" endtime="20220801 01:08:34.364"/>
</kw>
<status status="PASS" starttime="20220801 01:08:34.351" endtime="20220801 01:08:34.364"/>
</kw>
<status status="PASS" starttime="20220801 01:08:34.351" endtime="20220801 01:08:34.364"/>
</kw>
<status status="PASS" starttime="20220801 01:08:34.341" endtime="20220801 01:08:34.364"/>
</kw>
<status status="PASS" starttime="20220801 01:08:34.340" endtime="20220801 01:08:34.365"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:08:34.368" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:08:34.371" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:08:34.371" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:08:34.366" endtime="20220801 01:08:34.371"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:08:34.372" level="INFO"/>
<status status="PASS" starttime="20220801 01:08:34.372" endtime="20220801 01:08:34.372"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:08:34.373" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:08:34.373" endtime="20220801 01:08:34.373"/>
</kw>
<status status="PASS" starttime="20220801 01:08:34.366" endtime="20220801 01:08:34.373"/>
</kw>
<msg timestamp="20220801 01:08:34.373" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:08:34.366" endtime="20220801 01:08:34.374"/>
</kw>
<status status="PASS" starttime="20220801 01:08:34.365" endtime="20220801 01:08:34.374"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:08:34.378" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:08:34.380" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:08:34.380" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220801 01:08:34.376" endtime="20220801 01:08:34.380"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:08:34.381" level="INFO">scm</msg>
<status status="PASS" starttime="20220801 01:08:34.381" endtime="20220801 01:08:34.382"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:08:34.382" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:08:34.382" endtime="20220801 01:08:34.382"/>
</kw>
<status status="PASS" starttime="20220801 01:08:34.376" endtime="20220801 01:08:34.382"/>
</kw>
<msg timestamp="20220801 01:08:34.383" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:08:34.375" endtime="20220801 01:08:34.383"/>
</kw>
<msg timestamp="20220801 01:08:34.383" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220801 01:08:34.375" endtime="20220801 01:08:34.383"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220801 01:08:34.384" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220801 01:08:34.384" endtime="20220801 01:08:34.384"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:08:34.388" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:08:34.395" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:08:34.395" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:08:34.387" endtime="20220801 01:08:34.395"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:08:34.396" level="INFO"/>
<status status="PASS" starttime="20220801 01:08:34.395" endtime="20220801 01:08:34.396"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:08:34.396" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:08:34.396" endtime="20220801 01:08:34.396"/>
</kw>
<status status="PASS" starttime="20220801 01:08:34.385" endtime="20220801 01:08:34.397"/>
</kw>
<msg timestamp="20220801 01:08:34.397" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:08:34.385" endtime="20220801 01:08:34.397"/>
</kw>
<status status="PASS" starttime="20220801 01:08:34.385" endtime="20220801 01:08:34.397"/>
</kw>
<status status="PASS" starttime="20220801 01:08:34.384" endtime="20220801 01:08:34.398"/>
</kw>
<status status="PASS" starttime="20220801 01:08:34.374" endtime="20220801 01:08:34.398"/>
</kw>
<status status="PASS" starttime="20220801 01:08:34.374" endtime="20220801 01:08:34.398"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/unreadable-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:08:34.400" level="INFO">Running command 'ozone sh key list 77260-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:08:38.169" level="INFO">${rc} = 255</msg>
<msg timestamp="20220801 01:08:38.169" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket Volume:77260-target Bucket:unreadable-link </msg>
<status status="PASS" starttime="20220801 01:08:34.398" endtime="20220801 01:08:38.170"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:08:38.171" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket Volume:77260-target Bucket:unreadable-link </msg>
<status status="PASS" starttime="20220801 01:08:38.170" endtime="20220801 01:08:38.171"/>
</kw>
<msg timestamp="20220801 01:08:38.171" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket Volume:77260-target Bucket:unreadable-link </msg>
<status status="PASS" starttime="20220801 01:08:34.398" endtime="20220801 01:08:38.171"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220801 01:08:38.172" endtime="20220801 01:08:38.172"/>
</kw>
<status status="PASS" starttime="20220801 01:08:34.365" endtime="20220801 01:08:38.172"/>
</kw>
<status status="PASS" starttime="20220801 01:08:34.365" endtime="20220801 01:08:38.172"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220801 01:08:34.339" endtime="20220801 01:08:38.172"/>
</test>
<test id="s1-s1-s3-t12" name="ACL verified on source bucket" line="139">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:08:38.179" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:08:38.188" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:08:38.188" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220801 01:08:38.177" endtime="20220801 01:08:38.188"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:08:38.189" level="INFO">scm</msg>
<status status="PASS" starttime="20220801 01:08:38.188" endtime="20220801 01:08:38.189"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:08:38.190" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:08:38.189" endtime="20220801 01:08:38.190"/>
</kw>
<status status="PASS" starttime="20220801 01:08:38.176" endtime="20220801 01:08:38.190"/>
</kw>
<msg timestamp="20220801 01:08:38.190" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:08:38.176" endtime="20220801 01:08:38.191"/>
</kw>
<msg timestamp="20220801 01:08:38.191" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220801 01:08:38.176" endtime="20220801 01:08:38.191"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220801 01:08:38.192" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220801 01:08:38.191" endtime="20220801 01:08:38.192"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:08:38.196" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:08:38.213" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:08:38.213" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:08:38.195" endtime="20220801 01:08:38.213"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:08:38.214" level="INFO"/>
<status status="PASS" starttime="20220801 01:08:38.213" endtime="20220801 01:08:38.214"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:08:38.215" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:08:38.214" endtime="20220801 01:08:38.215"/>
</kw>
<status status="PASS" starttime="20220801 01:08:38.194" endtime="20220801 01:08:38.215"/>
</kw>
<msg timestamp="20220801 01:08:38.215" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:08:38.194" endtime="20220801 01:08:38.216"/>
</kw>
<status status="PASS" starttime="20220801 01:08:38.193" endtime="20220801 01:08:38.216"/>
</kw>
<status status="PASS" starttime="20220801 01:08:38.193" endtime="20220801 01:08:38.216"/>
</kw>
<status status="PASS" starttime="20220801 01:08:38.175" endtime="20220801 01:08:38.216"/>
</kw>
<status status="PASS" starttime="20220801 01:08:38.175" endtime="20220801 01:08:38.216"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:08:38.232" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:08:38.236" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:08:38.236" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:08:38.219" endtime="20220801 01:08:38.236"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:08:38.237" level="INFO"/>
<status status="PASS" starttime="20220801 01:08:38.236" endtime="20220801 01:08:38.237"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:08:38.237" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:08:38.237" endtime="20220801 01:08:38.238"/>
</kw>
<status status="PASS" starttime="20220801 01:08:38.218" endtime="20220801 01:08:38.238"/>
</kw>
<msg timestamp="20220801 01:08:38.238" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:08:38.218" endtime="20220801 01:08:38.238"/>
</kw>
<status status="PASS" starttime="20220801 01:08:38.217" endtime="20220801 01:08:38.238"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:08:38.243" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:08:38.246" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:08:38.246" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220801 01:08:38.241" endtime="20220801 01:08:38.246"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:08:38.247" level="INFO">scm</msg>
<status status="PASS" starttime="20220801 01:08:38.246" endtime="20220801 01:08:38.247"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:08:38.248" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:08:38.247" endtime="20220801 01:08:38.248"/>
</kw>
<status status="PASS" starttime="20220801 01:08:38.240" endtime="20220801 01:08:38.248"/>
</kw>
<msg timestamp="20220801 01:08:38.248" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:08:38.240" endtime="20220801 01:08:38.249"/>
</kw>
<msg timestamp="20220801 01:08:38.249" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220801 01:08:38.239" endtime="20220801 01:08:38.249"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220801 01:08:38.250" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220801 01:08:38.249" endtime="20220801 01:08:38.250"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:08:38.253" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:08:38.259" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:08:38.259" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:08:38.251" endtime="20220801 01:08:38.259"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:08:38.261" level="INFO"/>
<status status="PASS" starttime="20220801 01:08:38.260" endtime="20220801 01:08:38.261"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:08:38.261" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:08:38.261" endtime="20220801 01:08:38.261"/>
</kw>
<status status="PASS" starttime="20220801 01:08:38.251" endtime="20220801 01:08:38.262"/>
</kw>
<msg timestamp="20220801 01:08:38.262" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:08:38.251" endtime="20220801 01:08:38.262"/>
</kw>
<status status="PASS" starttime="20220801 01:08:38.250" endtime="20220801 01:08:38.262"/>
</kw>
<status status="PASS" starttime="20220801 01:08:38.250" endtime="20220801 01:08:38.262"/>
</kw>
<status status="PASS" starttime="20220801 01:08:38.239" endtime="20220801 01:08:38.263"/>
</kw>
<status status="PASS" starttime="20220801 01:08:38.239" endtime="20220801 01:08:38.263"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:08:38.266" level="INFO">Running command 'ozone sh bucket info 77260-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:08:42.103" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:08:42.103" level="INFO">${output} = {
  "volumeName" : "77260-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "77260-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2022-08-01T01:06:31.371Z...</msg>
<status status="PASS" starttime="20220801 01:08:38.264" endtime="20220801 01:08:42.103"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:08:42.104" level="INFO">{
  "volumeName" : "77260-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "77260-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2022-08-01T01:06:31.371Z",
  "modificationTime" : "2022-08-01T01:06:50.067Z",
  "owner" : "testuser"
}</msg>
<status status="PASS" starttime="20220801 01:08:42.104" endtime="20220801 01:08:42.105"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:08:42.105" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:08:42.105" endtime="20220801 01:08:42.105"/>
</kw>
<status status="PASS" starttime="20220801 01:08:38.263" endtime="20220801 01:08:42.105"/>
</kw>
<msg timestamp="20220801 01:08:42.106" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:08:38.263" endtime="20220801 01:08:42.106"/>
</kw>
<msg timestamp="20220801 01:08:42.106" level="INFO">${result} = {
  "volumeName" : "77260-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "77260-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2022-08-01T01:06:31.371Z...</msg>
<status status="PASS" starttime="20220801 01:08:38.263" endtime="20220801 01:08:42.106"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220801 01:08:42.106" endtime="20220801 01:08:42.107"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220801 01:08:42.107" endtime="20220801 01:08:42.107"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:08:42.110" level="INFO">Running command 'ozone sh key list 77260-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:08:45.836" level="INFO">${rc} = 255</msg>
<msg timestamp="20220801 01:08:45.836" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket Volume:77260-source Bucket:unreadable-bucket Key:</msg>
<status status="PASS" starttime="20220801 01:08:42.108" endtime="20220801 01:08:45.836"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:08:45.837" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket Volume:77260-source Bucket:unreadable-bucket Key:</msg>
<status status="PASS" starttime="20220801 01:08:45.836" endtime="20220801 01:08:45.837"/>
</kw>
<msg timestamp="20220801 01:08:45.838" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket Volume:77260-source Bucket:unreadable-bucket Key:</msg>
<status status="PASS" starttime="20220801 01:08:42.107" endtime="20220801 01:08:45.838"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220801 01:08:45.838" endtime="20220801 01:08:45.838"/>
</kw>
<status status="PASS" starttime="20220801 01:08:38.217" endtime="20220801 01:08:45.838"/>
</kw>
<status status="PASS" starttime="20220801 01:08:38.217" endtime="20220801 01:08:45.838"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220801 01:08:38.174" endtime="20220801 01:08:45.839"/>
</test>
<test id="s1-s1-s3-t13" name="Loop in link chain is detected" line="142">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:08:45.844" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:08:45.847" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:08:45.847" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220801 01:08:45.842" endtime="20220801 01:08:45.847"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:08:45.849" level="INFO">scm</msg>
<status status="PASS" starttime="20220801 01:08:45.848" endtime="20220801 01:08:45.849"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:08:45.849" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:08:45.849" endtime="20220801 01:08:45.849"/>
</kw>
<status status="PASS" starttime="20220801 01:08:45.842" endtime="20220801 01:08:45.850"/>
</kw>
<msg timestamp="20220801 01:08:45.850" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:08:45.842" endtime="20220801 01:08:45.850"/>
</kw>
<msg timestamp="20220801 01:08:45.850" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220801 01:08:45.841" endtime="20220801 01:08:45.850"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220801 01:08:45.851" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220801 01:08:45.851" endtime="20220801 01:08:45.851"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:08:45.858" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:08:45.870" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:08:45.870" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:08:45.853" endtime="20220801 01:08:45.870"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:08:45.871" level="INFO"/>
<status status="PASS" starttime="20220801 01:08:45.870" endtime="20220801 01:08:45.871"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:08:45.871" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:08:45.871" endtime="20220801 01:08:45.871"/>
</kw>
<status status="PASS" starttime="20220801 01:08:45.852" endtime="20220801 01:08:45.872"/>
</kw>
<msg timestamp="20220801 01:08:45.872" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:08:45.852" endtime="20220801 01:08:45.872"/>
</kw>
<status status="PASS" starttime="20220801 01:08:45.852" endtime="20220801 01:08:45.872"/>
</kw>
<status status="PASS" starttime="20220801 01:08:45.851" endtime="20220801 01:08:45.873"/>
</kw>
<status status="PASS" starttime="20220801 01:08:45.840" endtime="20220801 01:08:45.873"/>
</kw>
<status status="PASS" starttime="20220801 01:08:45.840" endtime="20220801 01:08:45.873"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:08:45.876" level="INFO">Running command 'ozone sh bucket link 77260-target/loop1 77260-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:08:49.669" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:08:49.669" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:08:45.874" endtime="20220801 01:08:49.669"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:08:49.671" level="INFO"/>
<status status="PASS" starttime="20220801 01:08:49.670" endtime="20220801 01:08:49.671"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:08:49.671" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:08:49.671" endtime="20220801 01:08:49.671"/>
</kw>
<status status="PASS" starttime="20220801 01:08:45.874" endtime="20220801 01:08:49.672"/>
</kw>
<msg timestamp="20220801 01:08:49.672" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:08:45.873" endtime="20220801 01:08:49.672"/>
</kw>
<status status="PASS" starttime="20220801 01:08:45.873" endtime="20220801 01:08:49.672"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:08:49.676" level="INFO">Running command 'ozone sh bucket link 77260-target/loop2 77260-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:08:53.448" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:08:53.448" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:08:49.674" endtime="20220801 01:08:53.448"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:08:53.449" level="INFO"/>
<status status="PASS" starttime="20220801 01:08:53.449" endtime="20220801 01:08:53.450"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:08:53.450" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:08:53.450" endtime="20220801 01:08:53.450"/>
</kw>
<status status="PASS" starttime="20220801 01:08:49.673" endtime="20220801 01:08:53.450"/>
</kw>
<msg timestamp="20220801 01:08:53.451" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:08:49.673" endtime="20220801 01:08:53.451"/>
</kw>
<status status="PASS" starttime="20220801 01:08:49.673" endtime="20220801 01:08:53.451"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:08:53.455" level="INFO">Running command 'ozone sh bucket link 77260-target/loop3 77260-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:08:56.883" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:08:56.884" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:08:53.453" endtime="20220801 01:08:56.884"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:08:56.885" level="INFO"/>
<status status="PASS" starttime="20220801 01:08:56.884" endtime="20220801 01:08:56.885"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:08:56.886" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:08:56.885" endtime="20220801 01:08:56.886"/>
</kw>
<status status="PASS" starttime="20220801 01:08:53.452" endtime="20220801 01:08:56.886"/>
</kw>
<msg timestamp="20220801 01:08:56.886" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:08:53.452" endtime="20220801 01:08:56.886"/>
</kw>
<status status="PASS" starttime="20220801 01:08:53.451" endtime="20220801 01:08:56.887"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/loop2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:08:56.890" level="INFO">Running command 'ozone sh key list 77260-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:09:00.679" level="INFO">${rc} = 255</msg>
<msg timestamp="20220801 01:09:00.679" level="INFO">${output} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links. Bucket name: loop2, Volume name: 77260-target</msg>
<status status="PASS" starttime="20220801 01:08:56.887" endtime="20220801 01:09:00.679"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:09:00.680" level="INFO">DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links. Bucket name: loop2, Volume name: 77260-target</msg>
<status status="PASS" starttime="20220801 01:09:00.679" endtime="20220801 01:09:00.680"/>
</kw>
<msg timestamp="20220801 01:09:00.680" level="INFO">${result} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links. Bucket name: loop2, Volume name: 77260-target</msg>
<status status="PASS" starttime="20220801 01:08:56.887" endtime="20220801 01:09:00.681"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220801 01:09:00.681" endtime="20220801 01:09:00.681"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220801 01:08:45.839" endtime="20220801 01:09:00.681"/>
</test>
<test id="s1-s1-s3-t14" name="Multiple links to same bucket are allowed" line="149">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:09:00.687" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:09:00.690" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:09:00.690" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220801 01:09:00.685" endtime="20220801 01:09:00.690"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:09:00.691" level="INFO">scm</msg>
<status status="PASS" starttime="20220801 01:09:00.690" endtime="20220801 01:09:00.691"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:09:00.692" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:09:00.691" endtime="20220801 01:09:00.692"/>
</kw>
<status status="PASS" starttime="20220801 01:09:00.684" endtime="20220801 01:09:00.692"/>
</kw>
<msg timestamp="20220801 01:09:00.692" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:09:00.684" endtime="20220801 01:09:00.693"/>
</kw>
<msg timestamp="20220801 01:09:00.693" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220801 01:09:00.684" endtime="20220801 01:09:00.693"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220801 01:09:00.693" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220801 01:09:00.693" endtime="20220801 01:09:00.693"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:09:00.697" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:09:00.777" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:09:00.777" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:09:00.695" endtime="20220801 01:09:00.777"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:09:00.778" level="INFO"/>
<status status="PASS" starttime="20220801 01:09:00.777" endtime="20220801 01:09:00.778"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:09:00.779" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:09:00.778" endtime="20220801 01:09:00.779"/>
</kw>
<status status="PASS" starttime="20220801 01:09:00.695" endtime="20220801 01:09:00.779"/>
</kw>
<msg timestamp="20220801 01:09:00.779" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:09:00.694" endtime="20220801 01:09:00.780"/>
</kw>
<status status="PASS" starttime="20220801 01:09:00.694" endtime="20220801 01:09:00.780"/>
</kw>
<status status="PASS" starttime="20220801 01:09:00.694" endtime="20220801 01:09:00.780"/>
</kw>
<status status="PASS" starttime="20220801 01:09:00.683" endtime="20220801 01:09:00.780"/>
</kw>
<status status="PASS" starttime="20220801 01:09:00.683" endtime="20220801 01:09:00.780"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:09:00.784" level="INFO">Running command 'ozone sh bucket link 77260-source/bucket1 77260-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:09:04.573" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:09:04.573" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:09:00.782" endtime="20220801 01:09:04.573"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:09:04.575" level="INFO"/>
<status status="PASS" starttime="20220801 01:09:04.574" endtime="20220801 01:09:04.575"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:09:04.576" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:09:04.575" endtime="20220801 01:09:04.576"/>
</kw>
<status status="PASS" starttime="20220801 01:09:00.781" endtime="20220801 01:09:04.576"/>
</kw>
<msg timestamp="20220801 01:09:04.576" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:09:00.781" endtime="20220801 01:09:04.576"/>
</kw>
<status status="PASS" starttime="20220801 01:09:00.780" endtime="20220801 01:09:04.577"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:09:04.580" level="INFO">Running command 'ozone sh key put 77260-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:09:11.158" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:09:11.158" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:09:04.578" endtime="20220801 01:09:11.158"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:09:11.160" level="INFO"/>
<status status="PASS" starttime="20220801 01:09:11.159" endtime="20220801 01:09:11.160"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:09:11.160" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:09:11.160" endtime="20220801 01:09:11.160"/>
</kw>
<status status="PASS" starttime="20220801 01:09:04.578" endtime="20220801 01:09:11.161"/>
</kw>
<msg timestamp="20220801 01:09:11.161" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:09:04.577" endtime="20220801 01:09:11.161"/>
</kw>
<status status="PASS" starttime="20220801 01:09:04.577" endtime="20220801 01:09:11.161"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220801 01:09:11.163" level="INFO">${postfix} = 63382</msg>
<status status="PASS" starttime="20220801 01:09:11.162" endtime="20220801 01:09:11.163"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220801 01:09:11.163" level="INFO">${tmpfile} = /tmp/tempkey-63382</msg>
<status status="PASS" starttime="20220801 01:09:11.163" endtime="20220801 01:09:11.163"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:09:11.167" level="INFO">Running command 'ozone sh key get 77260-target/link1/key3 /tmp/tempkey-63382 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:09:16.849" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:09:16.849" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:09:11.165" endtime="20220801 01:09:16.849"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:09:16.850" level="INFO"/>
<status status="PASS" starttime="20220801 01:09:16.850" endtime="20220801 01:09:16.851"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:09:16.851" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:09:16.851" endtime="20220801 01:09:16.851"/>
</kw>
<status status="PASS" starttime="20220801 01:09:11.164" endtime="20220801 01:09:16.851"/>
</kw>
<msg timestamp="20220801 01:09:16.851" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:09:11.164" endtime="20220801 01:09:16.852"/>
</kw>
<status status="PASS" starttime="20220801 01:09:11.164" endtime="20220801 01:09:16.852"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20220801 01:09:16.854" level="INFO">Running command 'diff -q /etc/group /tmp/tempkey-63382 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:09:16.857" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20220801 01:09:16.852" endtime="20220801 01:09:16.857"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:09:16.861" level="INFO">Running command 'rm -f /tmp/tempkey-63382 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:09:16.863" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:09:16.863" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:09:16.859" endtime="20220801 01:09:16.863"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:09:16.864" level="INFO"/>
<status status="PASS" starttime="20220801 01:09:16.863" endtime="20220801 01:09:16.864"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:09:16.865" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:09:16.864" endtime="20220801 01:09:16.865"/>
</kw>
<status status="PASS" starttime="20220801 01:09:16.858" endtime="20220801 01:09:16.865"/>
</kw>
<msg timestamp="20220801 01:09:16.865" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:09:16.858" endtime="20220801 01:09:16.866"/>
</kw>
<status status="PASS" starttime="20220801 01:09:16.857" endtime="20220801 01:09:16.866"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220801 01:09:16.866" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20220801 01:09:16.866" endtime="20220801 01:09:16.866"/>
</kw>
<msg timestamp="20220801 01:09:16.867" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20220801 01:09:11.162" endtime="20220801 01:09:16.867"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220801 01:09:16.867" endtime="20220801 01:09:16.867"/>
</kw>
<status status="PASS" starttime="20220801 01:09:11.161" endtime="20220801 01:09:16.867"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220801 01:09:00.682" endtime="20220801 01:09:16.868"/>
</test>
<test id="s1-s1-s3-t15" name="Source bucket not affected by deleting link" line="154">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:09:16.873" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:09:16.876" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:09:16.876" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220801 01:09:16.871" endtime="20220801 01:09:16.876"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:09:16.877" level="INFO">scm</msg>
<status status="PASS" starttime="20220801 01:09:16.876" endtime="20220801 01:09:16.877"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:09:16.878" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:09:16.877" endtime="20220801 01:09:16.878"/>
</kw>
<status status="PASS" starttime="20220801 01:09:16.871" endtime="20220801 01:09:16.878"/>
</kw>
<msg timestamp="20220801 01:09:16.878" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:09:16.870" endtime="20220801 01:09:16.878"/>
</kw>
<msg timestamp="20220801 01:09:16.879" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220801 01:09:16.870" endtime="20220801 01:09:16.879"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220801 01:09:16.880" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220801 01:09:16.879" endtime="20220801 01:09:16.880"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:09:16.883" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:09:16.890" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:09:16.890" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:09:16.881" endtime="20220801 01:09:16.890"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:09:16.891" level="INFO"/>
<status status="PASS" starttime="20220801 01:09:16.890" endtime="20220801 01:09:16.891"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:09:16.892" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:09:16.891" endtime="20220801 01:09:16.892"/>
</kw>
<status status="PASS" starttime="20220801 01:09:16.881" endtime="20220801 01:09:16.892"/>
</kw>
<msg timestamp="20220801 01:09:16.892" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:09:16.881" endtime="20220801 01:09:16.893"/>
</kw>
<status status="PASS" starttime="20220801 01:09:16.880" endtime="20220801 01:09:16.893"/>
</kw>
<status status="PASS" starttime="20220801 01:09:16.880" endtime="20220801 01:09:16.893"/>
</kw>
<status status="PASS" starttime="20220801 01:09:16.869" endtime="20220801 01:09:16.893"/>
</kw>
<status status="PASS" starttime="20220801 01:09:16.869" endtime="20220801 01:09:16.893"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:09:16.896" level="INFO">Running command 'ozone sh bucket delete 77260-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:09:20.417" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:09:20.417" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:09:16.894" endtime="20220801 01:09:20.417"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:09:20.418" level="INFO"/>
<status status="PASS" starttime="20220801 01:09:20.417" endtime="20220801 01:09:20.418"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:09:20.419" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:09:20.418" endtime="20220801 01:09:20.419"/>
</kw>
<status status="PASS" starttime="20220801 01:09:16.894" endtime="20220801 01:09:20.419"/>
</kw>
<msg timestamp="20220801 01:09:20.419" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:09:16.894" endtime="20220801 01:09:20.419"/>
</kw>
<status status="PASS" starttime="20220801 01:09:16.893" endtime="20220801 01:09:20.420"/>
</kw>
<kw name="Execute" library="os">
<var>${bucket_list}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:09:20.423" level="INFO">Running command 'ozone sh bucket list 77260-target 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:09:24.351" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:09:24.352" level="INFO">${output} = [ {
  "metadata" : { },
  "volumeName" : "77260-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-08-0...</msg>
<status status="PASS" starttime="20220801 01:09:20.421" endtime="20220801 01:09:24.352"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:09:24.353" level="INFO">[ {
  "metadata" : { },
  "volumeName" : "77260-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-08-01T01:08:26.500Z",
  "modificationTime" : "2022-08-01T01:08:26.500Z",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY",
  "owner" : "testuser",
  "link" : false
}, {
  "metadata" : { },
  "volumeName" : "77260-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-08-01T01:06:53.920Z",
  "modificationTime" : "2022-08-01T01:06:53.920Z",
  "sourceVolume" : "77260-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY",
  "owner" : "testuser",
  "link" : true
}, {
  "metadata" : { },
  "volumeName" : "77260-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-08-01T01:06:31.371Z",
  "modificationTime" : "2022-08-01T01:06:50.067Z",
  "sourceVolume" : "77260-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY",
  "owner" : "testuser",
  "link" : true
}, {
  "metadata" : { },
  "volumeName" : "77260-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-08-01T01:08:18.966Z",
  "modificationTime" : "2022-08-01T01:08:18.966Z",
  "sourceVolume" : "77260-source",
  "sourceBucket" : "bucket2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY",
  "owner" : "testuser",
  "link" : true
}, {
  "metadata" : { },
  "volumeName" : "77260-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-08-01T01:09:04.352Z",
  "modificationTime" : "2022-08-01T01:09:04.352Z",
  "sourceVolume" : "77260-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY",
  "owner" : "testuser",
  "link" : true
}, {
  "metadata" : { },
  "volumeName" : "77260-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-08-01T01:08:56.829Z",
  "modificationTime" : "2022-08-01T01:08:56.829Z",
  "sourceVolume" : "77260-target",
  "sourceBucket" : "loop3",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY",
  "owner" : "testuser",
  "link" : true
}, {
  "metadata" : { },
  "volumeName" : "77260-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-08-01T01:08:49.489Z",
  "modificationTime" : "2022-08-01T01:08:49.489Z",
  "sourceVolume" : "77260-target",
  "sourceBucket" : "loop1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY",
  "owner" : "testuser",
  "link" : true
}, {
  "metadata" : { },
  "volumeName" : "77260-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-08-01T01:08:53.250Z",
  "modificationTime" : "2022-08-01T01:08:53.250Z",
  "sourceVolume" : "77260-target",
  "sourceBucket" : "loop2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY",
  "owner" : "testuser",
  "link" : true
}, {
  "metadata" : { },
  "volumeName" : "77260-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-08-01T01:06:23.667Z",
  "modificationTime" : "2022-08-01T01:06:46.326Z",
  "sourceVolume" : "77260-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY",
  "owner" : "testuser",
  "link" : true
}, {
  "metadata" : { },
  "volumeName" : "77260-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-08-01T01:06:27.523Z",
  "modificationTime" : "2022-08-01T01:06:27.523Z",
  "sourceVolume" : "77260-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY",
  "owner" : "testuser",
  "link" : true
} ]</msg>
<status status="PASS" starttime="20220801 01:09:24.352" endtime="20220801 01:09:24.353"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:09:24.354" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:09:24.353" endtime="20220801 01:09:24.354"/>
</kw>
<status status="PASS" starttime="20220801 01:09:20.421" endtime="20220801 01:09:24.354"/>
</kw>
<msg timestamp="20220801 01:09:24.354" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:09:20.420" endtime="20220801 01:09:24.355"/>
</kw>
<msg timestamp="20220801 01:09:24.355" level="INFO">${bucket_list} = [ {
  "metadata" : { },
  "volumeName" : "77260-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-08-0...</msg>
<status status="PASS" starttime="20220801 01:09:20.420" endtime="20220801 01:09:24.355"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${bucket_list}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220801 01:09:24.355" endtime="20220801 01:09:24.355"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:09:24.359" level="INFO">Running command 'ozone sh key list 77260-source/bucket1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:09:28.358" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:09:28.359" level="INFO">${output} = key1
key3</msg>
<status status="PASS" starttime="20220801 01:09:24.357" endtime="20220801 01:09:28.359"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:09:28.360" level="INFO">key1
key3</msg>
<status status="PASS" starttime="20220801 01:09:28.359" endtime="20220801 01:09:28.360"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:09:28.360" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:09:28.360" endtime="20220801 01:09:28.361"/>
</kw>
<status status="PASS" starttime="20220801 01:09:24.356" endtime="20220801 01:09:28.361"/>
</kw>
<msg timestamp="20220801 01:09:28.361" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:09:24.356" endtime="20220801 01:09:28.361"/>
</kw>
<msg timestamp="20220801 01:09:28.361" level="INFO">${source_list} = key1
key3</msg>
<status status="PASS" starttime="20220801 01:09:24.356" endtime="20220801 01:09:28.362"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220801 01:09:28.362" endtime="20220801 01:09:28.362"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220801 01:09:16.868" endtime="20220801 01:09:28.362"/>
</test>
<test id="s1-s1-s3-t16" name="Setting bucket property on link not allowed" line="161">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:09:28.368" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:09:28.371" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:09:28.371" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220801 01:09:28.366" endtime="20220801 01:09:28.371"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:09:28.372" level="INFO">scm</msg>
<status status="PASS" starttime="20220801 01:09:28.371" endtime="20220801 01:09:28.372"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:09:28.373" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:09:28.372" endtime="20220801 01:09:28.373"/>
</kw>
<status status="PASS" starttime="20220801 01:09:28.366" endtime="20220801 01:09:28.373"/>
</kw>
<msg timestamp="20220801 01:09:28.373" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:09:28.365" endtime="20220801 01:09:28.373"/>
</kw>
<msg timestamp="20220801 01:09:28.374" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220801 01:09:28.365" endtime="20220801 01:09:28.374"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220801 01:09:28.374" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220801 01:09:28.374" endtime="20220801 01:09:28.374"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:09:28.378" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:09:28.384" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:09:28.385" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:09:28.376" endtime="20220801 01:09:28.385"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:09:28.386" level="INFO"/>
<status status="PASS" starttime="20220801 01:09:28.385" endtime="20220801 01:09:28.386"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:09:28.386" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:09:28.386" endtime="20220801 01:09:28.386"/>
</kw>
<status status="PASS" starttime="20220801 01:09:28.376" endtime="20220801 01:09:28.387"/>
</kw>
<msg timestamp="20220801 01:09:28.387" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:09:28.375" endtime="20220801 01:09:28.387"/>
</kw>
<status status="PASS" starttime="20220801 01:09:28.375" endtime="20220801 01:09:28.387"/>
</kw>
<status status="PASS" starttime="20220801 01:09:28.374" endtime="20220801 01:09:28.387"/>
</kw>
<status status="PASS" starttime="20220801 01:09:28.365" endtime="20220801 01:09:28.388"/>
</kw>
<status status="PASS" starttime="20220801 01:09:28.364" endtime="20220801 01:09:28.388"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:09:28.391" level="INFO">Running command 'ozone sh bucket link 77260-source/bucket1 77260-target/link4 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:09:32.145" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:09:32.145" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:09:28.389" endtime="20220801 01:09:32.145"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:09:32.146" level="INFO"/>
<status status="PASS" starttime="20220801 01:09:32.146" endtime="20220801 01:09:32.147"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:09:32.147" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:09:32.147" endtime="20220801 01:09:32.147"/>
</kw>
<status status="PASS" starttime="20220801 01:09:28.389" endtime="20220801 01:09:32.147"/>
</kw>
<msg timestamp="20220801 01:09:32.148" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:09:28.388" endtime="20220801 01:09:32.148"/>
</kw>
<status status="PASS" starttime="20220801 01:09:28.388" endtime="20220801 01:09:32.148"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket setquota ${target}/link4 --quota 1GB</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:09:32.151" level="INFO">Running command 'ozone sh bucket setquota 77260-target/link4 --quota 1GB 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:09:36.176" level="INFO">${rc} = 255</msg>
<msg timestamp="20220801 01:09:36.176" level="INFO">${output} = NOT_SUPPORTED_OPERATION Cannot set property on link</msg>
<status status="PASS" starttime="20220801 01:09:32.149" endtime="20220801 01:09:36.176"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:09:36.177" level="INFO">NOT_SUPPORTED_OPERATION Cannot set property on link</msg>
<status status="PASS" starttime="20220801 01:09:36.177" endtime="20220801 01:09:36.177"/>
</kw>
<msg timestamp="20220801 01:09:36.178" level="INFO">${result} = NOT_SUPPORTED_OPERATION Cannot set property on link</msg>
<status status="PASS" starttime="20220801 01:09:32.148" endtime="20220801 01:09:36.178"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOT_SUPPORTED_OPERATION</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220801 01:09:36.178" endtime="20220801 01:09:36.178"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:09:36.182" level="INFO">Running command 'ozone sh bucket info 77260-target/link4 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:09:40.303" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:09:40.303" level="INFO">${output} = {
  "volumeName" : "77260-target",
  "bucketName" : "link4",
  "sourceVolume" : "77260-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2022-08-01T01:09:32.058Z",
  "modificationTime" : "202...</msg>
<status status="PASS" starttime="20220801 01:09:36.180" endtime="20220801 01:09:40.303"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:09:40.304" level="INFO">{
  "volumeName" : "77260-target",
  "bucketName" : "link4",
  "sourceVolume" : "77260-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2022-08-01T01:09:32.058Z",
  "modificationTime" : "2022-08-01T01:09:32.058Z",
  "owner" : "testuser"
}</msg>
<status status="PASS" starttime="20220801 01:09:40.304" endtime="20220801 01:09:40.305"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:09:40.305" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:09:40.305" endtime="20220801 01:09:40.305"/>
</kw>
<status status="PASS" starttime="20220801 01:09:36.179" endtime="20220801 01:09:40.306"/>
</kw>
<msg timestamp="20220801 01:09:40.306" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:09:36.179" endtime="20220801 01:09:40.306"/>
</kw>
<msg timestamp="20220801 01:09:40.306" level="INFO">${result} = {
  "volumeName" : "77260-target",
  "bucketName" : "link4",
  "sourceVolume" : "77260-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2022-08-01T01:09:32.058Z",
  "modificationTime" : "202...</msg>
<status status="PASS" starttime="20220801 01:09:36.178" endtime="20220801 01:09:40.306"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>sourceBucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220801 01:09:40.306" endtime="20220801 01:09:40.307"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220801 01:09:28.363" endtime="20220801 01:09:40.307"/>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="PASS" starttime="20220801 01:05:59.075" endtime="20220801 01:09:40.308"/>
</suite>
<suite id="s1-s1-s4" name="Ozone-Shell-Single" source="/opt/hadoop/smoketest/basic/ozone-shell-single.robot">
<kw name="Generate prefix" library="ozone-shell-lib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220801 01:09:40.334" level="INFO">${random} = 88315</msg>
<status status="PASS" starttime="20220801 01:09:40.334" endtime="20220801 01:09:40.334"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220801 01:09:40.335" level="INFO">${prefix} = 88315</msg>
<status status="PASS" starttime="20220801 01:09:40.334" endtime="20220801 01:09:40.335"/>
</kw>
<status status="PASS" starttime="20220801 01:09:40.334" endtime="20220801 01:09:40.335"/>
</kw>
<test id="s1-s1-s4-t1" name="Test ozone shell" line="26">
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-without-scheme</arg>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:09:40.340" level="INFO">Running command 'ozone sh volume info /88315-without-scheme 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:09:43.857" level="INFO">${rc} = 255</msg>
<msg timestamp="20220801 01:09:43.857" level="INFO">${output} = VOLUME_NOT_FOUND Volume 88315-without-scheme is not found</msg>
<status status="PASS" starttime="20220801 01:09:40.338" endtime="20220801 01:09:43.857"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:09:43.858" level="INFO">VOLUME_NOT_FOUND Volume 88315-without-scheme is not found</msg>
<status status="PASS" starttime="20220801 01:09:43.858" endtime="20220801 01:09:43.858"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:09:43.859" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:09:43.858" endtime="20220801 01:09:43.859"/>
</kw>
<msg timestamp="20220801 01:09:43.859" level="INFO">${result} = VOLUME_NOT_FOUND Volume 88315-without-scheme is not found</msg>
<status status="PASS" starttime="20220801 01:09:40.338" endtime="20220801 01:09:43.859"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220801 01:09:43.859" endtime="20220801 01:09:43.860"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:09:43.863" level="INFO">Running command 'ozone sh volume create /88315-without-scheme --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:09:47.475" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:09:47.475" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:09:43.861" endtime="20220801 01:09:47.475"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:09:47.476" level="INFO"/>
<status status="PASS" starttime="20220801 01:09:47.475" endtime="20220801 01:09:47.476"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:09:47.477" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:09:47.476" endtime="20220801 01:09:47.477"/>
</kw>
<status status="PASS" starttime="20220801 01:09:43.861" endtime="20220801 01:09:47.477"/>
</kw>
<msg timestamp="20220801 01:09:47.477" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:09:43.861" endtime="20220801 01:09:47.478"/>
</kw>
<msg timestamp="20220801 01:09:47.478" level="INFO">${result} = </msg>
<status status="PASS" starttime="20220801 01:09:43.860" endtime="20220801 01:09:47.478"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220801 01:09:47.478" endtime="20220801 01:09:47.478"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:09:47.482" level="INFO">Running command 'ozone sh volume list / | jq -r '.[] | select(.name=="88315-without-scheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:09:51.420" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:09:51.420" level="INFO">${output} = {
  "metadata": {},
  "name": "88315-without-scheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime"...</msg>
<status status="PASS" starttime="20220801 01:09:47.480" endtime="20220801 01:09:51.420"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:09:51.422" level="INFO">{
  "metadata": {},
  "name": "88315-without-scheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2022-08-01T01:09:47.405Z",
  "modificationTime": "2022-08-01T01:09:47.405Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "refCount": 0
}</msg>
<status status="PASS" starttime="20220801 01:09:51.421" endtime="20220801 01:09:51.422"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:09:51.423" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:09:51.422" endtime="20220801 01:09:51.423"/>
</kw>
<status status="PASS" starttime="20220801 01:09:47.480" endtime="20220801 01:09:51.423"/>
</kw>
<msg timestamp="20220801 01:09:51.423" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:09:47.479" endtime="20220801 01:09:51.424"/>
</kw>
<msg timestamp="20220801 01:09:51.424" level="INFO">${result} = {
  "metadata": {},
  "name": "88315-without-scheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime"...</msg>
<status status="PASS" starttime="20220801 01:09:47.479" endtime="20220801 01:09:51.424"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220801 01:09:51.424" endtime="20220801 01:09:51.425"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:09:51.428" level="INFO">Running command 'ozone sh volume list | jq -r '.[] | select(.name=="88315-without-scheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:09:55.422" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:09:55.422" level="INFO">${output} = {
  "metadata": {},
  "name": "88315-without-scheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime"...</msg>
<status status="PASS" starttime="20220801 01:09:51.426" endtime="20220801 01:09:55.422"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:09:55.423" level="INFO">{
  "metadata": {},
  "name": "88315-without-scheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2022-08-01T01:09:47.405Z",
  "modificationTime": "2022-08-01T01:09:47.405Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "refCount": 0
}</msg>
<status status="PASS" starttime="20220801 01:09:55.423" endtime="20220801 01:09:55.423"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:09:55.424" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:09:55.423" endtime="20220801 01:09:55.424"/>
</kw>
<status status="PASS" starttime="20220801 01:09:51.426" endtime="20220801 01:09:55.424"/>
</kw>
<msg timestamp="20220801 01:09:55.424" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:09:51.425" endtime="20220801 01:09:55.425"/>
</kw>
<msg timestamp="20220801 01:09:55.425" level="INFO">${result} = {
  "metadata": {},
  "name": "88315-without-scheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime"...</msg>
<status status="PASS" starttime="20220801 01:09:51.425" endtime="20220801 01:09:55.425"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220801 01:09:55.425" endtime="20220801 01:09:55.426"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:09:55.429" level="INFO">Running command 'ozone sh volume setquota /88315-without-scheme --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:09:58.999" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:09:58.999" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:09:55.427" endtime="20220801 01:09:58.999"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:09:59.000" level="INFO"/>
<status status="PASS" starttime="20220801 01:09:58.999" endtime="20220801 01:09:59.000"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:09:59.001" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:09:59.000" endtime="20220801 01:09:59.001"/>
</kw>
<status status="PASS" starttime="20220801 01:09:55.426" endtime="20220801 01:09:59.001"/>
</kw>
<msg timestamp="20220801 01:09:59.001" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:09:55.426" endtime="20220801 01:09:59.001"/>
</kw>
<status status="PASS" starttime="20220801 01:09:55.426" endtime="20220801 01:09:59.002"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:09:59.005" level="INFO">Running command 'ozone sh volume info /88315-without-scheme | jq -r '. | select(.name=="88315-without-scheme") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:10:03.064" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:10:03.064" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20220801 01:09:59.003" endtime="20220801 01:10:03.064"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:10:03.065" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20220801 01:10:03.065" endtime="20220801 01:10:03.065"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:10:03.066" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:10:03.065" endtime="20220801 01:10:03.066"/>
</kw>
<status status="PASS" starttime="20220801 01:09:59.003" endtime="20220801 01:10:03.066"/>
</kw>
<msg timestamp="20220801 01:10:03.066" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:09:59.003" endtime="20220801 01:10:03.067"/>
</kw>
<msg timestamp="20220801 01:10:03.067" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20220801 01:09:59.002" endtime="20220801 01:10:03.067"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220801 01:10:03.067" endtime="20220801 01:10:03.068"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:10:03.071" level="INFO">Running command 'ozone sh bucket create /88315-without-scheme/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:10:06.821" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:10:06.821" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:10:03.069" endtime="20220801 01:10:06.821"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:10:06.822" level="INFO"/>
<status status="PASS" starttime="20220801 01:10:06.822" endtime="20220801 01:10:06.822"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:10:06.824" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:10:06.822" endtime="20220801 01:10:06.824"/>
</kw>
<status status="PASS" starttime="20220801 01:10:03.069" endtime="20220801 01:10:06.824"/>
</kw>
<msg timestamp="20220801 01:10:06.824" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:10:03.068" endtime="20220801 01:10:06.825"/>
</kw>
<status status="PASS" starttime="20220801 01:10:03.068" endtime="20220801 01:10:06.825"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:10:06.829" level="INFO">Running command 'ozone sh bucket info /88315-without-scheme/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:10:10.597" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:10:10.597" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20220801 01:10:06.827" endtime="20220801 01:10:10.597"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:10:10.598" level="INFO">DISK</msg>
<status status="PASS" starttime="20220801 01:10:10.597" endtime="20220801 01:10:10.598"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:10:10.598" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:10:10.598" endtime="20220801 01:10:10.599"/>
</kw>
<status status="PASS" starttime="20220801 01:10:06.826" endtime="20220801 01:10:10.599"/>
</kw>
<msg timestamp="20220801 01:10:10.599" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:10:06.826" endtime="20220801 01:10:10.599"/>
</kw>
<msg timestamp="20220801 01:10:10.600" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20220801 01:10:06.825" endtime="20220801 01:10:10.600"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220801 01:10:10.600" endtime="20220801 01:10:10.600"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:10:10.604" level="INFO">Running command 'ozone sh bucket info /88315-without-scheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:10:14.419" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:10:14.419" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20220801 01:10:10.602" endtime="20220801 01:10:14.419"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:10:14.421" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20220801 01:10:14.420" endtime="20220801 01:10:14.421"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:10:14.421" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:10:14.421" endtime="20220801 01:10:14.422"/>
</kw>
<status status="PASS" starttime="20220801 01:10:10.601" endtime="20220801 01:10:14.422"/>
</kw>
<msg timestamp="20220801 01:10:14.422" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:10:10.601" endtime="20220801 01:10:14.422"/>
</kw>
<msg timestamp="20220801 01:10:14.423" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20220801 01:10:10.600" endtime="20220801 01:10:14.423"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220801 01:10:14.423" endtime="20220801 01:10:14.423"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:10:14.427" level="INFO">Running command 'ozone sh bucket info /88315-without-scheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:10:18.368" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:10:18.368" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20220801 01:10:14.425" endtime="20220801 01:10:18.368"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:10:18.369" level="INFO">100</msg>
<status status="PASS" starttime="20220801 01:10:18.369" endtime="20220801 01:10:18.370"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:10:18.370" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:10:18.370" endtime="20220801 01:10:18.370"/>
</kw>
<status status="PASS" starttime="20220801 01:10:14.424" endtime="20220801 01:10:18.371"/>
</kw>
<msg timestamp="20220801 01:10:18.371" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:10:14.424" endtime="20220801 01:10:18.371"/>
</kw>
<msg timestamp="20220801 01:10:18.371" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20220801 01:10:14.423" endtime="20220801 01:10:18.371"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220801 01:10:18.371" endtime="20220801 01:10:18.372"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:10:18.375" level="INFO">Running command 'ozone sh bucket setquota /88315-without-scheme/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:10:22.004" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:10:22.005" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:10:18.374" endtime="20220801 01:10:22.005"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:10:22.006" level="INFO"/>
<status status="PASS" starttime="20220801 01:10:22.005" endtime="20220801 01:10:22.006"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:10:22.006" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:10:22.006" endtime="20220801 01:10:22.006"/>
</kw>
<status status="PASS" starttime="20220801 01:10:18.373" endtime="20220801 01:10:22.007"/>
</kw>
<msg timestamp="20220801 01:10:22.007" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:10:18.373" endtime="20220801 01:10:22.007"/>
</kw>
<status status="PASS" starttime="20220801 01:10:18.372" endtime="20220801 01:10:22.007"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:10:22.022" level="INFO">Running command 'ozone sh bucket info /88315-without-scheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:10:25.888" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:10:25.888" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20220801 01:10:22.020" endtime="20220801 01:10:25.888"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:10:25.889" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20220801 01:10:25.889" endtime="20220801 01:10:25.889"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:10:25.890" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:10:25.890" endtime="20220801 01:10:25.890"/>
</kw>
<status status="PASS" starttime="20220801 01:10:22.020" endtime="20220801 01:10:25.890"/>
</kw>
<msg timestamp="20220801 01:10:25.890" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:10:22.008" endtime="20220801 01:10:25.891"/>
</kw>
<msg timestamp="20220801 01:10:25.891" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20220801 01:10:22.008" endtime="20220801 01:10:25.891"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220801 01:10:25.891" endtime="20220801 01:10:25.892"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:10:25.895" level="INFO">Running command 'ozone sh bucket info /88315-without-scheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:10:29.655" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:10:29.655" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20220801 01:10:25.893" endtime="20220801 01:10:29.656"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:10:29.657" level="INFO">1000</msg>
<status status="PASS" starttime="20220801 01:10:29.656" endtime="20220801 01:10:29.657"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:10:29.657" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:10:29.657" endtime="20220801 01:10:29.657"/>
</kw>
<status status="PASS" starttime="20220801 01:10:25.893" endtime="20220801 01:10:29.658"/>
</kw>
<msg timestamp="20220801 01:10:29.658" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:10:25.893" endtime="20220801 01:10:29.658"/>
</kw>
<msg timestamp="20220801 01:10:29.659" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20220801 01:10:25.892" endtime="20220801 01:10:29.659"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220801 01:10:29.659" endtime="20220801 01:10:29.659"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '.[] | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:10:29.663" level="INFO">Running command 'ozone sh bucket list /88315-without-scheme/ | jq -r '.[] | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:10:33.765" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:10:33.766" level="INFO">${output} = 88315-without-scheme</msg>
<status status="PASS" starttime="20220801 01:10:29.661" endtime="20220801 01:10:33.766"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:10:33.767" level="INFO">88315-without-scheme</msg>
<status status="PASS" starttime="20220801 01:10:33.766" endtime="20220801 01:10:33.767"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:10:33.768" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:10:33.767" endtime="20220801 01:10:33.768"/>
</kw>
<status status="PASS" starttime="20220801 01:10:29.661" endtime="20220801 01:10:33.768"/>
</kw>
<msg timestamp="20220801 01:10:33.768" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:10:29.660" endtime="20220801 01:10:33.769"/>
</kw>
<msg timestamp="20220801 01:10:33.769" level="INFO">${result} = 88315-without-scheme</msg>
<status status="PASS" starttime="20220801 01:10:29.660" endtime="20220801 01:10:33.769"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220801 01:10:33.769" endtime="20220801 01:10:33.770"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:10:33.774" level="INFO">Running command 'ozone sh key put /88315-without-scheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:10:40.050" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:10:40.050" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:10:33.772" endtime="20220801 01:10:40.050"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:10:40.051" level="INFO"/>
<status status="PASS" starttime="20220801 01:10:40.050" endtime="20220801 01:10:40.051"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:10:40.051" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:10:40.051" endtime="20220801 01:10:40.052"/>
</kw>
<status status="PASS" starttime="20220801 01:10:33.771" endtime="20220801 01:10:40.052"/>
</kw>
<msg timestamp="20220801 01:10:40.052" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:10:33.771" endtime="20220801 01:10:40.052"/>
</kw>
<status status="PASS" starttime="20220801 01:10:33.771" endtime="20220801 01:10:40.053"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:10:40.056" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:10:40.058" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:10:40.058" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:10:40.054" endtime="20220801 01:10:40.058"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:10:40.059" level="INFO"/>
<status status="PASS" starttime="20220801 01:10:40.059" endtime="20220801 01:10:40.059"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:10:40.060" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:10:40.059" endtime="20220801 01:10:40.060"/>
</kw>
<status status="PASS" starttime="20220801 01:10:40.053" endtime="20220801 01:10:40.060"/>
</kw>
<msg timestamp="20220801 01:10:40.060" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:10:40.053" endtime="20220801 01:10:40.061"/>
</kw>
<status status="PASS" starttime="20220801 01:10:40.053" endtime="20220801 01:10:40.061"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:10:40.064" level="INFO">Running command 'ozone sh key get /88315-without-scheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:10:45.730" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:10:45.730" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:10:40.062" endtime="20220801 01:10:45.730"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:10:45.731" level="INFO"/>
<status status="PASS" starttime="20220801 01:10:45.731" endtime="20220801 01:10:45.732"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:10:45.732" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:10:45.732" endtime="20220801 01:10:45.732"/>
</kw>
<status status="PASS" starttime="20220801 01:10:40.062" endtime="20220801 01:10:45.733"/>
</kw>
<msg timestamp="20220801 01:10:45.733" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:10:40.062" endtime="20220801 01:10:45.733"/>
</kw>
<status status="PASS" starttime="20220801 01:10:40.061" endtime="20220801 01:10:45.733"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:10:45.737" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:10:45.739" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:10:45.739" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:10:45.735" endtime="20220801 01:10:45.739"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:10:45.740" level="INFO"/>
<status status="PASS" starttime="20220801 01:10:45.740" endtime="20220801 01:10:45.740"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:10:45.741" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:10:45.740" endtime="20220801 01:10:45.741"/>
</kw>
<status status="PASS" starttime="20220801 01:10:45.734" endtime="20220801 01:10:45.741"/>
</kw>
<msg timestamp="20220801 01:10:45.741" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:10:45.734" endtime="20220801 01:10:45.742"/>
</kw>
<status status="PASS" starttime="20220801 01:10:45.734" endtime="20220801 01:10:45.742"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:10:45.746" level="INFO">Running command 'ozone sh key put -t RATIS /88315-without-scheme/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:10:51.824" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:10:51.824" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:10:45.743" endtime="20220801 01:10:51.824"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:10:51.825" level="INFO"/>
<status status="PASS" starttime="20220801 01:10:51.824" endtime="20220801 01:10:51.825"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:10:51.826" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:10:51.825" endtime="20220801 01:10:51.826"/>
</kw>
<status status="PASS" starttime="20220801 01:10:45.743" endtime="20220801 01:10:51.826"/>
</kw>
<msg timestamp="20220801 01:10:51.826" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:10:45.743" endtime="20220801 01:10:51.827"/>
</kw>
<status status="PASS" starttime="20220801 01:10:45.742" endtime="20220801 01:10:51.827"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:10:51.830" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:10:51.832" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:10:51.833" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:10:51.828" endtime="20220801 01:10:51.833"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:10:51.834" level="INFO"/>
<status status="PASS" starttime="20220801 01:10:51.833" endtime="20220801 01:10:51.834"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:10:51.834" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:10:51.834" endtime="20220801 01:10:51.834"/>
</kw>
<status status="PASS" starttime="20220801 01:10:51.828" endtime="20220801 01:10:51.835"/>
</kw>
<msg timestamp="20220801 01:10:51.835" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:10:51.827" endtime="20220801 01:10:51.835"/>
</kw>
<status status="PASS" starttime="20220801 01:10:51.827" endtime="20220801 01:10:51.835"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:10:51.839" level="INFO">Running command 'ozone sh key get /88315-without-scheme/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:10:57.210" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:10:57.210" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:10:51.837" endtime="20220801 01:10:57.210"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:10:57.211" level="INFO"/>
<status status="PASS" starttime="20220801 01:10:57.211" endtime="20220801 01:10:57.212"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:10:57.212" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:10:57.212" endtime="20220801 01:10:57.212"/>
</kw>
<status status="PASS" starttime="20220801 01:10:51.836" endtime="20220801 01:10:57.213"/>
</kw>
<msg timestamp="20220801 01:10:57.213" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:10:51.836" endtime="20220801 01:10:57.213"/>
</kw>
<status status="PASS" starttime="20220801 01:10:51.835" endtime="20220801 01:10:57.213"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:10:57.217" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:10:57.219" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:10:57.219" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:10:57.215" endtime="20220801 01:10:57.219"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:10:57.220" level="INFO"/>
<status status="PASS" starttime="20220801 01:10:57.220" endtime="20220801 01:10:57.220"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:10:57.221" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:10:57.221" endtime="20220801 01:10:57.221"/>
</kw>
<status status="PASS" starttime="20220801 01:10:57.214" endtime="20220801 01:10:57.221"/>
</kw>
<msg timestamp="20220801 01:10:57.221" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:10:57.214" endtime="20220801 01:10:57.222"/>
</kw>
<status status="PASS" starttime="20220801 01:10:57.213" endtime="20220801 01:10:57.222"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:10:57.226" level="INFO">Running command 'ozone sh key info /88315-without-scheme/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:11:00.990" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:11:00.990" level="INFO">${output} = {
  "volumeName": "88315-without-scheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17526,
  "creationTime": "2022-08-01T01:10:49.595Z",
  "modificationTime": "2022-08-01T01:10:51.3...</msg>
<status status="PASS" starttime="20220801 01:10:57.224" endtime="20220801 01:11:00.990"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:11:00.992" level="INFO">{
  "volumeName": "88315-without-scheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17526,
  "creationTime": "2022-08-01T01:10:49.595Z",
  "modificationTime": "2022-08-01T01:10:51.331Z",
  "replicationConfig": {
    "replicationFactor": "THREE",
    "requiredNodes": 3,
    "replicationType": "RATIS"
  },
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 109611004723200000,
      "length": 17526,
      "offset": 0,
      "keyOffset": 0
    }
  ],
  "metadata": {}
}</msg>
<status status="PASS" starttime="20220801 01:11:00.991" endtime="20220801 01:11:00.992"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:11:00.992" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:11:00.992" endtime="20220801 01:11:00.992"/>
</kw>
<status status="PASS" starttime="20220801 01:10:57.223" endtime="20220801 01:11:00.993"/>
</kw>
<msg timestamp="20220801 01:11:00.993" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:10:57.223" endtime="20220801 01:11:00.993"/>
</kw>
<msg timestamp="20220801 01:11:00.993" level="INFO">${result} = {
  "volumeName": "88315-without-scheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17526,
  "creationTime": "2022-08-01T01:10:49.595Z",
  "modificationTime": "2022-08-01T01:10:51.3...</msg>
<status status="PASS" starttime="20220801 01:10:57.222" endtime="20220801 01:11:00.993"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220801 01:11:00.994" endtime="20220801 01:11:00.994"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:11:00.997" level="INFO">Running command 'ozone sh key delete /88315-without-scheme/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:11:04.866" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:11:04.866" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:11:00.995" endtime="20220801 01:11:04.866"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:11:04.868" level="INFO"/>
<status status="PASS" starttime="20220801 01:11:04.867" endtime="20220801 01:11:04.868"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:11:04.868" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:11:04.868" endtime="20220801 01:11:04.868"/>
</kw>
<status status="PASS" starttime="20220801 01:11:00.995" endtime="20220801 01:11:04.869"/>
</kw>
<msg timestamp="20220801 01:11:04.869" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:11:00.995" endtime="20220801 01:11:04.869"/>
</kw>
<status status="PASS" starttime="20220801 01:11:00.994" endtime="20220801 01:11:04.870"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:11:04.874" level="INFO">Running command 'ozone sh key cp /88315-without-scheme/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:11:11.244" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:11:11.244" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:11:04.871" endtime="20220801 01:11:11.244"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:11:11.245" level="INFO"/>
<status status="PASS" starttime="20220801 01:11:11.244" endtime="20220801 01:11:11.245"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:11:11.246" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:11:11.245" endtime="20220801 01:11:11.246"/>
</kw>
<status status="PASS" starttime="20220801 01:11:04.871" endtime="20220801 01:11:11.246"/>
</kw>
<msg timestamp="20220801 01:11:11.246" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:11:04.870" endtime="20220801 01:11:11.247"/>
</kw>
<status status="PASS" starttime="20220801 01:11:04.870" endtime="20220801 01:11:11.247"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:11:11.250" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:11:11.252" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:11:11.252" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:11:11.248" endtime="20220801 01:11:11.252"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:11:11.253" level="INFO"/>
<status status="PASS" starttime="20220801 01:11:11.253" endtime="20220801 01:11:11.253"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:11:11.254" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:11:11.254" endtime="20220801 01:11:11.254"/>
</kw>
<status status="PASS" starttime="20220801 01:11:11.248" endtime="20220801 01:11:11.254"/>
</kw>
<msg timestamp="20220801 01:11:11.254" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:11:11.247" endtime="20220801 01:11:11.255"/>
</kw>
<status status="PASS" starttime="20220801 01:11:11.247" endtime="20220801 01:11:11.255"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:11:11.259" level="INFO">Running command 'ozone sh key get /88315-without-scheme/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:11:16.816" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:11:16.816" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:11:11.257" endtime="20220801 01:11:16.817"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:11:16.818" level="INFO"/>
<status status="PASS" starttime="20220801 01:11:16.817" endtime="20220801 01:11:16.818"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:11:16.818" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:11:16.818" endtime="20220801 01:11:16.818"/>
</kw>
<status status="PASS" starttime="20220801 01:11:11.256" endtime="20220801 01:11:16.819"/>
</kw>
<msg timestamp="20220801 01:11:16.819" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:11:11.256" endtime="20220801 01:11:16.819"/>
</kw>
<status status="PASS" starttime="20220801 01:11:11.255" endtime="20220801 01:11:16.819"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:11:16.823" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:11:16.825" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:11:16.825" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:11:16.821" endtime="20220801 01:11:16.825"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:11:16.826" level="INFO"/>
<status status="PASS" starttime="20220801 01:11:16.826" endtime="20220801 01:11:16.826"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:11:16.827" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:11:16.826" endtime="20220801 01:11:16.827"/>
</kw>
<status status="PASS" starttime="20220801 01:11:16.820" endtime="20220801 01:11:16.827"/>
</kw>
<msg timestamp="20220801 01:11:16.827" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:11:16.820" endtime="20220801 01:11:16.828"/>
</kw>
<status status="PASS" starttime="20220801 01:11:16.819" endtime="20220801 01:11:16.828"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:11:16.831" level="INFO">Running command 'ozone sh key delete /88315-without-scheme/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:11:20.411" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:11:20.411" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:11:16.829" endtime="20220801 01:11:20.411"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:11:20.412" level="INFO"/>
<status status="PASS" starttime="20220801 01:11:20.412" endtime="20220801 01:11:20.412"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:11:20.413" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:11:20.413" endtime="20220801 01:11:20.413"/>
</kw>
<status status="PASS" starttime="20220801 01:11:16.829" endtime="20220801 01:11:20.413"/>
</kw>
<msg timestamp="20220801 01:11:20.414" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:11:16.829" endtime="20220801 01:11:20.414"/>
</kw>
<status status="PASS" starttime="20220801 01:11:16.828" endtime="20220801 01:11:20.414"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:11:20.417" level="INFO">Running command 'ozone sh key get /88315-without-scheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:11:24.004" level="INFO">${rc} = 255</msg>
<msg timestamp="20220801 01:11:24.004" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20220801 01:11:20.415" endtime="20220801 01:11:24.004"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:11:24.005" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20220801 01:11:24.004" endtime="20220801 01:11:24.005"/>
</kw>
<msg timestamp="20220801 01:11:24.005" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20220801 01:11:20.414" endtime="20220801 01:11:24.006"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220801 01:11:24.006" endtime="20220801 01:11:24.006"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:11:24.009" level="INFO">Running command 'ozone sh key get --force /88315-without-scheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:11:29.490" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:11:29.490" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:11:24.008" endtime="20220801 01:11:29.490"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:11:29.492" level="INFO"/>
<status status="PASS" starttime="20220801 01:11:29.491" endtime="20220801 01:11:29.492"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:11:29.492" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:11:29.492" endtime="20220801 01:11:29.492"/>
</kw>
<status status="PASS" starttime="20220801 01:11:24.007" endtime="20220801 01:11:29.493"/>
</kw>
<msg timestamp="20220801 01:11:29.493" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:11:24.007" endtime="20220801 01:11:29.493"/>
</kw>
<msg timestamp="20220801 01:11:29.493" level="INFO">${result} = </msg>
<status status="PASS" starttime="20220801 01:11:24.006" endtime="20220801 01:11:29.493"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220801 01:11:29.494" endtime="20220801 01:11:29.494"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:11:29.498" level="INFO">Running command 'ozone sh key info /88315-without-scheme/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:11:33.353" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:11:33.353" level="INFO">${output} = {
  "volumeName": "88315-without-scheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17526,
  "creationTime": "2022-08-01T01:10:37.427Z",
  "modificationTime": "2022-08-01T01:10:39.515Z",
...</msg>
<status status="PASS" starttime="20220801 01:11:29.496" endtime="20220801 01:11:33.353"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:11:33.355" level="INFO">{
  "volumeName": "88315-without-scheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17526,
  "creationTime": "2022-08-01T01:10:37.427Z",
  "modificationTime": "2022-08-01T01:10:39.515Z",
  "replicationConfig": {
    "replicationFactor": "ONE",
    "requiredNodes": 1,
    "replicationType": "RATIS"
  },
  "ozoneKeyLocations": [
    {
      "containerID": 2,
      "localID": 109611004723200000,
      "length": 17526,
      "offset": 0,
      "keyOffset": 0
    }
  ],
  "metadata": {}
}</msg>
<status status="PASS" starttime="20220801 01:11:33.354" endtime="20220801 01:11:33.355"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:11:33.355" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:11:33.355" endtime="20220801 01:11:33.355"/>
</kw>
<status status="PASS" starttime="20220801 01:11:29.495" endtime="20220801 01:11:33.356"/>
</kw>
<msg timestamp="20220801 01:11:33.356" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:11:29.495" endtime="20220801 01:11:33.357"/>
</kw>
<msg timestamp="20220801 01:11:33.357" level="INFO">${result} = {
  "volumeName": "88315-without-scheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17526,
  "creationTime": "2022-08-01T01:10:37.427Z",
  "modificationTime": "2022-08-01T01:10:39.515Z",
...</msg>
<status status="PASS" starttime="20220801 01:11:29.494" endtime="20220801 01:11:33.357"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220801 01:11:33.357" endtime="20220801 01:11:33.358"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[] | select(.name=="key1") | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:11:33.361" level="INFO">Running command 'ozone sh key list /88315-without-scheme/bb1 | jq -r '.[] | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:11:37.421" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:11:37.421" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20220801 01:11:33.359" endtime="20220801 01:11:37.421"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:11:37.422" level="INFO">key1</msg>
<status status="PASS" starttime="20220801 01:11:37.421" endtime="20220801 01:11:37.422"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:11:37.423" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:11:37.422" endtime="20220801 01:11:37.423"/>
</kw>
<status status="PASS" starttime="20220801 01:11:33.359" endtime="20220801 01:11:37.423"/>
</kw>
<msg timestamp="20220801 01:11:37.423" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:11:33.359" endtime="20220801 01:11:37.424"/>
</kw>
<msg timestamp="20220801 01:11:37.424" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20220801 01:11:33.358" endtime="20220801 01:11:37.424"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220801 01:11:37.424" endtime="20220801 01:11:37.425"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:11:37.428" level="INFO">Running command 'ozone sh key rename /88315-without-scheme/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:11:41.244" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:11:41.244" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:11:37.426" endtime="20220801 01:11:41.244"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:11:41.245" level="INFO"/>
<status status="PASS" starttime="20220801 01:11:41.244" endtime="20220801 01:11:41.245"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:11:41.246" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:11:41.245" endtime="20220801 01:11:41.246"/>
</kw>
<status status="PASS" starttime="20220801 01:11:37.426" endtime="20220801 01:11:41.246"/>
</kw>
<msg timestamp="20220801 01:11:41.246" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:11:37.425" endtime="20220801 01:11:41.247"/>
</kw>
<status status="PASS" starttime="20220801 01:11:37.425" endtime="20220801 01:11:41.247"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:11:41.250" level="INFO">Running command 'ozone sh key list /88315-without-scheme/bb1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:11:45.128" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:11:45.128" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20220801 01:11:41.248" endtime="20220801 01:11:45.128"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:11:45.129" level="INFO">key2</msg>
<status status="PASS" starttime="20220801 01:11:45.128" endtime="20220801 01:11:45.129"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:11:45.130" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:11:45.129" endtime="20220801 01:11:45.130"/>
</kw>
<status status="PASS" starttime="20220801 01:11:41.248" endtime="20220801 01:11:45.130"/>
</kw>
<msg timestamp="20220801 01:11:45.130" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:11:41.248" endtime="20220801 01:11:45.131"/>
</kw>
<msg timestamp="20220801 01:11:45.131" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20220801 01:11:41.247" endtime="20220801 01:11:45.131"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220801 01:11:45.131" endtime="20220801 01:11:45.131"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:11:45.135" level="INFO">Running command 'ozone sh key delete /88315-without-scheme/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:11:48.692" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:11:48.693" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:11:45.133" endtime="20220801 01:11:48.693"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:11:48.694" level="INFO"/>
<status status="PASS" starttime="20220801 01:11:48.693" endtime="20220801 01:11:48.694"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:11:48.694" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:11:48.694" endtime="20220801 01:11:48.694"/>
</kw>
<status status="PASS" starttime="20220801 01:11:45.133" endtime="20220801 01:11:48.695"/>
</kw>
<msg timestamp="20220801 01:11:48.695" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:11:45.132" endtime="20220801 01:11:48.695"/>
</kw>
<status status="PASS" starttime="20220801 01:11:45.132" endtime="20220801 01:11:48.695"/>
</kw>
<status status="PASS" starttime="20220801 01:10:33.770" endtime="20220801 01:11:48.696"/>
</kw>
<status status="PASS" starttime="20220801 01:10:33.770" endtime="20220801 01:11:48.696"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:11:48.699" level="INFO">Running command 'ozone sh volume clrquota --space-quota /88315-without-scheme 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:11:52.250" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:11:52.250" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:11:48.697" endtime="20220801 01:11:52.250"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:11:52.251" level="INFO"/>
<status status="PASS" starttime="20220801 01:11:52.251" endtime="20220801 01:11:52.252"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:11:52.252" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:11:52.252" endtime="20220801 01:11:52.252"/>
</kw>
<status status="PASS" starttime="20220801 01:11:48.697" endtime="20220801 01:11:52.253"/>
</kw>
<msg timestamp="20220801 01:11:52.253" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:11:48.696" endtime="20220801 01:11:52.253"/>
</kw>
<status status="PASS" starttime="20220801 01:11:48.696" endtime="20220801 01:11:52.253"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:11:52.257" level="INFO">Running command 'ozone sh volume info /88315-without-scheme | jq -r '. | select(.name=="88315-without-scheme") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:11:56.015" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:11:56.015" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20220801 01:11:52.255" endtime="20220801 01:11:56.015"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:11:56.016" level="INFO">-1</msg>
<status status="PASS" starttime="20220801 01:11:56.016" endtime="20220801 01:11:56.016"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:11:56.017" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:11:56.017" endtime="20220801 01:11:56.017"/>
</kw>
<status status="PASS" starttime="20220801 01:11:52.254" endtime="20220801 01:11:56.017"/>
</kw>
<msg timestamp="20220801 01:11:56.017" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:11:52.254" endtime="20220801 01:11:56.018"/>
</kw>
<msg timestamp="20220801 01:11:56.018" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20220801 01:11:52.253" endtime="20220801 01:11:56.018"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220801 01:11:56.018" endtime="20220801 01:11:56.019"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:11:56.022" level="INFO">Running command 'ozone sh volume clrquota --namespace-quota /88315-without-scheme 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:11:59.767" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:11:59.767" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:11:56.020" endtime="20220801 01:11:59.767"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:11:59.768" level="INFO"/>
<status status="PASS" starttime="20220801 01:11:59.767" endtime="20220801 01:11:59.768"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:11:59.769" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:11:59.768" endtime="20220801 01:11:59.769"/>
</kw>
<status status="PASS" starttime="20220801 01:11:56.020" endtime="20220801 01:11:59.769"/>
</kw>
<msg timestamp="20220801 01:11:59.769" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:11:56.019" endtime="20220801 01:11:59.770"/>
</kw>
<status status="PASS" starttime="20220801 01:11:56.019" endtime="20220801 01:11:59.770"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:11:59.774" level="INFO">Running command 'ozone sh volume info /88315-without-scheme | jq -r '. | select(.name=="88315-without-scheme") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:12:03.554" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:12:03.554" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20220801 01:11:59.772" endtime="20220801 01:12:03.554"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:12:03.555" level="INFO">-1</msg>
<status status="PASS" starttime="20220801 01:12:03.554" endtime="20220801 01:12:03.555"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:12:03.556" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:12:03.555" endtime="20220801 01:12:03.556"/>
</kw>
<status status="PASS" starttime="20220801 01:11:59.771" endtime="20220801 01:12:03.556"/>
</kw>
<msg timestamp="20220801 01:12:03.556" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:11:59.771" endtime="20220801 01:12:03.557"/>
</kw>
<msg timestamp="20220801 01:12:03.557" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20220801 01:11:59.770" endtime="20220801 01:12:03.557"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220801 01:12:03.557" endtime="20220801 01:12:03.558"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:12:03.562" level="INFO">Running command 'ozone sh bucket clrquota --space-quota /88315-without-scheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:12:07.139" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:12:07.139" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:12:03.560" endtime="20220801 01:12:07.139"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:12:07.140" level="INFO"/>
<status status="PASS" starttime="20220801 01:12:07.140" endtime="20220801 01:12:07.140"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:12:07.141" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:12:07.141" endtime="20220801 01:12:07.141"/>
</kw>
<status status="PASS" starttime="20220801 01:12:03.559" endtime="20220801 01:12:07.141"/>
</kw>
<msg timestamp="20220801 01:12:07.142" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:12:03.558" endtime="20220801 01:12:07.142"/>
</kw>
<status status="PASS" starttime="20220801 01:12:03.558" endtime="20220801 01:12:07.142"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:12:07.146" level="INFO">Running command 'ozone sh bucket info /88315-without-scheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:12:11.140" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:12:11.140" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20220801 01:12:07.144" endtime="20220801 01:12:11.140"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:12:11.141" level="INFO">-1</msg>
<status status="PASS" starttime="20220801 01:12:11.140" endtime="20220801 01:12:11.141"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:12:11.142" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:12:11.141" endtime="20220801 01:12:11.142"/>
</kw>
<status status="PASS" starttime="20220801 01:12:07.143" endtime="20220801 01:12:11.142"/>
</kw>
<msg timestamp="20220801 01:12:11.142" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:12:07.143" endtime="20220801 01:12:11.142"/>
</kw>
<msg timestamp="20220801 01:12:11.143" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20220801 01:12:07.142" endtime="20220801 01:12:11.143"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220801 01:12:11.143" endtime="20220801 01:12:11.143"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:12:11.147" level="INFO">Running command 'ozone sh bucket clrquota --namespace-quota /88315-without-scheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:12:14.878" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:12:14.878" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:12:11.145" endtime="20220801 01:12:14.878"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:12:14.879" level="INFO"/>
<status status="PASS" starttime="20220801 01:12:14.878" endtime="20220801 01:12:14.879"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:12:14.880" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:12:14.879" endtime="20220801 01:12:14.880"/>
</kw>
<status status="PASS" starttime="20220801 01:12:11.144" endtime="20220801 01:12:14.880"/>
</kw>
<msg timestamp="20220801 01:12:14.880" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:12:11.144" endtime="20220801 01:12:14.881"/>
</kw>
<status status="PASS" starttime="20220801 01:12:11.143" endtime="20220801 01:12:14.881"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:12:14.884" level="INFO">Running command 'ozone sh bucket info /88315-without-scheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:12:18.741" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:12:18.741" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20220801 01:12:14.883" endtime="20220801 01:12:18.741"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:12:18.742" level="INFO">-1</msg>
<status status="PASS" starttime="20220801 01:12:18.741" endtime="20220801 01:12:18.742"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:12:18.743" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:12:18.742" endtime="20220801 01:12:18.743"/>
</kw>
<status status="PASS" starttime="20220801 01:12:14.882" endtime="20220801 01:12:18.743"/>
</kw>
<msg timestamp="20220801 01:12:18.743" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:12:14.882" endtime="20220801 01:12:18.743"/>
</kw>
<msg timestamp="20220801 01:12:18.744" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20220801 01:12:14.881" endtime="20220801 01:12:18.744"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220801 01:12:18.744" endtime="20220801 01:12:18.744"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:12:18.748" level="INFO">Running command 'ozone sh bucket delete /88315-without-scheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:12:22.535" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:12:22.535" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:12:18.746" endtime="20220801 01:12:22.535"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:12:22.536" level="INFO"/>
<status status="PASS" starttime="20220801 01:12:22.535" endtime="20220801 01:12:22.536"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:12:22.537" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:12:22.536" endtime="20220801 01:12:22.537"/>
</kw>
<status status="PASS" starttime="20220801 01:12:18.745" endtime="20220801 01:12:22.537"/>
</kw>
<msg timestamp="20220801 01:12:22.537" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:12:18.745" endtime="20220801 01:12:22.538"/>
</kw>
<status status="PASS" starttime="20220801 01:12:18.744" endtime="20220801 01:12:22.538"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:12:22.541" level="INFO">Running command 'ozone sh volume delete /88315-without-scheme 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:12:26.082" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:12:26.082" level="INFO">${output} = Volume 88315-without-scheme is deleted</msg>
<status status="PASS" starttime="20220801 01:12:22.539" endtime="20220801 01:12:26.082"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:12:26.083" level="INFO">Volume 88315-without-scheme is deleted</msg>
<status status="PASS" starttime="20220801 01:12:26.083" endtime="20220801 01:12:26.083"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:12:26.084" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:12:26.084" endtime="20220801 01:12:26.084"/>
</kw>
<status status="PASS" starttime="20220801 01:12:22.539" endtime="20220801 01:12:26.084"/>
</kw>
<msg timestamp="20220801 01:12:26.084" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:12:22.539" endtime="20220801 01:12:26.085"/>
</kw>
<status status="PASS" starttime="20220801 01:12:22.538" endtime="20220801 01:12:26.085"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:12:26.088" level="INFO">Running command 'ozone sh volume create /88315-without-scheme 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:12:29.746" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:12:29.746" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:12:26.087" endtime="20220801 01:12:29.746"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:12:29.747" level="INFO"/>
<status status="PASS" starttime="20220801 01:12:29.747" endtime="20220801 01:12:29.747"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:12:29.748" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:12:29.748" endtime="20220801 01:12:29.748"/>
</kw>
<status status="PASS" starttime="20220801 01:12:26.086" endtime="20220801 01:12:29.748"/>
</kw>
<msg timestamp="20220801 01:12:29.748" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:12:26.086" endtime="20220801 01:12:29.749"/>
</kw>
<status status="PASS" starttime="20220801 01:12:26.085" endtime="20220801 01:12:29.749"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:12:29.753" level="INFO">Running command 'ozone sh volume info /88315-without-scheme | jq -r '. | select(.name=="88315-without-scheme") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:12:33.504" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:12:33.504" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20220801 01:12:29.751" endtime="20220801 01:12:33.504"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:12:33.505" level="INFO">-1</msg>
<status status="PASS" starttime="20220801 01:12:33.504" endtime="20220801 01:12:33.505"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:12:33.506" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:12:33.505" endtime="20220801 01:12:33.506"/>
</kw>
<status status="PASS" starttime="20220801 01:12:29.750" endtime="20220801 01:12:33.506"/>
</kw>
<msg timestamp="20220801 01:12:33.506" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:12:29.750" endtime="20220801 01:12:33.507"/>
</kw>
<msg timestamp="20220801 01:12:33.507" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20220801 01:12:29.749" endtime="20220801 01:12:33.507"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220801 01:12:33.507" endtime="20220801 01:12:33.507"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:12:33.511" level="INFO">Running command 'ozone sh volume info /88315-without-scheme | jq -r '. | select(.name=="88315-without-scheme") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:12:37.544" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:12:37.544" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20220801 01:12:33.509" endtime="20220801 01:12:37.544"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:12:37.545" level="INFO">-1</msg>
<status status="PASS" starttime="20220801 01:12:37.545" endtime="20220801 01:12:37.545"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:12:37.546" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:12:37.546" endtime="20220801 01:12:37.546"/>
</kw>
<status status="PASS" starttime="20220801 01:12:33.509" endtime="20220801 01:12:37.546"/>
</kw>
<msg timestamp="20220801 01:12:37.546" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:12:33.508" endtime="20220801 01:12:37.547"/>
</kw>
<msg timestamp="20220801 01:12:37.547" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20220801 01:12:33.508" endtime="20220801 01:12:37.547"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220801 01:12:37.547" endtime="20220801 01:12:37.548"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:12:37.551" level="INFO">Running command 'ozone sh bucket create /88315-without-scheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:12:41.255" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:12:41.255" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:12:37.549" endtime="20220801 01:12:41.255"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:12:41.256" level="INFO"/>
<status status="PASS" starttime="20220801 01:12:41.255" endtime="20220801 01:12:41.256"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:12:41.257" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:12:41.256" endtime="20220801 01:12:41.257"/>
</kw>
<status status="PASS" starttime="20220801 01:12:37.549" endtime="20220801 01:12:41.257"/>
</kw>
<msg timestamp="20220801 01:12:41.257" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:12:37.548" endtime="20220801 01:12:41.257"/>
</kw>
<status status="PASS" starttime="20220801 01:12:37.548" endtime="20220801 01:12:41.258"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:12:41.261" level="INFO">Running command 'ozone sh bucket info /88315-without-scheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:12:44.981" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:12:44.981" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20220801 01:12:41.259" endtime="20220801 01:12:44.981"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:12:44.982" level="INFO">-1</msg>
<status status="PASS" starttime="20220801 01:12:44.981" endtime="20220801 01:12:44.982"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:12:44.982" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:12:44.982" endtime="20220801 01:12:44.983"/>
</kw>
<status status="PASS" starttime="20220801 01:12:41.259" endtime="20220801 01:12:44.983"/>
</kw>
<msg timestamp="20220801 01:12:44.983" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:12:41.259" endtime="20220801 01:12:44.983"/>
</kw>
<msg timestamp="20220801 01:12:44.984" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20220801 01:12:41.258" endtime="20220801 01:12:44.984"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220801 01:12:44.984" endtime="20220801 01:12:44.984"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:12:44.988" level="INFO">Running command 'ozone sh bucket info /88315-without-scheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:12:48.797" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:12:48.797" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20220801 01:12:44.986" endtime="20220801 01:12:48.797"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:12:48.798" level="INFO">-1</msg>
<status status="PASS" starttime="20220801 01:12:48.798" endtime="20220801 01:12:48.799"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:12:48.799" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:12:48.799" endtime="20220801 01:12:48.799"/>
</kw>
<status status="PASS" starttime="20220801 01:12:44.985" endtime="20220801 01:12:48.799"/>
</kw>
<msg timestamp="20220801 01:12:48.800" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:12:44.985" endtime="20220801 01:12:48.800"/>
</kw>
<msg timestamp="20220801 01:12:48.800" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20220801 01:12:44.984" endtime="20220801 01:12:48.800"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220801 01:12:48.800" endtime="20220801 01:12:48.801"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:12:48.804" level="INFO">Running command 'ozone sh bucket delete /88315-without-scheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:12:52.347" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:12:52.347" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:12:48.802" endtime="20220801 01:12:52.347"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:12:52.348" level="INFO"/>
<status status="PASS" starttime="20220801 01:12:52.348" endtime="20220801 01:12:52.348"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:12:52.349" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:12:52.348" endtime="20220801 01:12:52.349"/>
</kw>
<status status="PASS" starttime="20220801 01:12:48.802" endtime="20220801 01:12:52.349"/>
</kw>
<msg timestamp="20220801 01:12:52.349" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:12:48.802" endtime="20220801 01:12:52.350"/>
</kw>
<status status="PASS" starttime="20220801 01:12:48.801" endtime="20220801 01:12:52.350"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:12:52.354" level="INFO">Running command 'ozone sh volume delete /88315-without-scheme 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:12:56.038" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:12:56.038" level="INFO">${output} = Volume 88315-without-scheme is deleted</msg>
<status status="PASS" starttime="20220801 01:12:52.352" endtime="20220801 01:12:56.038"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:12:56.039" level="INFO">Volume 88315-without-scheme is deleted</msg>
<status status="PASS" starttime="20220801 01:12:56.038" endtime="20220801 01:12:56.039"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:12:56.040" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:12:56.039" endtime="20220801 01:12:56.040"/>
</kw>
<status status="PASS" starttime="20220801 01:12:52.351" endtime="20220801 01:12:56.040"/>
</kw>
<msg timestamp="20220801 01:12:56.040" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:12:52.351" endtime="20220801 01:12:56.041"/>
</kw>
<status status="PASS" starttime="20220801 01:12:52.350" endtime="20220801 01:12:56.058"/>
</kw>
<status status="PASS" starttime="20220801 01:09:40.336" endtime="20220801 01:12:56.058"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220801 01:09:40.335" endtime="20220801 01:12:56.058"/>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="PASS" starttime="20220801 01:09:40.311" endtime="20220801 01:12:56.061"/>
</suite>
<suite id="s1-s1-s5" name="Ozone-Shell" source="/opt/hadoop/smoketest/basic/ozone-shell.robot">
<kw name="Generate prefix" library="ozone-shell-lib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220801 01:12:56.069" level="INFO">${random} = 54743</msg>
<status status="PASS" starttime="20220801 01:12:56.069" endtime="20220801 01:12:56.069"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220801 01:12:56.070" level="INFO">${prefix} = 54743</msg>
<status status="PASS" starttime="20220801 01:12:56.070" endtime="20220801 01:12:56.070"/>
</kw>
<status status="PASS" starttime="20220801 01:12:56.069" endtime="20220801 01:12:56.070"/>
</kw>
<test id="s1-s1-s5-t1" name="RpcClient with port" line="26">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:12:56.075" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:12:56.078" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:12:56.078" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220801 01:12:56.073" endtime="20220801 01:12:56.079"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:12:56.079" level="INFO">scm</msg>
<status status="PASS" starttime="20220801 01:12:56.079" endtime="20220801 01:12:56.080"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:12:56.080" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:12:56.080" endtime="20220801 01:12:56.080"/>
</kw>
<status status="PASS" starttime="20220801 01:12:56.073" endtime="20220801 01:12:56.080"/>
</kw>
<msg timestamp="20220801 01:12:56.080" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:12:56.072" endtime="20220801 01:12:56.081"/>
</kw>
<msg timestamp="20220801 01:12:56.081" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220801 01:12:56.072" endtime="20220801 01:12:56.081"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220801 01:12:56.083" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220801 01:12:56.081" endtime="20220801 01:12:56.083"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:12:56.086" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:12:56.093" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:12:56.093" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:12:56.084" endtime="20220801 01:12:56.093"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:12:56.094" level="INFO"/>
<status status="PASS" starttime="20220801 01:12:56.093" endtime="20220801 01:12:56.094"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:12:56.095" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:12:56.094" endtime="20220801 01:12:56.095"/>
</kw>
<status status="PASS" starttime="20220801 01:12:56.084" endtime="20220801 01:12:56.095"/>
</kw>
<msg timestamp="20220801 01:12:56.095" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:12:56.084" endtime="20220801 01:12:56.096"/>
</kw>
<status status="PASS" starttime="20220801 01:12:56.083" endtime="20220801 01:12:56.096"/>
</kw>
<status status="PASS" starttime="20220801 01:12:56.083" endtime="20220801 01:12:56.096"/>
</kw>
<status status="PASS" starttime="20220801 01:12:56.071" endtime="20220801 01:12:56.096"/>
</kw>
<status status="PASS" starttime="20220801 01:12:56.071" endtime="20220801 01:12:56.096"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-with-host</arg>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:12:56.099" level="INFO">Running command 'ozone sh volume info o3://om:9862/54743-with-host 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:12:59.841" level="INFO">${rc} = 255</msg>
<msg timestamp="20220801 01:12:59.841" level="INFO">${output} = VOLUME_NOT_FOUND Volume 54743-with-host is not found</msg>
<status status="PASS" starttime="20220801 01:12:56.097" endtime="20220801 01:12:59.841"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:12:59.842" level="INFO">VOLUME_NOT_FOUND Volume 54743-with-host is not found</msg>
<status status="PASS" starttime="20220801 01:12:59.842" endtime="20220801 01:12:59.842"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:12:59.843" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:12:59.842" endtime="20220801 01:12:59.843"/>
</kw>
<msg timestamp="20220801 01:12:59.843" level="INFO">${result} = VOLUME_NOT_FOUND Volume 54743-with-host is not found</msg>
<status status="PASS" starttime="20220801 01:12:56.097" endtime="20220801 01:12:59.843"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220801 01:12:59.843" endtime="20220801 01:12:59.844"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:12:59.847" level="INFO">Running command 'ozone sh volume create o3://om:9862/54743-with-host --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:13:03.350" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:13:03.350" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:12:59.845" endtime="20220801 01:13:03.350"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:13:03.351" level="INFO"/>
<status status="PASS" starttime="20220801 01:13:03.351" endtime="20220801 01:13:03.352"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:13:03.353" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:13:03.352" endtime="20220801 01:13:03.353"/>
</kw>
<status status="PASS" starttime="20220801 01:12:59.845" endtime="20220801 01:13:03.354"/>
</kw>
<msg timestamp="20220801 01:13:03.354" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:12:59.845" endtime="20220801 01:13:03.354"/>
</kw>
<msg timestamp="20220801 01:13:03.354" level="INFO">${result} = </msg>
<status status="PASS" starttime="20220801 01:12:59.844" endtime="20220801 01:13:03.354"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220801 01:13:03.355" endtime="20220801 01:13:03.355"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:13:03.358" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '.[] | select(.name=="54743-with-host")' 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:13:07.279" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:13:07.279" level="INFO">${output} = {
  "metadata": {},
  "name": "54743-with-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20220801 01:13:03.356" endtime="20220801 01:13:07.279"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:13:07.280" level="INFO">{
  "metadata": {},
  "name": "54743-with-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2022-08-01T01:13:03.252Z",
  "modificationTime": "2022-08-01T01:13:03.252Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "refCount": 0
}</msg>
<status status="PASS" starttime="20220801 01:13:07.279" endtime="20220801 01:13:07.280"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:13:07.280" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:13:07.280" endtime="20220801 01:13:07.281"/>
</kw>
<status status="PASS" starttime="20220801 01:13:03.356" endtime="20220801 01:13:07.281"/>
</kw>
<msg timestamp="20220801 01:13:07.281" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:13:03.356" endtime="20220801 01:13:07.281"/>
</kw>
<msg timestamp="20220801 01:13:07.282" level="INFO">${result} = {
  "metadata": {},
  "name": "54743-with-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20220801 01:13:03.355" endtime="20220801 01:13:07.282"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220801 01:13:07.282" endtime="20220801 01:13:07.282"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:13:07.286" level="INFO">Running command 'ozone sh volume list | jq -r '.[] | select(.name=="54743-with-host")' 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:13:11.173" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:13:11.173" level="INFO">${output} = {
  "metadata": {},
  "name": "54743-with-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20220801 01:13:07.284" endtime="20220801 01:13:11.173"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:13:11.174" level="INFO">{
  "metadata": {},
  "name": "54743-with-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2022-08-01T01:13:03.252Z",
  "modificationTime": "2022-08-01T01:13:03.252Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "refCount": 0
}</msg>
<status status="PASS" starttime="20220801 01:13:11.174" endtime="20220801 01:13:11.174"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:13:11.175" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:13:11.175" endtime="20220801 01:13:11.175"/>
</kw>
<status status="PASS" starttime="20220801 01:13:07.283" endtime="20220801 01:13:11.175"/>
</kw>
<msg timestamp="20220801 01:13:11.175" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:13:07.283" endtime="20220801 01:13:11.176"/>
</kw>
<msg timestamp="20220801 01:13:11.176" level="INFO">${result} = {
  "metadata": {},
  "name": "54743-with-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20220801 01:13:07.282" endtime="20220801 01:13:11.176"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220801 01:13:11.176" endtime="20220801 01:13:11.177"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:13:11.180" level="INFO">Running command 'ozone sh volume setquota o3://om:9862/54743-with-host --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:13:14.789" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:13:14.789" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:13:11.178" endtime="20220801 01:13:14.789"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:13:14.790" level="INFO"/>
<status status="PASS" starttime="20220801 01:13:14.789" endtime="20220801 01:13:14.790"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:13:14.790" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:13:14.790" endtime="20220801 01:13:14.791"/>
</kw>
<status status="PASS" starttime="20220801 01:13:11.178" endtime="20220801 01:13:14.791"/>
</kw>
<msg timestamp="20220801 01:13:14.791" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:13:11.177" endtime="20220801 01:13:14.791"/>
</kw>
<status status="PASS" starttime="20220801 01:13:11.177" endtime="20220801 01:13:14.792"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:13:14.796" level="INFO">Running command 'ozone sh volume info o3://om:9862/54743-with-host | jq -r '. | select(.name=="54743-with-host") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:13:18.613" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:13:18.614" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20220801 01:13:14.793" endtime="20220801 01:13:18.614"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:13:18.615" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20220801 01:13:18.614" endtime="20220801 01:13:18.615"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:13:18.615" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:13:18.615" endtime="20220801 01:13:18.615"/>
</kw>
<status status="PASS" starttime="20220801 01:13:14.793" endtime="20220801 01:13:18.616"/>
</kw>
<msg timestamp="20220801 01:13:18.616" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:13:14.793" endtime="20220801 01:13:18.616"/>
</kw>
<msg timestamp="20220801 01:13:18.616" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20220801 01:13:14.792" endtime="20220801 01:13:18.617"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220801 01:13:18.617" endtime="20220801 01:13:18.617"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:13:18.621" level="INFO">Running command 'ozone sh bucket create o3://om:9862/54743-with-host/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:13:22.255" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:13:22.255" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:13:18.619" endtime="20220801 01:13:22.255"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:13:22.256" level="INFO"/>
<status status="PASS" starttime="20220801 01:13:22.256" endtime="20220801 01:13:22.256"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:13:22.257" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:13:22.257" endtime="20220801 01:13:22.257"/>
</kw>
<status status="PASS" starttime="20220801 01:13:18.619" endtime="20220801 01:13:22.257"/>
</kw>
<msg timestamp="20220801 01:13:22.257" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:13:18.618" endtime="20220801 01:13:22.258"/>
</kw>
<status status="PASS" starttime="20220801 01:13:18.617" endtime="20220801 01:13:22.258"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:13:22.262" level="INFO">Running command 'ozone sh bucket info o3://om:9862/54743-with-host/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:13:26.159" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:13:26.159" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20220801 01:13:22.260" endtime="20220801 01:13:26.159"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:13:26.160" level="INFO">DISK</msg>
<status status="PASS" starttime="20220801 01:13:26.160" endtime="20220801 01:13:26.161"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:13:26.161" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:13:26.161" endtime="20220801 01:13:26.161"/>
</kw>
<status status="PASS" starttime="20220801 01:13:22.259" endtime="20220801 01:13:26.161"/>
</kw>
<msg timestamp="20220801 01:13:26.162" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:13:22.259" endtime="20220801 01:13:26.162"/>
</kw>
<msg timestamp="20220801 01:13:26.162" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20220801 01:13:22.258" endtime="20220801 01:13:26.162"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220801 01:13:26.162" endtime="20220801 01:13:26.163"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:13:26.166" level="INFO">Running command 'ozone sh bucket info o3://om:9862/54743-with-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:13:29.938" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:13:29.938" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20220801 01:13:26.164" endtime="20220801 01:13:29.938"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:13:29.939" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20220801 01:13:29.938" endtime="20220801 01:13:29.939"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:13:29.940" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:13:29.939" endtime="20220801 01:13:29.940"/>
</kw>
<status status="PASS" starttime="20220801 01:13:26.164" endtime="20220801 01:13:29.940"/>
</kw>
<msg timestamp="20220801 01:13:29.940" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:13:26.164" endtime="20220801 01:13:29.941"/>
</kw>
<msg timestamp="20220801 01:13:29.941" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20220801 01:13:26.163" endtime="20220801 01:13:29.941"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220801 01:13:29.941" endtime="20220801 01:13:29.941"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:13:29.945" level="INFO">Running command 'ozone sh bucket info o3://om:9862/54743-with-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:13:33.729" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:13:33.729" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20220801 01:13:29.943" endtime="20220801 01:13:33.729"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:13:33.730" level="INFO">100</msg>
<status status="PASS" starttime="20220801 01:13:33.729" endtime="20220801 01:13:33.730"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:13:33.731" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:13:33.730" endtime="20220801 01:13:33.731"/>
</kw>
<status status="PASS" starttime="20220801 01:13:29.943" endtime="20220801 01:13:33.731"/>
</kw>
<msg timestamp="20220801 01:13:33.731" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:13:29.942" endtime="20220801 01:13:33.732"/>
</kw>
<msg timestamp="20220801 01:13:33.732" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20220801 01:13:29.942" endtime="20220801 01:13:33.732"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220801 01:13:33.732" endtime="20220801 01:13:33.733"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:13:33.736" level="INFO">Running command 'ozone sh bucket setquota o3://om:9862/54743-with-host/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:13:37.600" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:13:37.600" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:13:33.734" endtime="20220801 01:13:37.600"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:13:37.601" level="INFO"/>
<status status="PASS" starttime="20220801 01:13:37.600" endtime="20220801 01:13:37.601"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:13:37.602" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:13:37.601" endtime="20220801 01:13:37.602"/>
</kw>
<status status="PASS" starttime="20220801 01:13:33.734" endtime="20220801 01:13:37.602"/>
</kw>
<msg timestamp="20220801 01:13:37.602" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:13:33.733" endtime="20220801 01:13:37.603"/>
</kw>
<status status="PASS" starttime="20220801 01:13:33.733" endtime="20220801 01:13:37.603"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:13:37.607" level="INFO">Running command 'ozone sh bucket info o3://om:9862/54743-with-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:13:41.389" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:13:41.389" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20220801 01:13:37.605" endtime="20220801 01:13:41.389"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:13:41.390" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20220801 01:13:41.390" endtime="20220801 01:13:41.391"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:13:41.391" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:13:41.391" endtime="20220801 01:13:41.391"/>
</kw>
<status status="PASS" starttime="20220801 01:13:37.604" endtime="20220801 01:13:41.392"/>
</kw>
<msg timestamp="20220801 01:13:41.392" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:13:37.604" endtime="20220801 01:13:41.392"/>
</kw>
<msg timestamp="20220801 01:13:41.392" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20220801 01:13:37.603" endtime="20220801 01:13:41.392"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220801 01:13:41.393" endtime="20220801 01:13:41.393"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:13:41.397" level="INFO">Running command 'ozone sh bucket info o3://om:9862/54743-with-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:13:45.325" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:13:45.325" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20220801 01:13:41.395" endtime="20220801 01:13:45.325"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:13:45.326" level="INFO">1000</msg>
<status status="PASS" starttime="20220801 01:13:45.326" endtime="20220801 01:13:45.326"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:13:45.327" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:13:45.327" endtime="20220801 01:13:45.327"/>
</kw>
<status status="PASS" starttime="20220801 01:13:41.394" endtime="20220801 01:13:45.327"/>
</kw>
<msg timestamp="20220801 01:13:45.327" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:13:41.394" endtime="20220801 01:13:45.328"/>
</kw>
<msg timestamp="20220801 01:13:45.328" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20220801 01:13:41.393" endtime="20220801 01:13:45.328"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220801 01:13:45.328" endtime="20220801 01:13:45.329"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '.[] | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:13:45.332" level="INFO">Running command 'ozone sh bucket list o3://om:9862/54743-with-host/ | jq -r '.[] | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:13:49.263" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:13:49.264" level="INFO">${output} = 54743-with-host</msg>
<status status="PASS" starttime="20220801 01:13:45.330" endtime="20220801 01:13:49.264"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:13:49.265" level="INFO">54743-with-host</msg>
<status status="PASS" starttime="20220801 01:13:49.264" endtime="20220801 01:13:49.265"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:13:49.266" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:13:49.265" endtime="20220801 01:13:49.266"/>
</kw>
<status status="PASS" starttime="20220801 01:13:45.330" endtime="20220801 01:13:49.266"/>
</kw>
<msg timestamp="20220801 01:13:49.266" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:13:45.330" endtime="20220801 01:13:49.267"/>
</kw>
<msg timestamp="20220801 01:13:49.267" level="INFO">${result} = 54743-with-host</msg>
<status status="PASS" starttime="20220801 01:13:45.329" endtime="20220801 01:13:49.267"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220801 01:13:49.267" endtime="20220801 01:13:49.267"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:13:49.273" level="INFO">Running command 'ozone sh key put o3://om:9862/54743-with-host/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:13:54.801" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:13:54.801" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:13:49.271" endtime="20220801 01:13:54.801"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:13:54.802" level="INFO"/>
<status status="PASS" starttime="20220801 01:13:54.802" endtime="20220801 01:13:54.802"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:13:54.803" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:13:54.803" endtime="20220801 01:13:54.803"/>
</kw>
<status status="PASS" starttime="20220801 01:13:49.270" endtime="20220801 01:13:54.803"/>
</kw>
<msg timestamp="20220801 01:13:54.804" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:13:49.270" endtime="20220801 01:13:54.804"/>
</kw>
<status status="PASS" starttime="20220801 01:13:49.270" endtime="20220801 01:13:54.804"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:13:54.808" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:13:54.810" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:13:54.810" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:13:54.806" endtime="20220801 01:13:54.810"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:13:54.811" level="INFO"/>
<status status="PASS" starttime="20220801 01:13:54.811" endtime="20220801 01:13:54.811"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:13:54.812" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:13:54.811" endtime="20220801 01:13:54.812"/>
</kw>
<status status="PASS" starttime="20220801 01:13:54.805" endtime="20220801 01:13:54.812"/>
</kw>
<msg timestamp="20220801 01:13:54.812" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:13:54.805" endtime="20220801 01:13:54.813"/>
</kw>
<status status="PASS" starttime="20220801 01:13:54.804" endtime="20220801 01:13:54.813"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:13:54.816" level="INFO">Running command 'ozone sh key get o3://om:9862/54743-with-host/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:14:00.220" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:14:00.220" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:13:54.814" endtime="20220801 01:14:00.221"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:14:00.222" level="INFO"/>
<status status="PASS" starttime="20220801 01:14:00.221" endtime="20220801 01:14:00.222"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:14:00.222" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:14:00.222" endtime="20220801 01:14:00.222"/>
</kw>
<status status="PASS" starttime="20220801 01:13:54.814" endtime="20220801 01:14:00.223"/>
</kw>
<msg timestamp="20220801 01:14:00.223" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:13:54.814" endtime="20220801 01:14:00.223"/>
</kw>
<status status="PASS" starttime="20220801 01:13:54.813" endtime="20220801 01:14:00.223"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:14:00.227" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:14:00.229" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:14:00.229" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:14:00.225" endtime="20220801 01:14:00.229"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:14:00.230" level="INFO"/>
<status status="PASS" starttime="20220801 01:14:00.230" endtime="20220801 01:14:00.230"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:14:00.231" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:14:00.230" endtime="20220801 01:14:00.231"/>
</kw>
<status status="PASS" starttime="20220801 01:14:00.224" endtime="20220801 01:14:00.231"/>
</kw>
<msg timestamp="20220801 01:14:00.231" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:14:00.224" endtime="20220801 01:14:00.232"/>
</kw>
<status status="PASS" starttime="20220801 01:14:00.224" endtime="20220801 01:14:00.232"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:14:00.235" level="INFO">Running command 'ozone sh key put -t RATIS o3://om:9862/54743-with-host/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:14:06.266" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:14:06.266" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:14:00.234" endtime="20220801 01:14:06.266"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:14:06.268" level="INFO"/>
<status status="PASS" starttime="20220801 01:14:06.267" endtime="20220801 01:14:06.268"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:14:06.268" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:14:06.268" endtime="20220801 01:14:06.268"/>
</kw>
<status status="PASS" starttime="20220801 01:14:00.233" endtime="20220801 01:14:06.269"/>
</kw>
<msg timestamp="20220801 01:14:06.269" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:14:00.233" endtime="20220801 01:14:06.269"/>
</kw>
<status status="PASS" starttime="20220801 01:14:00.232" endtime="20220801 01:14:06.269"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:14:06.273" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:14:06.276" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:14:06.276" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:14:06.271" endtime="20220801 01:14:06.276"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:14:06.277" level="INFO"/>
<status status="PASS" starttime="20220801 01:14:06.276" endtime="20220801 01:14:06.277"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:14:06.277" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:14:06.277" endtime="20220801 01:14:06.277"/>
</kw>
<status status="PASS" starttime="20220801 01:14:06.270" endtime="20220801 01:14:06.278"/>
</kw>
<msg timestamp="20220801 01:14:06.278" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:14:06.270" endtime="20220801 01:14:06.278"/>
</kw>
<status status="PASS" starttime="20220801 01:14:06.270" endtime="20220801 01:14:06.278"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:14:06.282" level="INFO">Running command 'ozone sh key get o3://om:9862/54743-with-host/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:14:11.909" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:14:11.909" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:14:06.280" endtime="20220801 01:14:11.909"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:14:11.910" level="INFO"/>
<status status="PASS" starttime="20220801 01:14:11.909" endtime="20220801 01:14:11.910"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:14:11.911" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:14:11.910" endtime="20220801 01:14:11.911"/>
</kw>
<status status="PASS" starttime="20220801 01:14:06.279" endtime="20220801 01:14:11.911"/>
</kw>
<msg timestamp="20220801 01:14:11.911" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:14:06.279" endtime="20220801 01:14:11.912"/>
</kw>
<status status="PASS" starttime="20220801 01:14:06.278" endtime="20220801 01:14:11.912"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:14:11.915" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:14:11.918" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:14:11.918" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:14:11.913" endtime="20220801 01:14:11.918"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:14:11.919" level="INFO"/>
<status status="PASS" starttime="20220801 01:14:11.918" endtime="20220801 01:14:11.919"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:14:11.919" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:14:11.919" endtime="20220801 01:14:11.919"/>
</kw>
<status status="PASS" starttime="20220801 01:14:11.913" endtime="20220801 01:14:11.920"/>
</kw>
<msg timestamp="20220801 01:14:11.920" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:14:11.913" endtime="20220801 01:14:11.921"/>
</kw>
<status status="PASS" starttime="20220801 01:14:11.912" endtime="20220801 01:14:11.921"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:14:11.924" level="INFO">Running command 'ozone sh key info o3://om:9862/54743-with-host/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:14:16.033" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:14:16.033" level="INFO">${output} = {
  "volumeName": "54743-with-host",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17526,
  "creationTime": "2022-08-01T01:14:03.878Z",
  "modificationTime": "2022-08-01T01:14:05.695Z",...</msg>
<status status="PASS" starttime="20220801 01:14:11.922" endtime="20220801 01:14:16.033"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:14:16.034" level="INFO">{
  "volumeName": "54743-with-host",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17526,
  "creationTime": "2022-08-01T01:14:03.878Z",
  "modificationTime": "2022-08-01T01:14:05.695Z",
  "replicationConfig": {
    "replicationFactor": "THREE",
    "requiredNodes": 3,
    "replicationType": "RATIS"
  },
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 109611004723200020,
      "length": 17526,
      "offset": 0,
      "keyOffset": 0
    }
  ],
  "metadata": {}
}</msg>
<status status="PASS" starttime="20220801 01:14:16.033" endtime="20220801 01:14:16.034"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:14:16.035" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:14:16.034" endtime="20220801 01:14:16.035"/>
</kw>
<status status="PASS" starttime="20220801 01:14:11.922" endtime="20220801 01:14:16.035"/>
</kw>
<msg timestamp="20220801 01:14:16.035" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:14:11.922" endtime="20220801 01:14:16.036"/>
</kw>
<msg timestamp="20220801 01:14:16.036" level="INFO">${result} = {
  "volumeName": "54743-with-host",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17526,
  "creationTime": "2022-08-01T01:14:03.878Z",
  "modificationTime": "2022-08-01T01:14:05.695Z",...</msg>
<status status="PASS" starttime="20220801 01:14:11.921" endtime="20220801 01:14:16.036"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220801 01:14:16.036" endtime="20220801 01:14:16.036"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:14:16.041" level="INFO">Running command 'ozone sh key delete o3://om:9862/54743-with-host/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:14:19.636" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:14:19.636" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:14:16.039" endtime="20220801 01:14:19.636"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:14:19.637" level="INFO"/>
<status status="PASS" starttime="20220801 01:14:19.636" endtime="20220801 01:14:19.637"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:14:19.638" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:14:19.637" endtime="20220801 01:14:19.638"/>
</kw>
<status status="PASS" starttime="20220801 01:14:16.038" endtime="20220801 01:14:19.638"/>
</kw>
<msg timestamp="20220801 01:14:19.638" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:14:16.037" endtime="20220801 01:14:19.639"/>
</kw>
<status status="PASS" starttime="20220801 01:14:16.036" endtime="20220801 01:14:19.639"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:14:19.643" level="INFO">Running command 'ozone sh key cp o3://om:9862/54743-with-host/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:14:25.627" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:14:25.627" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:14:19.641" endtime="20220801 01:14:25.627"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:14:25.629" level="INFO"/>
<status status="PASS" starttime="20220801 01:14:25.628" endtime="20220801 01:14:25.629"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:14:25.629" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:14:25.629" endtime="20220801 01:14:25.629"/>
</kw>
<status status="PASS" starttime="20220801 01:14:19.640" endtime="20220801 01:14:25.630"/>
</kw>
<msg timestamp="20220801 01:14:25.630" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:14:19.640" endtime="20220801 01:14:25.630"/>
</kw>
<status status="PASS" starttime="20220801 01:14:19.639" endtime="20220801 01:14:25.631"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:14:25.634" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:14:25.636" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:14:25.637" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:14:25.632" endtime="20220801 01:14:25.637"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:14:25.637" level="INFO"/>
<status status="PASS" starttime="20220801 01:14:25.637" endtime="20220801 01:14:25.638"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:14:25.638" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:14:25.638" endtime="20220801 01:14:25.638"/>
</kw>
<status status="PASS" starttime="20220801 01:14:25.632" endtime="20220801 01:14:25.638"/>
</kw>
<msg timestamp="20220801 01:14:25.639" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:14:25.631" endtime="20220801 01:14:25.639"/>
</kw>
<status status="PASS" starttime="20220801 01:14:25.631" endtime="20220801 01:14:25.640"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:14:25.644" level="INFO">Running command 'ozone sh key get o3://om:9862/54743-with-host/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:14:31.153" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:14:31.153" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:14:25.642" endtime="20220801 01:14:31.153"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:14:31.154" level="INFO"/>
<status status="PASS" starttime="20220801 01:14:31.154" endtime="20220801 01:14:31.154"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:14:31.155" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:14:31.155" endtime="20220801 01:14:31.155"/>
</kw>
<status status="PASS" starttime="20220801 01:14:25.641" endtime="20220801 01:14:31.155"/>
</kw>
<msg timestamp="20220801 01:14:31.155" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:14:25.641" endtime="20220801 01:14:31.156"/>
</kw>
<status status="PASS" starttime="20220801 01:14:25.640" endtime="20220801 01:14:31.156"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:14:31.160" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:14:31.162" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:14:31.162" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:14:31.157" endtime="20220801 01:14:31.162"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:14:31.163" level="INFO"/>
<status status="PASS" starttime="20220801 01:14:31.163" endtime="20220801 01:14:31.163"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:14:31.164" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:14:31.163" endtime="20220801 01:14:31.164"/>
</kw>
<status status="PASS" starttime="20220801 01:14:31.157" endtime="20220801 01:14:31.164"/>
</kw>
<msg timestamp="20220801 01:14:31.164" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:14:31.157" endtime="20220801 01:14:31.165"/>
</kw>
<status status="PASS" starttime="20220801 01:14:31.156" endtime="20220801 01:14:31.165"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:14:31.168" level="INFO">Running command 'ozone sh key delete o3://om:9862/54743-with-host/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:14:34.699" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:14:34.699" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:14:31.167" endtime="20220801 01:14:34.699"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:14:34.701" level="INFO"/>
<status status="PASS" starttime="20220801 01:14:34.700" endtime="20220801 01:14:34.701"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:14:34.702" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:14:34.702" endtime="20220801 01:14:34.702"/>
</kw>
<status status="PASS" starttime="20220801 01:14:31.166" endtime="20220801 01:14:34.702"/>
</kw>
<msg timestamp="20220801 01:14:34.703" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:14:31.166" endtime="20220801 01:14:34.703"/>
</kw>
<status status="PASS" starttime="20220801 01:14:31.165" endtime="20220801 01:14:34.703"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:14:34.706" level="INFO">Running command 'ozone sh key get o3://om:9862/54743-with-host/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:14:38.324" level="INFO">${rc} = 255</msg>
<msg timestamp="20220801 01:14:38.324" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20220801 01:14:34.704" endtime="20220801 01:14:38.324"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:14:38.325" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20220801 01:14:38.324" endtime="20220801 01:14:38.325"/>
</kw>
<msg timestamp="20220801 01:14:38.325" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20220801 01:14:34.703" endtime="20220801 01:14:38.325"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220801 01:14:38.326" endtime="20220801 01:14:38.326"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:14:38.329" level="INFO">Running command 'ozone sh key get --force o3://om:9862/54743-with-host/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:14:44.018" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:14:44.018" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:14:38.328" endtime="20220801 01:14:44.018"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:14:44.019" level="INFO"/>
<status status="PASS" starttime="20220801 01:14:44.018" endtime="20220801 01:14:44.019"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:14:44.019" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:14:44.019" endtime="20220801 01:14:44.020"/>
</kw>
<status status="PASS" starttime="20220801 01:14:38.327" endtime="20220801 01:14:44.020"/>
</kw>
<msg timestamp="20220801 01:14:44.020" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:14:38.327" endtime="20220801 01:14:44.021"/>
</kw>
<msg timestamp="20220801 01:14:44.021" level="INFO">${result} = </msg>
<status status="PASS" starttime="20220801 01:14:38.326" endtime="20220801 01:14:44.021"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220801 01:14:44.021" endtime="20220801 01:14:44.021"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:14:44.025" level="INFO">Running command 'ozone sh key info o3://om:9862/54743-with-host/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:14:48.055" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:14:48.055" level="INFO">${output} = {
  "volumeName": "54743-with-host",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17526,
  "creationTime": "2022-08-01T01:13:52.762Z",
  "modificationTime": "2022-08-01T01:13:54.336Z",
  "re...</msg>
<status status="PASS" starttime="20220801 01:14:44.023" endtime="20220801 01:14:48.055"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:14:48.056" level="INFO">{
  "volumeName": "54743-with-host",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17526,
  "creationTime": "2022-08-01T01:13:52.762Z",
  "modificationTime": "2022-08-01T01:13:54.336Z",
  "replicationConfig": {
    "replicationFactor": "ONE",
    "requiredNodes": 1,
    "replicationType": "RATIS"
  },
  "ozoneKeyLocations": [
    {
      "containerID": 3,
      "localID": 109611004723200020,
      "length": 17526,
      "offset": 0,
      "keyOffset": 0
    }
  ],
  "metadata": {}
}</msg>
<status status="PASS" starttime="20220801 01:14:48.055" endtime="20220801 01:14:48.056"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:14:48.057" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:14:48.057" endtime="20220801 01:14:48.057"/>
</kw>
<status status="PASS" starttime="20220801 01:14:44.023" endtime="20220801 01:14:48.057"/>
</kw>
<msg timestamp="20220801 01:14:48.057" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:14:44.022" endtime="20220801 01:14:48.058"/>
</kw>
<msg timestamp="20220801 01:14:48.058" level="INFO">${result} = {
  "volumeName": "54743-with-host",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17526,
  "creationTime": "2022-08-01T01:13:52.762Z",
  "modificationTime": "2022-08-01T01:13:54.336Z",
  "re...</msg>
<status status="PASS" starttime="20220801 01:14:44.021" endtime="20220801 01:14:48.058"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220801 01:14:48.058" endtime="20220801 01:14:48.059"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[] | select(.name=="key1") | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:14:48.062" level="INFO">Running command 'ozone sh key list o3://om:9862/54743-with-host/bb1 | jq -r '.[] | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:14:51.754" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:14:51.754" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20220801 01:14:48.061" endtime="20220801 01:14:51.754"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:14:51.755" level="INFO">key1</msg>
<status status="PASS" starttime="20220801 01:14:51.754" endtime="20220801 01:14:51.755"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:14:51.756" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:14:51.755" endtime="20220801 01:14:51.756"/>
</kw>
<status status="PASS" starttime="20220801 01:14:48.060" endtime="20220801 01:14:51.756"/>
</kw>
<msg timestamp="20220801 01:14:51.756" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:14:48.060" endtime="20220801 01:14:51.757"/>
</kw>
<msg timestamp="20220801 01:14:51.757" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20220801 01:14:48.059" endtime="20220801 01:14:51.757"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220801 01:14:51.757" endtime="20220801 01:14:51.757"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:14:51.761" level="INFO">Running command 'ozone sh key rename o3://om:9862/54743-with-host/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:14:55.378" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:14:55.378" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:14:51.759" endtime="20220801 01:14:55.378"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:14:55.379" level="INFO"/>
<status status="PASS" starttime="20220801 01:14:55.378" endtime="20220801 01:14:55.379"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:14:55.380" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:14:55.379" endtime="20220801 01:14:55.380"/>
</kw>
<status status="PASS" starttime="20220801 01:14:51.758" endtime="20220801 01:14:55.380"/>
</kw>
<msg timestamp="20220801 01:14:55.380" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:14:51.758" endtime="20220801 01:14:55.381"/>
</kw>
<status status="PASS" starttime="20220801 01:14:51.758" endtime="20220801 01:14:55.381"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:14:55.384" level="INFO">Running command 'ozone sh key list o3://om:9862/54743-with-host/bb1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:14:59.164" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:14:59.164" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20220801 01:14:55.382" endtime="20220801 01:14:59.164"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:14:59.165" level="INFO">key2</msg>
<status status="PASS" starttime="20220801 01:14:59.165" endtime="20220801 01:14:59.165"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:14:59.166" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:14:59.165" endtime="20220801 01:14:59.166"/>
</kw>
<status status="PASS" starttime="20220801 01:14:55.382" endtime="20220801 01:14:59.166"/>
</kw>
<msg timestamp="20220801 01:14:59.166" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:14:55.382" endtime="20220801 01:14:59.167"/>
</kw>
<msg timestamp="20220801 01:14:59.167" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20220801 01:14:55.381" endtime="20220801 01:14:59.167"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220801 01:14:59.167" endtime="20220801 01:14:59.168"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:14:59.171" level="INFO">Running command 'ozone sh key delete o3://om:9862/54743-with-host/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:15:02.874" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:15:02.875" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:14:59.169" endtime="20220801 01:15:02.875"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:15:02.876" level="INFO"/>
<status status="PASS" starttime="20220801 01:15:02.875" endtime="20220801 01:15:02.876"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:15:02.876" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:15:02.876" endtime="20220801 01:15:02.877"/>
</kw>
<status status="PASS" starttime="20220801 01:14:59.169" endtime="20220801 01:15:02.877"/>
</kw>
<msg timestamp="20220801 01:15:02.877" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:14:59.168" endtime="20220801 01:15:02.878"/>
</kw>
<status status="PASS" starttime="20220801 01:14:59.168" endtime="20220801 01:15:02.878"/>
</kw>
<status status="PASS" starttime="20220801 01:13:49.269" endtime="20220801 01:15:02.878"/>
</kw>
<status status="PASS" starttime="20220801 01:13:49.269" endtime="20220801 01:15:02.878"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:15:02.883" level="INFO">Running command 'ozone sh volume clrquota --space-quota o3://om:9862/54743-with-host 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:15:06.301" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:15:06.301" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:15:02.879" endtime="20220801 01:15:06.301"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:15:06.302" level="INFO"/>
<status status="PASS" starttime="20220801 01:15:06.302" endtime="20220801 01:15:06.302"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:15:06.303" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:15:06.302" endtime="20220801 01:15:06.303"/>
</kw>
<status status="PASS" starttime="20220801 01:15:02.879" endtime="20220801 01:15:06.303"/>
</kw>
<msg timestamp="20220801 01:15:06.303" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:15:02.879" endtime="20220801 01:15:06.304"/>
</kw>
<status status="PASS" starttime="20220801 01:15:02.878" endtime="20220801 01:15:06.304"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:15:06.308" level="INFO">Running command 'ozone sh volume info o3://om:9862/54743-with-host | jq -r '. | select(.name=="54743-with-host") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:15:10.136" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:15:10.136" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20220801 01:15:06.306" endtime="20220801 01:15:10.136"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:15:10.137" level="INFO">-1</msg>
<status status="PASS" starttime="20220801 01:15:10.137" endtime="20220801 01:15:10.138"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:15:10.138" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:15:10.138" endtime="20220801 01:15:10.138"/>
</kw>
<status status="PASS" starttime="20220801 01:15:06.305" endtime="20220801 01:15:10.138"/>
</kw>
<msg timestamp="20220801 01:15:10.138" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:15:06.305" endtime="20220801 01:15:10.139"/>
</kw>
<msg timestamp="20220801 01:15:10.139" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20220801 01:15:06.304" endtime="20220801 01:15:10.139"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220801 01:15:10.139" endtime="20220801 01:15:10.140"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:15:10.143" level="INFO">Running command 'ozone sh volume clrquota --namespace-quota o3://om:9862/54743-with-host 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:15:13.765" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:15:13.765" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:15:10.142" endtime="20220801 01:15:13.765"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:15:13.767" level="INFO"/>
<status status="PASS" starttime="20220801 01:15:13.766" endtime="20220801 01:15:13.767"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:15:13.767" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:15:13.767" endtime="20220801 01:15:13.767"/>
</kw>
<status status="PASS" starttime="20220801 01:15:10.141" endtime="20220801 01:15:13.768"/>
</kw>
<msg timestamp="20220801 01:15:13.768" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:15:10.140" endtime="20220801 01:15:13.768"/>
</kw>
<status status="PASS" starttime="20220801 01:15:10.140" endtime="20220801 01:15:13.768"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:15:13.772" level="INFO">Running command 'ozone sh volume info o3://om:9862/54743-with-host | jq -r '. | select(.name=="54743-with-host") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:15:17.678" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:15:17.678" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20220801 01:15:13.770" endtime="20220801 01:15:17.678"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:15:17.679" level="INFO">-1</msg>
<status status="PASS" starttime="20220801 01:15:17.679" endtime="20220801 01:15:17.680"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:15:17.680" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:15:17.680" endtime="20220801 01:15:17.680"/>
</kw>
<status status="PASS" starttime="20220801 01:15:13.770" endtime="20220801 01:15:17.680"/>
</kw>
<msg timestamp="20220801 01:15:17.681" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:15:13.769" endtime="20220801 01:15:17.681"/>
</kw>
<msg timestamp="20220801 01:15:17.681" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20220801 01:15:13.768" endtime="20220801 01:15:17.681"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220801 01:15:17.681" endtime="20220801 01:15:17.682"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:15:17.685" level="INFO">Running command 'ozone sh bucket clrquota --space-quota o3://om:9862/54743-with-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:15:21.174" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:15:21.174" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:15:17.683" endtime="20220801 01:15:21.174"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:15:21.176" level="INFO"/>
<status status="PASS" starttime="20220801 01:15:21.175" endtime="20220801 01:15:21.176"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:15:21.176" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:15:21.176" endtime="20220801 01:15:21.176"/>
</kw>
<status status="PASS" starttime="20220801 01:15:17.683" endtime="20220801 01:15:21.177"/>
</kw>
<msg timestamp="20220801 01:15:21.177" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:15:17.683" endtime="20220801 01:15:21.177"/>
</kw>
<status status="PASS" starttime="20220801 01:15:17.682" endtime="20220801 01:15:21.177"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:15:21.181" level="INFO">Running command 'ozone sh bucket info o3://om:9862/54743-with-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:15:25.139" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:15:25.139" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20220801 01:15:21.179" endtime="20220801 01:15:25.139"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:15:25.140" level="INFO">-1</msg>
<status status="PASS" starttime="20220801 01:15:25.139" endtime="20220801 01:15:25.140"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:15:25.141" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:15:25.140" endtime="20220801 01:15:25.141"/>
</kw>
<status status="PASS" starttime="20220801 01:15:21.178" endtime="20220801 01:15:25.141"/>
</kw>
<msg timestamp="20220801 01:15:25.141" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:15:21.178" endtime="20220801 01:15:25.142"/>
</kw>
<msg timestamp="20220801 01:15:25.142" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20220801 01:15:21.177" endtime="20220801 01:15:25.142"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220801 01:15:25.142" endtime="20220801 01:15:25.143"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:15:25.146" level="INFO">Running command 'ozone sh bucket clrquota --namespace-quota o3://om:9862/54743-with-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:15:28.845" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:15:28.845" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:15:25.144" endtime="20220801 01:15:28.845"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:15:28.847" level="INFO"/>
<status status="PASS" starttime="20220801 01:15:28.845" endtime="20220801 01:15:28.847"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:15:28.847" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:15:28.847" endtime="20220801 01:15:28.847"/>
</kw>
<status status="PASS" starttime="20220801 01:15:25.144" endtime="20220801 01:15:28.848"/>
</kw>
<msg timestamp="20220801 01:15:28.848" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:15:25.143" endtime="20220801 01:15:28.848"/>
</kw>
<status status="PASS" starttime="20220801 01:15:25.143" endtime="20220801 01:15:28.848"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:15:28.852" level="INFO">Running command 'ozone sh bucket info o3://om:9862/54743-with-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:15:32.731" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:15:32.731" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20220801 01:15:28.850" endtime="20220801 01:15:32.731"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:15:32.732" level="INFO">-1</msg>
<status status="PASS" starttime="20220801 01:15:32.732" endtime="20220801 01:15:32.732"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:15:32.733" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:15:32.733" endtime="20220801 01:15:32.733"/>
</kw>
<status status="PASS" starttime="20220801 01:15:28.850" endtime="20220801 01:15:32.733"/>
</kw>
<msg timestamp="20220801 01:15:32.733" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:15:28.849" endtime="20220801 01:15:32.734"/>
</kw>
<msg timestamp="20220801 01:15:32.734" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20220801 01:15:28.848" endtime="20220801 01:15:32.734"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220801 01:15:32.734" endtime="20220801 01:15:32.735"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:15:32.738" level="INFO">Running command 'ozone sh bucket delete o3://om:9862/54743-with-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:15:36.503" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:15:36.503" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:15:32.736" endtime="20220801 01:15:36.503"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:15:36.504" level="INFO"/>
<status status="PASS" starttime="20220801 01:15:36.504" endtime="20220801 01:15:36.504"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:15:36.505" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:15:36.504" endtime="20220801 01:15:36.505"/>
</kw>
<status status="PASS" starttime="20220801 01:15:32.736" endtime="20220801 01:15:36.505"/>
</kw>
<msg timestamp="20220801 01:15:36.505" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:15:32.735" endtime="20220801 01:15:36.506"/>
</kw>
<status status="PASS" starttime="20220801 01:15:32.735" endtime="20220801 01:15:36.506"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:15:36.509" level="INFO">Running command 'ozone sh volume delete o3://om:9862/54743-with-host 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:15:40.136" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:15:40.136" level="INFO">${output} = Volume 54743-with-host is deleted</msg>
<status status="PASS" starttime="20220801 01:15:36.507" endtime="20220801 01:15:40.137"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:15:40.138" level="INFO">Volume 54743-with-host is deleted</msg>
<status status="PASS" starttime="20220801 01:15:40.137" endtime="20220801 01:15:40.138"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:15:40.138" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:15:40.138" endtime="20220801 01:15:40.138"/>
</kw>
<status status="PASS" starttime="20220801 01:15:36.507" endtime="20220801 01:15:40.139"/>
</kw>
<msg timestamp="20220801 01:15:40.139" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:15:36.507" endtime="20220801 01:15:40.139"/>
</kw>
<status status="PASS" starttime="20220801 01:15:36.506" endtime="20220801 01:15:40.139"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:15:40.143" level="INFO">Running command 'ozone sh volume create o3://om:9862/54743-with-host 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:15:43.912" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:15:43.912" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:15:40.141" endtime="20220801 01:15:43.912"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:15:43.913" level="INFO"/>
<status status="PASS" starttime="20220801 01:15:43.913" endtime="20220801 01:15:43.913"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:15:43.914" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:15:43.914" endtime="20220801 01:15:43.914"/>
</kw>
<status status="PASS" starttime="20220801 01:15:40.140" endtime="20220801 01:15:43.914"/>
</kw>
<msg timestamp="20220801 01:15:43.914" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:15:40.140" endtime="20220801 01:15:43.915"/>
</kw>
<status status="PASS" starttime="20220801 01:15:40.139" endtime="20220801 01:15:43.915"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:15:43.919" level="INFO">Running command 'ozone sh volume info o3://om:9862/54743-with-host | jq -r '. | select(.name=="54743-with-host") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:15:47.748" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:15:47.748" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20220801 01:15:43.917" endtime="20220801 01:15:47.748"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:15:47.750" level="INFO">-1</msg>
<status status="PASS" starttime="20220801 01:15:47.749" endtime="20220801 01:15:47.750"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:15:47.750" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:15:47.750" endtime="20220801 01:15:47.750"/>
</kw>
<status status="PASS" starttime="20220801 01:15:43.916" endtime="20220801 01:15:47.751"/>
</kw>
<msg timestamp="20220801 01:15:47.751" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:15:43.916" endtime="20220801 01:15:47.751"/>
</kw>
<msg timestamp="20220801 01:15:47.752" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20220801 01:15:43.915" endtime="20220801 01:15:47.752"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220801 01:15:47.752" endtime="20220801 01:15:47.752"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:15:47.756" level="INFO">Running command 'ozone sh volume info o3://om:9862/54743-with-host | jq -r '. | select(.name=="54743-with-host") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:15:51.706" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:15:51.706" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20220801 01:15:47.754" endtime="20220801 01:15:51.706"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:15:51.707" level="INFO">-1</msg>
<status status="PASS" starttime="20220801 01:15:51.706" endtime="20220801 01:15:51.707"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:15:51.708" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:15:51.707" endtime="20220801 01:15:51.708"/>
</kw>
<status status="PASS" starttime="20220801 01:15:47.753" endtime="20220801 01:15:51.708"/>
</kw>
<msg timestamp="20220801 01:15:51.708" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:15:47.753" endtime="20220801 01:15:51.708"/>
</kw>
<msg timestamp="20220801 01:15:51.709" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20220801 01:15:47.752" endtime="20220801 01:15:51.709"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220801 01:15:51.709" endtime="20220801 01:15:51.709"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:15:51.713" level="INFO">Running command 'ozone sh bucket create o3://om:9862/54743-with-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:15:55.595" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:15:55.595" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:15:51.711" endtime="20220801 01:15:55.595"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:15:55.597" level="INFO"/>
<status status="PASS" starttime="20220801 01:15:55.596" endtime="20220801 01:15:55.597"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:15:55.597" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:15:55.597" endtime="20220801 01:15:55.597"/>
</kw>
<status status="PASS" starttime="20220801 01:15:51.710" endtime="20220801 01:15:55.598"/>
</kw>
<msg timestamp="20220801 01:15:55.598" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:15:51.710" endtime="20220801 01:15:55.598"/>
</kw>
<status status="PASS" starttime="20220801 01:15:51.709" endtime="20220801 01:15:55.598"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:15:55.602" level="INFO">Running command 'ozone sh bucket info o3://om:9862/54743-with-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:15:59.388" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:15:59.389" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20220801 01:15:55.600" endtime="20220801 01:15:59.389"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:15:59.390" level="INFO">-1</msg>
<status status="PASS" starttime="20220801 01:15:59.389" endtime="20220801 01:15:59.390"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:15:59.391" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:15:59.390" endtime="20220801 01:15:59.391"/>
</kw>
<status status="PASS" starttime="20220801 01:15:55.600" endtime="20220801 01:15:59.391"/>
</kw>
<msg timestamp="20220801 01:15:59.391" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:15:55.599" endtime="20220801 01:15:59.391"/>
</kw>
<msg timestamp="20220801 01:15:59.392" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20220801 01:15:55.599" endtime="20220801 01:15:59.392"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220801 01:15:59.392" endtime="20220801 01:15:59.392"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:15:59.396" level="INFO">Running command 'ozone sh bucket info o3://om:9862/54743-with-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:16:03.277" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:16:03.277" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20220801 01:15:59.394" endtime="20220801 01:16:03.277"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:16:03.279" level="INFO">-1</msg>
<status status="PASS" starttime="20220801 01:16:03.278" endtime="20220801 01:16:03.279"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:16:03.279" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:16:03.279" endtime="20220801 01:16:03.279"/>
</kw>
<status status="PASS" starttime="20220801 01:15:59.393" endtime="20220801 01:16:03.280"/>
</kw>
<msg timestamp="20220801 01:16:03.280" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:15:59.393" endtime="20220801 01:16:03.280"/>
</kw>
<msg timestamp="20220801 01:16:03.280" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20220801 01:15:59.392" endtime="20220801 01:16:03.280"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220801 01:16:03.281" endtime="20220801 01:16:03.281"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:16:03.284" level="INFO">Running command 'ozone sh bucket delete o3://om:9862/54743-with-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:16:07.003" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:16:07.003" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:16:03.282" endtime="20220801 01:16:07.003"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:16:07.004" level="INFO"/>
<status status="PASS" starttime="20220801 01:16:07.004" endtime="20220801 01:16:07.004"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:16:07.005" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:16:07.004" endtime="20220801 01:16:07.005"/>
</kw>
<status status="PASS" starttime="20220801 01:16:03.282" endtime="20220801 01:16:07.005"/>
</kw>
<msg timestamp="20220801 01:16:07.005" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:16:03.282" endtime="20220801 01:16:07.006"/>
</kw>
<status status="PASS" starttime="20220801 01:16:03.281" endtime="20220801 01:16:07.006"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:16:07.009" level="INFO">Running command 'ozone sh volume delete o3://om:9862/54743-with-host 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:16:10.568" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:16:10.568" level="INFO">${output} = Volume 54743-with-host is deleted</msg>
<status status="PASS" starttime="20220801 01:16:07.007" endtime="20220801 01:16:10.568"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:16:10.569" level="INFO">Volume 54743-with-host is deleted</msg>
<status status="PASS" starttime="20220801 01:16:10.568" endtime="20220801 01:16:10.569"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:16:10.570" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:16:10.569" endtime="20220801 01:16:10.570"/>
</kw>
<status status="PASS" starttime="20220801 01:16:07.007" endtime="20220801 01:16:10.570"/>
</kw>
<msg timestamp="20220801 01:16:10.570" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:16:07.007" endtime="20220801 01:16:10.570"/>
</kw>
<status status="PASS" starttime="20220801 01:16:07.006" endtime="20220801 01:16:10.571"/>
</kw>
<status status="PASS" starttime="20220801 01:12:56.096" endtime="20220801 01:16:10.571"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220801 01:12:56.070" endtime="20220801 01:16:10.571"/>
</test>
<test id="s1-s1-s5-t2" name="RpcClient with execution errors" line="29">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:16:10.577" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:16:10.580" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:16:10.580" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220801 01:16:10.575" endtime="20220801 01:16:10.580"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:16:10.581" level="INFO">scm</msg>
<status status="PASS" starttime="20220801 01:16:10.580" endtime="20220801 01:16:10.581"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:16:10.581" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:16:10.581" endtime="20220801 01:16:10.582"/>
</kw>
<status status="PASS" starttime="20220801 01:16:10.574" endtime="20220801 01:16:10.582"/>
</kw>
<msg timestamp="20220801 01:16:10.582" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:16:10.574" endtime="20220801 01:16:10.582"/>
</kw>
<msg timestamp="20220801 01:16:10.583" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220801 01:16:10.574" endtime="20220801 01:16:10.583"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220801 01:16:10.583" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220801 01:16:10.583" endtime="20220801 01:16:10.583"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:16:10.588" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:16:10.649" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:16:10.649" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:16:10.586" endtime="20220801 01:16:10.649"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:16:10.650" level="INFO"/>
<status status="PASS" starttime="20220801 01:16:10.649" endtime="20220801 01:16:10.650"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:16:10.651" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:16:10.650" endtime="20220801 01:16:10.651"/>
</kw>
<status status="PASS" starttime="20220801 01:16:10.585" endtime="20220801 01:16:10.651"/>
</kw>
<msg timestamp="20220801 01:16:10.651" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:16:10.585" endtime="20220801 01:16:10.652"/>
</kw>
<status status="PASS" starttime="20220801 01:16:10.584" endtime="20220801 01:16:10.652"/>
</kw>
<status status="PASS" starttime="20220801 01:16:10.584" endtime="20220801 01:16:10.652"/>
</kw>
<status status="PASS" starttime="20220801 01:16:10.573" endtime="20220801 01:16:10.652"/>
</kw>
<status status="PASS" starttime="20220801 01:16:10.573" endtime="20220801 01:16:10.652"/>
</kw>
<kw name="Test ozone shell errors" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-with-errors</arg>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota invalid</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:16:10.655" level="INFO">Running command 'ozone sh volume create o3://om:9862/54743-with-errors --space-quota invalid 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:16:14.425" level="INFO">${rc} = 255</msg>
<msg timestamp="20220801 01:16:14.425" level="INFO">${output} = Invalid values for quota, to ensure that the Quota format is legal(supported values are B, KB, MB, GB and TB). And the quota value cannot be greater than Long.MAX_VALUE BYTES</msg>
<status status="PASS" starttime="20220801 01:16:10.653" endtime="20220801 01:16:14.425"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:16:14.426" level="INFO">Invalid values for quota, to ensure that the Quota format is legal(supported values are B, KB, MB, GB and TB). And the quota value cannot be greater than Long.MAX_VALUE BYTES</msg>
<status status="PASS" starttime="20220801 01:16:14.426" endtime="20220801 01:16:14.427"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:16:14.427" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:16:14.427" endtime="20220801 01:16:14.427"/>
</kw>
<msg timestamp="20220801 01:16:14.427" level="INFO">${result} = Invalid values for quota, to ensure that the Quota format is legal(supported values are B, KB, MB, GB and TB). And the quota value cannot be greater than Long.MAX_VALUE BYTES</msg>
<status status="PASS" starttime="20220801 01:16:10.653" endtime="20220801 01:16:14.427"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Invalid</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220801 01:16:14.428" endtime="20220801 01:16:14.428"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:16:14.431" level="INFO">Running command 'ozone sh volume create o3://om:9862/54743-with-errors 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:16:18.003" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:16:18.004" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:16:14.429" endtime="20220801 01:16:18.004"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:16:18.005" level="INFO"/>
<status status="PASS" starttime="20220801 01:16:18.004" endtime="20220801 01:16:18.005"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:16:18.005" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:16:18.005" endtime="20220801 01:16:18.006"/>
</kw>
<status status="PASS" starttime="20220801 01:16:14.428" endtime="20220801 01:16:18.006"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bucket_1</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:16:18.009" level="INFO">Running command 'ozone sh bucket create o3://om:9862/54743-with-errors/bucket_1 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:16:21.645" level="INFO">${rc} = 255</msg>
<msg timestamp="20220801 01:16:21.645" level="INFO">${output} = INVALID_BUCKET_NAME Bucket or Volume name has an unsupported character : _</msg>
<status status="PASS" starttime="20220801 01:16:18.007" endtime="20220801 01:16:21.645"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:16:21.646" level="INFO">INVALID_BUCKET_NAME Bucket or Volume name has an unsupported character : _</msg>
<status status="PASS" starttime="20220801 01:16:21.646" endtime="20220801 01:16:21.647"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:16:21.647" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:16:21.647" endtime="20220801 01:16:21.647"/>
</kw>
<msg timestamp="20220801 01:16:21.648" level="INFO">${result} = INVALID_BUCKET_NAME Bucket or Volume name has an unsupported character : _</msg>
<status status="PASS" starttime="20220801 01:16:18.006" endtime="20220801 01:16:21.648"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>INVALID_BUCKET_NAME</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220801 01:16:21.648" endtime="20220801 01:16:21.648"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bucket1 --layout Invalid</arg>
<arg>2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:16:21.651" level="INFO">Running command 'ozone sh bucket create o3://om:9862/54743-with-errors/bucket1 --layout Invalid 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:16:23.689" level="INFO">${rc} = 2</msg>
<msg timestamp="20220801 01:16:23.689" level="INFO">${output} = Invalid value for option '--layout': expected one of [FILE_SYSTEM_OPTIMIZED, OBJECT_STORE, LEGACY] (case-sensitive) but was 'Invalid'
Usage: ozone sh bucket create [-ghV] [-k=&lt;bekName&gt;] [-l=&lt;allowedBu...</msg>
<status status="PASS" starttime="20220801 01:16:21.649" endtime="20220801 01:16:23.689"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:16:23.690" level="INFO">Invalid value for option '--layout': expected one of [FILE_SYSTEM_OPTIMIZED, OBJECT_STORE, LEGACY] (case-sensitive) but was 'Invalid'
Usage: ozone sh bucket create [-ghV] [-k=&lt;bekName&gt;] [-l=&lt;allowedBucketLayout&gt;]
                              [--namespace-quota=&lt;quotaInNamespace&gt;]
                              [--quota=&lt;quotaInBytes&gt;] [-r=&lt;replication&gt;]
                              [-t=&lt;type&gt;] [-u=&lt;ownerName&gt;] &lt;value&gt;
creates a bucket in a given volume
      &lt;value&gt;              URI of the volume/bucket.
                           Ozone URI could start with o3:// or without prefix.
                             URI may contain the host/serviceId and port of the
                             OM server. Both are optional. If they are not
                             specified it will be identified from the config
                             files.
  -g, --enforcegdpr        if true, indicates GDPR enforced bucket,
                             false/unspecified indicates otherwise
  -h, --help               Show this help message and exit.
  -k, --bucketkey=&lt;bekName&gt;
                           bucket encryption key name
  -l, --layout=&lt;allowedBucketLayout&gt;
                           Allowed Bucket Layouts: FILE_SYSTEM_OPTIMIZED,
                             OBJECT_STORE, LEGACY
      --namespace-quota=&lt;quotaInNamespace&gt;
                           For volume this parameter represents the number of
                             buckets, and for buckets represents the number of
                             keys (eg. 5)
      --quota, --space-quota=&lt;quotaInBytes&gt;
                           The maximum space quota can be used (eg. 1GB)
  -r, --replication=&lt;replication&gt;
                           Replication definition. Valid values are replication
                             type-specific.  For RATIS: ONE or THREE. In case
                             of EC, pass CODEC-DATA-PARITY-CHUNKSIZE,  e.g.
                             rs-3-2-1024k, rs-6-3-1024k, rs-10-4-1024k
  -t, --type, --replication-type=&lt;type&gt;
                           Replication type. Supported types are: RATIS, EC
  -u, --user=&lt;ownerName&gt;   Owner of the bucket. Defaults to current user if not
                             specified
  -V, --version            Print version information and exit.</msg>
<status status="PASS" starttime="20220801 01:16:23.690" endtime="20220801 01:16:23.691"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:16:23.691" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:16:23.691" endtime="20220801 01:16:23.691"/>
</kw>
<msg timestamp="20220801 01:16:23.692" level="INFO">${result} = Invalid value for option '--layout': expected one of [FILE_SYSTEM_OPTIMIZED, OBJECT_STORE, LEGACY] (case-sensitive) but was 'Invalid'
Usage: ozone sh bucket create [-ghV] [-k=&lt;bekName&gt;] [-l=&lt;allowedBu...</msg>
<status status="PASS" starttime="20220801 01:16:21.648" endtime="20220801 01:16:23.692"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Usage</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220801 01:16:23.692" endtime="20220801 01:16:23.692"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bucket1</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:16:23.695" level="INFO">Running command 'ozone sh bucket create o3://om:9862/54743-with-errors/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:16:27.510" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:16:27.510" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:16:23.693" endtime="20220801 01:16:27.511"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:16:27.512" level="INFO"/>
<status status="PASS" starttime="20220801 01:16:27.511" endtime="20220801 01:16:27.512"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:16:27.512" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:16:27.512" endtime="20220801 01:16:27.512"/>
</kw>
<status status="PASS" starttime="20220801 01:16:23.692" endtime="20220801 01:16:27.513"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bucket1/non-existing</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:16:27.516" level="INFO">Running command 'ozone sh key info o3://om:9862/54743-with-errors/bucket1/non-existing 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:16:31.126" level="INFO">${rc} = 255</msg>
<msg timestamp="20220801 01:16:31.127" level="INFO">${output} = KEY_NOT_FOUND Key:non-existing not found</msg>
<status status="PASS" starttime="20220801 01:16:27.513" endtime="20220801 01:16:31.127"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:16:31.128" level="INFO">KEY_NOT_FOUND Key:non-existing not found</msg>
<status status="PASS" starttime="20220801 01:16:31.127" endtime="20220801 01:16:31.128"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:16:31.129" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:16:31.128" endtime="20220801 01:16:31.129"/>
</kw>
<msg timestamp="20220801 01:16:31.129" level="INFO">${result} = KEY_NOT_FOUND Key:non-existing not found</msg>
<status status="PASS" starttime="20220801 01:16:27.513" endtime="20220801 01:16:31.129"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>KEY_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220801 01:16:31.129" endtime="20220801 01:16:31.129"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh key put ${protocol}${server}/${volume}/bucket1/key1 unexisting --type invalid</arg>
<arg>2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:16:31.132" level="INFO">Running command 'ozone sh key put o3://om:9862/54743-with-errors/bucket1/key1 unexisting --type invalid 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:16:33.162" level="INFO">${rc} = 2</msg>
<msg timestamp="20220801 01:16:33.162" level="INFO">${output} = Invalid value for option '--replication-type': expected one of [RATIS, STAND_ALONE, CHAINED, EC] (case-sensitive) but was 'invalid'
Usage: ozone sh key put [-hV] [-r=&lt;replication&gt;] [-t=&lt;type&gt;] &lt;value&gt;...</msg>
<status status="PASS" starttime="20220801 01:16:31.130" endtime="20220801 01:16:33.162"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:16:33.163" level="INFO">Invalid value for option '--replication-type': expected one of [RATIS, STAND_ALONE, CHAINED, EC] (case-sensitive) but was 'invalid'
Usage: ozone sh key put [-hV] [-r=&lt;replication&gt;] [-t=&lt;type&gt;] &lt;value&gt; &lt;fileName&gt;
creates or overwrites an existing key
      &lt;value&gt;      URI of the volume/bucket/key.
                   Ozone URI could start with o3:// or without prefix. URI may
                     contain the host/serviceId and port of the OM server. Both
                     are optional. If they are not specified it will be
                     identified from the config files.
      &lt;fileName&gt;   File to upload
  -h, --help       Show this help message and exit.
  -r, --replication=&lt;replication&gt;
                   Replication definition. Valid values are replication
                     type-specific.  For RATIS: ONE or THREE. In case of EC,
                     pass CODEC-DATA-PARITY-CHUNKSIZE,  e.g. rs-3-2-1024k,
                     rs-6-3-1024k, rs-10-4-1024k
  -t, --type, --replication-type=&lt;type&gt;
                   Replication type. Supported types are: RATIS, EC
  -V, --version    Print version information and exit.</msg>
<status status="PASS" starttime="20220801 01:16:33.162" endtime="20220801 01:16:33.163"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:16:33.164" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:16:33.163" endtime="20220801 01:16:33.164"/>
</kw>
<msg timestamp="20220801 01:16:33.164" level="INFO">${result} = Invalid value for option '--replication-type': expected one of [RATIS, STAND_ALONE, CHAINED, EC] (case-sensitive) but was 'invalid'
Usage: ozone sh key put [-hV] [-r=&lt;replication&gt;] [-t=&lt;type&gt;] &lt;value&gt;...</msg>
<status status="PASS" starttime="20220801 01:16:31.130" endtime="20220801 01:16:33.164"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bucket1</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:16:33.167" level="INFO">Running command 'ozone sh bucket delete o3://om:9862/54743-with-errors/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:16:37.020" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:16:37.020" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:16:33.165" endtime="20220801 01:16:37.020"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:16:37.021" level="INFO"/>
<status status="PASS" starttime="20220801 01:16:37.020" endtime="20220801 01:16:37.021"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:16:37.022" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:16:37.021" endtime="20220801 01:16:37.022"/>
</kw>
<status status="PASS" starttime="20220801 01:16:33.164" endtime="20220801 01:16:37.022"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:16:37.025" level="INFO">Running command 'ozone sh volume delete o3://om:9862/54743-with-errors 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:16:40.673" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:16:40.674" level="INFO">${output} = Volume 54743-with-errors is deleted</msg>
<status status="PASS" starttime="20220801 01:16:37.023" endtime="20220801 01:16:40.674"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:16:40.675" level="INFO">Volume 54743-with-errors is deleted</msg>
<status status="PASS" starttime="20220801 01:16:40.674" endtime="20220801 01:16:40.675"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:16:40.675" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:16:40.675" endtime="20220801 01:16:40.675"/>
</kw>
<status status="PASS" starttime="20220801 01:16:37.022" endtime="20220801 01:16:40.676"/>
</kw>
<status status="PASS" starttime="20220801 01:16:10.652" endtime="20220801 01:16:40.676"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220801 01:16:10.572" endtime="20220801 01:16:40.676"/>
</test>
<test id="s1-s1-s5-t3" name="RpcClient volume acls" line="32">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:16:40.682" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:16:40.685" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:16:40.685" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220801 01:16:40.680" endtime="20220801 01:16:40.685"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:16:40.686" level="INFO">scm</msg>
<status status="PASS" starttime="20220801 01:16:40.686" endtime="20220801 01:16:40.686"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:16:40.687" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:16:40.686" endtime="20220801 01:16:40.687"/>
</kw>
<status status="PASS" starttime="20220801 01:16:40.679" endtime="20220801 01:16:40.687"/>
</kw>
<msg timestamp="20220801 01:16:40.687" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:16:40.679" endtime="20220801 01:16:40.688"/>
</kw>
<msg timestamp="20220801 01:16:40.688" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220801 01:16:40.679" endtime="20220801 01:16:40.688"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220801 01:16:40.689" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220801 01:16:40.688" endtime="20220801 01:16:40.689"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:16:40.692" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:16:40.699" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:16:40.699" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:16:40.690" endtime="20220801 01:16:40.699"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:16:40.700" level="INFO"/>
<status status="PASS" starttime="20220801 01:16:40.699" endtime="20220801 01:16:40.700"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:16:40.700" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:16:40.700" endtime="20220801 01:16:40.701"/>
</kw>
<status status="PASS" starttime="20220801 01:16:40.690" endtime="20220801 01:16:40.701"/>
</kw>
<msg timestamp="20220801 01:16:40.701" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:16:40.690" endtime="20220801 01:16:40.701"/>
</kw>
<status status="PASS" starttime="20220801 01:16:40.689" endtime="20220801 01:16:40.701"/>
</kw>
<status status="PASS" starttime="20220801 01:16:40.689" endtime="20220801 01:16:40.702"/>
</kw>
<status status="PASS" starttime="20220801 01:16:40.678" endtime="20220801 01:16:40.702"/>
</kw>
<status status="PASS" starttime="20220801 01:16:40.678" endtime="20220801 01:16:40.702"/>
</kw>
<kw name="Test Volume Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-acls</arg>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:16:40.706" level="INFO">Running command 'ozone sh volume create o3://om:9862/54743-acls 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:16:44.292" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:16:44.292" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:16:40.704" endtime="20220801 01:16:44.292"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:16:44.293" level="INFO"/>
<status status="PASS" starttime="20220801 01:16:44.292" endtime="20220801 01:16:44.293"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:16:44.294" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:16:44.294" endtime="20220801 01:16:44.295"/>
</kw>
<status status="PASS" starttime="20220801 01:16:40.703" endtime="20220801 01:16:44.295"/>
</kw>
<msg timestamp="20220801 01:16:44.295" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:16:40.703" endtime="20220801 01:16:44.295"/>
</kw>
<status status="PASS" starttime="20220801 01:16:40.702" endtime="20220801 01:16:44.295"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:16:44.299" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/54743-acls 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:16:48.151" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:16:48.151" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20220801 01:16:44.297" endtime="20220801 01:16:48.151"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:16:48.152" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20220801 01:16:48.151" endtime="20220801 01:16:48.152"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:16:48.153" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:16:48.152" endtime="20220801 01:16:48.153"/>
</kw>
<status status="PASS" starttime="20220801 01:16:44.296" endtime="20220801 01:16:48.153"/>
</kw>
<msg timestamp="20220801 01:16:48.153" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:16:44.296" endtime="20220801 01:16:48.154"/>
</kw>
<msg timestamp="20220801 01:16:48.154" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20220801 01:16:44.296" endtime="20220801 01:16:48.154"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220801 01:16:48.154" endtime="20220801 01:16:48.155"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:16:48.158" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/54743-acls -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:16:51.824" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:16:51.824" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20220801 01:16:48.156" endtime="20220801 01:16:51.824"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:16:51.825" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20220801 01:16:51.824" endtime="20220801 01:16:51.825"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:16:51.826" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:16:51.825" endtime="20220801 01:16:51.826"/>
</kw>
<status status="PASS" starttime="20220801 01:16:48.156" endtime="20220801 01:16:51.826"/>
</kw>
<msg timestamp="20220801 01:16:51.826" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:16:48.156" endtime="20220801 01:16:51.826"/>
</kw>
<msg timestamp="20220801 01:16:51.827" level="INFO">${result} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20220801 01:16:48.155" endtime="20220801 01:16:51.827"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:16:51.830" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/54743-acls 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:16:55.661" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:16:55.661" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "...</msg>
<status status="PASS" starttime="20220801 01:16:51.828" endtime="20220801 01:16:55.661"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:16:55.662" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20220801 01:16:55.661" endtime="20220801 01:16:55.662"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:16:55.663" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:16:55.662" endtime="20220801 01:16:55.663"/>
</kw>
<status status="PASS" starttime="20220801 01:16:51.828" endtime="20220801 01:16:55.663"/>
</kw>
<msg timestamp="20220801 01:16:55.663" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:16:51.827" endtime="20220801 01:16:55.664"/>
</kw>
<msg timestamp="20220801 01:16:55.664" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "...</msg>
<status status="PASS" starttime="20220801 01:16:51.827" endtime="20220801 01:16:55.664"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220801 01:16:55.664" endtime="20220801 01:16:55.665"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:16:55.669" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/54743-acls -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:16:59.382" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:16:59.382" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20220801 01:16:55.667" endtime="20220801 01:16:59.382"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:16:59.383" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20220801 01:16:59.382" endtime="20220801 01:16:59.383"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:16:59.384" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:16:59.383" endtime="20220801 01:16:59.384"/>
</kw>
<status status="PASS" starttime="20220801 01:16:55.666" endtime="20220801 01:16:59.384"/>
</kw>
<msg timestamp="20220801 01:16:59.384" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:16:55.666" endtime="20220801 01:16:59.385"/>
</kw>
<msg timestamp="20220801 01:16:59.385" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20220801 01:16:55.665" endtime="20220801 01:16:59.385"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:16:59.388" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/54743-acls 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:17:03.147" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:17:03.148" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "...</msg>
<status status="PASS" starttime="20220801 01:16:59.386" endtime="20220801 01:17:03.148"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:17:03.149" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20220801 01:17:03.148" endtime="20220801 01:17:03.149"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:17:03.149" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:17:03.149" endtime="20220801 01:17:03.149"/>
</kw>
<status status="PASS" starttime="20220801 01:16:59.386" endtime="20220801 01:17:03.150"/>
</kw>
<msg timestamp="20220801 01:17:03.150" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:16:59.386" endtime="20220801 01:17:03.150"/>
</kw>
<msg timestamp="20220801 01:17:03.150" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "...</msg>
<status status="PASS" starttime="20220801 01:16:59.385" endtime="20220801 01:17:03.151"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220801 01:17:03.151" endtime="20220801 01:17:03.151"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy[DEFAULT],group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:17:03.155" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/54743-acls -al user:superuser1:rwxy[DEFAULT],group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:17:06.671" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:17:06.671" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20220801 01:17:03.153" endtime="20220801 01:17:06.671"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:17:06.672" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20220801 01:17:06.671" endtime="20220801 01:17:06.672"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:17:06.673" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:17:06.673" endtime="20220801 01:17:06.673"/>
</kw>
<status status="PASS" starttime="20220801 01:17:03.152" endtime="20220801 01:17:06.673"/>
</kw>
<msg timestamp="20220801 01:17:06.673" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:17:03.152" endtime="20220801 01:17:06.674"/>
</kw>
<msg timestamp="20220801 01:17:06.674" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20220801 01:17:03.152" endtime="20220801 01:17:06.674"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:17:06.678" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/54743-acls 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:17:10.529" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:17:10.529" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20220801 01:17:06.676" endtime="20220801 01:17:10.529"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:17:10.530" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20220801 01:17:10.529" endtime="20220801 01:17:10.530"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:17:10.531" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:17:10.530" endtime="20220801 01:17:10.531"/>
</kw>
<status status="PASS" starttime="20220801 01:17:06.675" endtime="20220801 01:17:10.531"/>
</kw>
<msg timestamp="20220801 01:17:10.531" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:17:06.675" endtime="20220801 01:17:10.532"/>
</kw>
<msg timestamp="20220801 01:17:10.532" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20220801 01:17:06.674" endtime="20220801 01:17:10.532"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220801 01:17:10.532" endtime="20220801 01:17:10.533"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220801 01:17:10.533" endtime="20220801 01:17:10.533"/>
</kw>
<status status="PASS" starttime="20220801 01:16:40.702" endtime="20220801 01:17:10.534"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220801 01:16:40.677" endtime="20220801 01:17:10.534"/>
</test>
<test id="s1-s1-s5-t4" name="RpcClient bucket acls" line="35">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:17:10.540" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:17:10.543" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:17:10.543" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220801 01:17:10.538" endtime="20220801 01:17:10.543"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:17:10.544" level="INFO">scm</msg>
<status status="PASS" starttime="20220801 01:17:10.544" endtime="20220801 01:17:10.544"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:17:10.545" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:17:10.545" endtime="20220801 01:17:10.545"/>
</kw>
<status status="PASS" starttime="20220801 01:17:10.537" endtime="20220801 01:17:10.545"/>
</kw>
<msg timestamp="20220801 01:17:10.545" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:17:10.537" endtime="20220801 01:17:10.546"/>
</kw>
<msg timestamp="20220801 01:17:10.546" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220801 01:17:10.537" endtime="20220801 01:17:10.546"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220801 01:17:10.547" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220801 01:17:10.546" endtime="20220801 01:17:10.547"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:17:10.550" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:17:10.557" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:17:10.557" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:17:10.549" endtime="20220801 01:17:10.557"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:17:10.558" level="INFO"/>
<status status="PASS" starttime="20220801 01:17:10.558" endtime="20220801 01:17:10.558"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:17:10.559" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:17:10.559" endtime="20220801 01:17:10.559"/>
</kw>
<status status="PASS" starttime="20220801 01:17:10.548" endtime="20220801 01:17:10.559"/>
</kw>
<msg timestamp="20220801 01:17:10.559" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:17:10.548" endtime="20220801 01:17:10.560"/>
</kw>
<status status="PASS" starttime="20220801 01:17:10.547" endtime="20220801 01:17:10.560"/>
</kw>
<status status="PASS" starttime="20220801 01:17:10.547" endtime="20220801 01:17:10.560"/>
</kw>
<status status="PASS" starttime="20220801 01:17:10.536" endtime="20220801 01:17:10.560"/>
</kw>
<status status="PASS" starttime="20220801 01:17:10.536" endtime="20220801 01:17:10.560"/>
</kw>
<kw name="Test Bucket Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-acls</arg>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:17:10.564" level="INFO">Running command 'ozone sh bucket create o3://om:9862/54743-acls/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:17:14.251" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:17:14.251" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:17:10.562" endtime="20220801 01:17:14.251"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:17:14.252" level="INFO"/>
<status status="PASS" starttime="20220801 01:17:14.251" endtime="20220801 01:17:14.252"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:17:14.253" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:17:14.252" endtime="20220801 01:17:14.253"/>
</kw>
<status status="PASS" starttime="20220801 01:17:10.562" endtime="20220801 01:17:14.253"/>
</kw>
<msg timestamp="20220801 01:17:14.253" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:17:10.562" endtime="20220801 01:17:14.254"/>
</kw>
<status status="PASS" starttime="20220801 01:17:10.561" endtime="20220801 01:17:14.254"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:17:14.257" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/54743-acls/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:17:18.208" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:17:18.208" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20220801 01:17:14.255" endtime="20220801 01:17:18.208"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:17:18.209" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20220801 01:17:18.209" endtime="20220801 01:17:18.210"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:17:18.210" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:17:18.210" endtime="20220801 01:17:18.210"/>
</kw>
<status status="PASS" starttime="20220801 01:17:14.255" endtime="20220801 01:17:18.210"/>
</kw>
<msg timestamp="20220801 01:17:18.211" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:17:14.255" endtime="20220801 01:17:18.211"/>
</kw>
<msg timestamp="20220801 01:17:18.211" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20220801 01:17:14.254" endtime="20220801 01:17:18.211"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220801 01:17:18.211" endtime="20220801 01:17:18.212"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:17:18.216" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/54743-acls/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:17:21.762" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:17:21.762" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20220801 01:17:18.213" endtime="20220801 01:17:21.762"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:17:21.763" level="INFO">ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20220801 01:17:21.762" endtime="20220801 01:17:21.763"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:17:21.764" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:17:21.763" endtime="20220801 01:17:21.764"/>
</kw>
<status status="PASS" starttime="20220801 01:17:18.213" endtime="20220801 01:17:21.764"/>
</kw>
<msg timestamp="20220801 01:17:21.764" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:17:18.213" endtime="20220801 01:17:21.765"/>
</kw>
<msg timestamp="20220801 01:17:21.765" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20220801 01:17:18.212" endtime="20220801 01:17:21.765"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:17:21.769" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/54743-acls/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:17:25.554" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:17:25.555" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20220801 01:17:21.767" endtime="20220801 01:17:25.555"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:17:25.556" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20220801 01:17:25.555" endtime="20220801 01:17:25.556"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:17:25.556" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:17:25.556" endtime="20220801 01:17:25.557"/>
</kw>
<status status="PASS" starttime="20220801 01:17:21.766" endtime="20220801 01:17:25.557"/>
</kw>
<msg timestamp="20220801 01:17:25.557" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:17:21.766" endtime="20220801 01:17:25.557"/>
</kw>
<msg timestamp="20220801 01:17:25.558" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20220801 01:17:21.765" endtime="20220801 01:17:25.558"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220801 01:17:25.558" endtime="20220801 01:17:25.559"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:17:25.562" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/54743-acls/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:17:29.316" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:17:29.316" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20220801 01:17:25.560" endtime="20220801 01:17:29.316"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:17:29.317" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20220801 01:17:29.316" endtime="20220801 01:17:29.317"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:17:29.318" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:17:29.317" endtime="20220801 01:17:29.318"/>
</kw>
<status status="PASS" starttime="20220801 01:17:25.560" endtime="20220801 01:17:29.318"/>
</kw>
<msg timestamp="20220801 01:17:29.318" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:17:25.559" endtime="20220801 01:17:29.319"/>
</kw>
<msg timestamp="20220801 01:17:29.319" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20220801 01:17:25.559" endtime="20220801 01:17:29.319"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:17:29.322" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/54743-acls/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:17:32.941" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:17:32.941" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20220801 01:17:29.320" endtime="20220801 01:17:32.941"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:17:32.942" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20220801 01:17:32.941" endtime="20220801 01:17:32.942"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:17:32.943" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:17:32.942" endtime="20220801 01:17:32.943"/>
</kw>
<status status="PASS" starttime="20220801 01:17:29.320" endtime="20220801 01:17:32.943"/>
</kw>
<msg timestamp="20220801 01:17:32.943" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:17:29.320" endtime="20220801 01:17:32.944"/>
</kw>
<msg timestamp="20220801 01:17:32.944" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20220801 01:17:29.319" endtime="20220801 01:17:32.944"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220801 01:17:32.944" endtime="20220801 01:17:32.945"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:17:32.948" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/54743-acls/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:17:36.890" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:17:36.890" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20220801 01:17:32.946" endtime="20220801 01:17:36.890"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:17:36.891" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20220801 01:17:36.890" endtime="20220801 01:17:36.891"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:17:36.891" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:17:36.891" endtime="20220801 01:17:36.892"/>
</kw>
<status status="PASS" starttime="20220801 01:17:32.946" endtime="20220801 01:17:36.892"/>
</kw>
<msg timestamp="20220801 01:17:36.892" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:17:32.946" endtime="20220801 01:17:36.892"/>
</kw>
<msg timestamp="20220801 01:17:36.893" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20220801 01:17:32.945" endtime="20220801 01:17:36.893"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:17:36.897" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/54743-acls/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:17:40.708" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:17:40.708" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20220801 01:17:36.895" endtime="20220801 01:17:40.708"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:17:40.710" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20220801 01:17:40.709" endtime="20220801 01:17:40.710"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:17:40.710" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:17:40.710" endtime="20220801 01:17:40.710"/>
</kw>
<status status="PASS" starttime="20220801 01:17:36.894" endtime="20220801 01:17:40.711"/>
</kw>
<msg timestamp="20220801 01:17:40.711" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:17:36.893" endtime="20220801 01:17:40.711"/>
</kw>
<msg timestamp="20220801 01:17:40.711" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20220801 01:17:36.893" endtime="20220801 01:17:40.711"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220801 01:17:40.712" endtime="20220801 01:17:40.712"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220801 01:17:40.712" endtime="20220801 01:17:40.713"/>
</kw>
<status status="PASS" starttime="20220801 01:17:10.561" endtime="20220801 01:17:40.713"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220801 01:17:10.535" endtime="20220801 01:17:40.713"/>
</test>
<test id="s1-s1-s5-t5" name="RpcClient key acls" line="38">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:17:40.719" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:17:40.722" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:17:40.723" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220801 01:17:40.717" endtime="20220801 01:17:40.723"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:17:40.724" level="INFO">scm</msg>
<status status="PASS" starttime="20220801 01:17:40.723" endtime="20220801 01:17:40.724"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:17:40.724" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:17:40.724" endtime="20220801 01:17:40.724"/>
</kw>
<status status="PASS" starttime="20220801 01:17:40.716" endtime="20220801 01:17:40.725"/>
</kw>
<msg timestamp="20220801 01:17:40.725" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:17:40.716" endtime="20220801 01:17:40.725"/>
</kw>
<msg timestamp="20220801 01:17:40.725" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220801 01:17:40.716" endtime="20220801 01:17:40.725"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220801 01:17:40.726" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220801 01:17:40.726" endtime="20220801 01:17:40.726"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:17:40.730" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:17:40.737" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:17:40.737" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:17:40.728" endtime="20220801 01:17:40.737"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:17:40.738" level="INFO"/>
<status status="PASS" starttime="20220801 01:17:40.738" endtime="20220801 01:17:40.738"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:17:40.739" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:17:40.738" endtime="20220801 01:17:40.739"/>
</kw>
<status status="PASS" starttime="20220801 01:17:40.728" endtime="20220801 01:17:40.739"/>
</kw>
<msg timestamp="20220801 01:17:40.739" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:17:40.727" endtime="20220801 01:17:40.740"/>
</kw>
<status status="PASS" starttime="20220801 01:17:40.727" endtime="20220801 01:17:40.740"/>
</kw>
<status status="PASS" starttime="20220801 01:17:40.726" endtime="20220801 01:17:40.740"/>
</kw>
<status status="PASS" starttime="20220801 01:17:40.715" endtime="20220801 01:17:40.740"/>
</kw>
<status status="PASS" starttime="20220801 01:17:40.715" endtime="20220801 01:17:40.740"/>
</kw>
<kw name="Test key Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-acls</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:17:40.745" level="INFO">Running command 'ozone sh key put o3://om:9862/54743-acls/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:17:46.772" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:17:46.772" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:17:40.742" endtime="20220801 01:17:46.772"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:17:46.773" level="INFO"/>
<status status="PASS" starttime="20220801 01:17:46.773" endtime="20220801 01:17:46.773"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:17:46.774" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:17:46.773" endtime="20220801 01:17:46.774"/>
</kw>
<status status="PASS" starttime="20220801 01:17:40.742" endtime="20220801 01:17:46.774"/>
</kw>
<msg timestamp="20220801 01:17:46.774" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:17:40.742" endtime="20220801 01:17:46.775"/>
</kw>
<status status="PASS" starttime="20220801 01:17:40.741" endtime="20220801 01:17:46.775"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:17:46.779" level="INFO">Running command 'ozone sh key getacl o3://om:9862/54743-acls/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:17:50.698" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:17:50.698" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20220801 01:17:46.777" endtime="20220801 01:17:50.698"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:17:50.699" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20220801 01:17:50.698" endtime="20220801 01:17:50.699"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:17:50.700" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:17:50.699" endtime="20220801 01:17:50.700"/>
</kw>
<status status="PASS" starttime="20220801 01:17:46.776" endtime="20220801 01:17:50.700"/>
</kw>
<msg timestamp="20220801 01:17:50.700" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:17:46.776" endtime="20220801 01:17:50.701"/>
</kw>
<msg timestamp="20220801 01:17:50.701" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20220801 01:17:46.775" endtime="20220801 01:17:50.701"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220801 01:17:50.701" endtime="20220801 01:17:50.702"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key addacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:17:50.705" level="INFO">Running command 'ozone sh key addacl o3://om:9862/54743-acls/bb1/key2 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:17:54.428" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:17:54.428" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220801 01:17:50.703" endtime="20220801 01:17:54.428"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:17:54.430" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220801 01:17:54.429" endtime="20220801 01:17:54.430"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:17:54.430" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:17:54.430" endtime="20220801 01:17:54.430"/>
</kw>
<status status="PASS" starttime="20220801 01:17:50.703" endtime="20220801 01:17:54.431"/>
</kw>
<msg timestamp="20220801 01:17:54.431" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:17:50.703" endtime="20220801 01:17:54.431"/>
</kw>
<msg timestamp="20220801 01:17:54.431" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220801 01:17:50.702" endtime="20220801 01:17:54.431"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:17:54.435" level="INFO">Running command 'ozone sh key getacl o3://om:9862/54743-acls/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:17:58.500" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:17:58.500" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20220801 01:17:54.433" endtime="20220801 01:17:58.500"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:17:58.502" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20220801 01:17:58.501" endtime="20220801 01:17:58.502"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:17:58.502" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:17:58.502" endtime="20220801 01:17:58.502"/>
</kw>
<status status="PASS" starttime="20220801 01:17:54.433" endtime="20220801 01:17:58.503"/>
</kw>
<msg timestamp="20220801 01:17:58.503" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:17:54.432" endtime="20220801 01:17:58.503"/>
</kw>
<msg timestamp="20220801 01:17:58.503" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20220801 01:17:54.432" endtime="20220801 01:17:58.503"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220801 01:17:58.504" endtime="20220801 01:17:58.504"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key removeacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:17:58.508" level="INFO">Running command 'ozone sh key removeacl o3://om:9862/54743-acls/bb1/key2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:18:02.144" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:18:02.145" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20220801 01:17:58.506" endtime="20220801 01:18:02.145"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:18:02.146" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20220801 01:18:02.145" endtime="20220801 01:18:02.146"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:18:02.147" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:18:02.146" endtime="20220801 01:18:02.147"/>
</kw>
<status status="PASS" starttime="20220801 01:17:58.505" endtime="20220801 01:18:02.147"/>
</kw>
<msg timestamp="20220801 01:18:02.147" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:17:58.505" endtime="20220801 01:18:02.148"/>
</kw>
<msg timestamp="20220801 01:18:02.148" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20220801 01:17:58.505" endtime="20220801 01:18:02.148"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:18:02.151" level="INFO">Running command 'ozone sh key getacl o3://om:9862/54743-acls/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:18:06.155" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:18:06.155" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20220801 01:18:02.150" endtime="20220801 01:18:06.155"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:18:06.156" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" starttime="20220801 01:18:06.155" endtime="20220801 01:18:06.156"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:18:06.157" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:18:06.156" endtime="20220801 01:18:06.157"/>
</kw>
<status status="PASS" starttime="20220801 01:18:02.149" endtime="20220801 01:18:06.157"/>
</kw>
<msg timestamp="20220801 01:18:06.157" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:18:02.149" endtime="20220801 01:18:06.158"/>
</kw>
<msg timestamp="20220801 01:18:06.158" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20220801 01:18:02.148" endtime="20220801 01:18:06.158"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220801 01:18:06.158" endtime="20220801 01:18:06.159"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key setacl ${protocol}${server}/${volume}/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:18:06.162" level="INFO">Running command 'ozone sh key setacl o3://om:9862/54743-acls/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:18:09.913" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:18:09.913" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20220801 01:18:06.160" endtime="20220801 01:18:09.913"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:18:09.914" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20220801 01:18:09.913" endtime="20220801 01:18:09.914"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:18:09.915" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:18:09.914" endtime="20220801 01:18:09.915"/>
</kw>
<status status="PASS" starttime="20220801 01:18:06.160" endtime="20220801 01:18:09.915"/>
</kw>
<msg timestamp="20220801 01:18:09.915" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:18:06.159" endtime="20220801 01:18:09.916"/>
</kw>
<msg timestamp="20220801 01:18:09.916" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20220801 01:18:06.159" endtime="20220801 01:18:09.916"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:18:09.921" level="INFO">Running command 'ozone sh key getacl o3://om:9862/54743-acls/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:18:13.900" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:18:13.900" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20220801 01:18:09.918" endtime="20220801 01:18:13.900"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:18:13.901" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20220801 01:18:13.900" endtime="20220801 01:18:13.901"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:18:13.902" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:18:13.901" endtime="20220801 01:18:13.902"/>
</kw>
<status status="PASS" starttime="20220801 01:18:09.917" endtime="20220801 01:18:13.902"/>
</kw>
<msg timestamp="20220801 01:18:13.902" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:18:09.917" endtime="20220801 01:18:13.902"/>
</kw>
<msg timestamp="20220801 01:18:13.903" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20220801 01:18:09.916" endtime="20220801 01:18:13.903"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220801 01:18:13.903" endtime="20220801 01:18:13.903"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220801 01:18:13.903" endtime="20220801 01:18:13.904"/>
</kw>
<status status="PASS" starttime="20220801 01:17:40.741" endtime="20220801 01:18:13.904"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220801 01:17:40.714" endtime="20220801 01:18:13.905"/>
</test>
<test id="s1-s1-s5-t6" name="RpcClient prefix acls" line="41">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:18:13.910" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:18:13.914" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:18:13.914" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220801 01:18:13.908" endtime="20220801 01:18:13.914"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:18:13.915" level="INFO">scm</msg>
<status status="PASS" starttime="20220801 01:18:13.914" endtime="20220801 01:18:13.915"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:18:13.915" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:18:13.915" endtime="20220801 01:18:13.916"/>
</kw>
<status status="PASS" starttime="20220801 01:18:13.907" endtime="20220801 01:18:13.916"/>
</kw>
<msg timestamp="20220801 01:18:13.916" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:18:13.907" endtime="20220801 01:18:13.916"/>
</kw>
<msg timestamp="20220801 01:18:13.917" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220801 01:18:13.907" endtime="20220801 01:18:13.917"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220801 01:18:13.917" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220801 01:18:13.917" endtime="20220801 01:18:13.917"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:18:13.921" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:18:13.928" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:18:13.928" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:18:13.919" endtime="20220801 01:18:13.928"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:18:13.929" level="INFO"/>
<status status="PASS" starttime="20220801 01:18:13.929" endtime="20220801 01:18:13.930"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:18:13.930" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:18:13.930" endtime="20220801 01:18:13.930"/>
</kw>
<status status="PASS" starttime="20220801 01:18:13.919" endtime="20220801 01:18:13.930"/>
</kw>
<msg timestamp="20220801 01:18:13.931" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:18:13.919" endtime="20220801 01:18:13.931"/>
</kw>
<status status="PASS" starttime="20220801 01:18:13.918" endtime="20220801 01:18:13.931"/>
</kw>
<status status="PASS" starttime="20220801 01:18:13.917" endtime="20220801 01:18:13.931"/>
</kw>
<status status="PASS" starttime="20220801 01:18:13.906" endtime="20220801 01:18:13.931"/>
</kw>
<status status="PASS" starttime="20220801 01:18:13.906" endtime="20220801 01:18:13.931"/>
</kw>
<kw name="Test prefix Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-acls</arg>
<kw name="Execute" library="os">
<arg>ozone sh prefix addacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:18:13.935" level="INFO">Running command 'ozone sh prefix addacl o3://om:9862/54743-acls/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:18:17.835" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:18:17.835" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20220801 01:18:13.933" endtime="20220801 01:18:17.835"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:18:17.836" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20220801 01:18:17.835" endtime="20220801 01:18:17.836"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:18:17.837" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:18:17.836" endtime="20220801 01:18:17.837"/>
</kw>
<status status="PASS" starttime="20220801 01:18:13.933" endtime="20220801 01:18:17.837"/>
</kw>
<msg timestamp="20220801 01:18:17.837" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:18:13.933" endtime="20220801 01:18:17.838"/>
</kw>
<status status="PASS" starttime="20220801 01:18:13.932" endtime="20220801 01:18:17.838"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:18:17.841" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/54743-acls/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:18:21.689" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:18:21.690" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20220801 01:18:17.839" endtime="20220801 01:18:21.690"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:18:21.691" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20220801 01:18:21.690" endtime="20220801 01:18:21.691"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:18:21.691" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:18:21.691" endtime="20220801 01:18:21.691"/>
</kw>
<status status="PASS" starttime="20220801 01:18:17.839" endtime="20220801 01:18:21.692"/>
</kw>
<msg timestamp="20220801 01:18:21.692" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:18:17.839" endtime="20220801 01:18:21.692"/>
</kw>
<msg timestamp="20220801 01:18:21.693" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20220801 01:18:17.838" endtime="20220801 01:18:21.693"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220801 01:18:21.693" endtime="20220801 01:18:21.694"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix removeacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:18:21.698" level="INFO">Running command 'ozone sh prefix removeacl o3://om:9862/54743-acls/bb1/prefix1/ -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:18:25.429" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:18:25.429" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20220801 01:18:21.696" endtime="20220801 01:18:25.429"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:18:25.430" level="INFO">ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20220801 01:18:25.429" endtime="20220801 01:18:25.430"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:18:25.431" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:18:25.430" endtime="20220801 01:18:25.431"/>
</kw>
<status status="PASS" starttime="20220801 01:18:21.695" endtime="20220801 01:18:25.431"/>
</kw>
<msg timestamp="20220801 01:18:25.431" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:18:21.694" endtime="20220801 01:18:25.431"/>
</kw>
<msg timestamp="20220801 01:18:25.432" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20220801 01:18:21.694" endtime="20220801 01:18:25.432"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:18:25.435" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/54743-acls/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:18:29.308" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:18:29.308" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20220801 01:18:25.433" endtime="20220801 01:18:29.309"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:18:29.310" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20220801 01:18:29.309" endtime="20220801 01:18:29.310"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:18:29.310" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:18:29.310" endtime="20220801 01:18:29.310"/>
</kw>
<status status="PASS" starttime="20220801 01:18:25.433" endtime="20220801 01:18:29.311"/>
</kw>
<msg timestamp="20220801 01:18:29.311" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:18:25.432" endtime="20220801 01:18:29.311"/>
</kw>
<msg timestamp="20220801 01:18:29.311" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20220801 01:18:25.432" endtime="20220801 01:18:29.312"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220801 01:18:29.312" endtime="20220801 01:18:29.312"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix setacl ${protocol}${server}/${volume}/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:18:29.316" level="INFO">Running command 'ozone sh prefix setacl o3://om:9862/54743-acls/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:18:32.988" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:18:32.988" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20220801 01:18:29.314" endtime="20220801 01:18:32.988"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:18:32.990" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20220801 01:18:32.989" endtime="20220801 01:18:32.990"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:18:32.990" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:18:32.990" endtime="20220801 01:18:32.990"/>
</kw>
<status status="PASS" starttime="20220801 01:18:29.313" endtime="20220801 01:18:32.991"/>
</kw>
<msg timestamp="20220801 01:18:32.991" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:18:29.313" endtime="20220801 01:18:32.991"/>
</kw>
<msg timestamp="20220801 01:18:32.991" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20220801 01:18:29.313" endtime="20220801 01:18:32.991"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:18:32.995" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/54743-acls/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:18:36.932" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:18:36.933" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "D...</msg>
<status status="PASS" starttime="20220801 01:18:32.993" endtime="20220801 01:18:36.933"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:18:36.934" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20220801 01:18:36.933" endtime="20220801 01:18:36.934"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:18:36.934" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:18:36.934" endtime="20220801 01:18:36.935"/>
</kw>
<status status="PASS" starttime="20220801 01:18:32.992" endtime="20220801 01:18:36.935"/>
</kw>
<msg timestamp="20220801 01:18:36.935" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:18:32.992" endtime="20220801 01:18:36.935"/>
</kw>
<msg timestamp="20220801 01:18:36.936" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "D...</msg>
<status status="PASS" starttime="20220801 01:18:32.992" endtime="20220801 01:18:36.936"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220801 01:18:36.936" endtime="20220801 01:18:36.936"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220801 01:18:36.936" endtime="20220801 01:18:36.937"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:18:36.941" level="INFO">Running command 'ozone sh key put o3://om:9862/54743-acls/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:18:42.736" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:18:42.737" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:18:36.938" endtime="20220801 01:18:42.737"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:18:42.738" level="INFO"/>
<status status="PASS" starttime="20220801 01:18:42.737" endtime="20220801 01:18:42.738"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:18:42.738" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:18:42.738" endtime="20220801 01:18:42.738"/>
</kw>
<status status="PASS" starttime="20220801 01:18:36.938" endtime="20220801 01:18:42.739"/>
</kw>
<msg timestamp="20220801 01:18:42.739" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:18:36.938" endtime="20220801 01:18:42.739"/>
</kw>
<status status="PASS" starttime="20220801 01:18:36.937" endtime="20220801 01:18:42.739"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/prefix1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:18:42.743" level="INFO">Running command 'ozone sh key getacl o3://om:9862/54743-acls/bb1/prefix1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:18:46.557" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:18:46.557" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20220801 01:18:42.741" endtime="20220801 01:18:46.557"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:18:46.558" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20220801 01:18:46.558" endtime="20220801 01:18:46.558"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:18:46.559" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:18:46.559" endtime="20220801 01:18:46.559"/>
</kw>
<status status="PASS" starttime="20220801 01:18:42.741" endtime="20220801 01:18:46.559"/>
</kw>
<msg timestamp="20220801 01:18:46.559" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:18:42.740" endtime="20220801 01:18:46.560"/>
</kw>
<msg timestamp="20220801 01:18:46.560" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20220801 01:18:42.740" endtime="20220801 01:18:46.560"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220801 01:18:46.560" endtime="20220801 01:18:46.561"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220801 01:18:46.561" endtime="20220801 01:18:46.561"/>
</kw>
<status status="PASS" starttime="20220801 01:18:13.932" endtime="20220801 01:18:46.562"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220801 01:18:13.905" endtime="20220801 01:18:46.562"/>
</test>
<test id="s1-s1-s5-t7" name="RpcClient without host" line="44">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:18:46.567" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:18:46.570" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:18:46.570" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220801 01:18:46.565" endtime="20220801 01:18:46.570"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:18:46.571" level="INFO">scm</msg>
<status status="PASS" starttime="20220801 01:18:46.570" endtime="20220801 01:18:46.571"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:18:46.572" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:18:46.571" endtime="20220801 01:18:46.572"/>
</kw>
<status status="PASS" starttime="20220801 01:18:46.565" endtime="20220801 01:18:46.572"/>
</kw>
<msg timestamp="20220801 01:18:46.572" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:18:46.564" endtime="20220801 01:18:46.572"/>
</kw>
<msg timestamp="20220801 01:18:46.573" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220801 01:18:46.564" endtime="20220801 01:18:46.573"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220801 01:18:46.573" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220801 01:18:46.573" endtime="20220801 01:18:46.573"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:18:46.577" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:18:46.584" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:18:46.584" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:18:46.575" endtime="20220801 01:18:46.584"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:18:46.585" level="INFO"/>
<status status="PASS" starttime="20220801 01:18:46.584" endtime="20220801 01:18:46.585"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:18:46.585" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:18:46.585" endtime="20220801 01:18:46.585"/>
</kw>
<status status="PASS" starttime="20220801 01:18:46.575" endtime="20220801 01:18:46.586"/>
</kw>
<msg timestamp="20220801 01:18:46.586" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:18:46.574" endtime="20220801 01:18:46.586"/>
</kw>
<status status="PASS" starttime="20220801 01:18:46.574" endtime="20220801 01:18:46.586"/>
</kw>
<status status="PASS" starttime="20220801 01:18:46.573" endtime="20220801 01:18:46.587"/>
</kw>
<status status="PASS" starttime="20220801 01:18:46.563" endtime="20220801 01:18:46.587"/>
</kw>
<status status="PASS" starttime="20220801 01:18:46.563" endtime="20220801 01:18:46.587"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-without-host</arg>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:18:46.592" level="INFO">Running command 'ozone sh volume info o3:///54743-without-host 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:18:50.267" level="INFO">${rc} = 255</msg>
<msg timestamp="20220801 01:18:50.267" level="INFO">${output} = VOLUME_NOT_FOUND Volume 54743-without-host is not found</msg>
<status status="PASS" starttime="20220801 01:18:46.590" endtime="20220801 01:18:50.267"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:18:50.268" level="INFO">VOLUME_NOT_FOUND Volume 54743-without-host is not found</msg>
<status status="PASS" starttime="20220801 01:18:50.268" endtime="20220801 01:18:50.268"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:18:50.269" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:18:50.269" endtime="20220801 01:18:50.269"/>
</kw>
<msg timestamp="20220801 01:18:50.269" level="INFO">${result} = VOLUME_NOT_FOUND Volume 54743-without-host is not found</msg>
<status status="PASS" starttime="20220801 01:18:46.588" endtime="20220801 01:18:50.269"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220801 01:18:50.270" endtime="20220801 01:18:50.270"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:18:50.273" level="INFO">Running command 'ozone sh volume create o3:///54743-without-host --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:18:54.023" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:18:54.023" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:18:50.272" endtime="20220801 01:18:54.023"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:18:54.024" level="INFO"/>
<status status="PASS" starttime="20220801 01:18:54.024" endtime="20220801 01:18:54.025"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:18:54.025" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:18:54.025" endtime="20220801 01:18:54.025"/>
</kw>
<status status="PASS" starttime="20220801 01:18:50.271" endtime="20220801 01:18:54.026"/>
</kw>
<msg timestamp="20220801 01:18:54.026" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:18:50.271" endtime="20220801 01:18:54.026"/>
</kw>
<msg timestamp="20220801 01:18:54.026" level="INFO">${result} = </msg>
<status status="PASS" starttime="20220801 01:18:50.270" endtime="20220801 01:18:54.026"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220801 01:18:54.027" endtime="20220801 01:18:54.027"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:18:54.030" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '.[] | select(.name=="54743-without-host")' 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:18:57.988" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:18:57.988" level="INFO">${output} = {
  "metadata": {},
  "name": "54743-without-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": ...</msg>
<status status="PASS" starttime="20220801 01:18:54.028" endtime="20220801 01:18:57.988"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:18:57.990" level="INFO">{
  "metadata": {},
  "name": "54743-without-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2022-08-01T01:18:53.835Z",
  "modificationTime": "2022-08-01T01:18:53.835Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "refCount": 0
}</msg>
<status status="PASS" starttime="20220801 01:18:57.989" endtime="20220801 01:18:57.990"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:18:57.990" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:18:57.990" endtime="20220801 01:18:57.990"/>
</kw>
<status status="PASS" starttime="20220801 01:18:54.028" endtime="20220801 01:18:57.991"/>
</kw>
<msg timestamp="20220801 01:18:57.991" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:18:54.028" endtime="20220801 01:18:57.991"/>
</kw>
<msg timestamp="20220801 01:18:57.991" level="INFO">${result} = {
  "metadata": {},
  "name": "54743-without-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": ...</msg>
<status status="PASS" starttime="20220801 01:18:54.027" endtime="20220801 01:18:57.991"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220801 01:18:57.991" endtime="20220801 01:18:57.992"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:18:57.995" level="INFO">Running command 'ozone sh volume list | jq -r '.[] | select(.name=="54743-without-host")' 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:19:01.841" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:19:01.841" level="INFO">${output} = {
  "metadata": {},
  "name": "54743-without-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": ...</msg>
<status status="PASS" starttime="20220801 01:18:57.993" endtime="20220801 01:19:01.841"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:19:01.842" level="INFO">{
  "metadata": {},
  "name": "54743-without-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2022-08-01T01:18:53.835Z",
  "modificationTime": "2022-08-01T01:18:53.835Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "refCount": 0
}</msg>
<status status="PASS" starttime="20220801 01:19:01.841" endtime="20220801 01:19:01.842"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:19:01.843" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:19:01.842" endtime="20220801 01:19:01.843"/>
</kw>
<status status="PASS" starttime="20220801 01:18:57.993" endtime="20220801 01:19:01.843"/>
</kw>
<msg timestamp="20220801 01:19:01.843" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:18:57.993" endtime="20220801 01:19:01.844"/>
</kw>
<msg timestamp="20220801 01:19:01.844" level="INFO">${result} = {
  "metadata": {},
  "name": "54743-without-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": ...</msg>
<status status="PASS" starttime="20220801 01:18:57.992" endtime="20220801 01:19:01.844"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220801 01:19:01.844" endtime="20220801 01:19:01.845"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:19:01.848" level="INFO">Running command 'ozone sh volume setquota o3:///54743-without-host --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:19:05.612" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:19:05.612" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:19:01.846" endtime="20220801 01:19:05.612"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:19:05.614" level="INFO"/>
<status status="PASS" starttime="20220801 01:19:05.613" endtime="20220801 01:19:05.614"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:19:05.614" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:19:05.614" endtime="20220801 01:19:05.614"/>
</kw>
<status status="PASS" starttime="20220801 01:19:01.846" endtime="20220801 01:19:05.615"/>
</kw>
<msg timestamp="20220801 01:19:05.615" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:19:01.845" endtime="20220801 01:19:05.615"/>
</kw>
<status status="PASS" starttime="20220801 01:19:01.845" endtime="20220801 01:19:05.615"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:19:05.620" level="INFO">Running command 'ozone sh volume info o3:///54743-without-host | jq -r '. | select(.name=="54743-without-host") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:19:09.618" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:19:09.618" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20220801 01:19:05.618" endtime="20220801 01:19:09.618"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:19:09.619" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20220801 01:19:09.618" endtime="20220801 01:19:09.619"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:19:09.620" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:19:09.619" endtime="20220801 01:19:09.620"/>
</kw>
<status status="PASS" starttime="20220801 01:19:05.617" endtime="20220801 01:19:09.620"/>
</kw>
<msg timestamp="20220801 01:19:09.620" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:19:05.617" endtime="20220801 01:19:09.621"/>
</kw>
<msg timestamp="20220801 01:19:09.621" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20220801 01:19:05.616" endtime="20220801 01:19:09.621"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220801 01:19:09.621" endtime="20220801 01:19:09.622"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:19:09.625" level="INFO">Running command 'ozone sh bucket create o3:///54743-without-host/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:19:13.294" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:19:13.294" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:19:09.623" endtime="20220801 01:19:13.294"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:19:13.295" level="INFO"/>
<status status="PASS" starttime="20220801 01:19:13.295" endtime="20220801 01:19:13.296"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:19:13.296" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:19:13.296" endtime="20220801 01:19:13.296"/>
</kw>
<status status="PASS" starttime="20220801 01:19:09.623" endtime="20220801 01:19:13.296"/>
</kw>
<msg timestamp="20220801 01:19:13.297" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:19:09.622" endtime="20220801 01:19:13.297"/>
</kw>
<status status="PASS" starttime="20220801 01:19:09.622" endtime="20220801 01:19:13.297"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:19:13.301" level="INFO">Running command 'ozone sh bucket info o3:///54743-without-host/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:19:17.229" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:19:17.229" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20220801 01:19:13.299" endtime="20220801 01:19:17.229"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:19:17.230" level="INFO">DISK</msg>
<status status="PASS" starttime="20220801 01:19:17.229" endtime="20220801 01:19:17.230"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:19:17.231" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:19:17.230" endtime="20220801 01:19:17.231"/>
</kw>
<status status="PASS" starttime="20220801 01:19:13.298" endtime="20220801 01:19:17.231"/>
</kw>
<msg timestamp="20220801 01:19:17.231" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:19:13.298" endtime="20220801 01:19:17.231"/>
</kw>
<msg timestamp="20220801 01:19:17.232" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20220801 01:19:13.297" endtime="20220801 01:19:17.232"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220801 01:19:17.232" endtime="20220801 01:19:17.232"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:19:17.236" level="INFO">Running command 'ozone sh bucket info o3:///54743-without-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:19:21.393" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:19:21.393" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20220801 01:19:17.234" endtime="20220801 01:19:21.393"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:19:21.394" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20220801 01:19:21.393" endtime="20220801 01:19:21.394"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:19:21.394" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:19:21.394" endtime="20220801 01:19:21.394"/>
</kw>
<status status="PASS" starttime="20220801 01:19:17.234" endtime="20220801 01:19:21.395"/>
</kw>
<msg timestamp="20220801 01:19:21.395" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:19:17.233" endtime="20220801 01:19:21.395"/>
</kw>
<msg timestamp="20220801 01:19:21.396" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20220801 01:19:17.232" endtime="20220801 01:19:21.396"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220801 01:19:21.396" endtime="20220801 01:19:21.396"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:19:21.400" level="INFO">Running command 'ozone sh bucket info o3:///54743-without-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:19:25.296" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:19:25.296" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20220801 01:19:21.398" endtime="20220801 01:19:25.296"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:19:25.297" level="INFO">100</msg>
<status status="PASS" starttime="20220801 01:19:25.297" endtime="20220801 01:19:25.297"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:19:25.298" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:19:25.298" endtime="20220801 01:19:25.298"/>
</kw>
<status status="PASS" starttime="20220801 01:19:21.398" endtime="20220801 01:19:25.298"/>
</kw>
<msg timestamp="20220801 01:19:25.298" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:19:21.397" endtime="20220801 01:19:25.299"/>
</kw>
<msg timestamp="20220801 01:19:25.299" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20220801 01:19:21.396" endtime="20220801 01:19:25.299"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220801 01:19:25.299" endtime="20220801 01:19:25.300"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:19:25.303" level="INFO">Running command 'ozone sh bucket setquota o3:///54743-without-host/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:19:29.187" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:19:29.188" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:19:25.301" endtime="20220801 01:19:29.188"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:19:29.189" level="INFO"/>
<status status="PASS" starttime="20220801 01:19:29.188" endtime="20220801 01:19:29.189"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:19:29.189" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:19:29.189" endtime="20220801 01:19:29.190"/>
</kw>
<status status="PASS" starttime="20220801 01:19:25.301" endtime="20220801 01:19:29.190"/>
</kw>
<msg timestamp="20220801 01:19:29.190" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:19:25.300" endtime="20220801 01:19:29.190"/>
</kw>
<status status="PASS" starttime="20220801 01:19:25.300" endtime="20220801 01:19:29.191"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:19:29.194" level="INFO">Running command 'ozone sh bucket info o3:///54743-without-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:19:33.219" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:19:33.219" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20220801 01:19:29.192" endtime="20220801 01:19:33.219"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:19:33.220" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20220801 01:19:33.220" endtime="20220801 01:19:33.220"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:19:33.221" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:19:33.220" endtime="20220801 01:19:33.221"/>
</kw>
<status status="PASS" starttime="20220801 01:19:29.192" endtime="20220801 01:19:33.221"/>
</kw>
<msg timestamp="20220801 01:19:33.221" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:19:29.192" endtime="20220801 01:19:33.222"/>
</kw>
<msg timestamp="20220801 01:19:33.222" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20220801 01:19:29.191" endtime="20220801 01:19:33.222"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220801 01:19:33.222" endtime="20220801 01:19:33.223"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:19:33.226" level="INFO">Running command 'ozone sh bucket info o3:///54743-without-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:19:37.224" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:19:37.225" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20220801 01:19:33.224" endtime="20220801 01:19:37.225"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:19:37.226" level="INFO">1000</msg>
<status status="PASS" starttime="20220801 01:19:37.225" endtime="20220801 01:19:37.226"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:19:37.226" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:19:37.226" endtime="20220801 01:19:37.226"/>
</kw>
<status status="PASS" starttime="20220801 01:19:33.224" endtime="20220801 01:19:37.227"/>
</kw>
<msg timestamp="20220801 01:19:37.227" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:19:33.224" endtime="20220801 01:19:37.227"/>
</kw>
<msg timestamp="20220801 01:19:37.227" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20220801 01:19:33.223" endtime="20220801 01:19:37.228"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220801 01:19:37.228" endtime="20220801 01:19:37.228"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '.[] | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:19:37.232" level="INFO">Running command 'ozone sh bucket list o3:///54743-without-host/ | jq -r '.[] | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:19:41.118" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:19:41.119" level="INFO">${output} = 54743-without-host</msg>
<status status="PASS" starttime="20220801 01:19:37.230" endtime="20220801 01:19:41.119"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:19:41.120" level="INFO">54743-without-host</msg>
<status status="PASS" starttime="20220801 01:19:41.119" endtime="20220801 01:19:41.120"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:19:41.120" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:19:41.120" endtime="20220801 01:19:41.121"/>
</kw>
<status status="PASS" starttime="20220801 01:19:37.229" endtime="20220801 01:19:41.121"/>
</kw>
<msg timestamp="20220801 01:19:41.121" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:19:37.229" endtime="20220801 01:19:41.121"/>
</kw>
<msg timestamp="20220801 01:19:41.122" level="INFO">${result} = 54743-without-host</msg>
<status status="PASS" starttime="20220801 01:19:37.228" endtime="20220801 01:19:41.122"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220801 01:19:41.122" endtime="20220801 01:19:41.122"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:19:41.126" level="INFO">Running command 'ozone sh key put o3:///54743-without-host/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:19:47.148" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:19:47.148" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:19:41.125" endtime="20220801 01:19:47.148"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:19:47.149" level="INFO"/>
<status status="PASS" starttime="20220801 01:19:47.148" endtime="20220801 01:19:47.149"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:19:47.149" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:19:47.149" endtime="20220801 01:19:47.150"/>
</kw>
<status status="PASS" starttime="20220801 01:19:41.124" endtime="20220801 01:19:47.150"/>
</kw>
<msg timestamp="20220801 01:19:47.150" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:19:41.124" endtime="20220801 01:19:47.150"/>
</kw>
<status status="PASS" starttime="20220801 01:19:41.123" endtime="20220801 01:19:47.151"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:19:47.154" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:19:47.156" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:19:47.156" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:19:47.152" endtime="20220801 01:19:47.156"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:19:47.157" level="INFO"/>
<status status="PASS" starttime="20220801 01:19:47.157" endtime="20220801 01:19:47.157"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:19:47.158" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:19:47.158" endtime="20220801 01:19:47.158"/>
</kw>
<status status="PASS" starttime="20220801 01:19:47.151" endtime="20220801 01:19:47.158"/>
</kw>
<msg timestamp="20220801 01:19:47.158" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:19:47.151" endtime="20220801 01:19:47.159"/>
</kw>
<status status="PASS" starttime="20220801 01:19:47.151" endtime="20220801 01:19:47.159"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:19:47.163" level="INFO">Running command 'ozone sh key get o3:///54743-without-host/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:19:52.895" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:19:52.895" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:19:47.161" endtime="20220801 01:19:52.895"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:19:52.896" level="INFO"/>
<status status="PASS" starttime="20220801 01:19:52.895" endtime="20220801 01:19:52.896"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:19:52.897" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:19:52.896" endtime="20220801 01:19:52.897"/>
</kw>
<status status="PASS" starttime="20220801 01:19:47.160" endtime="20220801 01:19:52.897"/>
</kw>
<msg timestamp="20220801 01:19:52.897" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:19:47.160" endtime="20220801 01:19:52.898"/>
</kw>
<status status="PASS" starttime="20220801 01:19:47.159" endtime="20220801 01:19:52.898"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:19:52.902" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:19:52.905" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:19:52.905" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:19:52.899" endtime="20220801 01:19:52.905"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:19:52.906" level="INFO"/>
<status status="PASS" starttime="20220801 01:19:52.905" endtime="20220801 01:19:52.906"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:19:52.907" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:19:52.906" endtime="20220801 01:19:52.907"/>
</kw>
<status status="PASS" starttime="20220801 01:19:52.899" endtime="20220801 01:19:52.907"/>
</kw>
<msg timestamp="20220801 01:19:52.907" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:19:52.899" endtime="20220801 01:19:52.908"/>
</kw>
<status status="PASS" starttime="20220801 01:19:52.898" endtime="20220801 01:19:52.908"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:19:52.911" level="INFO">Running command 'ozone sh key put -t RATIS o3:///54743-without-host/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:19:58.950" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:19:58.950" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:19:52.910" endtime="20220801 01:19:58.950"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:19:58.951" level="INFO"/>
<status status="PASS" starttime="20220801 01:19:58.951" endtime="20220801 01:19:58.951"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:19:58.952" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:19:58.952" endtime="20220801 01:19:58.952"/>
</kw>
<status status="PASS" starttime="20220801 01:19:52.909" endtime="20220801 01:19:58.952"/>
</kw>
<msg timestamp="20220801 01:19:58.953" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:19:52.909" endtime="20220801 01:19:58.953"/>
</kw>
<status status="PASS" starttime="20220801 01:19:52.908" endtime="20220801 01:19:58.953"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:19:58.957" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:19:58.959" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:19:58.959" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:19:58.955" endtime="20220801 01:19:58.959"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:19:58.960" level="INFO"/>
<status status="PASS" starttime="20220801 01:19:58.959" endtime="20220801 01:19:58.960"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:19:58.961" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:19:58.960" endtime="20220801 01:19:58.961"/>
</kw>
<status status="PASS" starttime="20220801 01:19:58.954" endtime="20220801 01:19:58.961"/>
</kw>
<msg timestamp="20220801 01:19:58.961" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:19:58.954" endtime="20220801 01:19:58.962"/>
</kw>
<status status="PASS" starttime="20220801 01:19:58.953" endtime="20220801 01:19:58.962"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:19:58.965" level="INFO">Running command 'ozone sh key get o3:///54743-without-host/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:20:04.827" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:20:04.827" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:19:58.963" endtime="20220801 01:20:04.827"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:20:04.828" level="INFO"/>
<status status="PASS" starttime="20220801 01:20:04.827" endtime="20220801 01:20:04.828"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:20:04.829" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:20:04.828" endtime="20220801 01:20:04.829"/>
</kw>
<status status="PASS" starttime="20220801 01:19:58.963" endtime="20220801 01:20:04.829"/>
</kw>
<msg timestamp="20220801 01:20:04.829" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:19:58.963" endtime="20220801 01:20:04.830"/>
</kw>
<status status="PASS" starttime="20220801 01:19:58.962" endtime="20220801 01:20:04.830"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:20:04.833" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:20:04.836" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:20:04.836" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:20:04.831" endtime="20220801 01:20:04.836"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:20:04.837" level="INFO"/>
<status status="PASS" starttime="20220801 01:20:04.836" endtime="20220801 01:20:04.837"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:20:04.837" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:20:04.837" endtime="20220801 01:20:04.837"/>
</kw>
<status status="PASS" starttime="20220801 01:20:04.831" endtime="20220801 01:20:04.838"/>
</kw>
<msg timestamp="20220801 01:20:04.838" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:20:04.830" endtime="20220801 01:20:04.838"/>
</kw>
<status status="PASS" starttime="20220801 01:20:04.830" endtime="20220801 01:20:04.838"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:20:04.843" level="INFO">Running command 'ozone sh key info o3:///54743-without-host/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:20:08.890" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:20:08.890" level="INFO">${output} = {
  "volumeName": "54743-without-host",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17526,
  "creationTime": "2022-08-01T01:19:56.430Z",
  "modificationTime": "2022-08-01T01:19:58.387...</msg>
<status status="PASS" starttime="20220801 01:20:04.841" endtime="20220801 01:20:08.890"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:20:08.891" level="INFO">{
  "volumeName": "54743-without-host",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17526,
  "creationTime": "2022-08-01T01:19:56.430Z",
  "modificationTime": "2022-08-01T01:19:58.387Z",
  "replicationConfig": {
    "replicationFactor": "THREE",
    "requiredNodes": 3,
    "replicationType": "RATIS"
  },
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 109611004723200020,
      "length": 17526,
      "offset": 0,
      "keyOffset": 0
    }
  ],
  "metadata": {}
}</msg>
<status status="PASS" starttime="20220801 01:20:08.891" endtime="20220801 01:20:08.891"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:20:08.892" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:20:08.892" endtime="20220801 01:20:08.892"/>
</kw>
<status status="PASS" starttime="20220801 01:20:04.840" endtime="20220801 01:20:08.892"/>
</kw>
<msg timestamp="20220801 01:20:08.892" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:20:04.839" endtime="20220801 01:20:08.893"/>
</kw>
<msg timestamp="20220801 01:20:08.893" level="INFO">${result} = {
  "volumeName": "54743-without-host",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17526,
  "creationTime": "2022-08-01T01:19:56.430Z",
  "modificationTime": "2022-08-01T01:19:58.387...</msg>
<status status="PASS" starttime="20220801 01:20:04.839" endtime="20220801 01:20:08.893"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220801 01:20:08.893" endtime="20220801 01:20:08.894"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:20:08.897" level="INFO">Running command 'ozone sh key delete o3:///54743-without-host/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:20:12.783" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:20:12.783" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:20:08.895" endtime="20220801 01:20:12.783"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:20:12.784" level="INFO"/>
<status status="PASS" starttime="20220801 01:20:12.783" endtime="20220801 01:20:12.784"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:20:12.785" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:20:12.784" endtime="20220801 01:20:12.785"/>
</kw>
<status status="PASS" starttime="20220801 01:20:08.895" endtime="20220801 01:20:12.785"/>
</kw>
<msg timestamp="20220801 01:20:12.785" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:20:08.894" endtime="20220801 01:20:12.786"/>
</kw>
<status status="PASS" starttime="20220801 01:20:08.894" endtime="20220801 01:20:12.786"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:20:12.789" level="INFO">Running command 'ozone sh key cp o3:///54743-without-host/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:20:18.997" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:20:18.997" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:20:12.787" endtime="20220801 01:20:18.997"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:20:18.998" level="INFO"/>
<status status="PASS" starttime="20220801 01:20:18.997" endtime="20220801 01:20:18.998"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:20:18.999" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:20:18.998" endtime="20220801 01:20:18.999"/>
</kw>
<status status="PASS" starttime="20220801 01:20:12.787" endtime="20220801 01:20:18.999"/>
</kw>
<msg timestamp="20220801 01:20:18.999" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:20:12.787" endtime="20220801 01:20:19.000"/>
</kw>
<status status="PASS" starttime="20220801 01:20:12.786" endtime="20220801 01:20:19.000"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:20:19.003" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:20:19.006" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:20:19.006" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:20:19.001" endtime="20220801 01:20:19.006"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:20:19.007" level="INFO"/>
<status status="PASS" starttime="20220801 01:20:19.006" endtime="20220801 01:20:19.007"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:20:19.007" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:20:19.007" endtime="20220801 01:20:19.007"/>
</kw>
<status status="PASS" starttime="20220801 01:20:19.001" endtime="20220801 01:20:19.008"/>
</kw>
<msg timestamp="20220801 01:20:19.008" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:20:19.000" endtime="20220801 01:20:19.008"/>
</kw>
<status status="PASS" starttime="20220801 01:20:19.000" endtime="20220801 01:20:19.009"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:20:19.012" level="INFO">Running command 'ozone sh key get o3:///54743-without-host/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:20:24.536" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:20:24.536" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:20:19.010" endtime="20220801 01:20:24.536"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:20:24.538" level="INFO"/>
<status status="PASS" starttime="20220801 01:20:24.537" endtime="20220801 01:20:24.538"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:20:24.538" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:20:24.538" endtime="20220801 01:20:24.538"/>
</kw>
<status status="PASS" starttime="20220801 01:20:19.010" endtime="20220801 01:20:24.539"/>
</kw>
<msg timestamp="20220801 01:20:24.539" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:20:19.009" endtime="20220801 01:20:24.539"/>
</kw>
<status status="PASS" starttime="20220801 01:20:19.009" endtime="20220801 01:20:24.539"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:20:24.543" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:20:24.546" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:20:24.546" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:20:24.541" endtime="20220801 01:20:24.546"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:20:24.547" level="INFO"/>
<status status="PASS" starttime="20220801 01:20:24.546" endtime="20220801 01:20:24.547"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:20:24.547" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:20:24.547" endtime="20220801 01:20:24.547"/>
</kw>
<status status="PASS" starttime="20220801 01:20:24.541" endtime="20220801 01:20:24.548"/>
</kw>
<msg timestamp="20220801 01:20:24.548" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:20:24.540" endtime="20220801 01:20:24.549"/>
</kw>
<status status="PASS" starttime="20220801 01:20:24.540" endtime="20220801 01:20:24.549"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:20:24.552" level="INFO">Running command 'ozone sh key delete o3:///54743-without-host/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:20:28.440" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:20:28.440" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:20:24.550" endtime="20220801 01:20:28.440"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:20:28.442" level="INFO"/>
<status status="PASS" starttime="20220801 01:20:28.441" endtime="20220801 01:20:28.442"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:20:28.442" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:20:28.442" endtime="20220801 01:20:28.442"/>
</kw>
<status status="PASS" starttime="20220801 01:20:24.550" endtime="20220801 01:20:28.443"/>
</kw>
<msg timestamp="20220801 01:20:28.443" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:20:24.550" endtime="20220801 01:20:28.443"/>
</kw>
<status status="PASS" starttime="20220801 01:20:24.549" endtime="20220801 01:20:28.444"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:20:28.446" level="INFO">Running command 'ozone sh key get o3:///54743-without-host/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:20:32.166" level="INFO">${rc} = 255</msg>
<msg timestamp="20220801 01:20:32.166" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20220801 01:20:28.444" endtime="20220801 01:20:32.166"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:20:32.167" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20220801 01:20:32.166" endtime="20220801 01:20:32.167"/>
</kw>
<msg timestamp="20220801 01:20:32.167" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20220801 01:20:28.444" endtime="20220801 01:20:32.168"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220801 01:20:32.168" endtime="20220801 01:20:32.168"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:20:32.172" level="INFO">Running command 'ozone sh key get --force o3:///54743-without-host/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:20:38.081" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:20:38.081" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:20:32.170" endtime="20220801 01:20:38.081"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:20:38.082" level="INFO"/>
<status status="PASS" starttime="20220801 01:20:38.081" endtime="20220801 01:20:38.082"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:20:38.083" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:20:38.082" endtime="20220801 01:20:38.083"/>
</kw>
<status status="PASS" starttime="20220801 01:20:32.169" endtime="20220801 01:20:38.083"/>
</kw>
<msg timestamp="20220801 01:20:38.083" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:20:32.169" endtime="20220801 01:20:38.084"/>
</kw>
<msg timestamp="20220801 01:20:38.084" level="INFO">${result} = </msg>
<status status="PASS" starttime="20220801 01:20:32.168" endtime="20220801 01:20:38.084"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220801 01:20:38.084" endtime="20220801 01:20:38.085"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:20:38.088" level="INFO">Running command 'ozone sh key info o3:///54743-without-host/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:20:42.450" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:20:42.450" level="INFO">${output} = {
  "volumeName": "54743-without-host",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17526,
  "creationTime": "2022-08-01T01:19:44.841Z",
  "modificationTime": "2022-08-01T01:19:46.623Z",
  ...</msg>
<status status="PASS" starttime="20220801 01:20:38.086" endtime="20220801 01:20:42.450"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:20:42.451" level="INFO">{
  "volumeName": "54743-without-host",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17526,
  "creationTime": "2022-08-01T01:19:44.841Z",
  "modificationTime": "2022-08-01T01:19:46.623Z",
  "replicationConfig": {
    "replicationFactor": "ONE",
    "requiredNodes": 1,
    "replicationType": "RATIS"
  },
  "ozoneKeyLocations": [
    {
      "containerID": 2,
      "localID": 109611004723200020,
      "length": 17526,
      "offset": 0,
      "keyOffset": 0
    }
  ],
  "metadata": {}
}</msg>
<status status="PASS" starttime="20220801 01:20:42.450" endtime="20220801 01:20:42.451"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:20:42.452" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:20:42.451" endtime="20220801 01:20:42.452"/>
</kw>
<status status="PASS" starttime="20220801 01:20:38.086" endtime="20220801 01:20:42.452"/>
</kw>
<msg timestamp="20220801 01:20:42.452" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:20:38.086" endtime="20220801 01:20:42.453"/>
</kw>
<msg timestamp="20220801 01:20:42.453" level="INFO">${result} = {
  "volumeName": "54743-without-host",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17526,
  "creationTime": "2022-08-01T01:19:44.841Z",
  "modificationTime": "2022-08-01T01:19:46.623Z",
  ...</msg>
<status status="PASS" starttime="20220801 01:20:38.085" endtime="20220801 01:20:42.453"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220801 01:20:42.453" endtime="20220801 01:20:42.453"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[] | select(.name=="key1") | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:20:42.458" level="INFO">Running command 'ozone sh key list o3:///54743-without-host/bb1 | jq -r '.[] | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:20:46.615" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:20:46.615" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20220801 01:20:42.456" endtime="20220801 01:20:46.615"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:20:46.616" level="INFO">key1</msg>
<status status="PASS" starttime="20220801 01:20:46.615" endtime="20220801 01:20:46.616"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:20:46.617" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:20:46.616" endtime="20220801 01:20:46.617"/>
</kw>
<status status="PASS" starttime="20220801 01:20:42.455" endtime="20220801 01:20:46.617"/>
</kw>
<msg timestamp="20220801 01:20:46.617" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:20:42.454" endtime="20220801 01:20:46.618"/>
</kw>
<msg timestamp="20220801 01:20:46.618" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20220801 01:20:42.454" endtime="20220801 01:20:46.618"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220801 01:20:46.618" endtime="20220801 01:20:46.619"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:20:46.622" level="INFO">Running command 'ozone sh key rename o3:///54743-without-host/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:20:50.331" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:20:50.331" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:20:46.620" endtime="20220801 01:20:50.331"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:20:50.333" level="INFO"/>
<status status="PASS" starttime="20220801 01:20:50.332" endtime="20220801 01:20:50.333"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:20:50.333" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:20:50.333" endtime="20220801 01:20:50.333"/>
</kw>
<status status="PASS" starttime="20220801 01:20:46.620" endtime="20220801 01:20:50.334"/>
</kw>
<msg timestamp="20220801 01:20:50.334" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:20:46.620" endtime="20220801 01:20:50.334"/>
</kw>
<status status="PASS" starttime="20220801 01:20:46.619" endtime="20220801 01:20:50.335"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:20:50.338" level="INFO">Running command 'ozone sh key list o3:///54743-without-host/bb1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:20:54.229" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:20:54.229" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20220801 01:20:50.336" endtime="20220801 01:20:54.229"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:20:54.230" level="INFO">key2</msg>
<status status="PASS" starttime="20220801 01:20:54.229" endtime="20220801 01:20:54.230"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:20:54.231" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:20:54.230" endtime="20220801 01:20:54.231"/>
</kw>
<status status="PASS" starttime="20220801 01:20:50.336" endtime="20220801 01:20:54.231"/>
</kw>
<msg timestamp="20220801 01:20:54.231" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:20:50.335" endtime="20220801 01:20:54.232"/>
</kw>
<msg timestamp="20220801 01:20:54.232" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20220801 01:20:50.335" endtime="20220801 01:20:54.232"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220801 01:20:54.232" endtime="20220801 01:20:54.232"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:20:54.236" level="INFO">Running command 'ozone sh key delete o3:///54743-without-host/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:20:57.883" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:20:57.883" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:20:54.234" endtime="20220801 01:20:57.883"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:20:57.884" level="INFO"/>
<status status="PASS" starttime="20220801 01:20:57.884" endtime="20220801 01:20:57.884"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:20:57.885" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:20:57.885" endtime="20220801 01:20:57.885"/>
</kw>
<status status="PASS" starttime="20220801 01:20:54.233" endtime="20220801 01:20:57.885"/>
</kw>
<msg timestamp="20220801 01:20:57.885" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:20:54.233" endtime="20220801 01:20:57.886"/>
</kw>
<status status="PASS" starttime="20220801 01:20:54.232" endtime="20220801 01:20:57.886"/>
</kw>
<status status="PASS" starttime="20220801 01:19:41.123" endtime="20220801 01:20:57.886"/>
</kw>
<status status="PASS" starttime="20220801 01:19:41.122" endtime="20220801 01:20:57.886"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:20:57.890" level="INFO">Running command 'ozone sh volume clrquota --space-quota o3:///54743-without-host 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:21:01.664" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:21:01.664" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:20:57.888" endtime="20220801 01:21:01.664"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:21:01.665" level="INFO"/>
<status status="PASS" starttime="20220801 01:21:01.664" endtime="20220801 01:21:01.665"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:21:01.667" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:21:01.666" endtime="20220801 01:21:01.667"/>
</kw>
<status status="PASS" starttime="20220801 01:20:57.887" endtime="20220801 01:21:01.667"/>
</kw>
<msg timestamp="20220801 01:21:01.667" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:20:57.887" endtime="20220801 01:21:01.668"/>
</kw>
<status status="PASS" starttime="20220801 01:20:57.886" endtime="20220801 01:21:01.668"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:21:01.672" level="INFO">Running command 'ozone sh volume info o3:///54743-without-host | jq -r '. | select(.name=="54743-without-host") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:21:05.600" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:21:05.600" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20220801 01:21:01.670" endtime="20220801 01:21:05.600"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:21:05.601" level="INFO">-1</msg>
<status status="PASS" starttime="20220801 01:21:05.600" endtime="20220801 01:21:05.601"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:21:05.602" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:21:05.601" endtime="20220801 01:21:05.602"/>
</kw>
<status status="PASS" starttime="20220801 01:21:01.669" endtime="20220801 01:21:05.602"/>
</kw>
<msg timestamp="20220801 01:21:05.602" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:21:01.669" endtime="20220801 01:21:05.603"/>
</kw>
<msg timestamp="20220801 01:21:05.603" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20220801 01:21:01.668" endtime="20220801 01:21:05.603"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220801 01:21:05.603" endtime="20220801 01:21:05.603"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:21:05.607" level="INFO">Running command 'ozone sh volume clrquota --namespace-quota o3:///54743-without-host 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:21:09.438" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:21:09.438" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:21:05.605" endtime="20220801 01:21:09.438"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:21:09.439" level="INFO"/>
<status status="PASS" starttime="20220801 01:21:09.438" endtime="20220801 01:21:09.439"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:21:09.440" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:21:09.439" endtime="20220801 01:21:09.440"/>
</kw>
<status status="PASS" starttime="20220801 01:21:05.604" endtime="20220801 01:21:09.440"/>
</kw>
<msg timestamp="20220801 01:21:09.440" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:21:05.604" endtime="20220801 01:21:09.441"/>
</kw>
<status status="PASS" starttime="20220801 01:21:05.604" endtime="20220801 01:21:09.441"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:21:09.445" level="INFO">Running command 'ozone sh volume info o3:///54743-without-host | jq -r '. | select(.name=="54743-without-host") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:21:13.463" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:21:13.464" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20220801 01:21:09.443" endtime="20220801 01:21:13.464"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:21:13.465" level="INFO">-1</msg>
<status status="PASS" starttime="20220801 01:21:13.464" endtime="20220801 01:21:13.465"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:21:13.466" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:21:13.465" endtime="20220801 01:21:13.466"/>
</kw>
<status status="PASS" starttime="20220801 01:21:09.442" endtime="20220801 01:21:13.466"/>
</kw>
<msg timestamp="20220801 01:21:13.466" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:21:09.442" endtime="20220801 01:21:13.466"/>
</kw>
<msg timestamp="20220801 01:21:13.467" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20220801 01:21:09.441" endtime="20220801 01:21:13.467"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220801 01:21:13.467" endtime="20220801 01:21:13.467"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:21:13.471" level="INFO">Running command 'ozone sh bucket clrquota --space-quota o3:///54743-without-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:21:17.256" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:21:17.256" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:21:13.469" endtime="20220801 01:21:17.256"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:21:17.257" level="INFO"/>
<status status="PASS" starttime="20220801 01:21:17.257" endtime="20220801 01:21:17.257"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:21:17.258" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:21:17.258" endtime="20220801 01:21:17.258"/>
</kw>
<status status="PASS" starttime="20220801 01:21:13.468" endtime="20220801 01:21:17.258"/>
</kw>
<msg timestamp="20220801 01:21:17.258" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:21:13.468" endtime="20220801 01:21:17.259"/>
</kw>
<status status="PASS" starttime="20220801 01:21:13.467" endtime="20220801 01:21:17.259"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:21:17.263" level="INFO">Running command 'ozone sh bucket info o3:///54743-without-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:21:21.293" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:21:21.293" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20220801 01:21:17.262" endtime="20220801 01:21:21.293"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:21:21.295" level="INFO">-1</msg>
<status status="PASS" starttime="20220801 01:21:21.294" endtime="20220801 01:21:21.295"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:21:21.295" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:21:21.295" endtime="20220801 01:21:21.295"/>
</kw>
<status status="PASS" starttime="20220801 01:21:17.261" endtime="20220801 01:21:21.296"/>
</kw>
<msg timestamp="20220801 01:21:21.296" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:21:17.260" endtime="20220801 01:21:21.296"/>
</kw>
<msg timestamp="20220801 01:21:21.296" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20220801 01:21:17.260" endtime="20220801 01:21:21.297"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220801 01:21:21.297" endtime="20220801 01:21:21.297"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:21:21.301" level="INFO">Running command 'ozone sh bucket clrquota --namespace-quota o3:///54743-without-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:21:25.075" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:21:25.075" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:21:21.299" endtime="20220801 01:21:25.077"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:21:25.078" level="INFO"/>
<status status="PASS" starttime="20220801 01:21:25.077" endtime="20220801 01:21:25.078"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:21:25.079" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:21:25.078" endtime="20220801 01:21:25.079"/>
</kw>
<status status="PASS" starttime="20220801 01:21:21.298" endtime="20220801 01:21:25.079"/>
</kw>
<msg timestamp="20220801 01:21:25.079" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:21:21.298" endtime="20220801 01:21:25.080"/>
</kw>
<status status="PASS" starttime="20220801 01:21:21.297" endtime="20220801 01:21:25.080"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:21:25.084" level="INFO">Running command 'ozone sh bucket info o3:///54743-without-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:21:29.008" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:21:29.008" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20220801 01:21:25.082" endtime="20220801 01:21:29.008"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:21:29.009" level="INFO">-1</msg>
<status status="PASS" starttime="20220801 01:21:29.008" endtime="20220801 01:21:29.009"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:21:29.010" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:21:29.009" endtime="20220801 01:21:29.010"/>
</kw>
<status status="PASS" starttime="20220801 01:21:25.081" endtime="20220801 01:21:29.010"/>
</kw>
<msg timestamp="20220801 01:21:29.010" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:21:25.081" endtime="20220801 01:21:29.011"/>
</kw>
<msg timestamp="20220801 01:21:29.011" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20220801 01:21:25.080" endtime="20220801 01:21:29.011"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220801 01:21:29.011" endtime="20220801 01:21:29.012"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:21:29.015" level="INFO">Running command 'ozone sh bucket delete o3:///54743-without-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:21:32.785" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:21:32.785" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:21:29.013" endtime="20220801 01:21:32.785"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:21:32.786" level="INFO"/>
<status status="PASS" starttime="20220801 01:21:32.785" endtime="20220801 01:21:32.786"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:21:32.787" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:21:32.786" endtime="20220801 01:21:32.787"/>
</kw>
<status status="PASS" starttime="20220801 01:21:29.013" endtime="20220801 01:21:32.787"/>
</kw>
<msg timestamp="20220801 01:21:32.787" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:21:29.012" endtime="20220801 01:21:32.788"/>
</kw>
<status status="PASS" starttime="20220801 01:21:29.012" endtime="20220801 01:21:32.788"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:21:32.792" level="INFO">Running command 'ozone sh volume delete o3:///54743-without-host 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:21:36.479" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:21:36.479" level="INFO">${output} = Volume 54743-without-host is deleted</msg>
<status status="PASS" starttime="20220801 01:21:32.789" endtime="20220801 01:21:36.479"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:21:36.480" level="INFO">Volume 54743-without-host is deleted</msg>
<status status="PASS" starttime="20220801 01:21:36.479" endtime="20220801 01:21:36.480"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:21:36.481" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:21:36.480" endtime="20220801 01:21:36.481"/>
</kw>
<status status="PASS" starttime="20220801 01:21:32.789" endtime="20220801 01:21:36.481"/>
</kw>
<msg timestamp="20220801 01:21:36.481" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:21:32.789" endtime="20220801 01:21:36.482"/>
</kw>
<status status="PASS" starttime="20220801 01:21:32.788" endtime="20220801 01:21:36.482"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:21:36.485" level="INFO">Running command 'ozone sh volume create o3:///54743-without-host 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:21:40.281" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:21:40.281" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:21:36.483" endtime="20220801 01:21:40.282"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:21:40.283" level="INFO"/>
<status status="PASS" starttime="20220801 01:21:40.282" endtime="20220801 01:21:40.283"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:21:40.283" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:21:40.283" endtime="20220801 01:21:40.284"/>
</kw>
<status status="PASS" starttime="20220801 01:21:36.483" endtime="20220801 01:21:40.284"/>
</kw>
<msg timestamp="20220801 01:21:40.284" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:21:36.483" endtime="20220801 01:21:40.284"/>
</kw>
<status status="PASS" starttime="20220801 01:21:36.482" endtime="20220801 01:21:40.285"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:21:40.288" level="INFO">Running command 'ozone sh volume info o3:///54743-without-host | jq -r '. | select(.name=="54743-without-host") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:21:44.044" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:21:44.045" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20220801 01:21:40.286" endtime="20220801 01:21:44.045"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:21:44.046" level="INFO">-1</msg>
<status status="PASS" starttime="20220801 01:21:44.045" endtime="20220801 01:21:44.046"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:21:44.046" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:21:44.046" endtime="20220801 01:21:44.046"/>
</kw>
<status status="PASS" starttime="20220801 01:21:40.286" endtime="20220801 01:21:44.047"/>
</kw>
<msg timestamp="20220801 01:21:44.047" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:21:40.286" endtime="20220801 01:21:44.047"/>
</kw>
<msg timestamp="20220801 01:21:44.048" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20220801 01:21:40.285" endtime="20220801 01:21:44.048"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220801 01:21:44.048" endtime="20220801 01:21:44.048"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:21:44.052" level="INFO">Running command 'ozone sh volume info o3:///54743-without-host | jq -r '. | select(.name=="54743-without-host") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:21:48.070" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:21:48.070" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20220801 01:21:44.050" endtime="20220801 01:21:48.070"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:21:48.071" level="INFO">-1</msg>
<status status="PASS" starttime="20220801 01:21:48.071" endtime="20220801 01:21:48.071"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:21:48.072" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:21:48.072" endtime="20220801 01:21:48.072"/>
</kw>
<status status="PASS" starttime="20220801 01:21:44.050" endtime="20220801 01:21:48.072"/>
</kw>
<msg timestamp="20220801 01:21:48.073" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:21:44.049" endtime="20220801 01:21:48.073"/>
</kw>
<msg timestamp="20220801 01:21:48.073" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20220801 01:21:44.048" endtime="20220801 01:21:48.073"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220801 01:21:48.073" endtime="20220801 01:21:48.074"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:21:48.077" level="INFO">Running command 'ozone sh bucket create o3:///54743-without-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:21:51.980" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:21:51.980" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:21:48.075" endtime="20220801 01:21:51.980"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:21:51.981" level="INFO"/>
<status status="PASS" starttime="20220801 01:21:51.981" endtime="20220801 01:21:51.981"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:21:51.982" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:21:51.982" endtime="20220801 01:21:51.982"/>
</kw>
<status status="PASS" starttime="20220801 01:21:48.075" endtime="20220801 01:21:51.983"/>
</kw>
<msg timestamp="20220801 01:21:51.983" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:21:48.075" endtime="20220801 01:21:51.983"/>
</kw>
<status status="PASS" starttime="20220801 01:21:48.074" endtime="20220801 01:21:51.983"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:21:51.988" level="INFO">Running command 'ozone sh bucket info o3:///54743-without-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:21:55.989" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:21:55.989" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20220801 01:21:51.986" endtime="20220801 01:21:55.989"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:21:55.990" level="INFO">-1</msg>
<status status="PASS" starttime="20220801 01:21:55.990" endtime="20220801 01:21:55.990"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:21:55.991" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:21:55.990" endtime="20220801 01:21:55.991"/>
</kw>
<status status="PASS" starttime="20220801 01:21:51.985" endtime="20220801 01:21:55.991"/>
</kw>
<msg timestamp="20220801 01:21:55.991" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:21:51.984" endtime="20220801 01:21:55.992"/>
</kw>
<msg timestamp="20220801 01:21:55.992" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20220801 01:21:51.983" endtime="20220801 01:21:55.992"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220801 01:21:55.992" endtime="20220801 01:21:55.993"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:21:55.997" level="INFO">Running command 'ozone sh bucket info o3:///54743-without-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:21:59.930" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:21:59.930" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20220801 01:21:55.995" endtime="20220801 01:21:59.930"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:21:59.931" level="INFO">-1</msg>
<status status="PASS" starttime="20220801 01:21:59.930" endtime="20220801 01:21:59.931"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:21:59.932" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:21:59.931" endtime="20220801 01:21:59.932"/>
</kw>
<status status="PASS" starttime="20220801 01:21:55.994" endtime="20220801 01:21:59.932"/>
</kw>
<msg timestamp="20220801 01:21:59.932" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:21:55.994" endtime="20220801 01:21:59.933"/>
</kw>
<msg timestamp="20220801 01:21:59.933" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20220801 01:21:55.993" endtime="20220801 01:21:59.933"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220801 01:21:59.933" endtime="20220801 01:21:59.933"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:21:59.937" level="INFO">Running command 'ozone sh bucket delete o3:///54743-without-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:22:03.693" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:22:03.693" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:21:59.935" endtime="20220801 01:22:03.693"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:22:03.694" level="INFO"/>
<status status="PASS" starttime="20220801 01:22:03.694" endtime="20220801 01:22:03.694"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:22:03.695" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:22:03.695" endtime="20220801 01:22:03.695"/>
</kw>
<status status="PASS" starttime="20220801 01:21:59.934" endtime="20220801 01:22:03.695"/>
</kw>
<msg timestamp="20220801 01:22:03.695" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:21:59.934" endtime="20220801 01:22:03.696"/>
</kw>
<status status="PASS" starttime="20220801 01:21:59.933" endtime="20220801 01:22:03.696"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:22:03.700" level="INFO">Running command 'ozone sh volume delete o3:///54743-without-host 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:22:07.316" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:22:07.316" level="INFO">${output} = Volume 54743-without-host is deleted</msg>
<status status="PASS" starttime="20220801 01:22:03.698" endtime="20220801 01:22:07.316"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:22:07.317" level="INFO">Volume 54743-without-host is deleted</msg>
<status status="PASS" starttime="20220801 01:22:07.316" endtime="20220801 01:22:07.317"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:22:07.317" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:22:07.317" endtime="20220801 01:22:07.318"/>
</kw>
<status status="PASS" starttime="20220801 01:22:03.697" endtime="20220801 01:22:07.318"/>
</kw>
<msg timestamp="20220801 01:22:07.318" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:22:03.697" endtime="20220801 01:22:07.318"/>
</kw>
<status status="PASS" starttime="20220801 01:22:03.696" endtime="20220801 01:22:07.319"/>
</kw>
<status status="PASS" starttime="20220801 01:18:46.587" endtime="20220801 01:22:07.319"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220801 01:18:46.562" endtime="20220801 01:22:07.319"/>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="PASS" starttime="20220801 01:12:56.062" endtime="20220801 01:22:07.320"/>
</suite>
<suite id="s1-s1-s6" name="Single Node" source="/opt/hadoop/smoketest/basic/single_node.robot">
<test id="s1-s1-s6-t1" name="Basic Freon smoketest for one datanode" line="25">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:22:07.336" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:22:07.341" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:22:07.341" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220801 01:22:07.333" endtime="20220801 01:22:07.341"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:22:07.342" level="INFO">scm</msg>
<status status="PASS" starttime="20220801 01:22:07.342" endtime="20220801 01:22:07.342"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:22:07.343" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:22:07.342" endtime="20220801 01:22:07.343"/>
</kw>
<status status="PASS" starttime="20220801 01:22:07.333" endtime="20220801 01:22:07.343"/>
</kw>
<msg timestamp="20220801 01:22:07.343" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:22:07.333" endtime="20220801 01:22:07.344"/>
</kw>
<msg timestamp="20220801 01:22:07.344" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220801 01:22:07.332" endtime="20220801 01:22:07.344"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220801 01:22:07.346" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220801 01:22:07.344" endtime="20220801 01:22:07.346"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:22:07.350" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:22:07.414" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:22:07.414" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:22:07.348" endtime="20220801 01:22:07.414"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:22:07.415" level="INFO"/>
<status status="PASS" starttime="20220801 01:22:07.414" endtime="20220801 01:22:07.415"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:22:07.416" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:22:07.415" endtime="20220801 01:22:07.416"/>
</kw>
<status status="PASS" starttime="20220801 01:22:07.347" endtime="20220801 01:22:07.417"/>
</kw>
<msg timestamp="20220801 01:22:07.417" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:22:07.347" endtime="20220801 01:22:07.417"/>
</kw>
<status status="PASS" starttime="20220801 01:22:07.346" endtime="20220801 01:22:07.417"/>
</kw>
<status status="PASS" starttime="20220801 01:22:07.346" endtime="20220801 01:22:07.417"/>
</kw>
<status status="PASS" starttime="20220801 01:22:07.332" endtime="20220801 01:22:07.418"/>
</kw>
<status status="PASS" starttime="20220801 01:22:07.332" endtime="20220801 01:22:07.418"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>10</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220801 01:22:07.418" level="INFO">${random} = Wie4aj8NMv</msg>
<status status="PASS" starttime="20220801 01:22:07.418" endtime="20220801 01:22:07.418"/>
</kw>
<kw name="Freon OCKG" library="freon">
<arg>prefix=${random}</arg>
<arg>args=--replication ONE --replication-type RATIS</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:22:07.423" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p Wie4aj8NMv --replication ONE --replication-type RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:22:14.315" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:22:14.315" level="INFO">${output} = 2022-08-01 01:22:09,455 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-08-01 01:22:09,589 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220801 01:22:07.421" endtime="20220801 01:22:14.315"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:22:14.317" level="INFO">2022-08-01 01:22:09,455 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-08-01 01:22:09,589 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-08-01 01:22:09,590 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-08-01 01:22:09,750 [main] INFO freon.BaseFreonGenerator: Executing test with prefix Wie4aj8NMv
2022-08-01 01:22:09,842 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-08-01 01:22:10,845 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-08-01 01:22:11,790 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-08-01 01:22:11,845 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-08-01 01:22:12,095 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-08-01 01:22:12,846 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-08-01 01:22:13,847 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-08-01 01:22:13,966 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=1676.250702, max=1676.250702, mean=1676.250702, stddev=0.0, median=1676.250702, p75=1676.250702, p95=1676.250702, p98=1676.250702, p99=1676.250702, p999=1676.250702, mean_rate=0.3691915314184932, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-08-01 01:22:13,966 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 4
2022-08-01 01:22:13,966 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-08-01 01:22:13,966 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20220801 01:22:14.316" endtime="20220801 01:22:14.317"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:22:14.317" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:22:14.317" endtime="20220801 01:22:14.317"/>
</kw>
<status status="PASS" starttime="20220801 01:22:07.420" endtime="20220801 01:22:14.318"/>
</kw>
<msg timestamp="20220801 01:22:14.318" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:22:07.420" endtime="20220801 01:22:14.318"/>
</kw>
<msg timestamp="20220801 01:22:14.318" level="INFO">${result} = 2022-08-01 01:22:09,455 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-08-01 01:22:09,589 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220801 01:22:07.419" endtime="20220801 01:22:14.319"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220801 01:22:14.319" endtime="20220801 01:22:14.319"/>
</kw>
<status status="PASS" starttime="20220801 01:22:07.419" endtime="20220801 01:22:14.319"/>
</kw>
<kw name="Freon OCKV" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:22:14.324" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p Wie4aj8NMv  2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:22:20.740" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:22:20.740" level="INFO">${output} = 2022-08-01 01:22:16,212 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-08-01 01:22:16,303 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220801 01:22:14.322" endtime="20220801 01:22:20.740"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:22:20.741" level="INFO">2022-08-01 01:22:16,212 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-08-01 01:22:16,303 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-08-01 01:22:16,304 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-08-01 01:22:16,481 [main] INFO freon.BaseFreonGenerator: Executing test with prefix Wie4aj8NMv
2022-08-01 01:22:16,566 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-08-01 01:22:17,580 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-08-01 01:22:18,347 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-08-01 01:22:18,580 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-08-01 01:22:19,581 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-08-01 01:22:20,392 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=47.413137, max=47.413137, mean=47.413137, stddev=0.0, median=47.413137, p75=47.413137, p95=47.413137, p98=47.413137, p99=47.413137, p999=47.413137, mean_rate=0.929079301077835, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-08-01 01:22:20,393 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 4
2022-08-01 01:22:20,393 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-08-01 01:22:20,393 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20220801 01:22:20.741" endtime="20220801 01:22:20.741"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:22:20.742" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:22:20.742" endtime="20220801 01:22:20.742"/>
</kw>
<status status="PASS" starttime="20220801 01:22:14.321" endtime="20220801 01:22:20.742"/>
</kw>
<msg timestamp="20220801 01:22:20.742" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:22:14.321" endtime="20220801 01:22:20.743"/>
</kw>
<msg timestamp="20220801 01:22:20.743" level="INFO">${result} = 2022-08-01 01:22:16,212 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-08-01 01:22:16,303 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220801 01:22:14.321" endtime="20220801 01:22:20.743"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220801 01:22:20.743" endtime="20220801 01:22:20.744"/>
</kw>
<status status="PASS" starttime="20220801 01:22:14.319" endtime="20220801 01:22:20.744"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220801 01:22:07.331" endtime="20220801 01:22:20.744"/>
</test>
<doc>Smoketest for one datanode</doc>
<status status="PASS" starttime="20220801 01:22:07.322" endtime="20220801 01:22:20.745"/>
</suite>
<status status="PASS" starttime="20220801 01:05:30.034" endtime="20220801 01:22:20.748"/>
</suite>
<suite id="s1-s2" name="Security" source="/opt/hadoop/smoketest/security">
<suite id="s1-s2-s1" name="Admin-Cert" source="/opt/hadoop/smoketest/security/admin-cert.robot">
<kw name="Setup Test" type="SETUP">
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:22:26.068" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:22:26.071" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:22:26.071" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220801 01:22:26.064" endtime="20220801 01:22:26.071"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:22:26.072" level="INFO">scm</msg>
<status status="PASS" starttime="20220801 01:22:26.071" endtime="20220801 01:22:26.072"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:22:26.072" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:22:26.072" endtime="20220801 01:22:26.072"/>
</kw>
<status status="PASS" starttime="20220801 01:22:26.063" endtime="20220801 01:22:26.073"/>
</kw>
<msg timestamp="20220801 01:22:26.073" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:22:26.063" endtime="20220801 01:22:26.074"/>
</kw>
<msg timestamp="20220801 01:22:26.074" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220801 01:22:26.063" endtime="20220801 01:22:26.074"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220801 01:22:26.076" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220801 01:22:26.074" endtime="20220801 01:22:26.076"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:22:26.080" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:22:26.086" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:22:26.086" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:22:26.078" endtime="20220801 01:22:26.086"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:22:26.087" level="INFO"/>
<status status="PASS" starttime="20220801 01:22:26.087" endtime="20220801 01:22:26.087"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:22:26.088" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:22:26.087" endtime="20220801 01:22:26.088"/>
</kw>
<status status="PASS" starttime="20220801 01:22:26.077" endtime="20220801 01:22:26.088"/>
</kw>
<msg timestamp="20220801 01:22:26.088" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:22:26.077" endtime="20220801 01:22:26.088"/>
</kw>
<status status="PASS" starttime="20220801 01:22:26.076" endtime="20220801 01:22:26.089"/>
</kw>
<status status="PASS" starttime="20220801 01:22:26.076" endtime="20220801 01:22:26.089"/>
</kw>
<status status="PASS" starttime="20220801 01:22:26.062" endtime="20220801 01:22:26.089"/>
</kw>
<status status="PASS" starttime="20220801 01:22:26.062" endtime="20220801 01:22:26.089"/>
</kw>
<status status="PASS" starttime="20220801 01:22:26.062" endtime="20220801 01:22:26.089"/>
</kw>
<test id="s1-s2-s1-t1" name="List valid certificates" line="33">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin cert list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:22:26.094" level="INFO">Running command 'ozone admin cert list 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:22:29.209" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:22:29.209" level="INFO">${output} = Total 7 valid certificates: 
SerialNumber      Valid From                     Expiry                         Subject                                                                                    ...</msg>
<status status="PASS" starttime="20220801 01:22:26.092" endtime="20220801 01:22:29.209"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:22:29.211" level="INFO">Total 7 valid certificates: 
SerialNumber      Valid From                     Expiry                         Subject                                                                                                       
1                 Mon Aug 01 00:00:00 UTC 2022   Thu Sep 09 23:59:59 UTC 2027   O=CID-073435bc-c769-45d6-b924-7d24bc5b0b10, OU=dec4915c-b8e6-4016-8cb5-86a89691d13d, CN=scm@scm               
227327063507      Mon Aug 01 00:00:00 UTC 2022   Thu Sep 09 00:00:00 UTC 2027   O=CID-073435bc-c769-45d6-b924-7d24bc5b0b10, OU=dec4915c-b8e6-4016-8cb5-86a89691d13d, CN=scm-sub@scm           
245124421818      Mon Aug 01 00:00:00 UTC 2022   Tue Aug 01 00:00:00 UTC 2023   O=CID-073435bc-c769-45d6-b924-7d24bc5b0b10, OU=dec4915c-b8e6-4016-8cb5-86a89691d13d, CN=recon@recon           
245262955850      Mon Aug 01 00:00:00 UTC 2022   Tue Aug 01 00:00:00 UTC 2023   O=CID-073435bc-c769-45d6-b924-7d24bc5b0b10, OU=dec4915c-b8e6-4016-8cb5-86a89691d13d, CN=dn@7c69ed03a114       
245386352359      Mon Aug 01 00:00:00 UTC 2022   Tue Aug 01 00:00:00 UTC 2023   O=CID-073435bc-c769-45d6-b924-7d24bc5b0b10, OU=dec4915c-b8e6-4016-8cb5-86a89691d13d, CN=dn@a394c994de10       
245535908981      Mon Aug 01 00:00:00 UTC 2022   Tue Aug 01 00:00:00 UTC 2023   O=CID-073435bc-c769-45d6-b924-7d24bc5b0b10, OU=dec4915c-b8e6-4016-8cb5-86a89691d13d, CN=dn@54afae37edb6       
254128468331      Mon Aug 01 00:00:00 UTC 2022   Tue Aug 01 00:00:00 UTC 2023   O=CID-073435bc-c769-45d6-b924-7d24bc5b0b10, OU=dec4915c-b8e6-4016-8cb5-86a89691d13d, CN=om                    </msg>
<status status="PASS" starttime="20220801 01:22:29.210" endtime="20220801 01:22:29.211"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:22:29.211" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:22:29.211" endtime="20220801 01:22:29.211"/>
</kw>
<status status="PASS" starttime="20220801 01:22:26.092" endtime="20220801 01:22:29.212"/>
</kw>
<msg timestamp="20220801 01:22:29.212" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:22:26.091" endtime="20220801 01:22:29.212"/>
</kw>
<msg timestamp="20220801 01:22:29.213" level="INFO">${output} = Total 7 valid certificates: 
SerialNumber      Valid From                     Expiry                         Subject                                                                                    ...</msg>
<status status="PASS" starttime="20220801 01:22:26.091" endtime="20220801 01:22:29.213"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>valid certificates</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220801 01:22:29.213" endtime="20220801 01:22:29.213"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220801 01:22:26.090" endtime="20220801 01:22:29.213"/>
</test>
<test id="s1-s2-s1-t2" name="List revoked certificates" line="37">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin cert list -t revoked</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:22:29.218" level="INFO">Running command 'ozone admin cert list -t revoked 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:22:32.245" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:22:32.245" level="INFO">${output} = Total 0 revoked certificates: 
SerialNumber      Valid From                     Expiry                         Subject                                                                                  ...</msg>
<status status="PASS" starttime="20220801 01:22:29.216" endtime="20220801 01:22:32.245"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:22:32.246" level="INFO">Total 0 revoked certificates: 
SerialNumber      Valid From                     Expiry                         Subject                                                                                                       </msg>
<status status="PASS" starttime="20220801 01:22:32.246" endtime="20220801 01:22:32.247"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:22:32.247" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:22:32.247" endtime="20220801 01:22:32.247"/>
</kw>
<status status="PASS" starttime="20220801 01:22:29.215" endtime="20220801 01:22:32.247"/>
</kw>
<msg timestamp="20220801 01:22:32.248" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:22:29.215" endtime="20220801 01:22:32.248"/>
</kw>
<msg timestamp="20220801 01:22:32.248" level="INFO">${output} = Total 0 revoked certificates: 
SerialNumber      Valid From                     Expiry                         Subject                                                                                  ...</msg>
<status status="PASS" starttime="20220801 01:22:29.215" endtime="20220801 01:22:32.248"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Total 0 revoked certificates</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220801 01:22:32.248" endtime="20220801 01:22:32.249"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220801 01:22:29.214" endtime="20220801 01:22:32.249"/>
</test>
<test id="s1-s2-s1-t3" name="Info of the cert" line="41">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>for id in $(ozone admin cert list -c 1|grep UTC|awk '{print $1}'); do ozone admin cert info $id; done</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:22:32.254" level="INFO">Running command 'for id in $(ozone admin cert list -c 1|grep UTC|awk '{print $1}'); do ozone admin cert info $id; done 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:22:39.650" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:22:39.650" level="INFO">${output} = Certificate id: 1
[
[
  Version: V3
  Subject: O=CID-073435bc-c769-45d6-b924-7d24bc5b0b10, OU=dec4915c-b8e6-4016-8cb5-86a89691d13d, CN=scm@scm
  Signature Algorithm: SHA256withRSA, OID = 1.2.840.11354...</msg>
<status status="PASS" starttime="20220801 01:22:32.252" endtime="20220801 01:22:39.650"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:22:39.651" level="INFO">Certificate id: 1
[
[
  Version: V3
  Subject: O=CID-073435bc-c769-45d6-b924-7d24bc5b0b10, OU=dec4915c-b8e6-4016-8cb5-86a89691d13d, CN=scm@scm
  Signature Algorithm: SHA256withRSA, OID = 1.2.840.113549.1.1.11

  Key:  Sun RSA public key, 2048 bits
  params: null
  modulus: 18373594612410097048442785048581315112404214358964419447543945545895754104845424139332840249047437483452291936112668654872617559815812927642385425371851341808825313710577637197727056722064936298564205933217204557309014522626295812164830567571397770595561553715397037908168110501442382791425324189547839217578943393465954027402804450031398746362702612272874033692291081627761020552526511122184293687227422500773666307433918975161210038981810372570517014795195458495790308994436769884171377040097087048581288309500288595414461076439977775081696203631889267541854259970729273925568711613947246561020059827574304854228723
  public exponent: 65537
  Validity: [From: Mon Aug 01 00:00:00 UTC 2022,
               To: Thu Sep 09 23:59:59 UTC 2027]
  Issuer: O=CID-073435bc-c769-45d6-b924-7d24bc5b0b10, OU=dec4915c-b8e6-4016-8cb5-86a89691d13d, CN=scm@scm
  SerialNumber: [    01]

Certificate Extensions: 3
[1]: ObjectId: 2.5.29.19 Criticality=true
BasicConstraints:[
  CA:true
  PathLen:2147483647
]

[2]: ObjectId: 2.5.29.15 Criticality=true
KeyUsage [
  Key_CertSign
  Crl_Sign
]

[3]: ObjectId: 2.5.29.17 Criticality=false
SubjectAlternativeName [
  IPAddress: 172.18.0.10
]

]
  Algorithm: [SHA256withRSA]
  Signature:
0000: 1B 0C CA EB 75 B5 33 1C   6B E4 22 1F 95 0B 89 32  ....u.3.k."....2
0010: 57 76 D8 FD 1D E9 B7 4E   7C 48 25 3F 46 1E 34 53  Wv.....N.H%?F.4S
0020: 6E 3E E0 53 4B D8 92 D3   33 F4 58 BF 57 19 03 37  n&gt;.SK...3.X.W..7
0030: A4 06 94 EA 17 6F 42 33   FB A9 F6 15 09 93 93 A8  .....oB3........
0040: E3 D1 0B F5 1F 81 C1 67   95 42 DF 72 5D 26 EC 7F  .......g.B.r]&amp;..
0050: 21 2C 26 57 BB 50 87 BA   26 1A FF 10 DC B7 13 50  !,&amp;W.P..&amp;......P
0060: CA 31 B7 A8 41 EF 01 16   EF A7 68 0B 78 EE 0B 38  .1..A.....h.x..8
0070: 04 C8 2D F4 E2 E6 73 EC   38 3B 7A 63 A0 63 AD 11  ..-...s.8;zc.c..
0080: CC 46 34 8D 46 71 AD 22   46 3A 0E FB 3F 22 EB 8D  .F4.Fq."F:..?"..
0090: DE 09 26 63 72 8C 74 AB   2E 5B 7B A2 15 7E 5E 78  ..&amp;cr.t..[....^x
00A0: E6 F3 E7 73 EF CD 32 9B   EE 25 88 97 6B 1A 54 4E  ...s..2..%..k.TN
00B0: D6 4D A2 AB 95 1B 54 9B   D4 51 BD 84 D4 9A 4C A7  .M....T..Q....L.
00C0: 64 CB 72 B2 96 88 A8 8F   A5 B0 36 87 ED 17 E5 36  d.r.......6....6
00D0: E8 97 91 AD DF 7E 3C E6   B2 6E DF B9 69 80 D7 47  ......&lt;..n..i..G
00E0: AC 09 6F 5A DA 15 D9 D1   45 03 8A 5A AA 03 5C 99  ..oZ....E..Z..\.
00F0: 85 14 E5 32 DF 73 F3 09   F4 5E 40 D1 6E 00 17 58  ...2.s...^@.n..X

]</msg>
<status status="PASS" starttime="20220801 01:22:39.650" endtime="20220801 01:22:39.651"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:22:39.652" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:22:39.652" endtime="20220801 01:22:39.652"/>
</kw>
<status status="PASS" starttime="20220801 01:22:32.251" endtime="20220801 01:22:39.653"/>
</kw>
<msg timestamp="20220801 01:22:39.653" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:22:32.251" endtime="20220801 01:22:39.653"/>
</kw>
<msg timestamp="20220801 01:22:39.654" level="INFO">${output} = Certificate id: 1
[
[
  Version: V3
  Subject: O=CID-073435bc-c769-45d6-b924-7d24bc5b0b10, OU=dec4915c-b8e6-4016-8cb5-86a89691d13d, CN=scm@scm
  Signature Algorithm: SHA256withRSA, OID = 1.2.840.11354...</msg>
<status status="PASS" starttime="20220801 01:22:32.250" endtime="20220801 01:22:39.654"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Certificate not found</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220801 01:22:39.654" endtime="20220801 01:22:39.654"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220801 01:22:32.250" endtime="20220801 01:22:39.654"/>
</test>
<doc>Test for ozone admin cert command</doc>
<status status="PASS" starttime="20220801 01:22:26.031" endtime="20220801 01:22:39.656"/>
</suite>
<suite id="s1-s2-s2" name="Bucket-Encryption" source="/opt/hadoop/smoketest/security/bucket-encryption.robot">
<kw name="Setup Test" type="SETUP">
<kw name="Create Random Volume" library="shell">
<var>${volume}</var>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220801 01:22:39.667" level="INFO">${random} = vpfxt</msg>
<status status="PASS" starttime="20220801 01:22:39.667" endtime="20220801 01:22:39.667"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create o3://${OM_SERVICE_ID}/vol-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:22:39.671" level="INFO">Running command 'ozone sh volume create o3://om/vol-vpfxt 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:22:43.438" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:22:43.438" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:22:39.669" endtime="20220801 01:22:43.438"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:22:43.439" level="INFO"/>
<status status="PASS" starttime="20220801 01:22:43.439" endtime="20220801 01:22:43.439"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:22:43.440" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:22:43.439" endtime="20220801 01:22:43.440"/>
</kw>
<status status="PASS" starttime="20220801 01:22:39.668" endtime="20220801 01:22:43.440"/>
</kw>
<msg timestamp="20220801 01:22:43.440" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:22:39.668" endtime="20220801 01:22:43.441"/>
</kw>
<status status="PASS" starttime="20220801 01:22:39.667" endtime="20220801 01:22:43.441"/>
</kw>
<msg timestamp="20220801 01:22:43.441" level="INFO">${volume} = vol-vpfxt</msg>
<status status="PASS" starttime="20220801 01:22:39.667" endtime="20220801 01:22:43.441"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${VOLUME}</arg>
<arg>${volume}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220801 01:22:43.442" level="INFO">${VOLUME} = vol-vpfxt</msg>
<status status="PASS" starttime="20220801 01:22:43.442" endtime="20220801 01:22:43.442"/>
</kw>
<status status="PASS" starttime="20220801 01:22:39.666" endtime="20220801 01:22:43.442"/>
</kw>
<test id="s1-s2-s2-t1" name="Create Encrypted Bucket" line="37">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create -k ${KEY_NAME} o3://${OM_SERVICE_ID}/${VOLUME}/encrypted-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:22:43.447" level="INFO">Running command 'ozone sh bucket create -k key1 o3://om/vol-vpfxt/encrypted-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:22:47.656" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:22:47.656" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:22:43.445" endtime="20220801 01:22:47.656"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:22:47.657" level="INFO"/>
<status status="PASS" starttime="20220801 01:22:47.656" endtime="20220801 01:22:47.657"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:22:47.658" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:22:47.657" endtime="20220801 01:22:47.658"/>
</kw>
<status status="PASS" starttime="20220801 01:22:43.444" endtime="20220801 01:22:47.658"/>
</kw>
<msg timestamp="20220801 01:22:47.658" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:22:43.444" endtime="20220801 01:22:47.659"/>
</kw>
<msg timestamp="20220801 01:22:47.659" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:22:43.443" endtime="20220801 01:22:47.659"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>INVALID_REQUEST</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220801 01:22:47.659" endtime="20220801 01:22:47.660"/>
</kw>
<kw name="Bucket Exists" library="shell">
<arg>o3://${OM_SERVICE_ID}/${VOLUME}/encrypted-bucket</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:22:47.663" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://om/vol-vpfxt/encrypted-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:22:51.596" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:22:51.596" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "vol-vpfxt",
  "name" : "encrypted-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-...</msg>
<status status="PASS" starttime="20220801 01:22:47.660" endtime="20220801 01:22:51.597"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20220801 01:22:51.597" endtime="20220801 01:22:51.598"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'VOLUME_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20220801 01:22:51.598" endtime="20220801 01:22:51.598"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'BUCKET_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20220801 01:22:51.598" endtime="20220801 01:22:51.598"/>
</kw>
<status status="PASS" starttime="20220801 01:22:47.660" endtime="20220801 01:22:51.599"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220801 01:22:43.442" endtime="20220801 01:22:51.599"/>
</test>
<test id="s1-s2-s2-t2" name="Create Key in Encrypted Bucket" line="42">
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>o3://${OM_SERVICE_ID}/${VOLUME}/encrypted-bucket/passwd</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220801 01:22:51.601" level="INFO">${key} = o3://om/vol-vpfxt/encrypted-bucket/passwd</msg>
<status status="PASS" starttime="20220801 01:22:51.600" endtime="20220801 01:22:51.601"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put ${key} /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:22:51.605" level="INFO">Running command 'ozone sh key put o3://om/vol-vpfxt/encrypted-bucket/passwd /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:22:57.950" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:22:57.950" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:22:51.603" endtime="20220801 01:22:57.950"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:22:57.951" level="INFO"/>
<status status="PASS" starttime="20220801 01:22:57.950" endtime="20220801 01:22:57.951"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:22:57.951" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:22:57.951" endtime="20220801 01:22:57.951"/>
</kw>
<status status="PASS" starttime="20220801 01:22:51.602" endtime="20220801 01:22:57.952"/>
</kw>
<msg timestamp="20220801 01:22:57.952" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:22:51.602" endtime="20220801 01:22:57.952"/>
</kw>
<msg timestamp="20220801 01:22:57.952" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:22:51.601" endtime="20220801 01:22:57.952"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${key}</arg>
<arg>/etc/passwd</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220801 01:22:57.954" level="INFO">${postfix} = 34205</msg>
<status status="PASS" starttime="20220801 01:22:57.954" endtime="20220801 01:22:57.954"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220801 01:22:57.955" level="INFO">${tmpfile} = /tmp/tempkey-34205</msg>
<status status="PASS" starttime="20220801 01:22:57.955" endtime="20220801 01:22:57.955"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:22:57.958" level="INFO">Running command 'ozone sh key get o3://om/vol-vpfxt/encrypted-bucket/passwd /tmp/tempkey-34205 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:23:04.033" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:23:04.034" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:22:57.956" endtime="20220801 01:23:04.034"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:23:04.035" level="INFO"/>
<status status="PASS" starttime="20220801 01:23:04.034" endtime="20220801 01:23:04.035"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:23:04.036" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:23:04.035" endtime="20220801 01:23:04.036"/>
</kw>
<status status="PASS" starttime="20220801 01:22:57.956" endtime="20220801 01:23:04.036"/>
</kw>
<msg timestamp="20220801 01:23:04.036" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:22:57.956" endtime="20220801 01:23:04.037"/>
</kw>
<status status="PASS" starttime="20220801 01:22:57.955" endtime="20220801 01:23:04.037"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20220801 01:23:04.040" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-34205 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:23:04.042" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20220801 01:23:04.037" endtime="20220801 01:23:04.042"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:23:04.046" level="INFO">Running command 'rm -f /tmp/tempkey-34205 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:23:04.049" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:23:04.049" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:23:04.044" endtime="20220801 01:23:04.049"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:23:04.050" level="INFO"/>
<status status="PASS" starttime="20220801 01:23:04.049" endtime="20220801 01:23:04.050"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:23:04.051" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:23:04.050" endtime="20220801 01:23:04.051"/>
</kw>
<status status="PASS" starttime="20220801 01:23:04.044" endtime="20220801 01:23:04.051"/>
</kw>
<msg timestamp="20220801 01:23:04.051" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:23:04.044" endtime="20220801 01:23:04.052"/>
</kw>
<status status="PASS" starttime="20220801 01:23:04.043" endtime="20220801 01:23:04.052"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220801 01:23:04.052" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20220801 01:23:04.052" endtime="20220801 01:23:04.053"/>
</kw>
<msg timestamp="20220801 01:23:04.053" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20220801 01:22:57.953" endtime="20220801 01:23:04.053"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220801 01:23:04.053" endtime="20220801 01:23:04.053"/>
</kw>
<status status="PASS" starttime="20220801 01:22:57.953" endtime="20220801 01:23:04.053"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220801 01:22:51.600" endtime="20220801 01:23:04.054"/>
</test>
<doc>Test for bucket encryption</doc>
<status status="PASS" starttime="20220801 01:22:39.658" endtime="20220801 01:23:04.054"/>
</suite>
<suite id="s1-s2-s3" name="Ozone-Secure-Fs" source="/opt/hadoop/smoketest/security/ozone-secure-fs.robot">
<test id="s1-s2-s3-t1" name="Create volume bucket with wrong credentials" line="37">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:23:04.066" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:23:04.069" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:23:04.069" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:23:04.064" endtime="20220801 01:23:04.069"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:23:04.070" level="INFO"/>
<status status="PASS" starttime="20220801 01:23:04.070" endtime="20220801 01:23:04.070"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:23:04.071" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:23:04.070" endtime="20220801 01:23:04.071"/>
</kw>
<status status="PASS" starttime="20220801 01:23:04.063" endtime="20220801 01:23:04.071"/>
</kw>
<msg timestamp="20220801 01:23:04.071" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:23:04.063" endtime="20220801 01:23:04.072"/>
</kw>
<status status="PASS" starttime="20220801 01:23:04.063" endtime="20220801 01:23:04.072"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>ozone sh volume create o3://om/fstest</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:23:04.075" level="INFO">Running command 'ozone sh volume create o3://om/fstest 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:23:07.113" level="INFO">${rc} = 255</msg>
<msg timestamp="20220801 01:23:07.113" level="INFO">${output} = org.apache.hadoop.security.AccessControlException: Client cannot authenticate via:[TOKEN, KERBEROS]</msg>
<status status="PASS" starttime="20220801 01:23:04.072" endtime="20220801 01:23:07.113"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Client cannot authenticate via</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220801 01:23:07.114" endtime="20220801 01:23:07.114"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220801 01:23:04.062" endtime="20220801 01:23:07.115"/>
</test>
<test id="s1-s2-s3-t2" name="Create volume with non-admin user" line="42">
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:23:07.121" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:23:07.124" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:23:07.124" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220801 01:23:07.118" endtime="20220801 01:23:07.124"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:23:07.125" level="INFO">scm</msg>
<status status="PASS" starttime="20220801 01:23:07.124" endtime="20220801 01:23:07.125"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:23:07.126" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:23:07.125" endtime="20220801 01:23:07.126"/>
</kw>
<status status="PASS" starttime="20220801 01:23:07.118" endtime="20220801 01:23:07.126"/>
</kw>
<msg timestamp="20220801 01:23:07.127" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:23:07.117" endtime="20220801 01:23:07.127"/>
</kw>
<msg timestamp="20220801 01:23:07.127" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220801 01:23:07.117" endtime="20220801 01:23:07.127"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220801 01:23:07.129" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220801 01:23:07.127" endtime="20220801 01:23:07.129"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:23:07.133" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:23:07.139" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:23:07.140" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:23:07.131" endtime="20220801 01:23:07.140"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:23:07.141" level="INFO"/>
<status status="PASS" starttime="20220801 01:23:07.140" endtime="20220801 01:23:07.141"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:23:07.141" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:23:07.141" endtime="20220801 01:23:07.141"/>
</kw>
<status status="PASS" starttime="20220801 01:23:07.130" endtime="20220801 01:23:07.142"/>
</kw>
<msg timestamp="20220801 01:23:07.142" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:23:07.130" endtime="20220801 01:23:07.142"/>
</kw>
<status status="PASS" starttime="20220801 01:23:07.129" endtime="20220801 01:23:07.142"/>
</kw>
<status status="PASS" starttime="20220801 01:23:07.129" endtime="20220801 01:23:07.142"/>
</kw>
<status status="PASS" starttime="20220801 01:23:07.117" endtime="20220801 01:23:07.143"/>
</kw>
<status status="PASS" starttime="20220801 01:23:07.116" endtime="20220801 01:23:07.143"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>ozone sh volume create o3://om/fstest</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:23:07.145" level="INFO">Running command 'ozone sh volume create o3://om/fstest 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:23:10.731" level="INFO">${rc} = 255</msg>
<msg timestamp="20220801 01:23:10.731" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have CREATE permission to access volume Volume:fstest </msg>
<status status="PASS" starttime="20220801 01:23:07.143" endtime="20220801 01:23:10.731"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>doesn't have CREATE permission to access volume</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220801 01:23:10.731" endtime="20220801 01:23:10.732"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220801 01:23:07.115" endtime="20220801 01:23:10.733"/>
</test>
<test id="s1-s2-s3-t3" name="Create bucket with non-admin owner(testuser2)" line="47">
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:23:10.738" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:23:10.741" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:23:10.741" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220801 01:23:10.736" endtime="20220801 01:23:10.741"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:23:10.742" level="INFO">scm</msg>
<status status="PASS" starttime="20220801 01:23:10.742" endtime="20220801 01:23:10.742"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:23:10.743" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:23:10.743" endtime="20220801 01:23:10.743"/>
</kw>
<status status="PASS" starttime="20220801 01:23:10.736" endtime="20220801 01:23:10.743"/>
</kw>
<msg timestamp="20220801 01:23:10.743" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:23:10.735" endtime="20220801 01:23:10.744"/>
</kw>
<msg timestamp="20220801 01:23:10.744" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220801 01:23:10.735" endtime="20220801 01:23:10.744"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220801 01:23:10.745" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220801 01:23:10.744" endtime="20220801 01:23:10.745"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:23:10.755" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:23:10.772" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:23:10.772" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:23:10.747" endtime="20220801 01:23:10.772"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:23:10.773" level="INFO"/>
<status status="PASS" starttime="20220801 01:23:10.772" endtime="20220801 01:23:10.773"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:23:10.774" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:23:10.773" endtime="20220801 01:23:10.774"/>
</kw>
<status status="PASS" starttime="20220801 01:23:10.746" endtime="20220801 01:23:10.774"/>
</kw>
<msg timestamp="20220801 01:23:10.774" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:23:10.746" endtime="20220801 01:23:10.774"/>
</kw>
<status status="PASS" starttime="20220801 01:23:10.745" endtime="20220801 01:23:10.775"/>
</kw>
<status status="PASS" starttime="20220801 01:23:10.745" endtime="20220801 01:23:10.775"/>
</kw>
<status status="PASS" starttime="20220801 01:23:10.735" endtime="20220801 01:23:10.775"/>
</kw>
<status status="PASS" starttime="20220801 01:23:10.734" endtime="20220801 01:23:10.775"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup volume names</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup volume names">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>2</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220801 01:23:10.777" level="INFO">${random} = 59</msg>
<status status="PASS" starttime="20220801 01:23:10.776" endtime="20220801 01:23:10.779"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume1}</arg>
<arg>fstest${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220801 01:23:10.781" level="INFO">${volume1} = fstest59</msg>
<status status="PASS" starttime="20220801 01:23:10.780" endtime="20220801 01:23:10.781"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume2}</arg>
<arg>fstest2${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220801 01:23:10.783" level="INFO">${volume2} = fstest259</msg>
<status status="PASS" starttime="20220801 01:23:10.781" endtime="20220801 01:23:10.783"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume3}</arg>
<arg>fstest3${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220801 01:23:10.784" level="INFO">${volume3} = fstest359</msg>
<status status="PASS" starttime="20220801 01:23:10.783" endtime="20220801 01:23:10.785"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume4}</arg>
<arg>fstest4${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220801 01:23:10.786" level="INFO">${volume4} = fstest459</msg>
<status status="PASS" starttime="20220801 01:23:10.785" endtime="20220801 01:23:10.786"/>
</kw>
<status status="PASS" starttime="20220801 01:23:10.775" endtime="20220801 01:23:10.786"/>
</kw>
<status status="PASS" starttime="20220801 01:23:10.775" endtime="20220801 01:23:10.786"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create o3://om/${volume4} -u testuser2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:23:10.790" level="INFO">Running command 'ozone sh volume create o3://om/fstest459 -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:23:14.658" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:23:14.658" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:23:10.788" endtime="20220801 01:23:14.658"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:23:14.659" level="INFO"/>
<status status="PASS" starttime="20220801 01:23:14.658" endtime="20220801 01:23:14.659"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:23:14.660" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:23:14.659" endtime="20220801 01:23:14.660"/>
</kw>
<status status="PASS" starttime="20220801 01:23:10.788" endtime="20220801 01:23:14.660"/>
</kw>
<msg timestamp="20220801 01:23:14.660" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:23:10.787" endtime="20220801 01:23:14.661"/>
</kw>
<status status="PASS" starttime="20220801 01:23:10.787" endtime="20220801 01:23:14.661"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:23:14.665" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:23:14.669" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:23:14.669" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220801 01:23:14.663" endtime="20220801 01:23:14.669"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:23:14.670" level="INFO">scm</msg>
<status status="PASS" starttime="20220801 01:23:14.669" endtime="20220801 01:23:14.670"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:23:14.671" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:23:14.670" endtime="20220801 01:23:14.671"/>
</kw>
<status status="PASS" starttime="20220801 01:23:14.663" endtime="20220801 01:23:14.671"/>
</kw>
<msg timestamp="20220801 01:23:14.671" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:23:14.662" endtime="20220801 01:23:14.672"/>
</kw>
<msg timestamp="20220801 01:23:14.672" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220801 01:23:14.662" endtime="20220801 01:23:14.672"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220801 01:23:14.673" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220801 01:23:14.672" endtime="20220801 01:23:14.673"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:23:14.677" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:23:14.683" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:23:14.683" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:23:14.675" endtime="20220801 01:23:14.683"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:23:14.684" level="INFO"/>
<status status="PASS" starttime="20220801 01:23:14.684" endtime="20220801 01:23:14.685"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:23:14.686" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:23:14.685" endtime="20220801 01:23:14.686"/>
</kw>
<status status="PASS" starttime="20220801 01:23:14.674" endtime="20220801 01:23:14.686"/>
</kw>
<msg timestamp="20220801 01:23:14.686" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:23:14.674" endtime="20220801 01:23:14.686"/>
</kw>
<status status="PASS" starttime="20220801 01:23:14.673" endtime="20220801 01:23:14.687"/>
</kw>
<status status="PASS" starttime="20220801 01:23:14.673" endtime="20220801 01:23:14.687"/>
</kw>
<status status="PASS" starttime="20220801 01:23:14.661" endtime="20220801 01:23:14.687"/>
</kw>
<status status="PASS" starttime="20220801 01:23:14.661" endtime="20220801 01:23:14.687"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create o3://om/${volume4}/bucket1 --layout FILE_SYSTEM_OPTIMIZED</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:23:14.690" level="INFO">Running command 'ozone sh bucket create o3://om/fstest459/bucket1 --layout FILE_SYSTEM_OPTIMIZED 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:23:18.391" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:23:18.391" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:23:14.688" endtime="20220801 01:23:18.391"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:23:18.392" level="INFO"/>
<status status="PASS" starttime="20220801 01:23:18.391" endtime="20220801 01:23:18.392"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:23:18.393" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:23:18.392" endtime="20220801 01:23:18.393"/>
</kw>
<status status="PASS" starttime="20220801 01:23:14.688" endtime="20220801 01:23:18.393"/>
</kw>
<msg timestamp="20220801 01:23:18.393" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:23:14.688" endtime="20220801 01:23:18.394"/>
</kw>
<msg timestamp="20220801 01:23:18.394" level="INFO">${result} = </msg>
<status status="PASS" starttime="20220801 01:23:14.687" endtime="20220801 01:23:18.394"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220801 01:23:18.394" endtime="20220801 01:23:18.395"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put ${volume4}/bucket1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:23:18.398" level="INFO">Running command 'ozone sh key put fstest459/bucket1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:23:24.505" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:23:24.505" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:23:18.396" endtime="20220801 01:23:24.505"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:23:24.506" level="INFO"/>
<status status="PASS" starttime="20220801 01:23:24.506" endtime="20220801 01:23:24.506"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:23:24.507" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:23:24.507" endtime="20220801 01:23:24.507"/>
</kw>
<status status="PASS" starttime="20220801 01:23:18.396" endtime="20220801 01:23:24.507"/>
</kw>
<msg timestamp="20220801 01:23:24.507" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:23:18.395" endtime="20220801 01:23:24.508"/>
</kw>
<msg timestamp="20220801 01:23:24.508" level="INFO">${result} = </msg>
<status status="PASS" starttime="20220801 01:23:18.395" endtime="20220801 01:23:24.508"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220801 01:23:24.508" endtime="20220801 01:23:24.509"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${volume4}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:23:24.512" level="INFO">Running command 'ozone sh key list fstest459/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:23:28.646" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:23:28.646" level="INFO">${output} = [ {
  "volumeName" : "fstest459",
  "bucketName" : "bucket1",
  "name" : "key1",
  "dataSize" : 17526,
  "creationTime" : "2022-08-01T01:23:22.177Z",
  "modificationTime" : "2022-08-01T01:23:24.101Z",...</msg>
<status status="PASS" starttime="20220801 01:23:24.510" endtime="20220801 01:23:28.646"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:23:28.647" level="INFO">[ {
  "volumeName" : "fstest459",
  "bucketName" : "bucket1",
  "name" : "key1",
  "dataSize" : 17526,
  "creationTime" : "2022-08-01T01:23:22.177Z",
  "modificationTime" : "2022-08-01T01:23:24.101Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  }
} ]</msg>
<status status="PASS" starttime="20220801 01:23:28.646" endtime="20220801 01:23:28.647"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:23:28.648" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:23:28.647" endtime="20220801 01:23:28.648"/>
</kw>
<status status="PASS" starttime="20220801 01:23:24.510" endtime="20220801 01:23:28.648"/>
</kw>
<msg timestamp="20220801 01:23:28.648" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:23:24.509" endtime="20220801 01:23:28.649"/>
</kw>
<msg timestamp="20220801 01:23:28.649" level="INFO">${result} = [ {
  "volumeName" : "fstest459",
  "bucketName" : "bucket1",
  "name" : "key1",
  "dataSize" : 17526,
  "creationTime" : "2022-08-01T01:23:22.177Z",
  "modificationTime" : "2022-08-01T01:23:24.101Z",...</msg>
<status status="PASS" starttime="20220801 01:23:24.509" endtime="20220801 01:23:28.649"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220801 01:23:28.649" endtime="20220801 01:23:28.649"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key delete ${volume4}/bucket1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:23:28.653" level="INFO">Running command 'ozone sh key delete fstest459/bucket1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:23:32.492" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:23:32.492" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:23:28.651" endtime="20220801 01:23:32.492"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:23:32.493" level="INFO"/>
<status status="PASS" starttime="20220801 01:23:32.492" endtime="20220801 01:23:32.493"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:23:32.494" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:23:32.493" endtime="20220801 01:23:32.494"/>
</kw>
<status status="PASS" starttime="20220801 01:23:28.650" endtime="20220801 01:23:32.494"/>
</kw>
<msg timestamp="20220801 01:23:32.494" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:23:28.650" endtime="20220801 01:23:32.495"/>
</kw>
<msg timestamp="20220801 01:23:32.495" level="INFO">${result} = </msg>
<status status="PASS" starttime="20220801 01:23:28.650" endtime="20220801 01:23:32.495"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220801 01:23:32.495" endtime="20220801 01:23:32.496"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket delete ${volume4}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:23:32.500" level="INFO">Running command 'ozone sh bucket delete fstest459/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:23:36.263" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:23:36.263" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:23:32.497" endtime="20220801 01:23:36.263"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:23:36.265" level="INFO"/>
<status status="PASS" starttime="20220801 01:23:36.264" endtime="20220801 01:23:36.265"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:23:36.265" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:23:36.265" endtime="20220801 01:23:36.265"/>
</kw>
<status status="PASS" starttime="20220801 01:23:32.496" endtime="20220801 01:23:36.266"/>
</kw>
<msg timestamp="20220801 01:23:36.266" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:23:32.496" endtime="20220801 01:23:36.266"/>
</kw>
<msg timestamp="20220801 01:23:36.266" level="INFO">${result} = </msg>
<status status="PASS" starttime="20220801 01:23:32.496" endtime="20220801 01:23:36.266"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220801 01:23:36.267" endtime="20220801 01:23:36.267"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220801 01:23:10.733" endtime="20220801 01:23:36.267"/>
</test>
<test id="s1-s2-s3-t4" name="Create volume bucket with credentials" line="63">
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:23:36.273" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:23:36.276" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:23:36.276" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220801 01:23:36.270" endtime="20220801 01:23:36.276"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:23:36.277" level="INFO">scm</msg>
<status status="PASS" starttime="20220801 01:23:36.276" endtime="20220801 01:23:36.277"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:23:36.278" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:23:36.277" endtime="20220801 01:23:36.278"/>
</kw>
<status status="PASS" starttime="20220801 01:23:36.270" endtime="20220801 01:23:36.278"/>
</kw>
<msg timestamp="20220801 01:23:36.278" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:23:36.270" endtime="20220801 01:23:36.279"/>
</kw>
<msg timestamp="20220801 01:23:36.279" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220801 01:23:36.269" endtime="20220801 01:23:36.279"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220801 01:23:36.280" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220801 01:23:36.279" endtime="20220801 01:23:36.280"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:23:36.283" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:23:36.290" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:23:36.290" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:23:36.281" endtime="20220801 01:23:36.290"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:23:36.291" level="INFO"/>
<status status="PASS" starttime="20220801 01:23:36.290" endtime="20220801 01:23:36.291"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:23:36.292" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:23:36.291" endtime="20220801 01:23:36.292"/>
</kw>
<status status="PASS" starttime="20220801 01:23:36.281" endtime="20220801 01:23:36.292"/>
</kw>
<msg timestamp="20220801 01:23:36.292" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:23:36.281" endtime="20220801 01:23:36.293"/>
</kw>
<status status="PASS" starttime="20220801 01:23:36.280" endtime="20220801 01:23:36.293"/>
</kw>
<status status="PASS" starttime="20220801 01:23:36.280" endtime="20220801 01:23:36.293"/>
</kw>
<status status="PASS" starttime="20220801 01:23:36.269" endtime="20220801 01:23:36.293"/>
</kw>
<status status="PASS" starttime="20220801 01:23:36.269" endtime="20220801 01:23:36.293"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup volume names</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup volume names">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>2</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220801 01:23:36.295" level="INFO">${random} = 47</msg>
<status status="PASS" starttime="20220801 01:23:36.294" endtime="20220801 01:23:36.295"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume1}</arg>
<arg>fstest${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220801 01:23:36.295" level="INFO">${volume1} = fstest47</msg>
<status status="PASS" starttime="20220801 01:23:36.295" endtime="20220801 01:23:36.295"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume2}</arg>
<arg>fstest2${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220801 01:23:36.296" level="INFO">${volume2} = fstest247</msg>
<status status="PASS" starttime="20220801 01:23:36.295" endtime="20220801 01:23:36.296"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume3}</arg>
<arg>fstest3${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220801 01:23:36.296" level="INFO">${volume3} = fstest347</msg>
<status status="PASS" starttime="20220801 01:23:36.296" endtime="20220801 01:23:36.296"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume4}</arg>
<arg>fstest4${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220801 01:23:36.297" level="INFO">${volume4} = fstest447</msg>
<status status="PASS" starttime="20220801 01:23:36.297" endtime="20220801 01:23:36.297"/>
</kw>
<status status="PASS" starttime="20220801 01:23:36.293" endtime="20220801 01:23:36.297"/>
</kw>
<status status="PASS" starttime="20220801 01:23:36.293" endtime="20220801 01:23:36.297"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create o3://om/${volume1}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:23:36.301" level="INFO">Running command 'ozone sh volume create o3://om/fstest47 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:23:40.368" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:23:40.368" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:23:36.298" endtime="20220801 01:23:40.368"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:23:40.370" level="INFO"/>
<status status="PASS" starttime="20220801 01:23:40.369" endtime="20220801 01:23:40.370"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:23:40.370" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:23:40.370" endtime="20220801 01:23:40.370"/>
</kw>
<status status="PASS" starttime="20220801 01:23:36.298" endtime="20220801 01:23:40.370"/>
</kw>
<msg timestamp="20220801 01:23:40.371" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:23:36.298" endtime="20220801 01:23:40.371"/>
</kw>
<status status="PASS" starttime="20220801 01:23:36.297" endtime="20220801 01:23:40.371"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create o3://om/${volume2}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:23:40.375" level="INFO">Running command 'ozone sh volume create o3://om/fstest247 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:23:44.195" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:23:44.195" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:23:40.373" endtime="20220801 01:23:44.195"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:23:44.196" level="INFO"/>
<status status="PASS" starttime="20220801 01:23:44.195" endtime="20220801 01:23:44.196"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:23:44.197" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:23:44.196" endtime="20220801 01:23:44.197"/>
</kw>
<status status="PASS" starttime="20220801 01:23:40.372" endtime="20220801 01:23:44.197"/>
</kw>
<msg timestamp="20220801 01:23:44.197" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:23:40.372" endtime="20220801 01:23:44.198"/>
</kw>
<status status="PASS" starttime="20220801 01:23:40.371" endtime="20220801 01:23:44.198"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create o3://om/${volume1}/bucket1 --layout FILE_SYSTEM_OPTIMIZED</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:23:44.201" level="INFO">Running command 'ozone sh bucket create o3://om/fstest47/bucket1 --layout FILE_SYSTEM_OPTIMIZED 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:23:48.142" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:23:48.142" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:23:44.199" endtime="20220801 01:23:48.142"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:23:48.143" level="INFO"/>
<status status="PASS" starttime="20220801 01:23:48.142" endtime="20220801 01:23:48.143"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:23:48.144" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:23:48.143" endtime="20220801 01:23:48.144"/>
</kw>
<status status="PASS" starttime="20220801 01:23:44.199" endtime="20220801 01:23:48.144"/>
</kw>
<msg timestamp="20220801 01:23:48.144" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:23:44.199" endtime="20220801 01:23:48.145"/>
</kw>
<status status="PASS" starttime="20220801 01:23:44.198" endtime="20220801 01:23:48.145"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create o3://om/${volume1}/bucket2 --layout FILE_SYSTEM_OPTIMIZED</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:23:48.148" level="INFO">Running command 'ozone sh bucket create o3://om/fstest47/bucket2 --layout FILE_SYSTEM_OPTIMIZED 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:23:51.954" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:23:51.955" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:23:48.146" endtime="20220801 01:23:51.955"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:23:51.956" level="INFO"/>
<status status="PASS" starttime="20220801 01:23:51.955" endtime="20220801 01:23:51.956"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:23:51.956" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:23:51.956" endtime="20220801 01:23:51.957"/>
</kw>
<status status="PASS" starttime="20220801 01:23:48.146" endtime="20220801 01:23:51.957"/>
</kw>
<msg timestamp="20220801 01:23:51.957" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:23:48.145" endtime="20220801 01:23:51.957"/>
</kw>
<status status="PASS" starttime="20220801 01:23:48.145" endtime="20220801 01:23:51.958"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create o3://om/${volume2}/bucket3 --layout FILE_SYSTEM_OPTIMIZED</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:23:51.961" level="INFO">Running command 'ozone sh bucket create o3://om/fstest247/bucket3 --layout FILE_SYSTEM_OPTIMIZED 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:23:55.498" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:23:55.499" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:23:51.959" endtime="20220801 01:23:55.499"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:23:55.500" level="INFO"/>
<status status="PASS" starttime="20220801 01:23:55.499" endtime="20220801 01:23:55.500"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:23:55.501" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:23:55.500" endtime="20220801 01:23:55.501"/>
</kw>
<status status="PASS" starttime="20220801 01:23:51.958" endtime="20220801 01:23:55.501"/>
</kw>
<msg timestamp="20220801 01:23:55.501" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:23:51.958" endtime="20220801 01:23:55.502"/>
</kw>
<status status="PASS" starttime="20220801 01:23:51.958" endtime="20220801 01:23:55.502"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220801 01:23:36.268" endtime="20220801 01:23:55.502"/>
</test>
<test id="s1-s2-s3-t5" name="Check volume from ozonefs" line="73">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls o3fs://bucket1.${volume1}/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:23:55.507" level="INFO">Running command 'ozone fs -ls o3fs://bucket1.fstest47/ 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:23:58.842" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:23:58.842" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:23:55.505" endtime="20220801 01:23:58.842"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:23:58.843" level="INFO"/>
<status status="PASS" starttime="20220801 01:23:58.842" endtime="20220801 01:23:58.843"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:23:58.844" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:23:58.843" endtime="20220801 01:23:58.844"/>
</kw>
<status status="PASS" starttime="20220801 01:23:55.504" endtime="20220801 01:23:58.844"/>
</kw>
<msg timestamp="20220801 01:23:58.844" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:23:55.504" endtime="20220801 01:23:58.845"/>
</kw>
<msg timestamp="20220801 01:23:58.845" level="INFO">${result} = </msg>
<status status="PASS" starttime="20220801 01:23:55.504" endtime="20220801 01:23:58.845"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220801 01:23:55.503" endtime="20220801 01:23:58.845"/>
</test>
<test id="s1-s2-s3-t6" name="Test Volume Acls" line="76">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${volume3}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:23:58.850" level="INFO">Running command 'ozone sh volume create fstest347 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:24:02.454" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:24:02.454" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:23:58.848" endtime="20220801 01:24:02.454"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:24:02.456" level="INFO"/>
<status status="PASS" starttime="20220801 01:24:02.455" endtime="20220801 01:24:02.456"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:24:02.456" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:24:02.456" endtime="20220801 01:24:02.456"/>
</kw>
<status status="PASS" starttime="20220801 01:23:58.847" endtime="20220801 01:24:02.457"/>
</kw>
<msg timestamp="20220801 01:24:02.457" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:23:58.847" endtime="20220801 01:24:02.457"/>
</kw>
<msg timestamp="20220801 01:24:02.457" level="INFO">${result} = </msg>
<status status="PASS" starttime="20220801 01:23:58.847" endtime="20220801 01:24:02.457"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220801 01:24:02.457" endtime="20220801 01:24:02.458"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${volume3}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:24:02.461" level="INFO">Running command 'ozone sh volume getacl fstest347 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:24:06.233" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:24:06.233" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20220801 01:24:02.459" endtime="20220801 01:24:06.233"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:24:06.234" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20220801 01:24:06.234" endtime="20220801 01:24:06.234"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:24:06.235" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:24:06.234" endtime="20220801 01:24:06.235"/>
</kw>
<status status="PASS" starttime="20220801 01:24:02.459" endtime="20220801 01:24:06.235"/>
</kw>
<msg timestamp="20220801 01:24:06.235" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:24:02.458" endtime="20220801 01:24:06.236"/>
</kw>
<msg timestamp="20220801 01:24:06.236" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20220801 01:24:02.458" endtime="20220801 01:24:06.236"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220801 01:24:06.236" endtime="20220801 01:24:06.237"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume addacl ${volume3} -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:24:06.242" level="INFO">Running command 'ozone sh volume addacl fstest347 -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:24:09.948" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:24:09.948" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20220801 01:24:06.239" endtime="20220801 01:24:09.948"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:24:09.949" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20220801 01:24:09.949" endtime="20220801 01:24:09.949"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:24:09.950" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:24:09.949" endtime="20220801 01:24:09.950"/>
</kw>
<status status="PASS" starttime="20220801 01:24:06.239" endtime="20220801 01:24:09.950"/>
</kw>
<msg timestamp="20220801 01:24:09.950" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:24:06.238" endtime="20220801 01:24:09.951"/>
</kw>
<msg timestamp="20220801 01:24:09.951" level="INFO">${result} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20220801 01:24:06.237" endtime="20220801 01:24:09.951"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${volume3}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:24:09.954" level="INFO">Running command 'ozone sh volume getacl fstest347 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:24:13.893" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:24:13.893" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "...</msg>
<status status="PASS" starttime="20220801 01:24:09.952" endtime="20220801 01:24:13.893"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:24:13.894" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20220801 01:24:13.893" endtime="20220801 01:24:13.894"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:24:13.895" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:24:13.894" endtime="20220801 01:24:13.895"/>
</kw>
<status status="PASS" starttime="20220801 01:24:09.952" endtime="20220801 01:24:13.895"/>
</kw>
<msg timestamp="20220801 01:24:13.895" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:24:09.952" endtime="20220801 01:24:13.896"/>
</kw>
<msg timestamp="20220801 01:24:13.896" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "...</msg>
<status status="PASS" starttime="20220801 01:24:09.951" endtime="20220801 01:24:13.896"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220801 01:24:13.896" endtime="20220801 01:24:13.897"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume removeacl ${volume3} -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:24:13.900" level="INFO">Running command 'ozone sh volume removeacl fstest347 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:24:17.553" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:24:17.554" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20220801 01:24:13.898" endtime="20220801 01:24:17.554"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:24:17.559" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20220801 01:24:17.554" endtime="20220801 01:24:17.559"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:24:17.560" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:24:17.559" endtime="20220801 01:24:17.560"/>
</kw>
<status status="PASS" starttime="20220801 01:24:13.898" endtime="20220801 01:24:17.560"/>
</kw>
<msg timestamp="20220801 01:24:17.560" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:24:13.898" endtime="20220801 01:24:17.561"/>
</kw>
<msg timestamp="20220801 01:24:17.561" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20220801 01:24:13.897" endtime="20220801 01:24:17.561"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${volume3}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:24:17.565" level="INFO">Running command 'ozone sh volume getacl fstest347 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:24:21.420" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:24:21.420" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "...</msg>
<status status="PASS" starttime="20220801 01:24:17.562" endtime="20220801 01:24:21.421"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:24:21.422" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20220801 01:24:21.421" endtime="20220801 01:24:21.422"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:24:21.422" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:24:21.422" endtime="20220801 01:24:21.423"/>
</kw>
<status status="PASS" starttime="20220801 01:24:17.562" endtime="20220801 01:24:21.423"/>
</kw>
<msg timestamp="20220801 01:24:21.423" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:24:17.562" endtime="20220801 01:24:21.423"/>
</kw>
<msg timestamp="20220801 01:24:21.423" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "...</msg>
<status status="PASS" starttime="20220801 01:24:17.561" endtime="20220801 01:24:21.424"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220801 01:24:21.424" endtime="20220801 01:24:21.424"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume setacl ${volume3} -al user:superuser1:rwxy,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:24:21.429" level="INFO">Running command 'ozone sh volume setacl fstest347 -al user:superuser1:rwxy,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:24:24.958" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:24:24.958" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20220801 01:24:21.426" endtime="20220801 01:24:24.958"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:24:24.959" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20220801 01:24:24.958" endtime="20220801 01:24:24.959"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:24:24.960" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:24:24.959" endtime="20220801 01:24:24.960"/>
</kw>
<status status="PASS" starttime="20220801 01:24:21.425" endtime="20220801 01:24:24.960"/>
</kw>
<msg timestamp="20220801 01:24:24.960" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:24:21.425" endtime="20220801 01:24:24.961"/>
</kw>
<msg timestamp="20220801 01:24:24.961" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20220801 01:24:21.425" endtime="20220801 01:24:24.961"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${volume3}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:24:24.965" level="INFO">Running command 'ozone sh volume getacl fstest347 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:24:28.851" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:24:28.851" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" starttime="20220801 01:24:24.963" endtime="20220801 01:24:28.851"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:24:28.852" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20220801 01:24:28.851" endtime="20220801 01:24:28.852"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:24:28.853" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:24:28.852" endtime="20220801 01:24:28.853"/>
</kw>
<status status="PASS" starttime="20220801 01:24:24.962" endtime="20220801 01:24:28.853"/>
</kw>
<msg timestamp="20220801 01:24:28.853" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:24:24.962" endtime="20220801 01:24:28.853"/>
</kw>
<msg timestamp="20220801 01:24:28.854" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" starttime="20220801 01:24:24.961" endtime="20220801 01:24:28.854"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220801 01:24:28.854" endtime="20220801 01:24:28.855"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220801 01:24:28.855" endtime="20220801 01:24:28.856"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220801 01:23:58.846" endtime="20220801 01:24:28.856"/>
</test>
<test id="s1-s2-s3-t7" name="Test Bucket Acls" line="92">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${volume3}/bk1 --layout FILE_SYSTEM_OPTIMIZED</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:24:28.861" level="INFO">Running command 'ozone sh bucket create fstest347/bk1 --layout FILE_SYSTEM_OPTIMIZED 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:24:32.674" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:24:32.674" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:24:28.859" endtime="20220801 01:24:32.674"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:24:32.675" level="INFO"/>
<status status="PASS" starttime="20220801 01:24:32.674" endtime="20220801 01:24:32.675"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:24:32.676" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:24:32.675" endtime="20220801 01:24:32.676"/>
</kw>
<status status="PASS" starttime="20220801 01:24:28.858" endtime="20220801 01:24:32.676"/>
</kw>
<msg timestamp="20220801 01:24:32.676" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:24:28.858" endtime="20220801 01:24:32.677"/>
</kw>
<msg timestamp="20220801 01:24:32.677" level="INFO">${result} = </msg>
<status status="PASS" starttime="20220801 01:24:28.858" endtime="20220801 01:24:32.677"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220801 01:24:32.677" endtime="20220801 01:24:32.677"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${volume3}/bk1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:24:32.681" level="INFO">Running command 'ozone sh bucket getacl fstest347/bk1 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:24:36.477" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:24:36.477" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20220801 01:24:32.679" endtime="20220801 01:24:36.477"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:24:36.478" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20220801 01:24:36.477" endtime="20220801 01:24:36.478"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:24:36.479" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:24:36.478" endtime="20220801 01:24:36.479"/>
</kw>
<status status="PASS" starttime="20220801 01:24:32.678" endtime="20220801 01:24:36.479"/>
</kw>
<msg timestamp="20220801 01:24:36.479" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:24:32.678" endtime="20220801 01:24:36.479"/>
</kw>
<msg timestamp="20220801 01:24:36.480" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20220801 01:24:32.678" endtime="20220801 01:24:36.480"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220801 01:24:36.480" endtime="20220801 01:24:36.480"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket addacl ${volume3}/bk1 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:24:36.484" level="INFO">Running command 'ozone sh bucket addacl fstest347/bk1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:24:40.449" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:24:40.449" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220801 01:24:36.482" endtime="20220801 01:24:40.449"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:24:40.450" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220801 01:24:40.449" endtime="20220801 01:24:40.450"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:24:40.451" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:24:40.450" endtime="20220801 01:24:40.451"/>
</kw>
<status status="PASS" starttime="20220801 01:24:36.481" endtime="20220801 01:24:40.451"/>
</kw>
<msg timestamp="20220801 01:24:40.451" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:24:36.481" endtime="20220801 01:24:40.452"/>
</kw>
<msg timestamp="20220801 01:24:40.452" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220801 01:24:36.480" endtime="20220801 01:24:40.452"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${volume3}/bk1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:24:40.456" level="INFO">Running command 'ozone sh bucket getacl fstest347/bk1 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:24:44.430" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:24:44.430" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20220801 01:24:40.454" endtime="20220801 01:24:44.430"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:24:44.431" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20220801 01:24:44.431" endtime="20220801 01:24:44.432"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:24:44.432" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:24:44.432" endtime="20220801 01:24:44.432"/>
</kw>
<status status="PASS" starttime="20220801 01:24:40.453" endtime="20220801 01:24:44.432"/>
</kw>
<msg timestamp="20220801 01:24:44.433" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:24:40.453" endtime="20220801 01:24:44.433"/>
</kw>
<msg timestamp="20220801 01:24:44.433" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20220801 01:24:40.452" endtime="20220801 01:24:44.433"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220801 01:24:44.433" endtime="20220801 01:24:44.434"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket removeacl ${volume3}/bk1 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:24:44.438" level="INFO">Running command 'ozone sh bucket removeacl fstest347/bk1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:24:47.903" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:24:47.904" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20220801 01:24:44.435" endtime="20220801 01:24:47.904"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:24:47.905" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20220801 01:24:47.904" endtime="20220801 01:24:47.905"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:24:47.906" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:24:47.905" endtime="20220801 01:24:47.906"/>
</kw>
<status status="PASS" starttime="20220801 01:24:44.435" endtime="20220801 01:24:47.906"/>
</kw>
<msg timestamp="20220801 01:24:47.906" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:24:44.434" endtime="20220801 01:24:47.906"/>
</kw>
<msg timestamp="20220801 01:24:47.907" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20220801 01:24:44.434" endtime="20220801 01:24:47.907"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${volume3}/bk1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:24:47.910" level="INFO">Running command 'ozone sh bucket getacl fstest347/bk1 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:24:51.822" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:24:51.822" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20220801 01:24:47.908" endtime="20220801 01:24:51.822"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:24:51.823" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" starttime="20220801 01:24:51.823" endtime="20220801 01:24:51.823"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:24:51.824" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:24:51.824" endtime="20220801 01:24:51.824"/>
</kw>
<status status="PASS" starttime="20220801 01:24:47.908" endtime="20220801 01:24:51.824"/>
</kw>
<msg timestamp="20220801 01:24:51.824" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:24:47.907" endtime="20220801 01:24:51.825"/>
</kw>
<msg timestamp="20220801 01:24:51.825" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20220801 01:24:47.907" endtime="20220801 01:24:51.825"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220801 01:24:51.825" endtime="20220801 01:24:51.826"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket setacl ${volume3}/bk1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:24:51.830" level="INFO">Running command 'ozone sh bucket setacl fstest347/bk1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:24:55.499" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:24:55.499" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20220801 01:24:51.828" endtime="20220801 01:24:55.499"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:24:55.500" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20220801 01:24:55.499" endtime="20220801 01:24:55.500"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:24:55.500" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:24:55.500" endtime="20220801 01:24:55.501"/>
</kw>
<status status="PASS" starttime="20220801 01:24:51.827" endtime="20220801 01:24:55.501"/>
</kw>
<msg timestamp="20220801 01:24:55.501" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:24:51.827" endtime="20220801 01:24:55.501"/>
</kw>
<msg timestamp="20220801 01:24:55.502" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20220801 01:24:51.826" endtime="20220801 01:24:55.502"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${volume3}/bk1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:24:55.505" level="INFO">Running command 'ozone sh bucket getacl fstest347/bk1 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:24:59.458" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:24:59.458" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20220801 01:24:55.503" endtime="20220801 01:24:59.458"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:24:59.460" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20220801 01:24:59.459" endtime="20220801 01:24:59.460"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:24:59.460" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:24:59.460" endtime="20220801 01:24:59.460"/>
</kw>
<status status="PASS" starttime="20220801 01:24:55.502" endtime="20220801 01:24:59.461"/>
</kw>
<msg timestamp="20220801 01:24:59.461" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:24:55.502" endtime="20220801 01:24:59.461"/>
</kw>
<msg timestamp="20220801 01:24:59.461" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20220801 01:24:55.502" endtime="20220801 01:24:59.461"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220801 01:24:59.462" endtime="20220801 01:24:59.462"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220801 01:24:59.462" endtime="20220801 01:24:59.463"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220801 01:24:28.857" endtime="20220801 01:24:59.463"/>
</test>
<test id="s1-s2-s3-t8" name="Test key Acls" line="108">
<kw name="Execute" library="os">
<arg>ozone sh key put ${volume3}/bk1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:24:59.468" level="INFO">Running command 'ozone sh key put fstest347/bk1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:25:05.578" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:25:05.578" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:24:59.466" endtime="20220801 01:25:05.578"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:25:05.579" level="INFO"/>
<status status="PASS" starttime="20220801 01:25:05.578" endtime="20220801 01:25:05.579"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:25:05.580" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:25:05.579" endtime="20220801 01:25:05.580"/>
</kw>
<status status="PASS" starttime="20220801 01:24:59.466" endtime="20220801 01:25:05.581"/>
</kw>
<msg timestamp="20220801 01:25:05.581" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:24:59.465" endtime="20220801 01:25:05.581"/>
</kw>
<status status="PASS" starttime="20220801 01:24:59.465" endtime="20220801 01:25:05.581"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${volume3}/bk1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:25:05.585" level="INFO">Running command 'ozone sh key getacl fstest347/bk1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:25:09.599" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:25:09.600" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20220801 01:25:05.583" endtime="20220801 01:25:09.600"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:25:09.601" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20220801 01:25:09.600" endtime="20220801 01:25:09.601"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:25:09.601" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:25:09.601" endtime="20220801 01:25:09.602"/>
</kw>
<status status="PASS" starttime="20220801 01:25:05.582" endtime="20220801 01:25:09.602"/>
</kw>
<msg timestamp="20220801 01:25:09.602" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:25:05.582" endtime="20220801 01:25:09.602"/>
</kw>
<msg timestamp="20220801 01:25:09.602" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20220801 01:25:05.581" endtime="20220801 01:25:09.603"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220801 01:25:09.603" endtime="20220801 01:25:09.603"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key addacl ${volume3}/bk1/key1 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:25:09.607" level="INFO">Running command 'ozone sh key addacl fstest347/bk1/key1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:25:13.457" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:25:13.457" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220801 01:25:09.605" endtime="20220801 01:25:13.457"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:25:13.458" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220801 01:25:13.457" endtime="20220801 01:25:13.458"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:25:13.458" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:25:13.458" endtime="20220801 01:25:13.459"/>
</kw>
<status status="PASS" starttime="20220801 01:25:09.604" endtime="20220801 01:25:13.459"/>
</kw>
<msg timestamp="20220801 01:25:13.459" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:25:09.604" endtime="20220801 01:25:13.459"/>
</kw>
<msg timestamp="20220801 01:25:13.460" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220801 01:25:09.603" endtime="20220801 01:25:13.460"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${volume3}/bk1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:25:13.464" level="INFO">Running command 'ozone sh key getacl fstest347/bk1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:25:17.423" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:25:17.423" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20220801 01:25:13.461" endtime="20220801 01:25:17.423"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:25:17.424" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20220801 01:25:17.423" endtime="20220801 01:25:17.424"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:25:17.425" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:25:17.424" endtime="20220801 01:25:17.425"/>
</kw>
<status status="PASS" starttime="20220801 01:25:13.461" endtime="20220801 01:25:17.425"/>
</kw>
<msg timestamp="20220801 01:25:17.425" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:25:13.460" endtime="20220801 01:25:17.426"/>
</kw>
<msg timestamp="20220801 01:25:17.426" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20220801 01:25:13.460" endtime="20220801 01:25:17.426"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220801 01:25:17.426" endtime="20220801 01:25:17.426"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key removeacl ${volume3}/bk1/key1 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:25:17.430" level="INFO">Running command 'ozone sh key removeacl fstest347/bk1/key1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:25:20.949" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:25:20.949" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20220801 01:25:17.428" endtime="20220801 01:25:20.949"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:25:20.950" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20220801 01:25:20.949" endtime="20220801 01:25:20.950"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:25:20.951" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:25:20.950" endtime="20220801 01:25:20.951"/>
</kw>
<status status="PASS" starttime="20220801 01:25:17.427" endtime="20220801 01:25:20.951"/>
</kw>
<msg timestamp="20220801 01:25:20.951" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:25:17.427" endtime="20220801 01:25:20.951"/>
</kw>
<msg timestamp="20220801 01:25:20.952" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20220801 01:25:17.427" endtime="20220801 01:25:20.952"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${volume3}/bk1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:25:20.955" level="INFO">Running command 'ozone sh key getacl fstest347/bk1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:25:24.716" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:25:24.716" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20220801 01:25:20.953" endtime="20220801 01:25:24.716"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:25:24.718" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" starttime="20220801 01:25:24.717" endtime="20220801 01:25:24.718"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:25:24.718" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:25:24.718" endtime="20220801 01:25:24.719"/>
</kw>
<status status="PASS" starttime="20220801 01:25:20.953" endtime="20220801 01:25:24.719"/>
</kw>
<msg timestamp="20220801 01:25:24.719" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:25:20.952" endtime="20220801 01:25:24.719"/>
</kw>
<msg timestamp="20220801 01:25:24.719" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20220801 01:25:20.952" endtime="20220801 01:25:24.720"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220801 01:25:24.720" endtime="20220801 01:25:24.720"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key setacl ${volume3}/bk1/key1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:25:24.724" level="INFO">Running command 'ozone sh key setacl fstest347/bk1/key1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:25:28.392" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:25:28.392" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20220801 01:25:24.722" endtime="20220801 01:25:28.392"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:25:28.393" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20220801 01:25:28.393" endtime="20220801 01:25:28.394"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:25:28.394" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:25:28.394" endtime="20220801 01:25:28.394"/>
</kw>
<status status="PASS" starttime="20220801 01:25:24.721" endtime="20220801 01:25:28.395"/>
</kw>
<msg timestamp="20220801 01:25:28.395" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:25:24.721" endtime="20220801 01:25:28.395"/>
</kw>
<msg timestamp="20220801 01:25:28.395" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20220801 01:25:24.720" endtime="20220801 01:25:28.395"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${volume3}/bk1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:25:28.399" level="INFO">Running command 'ozone sh key getacl fstest347/bk1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:25:32.337" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:25:32.337" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20220801 01:25:28.397" endtime="20220801 01:25:32.337"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:25:32.338" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20220801 01:25:32.338" endtime="20220801 01:25:32.339"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:25:32.339" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:25:32.339" endtime="20220801 01:25:32.339"/>
</kw>
<status status="PASS" starttime="20220801 01:25:28.396" endtime="20220801 01:25:32.339"/>
</kw>
<msg timestamp="20220801 01:25:32.340" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:25:28.396" endtime="20220801 01:25:32.340"/>
</kw>
<msg timestamp="20220801 01:25:32.340" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20220801 01:25:28.396" endtime="20220801 01:25:32.340"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220801 01:25:32.340" endtime="20220801 01:25:32.341"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220801 01:25:32.341" endtime="20220801 01:25:32.341"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220801 01:24:59.464" endtime="20220801 01:25:32.342"/>
</test>
<test id="s1-s2-s3-t9" name="Test native authorizer" line="123">
<kw name="Execute" library="os">
<arg>ozone sh volume removeacl ${volume3} -a group:root:a</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:25:32.346" level="INFO">Running command 'ozone sh volume removeacl fstest347 -a group:root:a 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:25:35.994" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:25:35.994" level="INFO">${output} = ACL group:root:a[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20220801 01:25:32.344" endtime="20220801 01:25:35.994"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:25:35.995" level="INFO">ACL group:root:a[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20220801 01:25:35.995" endtime="20220801 01:25:35.996"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:25:35.996" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:25:35.996" endtime="20220801 01:25:35.996"/>
</kw>
<status status="PASS" starttime="20220801 01:25:32.344" endtime="20220801 01:25:35.997"/>
</kw>
<msg timestamp="20220801 01:25:35.997" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:25:32.344" endtime="20220801 01:25:35.997"/>
</kw>
<status status="PASS" starttime="20220801 01:25:32.343" endtime="20220801 01:25:35.997"/>
</kw>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:25:36.001" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:25:36.004" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:25:36.004" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:25:35.999" endtime="20220801 01:25:36.004"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:25:36.005" level="INFO"/>
<status status="PASS" starttime="20220801 01:25:36.005" endtime="20220801 01:25:36.005"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:25:36.006" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:25:36.005" endtime="20220801 01:25:36.006"/>
</kw>
<status status="PASS" starttime="20220801 01:25:35.998" endtime="20220801 01:25:36.006"/>
</kw>
<msg timestamp="20220801 01:25:36.007" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:25:35.998" endtime="20220801 01:25:36.007"/>
</kw>
<status status="PASS" starttime="20220801 01:25:35.997" endtime="20220801 01:25:36.007"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:25:36.011" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:25:36.014" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:25:36.014" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220801 01:25:36.009" endtime="20220801 01:25:36.014"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:25:36.015" level="INFO">scm</msg>
<status status="PASS" starttime="20220801 01:25:36.014" endtime="20220801 01:25:36.015"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:25:36.015" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:25:36.015" endtime="20220801 01:25:36.015"/>
</kw>
<status status="PASS" starttime="20220801 01:25:36.009" endtime="20220801 01:25:36.016"/>
</kw>
<msg timestamp="20220801 01:25:36.016" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:25:36.008" endtime="20220801 01:25:36.016"/>
</kw>
<msg timestamp="20220801 01:25:36.016" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220801 01:25:36.008" endtime="20220801 01:25:36.016"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220801 01:25:36.017" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220801 01:25:36.017" endtime="20220801 01:25:36.017"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:25:36.021" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:25:36.028" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:25:36.028" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:25:36.019" endtime="20220801 01:25:36.028"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:25:36.029" level="INFO"/>
<status status="PASS" starttime="20220801 01:25:36.028" endtime="20220801 01:25:36.029"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:25:36.029" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:25:36.029" endtime="20220801 01:25:36.030"/>
</kw>
<status status="PASS" starttime="20220801 01:25:36.019" endtime="20220801 01:25:36.030"/>
</kw>
<msg timestamp="20220801 01:25:36.030" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:25:36.018" endtime="20220801 01:25:36.030"/>
</kw>
<status status="PASS" starttime="20220801 01:25:36.018" endtime="20220801 01:25:36.031"/>
</kw>
<status status="PASS" starttime="20220801 01:25:36.017" endtime="20220801 01:25:36.031"/>
</kw>
<status status="PASS" starttime="20220801 01:25:36.008" endtime="20220801 01:25:36.031"/>
</kw>
<status status="PASS" starttime="20220801 01:25:36.007" endtime="20220801 01:25:36.031"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket list /${volume3}/</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:25:36.036" level="INFO">Running command 'ozone sh bucket list /fstest347/ 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:25:39.597" level="INFO">${rc} = 255</msg>
<msg timestamp="20220801 01:25:39.597" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access volume Volume:fstest347 </msg>
<status status="PASS" starttime="20220801 01:25:36.031" endtime="20220801 01:25:39.597"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:25:39.599" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access volume Volume:fstest347 </msg>
<status status="PASS" starttime="20220801 01:25:39.598" endtime="20220801 01:25:39.599"/>
</kw>
<msg timestamp="20220801 01:25:39.599" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access volume Volume:fstest347 </msg>
<status status="PASS" starttime="20220801 01:25:36.031" endtime="20220801 01:25:39.599"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220801 01:25:39.599" endtime="20220801 01:25:39.600"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list /${volume3}/bk1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:25:39.602" level="INFO">Running command 'ozone sh key list /fstest347/bk1 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:25:43.299" level="INFO">${rc} = 255</msg>
<msg timestamp="20220801 01:25:43.299" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access volume Volume:fstest347 </msg>
<status status="PASS" starttime="20220801 01:25:39.600" endtime="20220801 01:25:43.299"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:25:43.301" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access volume Volume:fstest347 </msg>
<status status="PASS" starttime="20220801 01:25:43.300" endtime="20220801 01:25:43.301"/>
</kw>
<msg timestamp="20220801 01:25:43.301" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access volume Volume:fstest347 </msg>
<status status="PASS" starttime="20220801 01:25:39.600" endtime="20220801 01:25:43.301"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220801 01:25:43.301" endtime="20220801 01:25:43.302"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume addacl ${volume3} -a user:testuser2/scm@EXAMPLE.COM:xy</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:25:43.304" level="INFO">Running command 'ozone sh volume addacl fstest347 -a user:testuser2/scm@EXAMPLE.COM:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:25:47.155" level="INFO">${rc} = 255</msg>
<msg timestamp="20220801 01:25:47.155" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have WRITE_ACL permission to access volume Volume:fstest347 </msg>
<status status="PASS" starttime="20220801 01:25:43.302" endtime="20220801 01:25:47.155"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:25:47.156" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have WRITE_ACL permission to access volume Volume:fstest347 </msg>
<status status="PASS" starttime="20220801 01:25:47.155" endtime="20220801 01:25:47.156"/>
</kw>
<msg timestamp="20220801 01:25:47.156" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have WRITE_ACL permission to access volume Volume:fstest347 </msg>
<status status="PASS" starttime="20220801 01:25:43.302" endtime="20220801 01:25:47.157"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have WRITE_ACL permission to access volume</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220801 01:25:47.157" endtime="20220801 01:25:47.157"/>
</kw>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:25:47.161" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:25:47.164" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:25:47.164" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:25:47.158" endtime="20220801 01:25:47.164"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:25:47.165" level="INFO"/>
<status status="PASS" starttime="20220801 01:25:47.165" endtime="20220801 01:25:47.165"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:25:47.166" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:25:47.165" endtime="20220801 01:25:47.166"/>
</kw>
<status status="PASS" starttime="20220801 01:25:47.158" endtime="20220801 01:25:47.166"/>
</kw>
<msg timestamp="20220801 01:25:47.166" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:25:47.158" endtime="20220801 01:25:47.167"/>
</kw>
<status status="PASS" starttime="20220801 01:25:47.157" endtime="20220801 01:25:47.167"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:25:47.170" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:25:47.174" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:25:47.174" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220801 01:25:47.169" endtime="20220801 01:25:47.174"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:25:47.175" level="INFO">scm</msg>
<status status="PASS" starttime="20220801 01:25:47.174" endtime="20220801 01:25:47.175"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:25:47.175" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:25:47.175" endtime="20220801 01:25:47.175"/>
</kw>
<status status="PASS" starttime="20220801 01:25:47.168" endtime="20220801 01:25:47.176"/>
</kw>
<msg timestamp="20220801 01:25:47.176" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:25:47.168" endtime="20220801 01:25:47.176"/>
</kw>
<msg timestamp="20220801 01:25:47.177" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220801 01:25:47.168" endtime="20220801 01:25:47.177"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220801 01:25:47.177" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220801 01:25:47.177" endtime="20220801 01:25:47.177"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:25:47.181" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:25:47.188" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:25:47.188" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:25:47.179" endtime="20220801 01:25:47.188"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:25:47.189" level="INFO"/>
<status status="PASS" starttime="20220801 01:25:47.188" endtime="20220801 01:25:47.189"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:25:47.190" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:25:47.189" endtime="20220801 01:25:47.190"/>
</kw>
<status status="PASS" starttime="20220801 01:25:47.179" endtime="20220801 01:25:47.190"/>
</kw>
<msg timestamp="20220801 01:25:47.190" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:25:47.178" endtime="20220801 01:25:47.191"/>
</kw>
<status status="PASS" starttime="20220801 01:25:47.178" endtime="20220801 01:25:47.191"/>
</kw>
<status status="PASS" starttime="20220801 01:25:47.177" endtime="20220801 01:25:47.191"/>
</kw>
<status status="PASS" starttime="20220801 01:25:47.167" endtime="20220801 01:25:47.191"/>
</kw>
<status status="PASS" starttime="20220801 01:25:47.167" endtime="20220801 01:25:47.191"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl ${volume3} -a user:testuser2/scm@EXAMPLE.COM:xyrw</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:25:47.194" level="INFO">Running command 'ozone sh volume addacl fstest347 -a user:testuser2/scm@EXAMPLE.COM:xyrw 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:25:50.825" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:25:50.825" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220801 01:25:47.193" endtime="20220801 01:25:50.825"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:25:50.826" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220801 01:25:50.826" endtime="20220801 01:25:50.827"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:25:50.827" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:25:50.827" endtime="20220801 01:25:50.827"/>
</kw>
<status status="PASS" starttime="20220801 01:25:47.192" endtime="20220801 01:25:50.828"/>
</kw>
<msg timestamp="20220801 01:25:50.828" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:25:47.192" endtime="20220801 01:25:50.828"/>
</kw>
<status status="PASS" starttime="20220801 01:25:47.191" endtime="20220801 01:25:50.828"/>
</kw>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:25:50.832" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:25:50.835" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:25:50.835" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:25:50.830" endtime="20220801 01:25:50.835"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:25:50.836" level="INFO"/>
<status status="PASS" starttime="20220801 01:25:50.835" endtime="20220801 01:25:50.836"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:25:50.837" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:25:50.836" endtime="20220801 01:25:50.837"/>
</kw>
<status status="PASS" starttime="20220801 01:25:50.829" endtime="20220801 01:25:50.837"/>
</kw>
<msg timestamp="20220801 01:25:50.837" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:25:50.829" endtime="20220801 01:25:50.838"/>
</kw>
<status status="PASS" starttime="20220801 01:25:50.828" endtime="20220801 01:25:50.838"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:25:50.842" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:25:50.845" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:25:50.845" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220801 01:25:50.840" endtime="20220801 01:25:50.845"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:25:50.846" level="INFO">scm</msg>
<status status="PASS" starttime="20220801 01:25:50.846" endtime="20220801 01:25:50.846"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:25:50.847" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:25:50.846" endtime="20220801 01:25:50.847"/>
</kw>
<status status="PASS" starttime="20220801 01:25:50.839" endtime="20220801 01:25:50.847"/>
</kw>
<msg timestamp="20220801 01:25:50.847" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:25:50.839" endtime="20220801 01:25:50.848"/>
</kw>
<msg timestamp="20220801 01:25:50.848" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220801 01:25:50.839" endtime="20220801 01:25:50.848"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220801 01:25:50.849" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220801 01:25:50.848" endtime="20220801 01:25:50.849"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:25:50.853" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:25:50.860" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:25:50.860" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:25:50.851" endtime="20220801 01:25:50.860"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:25:50.861" level="INFO"/>
<status status="PASS" starttime="20220801 01:25:50.860" endtime="20220801 01:25:50.861"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:25:50.862" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:25:50.861" endtime="20220801 01:25:50.862"/>
</kw>
<status status="PASS" starttime="20220801 01:25:50.850" endtime="20220801 01:25:50.862"/>
</kw>
<msg timestamp="20220801 01:25:50.862" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:25:50.850" endtime="20220801 01:25:50.862"/>
</kw>
<status status="PASS" starttime="20220801 01:25:50.849" endtime="20220801 01:25:50.863"/>
</kw>
<status status="PASS" starttime="20220801 01:25:50.849" endtime="20220801 01:25:50.863"/>
</kw>
<status status="PASS" starttime="20220801 01:25:50.838" endtime="20220801 01:25:50.863"/>
</kw>
<status status="PASS" starttime="20220801 01:25:50.838" endtime="20220801 01:25:50.863"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket list /${volume3}/</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:25:50.866" level="INFO">Running command 'ozone sh bucket list /fstest347/ 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:25:54.611" level="INFO">${rc} = 255</msg>
<msg timestamp="20220801 01:25:54.611" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access volume Volume:fstest347 </msg>
<status status="PASS" starttime="20220801 01:25:50.864" endtime="20220801 01:25:54.611"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:25:54.613" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access volume Volume:fstest347 </msg>
<status status="PASS" starttime="20220801 01:25:54.612" endtime="20220801 01:25:54.613"/>
</kw>
<msg timestamp="20220801 01:25:54.613" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access volume Volume:fstest347 </msg>
<status status="PASS" starttime="20220801 01:25:50.863" endtime="20220801 01:25:54.613"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access volume</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220801 01:25:54.613" endtime="20220801 01:25:54.614"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl ${volume3} -a user:testuser2/scm@EXAMPLE.COM:l</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:25:54.617" level="INFO">Running command 'ozone sh volume addacl fstest347 -a user:testuser2/scm@EXAMPLE.COM:l 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:25:58.306" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:25:58.306" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:l[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220801 01:25:54.615" endtime="20220801 01:25:58.306"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:25:58.307" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:l[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220801 01:25:58.306" endtime="20220801 01:25:58.307"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:25:58.308" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:25:58.307" endtime="20220801 01:25:58.308"/>
</kw>
<status status="PASS" starttime="20220801 01:25:54.615" endtime="20220801 01:25:58.308"/>
</kw>
<msg timestamp="20220801 01:25:58.308" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:25:54.614" endtime="20220801 01:25:58.308"/>
</kw>
<status status="PASS" starttime="20220801 01:25:54.614" endtime="20220801 01:25:58.309"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket list /${volume3}/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:25:58.312" level="INFO">Running command 'ozone sh bucket list /fstest347/ 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:26:02.221" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:26:02.222" level="INFO">${output} = [ {
  "metadata" : { },
  "volumeName" : "fstest347",
  "name" : "bk1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 52578,
  "usedNamespace" : 1,
  "creationTime" : "2022-08-01T0...</msg>
<status status="PASS" starttime="20220801 01:25:58.310" endtime="20220801 01:26:02.222"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:26:02.223" level="INFO">[ {
  "metadata" : { },
  "volumeName" : "fstest347",
  "name" : "bk1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 52578,
  "usedNamespace" : 1,
  "creationTime" : "2022-08-01T01:24:32.491Z",
  "modificationTime" : "2022-08-01T01:24:55.368Z",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "FILE_SYSTEM_OPTIMIZED",
  "owner" : "testuser",
  "link" : false
} ]</msg>
<status status="PASS" starttime="20220801 01:26:02.222" endtime="20220801 01:26:02.223"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:26:02.223" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:26:02.223" endtime="20220801 01:26:02.224"/>
</kw>
<status status="PASS" starttime="20220801 01:25:58.310" endtime="20220801 01:26:02.224"/>
</kw>
<msg timestamp="20220801 01:26:02.224" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:25:58.309" endtime="20220801 01:26:02.224"/>
</kw>
<status status="PASS" starttime="20220801 01:25:58.309" endtime="20220801 01:26:02.225"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume getacl /${volume3}/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:26:02.229" level="INFO">Running command 'ozone sh volume getacl /fstest347/ 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:26:05.992" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:26:05.992" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" starttime="20220801 01:26:02.226" endtime="20220801 01:26:05.992"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:26:05.993" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser2/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "LIST", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20220801 01:26:05.993" endtime="20220801 01:26:05.994"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:26:05.994" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:26:05.994" endtime="20220801 01:26:05.994"/>
</kw>
<status status="PASS" starttime="20220801 01:26:02.226" endtime="20220801 01:26:05.994"/>
</kw>
<msg timestamp="20220801 01:26:05.995" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:26:02.225" endtime="20220801 01:26:05.995"/>
</kw>
<status status="PASS" starttime="20220801 01:26:02.225" endtime="20220801 01:26:05.995"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list /${volume3}/bk1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:26:05.998" level="INFO">Running command 'ozone sh key list /fstest347/bk1 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:26:09.824" level="INFO">${rc} = 255</msg>
<msg timestamp="20220801 01:26:09.825" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket Volume:fstest347 Bucket:bk1 </msg>
<status status="PASS" starttime="20220801 01:26:05.996" endtime="20220801 01:26:09.825"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:26:09.826" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket Volume:fstest347 Bucket:bk1 </msg>
<status status="PASS" starttime="20220801 01:26:09.825" endtime="20220801 01:26:09.826"/>
</kw>
<msg timestamp="20220801 01:26:09.826" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket Volume:fstest347 Bucket:bk1 </msg>
<status status="PASS" starttime="20220801 01:26:05.995" endtime="20220801 01:26:09.826"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220801 01:26:09.826" endtime="20220801 01:26:09.827"/>
</kw>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:26:09.831" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:26:09.834" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:26:09.834" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:26:09.829" endtime="20220801 01:26:09.834"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:26:09.835" level="INFO"/>
<status status="PASS" starttime="20220801 01:26:09.835" endtime="20220801 01:26:09.835"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:26:09.836" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:26:09.835" endtime="20220801 01:26:09.836"/>
</kw>
<status status="PASS" starttime="20220801 01:26:09.828" endtime="20220801 01:26:09.836"/>
</kw>
<msg timestamp="20220801 01:26:09.836" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:26:09.827" endtime="20220801 01:26:09.837"/>
</kw>
<status status="PASS" starttime="20220801 01:26:09.827" endtime="20220801 01:26:09.837"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:26:09.841" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:26:09.844" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:26:09.844" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220801 01:26:09.839" endtime="20220801 01:26:09.844"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:26:09.845" level="INFO">scm</msg>
<status status="PASS" starttime="20220801 01:26:09.844" endtime="20220801 01:26:09.845"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:26:09.846" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:26:09.845" endtime="20220801 01:26:09.846"/>
</kw>
<status status="PASS" starttime="20220801 01:26:09.839" endtime="20220801 01:26:09.846"/>
</kw>
<msg timestamp="20220801 01:26:09.846" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:26:09.838" endtime="20220801 01:26:09.847"/>
</kw>
<msg timestamp="20220801 01:26:09.847" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220801 01:26:09.838" endtime="20220801 01:26:09.847"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220801 01:26:09.848" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220801 01:26:09.847" endtime="20220801 01:26:09.848"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:26:09.851" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:26:09.858" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:26:09.858" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:26:09.849" endtime="20220801 01:26:09.858"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:26:09.859" level="INFO"/>
<status status="PASS" starttime="20220801 01:26:09.859" endtime="20220801 01:26:09.859"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:26:09.860" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:26:09.859" endtime="20220801 01:26:09.860"/>
</kw>
<status status="PASS" starttime="20220801 01:26:09.849" endtime="20220801 01:26:09.860"/>
</kw>
<msg timestamp="20220801 01:26:09.860" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:26:09.849" endtime="20220801 01:26:09.861"/>
</kw>
<status status="PASS" starttime="20220801 01:26:09.848" endtime="20220801 01:26:09.861"/>
</kw>
<status status="PASS" starttime="20220801 01:26:09.848" endtime="20220801 01:26:09.861"/>
</kw>
<status status="PASS" starttime="20220801 01:26:09.837" endtime="20220801 01:26:09.861"/>
</kw>
<status status="PASS" starttime="20220801 01:26:09.837" endtime="20220801 01:26:09.862"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl ${volume3}/bk1 -a user:testuser2/scm@EXAMPLE.COM:a</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:26:09.865" level="INFO">Running command 'ozone sh bucket addacl fstest347/bk1 -a user:testuser2/scm@EXAMPLE.COM:a 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:26:13.418" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:26:13.418" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:a[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220801 01:26:09.863" endtime="20220801 01:26:13.418"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:26:13.419" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:a[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220801 01:26:13.418" endtime="20220801 01:26:13.419"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:26:13.420" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:26:13.419" endtime="20220801 01:26:13.420"/>
</kw>
<status status="PASS" starttime="20220801 01:26:09.862" endtime="20220801 01:26:13.420"/>
</kw>
<msg timestamp="20220801 01:26:13.420" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:26:09.862" endtime="20220801 01:26:13.421"/>
</kw>
<status status="PASS" starttime="20220801 01:26:09.862" endtime="20220801 01:26:13.421"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket getacl /${volume3}/bk1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:26:13.425" level="INFO">Running command 'ozone sh bucket getacl /fstest347/bk1 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:26:17.507" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:26:17.507" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20220801 01:26:13.423" endtime="20220801 01:26:17.507"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:26:17.508" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser2/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20220801 01:26:17.508" endtime="20220801 01:26:17.509"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:26:17.509" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:26:17.509" endtime="20220801 01:26:17.509"/>
</kw>
<status status="PASS" starttime="20220801 01:26:13.422" endtime="20220801 01:26:17.509"/>
</kw>
<msg timestamp="20220801 01:26:17.510" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:26:13.422" endtime="20220801 01:26:17.510"/>
</kw>
<status status="PASS" starttime="20220801 01:26:13.421" endtime="20220801 01:26:17.510"/>
</kw>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:26:17.513" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:26:17.517" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:26:17.517" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:26:17.511" endtime="20220801 01:26:17.517"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:26:17.518" level="INFO"/>
<status status="PASS" starttime="20220801 01:26:17.517" endtime="20220801 01:26:17.518"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:26:17.519" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:26:17.518" endtime="20220801 01:26:17.519"/>
</kw>
<status status="PASS" starttime="20220801 01:26:17.511" endtime="20220801 01:26:17.519"/>
</kw>
<msg timestamp="20220801 01:26:17.519" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:26:17.511" endtime="20220801 01:26:17.520"/>
</kw>
<status status="PASS" starttime="20220801 01:26:17.510" endtime="20220801 01:26:17.520"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:26:17.524" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:26:17.527" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:26:17.527" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220801 01:26:17.522" endtime="20220801 01:26:17.527"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:26:17.528" level="INFO">scm</msg>
<status status="PASS" starttime="20220801 01:26:17.527" endtime="20220801 01:26:17.528"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:26:17.529" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:26:17.528" endtime="20220801 01:26:17.529"/>
</kw>
<status status="PASS" starttime="20220801 01:26:17.521" endtime="20220801 01:26:17.529"/>
</kw>
<msg timestamp="20220801 01:26:17.529" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:26:17.521" endtime="20220801 01:26:17.529"/>
</kw>
<msg timestamp="20220801 01:26:17.530" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220801 01:26:17.521" endtime="20220801 01:26:17.530"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220801 01:26:17.530" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220801 01:26:17.530" endtime="20220801 01:26:17.530"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:26:17.534" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:26:17.541" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:26:17.541" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:26:17.532" endtime="20220801 01:26:17.541"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:26:17.542" level="INFO"/>
<status status="PASS" starttime="20220801 01:26:17.541" endtime="20220801 01:26:17.542"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:26:17.542" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:26:17.542" endtime="20220801 01:26:17.543"/>
</kw>
<status status="PASS" starttime="20220801 01:26:17.532" endtime="20220801 01:26:17.543"/>
</kw>
<msg timestamp="20220801 01:26:17.543" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:26:17.531" endtime="20220801 01:26:17.543"/>
</kw>
<status status="PASS" starttime="20220801 01:26:17.531" endtime="20220801 01:26:17.544"/>
</kw>
<status status="PASS" starttime="20220801 01:26:17.530" endtime="20220801 01:26:17.544"/>
</kw>
<status status="PASS" starttime="20220801 01:26:17.520" endtime="20220801 01:26:17.544"/>
</kw>
<status status="PASS" starttime="20220801 01:26:17.520" endtime="20220801 01:26:17.544"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket getacl /${volume3}/bk1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:26:17.548" level="INFO">Running command 'ozone sh bucket getacl /fstest347/bk1 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:26:21.404" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:26:21.404" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20220801 01:26:17.546" endtime="20220801 01:26:21.404"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:26:21.406" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser2/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20220801 01:26:21.405" endtime="20220801 01:26:21.406"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:26:21.407" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:26:21.406" endtime="20220801 01:26:21.407"/>
</kw>
<status status="PASS" starttime="20220801 01:26:17.545" endtime="20220801 01:26:21.407"/>
</kw>
<msg timestamp="20220801 01:26:21.407" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:26:17.545" endtime="20220801 01:26:21.408"/>
</kw>
<status status="PASS" starttime="20220801 01:26:17.544" endtime="20220801 01:26:21.408"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key list /${volume3}/bk1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:26:21.412" level="INFO">Running command 'ozone sh key list /fstest347/bk1 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:26:25.474" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:26:25.474" level="INFO">${output} = [ {
  "volumeName" : "fstest347",
  "bucketName" : "bk1",
  "name" : "key1",
  "dataSize" : 17526,
  "creationTime" : "2022-08-01T01:25:03.150Z",
  "modificationTime" : "2022-08-01T01:25:28.339Z",
  "...</msg>
<status status="PASS" starttime="20220801 01:26:21.409" endtime="20220801 01:26:25.474"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:26:25.475" level="INFO">[ {
  "volumeName" : "fstest347",
  "bucketName" : "bk1",
  "name" : "key1",
  "dataSize" : 17526,
  "creationTime" : "2022-08-01T01:25:03.150Z",
  "modificationTime" : "2022-08-01T01:25:28.339Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  }
} ]</msg>
<status status="PASS" starttime="20220801 01:26:25.475" endtime="20220801 01:26:25.476"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:26:25.476" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:26:25.476" endtime="20220801 01:26:25.476"/>
</kw>
<status status="PASS" starttime="20220801 01:26:21.409" endtime="20220801 01:26:25.477"/>
</kw>
<msg timestamp="20220801 01:26:25.477" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:26:21.409" endtime="20220801 01:26:25.477"/>
</kw>
<status status="PASS" starttime="20220801 01:26:21.408" endtime="20220801 01:26:25.477"/>
</kw>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:26:25.481" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:26:25.484" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:26:25.484" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:26:25.479" endtime="20220801 01:26:25.484"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:26:25.485" level="INFO"/>
<status status="PASS" starttime="20220801 01:26:25.485" endtime="20220801 01:26:25.485"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:26:25.486" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:26:25.486" endtime="20220801 01:26:25.486"/>
</kw>
<status status="PASS" starttime="20220801 01:26:25.478" endtime="20220801 01:26:25.486"/>
</kw>
<msg timestamp="20220801 01:26:25.486" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:26:25.478" endtime="20220801 01:26:25.487"/>
</kw>
<status status="PASS" starttime="20220801 01:26:25.477" endtime="20220801 01:26:25.487"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:26:25.491" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:26:25.494" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:26:25.494" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220801 01:26:25.489" endtime="20220801 01:26:25.494"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:26:25.495" level="INFO">scm</msg>
<status status="PASS" starttime="20220801 01:26:25.495" endtime="20220801 01:26:25.495"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:26:25.496" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:26:25.495" endtime="20220801 01:26:25.496"/>
</kw>
<status status="PASS" starttime="20220801 01:26:25.489" endtime="20220801 01:26:25.496"/>
</kw>
<msg timestamp="20220801 01:26:25.496" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:26:25.488" endtime="20220801 01:26:25.497"/>
</kw>
<msg timestamp="20220801 01:26:25.497" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220801 01:26:25.488" endtime="20220801 01:26:25.497"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220801 01:26:25.498" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220801 01:26:25.497" endtime="20220801 01:26:25.498"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:26:25.502" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:26:25.509" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:26:25.509" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:26:25.500" endtime="20220801 01:26:25.509"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:26:25.510" level="INFO"/>
<status status="PASS" starttime="20220801 01:26:25.509" endtime="20220801 01:26:25.510"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:26:25.511" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:26:25.510" endtime="20220801 01:26:25.511"/>
</kw>
<status status="PASS" starttime="20220801 01:26:25.499" endtime="20220801 01:26:25.511"/>
</kw>
<msg timestamp="20220801 01:26:25.511" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:26:25.499" endtime="20220801 01:26:25.511"/>
</kw>
<status status="PASS" starttime="20220801 01:26:25.498" endtime="20220801 01:26:25.512"/>
</kw>
<status status="PASS" starttime="20220801 01:26:25.498" endtime="20220801 01:26:25.512"/>
</kw>
<status status="PASS" starttime="20220801 01:26:25.488" endtime="20220801 01:26:25.512"/>
</kw>
<status status="PASS" starttime="20220801 01:26:25.487" endtime="20220801 01:26:25.512"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220801 01:25:32.342" endtime="20220801 01:26:25.512"/>
</test>
<doc>Smoke test to start cluster with docker-compose environments.</doc>
<status status="PASS" starttime="20220801 01:23:04.055" endtime="20220801 01:26:25.513"/>
</suite>
<suite id="s1-s2-s4" name="Ozone-Secure-S3" source="/opt/hadoop/smoketest/security/ozone-secure-s3.robot">
<test id="s1-s2-s4-t1" name="Secure S3 test Success" line="37">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup s3 tests</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup s3 tests" library="commonawslib">
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220801 01:26:25.545" level="INFO">${randStr} = 5001979870</msg>
<status status="PASS" starttime="20220801 01:26:25.545" endtime="20220801 01:26:25.545"/>
</kw>
<msg timestamp="20220801 01:26:25.546" level="INFO">${random} = ozone-test-5001979870</msg>
<status status="PASS" starttime="20220801 01:26:25.545" endtime="20220801 01:26:25.546"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220801 01:26:25.547" level="INFO">${PREFIX} = ozone-test-5001979870</msg>
<status status="PASS" starttime="20220801 01:26:25.546" endtime="20220801 01:26:25.547"/>
</kw>
<status status="PASS" starttime="20220801 01:26:25.544" endtime="20220801 01:26:25.547"/>
</kw>
<status status="PASS" starttime="20220801 01:26:25.544" endtime="20220801 01:26:25.547"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which apt-get</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:26:25.550" level="INFO">Running command 'which apt-get 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:26:25.553" level="INFO">${rc} = 1</msg>
<msg timestamp="20220801 01:26:25.553" level="INFO">${output} = which: no apt-get in (/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin)</msg>
<status status="PASS" starttime="20220801 01:26:25.548" endtime="20220801 01:26:25.553"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220801 01:26:25.553" endtime="20220801 01:26:25.554"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>yum --help</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:26:25.556" level="INFO">Running command 'yum --help 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:26:25.708" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:26:25.708" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
ovl: Error while doing RPMdb copy-up:
[Errno 13] Permission denied: '/var/lib/rpm/Installtid'
Usage: yum [options] COMMAND

List of Commands:

check          Check f...</msg>
<status status="PASS" starttime="20220801 01:26:25.554" endtime="20220801 01:26:25.708"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Install aws cli s3 centos" library="commonawslib">
<kw name="Execute" library="os">
<arg>sudo -E yum install -y awscli</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:26:25.713" level="INFO">Running command 'sudo -E yum install -y awscli 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:26:28.705" level="INFO">${rc} = 1</msg>
<msg timestamp="20220801 01:26:28.705" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
Determining fastest mirrors


 One of the configured repositories failed (Unknown),
 and yum doesn't have enough cached data to continue. At this point the only
 saf...</msg>
<status status="PASS" starttime="20220801 01:26:25.711" endtime="20220801 01:26:28.705"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:26:28.706" level="INFO">Loaded plugins: fastestmirror, ovl
Determining fastest mirrors


 One of the configured repositories failed (Unknown),
 and yum doesn't have enough cached data to continue. At this point the only
 safe thing yum can do is fail. There are a few ways to work "fix" this:

     1. Contact the upstream for the repository and get them to fix the problem.

     2. Reconfigure the baseurl/etc. for the repository, to point to a working
        upstream. This is most often useful if you are using a newer
        distribution release than is supported by the repository (and the
        packages for the previous distribution release still work).

     3. Run the command with the repository temporarily disabled
            yum --disablerepo=&lt;repoid&gt; ...

     4. Disable the repository permanently, so yum won't use it by default. Yum
        will then just ignore the repository until you permanently enable it
        again or use --enablerepo for temporary usage:

            yum-config-manager --disable &lt;repoid&gt;
        or
            subscription-manager repos --disable=&lt;repoid&gt;

     5. Configure the failing repository to be skipped, if it is unavailable.
        Note that yum will try to contact the repo. when it runs most commands,
        so will have to try and fail each time (and thus. yum will be be much
        slower). If it is a very temporary problem though, this is often a nice
        compromise:

            yum-config-manager --save --setopt=&lt;repoid&gt;.skip_if_unavailable=true

Cannot retrieve metalink for repository: epel/x86_64. Please verify its path and try again</msg>
<status status="PASS" starttime="20220801 01:26:28.705" endtime="20220801 01:26:28.706"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:26:28.707" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg timestamp="20220801 01:26:28.707" level="FAIL">1 != 0</msg>
<status status="FAIL" starttime="20220801 01:26:28.706" endtime="20220801 01:26:28.708"/>
</kw>
<status status="FAIL" starttime="20220801 01:26:25.711" endtime="20220801 01:26:28.709"/>
</kw>
<msg timestamp="20220801 01:26:28.709" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20220801 01:26:25.711" endtime="20220801 01:26:28.710"/>
</kw>
<status status="FAIL" starttime="20220801 01:26:25.710" endtime="20220801 01:26:28.711"/>
</kw>
<status status="FAIL" starttime="20220801 01:26:25.709" endtime="20220801 01:26:28.712"/>
</kw>
<status status="FAIL" starttime="20220801 01:26:25.709" endtime="20220801 01:26:28.712"/>
</kw>
<status status="FAIL" starttime="20220801 01:26:25.548" endtime="20220801 01:26:28.713"/>
</kw>
<status status="FAIL" starttime="20220801 01:26:25.547" endtime="20220801 01:26:28.713"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20220801 01:26:28.714" endtime="20220801 01:26:28.714"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${BUCKET}</var>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20220801 01:26:28.714" endtime="20220801 01:26:28.714"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" starttime="20220801 01:26:28.714" endtime="20220801 01:26:28.714"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20220801 01:26:28.714" endtime="20220801 01:26:28.715"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20220801 01:26:28.715" endtime="20220801 01:26:28.715"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20220801 01:26:28.715" endtime="20220801 01:26:28.715"/>
</kw>
<status status="FAIL" starttime="20220801 01:26:25.544" endtime="20220801 01:26:28.716"/>
</kw>
<status status="FAIL" starttime="20220801 01:26:25.543" endtime="20220801 01:26:28.716"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} create-bucket --bucket bucket-test123</arg>
<status status="NOT RUN" starttime="20220801 01:26:28.716" endtime="20220801 01:26:28.716"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} list-buckets</arg>
<status status="NOT RUN" starttime="20220801 01:26:28.716" endtime="20220801 01:26:28.716"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>bucket-test123</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220801 01:26:28.716" endtime="20220801 01:26:28.717"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20220801 01:26:25.542" endtime="20220801 01:26:28.717">1 != 0</status>
</test>
<test id="s1-s2-s4-t2" name="Secure S3 put-object test" line="43">
<kw name="Set Variable" library="BuiltIn">
<var>${testFilePath}</var>
<arg>${TEMPDIR}/${TEST_FILE}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220801 01:26:28.719" level="INFO">${testFilePath} = /tmp/NOTICE.txt</msg>
<status status="PASS" starttime="20220801 01:26:28.719" endtime="20220801 01:26:28.719"/>
</kw>
<kw name="Copy File" library="OperatingSystem">
<arg>${TEST_FILE}</arg>
<arg>${testFilePath}</arg>
<doc>Copies the source file into the destination.</doc>
<msg timestamp="20220801 01:26:28.721" level="INFO" html="true">Copied file from '&lt;a href="file:///opt/hadoop/NOTICE.txt"&gt;/opt/hadoop/NOTICE.txt&lt;/a&gt;' to '&lt;a href="file:///tmp/NOTICE.txt"&gt;/tmp/NOTICE.txt&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20220801 01:26:28.719" endtime="20220801 01:26:28.721"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint ${ENDPOINT_URL} put-object --bucket=bucket-test123 --key=tmp1/tmp2/NOTICE.txt --body=${testFilePath}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:26:28.724" level="INFO">Running command 'aws s3api --endpoint http://s3g:9878 put-object --bucket=bucket-test123 --key=tmp1/tmp2/NOTICE.txt --body=/tmp/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:26:29.278" level="INFO">${rc} = 255</msg>
<msg timestamp="20220801 01:26:29.278" level="INFO">${output} = Unable to locate credentials. You can configure credentials by running "aws configure".</msg>
<status status="PASS" starttime="20220801 01:26:28.722" endtime="20220801 01:26:29.278"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:26:29.280" level="INFO">Unable to locate credentials. You can configure credentials by running "aws configure".</msg>
<status status="PASS" starttime="20220801 01:26:29.279" endtime="20220801 01:26:29.280"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:26:29.280" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg timestamp="20220801 01:26:29.281" level="FAIL">255 != 0</msg>
<status status="FAIL" starttime="20220801 01:26:29.280" endtime="20220801 01:26:29.281"/>
</kw>
<status status="FAIL" starttime="20220801 01:26:28.722" endtime="20220801 01:26:29.283"/>
</kw>
<msg timestamp="20220801 01:26:29.283" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20220801 01:26:28.722" endtime="20220801 01:26:29.283"/>
</kw>
<status status="FAIL" starttime="20220801 01:26:28.721" endtime="20220801 01:26:29.283"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint ${ENDPOINT_URL} list-objects --bucket=bucket-test123</arg>
<status status="NOT RUN" starttime="20220801 01:26:29.284" endtime="20220801 01:26:29.284"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>tmp1/tmp2/NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220801 01:26:29.284" endtime="20220801 01:26:29.284"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint ${ENDPOINT_URL} put-object --bucket=bucket-test123 --key=tmp3//tmp4/NOTICE.txt --body=${testFilePath}</arg>
<status status="NOT RUN" starttime="20220801 01:26:29.284" endtime="20220801 01:26:29.284"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint ${ENDPOINT_URL} list-objects --bucket=bucket-test123</arg>
<status status="NOT RUN" starttime="20220801 01:26:29.284" endtime="20220801 01:26:29.284"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>tmp3//tmp4/NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220801 01:26:29.285" endtime="20220801 01:26:29.285"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint ${ENDPOINT_URL} put-object --bucket=bucket-test123 --key=//tmp5/tmp6/NOTICE.txt --body=${testFilePath}</arg>
<status status="NOT RUN" starttime="20220801 01:26:29.285" endtime="20220801 01:26:29.285"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint ${ENDPOINT_URL} list-objects --bucket=bucket-test123</arg>
<status status="NOT RUN" starttime="20220801 01:26:29.285" endtime="20220801 01:26:29.285"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>//tmp5/tmp6/NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220801 01:26:29.285" endtime="20220801 01:26:29.285"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20220801 01:26:28.718" endtime="20220801 01:26:29.285">255 != 0</status>
</test>
<test id="s1-s2-s4-t3" name="Secure S3 test Failure" line="56">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:26:29.291" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:26:29.757" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:26:29.757" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:26:29.289" endtime="20220801 01:26:29.757"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:26:29.758" level="INFO"/>
<status status="PASS" starttime="20220801 01:26:29.758" endtime="20220801 01:26:29.758"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:26:29.759" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:26:29.759" endtime="20220801 01:26:29.759"/>
</kw>
<status status="PASS" starttime="20220801 01:26:29.288" endtime="20220801 01:26:29.759"/>
</kw>
<msg timestamp="20220801 01:26:29.759" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:26:29.288" endtime="20220801 01:26:29.760"/>
</kw>
<status status="PASS" starttime="20220801 01:26:29.287" endtime="20220801 01:26:29.760"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:26:29.764" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:26:30.230" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:26:30.230" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:26:29.762" endtime="20220801 01:26:30.231"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:26:30.232" level="INFO"/>
<status status="PASS" starttime="20220801 01:26:30.231" endtime="20220801 01:26:30.232"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:26:30.232" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:26:30.232" endtime="20220801 01:26:30.232"/>
</kw>
<status status="PASS" starttime="20220801 01:26:29.761" endtime="20220801 01:26:30.233"/>
</kw>
<msg timestamp="20220801 01:26:30.233" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:26:29.761" endtime="20220801 01:26:30.233"/>
</kw>
<status status="PASS" starttime="20220801 01:26:29.760" endtime="20220801 01:26:30.233"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:26:30.237" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:26:30.696" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:26:30.696" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:26:30.235" endtime="20220801 01:26:30.696"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:26:30.697" level="INFO"/>
<status status="PASS" starttime="20220801 01:26:30.696" endtime="20220801 01:26:30.697"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:26:30.698" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:26:30.697" endtime="20220801 01:26:30.698"/>
</kw>
<status status="PASS" starttime="20220801 01:26:30.234" endtime="20220801 01:26:30.698"/>
</kw>
<msg timestamp="20220801 01:26:30.698" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:26:30.234" endtime="20220801 01:26:30.699"/>
</kw>
<status status="PASS" starttime="20220801 01:26:30.234" endtime="20220801 01:26:30.699"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:26:30.703" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:26:31.162" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:26:31.162" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:26:30.700" endtime="20220801 01:26:31.163"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:26:31.164" level="INFO"/>
<status status="PASS" starttime="20220801 01:26:31.163" endtime="20220801 01:26:31.164"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:26:31.165" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:26:31.164" endtime="20220801 01:26:31.165"/>
</kw>
<status status="PASS" starttime="20220801 01:26:30.700" endtime="20220801 01:26:31.165"/>
</kw>
<msg timestamp="20220801 01:26:31.165" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:26:30.700" endtime="20220801 01:26:31.165"/>
</kw>
<status status="PASS" starttime="20220801 01:26:30.699" endtime="20220801 01:26:31.166"/>
</kw>
<status status="PASS" starttime="20220801 01:26:29.287" endtime="20220801 01:26:31.166"/>
</kw>
<status status="PASS" starttime="20220801 01:26:29.287" endtime="20220801 01:26:31.166"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${result}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} create-bucket --bucket bucket-test123</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:26:31.168" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-test123 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:26:33.532" level="INFO">${rc} = 255</msg>
<msg timestamp="20220801 01:26:33.532" level="INFO">${result} = 
An error occurred (AccessDenied) when calling the CreateBucket operation: User doesn't have the right to access this resource.</msg>
<status status="PASS" starttime="20220801 01:26:31.166" endtime="20220801 01:26:33.532"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${rc} &gt; 0</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220801 01:26:33.533" endtime="20220801 01:26:33.534"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220801 01:26:29.286" endtime="20220801 01:26:33.534"/>
</test>
<doc>Smoke test to start cluster with docker-compose environments.</doc>
<status status="FAIL" starttime="20220801 01:26:25.516" endtime="20220801 01:26:33.535"/>
</suite>
<suite id="s1-s2-s5" name="Ozone-Secure-Tenant" source="/opt/hadoop/smoketest/security/ozone-secure-tenant.robot">
<test id="s1-s2-s5-t1" name="Create Tenant Success with Cluster Admin" line="30">
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:26:33.551" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:26:33.561" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:26:33.561" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220801 01:26:33.549" endtime="20220801 01:26:33.561"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:26:33.562" level="INFO">scm</msg>
<status status="PASS" starttime="20220801 01:26:33.562" endtime="20220801 01:26:33.562"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:26:33.563" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:26:33.563" endtime="20220801 01:26:33.563"/>
</kw>
<status status="PASS" starttime="20220801 01:26:33.549" endtime="20220801 01:26:33.563"/>
</kw>
<msg timestamp="20220801 01:26:33.564" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:26:33.548" endtime="20220801 01:26:33.564"/>
</kw>
<msg timestamp="20220801 01:26:33.564" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220801 01:26:33.548" endtime="20220801 01:26:33.564"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220801 01:26:33.566" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220801 01:26:33.564" endtime="20220801 01:26:33.566"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:26:33.571" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:26:33.578" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:26:33.578" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:26:33.568" endtime="20220801 01:26:33.578"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:26:33.579" level="INFO"/>
<status status="PASS" starttime="20220801 01:26:33.579" endtime="20220801 01:26:33.579"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:26:33.580" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:26:33.580" endtime="20220801 01:26:33.580"/>
</kw>
<status status="PASS" starttime="20220801 01:26:33.568" endtime="20220801 01:26:33.580"/>
</kw>
<msg timestamp="20220801 01:26:33.581" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:26:33.568" endtime="20220801 01:26:33.581"/>
</kw>
<status status="PASS" starttime="20220801 01:26:33.567" endtime="20220801 01:26:33.581"/>
</kw>
<status status="PASS" starttime="20220801 01:26:33.566" endtime="20220801 01:26:33.581"/>
</kw>
<status status="PASS" starttime="20220801 01:26:33.548" endtime="20220801 01:26:33.581"/>
</kw>
<status status="PASS" starttime="20220801 01:26:33.547" endtime="20220801 01:26:33.581"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone tenant --verbose create tenantone</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:26:33.585" level="INFO">Running command 'ozone tenant --verbose create tenantone 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:26:36.757" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:26:36.757" level="INFO">${output} = 2022-08-01 01:26:36,487 [main] INFO rpc.RpcClient: Creating Tenant: 'tenantone', with new volume: 'tenantone'
{
  "tenantId": "tenantone"
}</msg>
<status status="PASS" starttime="20220801 01:26:33.583" endtime="20220801 01:26:36.757"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:26:36.758" level="INFO">2022-08-01 01:26:36,487 [main] INFO rpc.RpcClient: Creating Tenant: 'tenantone', with new volume: 'tenantone'
{
  "tenantId": "tenantone"
}</msg>
<status status="PASS" starttime="20220801 01:26:36.757" endtime="20220801 01:26:36.758"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:26:36.759" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:26:36.758" endtime="20220801 01:26:36.759"/>
</kw>
<status status="PASS" starttime="20220801 01:26:33.582" endtime="20220801 01:26:36.759"/>
</kw>
<msg timestamp="20220801 01:26:36.759" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:26:33.582" endtime="20220801 01:26:36.760"/>
</kw>
<msg timestamp="20220801 01:26:36.760" level="INFO">${output} = 2022-08-01 01:26:36,487 [main] INFO rpc.RpcClient: Creating Tenant: 'tenantone', with new volume: 'tenantone'
{
  "tenantId": "tenantone"
}</msg>
<status status="PASS" starttime="20220801 01:26:33.582" endtime="20220801 01:26:36.760"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"tenantId": "tenantone"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220801 01:26:36.760" endtime="20220801 01:26:36.761"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220801 01:26:33.546" endtime="20220801 01:26:36.761"/>
</test>
<test id="s1-s2-s5-t2" name="Assign User Success with Cluster Admin" line="35">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone tenant --verbose user assign testuser --tenant=tenantone</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:26:36.766" level="INFO">Running command 'ozone tenant --verbose user assign testuser --tenant=tenantone 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:26:40.091" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:26:40.091" level="INFO">${output} = export AWS_ACCESS_KEY_ID='tenantone$testuser'
export AWS_SECRET_ACCESS_KEY='90656198872f89f2004c3dbb9045e9ca2a5037af6349340320159ceae783c845'
Assigned 'testuser' to 'tenantone' with accessId 'tenanton...</msg>
<status status="PASS" starttime="20220801 01:26:36.763" endtime="20220801 01:26:40.091"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:26:40.093" level="INFO">export AWS_ACCESS_KEY_ID='tenantone$testuser'
export AWS_SECRET_ACCESS_KEY='90656198872f89f2004c3dbb9045e9ca2a5037af6349340320159ceae783c845'
Assigned 'testuser' to 'tenantone' with accessId 'tenantone$testuser'.</msg>
<status status="PASS" starttime="20220801 01:26:40.092" endtime="20220801 01:26:40.093"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:26:40.093" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:26:40.093" endtime="20220801 01:26:40.093"/>
</kw>
<status status="PASS" starttime="20220801 01:26:36.763" endtime="20220801 01:26:40.094"/>
</kw>
<msg timestamp="20220801 01:26:40.094" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:26:36.763" endtime="20220801 01:26:40.094"/>
</kw>
<msg timestamp="20220801 01:26:40.094" level="INFO">${output} = export AWS_ACCESS_KEY_ID='tenantone$testuser'
export AWS_SECRET_ACCESS_KEY='90656198872f89f2004c3dbb9045e9ca2a5037af6349340320159ceae783c845'
Assigned 'testuser' to 'tenantone' with accessId 'tenanton...</msg>
<status status="PASS" starttime="20220801 01:26:36.762" endtime="20220801 01:26:40.094"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Assigned 'testuser' to 'tenantone'</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220801 01:26:40.095" endtime="20220801 01:26:40.095"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${accessId}</var>
<arg>${output}</arg>
<arg>(?&lt;=export AWS_ACCESS_KEY_ID=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20220801 01:26:40.096" level="INFO">${accessId} = ["'tenantone$testuser'"]</msg>
<status status="PASS" starttime="20220801 01:26:40.095" endtime="20220801 01:26:40.096"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secretKey}</var>
<arg>${output}</arg>
<arg>(?&lt;=export AWS_SECRET_ACCESS_KEY=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20220801 01:26:40.097" level="INFO">${secretKey} = ["'90656198872f89f2004c3dbb9045e9ca2a5037af6349340320159ceae783c845'"]</msg>
<status status="PASS" starttime="20220801 01:26:40.096" endtime="20220801 01:26:40.097"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessId}</var>
<arg>${accessId[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220801 01:26:40.098" level="INFO">${accessId} = 'tenantone$testuser'</msg>
<status status="PASS" starttime="20220801 01:26:40.097" endtime="20220801 01:26:40.098"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secretKey}</var>
<arg>${secretKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220801 01:26:40.099" level="INFO">${secretKey} = '90656198872f89f2004c3dbb9045e9ca2a5037af6349340320159ceae783c845'</msg>
<status status="PASS" starttime="20220801 01:26:40.098" endtime="20220801 01:26:40.099"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${ACCESS_ID}</arg>
<arg>${accessId}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20220801 01:26:40.100" level="INFO">${ACCESS_ID} = 'tenantone$testuser'</msg>
<status status="PASS" starttime="20220801 01:26:40.099" endtime="20220801 01:26:40.100"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${SECRET_KEY}</arg>
<arg>${secretKey}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20220801 01:26:40.100" level="INFO">${SECRET_KEY} = '90656198872f89f2004c3dbb9045e9ca2a5037af6349340320159ceae783c845'</msg>
<status status="PASS" starttime="20220801 01:26:40.100" endtime="20220801 01:26:40.100"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220801 01:26:36.762" endtime="20220801 01:26:40.101"/>
</test>
<test id="s1-s2-s5-t3" name="Assign User Failure to Non-existent Tenant" line="45">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>ozone tenant user assign testuser --tenant=thistenantdoesnotexist</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:26:40.104" level="INFO">Running command 'ozone tenant user assign testuser --tenant=thistenantdoesnotexist 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:26:43.336" level="INFO">${rc} = 255</msg>
<msg timestamp="20220801 01:26:43.337" level="INFO">${output} = TENANT_NOT_FOUND Tenant 'thistenantdoesnotexist' doesn't exist.</msg>
<status status="PASS" starttime="20220801 01:26:40.102" endtime="20220801 01:26:43.337"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Tenant 'thistenantdoesnotexist' doesn't exist</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220801 01:26:43.337" endtime="20220801 01:26:43.338"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220801 01:26:40.101" endtime="20220801 01:26:43.338"/>
</test>
<test id="s1-s2-s5-t4" name="GetUserInfo Success" line="49">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone tenant user info testuser</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:26:43.344" level="INFO">Running command 'ozone tenant user info testuser 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:26:46.349" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:26:46.349" level="INFO">${output} = User 'testuser' is assigned to:
- Tenant 'tenantone' with accessId 'tenantone$testuser'</msg>
<status status="PASS" starttime="20220801 01:26:43.342" endtime="20220801 01:26:46.349"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:26:46.350" level="INFO">User 'testuser' is assigned to:
- Tenant 'tenantone' with accessId 'tenantone$testuser'</msg>
<status status="PASS" starttime="20220801 01:26:46.349" endtime="20220801 01:26:46.350"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:26:46.351" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:26:46.350" endtime="20220801 01:26:46.351"/>
</kw>
<status status="PASS" starttime="20220801 01:26:43.341" endtime="20220801 01:26:46.351"/>
</kw>
<msg timestamp="20220801 01:26:46.351" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:26:43.341" endtime="20220801 01:26:46.352"/>
</kw>
<msg timestamp="20220801 01:26:46.352" level="INFO">${output} = User 'testuser' is assigned to:
- Tenant 'tenantone' with accessId 'tenantone$testuser'</msg>
<status status="PASS" starttime="20220801 01:26:43.340" endtime="20220801 01:26:46.352"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Tenant 'tenantone' with accessId 'tenantone$testuser'</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220801 01:26:46.352" endtime="20220801 01:26:46.353"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220801 01:26:43.339" endtime="20220801 01:26:46.353"/>
</test>
<test id="s1-s2-s5-t5" name="GetUserInfo as JSON Success" line="53">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone tenant user info --json testuser | jq '.tenants | .[].accessId'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:26:46.358" level="INFO">Running command 'ozone tenant user info --json testuser | jq '.tenants | .[].accessId' 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:26:49.479" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:26:49.479" level="INFO">${output} = "tenantone$testuser"</msg>
<status status="PASS" starttime="20220801 01:26:46.355" endtime="20220801 01:26:49.479"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:26:49.480" level="INFO">"tenantone$testuser"</msg>
<status status="PASS" starttime="20220801 01:26:49.479" endtime="20220801 01:26:49.480"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:26:49.481" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:26:49.480" endtime="20220801 01:26:49.481"/>
</kw>
<status status="PASS" starttime="20220801 01:26:46.355" endtime="20220801 01:26:49.481"/>
</kw>
<msg timestamp="20220801 01:26:49.481" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:26:46.355" endtime="20220801 01:26:49.482"/>
</kw>
<msg timestamp="20220801 01:26:49.482" level="INFO">${output} = "tenantone$testuser"</msg>
<status status="PASS" starttime="20220801 01:26:46.354" endtime="20220801 01:26:49.482"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"tenantone$testuser"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220801 01:26:49.482" endtime="20220801 01:26:49.482"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220801 01:26:46.354" endtime="20220801 01:26:49.483"/>
</test>
<test id="s1-s2-s5-t6" name="Create Bucket 1 Success via S3 API" line="57">
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${ACCESS_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:26:49.487" level="INFO">Running command 'aws configure set aws_access_key_id 'tenantone$testuser' 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:26:49.956" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:26:49.956" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:26:49.485" endtime="20220801 01:26:49.956"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:26:49.957" level="INFO"/>
<status status="PASS" starttime="20220801 01:26:49.957" endtime="20220801 01:26:49.957"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:26:49.958" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:26:49.957" endtime="20220801 01:26:49.958"/>
</kw>
<status status="PASS" starttime="20220801 01:26:49.485" endtime="20220801 01:26:49.958"/>
</kw>
<msg timestamp="20220801 01:26:49.958" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:26:49.484" endtime="20220801 01:26:49.959"/>
</kw>
<status status="PASS" starttime="20220801 01:26:49.484" endtime="20220801 01:26:49.959"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${SECRET_KEY}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:26:49.963" level="INFO">Running command 'aws configure set aws_secret_access_key '90656198872f89f2004c3dbb9045e9ca2a5037af6349340320159ceae783c845' 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:26:50.431" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:26:50.431" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:26:49.960" endtime="20220801 01:26:50.431"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:26:50.432" level="INFO"/>
<status status="PASS" starttime="20220801 01:26:50.431" endtime="20220801 01:26:50.432"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:26:50.433" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:26:50.432" endtime="20220801 01:26:50.433"/>
</kw>
<status status="PASS" starttime="20220801 01:26:49.960" endtime="20220801 01:26:50.433"/>
</kw>
<msg timestamp="20220801 01:26:50.433" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:26:49.960" endtime="20220801 01:26:50.433"/>
</kw>
<status status="PASS" starttime="20220801 01:26:49.959" endtime="20220801 01:26:50.434"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${S3G_ENDPOINT_URL} create-bucket --bucket bucket-test1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:26:50.437" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-test1 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:26:51.092" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:26:51.092" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-test1"
}</msg>
<status status="PASS" starttime="20220801 01:26:50.435" endtime="20220801 01:26:51.092"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:26:51.093" level="INFO">{
    "Location": "http://s3g:9878/bucket-test1"
}</msg>
<status status="PASS" starttime="20220801 01:26:51.092" endtime="20220801 01:26:51.093"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:26:51.094" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:26:51.093" endtime="20220801 01:26:51.094"/>
</kw>
<status status="PASS" starttime="20220801 01:26:50.435" endtime="20220801 01:26:51.094"/>
</kw>
<msg timestamp="20220801 01:26:51.094" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:26:50.434" endtime="20220801 01:26:51.094"/>
</kw>
<msg timestamp="20220801 01:26:51.095" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-test1"
}</msg>
<status status="PASS" starttime="20220801 01:26:50.434" endtime="20220801 01:26:51.095"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>bucket-test1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220801 01:26:51.095" endtime="20220801 01:26:51.095"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${S3G_ENDPOINT_URL} list-buckets</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:26:51.099" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-buckets 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:26:51.721" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:26:51.721" level="INFO">${output} = {
    "Buckets": [
        {
            "Name": "bucket-test1",
            "CreationDate": "2022-08-01T01:26:51.018Z"
        }
    ]
}</msg>
<status status="PASS" starttime="20220801 01:26:51.097" endtime="20220801 01:26:51.721"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:26:51.722" level="INFO">{
    "Buckets": [
        {
            "Name": "bucket-test1",
            "CreationDate": "2022-08-01T01:26:51.018Z"
        }
    ]
}</msg>
<status status="PASS" starttime="20220801 01:26:51.721" endtime="20220801 01:26:51.722"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:26:51.723" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:26:51.722" endtime="20220801 01:26:51.723"/>
</kw>
<status status="PASS" starttime="20220801 01:26:51.096" endtime="20220801 01:26:51.723"/>
</kw>
<msg timestamp="20220801 01:26:51.723" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:26:51.096" endtime="20220801 01:26:51.724"/>
</kw>
<msg timestamp="20220801 01:26:51.724" level="INFO">${output} = {
    "Buckets": [
        {
            "Name": "bucket-test1",
            "CreationDate": "2022-08-01T01:26:51.018Z"
        }
    ]
}</msg>
<status status="PASS" starttime="20220801 01:26:51.095" endtime="20220801 01:26:51.724"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>bucket-test1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220801 01:26:51.724" endtime="20220801 01:26:51.724"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220801 01:26:49.483" endtime="20220801 01:26:51.725"/>
</test>
<test id="s1-s2-s5-t7" name="Verify Bucket 1 Owner" line="65">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /tenantone/bucket-test1 | jq -r '.owner'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:26:51.730" level="INFO">Running command 'ozone sh bucket info /tenantone/bucket-test1 | jq -r '.owner' 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:26:55.568" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:26:55.568" level="INFO">${output} = testuser</msg>
<status status="PASS" starttime="20220801 01:26:51.727" endtime="20220801 01:26:55.568"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:26:55.569" level="INFO">testuser</msg>
<status status="PASS" starttime="20220801 01:26:55.569" endtime="20220801 01:26:55.570"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:26:55.570" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:26:55.570" endtime="20220801 01:26:55.570"/>
</kw>
<status status="PASS" starttime="20220801 01:26:51.727" endtime="20220801 01:26:55.571"/>
</kw>
<msg timestamp="20220801 01:26:55.571" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:26:51.727" endtime="20220801 01:26:55.571"/>
</kw>
<msg timestamp="20220801 01:26:55.571" level="INFO">${result} = testuser</msg>
<status status="PASS" starttime="20220801 01:26:51.726" endtime="20220801 01:26:55.571"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>testuser</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220801 01:26:55.571" endtime="20220801 01:26:55.572"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220801 01:26:51.725" endtime="20220801 01:26:55.572"/>
</test>
<test id="s1-s2-s5-t8" name="SetSecret Success with Cluster Admin" line="69">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone tenant user setsecret 'tenantone$testuser' --secret=somesecret1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:26:55.577" level="INFO">Running command 'ozone tenant user setsecret 'tenantone$testuser' --secret=somesecret1 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:26:58.730" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:26:58.730" level="INFO">${output} = export AWS_ACCESS_KEY_ID='tenantone$testuser'
export AWS_SECRET_ACCESS_KEY='somesecret1'</msg>
<status status="PASS" starttime="20220801 01:26:55.575" endtime="20220801 01:26:58.730"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:26:58.732" level="INFO">export AWS_ACCESS_KEY_ID='tenantone$testuser'
export AWS_SECRET_ACCESS_KEY='somesecret1'</msg>
<status status="PASS" starttime="20220801 01:26:58.731" endtime="20220801 01:26:58.732"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:26:58.732" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:26:58.732" endtime="20220801 01:26:58.733"/>
</kw>
<status status="PASS" starttime="20220801 01:26:55.574" endtime="20220801 01:26:58.733"/>
</kw>
<msg timestamp="20220801 01:26:58.733" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:26:55.574" endtime="20220801 01:26:58.733"/>
</kw>
<msg timestamp="20220801 01:26:58.733" level="INFO">${output} = export AWS_ACCESS_KEY_ID='tenantone$testuser'
export AWS_SECRET_ACCESS_KEY='somesecret1'</msg>
<status status="PASS" starttime="20220801 01:26:55.573" endtime="20220801 01:26:58.734"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>export AWS_SECRET_ACCESS_KEY='somesecret1'</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220801 01:26:58.734" endtime="20220801 01:26:58.734"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220801 01:26:55.573" endtime="20220801 01:26:58.734"/>
</test>
<test id="s1-s2-s5-t9" name="SetSecret Failure For Invalid Secret 1" line="73">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>ozone tenant user setsecret 'tenantone$testuser' --secret=''</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:26:58.738" level="INFO">Running command 'ozone tenant user setsecret 'tenantone$testuser' --secret='' 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:27:01.875" level="INFO">${rc} = 255</msg>
<msg timestamp="20220801 01:27:01.875" level="INFO">${output} = secretKey cannot be null or empty.</msg>
<status status="PASS" starttime="20220801 01:26:58.736" endtime="20220801 01:27:01.875"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>secretKey cannot be null or empty.</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220801 01:27:01.876" endtime="20220801 01:27:01.877"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220801 01:26:58.735" endtime="20220801 01:27:01.877"/>
</test>
<test id="s1-s2-s5-t10" name="SetSecret Failure For Invalid Secret 2" line="77">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>ozone tenant user setsecret 'tenantone$testuser' --secret=short</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:27:01.881" level="INFO">Running command 'ozone tenant user setsecret 'tenantone$testuser' --secret=short 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:27:05.180" level="INFO">${rc} = 255</msg>
<msg timestamp="20220801 01:27:05.180" level="INFO">${output} = INVALID_REQUEST Secret key length should be at least 8 characters</msg>
<status status="PASS" starttime="20220801 01:27:01.878" endtime="20220801 01:27:05.180"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Secret key length should be at least 8 characters</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220801 01:27:05.181" endtime="20220801 01:27:05.182"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220801 01:27:01.878" endtime="20220801 01:27:05.182"/>
</test>
<test id="s1-s2-s5-t11" name="GetSecret Success" line="81">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone tenant user getsecret 'tenantone$testuser'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:27:05.188" level="INFO">Running command 'ozone tenant user getsecret 'tenantone$testuser' 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:27:08.397" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:27:08.397" level="INFO">${output} = export AWS_ACCESS_KEY_ID='tenantone$testuser'
export AWS_SECRET_ACCESS_KEY='somesecret1'</msg>
<status status="PASS" starttime="20220801 01:27:05.186" endtime="20220801 01:27:08.397"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:27:08.398" level="INFO">export AWS_ACCESS_KEY_ID='tenantone$testuser'
export AWS_SECRET_ACCESS_KEY='somesecret1'</msg>
<status status="PASS" starttime="20220801 01:27:08.398" endtime="20220801 01:27:08.399"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:27:08.399" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:27:08.399" endtime="20220801 01:27:08.399"/>
</kw>
<status status="PASS" starttime="20220801 01:27:05.185" endtime="20220801 01:27:08.400"/>
</kw>
<msg timestamp="20220801 01:27:08.400" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:27:05.185" endtime="20220801 01:27:08.400"/>
</kw>
<msg timestamp="20220801 01:27:08.400" level="INFO">${output} = export AWS_ACCESS_KEY_ID='tenantone$testuser'
export AWS_SECRET_ACCESS_KEY='somesecret1'</msg>
<status status="PASS" starttime="20220801 01:27:05.185" endtime="20220801 01:27:08.400"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>export AWS_SECRET_ACCESS_KEY='somesecret1'</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220801 01:27:08.400" endtime="20220801 01:27:08.401"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220801 01:27:05.184" endtime="20220801 01:27:08.401"/>
</test>
<test id="s1-s2-s5-t12" name="Delete Bucket 1 Failure With Old SecretKey via S3 API" line="85">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>aws s3api --endpoint-url ${S3G_ENDPOINT_URL} delete-bucket --bucket bucket-test1</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:27:08.404" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-bucket --bucket bucket-test1 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:27:08.965" level="INFO">${rc} = 255</msg>
<msg timestamp="20220801 01:27:08.965" level="INFO">${output} = 
An error occurred (AccessDenied) when calling the DeleteBucket operation: User doesn't have the right to access this resource.</msg>
<status status="PASS" starttime="20220801 01:27:08.402" endtime="20220801 01:27:08.965"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${rc} &gt; 0</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220801 01:27:08.966" endtime="20220801 01:27:08.967"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220801 01:27:08.402" endtime="20220801 01:27:08.967"/>
</test>
<test id="s1-s2-s5-t13" name="Delete Bucket 1 Success With Newly Set SecretKey via S3 API" line="89">
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key 'somesecret1'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:27:08.972" level="INFO">Running command 'aws configure set aws_secret_access_key 'somesecret1' 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:27:09.439" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:27:09.439" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:27:08.970" endtime="20220801 01:27:09.439"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:27:09.440" level="INFO"/>
<status status="PASS" starttime="20220801 01:27:09.439" endtime="20220801 01:27:09.440"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:27:09.441" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:27:09.440" endtime="20220801 01:27:09.441"/>
</kw>
<status status="PASS" starttime="20220801 01:27:08.969" endtime="20220801 01:27:09.441"/>
</kw>
<msg timestamp="20220801 01:27:09.441" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:27:08.969" endtime="20220801 01:27:09.442"/>
</kw>
<status status="PASS" starttime="20220801 01:27:08.968" endtime="20220801 01:27:09.442"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${S3G_ENDPOINT_URL} delete-bucket --bucket bucket-test1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:27:09.447" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-bucket --bucket bucket-test1 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:27:10.000" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:27:10.000" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:27:09.445" endtime="20220801 01:27:10.000"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:27:10.002" level="INFO"/>
<status status="PASS" starttime="20220801 01:27:10.001" endtime="20220801 01:27:10.002"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:27:10.002" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:27:10.002" endtime="20220801 01:27:10.002"/>
</kw>
<status status="PASS" starttime="20220801 01:27:09.444" endtime="20220801 01:27:10.003"/>
</kw>
<msg timestamp="20220801 01:27:10.003" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:27:09.443" endtime="20220801 01:27:10.003"/>
</kw>
<msg timestamp="20220801 01:27:10.003" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:27:09.442" endtime="20220801 01:27:10.003"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220801 01:27:08.968" endtime="20220801 01:27:10.004"/>
</test>
<test id="s1-s2-s5-t14" name="Delete Tenant Failure Tenant Not Empty" line="93">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>ozone tenant delete tenantone</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:27:10.007" level="INFO">Running command 'ozone tenant delete tenantone 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:27:13.139" level="INFO">${rc} = 255</msg>
<msg timestamp="20220801 01:27:13.139" level="INFO">${output} = TENANT_NOT_EMPTY Tenant 'tenantone' is not empty. All accessIds associated to this tenant must be revoked before the tenant can be deleted. See `ozone tenant user revoke`</msg>
<status status="PASS" starttime="20220801 01:27:10.005" endtime="20220801 01:27:13.139"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>TENANT_NOT_EMPTY Tenant 'tenantone' is not empty. All accessIds associated to this tenant must be revoked before the tenant can be deleted. See `ozone tenant user revoke`</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220801 01:27:13.139" endtime="20220801 01:27:13.140"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220801 01:27:10.004" endtime="20220801 01:27:13.140"/>
</test>
<test id="s1-s2-s5-t15" name="Trigger and wait for background Sync to recover Policies and Roles in Authorizer" line="97">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>ozone admin om updateranger -host=om</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:27:13.145" level="INFO">Running command 'ozone admin om updateranger -host=om 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:27:16.524" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:27:16.524" level="INFO">${output} = Operation completed successfully</msg>
<status status="PASS" starttime="20220801 01:27:13.142" endtime="20220801 01:27:16.524"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Operation completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220801 01:27:16.524" endtime="20220801 01:27:16.525"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220801 01:27:13.141" endtime="20220801 01:27:16.525"/>
</test>
<test id="s1-s2-s5-t16" name="Create Tenant Failure with Regular User" line="101">
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:27:16.531" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:27:16.535" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:27:16.535" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220801 01:27:16.529" endtime="20220801 01:27:16.535"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:27:16.536" level="INFO">scm</msg>
<status status="PASS" starttime="20220801 01:27:16.535" endtime="20220801 01:27:16.536"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:27:16.537" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:27:16.536" endtime="20220801 01:27:16.537"/>
</kw>
<status status="PASS" starttime="20220801 01:27:16.529" endtime="20220801 01:27:16.537"/>
</kw>
<msg timestamp="20220801 01:27:16.537" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:27:16.528" endtime="20220801 01:27:16.538"/>
</kw>
<msg timestamp="20220801 01:27:16.538" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220801 01:27:16.528" endtime="20220801 01:27:16.538"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220801 01:27:16.538" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220801 01:27:16.538" endtime="20220801 01:27:16.538"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:27:16.542" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:27:16.605" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:27:16.605" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:27:16.540" endtime="20220801 01:27:16.605"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:27:16.606" level="INFO"/>
<status status="PASS" starttime="20220801 01:27:16.605" endtime="20220801 01:27:16.606"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:27:16.607" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:27:16.606" endtime="20220801 01:27:16.607"/>
</kw>
<status status="PASS" starttime="20220801 01:27:16.540" endtime="20220801 01:27:16.607"/>
</kw>
<msg timestamp="20220801 01:27:16.607" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:27:16.540" endtime="20220801 01:27:16.608"/>
</kw>
<status status="PASS" starttime="20220801 01:27:16.539" endtime="20220801 01:27:16.608"/>
</kw>
<status status="PASS" starttime="20220801 01:27:16.539" endtime="20220801 01:27:16.608"/>
</kw>
<status status="PASS" starttime="20220801 01:27:16.527" endtime="20220801 01:27:16.608"/>
</kw>
<status status="PASS" starttime="20220801 01:27:16.527" endtime="20220801 01:27:16.608"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>ozone tenant create tenanttwo</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:27:16.610" level="INFO">Running command 'ozone tenant create tenanttwo 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:27:19.590" level="INFO">${rc} = 255</msg>
<msg timestamp="20220801 01:27:19.590" level="INFO">${output} = 2022-08-01 01:27:19,442 [main] INFO rpc.RpcClient: Creating Tenant: 'tenanttwo', with new volume: 'tenanttwo'
PERMISSION_DENIED User 'testuser2/scm@EXAMPLE.COM' or 'testuser2' is not an Ozone admin</msg>
<status status="PASS" starttime="20220801 01:27:16.608" endtime="20220801 01:27:19.590"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>PERMISSION_DENIED User 'testuser2/scm@EXAMPLE.COM' or 'testuser2' is not an Ozone admin</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220801 01:27:19.591" endtime="20220801 01:27:19.591"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220801 01:27:16.526" endtime="20220801 01:27:19.592"/>
</test>
<test id="s1-s2-s5-t17" name="SetSecret Failure with Regular User" line="106">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>ozone tenant user set-secret 'tenantone$testuser' --secret=somesecret2</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:27:19.609" level="INFO">Running command 'ozone tenant user set-secret 'tenantone$testuser' --secret=somesecret2 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:27:22.688" level="INFO">${rc} = 255</msg>
<msg timestamp="20220801 01:27:22.689" level="INFO">${output} = USER_MISMATCH Requested accessId 'tenantone$testuser' doesn't belong to current user 'testuser2', nor does current user have Ozone or tenant administrator privilege</msg>
<status status="PASS" starttime="20220801 01:27:19.593" endtime="20220801 01:27:22.689"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>USER_MISMATCH Requested accessId 'tenantone$testuser' doesn't belong to current user 'testuser2', nor does current user have Ozone or tenant administrator privilege</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220801 01:27:22.689" endtime="20220801 01:27:22.690"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220801 01:27:19.593" endtime="20220801 01:27:22.690"/>
</test>
<test id="s1-s2-s5-t18" name="Create Bucket 2 Success with somesecret1 via S3 API" line="110">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${S3G_ENDPOINT_URL} create-bucket --bucket bucket-test2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:27:22.695" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-test2 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:27:23.317" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:27:23.317" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-test2"
}</msg>
<status status="PASS" starttime="20220801 01:27:22.693" endtime="20220801 01:27:23.317"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:27:23.318" level="INFO">{
    "Location": "http://s3g:9878/bucket-test2"
}</msg>
<status status="PASS" starttime="20220801 01:27:23.317" endtime="20220801 01:27:23.318"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:27:23.319" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:27:23.318" endtime="20220801 01:27:23.319"/>
</kw>
<status status="PASS" starttime="20220801 01:27:22.692" endtime="20220801 01:27:23.319"/>
</kw>
<msg timestamp="20220801 01:27:23.319" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:27:22.692" endtime="20220801 01:27:23.319"/>
</kw>
<msg timestamp="20220801 01:27:23.320" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-test2"
}</msg>
<status status="PASS" starttime="20220801 01:27:22.692" endtime="20220801 01:27:23.320"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>bucket-test2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220801 01:27:23.320" endtime="20220801 01:27:23.320"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220801 01:27:22.691" endtime="20220801 01:27:23.320"/>
</test>
<test id="s1-s2-s5-t19" name="Delete Bucket 2 Failure with somesecret2 via S3 API" line="114">
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key 'somesecret2'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:27:23.327" level="INFO">Running command 'aws configure set aws_secret_access_key 'somesecret2' 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:27:23.794" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:27:23.794" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:27:23.324" endtime="20220801 01:27:23.794"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:27:23.795" level="INFO"/>
<status status="PASS" starttime="20220801 01:27:23.794" endtime="20220801 01:27:23.795"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:27:23.796" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:27:23.795" endtime="20220801 01:27:23.796"/>
</kw>
<status status="PASS" starttime="20220801 01:27:23.324" endtime="20220801 01:27:23.796"/>
</kw>
<msg timestamp="20220801 01:27:23.796" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:27:23.324" endtime="20220801 01:27:23.796"/>
</kw>
<status status="PASS" starttime="20220801 01:27:23.323" endtime="20220801 01:27:23.797"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>aws s3api --endpoint-url ${S3G_ENDPOINT_URL} delete-bucket --bucket bucket-test2</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:27:23.799" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-bucket --bucket bucket-test2 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:27:24.350" level="INFO">${rc} = 255</msg>
<msg timestamp="20220801 01:27:24.350" level="INFO">${output} = 
An error occurred (AccessDenied) when calling the DeleteBucket operation: User doesn't have the right to access this resource.</msg>
<status status="PASS" starttime="20220801 01:27:23.797" endtime="20220801 01:27:24.350"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${rc} &gt; 0</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220801 01:27:24.350" endtime="20220801 01:27:24.352"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220801 01:27:23.322" endtime="20220801 01:27:24.352"/>
</test>
<test id="s1-s2-s5-t20" name="Delete Bucket 2 Success with somesecret1 via S3 API" line="119">
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key 'somesecret1'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:27:24.357" level="INFO">Running command 'aws configure set aws_secret_access_key 'somesecret1' 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:27:24.818" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:27:24.818" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:27:24.355" endtime="20220801 01:27:24.818"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:27:24.819" level="INFO"/>
<status status="PASS" starttime="20220801 01:27:24.818" endtime="20220801 01:27:24.819"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:27:24.820" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:27:24.819" endtime="20220801 01:27:24.820"/>
</kw>
<status status="PASS" starttime="20220801 01:27:24.354" endtime="20220801 01:27:24.820"/>
</kw>
<msg timestamp="20220801 01:27:24.820" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:27:24.354" endtime="20220801 01:27:24.821"/>
</kw>
<status status="PASS" starttime="20220801 01:27:24.354" endtime="20220801 01:27:24.821"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${S3G_ENDPOINT_URL} delete-bucket --bucket bucket-test2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:27:24.824" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-bucket --bucket bucket-test2 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:27:25.377" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:27:25.377" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:27:24.822" endtime="20220801 01:27:25.377"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:27:25.378" level="INFO"/>
<status status="PASS" starttime="20220801 01:27:25.377" endtime="20220801 01:27:25.378"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:27:25.379" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:27:25.378" endtime="20220801 01:27:25.379"/>
</kw>
<status status="PASS" starttime="20220801 01:27:24.822" endtime="20220801 01:27:25.379"/>
</kw>
<msg timestamp="20220801 01:27:25.379" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:27:24.822" endtime="20220801 01:27:25.380"/>
</kw>
<msg timestamp="20220801 01:27:25.380" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:27:24.821" endtime="20220801 01:27:25.380"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220801 01:27:24.353" endtime="20220801 01:27:25.380"/>
</test>
<test id="s1-s2-s5-t21" name="Revoke User AccessId Success with Cluster Admin" line="123">
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:27:25.386" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:27:25.389" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:27:25.389" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220801 01:27:25.384" endtime="20220801 01:27:25.389"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:27:25.390" level="INFO">scm</msg>
<status status="PASS" starttime="20220801 01:27:25.390" endtime="20220801 01:27:25.390"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:27:25.391" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:27:25.390" endtime="20220801 01:27:25.391"/>
</kw>
<status status="PASS" starttime="20220801 01:27:25.383" endtime="20220801 01:27:25.391"/>
</kw>
<msg timestamp="20220801 01:27:25.391" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:27:25.383" endtime="20220801 01:27:25.392"/>
</kw>
<msg timestamp="20220801 01:27:25.392" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220801 01:27:25.383" endtime="20220801 01:27:25.392"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220801 01:27:25.393" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220801 01:27:25.392" endtime="20220801 01:27:25.393"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:27:25.397" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:27:25.403" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:27:25.403" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:27:25.395" endtime="20220801 01:27:25.403"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:27:25.404" level="INFO"/>
<status status="PASS" starttime="20220801 01:27:25.404" endtime="20220801 01:27:25.404"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:27:25.405" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:27:25.404" endtime="20220801 01:27:25.405"/>
</kw>
<status status="PASS" starttime="20220801 01:27:25.394" endtime="20220801 01:27:25.405"/>
</kw>
<msg timestamp="20220801 01:27:25.405" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:27:25.394" endtime="20220801 01:27:25.406"/>
</kw>
<status status="PASS" starttime="20220801 01:27:25.393" endtime="20220801 01:27:25.406"/>
</kw>
<status status="PASS" starttime="20220801 01:27:25.393" endtime="20220801 01:27:25.406"/>
</kw>
<status status="PASS" starttime="20220801 01:27:25.382" endtime="20220801 01:27:25.406"/>
</kw>
<status status="PASS" starttime="20220801 01:27:25.382" endtime="20220801 01:27:25.406"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone tenant --verbose user revoke 'tenantone$testuser'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:27:25.409" level="INFO">Running command 'ozone tenant --verbose user revoke 'tenantone$testuser' 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:27:28.601" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:27:28.601" level="INFO">${output} = Revoked accessId 'tenantone$testuser'.</msg>
<status status="PASS" starttime="20220801 01:27:25.408" endtime="20220801 01:27:28.601"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:27:28.602" level="INFO">Revoked accessId 'tenantone$testuser'.</msg>
<status status="PASS" starttime="20220801 01:27:28.601" endtime="20220801 01:27:28.602"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:27:28.602" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:27:28.602" endtime="20220801 01:27:28.603"/>
</kw>
<status status="PASS" starttime="20220801 01:27:25.407" endtime="20220801 01:27:28.603"/>
</kw>
<msg timestamp="20220801 01:27:28.603" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:27:25.407" endtime="20220801 01:27:28.603"/>
</kw>
<msg timestamp="20220801 01:27:28.604" level="INFO">${output} = Revoked accessId 'tenantone$testuser'.</msg>
<status status="PASS" starttime="20220801 01:27:25.406" endtime="20220801 01:27:28.604"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Revoked accessId 'tenantone$testuser'.</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220801 01:27:28.604" endtime="20220801 01:27:28.604"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220801 01:27:25.381" endtime="20220801 01:27:28.604"/>
</test>
<test id="s1-s2-s5-t22" name="Create Bucket 3 Failure with Revoked AccessId via S3 API" line="128">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>aws s3api --endpoint-url ${S3G_ENDPOINT_URL} create-bucket --bucket bucket-test3</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:27:28.608" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-test3 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:27:29.155" level="INFO">${rc} = 255</msg>
<msg timestamp="20220801 01:27:29.155" level="INFO">${output} = 
An error occurred (AccessDenied) when calling the CreateBucket operation: User doesn't have the right to access this resource.</msg>
<status status="PASS" starttime="20220801 01:27:28.606" endtime="20220801 01:27:29.155"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${rc} &gt; 0</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220801 01:27:29.156" endtime="20220801 01:27:29.157"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220801 01:27:28.605" endtime="20220801 01:27:29.157"/>
</test>
<test id="s1-s2-s5-t23" name="Delete Tenant Success with Cluster Admin" line="132">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone tenant delete tenantone</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:27:29.162" level="INFO">Running command 'ozone tenant delete tenantone 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:27:32.200" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:27:32.200" level="INFO">${output} = Deleted tenant 'tenantone'.
But the associated volume 'tenantone' is not removed. To delete it, run
    ozone sh volume delete tenantone
</msg>
<status status="PASS" starttime="20220801 01:27:29.160" endtime="20220801 01:27:32.200"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:27:32.201" level="INFO">Deleted tenant 'tenantone'.
But the associated volume 'tenantone' is not removed. To delete it, run
    ozone sh volume delete tenantone
</msg>
<status status="PASS" starttime="20220801 01:27:32.200" endtime="20220801 01:27:32.201"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:27:32.202" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:27:32.201" endtime="20220801 01:27:32.202"/>
</kw>
<status status="PASS" starttime="20220801 01:27:29.160" endtime="20220801 01:27:32.202"/>
</kw>
<msg timestamp="20220801 01:27:32.202" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:27:29.159" endtime="20220801 01:27:32.203"/>
</kw>
<msg timestamp="20220801 01:27:32.203" level="INFO">${output} = Deleted tenant 'tenantone'.
But the associated volume 'tenantone' is not removed. To delete it, run
    ozone sh volume delete tenantone
</msg>
<status status="PASS" starttime="20220801 01:27:29.159" endtime="20220801 01:27:32.203"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Deleted tenant 'tenantone'.</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220801 01:27:32.203" endtime="20220801 01:27:32.204"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220801 01:27:29.158" endtime="20220801 01:27:32.204"/>
</test>
<test id="s1-s2-s5-t24" name="Delete Volume Success with Cluster Admin" line="136">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume delete tenantone</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:27:32.209" level="INFO">Running command 'ozone sh volume delete tenantone 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:27:35.793" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:27:35.793" level="INFO">${output} = Volume tenantone is deleted</msg>
<status status="PASS" starttime="20220801 01:27:32.207" endtime="20220801 01:27:35.793"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:27:35.794" level="INFO">Volume tenantone is deleted</msg>
<status status="PASS" starttime="20220801 01:27:35.794" endtime="20220801 01:27:35.795"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:27:35.795" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:27:35.795" endtime="20220801 01:27:35.795"/>
</kw>
<status status="PASS" starttime="20220801 01:27:32.206" endtime="20220801 01:27:35.796"/>
</kw>
<msg timestamp="20220801 01:27:35.796" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:27:32.206" endtime="20220801 01:27:35.796"/>
</kw>
<msg timestamp="20220801 01:27:35.796" level="INFO">${output} = Volume tenantone is deleted</msg>
<status status="PASS" starttime="20220801 01:27:32.205" endtime="20220801 01:27:35.796"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Volume tenantone is deleted</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220801 01:27:35.797" endtime="20220801 01:27:35.797"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220801 01:27:32.204" endtime="20220801 01:27:35.797"/>
</test>
<test id="s1-s2-s5-t25" name="List Tenant Expect Empty Result" line="140">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone tenant list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:27:35.803" level="INFO">Running command 'ozone tenant list 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:27:38.899" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:27:38.899" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:27:35.801" endtime="20220801 01:27:38.899"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:27:38.900" level="INFO"/>
<status status="PASS" starttime="20220801 01:27:38.899" endtime="20220801 01:27:38.900"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:27:38.901" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:27:38.900" endtime="20220801 01:27:38.901"/>
</kw>
<status status="PASS" starttime="20220801 01:27:35.800" endtime="20220801 01:27:38.901"/>
</kw>
<msg timestamp="20220801 01:27:38.901" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:27:35.800" endtime="20220801 01:27:38.902"/>
</kw>
<msg timestamp="20220801 01:27:38.902" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:27:35.799" endtime="20220801 01:27:38.902"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>tenantone</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220801 01:27:38.902" endtime="20220801 01:27:38.903"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220801 01:27:35.798" endtime="20220801 01:27:38.903"/>
</test>
<doc>Smoke test for ozone secure tenant commands</doc>
<status status="PASS" starttime="20220801 01:26:33.537" endtime="20220801 01:27:38.904"/>
</suite>
<suite id="s1-s2-s6" name="Ozone-Secure-Token" source="/opt/hadoop/smoketest/security/ozone-secure-token.robot">
<test id="s1-s2-s6-t1" name="Token Test" line="82">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Token Test in Unsecure Cluster</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220801 01:27:38.915" endtime="20220801 01:27:38.915"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Token Test in Secure Cluster</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Token Test in Secure Cluster">
<kw name="Get and use Token in Secure Cluster">
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:27:38.920" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:27:38.924" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:27:38.924" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220801 01:27:38.918" endtime="20220801 01:27:38.924"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:27:38.925" level="INFO">scm</msg>
<status status="PASS" starttime="20220801 01:27:38.924" endtime="20220801 01:27:38.925"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:27:38.925" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:27:38.925" endtime="20220801 01:27:38.925"/>
</kw>
<status status="PASS" starttime="20220801 01:27:38.918" endtime="20220801 01:27:38.926"/>
</kw>
<msg timestamp="20220801 01:27:38.926" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:27:38.917" endtime="20220801 01:27:38.926"/>
</kw>
<msg timestamp="20220801 01:27:38.927" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220801 01:27:38.917" endtime="20220801 01:27:38.927"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220801 01:27:38.928" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220801 01:27:38.927" endtime="20220801 01:27:38.928"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:27:38.932" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:27:38.939" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:27:38.939" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:27:38.930" endtime="20220801 01:27:38.939"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:27:38.940" level="INFO"/>
<status status="PASS" starttime="20220801 01:27:38.939" endtime="20220801 01:27:38.940"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:27:38.940" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:27:38.940" endtime="20220801 01:27:38.941"/>
</kw>
<status status="PASS" starttime="20220801 01:27:38.930" endtime="20220801 01:27:38.941"/>
</kw>
<msg timestamp="20220801 01:27:38.941" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:27:38.929" endtime="20220801 01:27:38.941"/>
</kw>
<status status="PASS" starttime="20220801 01:27:38.929" endtime="20220801 01:27:38.942"/>
</kw>
<status status="PASS" starttime="20220801 01:27:38.929" endtime="20220801 01:27:38.942"/>
</kw>
<status status="PASS" starttime="20220801 01:27:38.917" endtime="20220801 01:27:38.942"/>
</kw>
<status status="PASS" starttime="20220801 01:27:38.916" endtime="20220801 01:27:38.942"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh token get -t /tmp/ozone.token</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:27:38.945" level="INFO">Running command 'ozone sh token get -t /tmp/ozone.token 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:27:42.531" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:27:42.531" level="INFO">${output} = Successfully get token for service 172.18.0.2:9862
Kind: OzoneToken, Service: 172.18.0.2:9862, Ident: (OzoneToken owner=testuser/scm@EXAMPLE.COM, renewer=testuser, realUser=, issueDate=2022-08-01T01:2...</msg>
<status status="PASS" starttime="20220801 01:27:38.943" endtime="20220801 01:27:42.531"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:27:42.533" level="INFO">Successfully get token for service 172.18.0.2:9862
Kind: OzoneToken, Service: 172.18.0.2:9862, Ident: (OzoneToken owner=testuser/scm@EXAMPLE.COM, renewer=testuser, realUser=, issueDate=2022-08-01T01:27:42.380Z, maxDate=2022-08-08T01:27:42.380Z, sequenceNumber=1, masterKeyId=1, strToSign=null, signature=null, awsAccessKeyId=null, omServiceId=omServiceIdDefault)
Token persisted to /tmp/ozone.token successfully!</msg>
<status status="PASS" starttime="20220801 01:27:42.532" endtime="20220801 01:27:42.533"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:27:42.533" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:27:42.533" endtime="20220801 01:27:42.533"/>
</kw>
<status status="PASS" starttime="20220801 01:27:38.943" endtime="20220801 01:27:42.534"/>
</kw>
<msg timestamp="20220801 01:27:42.534" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:27:38.943" endtime="20220801 01:27:42.534"/>
</kw>
<status status="PASS" starttime="20220801 01:27:38.942" endtime="20220801 01:27:42.535"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>/tmp/ozone.token</arg>
<doc>Fails if the specified file is empty.</doc>
<msg timestamp="20220801 01:27:42.535" level="INFO" html="true">File '&lt;a href="file:///tmp/ozone.token"&gt;/tmp/ozone.token&lt;/a&gt;' contains 402 bytes.</msg>
<status status="PASS" starttime="20220801 01:27:42.535" endtime="20220801 01:27:42.535"/>
</kw>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:27:42.539" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:27:42.542" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:27:42.542" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:27:42.536" endtime="20220801 01:27:42.542"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:27:42.543" level="INFO"/>
<status status="PASS" starttime="20220801 01:27:42.542" endtime="20220801 01:27:42.543"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:27:42.544" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:27:42.543" endtime="20220801 01:27:42.544"/>
</kw>
<status status="PASS" starttime="20220801 01:27:42.536" endtime="20220801 01:27:42.544"/>
</kw>
<msg timestamp="20220801 01:27:42.544" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:27:42.536" endtime="20220801 01:27:42.544"/>
</kw>
<status status="PASS" starttime="20220801 01:27:42.535" endtime="20220801 01:27:42.545"/>
</kw>
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>HADOOP_TOKEN_FILE_LOCATION</arg>
<arg>/tmp/ozone.token</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20220801 01:27:42.545" level="INFO">Environment variable 'HADOOP_TOKEN_FILE_LOCATION' set to value '/tmp/ozone.token'.</msg>
<status status="PASS" starttime="20220801 01:27:42.545" endtime="20220801 01:27:42.545"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume list /</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:27:42.548" level="INFO">Running command 'ozone sh volume list / 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:27:46.387" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:27:46.387" level="INFO">${output} = [ ]</msg>
<status status="PASS" starttime="20220801 01:27:42.547" endtime="20220801 01:27:46.387"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:27:46.388" level="INFO">[ ]</msg>
<status status="PASS" starttime="20220801 01:27:46.387" endtime="20220801 01:27:46.388"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:27:46.389" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:27:46.388" endtime="20220801 01:27:46.389"/>
</kw>
<status status="PASS" starttime="20220801 01:27:42.546" endtime="20220801 01:27:46.389"/>
</kw>
<msg timestamp="20220801 01:27:46.389" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:27:42.546" endtime="20220801 01:27:46.390"/>
</kw>
<msg timestamp="20220801 01:27:46.390" level="INFO">${output} = [ ]</msg>
<status status="PASS" starttime="20220801 01:27:42.545" endtime="20220801 01:27:46.390"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Client cannot authenticate</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220801 01:27:46.390" endtime="20220801 01:27:46.390"/>
</kw>
<kw name="Remove Environment Variable" library="OperatingSystem">
<arg>HADOOP_TOKEN_FILE_LOCATION</arg>
<doc>Deletes the specified environment variable.</doc>
<msg timestamp="20220801 01:27:46.391" level="INFO">Environment variable 'HADOOP_TOKEN_FILE_LOCATION' deleted.</msg>
<status status="PASS" starttime="20220801 01:27:46.391" endtime="20220801 01:27:46.391"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${output}</var>
<arg>ozone sh volume list /</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:27:46.394" level="INFO">Running command 'ozone sh volume list / 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:27:49.338" level="INFO">${rc} = 255</msg>
<msg timestamp="20220801 01:27:49.338" level="INFO">${output} = org.apache.hadoop.security.AccessControlException: Client cannot authenticate via:[TOKEN, KERBEROS]</msg>
<status status="PASS" starttime="20220801 01:27:46.392" endtime="20220801 01:27:49.338"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:27:49.339" level="INFO">org.apache.hadoop.security.AccessControlException: Client cannot authenticate via:[TOKEN, KERBEROS]</msg>
<status status="PASS" starttime="20220801 01:27:49.338" endtime="20220801 01:27:49.339"/>
</kw>
<msg timestamp="20220801 01:27:49.339" level="INFO">${output} = org.apache.hadoop.security.AccessControlException: Client cannot authenticate via:[TOKEN, KERBEROS]</msg>
<status status="PASS" starttime="20220801 01:27:46.391" endtime="20220801 01:27:49.339"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Client cannot authenticate</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220801 01:27:49.339" endtime="20220801 01:27:49.340"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:27:49.344" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:27:49.347" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:27:49.347" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220801 01:27:49.342" endtime="20220801 01:27:49.347"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:27:49.348" level="INFO">scm</msg>
<status status="PASS" starttime="20220801 01:27:49.348" endtime="20220801 01:27:49.348"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:27:49.349" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:27:49.348" endtime="20220801 01:27:49.349"/>
</kw>
<status status="PASS" starttime="20220801 01:27:49.342" endtime="20220801 01:27:49.349"/>
</kw>
<msg timestamp="20220801 01:27:49.349" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:27:49.342" endtime="20220801 01:27:49.350"/>
</kw>
<msg timestamp="20220801 01:27:49.350" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220801 01:27:49.341" endtime="20220801 01:27:49.350"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220801 01:27:49.351" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220801 01:27:49.350" endtime="20220801 01:27:49.351"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:27:49.355" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:27:49.361" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:27:49.361" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:27:49.353" endtime="20220801 01:27:49.361"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:27:49.362" level="INFO"/>
<status status="PASS" starttime="20220801 01:27:49.362" endtime="20220801 01:27:49.362"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:27:49.363" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:27:49.362" endtime="20220801 01:27:49.363"/>
</kw>
<status status="PASS" starttime="20220801 01:27:49.352" endtime="20220801 01:27:49.363"/>
</kw>
<msg timestamp="20220801 01:27:49.363" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:27:49.352" endtime="20220801 01:27:49.364"/>
</kw>
<status status="PASS" starttime="20220801 01:27:49.352" endtime="20220801 01:27:49.364"/>
</kw>
<status status="PASS" starttime="20220801 01:27:49.351" endtime="20220801 01:27:49.364"/>
</kw>
<status status="PASS" starttime="20220801 01:27:49.340" endtime="20220801 01:27:49.364"/>
</kw>
<status status="PASS" starttime="20220801 01:27:49.340" endtime="20220801 01:27:49.364"/>
</kw>
<status status="PASS" starttime="20220801 01:27:38.916" endtime="20220801 01:27:49.364"/>
</kw>
<kw name="Print Valid Token File">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh token print</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:27:49.368" level="INFO">Running command 'ozone sh token print 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:27:51.470" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:27:51.470" level="INFO">${output} = Kind: OzoneToken, Service: 172.18.0.2:9862, Ident: (OzoneToken owner=testuser/scm@EXAMPLE.COM, renewer=testuser, realUser=, issueDate=2022-08-01T01:27:42.380Z, maxDate=2022-08-08T01:27:42.380Z, sequen...</msg>
<status status="PASS" starttime="20220801 01:27:49.366" endtime="20220801 01:27:51.471"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:27:51.472" level="INFO">Kind: OzoneToken, Service: 172.18.0.2:9862, Ident: (OzoneToken owner=testuser/scm@EXAMPLE.COM, renewer=testuser, realUser=, issueDate=2022-08-01T01:27:42.380Z, maxDate=2022-08-08T01:27:42.380Z, sequenceNumber=1, masterKeyId=1, strToSign=null, signature=null, awsAccessKeyId=null, omServiceId=omServiceIdDefault)</msg>
<status status="PASS" starttime="20220801 01:27:51.471" endtime="20220801 01:27:51.472"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:27:51.473" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:27:51.472" endtime="20220801 01:27:51.473"/>
</kw>
<status status="PASS" starttime="20220801 01:27:49.366" endtime="20220801 01:27:51.473"/>
</kw>
<msg timestamp="20220801 01:27:51.473" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:27:49.365" endtime="20220801 01:27:51.474"/>
</kw>
<msg timestamp="20220801 01:27:51.474" level="INFO">${output} = Kind: OzoneToken, Service: 172.18.0.2:9862, Ident: (OzoneToken owner=testuser/scm@EXAMPLE.COM, renewer=testuser, realUser=, issueDate=2022-08-01T01:27:42.380Z, maxDate=2022-08-08T01:27:42.380Z, sequen...</msg>
<status status="PASS" starttime="20220801 01:27:49.365" endtime="20220801 01:27:51.474"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${output}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220801 01:27:51.474" level="INFO">Length is 311</msg>
<status status="PASS" starttime="20220801 01:27:51.474" endtime="20220801 01:27:51.474"/>
</kw>
<status status="PASS" starttime="20220801 01:27:49.365" endtime="20220801 01:27:51.475"/>
</kw>
<kw name="Renew Token in Secure Cluster">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh token renew</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:27:51.479" level="INFO">Running command 'ozone sh token renew 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:27:55.071" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:27:55.071" level="INFO">${output} = Token renewed successfully, expiry time: 2022-08-02T01:27:54.842Z.</msg>
<status status="PASS" starttime="20220801 01:27:51.477" endtime="20220801 01:27:55.071"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:27:55.072" level="INFO">Token renewed successfully, expiry time: 2022-08-02T01:27:54.842Z.</msg>
<status status="PASS" starttime="20220801 01:27:55.071" endtime="20220801 01:27:55.072"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:27:55.073" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:27:55.072" endtime="20220801 01:27:55.073"/>
</kw>
<status status="PASS" starttime="20220801 01:27:51.476" endtime="20220801 01:27:55.073"/>
</kw>
<msg timestamp="20220801 01:27:55.073" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:27:51.475" endtime="20220801 01:27:55.074"/>
</kw>
<msg timestamp="20220801 01:27:55.074" level="INFO">${output} = Token renewed successfully, expiry time: 2022-08-02T01:27:54.842Z.</msg>
<status status="PASS" starttime="20220801 01:27:51.475" endtime="20220801 01:27:55.074"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Token renewed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220801 01:27:55.074" endtime="20220801 01:27:55.074"/>
</kw>
<status status="PASS" starttime="20220801 01:27:51.475" endtime="20220801 01:27:55.075"/>
</kw>
<kw name="Cancel Token in Secure Cluster">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh token cancel</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:27:55.082" level="INFO">Running command 'ozone sh token cancel 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:27:58.813" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:27:58.813" level="INFO">${output} = Token canceled successfully.</msg>
<status status="PASS" starttime="20220801 01:27:55.080" endtime="20220801 01:27:58.813"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:27:58.814" level="INFO">Token canceled successfully.</msg>
<status status="PASS" starttime="20220801 01:27:58.814" endtime="20220801 01:27:58.814"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:27:58.815" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:27:58.815" endtime="20220801 01:27:58.815"/>
</kw>
<status status="PASS" starttime="20220801 01:27:55.076" endtime="20220801 01:27:58.816"/>
</kw>
<msg timestamp="20220801 01:27:58.816" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:27:55.075" endtime="20220801 01:27:58.816"/>
</kw>
<msg timestamp="20220801 01:27:58.817" level="INFO">${output} = Token canceled successfully.</msg>
<status status="PASS" starttime="20220801 01:27:55.075" endtime="20220801 01:27:58.817"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Token canceled successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220801 01:27:58.817" endtime="20220801 01:27:58.817"/>
</kw>
<status status="PASS" starttime="20220801 01:27:55.075" endtime="20220801 01:27:58.817"/>
</kw>
<status status="PASS" starttime="20220801 01:27:38.916" endtime="20220801 01:27:58.817"/>
</kw>
<status status="PASS" starttime="20220801 01:27:38.915" endtime="20220801 01:27:58.817"/>
</kw>
<kw name="Print Nonexistent Token File">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh token print -t /asdf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:27:58.821" level="INFO">Running command 'ozone sh token print -t /asdf 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:28:00.950" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:28:00.950" level="INFO">${output} = Error: token operation failed as token file: /asdf containing encoded token doesn't exist.</msg>
<status status="PASS" starttime="20220801 01:27:58.819" endtime="20220801 01:28:00.950"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:28:00.951" level="INFO">Error: token operation failed as token file: /asdf containing encoded token doesn't exist.</msg>
<status status="PASS" starttime="20220801 01:28:00.951" endtime="20220801 01:28:00.951"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:28:00.952" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:28:00.951" endtime="20220801 01:28:00.952"/>
</kw>
<status status="PASS" starttime="20220801 01:27:58.819" endtime="20220801 01:28:00.952"/>
</kw>
<msg timestamp="20220801 01:28:00.952" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:27:58.818" endtime="20220801 01:28:00.953"/>
</kw>
<msg timestamp="20220801 01:28:00.953" level="INFO">${output} = Error: token operation failed as token file: /asdf containing encoded token doesn't exist.</msg>
<status status="PASS" starttime="20220801 01:27:58.818" endtime="20220801 01:28:00.953"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>operation failed as token file: /asdf</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220801 01:28:00.953" endtime="20220801 01:28:00.954"/>
</kw>
<status status="PASS" starttime="20220801 01:27:58.818" endtime="20220801 01:28:00.954"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220801 01:27:38.914" endtime="20220801 01:28:00.954"/>
</test>
<doc>Test token operations</doc>
<status status="PASS" starttime="20220801 01:27:38.908" endtime="20220801 01:28:00.955"/>
</suite>
<status status="FAIL" starttime="20220801 01:22:26.008" endtime="20220801 01:28:00.958"/>
</suite>
<suite id="s1-s3" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s3-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:05:24.743" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:05:24.747" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:05:24.747" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220801 01:05:24.740" endtime="20220801 01:05:24.747"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:05:24.748" level="INFO">scm</msg>
<status status="PASS" starttime="20220801 01:05:24.747" endtime="20220801 01:05:24.748"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:05:24.748" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:05:24.748" endtime="20220801 01:05:24.748"/>
</kw>
<status status="PASS" starttime="20220801 01:05:24.740" endtime="20220801 01:05:24.749"/>
</kw>
<msg timestamp="20220801 01:05:24.749" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:05:24.740" endtime="20220801 01:05:24.750"/>
</kw>
<msg timestamp="20220801 01:05:24.750" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220801 01:05:24.739" endtime="20220801 01:05:24.750"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220801 01:05:24.751" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220801 01:05:24.750" endtime="20220801 01:05:24.751"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220801 01:05:24.754" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220801 01:05:24.761" level="INFO">${rc} = 0</msg>
<msg timestamp="20220801 01:05:24.761" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220801 01:05:24.753" endtime="20220801 01:05:24.761"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220801 01:05:24.762" level="INFO"/>
<status status="PASS" starttime="20220801 01:05:24.761" endtime="20220801 01:05:24.762"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220801 01:05:24.762" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220801 01:05:24.762" endtime="20220801 01:05:24.762"/>
</kw>
<status status="PASS" starttime="20220801 01:05:24.752" endtime="20220801 01:05:24.763"/>
</kw>
<msg timestamp="20220801 01:05:24.763" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220801 01:05:24.752" endtime="20220801 01:05:24.763"/>
</kw>
<status status="PASS" starttime="20220801 01:05:24.751" endtime="20220801 01:05:24.763"/>
</kw>
<status status="PASS" starttime="20220801 01:05:24.751" endtime="20220801 01:05:24.763"/>
</kw>
<status status="PASS" starttime="20220801 01:05:24.739" endtime="20220801 01:05:24.764"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220801 01:05:24.738" endtime="20220801 01:05:24.764"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20220801 01:05:24.695" endtime="20220801 01:05:24.765"/>
</suite>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="1345734"/>
</suite>
<statistics>
<total>
<stat pass="73" fail="2" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="73" fail="2" skip="0" id="s1" name="ozonesecure">ozonesecure</stat>
<stat pass="31" fail="0" skip="0" id="s1-s1" name="Basic">ozonesecure.Basic</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1-s1" name="Basic">ozonesecure.Basic.Basic</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s2" name="Getconf">ozonesecure.Basic.Getconf</stat>
<stat pass="16" fail="0" skip="0" id="s1-s1-s3" name="Links">ozonesecure.Basic.Links</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s4" name="Ozone-Shell-Single">ozonesecure.Basic.Ozone-Shell-Single</stat>
<stat pass="7" fail="0" skip="0" id="s1-s1-s5" name="Ozone-Shell">ozonesecure.Basic.Ozone-Shell</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s6" name="Single Node">ozonesecure.Basic.Single Node</stat>
<stat pass="41" fail="2" skip="0" id="s1-s2" name="Security">ozonesecure.Security</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2-s1" name="Admin-Cert">ozonesecure.Security.Admin-Cert</stat>
<stat pass="2" fail="0" skip="0" id="s1-s2-s2" name="Bucket-Encryption">ozonesecure.Security.Bucket-Encryption</stat>
<stat pass="9" fail="0" skip="0" id="s1-s2-s3" name="Ozone-Secure-Fs">ozonesecure.Security.Ozone-Secure-Fs</stat>
<stat pass="1" fail="2" skip="0" id="s1-s2-s4" name="Ozone-Secure-S3">ozonesecure.Security.Ozone-Secure-S3</stat>
<stat pass="25" fail="0" skip="0" id="s1-s2-s5" name="Ozone-Secure-Tenant">ozonesecure.Security.Ozone-Secure-Tenant</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s6" name="Ozone-Secure-Token">ozonesecure.Security.Ozone-Secure-Token</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3" name="Kinit">ozonesecure.Kinit</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
